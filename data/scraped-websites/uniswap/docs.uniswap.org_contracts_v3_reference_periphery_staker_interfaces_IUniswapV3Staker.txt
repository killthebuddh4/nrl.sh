








IUniswapV3Staker | Uniswap





Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerUniswap V3 Staker DesignUniswap V3 Staker ContractInterfacesIUniswapV3StakerLibrariesTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryStakerInterfacesIUniswapV3StakerHelpful?On this pageIUniswapV3StakerAllows staking nonfungible liquidity tokens in exchange for reward tokensFunctions‚Äãfactory‚Äã  function factory(  ) external view returns (contract IUniswapV3Factory)CopyThe Uniswap V3 FactorynonfungiblePositionManager‚Äã  function nonfungiblePositionManager(  ) external view returns (contract INonfungiblePositionManager)CopyThe nonfungible position manager with which this staking contract is compatiblemaxIncentiveDuration‚Äã  function maxIncentiveDuration(  ) external view returns (uint256)CopyThe max duration of an incentive in secondsmaxIncentiveStartLeadTime‚Äã  function maxIncentiveStartLeadTime(  ) external view returns (uint256)CopyThe max amount of seconds into the future the incentive startTime can be setincentives‚Äã  function incentives(    bytes32 incentiveId  ) external view returns (uint256 totalRewardUnclaimed, uint160 totalSecondsClaimedX128, uint96 numberOfStakes)CopyRepresents a staking incentiveParameters:‚ÄãNameTypeDescriptionincentiveIdbytes32The ID of the incentive computed from its parametersReturn Values:‚ÄãNameTypeDescriptiontotalRewardUnclaimeduint256The amount of reward token not yet claimed by userstotalSecondsClaimedX128uint160Total liquidity-seconds claimed, represented as a UQ32.128numberOfStakesuint96The count of deposits that are currently staked for the incentivedeposits‚Äã  function deposits(  ) external view returns (address owner, uint48 numberOfStakes, int24 tickLower, int24 tickUpper)CopyReturns information about a deposited NFTReturn Values:‚ÄãNameTypeDescriptionowneraddressThe owner of the deposited NFTnumberOfStakesuint48Counter of how many incentives for which the liquidity is stakedtickLowerint24The lower tick of the rangetickUpperint24The upper tick of the rangestakes‚Äã  function stakes(    uint256 tokenId,    bytes32 incentiveId  ) external view returns (uint160 secondsPerLiquidityInsideInitialX128, uint128 liquidity)CopyReturns information about a staked liquidity NFTParameters:‚ÄãNameTypeDescriptiontokenIduint256The ID of the staked tokenincentiveIdbytes32The ID of the incentive for which the token is stakedReturn Values:‚ÄãNameTypeDescriptionsecondsPerLiquidityInsideInitialX128uint160secondsPerLiquidity represented as a UQ32.128liquidityuint128The amount of liquidity in the NFT as of the last time the rewards were computedrewards‚Äã  function rewards(    contract IERC20Minimal rewardToken,    address owner  ) external view returns (uint256 rewardsOwed)CopyReturns amounts of reward tokens owed to a given address according to the last time all stakes were updatedParameters:‚ÄãNameTypeDescriptionrewardTokencontract IERC20MinimalThe token for which to check rewardsowneraddressThe owner for which the rewards owed are checkedReturn Values:‚ÄãNameTypeDescriptionrewardsOweduint256The amount of the reward token claimable by the ownercreateIncentive‚Äã  function createIncentive(    struct IUniswapV3Staker.IncentiveKey key,    uint256 reward  ) externalCopyCreates a new liquidity mining incentive programParameters:‚ÄãNameTypeDescriptionkeystruct IUniswapV3Staker.IncentiveKeyDetails of the incentive to createrewarduint256The amount of reward tokens to be distributedendIncentive‚Äã  function endIncentive(    struct IUniswapV3Staker.IncentiveKey key  ) external returns (uint256 refund)CopyEnds an incentive after the incentive end time has passed and all stakes have been withdrawnParameters:‚ÄãNameTypeDescriptionkeystruct IUniswapV3Staker.IncentiveKeyDetails of the incentive to endReturn Values:‚ÄãNameTypeDescriptionrefunduint256The remaining reward tokens when the incentive is endedtransferDeposit‚Äã  function transferDeposit(    uint256 tokenId,    address to  ) externalCopyTransfers ownership of a deposit from the sender to the given recipientParameters:‚ÄãNameTypeDescriptiontokenIduint256The ID of the token (and the deposit) to transfertoaddressThe new owner of the depositwithdrawToken‚Äã  function withdrawToken(    uint256 tokenId,    address to,    bytes data  ) externalCopyWithdraws a Uniswap V3 LP token tokenId from this contract to the recipient toParameters:‚ÄãNameTypeDescriptiontokenIduint256The unique identifier of an Uniswap V3 LP tokentoaddressThe address where the LP token will be sentdatabytesAn optional data array that will be passed along to the to address via the NFT safeTransferFromstakeToken‚Äã  function stakeToken(    struct IUniswapV3Staker.IncentiveKey key,    uint256 tokenId  ) externalCopyStakes a Uniswap V3 LP tokenParameters:‚ÄãNameTypeDescriptionkeystruct IUniswapV3Staker.IncentiveKeyThe key of the incentive for which to stake the NFTtokenIduint256The ID of the token to stakeunstakeToken‚Äã  function unstakeToken(    struct IUniswapV3Staker.IncentiveKey key,    uint256 tokenId  ) externalCopyUnstakes a Uniswap V3 LP tokenParameters:‚ÄãNameTypeDescriptionkeystruct IUniswapV3Staker.IncentiveKeyThe key of the incentive for which to unstake the NFTtokenIduint256The ID of the token to unstakeclaimReward‚Äã  function claimReward(    contract IERC20Minimal rewardToken,    address to,    uint256 amountRequested  ) external returns (uint256 reward)CopyTransfers amountRequested of accrued rewardToken rewards from the contract to the recipient toParameters:‚ÄãNameTypeDescriptionrewardTokencontract IERC20MinimalThe token being distributed as a rewardtoaddressThe address where claimed rewards will be sent toamountRequesteduint256The amount of reward tokens to claim. Claims entire reward amount if set to 0.Return Values:‚ÄãNameTypeDescriptionrewarduint256The amount of reward tokens claimedgetRewardInfo‚Äã  function getRewardInfo(    struct IUniswapV3Staker.IncentiveKey key,    uint256 tokenId  ) external returns (uint256 reward, uint160 secondsInsideX128)CopyCalculates the reward amount that will be received for the given stakeParameters:‚ÄãNameTypeDescriptionkeystruct IUniswapV3Staker.IncentiveKeyThe key of the incentivetokenIduint256The ID of the tokenReturn Values:‚ÄãNameTypeDescriptionrewarduint256The reward accrued to the NFT for the given incentive thus farsecondsInsideX128uint160The seconds inside the tick rangeEvents‚ÄãIncentiveCreated‚Äã  event IncentiveCreated(    contract IERC20Minimal rewardToken,    contract IUniswapV3Pool pool,    uint256 startTime,    uint256 endTime,    address refundee,    uint256 reward  )CopyEvent emitted when a liquidity mining incentive has been createdParameters:‚ÄãNameTypeDescriptionrewardTokencontract IERC20MinimalThe token being distributed as a rewardpoolcontract IUniswapV3PoolThe Uniswap V3 poolstartTimeuint256The time when the incentive program beginsendTimeuint256The time when rewards stop accruingrefundeeaddressThe address which receives any remaining reward tokens after the end timerewarduint256The amount of reward tokens to be distributedIncentiveEnded‚Äã  event IncentiveEnded(    bytes32 incentiveId,    uint256 refund  )CopyEvent that can be emitted when a liquidity mining incentive has endedParameters:‚ÄãNameTypeDescriptionincentiveIdbytes32The incentive which is endingrefunduint256The amount of reward tokens refundedDepositTransferred‚Äã  event DepositTransferred(    uint256 tokenId,    address oldOwner,    address newOwner  )CopyEmitted when ownership of a deposit changesParameters:‚ÄãNameTypeDescriptiontokenIduint256The ID of the deposit (and token) that is being transferredoldOwneraddressThe owner before the deposit was transferrednewOwneraddressThe owner after the deposit was transferredTokenStaked‚Äã  event TokenStaked(    uint256 tokenId,    bytes32 liquidity,    uint128 incentiveId  )CopyEvent emitted when a Uniswap V3 LP token has been stakedParameters:‚ÄãNameTypeDescriptiontokenIduint256The unique identifier of an Uniswap V3 LP tokenliquiditybytes32The amount of liquidity stakedincentiveIduint128The incentive in which the token is stakingTokenUnstaked‚Äã  event TokenUnstaked(    uint256 tokenId,    bytes32 incentiveId  )CopyEvent emitted when a Uniswap V3 LP token has been unstakedParameters:‚ÄãNameTypeDescriptiontokenIduint256The unique identifier of an Uniswap V3 LP tokenincentiveIdbytes32The incentive in which the token is stakingRewardClaimed‚Äã  event RewardClaimed(    address to,    uint256 reward  )CopyEvent emitted when a reward token has been claimedParameters:‚ÄãNameTypeDescriptiontoaddressThe address where claimed rewards were sent torewarduint256The amount of reward tokens claimedEdit this pageHelpful?PreviousUniswap V3 Staker ContractNextIncentiveIdFunctionsfactorynonfungiblePositionManagermaxIncentiveDurationmaxIncentiveStartLeadTimeincentivesdepositsstakesrewardscreateIncentiveendIncentivetransferDepositwithdrawTokenstakeTokenunstakeTokenclaimRewardgetRewardInfoEventsIncentiveCreatedIncentiveEndedDepositTransferredTokenStakedTokenUnstakedRewardClaimedDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog



