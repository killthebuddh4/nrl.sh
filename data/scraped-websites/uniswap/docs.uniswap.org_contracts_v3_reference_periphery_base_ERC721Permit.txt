








ERC721Permit | Uniswap





Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseBlockTimestampERC721PermitLiquidityManagementMulticallPeripheryImmutableStatePeripheryPaymentsPeripheryPaymentsWithFeePoolInitializerSelfPermitInterfacesLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryBaseERC721PermitHelpful?On this pageERC721PermitNonfungible tokens that support an approve via signature, i.e. permitFunctions‚Äã_getAndIncrementNonce‚Äã  function _getAndIncrementNonce(    uint256 tokenId  ) internal virtual returns (uint256)CopyGets the current nonce for a token ID and then increments it, returning the original valueconstructor‚Äã  function constructor(    string memory name_,    string memory symbol_,    string memory version_  ) internalCopyComputes the nameHash and versionHashDOMAIN_SEPARATOR‚Äã  function DOMAIN_SEPARATOR(  ) public view override returns (bytes32)CopyThe domain separator used in the permit signatureReturn Values:‚ÄãTypeDescriptionbytes32domain seperator used in encoding of permit signaturepermit‚Äã  function permit(    address spender,    uint256 tokenId,    uint256 deadline,    uint8 v,    bytes32 r,    bytes32 s  ) externalCopyApprove of a specific token ID for spending by spender via signatureParameters:‚ÄãNameTypeDescriptionspenderaddressThe account that is being approvedtokenIduint256The ID of the token that is being approved for spendingdeadlineuint256The deadline timestamp by which the call must be mined for the approve to workvuint8Must produce valid secp256k1 signature from the holder along with r and srbytes32Must produce valid secp256k1 signature from the holder along with v and ssbytes32Must produce valid secp256k1 signature from the holder along with r and vEdit this pageHelpful?PreviousBlockTimestampNextLiquidityManagementFunctions_getAndIncrementNonceconstructorDOMAIN_SEPARATORpermitDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog



