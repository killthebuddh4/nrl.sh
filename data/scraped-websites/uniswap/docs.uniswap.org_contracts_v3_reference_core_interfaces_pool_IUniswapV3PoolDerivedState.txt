








IUniswapV3PoolDerivedState | Uniswap





Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesIERC20MinimalIUniswapV3FactoryIUniswapV3PoolIUniswapV3PoolDeployercallbackPoolIUniswapV3PoolActionsIUniswapV3PoolDerivedStateIUniswapV3PoolEventsIUniswapV3PoolImmutablesIUniswapV3PoolOwnerActionsIUniswapV3PoolStateLibrariesGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreInterfacesPoolIUniswapV3PoolDerivedStateHelpful?On this pageIUniswapV3PoolDerivedStateContains view functions to provide information about the pool that is computed rather than stored on the
blockchain. The functions here may have variable gas costs.Functions‚Äãobserve‚Äã  function observe(    uint32[] secondsAgos  ) external view returns (int56[] tickCumulatives, uint160[] secondsPerLiquidityCumulativeX128s)CopyReturns the cumulative tick and liquidity as of each timestamp secondsAgo from the current block timestampTo get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing
the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,
you must call it with secondsAgos = [3600, 0].
The time weighted average tick represents the geometric time weighted average price of the pool, in
log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.Parameters:‚ÄãNameTypeDescriptionsecondsAgosuint32[]From how long ago each cumulative tick and liquidity value should be returnedReturn Values:‚ÄãNameTypeDescriptiontickCumulativesint56[]Cumulative tick values as of each secondsAgos from the current block timestampsecondsPerLiquidityCumulativeX128suint160[]Cumulative seconds per liquidity-in-range value as of each secondsAgos from the current blocktimestampsnapshotCumulativesInside‚Äã  function snapshotCumulativesInside(    int24 tickLower,    int24 tickUpper  ) external returns (int56 tickCumulativeInside, uint160 secondsPerLiquidityInsideX128, uint32 secondsInside)CopyReturns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick rangeSnapshots must only be compared to other snapshots, taken over a period for which a position existed.
I.e., snapshots cannot be compared if a position is not held for the entire period between when the first
snapshot is taken and the second snapshot is taken.Parameters:‚ÄãNameTypeDescriptiontickLowerint24The lower tick of the rangetickUpperint24The upper tick of the rangeReturn Values:‚ÄãNameTypeDescriptiontickCumulativeInsideint56The snapshot of the tick accumulator for the rangesecondsPerLiquidityInsideX128uint160The snapshot of seconds per liquidity for the rangesecondsInsideuint32The snapshot of seconds per liquidity for the rangeEdit this pageHelpful?PreviousIUniswapV3PoolActionsNextIUniswapV3PoolEventsFunctionsobservesnapshotCumulativesInsideDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog



