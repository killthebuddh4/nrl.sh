








INonfungiblePositionManager | Uniswap





Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesIERC20MetadataIERC721PermitIMulticallINonfungiblePositionManagerINonfungibleTokenPositionDescriptorIPeripheryImmutableStateIPeripheryPaymentsIPeripheryPaymentsWithFeeIPoolInitializerIQuoterIQuoterV2ISelfPermitISwapRouterITickLensIV3MigratorexternalLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryInterfacesINonfungiblePositionManagerHelpful?On this pageINonfungiblePositionManagerWraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred
and authorized.Parameter Structs‚ÄãMintParams‚Äã  struct MintParams {        address token0;        address token1;        uint24 fee;        int24 tickLower;        int24 tickUpper;        uint256 amount0Desired;        uint256 amount1Desired;        uint256 amount0Min;        uint256 amount1Min;        address recipient;        uint256 deadline;    }CopyIncreaseLiquidityParams‚Äã   struct IncreaseLiquidityParams {        uint256 tokenId;        uint256 amount0Desired;        uint256 amount1Desired;        uint256 amount0Min;        uint256 amount1Min;        uint256 deadline;    }CopyDecreaseLiquidityParams‚Äã    struct DecreaseLiquidityParams {        uint256 tokenId;        uint128 liquidity;        uint256 amount0Min;        uint256 amount1Min;        uint256 deadline;    }CopyCollectParams‚Äã    struct CollectParams {        uint256 tokenId;        address recipient;        uint128 amount0Max;        uint128 amount1Max;    }CopyFunctions‚Äãpositions‚Äã  function positions(    uint256 tokenId  ) external view returns (uint96 nonce, address operator, address token0, address token1, uint24 fee, int24 tickLower, int24 tickUpper, uint128 liquidity, uint256 feeGrowthInside0LastX128, uint256 feeGrowthInside1LastX128, uint128 tokensOwed0, uint128 tokensOwed1)CopyReturns the position information associated with a given token ID.Throws if the token ID is not valid.Parameters:‚ÄãNameTypeDescriptiontokenIduint256The ID of the token that represents the positionReturn Values:‚ÄãNameTypeDescriptionnonceuint96The nonce for permitsoperatoraddressThe address that is approved for spendingtoken0addressThe address of the token0 for a specific pooltoken1addressThe address of the token1 for a specific poolfeeuint24The fee associated with the pooltickLowerint24The lower end of the tick range for the positiontickUpperint24The higher end of the tick range for the positionliquidityuint128The liquidity of the positionfeeGrowthInside0LastX128uint256The fee growth of token0 as of the last action on the individual positionfeeGrowthInside1LastX128uint256The fee growth of token1 as of the last action on the individual positiontokensOwed0uint128The uncollected amount of token0 owed to the position as of the last computationtokensOwed1uint128The uncollected amount of token1 owed to the position as of the last computationcreateAndInitializePoolIfNecessary‚Äã  function createAndInitializePoolIfNecessary(    address tokenA,    address tokenB,    uint24 fee,    uint160 sqrtPriceX96  ) external returns (address pool)CopyCreates a new pool if it does not exist, then initializes if not initializedThis method can be bundled with mint for the first mint of a pool to create, initialize a pool and mint at the same timeParameters:‚ÄãNameTypeDescriptiontokenAaddressThe contract address of either token0 or token1tokenBaddressThe contract address of the other tokenfeeuint24The fee amount of the v3 pool for the specified token pairsqrtPriceX96uint160The initial square root price of the pool as a Q64.96 valueWe use tokenA and tokenB when we are referring to unsorted, or unordered tokensReturn Values:‚ÄãNameTypeDescriptionpooladdressReturns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessarymint‚Äã  function mint(    struct INonfungiblePositionManager.MintParams params  ) external returns (uint256 tokenId, uint128 liquidity, uint256 amount0, uint256 amount1)CopyCreates a new position wrapped in a NFTCall this when the pool does exist and is initialized. Note that if the pool is created but not initialized
a method does not exist, i.e. the pool is assumed to be initialized.Parameters:‚ÄãNameTypeDescriptionparamsstruct INonfungiblePositionManager.MintParamsThe params necessary to mint a position, encoded as MintParams in calldataReturn Values:‚ÄãNameTypeDescriptiontokenIduint256The ID of the token that represents the minted positionliquidityuint128The amount of liquidity for this positionamount0uint256The amount of token0amount1uint256The amount of token1increaseLiquidity‚Äã  function increaseLiquidity(    struct INonfungiblePositionManager.IncreaseLiquidityParams params  ) external returns (uint128 liquidity, uint256 amount0, uint256 amount1)CopyIncreases the amount of liquidity in a position, with tokens paid by the msg.senderParameters:‚ÄãNameTypeDescriptionparamsstruct INonfungiblePositionManager.IncreaseLiquidityParamstokenId The ID of the token for which liquidity is being increased,Return Values:‚ÄãNameTypeDescriptionliquidityuint128The new liquidity amount as a result of the increaseamount0uint256The amount of token0 to acheive resulting liquidityamount1uint256The amount of token1 to acheive resulting liquiditydecreaseLiquidity‚Äã  function decreaseLiquidity(    struct INonfungiblePositionManager.DecreaseLiquidityParams params  ) external returns (uint256 amount0, uint256 amount1)CopyDecreases the amount of liquidity in a position and accounts it to the positionParameters:‚ÄãNameTypeDescriptionparamsstruct INonfungiblePositionManager.DecreaseLiquidityParamstokenId The ID of the token for which liquidity is being decreasedReturn Values:‚ÄãNameTypeDescriptionamount0uint256The amount of token0 sent to recipientamount1uint256The amount of token1 sent to recipientcollect‚Äã  function collect(    struct INonfungiblePositionManager.CollectParams params  ) external returns (uint256 amount0, uint256 amount1)CopyCollects up to a maximum amount of fees owed to a specific position to the recipientParameters:‚ÄãNameTypeDescriptionparamsstruct INonfungiblePositionManager.CollectParamstokenId The ID of the NFT for which tokens are being collected,Return Values:‚ÄãNameTypeDescriptionamount0uint256The amount of fees collected in token0amount1uint256The amount of fees collected in token1burn‚Äã  function burn(    uint256 tokenId  ) externalCopyBurns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens
must be collected first.Parameters:‚ÄãNameTypeDescriptiontokenIduint256The ID of the token that is being burnedEvents‚ÄãIncreaseLiquidity‚Äã  event IncreaseLiquidity(    uint256 tokenId,    uint128 liquidity,    uint256 amount0,    uint256 amount1  )CopyEmitted when liquidity is increased for a position NFTAlso emitted when a token is mintedParameters:‚ÄãNameTypeDescriptiontokenIduint256The ID of the token for which liquidity was increasedliquidityuint128The amount by which liquidity for the NFT position was increasedamount0uint256The amount of token0 that was paid for the increase in liquidityamount1uint256The amount of token1 that was paid for the increase in liquidityDecreaseLiquidity‚Äã  event DecreaseLiquidity(    uint256 tokenId,    uint128 liquidity,    uint256 amount0,    uint256 amount1  )CopyEmitted when liquidity is decreased for a position NFTParameters:‚ÄãNameTypeDescriptiontokenIduint256The ID of the token for which liquidity was decreasedliquidityuint128The amount by which liquidity for the NFT position was decreasedamount0uint256The amount of token0 that was accounted for the decrease in liquidityamount1uint256The amount of token1 that was accounted for the decrease in liquidityCollect‚Äã  event Collect(    uint256 tokenId,    address recipient,    uint256 amount0,    uint256 amount1  )CopyEmitted when tokens are collected for a position NFTThe amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behaviorParameters:‚ÄãNameTypeDescriptiontokenIduint256The ID of the token for which underlying tokens were collectedrecipientaddressThe address of the account that received the collected tokensamount0uint256The amount of token0 owed to the position that was collectedamount1uint256The amount of token1 owed to the position that was collectedEdit this pageHelpful?PreviousIMulticallNextINonfungibleTokenPositionDescriptorParameter StructsMintParamsIncreaseLiquidityParamsDecreaseLiquidityParamsCollectParamsFunctionspositionscreateAndInitializePoolIfNecessarymintincreaseLiquiditydecreaseLiquiditycollectburnEventsIncreaseLiquidityDecreaseLiquidityCollectDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog



