








Uniswap V3 Staker Contract | Uniswap





Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerUniswap V3 Staker DesignUniswap V3 Staker ContractInterfacesLibrariesTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocol🏠V3 ProtocolTechnical ReferencePeripheryStakerUniswap V3 Staker ContractHelpful?On this pageUniswap V3 Staker ContractBelow is the technical reference for the staker contract, UniswapV3Staker.sol. A technical guide for interacting with this staking contract will be released soon.Functions​stakes​  function stakes(    uint256 tokenId,    bytes32 incentiveId  ) public view override returns (uint160 secondsPerLiquidityInsideInitialX128, uint128 liquidity)CopyReturns information about a staked liquidity NFTParameters:​NameTypeDescriptiontokenIduint256The ID of the staked tokenincentiveIdbytes32The ID of the incentive for which the token is stakedReturn Values:​NameTypeDescriptionsecondsPerLiquidityInsideInitialX128uint160secondsPerLiquidity represented as a UQ32.128liquiditybytes32The amount of liquidity in the NFT as of the last time the rewards were computedconstructor​  function constructor(    contract IUniswapV3Factory _factory,    contract INonfungiblePositionManager _nonfungiblePositionManager,    uint256 _maxIncentiveStartLeadTime,    uint256 _maxIncentiveDuration  ) publicCopyParameters:​NameTypeDescription_factorycontract IUniswapV3Factorythe Uniswap V3 factory_nonfungiblePositionManagercontract INonfungiblePositionManagerthe NFT position manager contract address_maxIncentiveStartLeadTimeuint256the max duration of an incentive in seconds_maxIncentiveDurationuint256the max amount of seconds into the future the incentive startTime can be setcreateIncentive​  function createIncentive(    struct IUniswapV3Staker.IncentiveKey key,    uint256 reward  ) externalCopyCreates a new liquidity mining incentive programParameters:​NameTypeDescriptionkeystruct IUniswapV3Staker.IncentiveKeyDetails of the incentive to createrewarduint256The amount of reward tokens to be distributedendIncentive​  function endIncentive(    struct IUniswapV3Staker.IncentiveKey key  ) external returns (uint256 refund)CopyEnds an incentive after the incentive end time has passed and all stakes have been withdrawnParameters:​NameTypeDescriptionkeystruct IUniswapV3Staker.IncentiveKeyDetails of the incentive to endReturn Values:​NameTypeDescriptionrefunduint256The remaining reward tokens when the incentive is endedonERC721Received​  function onERC721Received(  ) external returns (bytes4)CopyUpon receiving a Uniswap V3 ERC721, creates the token deposit setting owner to from. Also stakes token
in one or more incentives if properly formatted data has a length > 0.Whenever an {IERC721} tokenId token is transferred to this contract via {IERC721-safeTransferFrom}
by operator from from, this function is called.
It must return its Solidity selector to confirm the token transfer.
If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.
The selector can be obtained in Solidity with IERC721.onERC721Received.selector.transferDeposit​  function transferDeposit(    uint256 tokenId,    address to  ) externalCopyTransfers ownership of a deposit from the sender to the given recipientParameters:​NameTypeDescriptiontokenIduint256The ID of the token (and the deposit) to transfertoaddressThe new owner of the depositwithdrawToken​  function withdrawToken(    uint256 tokenId,    address to,    bytes data  ) externalCopyWithdraws a Uniswap V3 LP token tokenId from this contract to the recipient toParameters:​NameTypeDescriptiontokenIduint256The unique identifier of an Uniswap V3 LP tokentoaddressThe address where the LP token will be sentdatabytesAn optional data array that will be passed along to the to address via the NFT safeTransferFromstakeToken​  function stakeToken(    struct IUniswapV3Staker.IncentiveKey key,    uint256 tokenId  ) externalCopyStakes a Uniswap V3 LP tokenParameters:​NameTypeDescriptionkeystruct IUniswapV3Staker.IncentiveKeyThe key of the incentive for which to stake the NFTtokenIduint256The ID of the token to stakeunstakeToken​  function unstakeToken(    struct IUniswapV3Staker.IncentiveKey key,    uint256 tokenId  ) externalCopyUnstakes a Uniswap V3 LP tokenParameters:​NameTypeDescriptionkeystruct IUniswapV3Staker.IncentiveKeyThe key of the incentive for which to unstake the NFTtokenIduint256The ID of the token to unstakeclaimReward​  function claimReward(    contract IERC20Minimal rewardToken,    address to,    uint256 amountRequested  ) external override returns (uint256 reward)CopyTransfers amountRequested of accrued rewardToken rewards from the contract to the recipient toParameters:​NameTypeDescriptionrewardTokencontract IERC20MinimalThe token being distributed as a rewardtoaddressThe address where claimed rewards will be sent toamountRequesteduint256The amount of reward tokens to claim. Claims entire reward amount if set to 0.Return Values:​NameTypeDescriptionrewarduint256The amount of reward tokens claimedgetRewardInfo​  function getRewardInfo(    struct IUniswapV3Staker.IncentiveKey key,    uint256 tokenId  ) external view override returns (uint256 reward, uint160 secondsInsideX128)CopyCalculates the reward amount that will be received for the given stakeParameters:​NameTypeDescriptionkeystruct IUniswapV3Staker.IncentiveKeyThe key of the incentivetokenIduint256The ID of the tokenReturn Values:​NameTypeDescriptionrewarduint256The reward accrued to the NFT for the given incentive thus farsecondsInsideX128uint160The seconds inside the tick rangeEdit this pageHelpful?PreviousUniswap V3 Staker DesignNextIUniswapV3StakerFunctionsstakesconstructorcreateIncentiveendIncentiveonERC721ReceivedtransferDepositwithdrawTokenstakeTokenunstakeTokenclaimRewardgetRewardInfoDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog



