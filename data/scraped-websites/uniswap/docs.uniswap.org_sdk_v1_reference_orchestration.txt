








Orchestration | Uniswap





Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKOverviewGuidesGetting StartedTechnical ReferenceDataComputationFormatOrchestrationTransactConstantsTypesüè†V1 SDKTechnical ReferenceOrchestrationHelpful?On this pageOrchestrationOrchestration functions are plain-english wrappers for the function defined in /sdk/1.0.0/reference/data and Computation.Functions suffixed with WithData are synchronous, and require token reserves to be passed in as arguments. Functions without the suffix are asychronous, and require token addresses to be passed in as arguments.tradeExactEthForTokensWithDataThe function facilitates trading an exact amount of ETH for a specified token.Function Signature‚Äãexport function tradeExactEthForTokensWithData(reserves: OptionalReserves, ethAmount: BigNumberish): TradeDetailsCopyInput Parameters‚ÄãParameterTypeDescriptionreservesOptionalReservesReserves data for the output token.ethAmountBigNumberishThe input amount of ETH.Example Usage‚Äãconst tradeDetails: TradeDetails = tradeExactEthForTokensWithData(reserves, '1000000000000000000')CopytradeExactEthForTokensThe function facilitates trading an exact amount of ETH for a specified token.Function Signature‚Äãexport async function tradeExactEthForTokens(  tokenAddress: string,  ethAmount: BigNumberish,  chainIdOrProvider?: ChainIdOrProvider): Promise<TradeDetails>CopyInput Parameters‚ÄãParameterTypeDescriptiontokenAddressstringAddress of output token.ethAmountBigNumberishThe input amount of ETH.chainIdOrProvider?ChainIdOrProviderA supported chain id (1, 3, 4, or 42), or an underlying web3 provider connected to a chain with a supported chain id.Example Usage‚Äãconst tradeDetails: TradeDetails = await tradeExactEthForTokens(tokenAddress, '1000000000000000000')CopytradeEthForExactTokensWithDataThe function facilitates trading ETH for an exact amount of a specified token.Function Signature‚Äãexport function tradeEthForExactTokensWithData(reserves: OptionalReserves, tokenAmount: BigNumberish): TradeDetailsCopyInput Parameters‚ÄãParameterTypeDescriptionreservesOptionalReservesReserves data for the output token.tokenAmountBigNumberishThe output amount of tokens.Example Usage‚Äãconst tradeDetails: TradeDetails = tradeEthForExactTokensWithData(reserves, '1000000000000000000')CopytradeEthForExactTokensThe function facilitates trading ETH for an exact amount of a specified token.Function Signature‚Äãexport async function tradeEthForExactTokens(  tokenAddress: string,  tokenAmount: BigNumberish,  chainIdOrProvider?: ChainIdOrProvider): Promise<TradeDetails>CopyInput Parameters‚ÄãParameterTypeDescriptiontokenAddressstringAddress of output token.tokenAmountBigNumberishThe output amount of tokens.chainIdOrProvider?ChainIdOrProviderA supported chain id (1, 3, 4, or 42), or an underlying web3 provider connected to a chain with a supported chain id.Example Usage‚Äãconst tradeDetails: TradeDetails = await tradeEthForExactTokens(tokenAddress, '1000000000000000000')CopytradeExactTokensForEthWithDataThe function facilitates trading an exact amount of a specified token for ETH.Function Signature‚Äãexport function tradeExactTokensForEthWithData(reserves: OptionalReserves, tokenAmount: BigNumberish): TradeDetailsCopyInput Parameters‚ÄãParameterTypeDescriptionreservesOptionalReservesReserves data for the input token.tokenAmountBigNumberishThe input amount of tokens.Example Usage‚Äãconst tradeDetails: TradeDetails = tradeExactTokensForEthWithData(reserves, '1000000000000000000')CopytradeExactTokensForEthThe function facilitates trading an exact amount of a specified token for ETH.Function Signature‚Äãexport async function tradeExactTokensForEth(  tokenAddress: string,  tokenAmount: BigNumberish,  chainIdOrProvider?: ChainIdOrProvider): Promise<TradeDetails>CopyInput Parameters‚ÄãParameterTypeDescriptiontokenAddressstringAddress of input token.tokenAmountBigNumberishThe input amount of tokens.chainIdOrProvider?ChainIdOrProviderA supported chain id (1, 3, 4, or 42), or an underlying web3 provider connected to a chain with a supported chain id.Example Usage‚Äãconst tradeDetails: TradeDetails = await tradeExactTokensForEth(tokenAddress, '1000000000000000000')CopytradeTokensForExactEthWithDataThe function facilitates trading a specified token for an exact amount of ETH.Function Signature‚Äãexport function tradeTokensForExactEthWithData(reserves: OptionalReserves, ethAmount: BigNumberish): TradeDetailsCopyInput Parameters‚ÄãParameterTypeDescriptionreservesOptionalReservesReserves data for the input token.ethAmountBigNumberishThe outpute amount of ETH.Example Usage‚Äãconst tradeDetails: TradeDetails = tradeTokensForExactEthWithData(reserves, '1000000000000000000')CopytradeTokensForExactEthThe function facilitates trading a specified token for an exact amount of ETH.Function Signature‚Äãexport async function tradeTokensForExactEth(  tokenAddress: string,  ethAmount: BigNumberish,  chainIdOrProvider?: ChainIdOrProvider): Promise<TradeDetails>CopyInput Parameters‚ÄãParameterTypeDescriptiontokenAddressstringAddress of input token.ethAmountBigNumberishThe output amount of ETH.chainIdOrProvider?ChainIdOrProviderA supported chain id (1, 3, 4, or 42), or an underlying web3 provider connected to a chain with a supported chain id.Example Usage‚Äãconst tradeDetails: TradeDetails = await tradeTokensForExactEth(tokenAddress, '1000000000000000000')CopytradeExactTokensForTokensWithDataThe function facilitates trading an exact amount of a specified token for another token.Function Signature‚Äãexport function tradeExactTokensForTokensWithData(  reservesInput: OptionalReserves,  reservesOutput: OptionalReserves,  tokenAmount: BigNumberish): TradeDetailsCopyInput Parameters‚ÄãParameterTypeDescriptionreservesInputOptionalReservesReserves data for the input token.reservesOutputOptionalReservesReserves data for the output token.tokenAmountBigNumberishThe input amount of tokens.Example Usage‚Äãconst tradeDetails: TradeDetails = tradeExactTokensForTokensWithData(  reservesInput,  reservesOutput,  '1000000000000000000')CopytradeExactTokensForTokensThe function facilitates trading an exact amount of a specified token for another token.Function Signature‚Äãexport async function tradeExactTokensForTokens(  tokenAddressInput: string,  tokenAddressOutput: string,  tokenAmount: BigNumberish,  chainIdOrProvider?: ChainIdOrProvider): Promise<TradeDetails>CopyInput Parameters‚ÄãParameterTypeDescriptiontokenAddressInputstringAddress of input token.tokenAddressOutputstringAddress of output token.tokenAmountBigNumberishThe input amount of tokens.chainIdOrProvider?ChainIdOrProviderA supported chain id (1, 3, 4, or 42), or an underlying web3 provider connected to a chain with a supported chain id.Example Usage‚Äãconst tradeDetails: TradeDetails = await tradeExactTokensForTokens(  tokenAddressInput,  tokenAddressOutput,  '1000000000000000000')CopytradeTokensForExactTokensWithDataThe function facilitates trading a specified token for an exact amount of another token.Function Signature‚Äãexport function tradeTokensForExactTokensWithData(  reservesInput: OptionalReserves,  reservesOutput: OptionalReserves,  tokenAmount: BigNumberish): TradeDetailsCopyInput Parameters‚ÄãParameterTypeDescriptionreservesInputOptionalReservesReserves data for the input token.reservesOutputOptionalReservesReserves data for the output token.tokenAmountBigNumberishThe output amount of tokens.Example Usage‚Äãconst tradeDetails: TradeDetails = tradeTokensForExactTokensWithData(  reservesInput,  reservesOutput,  '1000000000000000000')CopytradeTokensForExactTokensThe function facilitates trading an exact amount of a specified token for another token.Function Signature‚Äãexport async function tradeTokensForExactTokens(  tokenAddressInput: string,  tokenAddressOutput: string,  tokenAmount: BigNumberish,  chainIdOrProvider?: ChainIdOrProvider): Promise<TradeDetails>CopyInput Parameters‚ÄãParameterTypeDescriptiontokenAddressInputstringAddress of input token.tokenAddressOutputstringAddress of output token.tokenAmountBigNumberishThe output amount of tokens.chainIdOrProvider?ChainIdOrProviderA supported chain id (1, 3, 4, or 42), or an underlying web3 provider connected to a chain with a supported chain id.Example Usage‚Äãconst tradeDetails: TradeDetails = await tradeTokensForExactTokens(  tokenAddressInput,  tokenAddressOutput,  '1000000000000000000')CopyHelpful?PreviousFormatNextTransactFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog



