








Fractions | Uniswap





Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKOverviewGuidesSDK Quick startFetching DataPricingTradingPair AddressesTechnical ReferenceGetting StartedTokenPairRouteTradeFractionsFetcherOther ExportsV1 SDKüè†V2 SDKTechnical ReferenceFractionsHelpful?On this pageFractionconstructor(numerator: BigintIsh, denominator: BigintIsh = ONE)CopyThe base class which all subsequent fraction classes extend. Not meant to be used directly.Properties‚Äãnumerator‚Äãnumerator: JSBICopydenominator‚Äãdenominator: JSBICopyquotient‚Äãquotient: JSBICopyPerforms floor division.Methods‚Äãinvert‚Äãinvert(): FractionCopyadd‚Äãadd(other: Fraction | BigintIsh): FractionCopysubtract‚Äãsubtract(other: Fraction | BigintIsh): FractionCopymultiply‚Äãmultiply(other: Fraction | BigintIsh): FractionCopydivide‚Äãdivide(other: Fraction | BigintIsh): FractionCopytoSignificant‚ÄãtoSignificant(  significantDigits: number,  format: object = { groupSeparator: '' },  rounding: Rounding = Rounding.ROUND_HALF_UP): stringCopyFormats a fraction to the specified number of significant digits.For format options, see toFormat.toFixed‚ÄãtoFixed(  decimalPlaces: number,  format: object = { groupSeparator: '' },  rounding: Rounding = Rounding.ROUND_HALF_UP): stringCopyFormats a fraction to the specified number of decimal places.For format options, see toFormat.PercentResponsible for formatting percentages (10% instead of 0.1).Example‚Äãimport { Percent } from '@uniswap/sdk'const percent = new Percent('60', '100')console.log(percent.toSignificant(2)) // 60CopytoSignificant‚ÄãSee toSignificant.toFixed‚ÄãSee toFixed.TokenAmountconstructor(token: Token, amount: BigintIsh)CopyResponsible for formatting token amounts with specific decimal places.Example‚Äãimport { Token, TokenAmount } from '@uniswap/sdk'const FRIED = new Token(ChainId.MAINNET, '0xfa1aFe1000000000000000000000000000000000', 18, 'FRIED', 'Beans')const tokenAmount = new TokenAmount(FRIED, '3000000000000000000')console.log(tokenAmount.toExact()) // 3CopyProperties‚Äãtoken‚Äãtoken: TokenCopyraw‚Äãraw: JSBICopyReturns the full token amount, unadjusted for decimals.Methods‚Äãadd‚Äãadd(other: TokenAmount): TokenAmountCopysubtract‚Äãsubtract(other: TokenAmount): TokenAmountCopytoSignificant‚ÄãSee toSignificant.toFixed‚ÄãSee toFixed.toExact‚ÄãtoExact(format: object = { groupSeparator: '' }): stringCopyPriceconstructor(baseToken: Token, quoteToken: Token, denominator: BigintIsh, numerator: BigintIsh)CopyResponsible for denominating the relative price between two tokens. Denominator and numerator must be unadjusted for decimals.Example‚Äãimport { ChainId, WETH as WETHs, Token, Price } from '@uniswap/sdk'const WETH = WETHs[ChainId.MAINNET]const ABC = new Token(ChainId.MAINNET, '0xabc0000000000000000000000000000000000000', 18, 'ABC')const price = new Price(WETH, ABC, '1000000000000000000', '123000000000000000000')console.log(price.toSignificant(3)) // 123CopyThis example shows the¬†ETH/XYZ price, where ETH is the base token, and XYZ is the quote token. The price is constructed from an amount of XYZ (the numerator) / an amount of WETH (the denominator).Static Methods‚ÄãfromRoute‚ÄãfromRoute(route: Route): PriceCopyProperties‚ÄãbaseToken‚ÄãbaseToken: TokenCopyquoteToken‚ÄãquoteToken: TokenCopyscalar‚Äãscalar: FractionCopyUsed to adjust the price for the decimals of the base and quote tokens.raw‚Äãraw: FractionCopyReturns the raw price, unadjusted for decimals.adjusted‚Äãadjusted: FractionCopyReturns the price, adjusted for decimals.Methods‚Äãinvert‚Äãinvert(): PriceCopymultiply‚Äãmultiply(other: Price): PriceCopyquote‚Äãquote(tokenAmount: TokenAmount): TokenAmountCopyGiven an asset amount, returns an equivalent value of the other asset, according to the current price.toSignificant‚ÄãSee toSignificant.toFixed‚ÄãSee toFixed.Helpful?PreviousTradeNextFetcherPropertiesnumeratordenominatorquotientMethodsinvertaddsubtractmultiplydividetoSignificanttoFixedExampletoSignificanttoFixedExamplePropertiestokenrawMethodsaddsubtracttoSignificanttoFixedtoExactExampleStatic MethodsfromRoutePropertiesbaseTokenquoteTokenscalarrawadjustedMethodsinvertmultiplyquotetoSignificanttoFixedDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog



