








Overview | Uniswap





Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceOverviewHelpful?On this pageOverviewTable of contents‚ÄãEnumerations‚ÄãFeeAmountClasses‚ÄãFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeInterfaces‚ÄãAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsType Aliases‚ÄãAddLiquidityOptionsFullWithdrawOptionsIncreaseOptionsMintOptionsPermitOptionsVariables‚ÄãADDRESS_ZEROFACTORY_ADDRESSPOOL_INIT_CODE_HASHTICK_SPACINGSFunctions‚ÄãcomputePoolAddressencodeRouteToPathencodeSqrtRatioX96isSortedmaxLiquidityForAmountsmostSignificantBitnearestUsableTickpriceToClosestTicksubIn256tickToPricetoHextradeComparatorType Aliases‚ÄãAddLiquidityOptions‚Äã∆¨ AddLiquidityOptions: MintOptions | IncreaseOptionsDefined in‚ÄãnonfungiblePositionManager.ts:77FullWithdrawOptions‚Äã∆¨ FullWithdrawOptions: ClaimOptions & WithdrawOptionsDefined in‚Äãstaker.ts:8IncreaseOptions‚Äã∆¨ IncreaseOptions: CommonAddLiquidityOptions & IncreaseSpecificOptionsDefined in‚ÄãnonfungiblePositionManager.ts:75MintOptions‚Äã∆¨ MintOptions: CommonAddLiquidityOptions & MintSpecificOptionsDefined in‚ÄãnonfungiblePositionManager.ts:74PermitOptions‚Äã∆¨ PermitOptions: StandardPermitArguments | AllowedPermitArgumentsDefined in‚ÄãselfPermit.ts:22Variables‚ÄãADDRESS_ZERO‚Äã‚Ä¢ Const ADDRESS_ZERO: "0x0000000000000000000000000000000000000000"Defined in‚Äãconstants.ts:3FACTORY_ADDRESS‚Äã‚Ä¢ Const FACTORY_ADDRESS: "0x1F98431c8aD98523631AE4a59f267346ea31F984"Defined in‚Äãconstants.ts:1POOL_INIT_CODE_HASH‚Äã‚Ä¢ Const POOL_INIT_CODE_HASH: "0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54"Defined in‚Äãconstants.ts:5TICK_SPACINGS‚Äã‚Ä¢ Const TICK_SPACINGS: { [amount in FeeAmount]: number }The default factory tick spacings by fee amount.Defined in‚Äãconstants.ts:20Functions‚ÄãcomputePoolAddress‚Äã‚ñ∏ computePoolAddress(__namedParameters): stringComputes a pool addressParameters‚ÄãNameType__namedParametersObject__namedParameters.factoryAddressstring__namedParameters.feeFeeAmount__namedParameters.initCodeHashManualOverride?string__namedParameters.tokenAToken__namedParameters.tokenBTokenReturns‚ÄãstringThe pool addressDefined in‚Äãutils/computePoolAddress.ts:16encodeRouteToPath‚Äã‚ñ∏ encodeRouteToPath(route, exactOutput): stringConverts a route to a hex encoded pathParameters‚ÄãNameTypeDescriptionrouteRoute<Currency, Currency>the v3 path to convert to an encoded pathexactOutputbooleanwhether the route should be encoded in reverse, for making exact output swapsReturns‚ÄãstringDefined in‚Äãutils/encodeRouteToPath.ts:11encodeSqrtRatioX96‚Äã‚ñ∏ encodeSqrtRatioX96(amount1, amount0): JSBIReturns the sqrt ratio as a Q64.96 corresponding to a given ratio of amount1 and amount0Parameters‚ÄãNameTypeDescriptionamount1BigintIshThe numerator amount i.e., the amount of token1amount0BigintIshThe denominator amount i.e., the amount of token0Returns‚ÄãJSBIThe sqrt ratioDefined in‚Äãutils/encodeSqrtRatioX96.ts:11isSorted‚Äã‚ñ∏ isSorted<T>(list, comparator): booleanDetermines if a tick list is sortedType parameters‚ÄãNameTParameters‚ÄãNameTypeDescriptionlistT[]The tick listcomparator(a: T, b: T) => numberThe comparatorReturns‚Äãbooleantrue if sortedDefined in‚Äãutils/isSorted.ts:7maxLiquidityForAmounts‚Äã‚ñ∏ maxLiquidityForAmounts(sqrtRatioCurrentX96, sqrtRatioAX96, sqrtRatioBX96, amount0, amount1, useFullPrecision): JSBIComputes the maximum amount of liquidity received for a given amount of token0, token1,
and the prices at the tick boundaries.Parameters‚ÄãNameTypeDescriptionsqrtRatioCurrentX96defaultthe current pricesqrtRatioAX96defaultprice at lower boundarysqrtRatioBX96defaultprice at upper boundaryamount0BigintIshtoken0 amountamount1BigintIshtoken1 amountuseFullPrecisionbooleanif false, liquidity will be maximized according to what the router can calculate, not what core can theoretically supportReturns‚ÄãJSBIDefined in‚Äãutils/maxLiquidityForAmounts.ts:68mostSignificantBit‚Äã‚ñ∏ mostSignificantBit(x): numberParameters‚ÄãNameTypexdefaultReturns‚ÄãnumberDefined in‚Äãutils/mostSignificantBit.ts:12nearestUsableTick‚Äã‚ñ∏ nearestUsableTick(tick, tickSpacing): numberReturns the closest tick that is nearest a given tick and usable for the given tick spacingParameters‚ÄãNameTypeDescriptionticknumberthe target ticktickSpacingnumberthe spacing of the poolReturns‚ÄãnumberDefined in‚Äãutils/nearestUsableTick.ts:9priceToClosestTick‚Äã‚ñ∏ priceToClosestTick(price): numberReturns the first tick for which the given price is greater than or equal to the tick priceParameters‚ÄãNameTypeDescriptionpricePrice<Token, Token>for which to return the closest tick that represents a price less than or equal to the input price, i.e. the price of the returned tick is less than or equal to the input priceReturns‚ÄãnumberDefined in‚Äãutils/priceTickConversions.ts:29subIn256‚Äã‚ñ∏ subIn256(x, y): JSBIParameters‚ÄãNameTypexdefaultydefaultReturns‚ÄãJSBIDefined in‚Äãutils/tickLibrary.ts:11tickToPrice‚Äã‚ñ∏ tickToPrice(baseToken, quoteToken, tick): Price<Token, Token>Returns a price object corresponding to the input tick and the base/quote token
Inputs must be tokens because the address order is used to interpret the price represented by the tickParameters‚ÄãNameTypeDescriptionbaseTokenTokenthe base token of the pricequoteTokenTokenthe quote token of the priceticknumberthe tick for which to return the priceReturns‚ÄãPrice<Token, Token>Defined in‚Äãutils/priceTickConversions.ts:14toHex‚Äã‚ñ∏ toHex(bigintIsh): stringConverts a big int to a hex stringParameters‚ÄãNameTypebigintIshBigintIshReturns‚ÄãstringThe hex encoded calldataDefined in‚Äãutils/calldata.ts:23tradeComparator‚Äã‚ñ∏ tradeComparator<TInput, TOutput, TTradeType>(a, b): numberTrades comparator, an extension of the input output comparator that also considers other dimensions of the trade in ranking themType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputParameters‚ÄãNameTypeDescriptionaTrade<TInput, TOutput, TTradeType>The first trade to comparebTrade<TInput, TOutput, TTradeType>The second trade to compareReturns‚ÄãnumberA sorted ordering for two neighboring elements in a trade arrayDefined in‚Äãentities/trade.ts:16Helpful?PreviousSwapping and Adding LiquidityNextFullMathTable of contentsEnumerationsClassesInterfacesType AliasesVariablesFunctionsType AliasesAddLiquidityOptionsFullWithdrawOptionsIncreaseOptionsMintOptionsPermitOptionsVariablesADDRESS_ZEROFACTORY_ADDRESSPOOL_INIT_CODE_HASHTICK_SPACINGSFunctionscomputePoolAddressencodeRouteToPathencodeSqrtRatioX96isSortedmaxLiquidityForAmountsmostSignificantBitnearestUsableTickpriceToClosestTicksubIn256tickToPricetoHextradeComparatorDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog



