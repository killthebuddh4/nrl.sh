








CurrencyAmount | Uniswap





Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDK🏠Core SDKTechnical ReferenceclassesCurrencyAmountHelpful?On this pageCurrencyAmount@uniswap/sdk-core / Exports / CurrencyAmountClass: CurrencyAmount<T>Type parameters​NameTypeTextends CurrencyHierarchy​Fraction↳ CurrencyAmountTable of contents​Constructors​constructorProperties​currencydecimalScaledenominatornumeratorAccessors​asFractionquotientremainderwrappedMethods​adddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountConstructors​constructor​• Protected new CurrencyAmount<T>(currency, numerator, denominator?)Type parameters​NameTypeTextends CurrencyParameters​NameTypecurrencyTnumeratorBigintIshdenominator?BigintIshOverrides​Fraction.constructorDefined in​entities/fractions/currencyAmount.ts:40Properties​currency​• Readonly currency: TDefined in​entities/fractions/currencyAmount.ts:14decimalScale​• Readonly decimalScale: defaultDefined in​entities/fractions/currencyAmount.ts:15denominator​• Readonly denominator: defaultInherited from​Fraction.denominatorDefined in​entities/fractions/fraction.ts:26numerator​• Readonly numerator: defaultInherited from​Fraction.numeratorDefined in​entities/fractions/fraction.ts:25Accessors​asFraction​• get asFraction(): FractionHelper method for converting any super class back to a fractionReturns​FractionInherited from​Fraction.asFractionDefined in​entities/fractions/fraction.ts:154quotient​• get quotient(): defaultReturns​defaultInherited from​Fraction.quotientDefined in​entities/fractions/fraction.ts:42remainder​• get remainder(): FractionReturns​FractionInherited from​Fraction.remainderDefined in​entities/fractions/fraction.ts:47wrapped​• get wrapped(): CurrencyAmount<Token>Returns​CurrencyAmount<Token>Defined in​entities/fractions/currencyAmount.ts:91Methods​add​▸ add(other): CurrencyAmount<T>Parameters​NameTypeotherCurrencyAmount<T>Returns​CurrencyAmount<T>Overrides​Fraction.addDefined in​entities/fractions/currencyAmount.ts:47divide​▸ divide(other): CurrencyAmount<T>Parameters​NameTypeotherBigintIsh | FractionReturns​CurrencyAmount<T>Overrides​Fraction.divideDefined in​entities/fractions/currencyAmount.ts:64equalTo​▸ equalTo(other): booleanParameters​NameTypeotherBigintIsh | FractionReturns​booleanInherited from​Fraction.equalToDefined in​entities/fractions/fraction.ts:91greaterThan​▸ greaterThan(other): booleanParameters​NameTypeotherBigintIsh | FractionReturns​booleanInherited from​Fraction.greaterThanDefined in​entities/fractions/fraction.ts:99invert​▸ invert(): FractionReturns​FractionInherited from​Fraction.invertDefined in​entities/fractions/fraction.ts:51lessThan​▸ lessThan(other): booleanParameters​NameTypeotherBigintIsh | FractionReturns​booleanInherited from​Fraction.lessThanDefined in​entities/fractions/fraction.ts:83multiply​▸ multiply(other): CurrencyAmount<T>Parameters​NameTypeotherBigintIsh | FractionReturns​CurrencyAmount<T>Overrides​Fraction.multiplyDefined in​entities/fractions/currencyAmount.ts:59subtract​▸ subtract(other): CurrencyAmount<T>Parameters​NameTypeotherCurrencyAmount<T>Returns​CurrencyAmount<T>Overrides​Fraction.subtractDefined in​entities/fractions/currencyAmount.ts:53toExact​▸ toExact(format?): stringParameters​NameTypeformatobjectReturns​stringDefined in​entities/fractions/currencyAmount.ts:86toFixed​▸ toFixed(decimalPlaces?, format?, rounding?): stringParameters​NameTypeDefault valuedecimalPlacesnumberundefinedformat?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns​stringOverrides​Fraction.toFixedDefined in​entities/fractions/currencyAmount.ts:77toSignificant​▸ toSignificant(significantDigits?, format?, rounding?): stringParameters​NameTypeDefault valuesignificantDigitsnumber6format?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns​stringOverrides​Fraction.toSignificantDefined in​entities/fractions/currencyAmount.ts:69fromFractionalAmount​▸ Static fromFractionalAmount<T>(currency, numerator, denominator): CurrencyAmount<T>Construct a currency amount with a denominator that is not equal to 1Type parameters​NameTypeTextends CurrencyParameters​NameTypeDescriptioncurrencyTthe currencynumeratorBigintIshthe numerator of the fractional token amountdenominatorBigintIshthe denominator of the fractional token amountReturns​CurrencyAmount<T>Defined in​entities/fractions/currencyAmount.ts:32fromRawAmount​▸ Static fromRawAmount<T>(currency, rawAmount): CurrencyAmount<T>Returns a new currency amount instance from the unitless amount of token, i.e. the raw amountType parameters​NameTypeTextends CurrencyParameters​NameTypeDescriptioncurrencyTthe currency in the amountrawAmountBigintIshthe raw token or ether amountReturns​CurrencyAmount<T>Defined in​entities/fractions/currencyAmount.ts:22Helpful?PreviousOverviewNextEtherType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiescurrencydecimalScaledenominatornumeratorAccessorsasFractionquotientremainderwrappedMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog



