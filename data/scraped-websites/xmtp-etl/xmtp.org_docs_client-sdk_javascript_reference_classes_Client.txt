
















Client    




!function(){function t(t){document.documentElement.setAttribute("data-theme",t)}var e=function(){var t=null;try{t=localStorage.getItem("theme")}catch(t){}return t}();t(null!==e?e:"light")}()Skip to main contentDocumentation
                 JavaScript XMTP client SDK
                 Tutorials and reference for building apps in JavaScript
                 Kotlin XMTP client SDK
                 Tutorial for building apps in Kotlin
                 Swift XMTP client SDK
                 Tutorial for building apps in Swift
                 Dart XMTP client SDK
                 Tutorial and reference for building apps in Dart
                 Development concepts
                 Learn about XMTP architecture, security, FAQ, and moreSDKs and toolsCommunity
                Join in and contribute
                Join in and contribute to the XMTP community
                Grants
                Apply for a grant for a project that fosters ecosystem growth
                Built with XMTP
                Explore a showcase of apps built with XMTP
                Code of conduct
                 Foster a safe and positive XMTP community experienceVision
                Litepaper
                Read the public draft of the XMTP Litepaper
                Roadmap
                 Learn about what's in store for XMTP in the months aheadBlog⚡️ Start building ⚡️Search⌘KConcepts for xmtp-jsIntro to the XMTP JavaScript SDKTutorials for xmtp-jsStart messaging with XMTPQuickstartBuild key XMTP chat features in a Lens appBuild an XMTP "GM" appFilter conversationsLabel conversationsUse content typesUse a persistent conversation cacheReference for xmtp-jsClassesClientCompositeCodecContentTypeIdConversationsDecodedMessagePrivateKeyPublicKeyPublicKeyBundleSignedPublicKeyBundleStreamTextCodecInterfacesContentCodecEncodedContentOther types and variablesReference for xmtp-jsClassesClientOn this pageClientClass: ClientClient class initiates connection to the XMTP network.
Should be created with await Client.create(options)Constructors​constructor​new Client(keys, apiClient)Parameters​NameTypekeysPrivateKeyBundleV1apiClientdefaultDefined in​Client.ts:158Properties​_codecs​ Private _codecs: Map<string, ContentCodec<any>>Defined in​Client.ts:155_conversations​ Private _conversations: ConversationsDefined in​Client.ts:153_maxContentSize​ Private _maxContentSize: numberDefined in​Client.ts:156address​ address: stringDefined in​Client.ts:143apiClient​ apiClient: defaultDefined in​Client.ts:146contacts​ contacts: Set<string>Defined in​Client.ts:147keys​ keys: PrivateKeyBundleV2Defined in​Client.ts:145knownPublicKeyBundles​ Private knownPublicKeyBundles: Map<string, SignedPublicKeyBundle | PublicKeyBundle>Defined in​Client.ts:148legacyKeys​ legacyKeys: PrivateKeyBundleV1Defined in​Client.ts:144Accessors​conversations​get conversations(): ConversationsReturns​ConversationsDefined in​Client.ts:176Methods​canMessage​canMessage(peerAddress): Promise<boolean>Check ifPeer Addresscan be messaged, specifically it checks that a PublicKeyBundle can be
found for the given addressParameters​NameTypepeerAddressstringReturns​Promise<boolean>Defined in​Client.ts:287close​close(): Promise<void>Returns​Promise<void>Defined in​Client.ts:216codecFor​codecFor(contentType): undefined | ContentCodec<any>Parameters​NameTypecontentTypeContentTypeIdReturns​undefined | ContentCodec<any>Defined in​Client.ts:334encodeContent​encodeContent(content, options?): Promise<Uint8Array>Parameters​NameTypecontentanyoptions?SendOptionsReturns​Promise<Uint8Array>Defined in​Client.ts:346ensureUserContactPublished​Private ensureUserContactPublished(legacy?): Promise<void>Parameters​NameTypeDefault valuelegacybooleanfalseReturns​Promise<void>Defined in​Client.ts:220forgetContact​forgetContact(peerAddress): voidUsed to force getUserContact fetch contact from the network.Parameters​NameTypepeerAddressstringReturns​voidDefined in​Client.ts:279getUserContact​getUserContact(peerAddress): Promise<undefined | SignedPublicKeyBundle | PublicKeyBundle>Returns the cached PublicKeyBundle if one is known for the given address or fetches
one from the networkParameters​NameTypepeerAddressstringReturns​Promise<undefined | SignedPublicKeyBundle | PublicKeyBundle>Defined in​Client.ts:255init​Private init(options): Promise<void>Parameters​NameTypeoptionsClientOptionsReturns​Promise<void>Defined in​Client.ts:207listEnvelopes​listEnvelopes<Out>(topics, mapper, opts?): Promise<Out[]>Type parameters​NameOutParameters​NameTypetopicsstring[]mapperEnvelopeMapper<Out>opts?ListMessagesOptionsReturns​Promise<Out[]>Defined in​Client.ts:376listEnvelopesPaginated​listEnvelopesPaginated<Out>(contentTopics, mapper, opts?): AsyncGenerator<Out[], any, unknown>List messages on a given set of content topics, yielding one page at a timeType parameters​NameOutParameters​NameTypecontentTopicsstring[]mapperEnvelopeMapper<Out>opts?ListMessagesPaginatedOptionsReturns​AsyncGenerator<Out[], any, unknown>Defined in​Client.ts:410listInvitations​listInvitations(opts?): Promise<SealedInvitation[]>Parameters​NameTypeopts?ListMessagesOptionsReturns​Promise<SealedInvitation[]>Defined in​Client.ts:367publishEnvelopes​publishEnvelopes(envelopes): Promise<void>Parameters​NameTypeenvelopesPublishParams[]Returns​Promise<void>Defined in​Client.ts:315publishUserContact​publishUserContact(legacy?): Promise<void>Parameters​NameTypeDefault valuelegacybooleanfalseReturns​Promise<void>Defined in​Client.ts:240registerCodec​registerCodec(codec): voidParameters​NameTypecodecContentCodec<any>Returns​voidDefined in​Client.ts:327validateEnvelope​Private validateEnvelope(env): voidParameters​NameTypeenvPublishParamsReturns​voidDefined in​Client.ts:304canMessage​Static canMessage(peerAddress, opts?): Promise<boolean>Parameters​NameTypepeerAddressstringopts?Partial<NetworkOptions>Returns​Promise<boolean>Defined in​Client.ts:292create​Static create(wallet, opts?): Promise<Client>Create and start a client associated with given wallet.Parameters​NameTypeDescriptionwalletnull | Signerthe wallet as a Signer instanceopts?Partial<ClientOptions>specify how to to connect to the networkReturns​Promise<Client>Defined in​Client.ts:186getKeys​Static getKeys(wallet, opts?): Promise<Uint8Array>Parameters​NameTypewalletnull | Signeropts?Partial<ClientOptions>Returns​Promise<Uint8Array>Defined in​Client.ts:199Edit this pageLast updated on Mar 15, 2023 by Jennifer HasegawaPreviousUse a persistent conversation cacheNextCompositeCodecOn this pageConstructorsconstructorProperties_codecs_conversations_maxContentSizeaddressapiClientcontactskeysknownPublicKeyBundleslegacyKeysAccessorsconversationsMethodscanMessageclosecodecForencodeContentensureUserContactPublishedforgetContactgetUserContactinitlistEnvelopeslistEnvelopesPaginatedlistInvitationspublishEnvelopespublishUserContactregisterCodecvalidateEnvelopecanMessagecreategetKeysQuestions? Give us feedbackClient SDKsJavaScriptKotlinSwiftDartDevelopment conceptsIntro to XMTPStart buildingArchitectural overviewFAQInteroperable inboxContent typesUX best practicesKey generation and usageInvitation and message encryptionWallet app and chain supportAccount signaturesContribute to XMTPReleasesXMTP Improvement ProposalsSDKs and toolsSDKsExample appsXMTP status pageCommunityBuilt with XMTPDiscussionsDiscordTwitterContribute to XMTPXMTP Improvement ProposalsXMTP code of conductCareers at XMTP LabsVisionLitepaperRoadmapCC BY 4.0Privacy policyTerm of service



