








Overview | Uniswap





Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesenumsV2 SDKV1 SDK🏠Core SDKTechnical ReferenceOverviewHelpful?On this pageOverviewTable of contents​Enumerations​RoundingSupportedChainIdTradeTypeClasses​CurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenType Aliases​BigintIshCurrencyVariables​MaxUint256WETH9Functions​computePriceImpactsortedInsertsqrtvalidateAndParseAddressType Aliases​BigintIsh​Ƭ BigintIsh: JSBI | string | numberDefined in​constants.ts:24Currency​Ƭ Currency: NativeCurrency | TokenDefined in​entities/currency.ts:4Variables​MaxUint256​• Const MaxUint256: defaultDefined in​constants.ts:37WETH9​• Const WETH9: ObjectKnown WETH9 implementation addresses, used in our implementation of Ether#wrappedIndex signature​▪ [chainId: number]: TokenDefined in​entities/weth9.ts:6Functions​computePriceImpact​▸ computePriceImpact<TBase, TQuote>(midPrice, inputAmount, outputAmount): PercentReturns the percent difference between the mid price and the execution price, i.e. price impact.Type parameters​NameTypeTBaseextends CurrencyTQuoteextends CurrencyParameters​NameTypeDescriptionmidPricePrice<TBase, TQuote>mid price before the tradeinputAmountCurrencyAmount<TBase>the input amount of the tradeoutputAmountCurrencyAmount<TQuote>the output amount of the tradeReturns​PercentDefined in​utils/computePriceImpact.ts:9sortedInsert​▸ sortedInsert<T>(items, add, maxSize, comparator): T | nullType parameters​NameTParameters​NameTypeitemsT[]addTmaxSizenumbercomparator(a: T, b: T) => numberReturns​T | nullDefined in​utils/sortedInsert.ts:5sqrt​▸ sqrt(value): JSBIComputes floor(sqrt(value))Parameters​NameTypeDescriptionvaluedefaultthe value for which to compute the square root, rounded downReturns​JSBIDefined in​utils/sqrt.ts:14validateAndParseAddress​▸ validateAndParseAddress(address): stringValidates an address and returns the parsed (checksummed) version of that addressParameters​NameTypeDescriptionaddressstringthe unchecksummed hex addressReturns​stringDefined in​utils/validateAndParseAddress.ts:7Helpful?PreviousOverviewNextCurrencyAmountTable of contentsEnumerationsClassesType AliasesVariablesFunctionsType AliasesBigintIshCurrencyVariablesMaxUint256WETH9FunctionscomputePriceImpactsortedInsertsqrtvalidateAndParseAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog



