








NonfungiblePositionManager | Uniswap





Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryNonfungiblePositionManagerHelpful?On this pageNonfungiblePositionManagerWraps Uniswap V3 positions in the ERC721 non-fungible token interfaceFunctions‚Äãconstructor‚Äã  function constructor(  ) publicCopypositions‚Äã  function positions(    uint256 tokenId  ) external view returns (uint96 nonce, address operator, address token0, address token1, uint24 fee, int24 tickLower, int24 tickUpper, uint128 liquidity, uint256 feeGrowthInside0LastX128, uint256 feeGrowthInside1LastX128, uint128 tokensOwed0, uint128 tokensOwed1)CopyReturns the position information associated with a given token ID.Throws if the token ID is not valid.Parameters:‚ÄãNameTypeDescriptiontokenIduint256The ID of the token that represents the positionReturn Values:‚ÄãNameTypeDescriptionnonceuint96The nonce for permitsoperatoraddressThe address that is approved for spendingtoken0addressThe address of the token0 for a specific pooltoken1addressThe address of the token1 for a specific poolfeeuint24The fee associated with the pooltickLowerint24The lower end of the tick range for the positiontickUpperint24The higher end of the tick range for the positionliquidityuint128The liquidity of the positionfeeGrowthInside0LastX128uint256The fee growth of token0 as of the last action on the individual positionfeeGrowthInside1LastX128uint256The fee growth of token1 as of the last action on the individual positiontokensOwed0uint128The uncollected amount of token0 owed to the position as of the last computationtokensOwed1uint128The uncollected amount of token1 owed to the position as of the last computationmint‚Äã  function mint(    struct INonfungiblePositionManager.MintParams params  ) external returns (uint256 tokenId, uint128 liquidity, uint256 amount0, uint256 amount1)CopyCreates a new position wrapped in a NFTCall this when the pool does exist and is initialized. Note that if the pool is created but not initialized
a method does not exist, i.e. the pool is assumed to be initialized.Parameters:‚ÄãNameTypeDescriptionparamsstruct INonfungiblePositionManager.MintParamsThe params necessary to mint a position, encoded as MintParams in calldataReturn Values:‚ÄãNameTypeDescriptiontokenIduint256The ID of the token that represents the minted positionliquidityuint128The amount of liquidity for this positionamount0uint256The amount of token0amount1uint256The amount of token1tokenURI‚Äã  function tokenURI(    uint256 tokenId  ) public view returns (string)CopyReturns a URI describing a particular token IDParameters:‚ÄãNameTypeDescriptiontokenIduint256The ID of the token that represents the minted positionReturn Values:‚ÄãA base64 string with the URI data.baseURI‚Äã  function baseURI(  ) public returns (string)CopyincreaseLiquidity‚Äã  function increaseLiquidity(    struct INonfungiblePositionManager.IncreaseLiquidityParams params  ) external returns (uint128 liquidity, uint256 amount0, uint256 amount1)CopyIncreases the amount of liquidity in a position, with tokens paid by the msg.senderParameters:‚ÄãNameTypeDescriptionparamsstruct INonfungiblePositionManager.IncreaseLiquidityParamstokenId The ID of the token for which liquidity is being increased,Return Values:‚ÄãNameTypeDescriptionliquidityuint128The new liquidity amount as a result of the increaseamount0uint256The amount of token0 to achieve resulting liquidityamount1uint256The amount of token1 to achieve resulting liquiditydecreaseLiquidity‚Äã  function decreaseLiquidity(    struct INonfungiblePositionManager.DecreaseLiquidityParams params  ) external returns (uint256 amount0, uint256 amount1)CopyDecreases the amount of liquidity in a position and accounts it to the positionParameters:‚ÄãNameTypeDescriptionparamsstruct INonfungiblePositionManager.DecreaseLiquidityParamstokenId The ID of the token for which liquidity is being decreased,Return Values:‚ÄãNameTypeDescriptionamount0uint256The amount of token0 accounted to the position's tokens owedamount1uint256The amount of token1 accounted to the position's tokens owedcollect‚Äã  function collect(    struct INonfungiblePositionManager.CollectParams params  ) external returns (uint256 amount0, uint256 amount1)CopyCollects up to a maximum amount of fees owed to a specific position to the recipientParameters:‚ÄãNameTypeDescriptionparamsstruct INonfungiblePositionManager.CollectParamstokenId The ID of the NFT for which tokens are being collected,recipient The account that should receive the tokens,
amount0Max The maximum amount of token0 to collect,
amount1Max The maximum amount of token1 to collectReturn Values:‚ÄãNameTypeDescriptionamount0uint256The amount of fees collected in token0amount1uint256The amount of fees collected in token1burn‚Äã  function burn(    uint256 tokenId  ) externalCopyBurns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens
must be collected first.Parameters:‚ÄãNameTypeDescriptiontokenIduint256The ID of the token that is being burned_getAndIncrementNonce‚Äã  function _getAndIncrementNonce(  ) internal returns (uint256)CopygetApproved‚Äã  function getApproved(  ) public view returns (address)CopyReturns the account approved for tokenId token.
Requirements:tokenId must exist._approve‚Äã  function _approve(  ) internalCopyOverrides _approve to use the operator in the position, which is packed with the position permit nonceEdit this pageHelpful?PreviousTickLensTestNextNonfungibleTokenPositionDescriptorFunctionsconstructorpositionsminttokenURIbaseURIincreaseLiquiditydecreaseLiquiditycollectburn_getAndIncrementNoncegetApproved_approveDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog



