








Pair | Uniswap





Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocol🏠V2 ProtocolTechnical ReferenceSmart ContractsPairHelpful?On this pagePairThis documentation covers Uniswap-specific functionality. For ERC-20 functionality, see Pair (ERC-20).CodeUniswapV2Pair.solAddressSee Pair Addresses.EventsMint​event Mint(address indexed sender, uint amount0, uint amount1);CopyEmitted each time liquidity tokens are created via mint.Burn​event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);CopyEmitted each time liquidity tokens are destroyed via burn.Swap​event Swap(  address indexed sender,  uint amount0In,  uint amount1In,  uint amount0Out,  uint amount1Out,  address indexed to);CopyEmitted each time a swap occurs via swap.Sync​event Sync(uint112 reserve0, uint112 reserve1);CopyEmitted each time reserves are updated via mint, burn, swap, or sync.Read-Only FunctionsMINIMUM_LIQUIDITY​function MINIMUM_LIQUIDITY() external pure returns (uint);CopyReturns 1000 for all pairs. See Minimum Liquidity.factory​function factory() external view returns (address);CopyReturns the factory address.token0​function token0() external view returns (address);CopyReturns the address of the pair token with the lower sort order.token1​function token1() external view returns (address);CopyReturns the address of the pair token with the higher sort order.getReserves​function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);CopyReturns the reserves of token0 and token1 used to price trades and distribute liquidity. See Pricing. Also returns the block.timestamp (mod 2**32) of the last block during which an interaction occured for the pair.price0CumulativeLast​function price0CumulativeLast() external view returns (uint);CopySee Oracles.price1CumulativeLast​function price1CumulativeLast() external view returns (uint);CopySee Oracles.kLast​function kLast() external view returns (uint);CopyReturns the product of the reserves as of the most recent liquidity event. See Protocol Charge Calculation.State-Changing Functionsmint​function mint(address to) external returns (uint liquidity);CopyCreates pool tokens.Emits Mint, Sync, Transfer.burn​function burn(address to) external returns (uint amount0, uint amount1);CopyDestroys pool tokens.Emits Burn, Sync, Transfer.swap​function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;CopySwaps tokens. For regular swaps, data.length must be 0. Also see Flash Swaps.Emits Swap, Sync.skim​function skim(address to) external;CopySee the whitepaper.sync​function sync() external;CopySee the whitepaper.Emits Sync.Interfaceimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol';Copypragma solidity >=0.5.0;interface IUniswapV2Pair {  event Approval(address indexed owner, address indexed spender, uint value);  event Transfer(address indexed from, address indexed to, uint value);  function name() external pure returns (string memory);  function symbol() external pure returns (string memory);  function decimals() external pure returns (uint8);  function totalSupply() external view returns (uint);  function balanceOf(address owner) external view returns (uint);  function allowance(address owner, address spender) external view returns (uint);  function approve(address spender, uint value) external returns (bool);  function transfer(address to, uint value) external returns (bool);  function transferFrom(address from, address to, uint value) external returns (bool);  function DOMAIN_SEPARATOR() external view returns (bytes32);  function PERMIT_TYPEHASH() external pure returns (bytes32);  function nonces(address owner) external view returns (uint);  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;  event Mint(address indexed sender, uint amount0, uint amount1);  event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);  event Swap(      address indexed sender,      uint amount0In,      uint amount1In,      uint amount0Out,      uint amount1Out,      address indexed to  );  event Sync(uint112 reserve0, uint112 reserve1);  function MINIMUM_LIQUIDITY() external pure returns (uint);  function factory() external view returns (address);  function token0() external view returns (address);  function token1() external view returns (address);  function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);  function price0CumulativeLast() external view returns (uint);  function price1CumulativeLast() external view returns (uint);  function kLast() external view returns (uint);  function mint(address to) external returns (uint liquidity);  function burn(address to) external returns (uint amount0, uint amount1);  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;  function skim(address to) external;  function sync() external;}CopyABIimport IUniswapV2Pair from '@uniswap/v2-core/build/IUniswapV2Pair.json'Copyhttps://unpkg.com/@uniswap/v2-core@1.0.0/build/IUniswapV2Pair.jsonEdit this pageHelpful?PreviousFactoryNextPair (ERC-20)MintBurnSwapSyncMINIMUM_LIQUIDITYfactorytoken0token1getReservesprice0CumulativeLastprice1CumulativeLastkLastmintburnswapskimsyncDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog



