,fname,text
0,p.org contracts v3 reference periphery interfaces IPeripheryPayments,"p.org contracts v3 reference periphery interfaces IPeripheryPayments.    IPeripheryPayments | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesIERC20MetadataIERC721PermitIMulticallINonfungiblePositionManagerINonfungibleTokenPositionDescriptorIPeripheryImmutableStateIPeripheryPaymentsIPeripheryPaymentsWithFeeIPoolInitializerIQuoterIQuoterV2ISelfPermitISwapRouterITickLensIV3MigratorexternalLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryInterfacesIPeripheryPaymentsHelpful?On this pageIPeripheryPaymentsFunctions to ease deposits and withdrawals of ETHFunctions‚ÄãunwrapWETH9‚Äã function unwrapWETH9( uint256 amountMinimum, address recipient ) externalCopyUnwraps the contract's WETH9 balance and sends it to recipient as ETH.The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.Parameters:‚ÄãNameTypeDescriptionamountMinimumuint256The minimum amount of WETH9 to unwraprecipientaddressThe address receiving ETHrefundETH‚Äã function refundETH( ) externalCopyRefunds any ETH balance held by this contract to the msg.senderUseful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amountsweepToken‚Äã function sweepToken( address token, uint256 amountMinimum, address recipient ) externalCopyTransfers the full amount of a token held by this contract to recipientThe amountMinimum parameter prevents malicious contracts from stealing the token from usersParameters:‚ÄãNameTypeDescriptiontokenaddressThe contract address of the token which will be transferred to recipientamountMinimumuint256The minimum amount of token required for a transferrecipientaddressThe destination address of the tokenEdit this pageHelpful?PreviousIPeripheryImmutableStateNextIPeripheryPaymentsWithFeeFunctionsunwrapWETH9refundETHsweepTokenDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
1,p.org sdk v1 overview,"p.org sdk v1 overview.    Overview | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKOverviewGuidesGetting StartedTechnical ReferenceDataComputationFormatOrchestrationTransactConstantsTypesüè†V1 SDKOverviewHelpful?The Uniswap V1 SDKThis is the original documentation for the Uniswap V1 SDK, released in 2019. The Uniswap V1 SDK is no longer under development, for the most recent implementation of the SDK, see the V3 SDK.Helpful?PreviousOther ExportsNextGetting StartedDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
2,p.org contracts permit2 reference allowance transfer,"p.org contracts permit2 reference allowance transfer.    AllowanceTransfer | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2OverviewTechnical ReferenceSignatureTransferAllowanceTransferV2 ProtocolV1 Protocolüè†Permit2Technical ReferenceAllowanceTransferHelpful?On this pageAllowanceTransferSource CodeOverview‚ÄãThe main entry points on this contract are:approveUse approve when you do not want to set token permissions through signature validation.permitUse permit when you do want to set token permissions through signature validation.transferFromUse transferFrom when you want to transfer a token and have the necessary permissions to do so.Functions‚Äãapprove‚ÄãFunction Signaturefunction approve(address token, address spender, uint160 amount, uint48 expiration) externalCopyParameterstoken - the token address to approvespender - the spender address to approveamount - the approved amount of the token, type(uint160).max is treated as an unlimited allowanceexpiration - the timestamp at which the approval is no longer valid, passing in 0 will expire the permissions at block.timestampSingle permit‚ÄãFunction Signaturefunction permit(address owner, PermitSingle memory permitSingle, bytes calldata signature) external;CopyParametersowner - the address of the token‚Äôs ownerpermitSingle - constructed with the following:struct PermitSingle {  // the permit data for a single token allowance  PermitDetails details;  // address permissioned on the allowed tokens  address spender;  // deadline on the permit signature  uint256 sigDeadline; }struct PermitDetails {  // ERC20 token address  address token;  // the maximum amount allowed to spend  uint160 amount;  // timestamp at which a spender's token allowances become invalid  uint48 expiration;  // an incrementing value indexed per owner,token,and spender for each signature  uint48 nonce; }Copysignature - the signature over the permit data. Supports EOA signatures, compact signatures defined by EIP-2098, and contract signatures defined by EIP-1271Batched permit‚ÄãFunction Signaturefunction permit(address owner, PermitBatch memory permitBatch, bytes calldata signature) external;CopyParametersowner - the address of the token‚Äôs ownerpermitBatch - constructed with the following:struct PermitBatch {  // the permit data for multiple token allowances  PermitDetails[] details;  // address permissioned on the allowed tokens  address spender;  // deadline on the permit signature  uint256 sigDeadline; }struct PermitDetails {  // ERC20 token address  address token;  // the maximum amount allowed to spend  uint160 amount;  // timestamp at which a spender's token allowances become invalid  uint48 expiration;  // an incrementing value indexed per owner,token,and spender for each signature  uint48 nonce; }Copysignature - the signature over the permit data. Supports EOA signatures, compact signatures defined by EIP-2098, and contract signatures defined by EIP-1271Single transferFrom‚ÄãFunction Signaturefunction transferFrom(address from, address to, uint160 amount, address token) external;CopyParametersfrom - the address to transfer the token fromto - the address of the recipientamount - the amount of the token to transfer, the maximum amount is type(uint160).maxtoken - the address of the token to be transferredBatched transferFrom‚ÄãFunction Signaturefunction transferFrom(AllowanceTransferDetails[] calldata transferDetails) external;CopyParameterstransferDetails - constructed with the followingstruct AllowanceTransferDetails {  // the owner of the token  address from;  // the recipient of the token  address to;  // the amount of the token  uint160 amount;  // the token to be transferred  address token; }CopyNonce Schema‚ÄãThe nonces used to protect against replay attacks of signatures are similar to standard incrementing nonces. However, we pack nonces with an allowed amount, and an allowed duration. This means that nonces are incremented per owner, per token, and per spender. Which further implies that you could sign two different permits at the same time with the same nonces and they won‚Äôt cancel each other out so long as the token or spender differ.The mapping nonces are packed in is defined as follows:mapping(address => mapping(address => mapping(address => PackedAllowance))) public allowance;Copyand indexed as follows:PackedAllowance allowanceInformation = allowance[ownerAddress][tokenAddress][spenderAddress];uint48 nonce = allowanceInformation.nonce;CopySecurity Considerations‚ÄãSimilar to the security considerations outlined in SignatureTransfer, integrating contracts need to perform valid safety checks on the caller and pass in correct addresses for the from argument in any transfer calls.All amounts on the AllowanceTransfer contract are of type uint160 so make sure integrating contracts safely downcast if they have to. See how Permit2Lib downcasts safely.Edit this pageHelpful?PreviousSignatureTransferNextOverviewOverviewFunctionsapproveSingle permitBatched permitSingle transferFromBatched transferFromNonce SchemaSecurity ConsiderationsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
3,p.org sdk v3 reference classes SqrtPriceMath,"p.org sdk v3 reference classes SqrtPriceMath.    SqrtPriceMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesSqrtPriceMathHelpful?On this pageSqrtPriceMath@uniswap/v3-sdk / Exports / SqrtPriceMathClass: SqrtPriceMathTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãgetAmount0DeltagetAmount1DeltagetNextSqrtPriceFromAmount0RoundingUpgetNextSqrtPriceFromAmount1RoundingDowngetNextSqrtPriceFromInputgetNextSqrtPriceFromOutputConstructors‚Äãconstructor‚Äã‚Ä¢ Private new SqrtPriceMath()Cannot be constructed.Defined in‚Äãutils/sqrtPriceMath.ts:23Methods‚ÄãgetAmount0Delta‚Äã‚ñ∏ Static getAmount0Delta(sqrtRatioAX96, sqrtRatioBX96, liquidity, roundUp): defaultParameters‚ÄãNameTypesqrtRatioAX96defaultsqrtRatioBX96defaultliquiditydefaultroundUpbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:25getAmount1Delta‚Äã‚ñ∏ Static getAmount1Delta(sqrtRatioAX96, sqrtRatioBX96, liquidity, roundUp): defaultParameters‚ÄãNameTypesqrtRatioAX96defaultsqrtRatioBX96defaultliquiditydefaultroundUpbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:38getNextSqrtPriceFromAmount0RoundingUp‚Äã‚ñ∏ Static Private getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96, liquidity, amount, add): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountdefaultaddbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:71getNextSqrtPriceFromAmount1RoundingDown‚Äã‚ñ∏ Static Private getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96, liquidity, amount, add): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountdefaultaddbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:100getNextSqrtPriceFromInput‚Äã‚ñ∏ Static getNextSqrtPriceFromInput(sqrtPX96, liquidity, amountIn, zeroForOne): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountIndefaultzeroForOnebooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:48getNextSqrtPriceFromOutput‚Äã‚ñ∏ Static getNextSqrtPriceFromOutput(sqrtPX96, liquidity, amountOut, zeroForOne): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountOutdefaultzeroForOnebooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:57Helpful?PreviousSelfPermitNextStakerTable of contentsConstructorsMethodsConstructorsconstructorMethodsgetAmount0DeltagetAmount1DeltagetNextSqrtPriceFromAmount0RoundingUpgetNextSqrtPriceFromAmount1RoundingDowngetNextSqrtPriceFromInputgetNextSqrtPriceFromOutputDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
4,p.org contracts v2 overview,"p.org contracts v2 overview.    Overview | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolOverviewHelpful?The Uniswap V2 Smart ContractsWelcome to the Uniswap protocol V2 docs.The pages here contain conceptual and technical documentation of the Uniswap V2 protocol.If you are new to Uniswap, you might want to check out the Protocol overview first.You can also take a look at the V2 Protocol Whitepaper.Developer linksThe V2 Uniswap protocol is separated across two repositoriesuniswap-v2-coreuniswap-v2-peripheryThe V2 SDK, which can assist developers when interacting with the Uniswap V2 Protocol can be found here.uniswap-sdkuniswap-sdk-coreEdit this pageHelpful?PreviousAllowanceTransferNextHow Uniswap worksDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
5,p.org sdk core reference classes Ether#chainid,"p.org sdk core reference classes Ether#chainid.    Ether | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesEtherHelpful?On this pageEther@uniswap/sdk-core / Exports / EtherClass: EtherEther is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnetsHierarchy‚ÄãNativeCurrency‚Ü≥ EtherTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãchainIddecimalsisNativeisTokennamesymbol_etherCacheAccessors‚ÄãwrappedMethods‚ÄãequalsonChainConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new Ether(chainId)Parameters‚ÄãNameTypechainIdnumberOverrides‚ÄãNativeCurrency.constructorDefined in‚Äãentities/ether.ts:11Properties‚ÄãchainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãNativeCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãNativeCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: trueInherited from‚ÄãNativeCurrency.isNativeDefined in‚Äãentities/nativeCurrency.ts:7isToken‚Äã‚Ä¢ Readonly isToken: falseInherited from‚ÄãNativeCurrency.isTokenDefined in‚Äãentities/nativeCurrency.ts:8name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãNativeCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãNativeCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29_etherCache‚Äã‚ñ™ Static Private _etherCache: Object = {}Index signature‚Äã‚ñ™ [chainId: number]: EtherDefined in‚Äãentities/ether.ts:21Accessors‚Äãwrapped‚Äã‚Ä¢ get wrapped(): TokenReturn the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to be used in UniswapReturns‚ÄãTokenOverrides‚ÄãNativeCurrency.wrappedDefined in‚Äãentities/ether.ts:15Methods‚Äãequals‚Äã‚ñ∏ equals(other): booleanReturns whether this currency is functionally equivalent to the other currencyParameters‚ÄãNameTypeDescriptionotherCurrencythe other currencyReturns‚ÄãbooleanOverrides‚ÄãNativeCurrency.equalsDefined in‚Äãentities/ether.ts:27onChain‚Äã‚ñ∏ Static onChain(chainId): EtherParameters‚ÄãNameTypechainIdnumberReturns‚ÄãEtherDefined in‚Äãentities/ether.ts:23Helpful?PreviousCurrencyAmountNextFractionHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertieschainIddecimalsisNativeisTokennamesymbol_etherCacheAccessorswrappedMethodsequalsonChainDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
6,p.org contracts v2 guides interface integration custom interface linking,"p.org contracts v2 guides interface integration custom interface linking.    Custom Linking | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationUsing the APICustom LinkingIframe IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolGuidesInterface IntegrationCustom LinkingHelpful?On this pageQuery ParametersThe Uniswap front-end supports URL query parameters to allow for custom linking to the Uniswap frontend. Users and developers can use these query parameters to link to the Uniswap frontend with custom prefilled settings.Each Page has specific available URL parameters that can be set. Global parameters can be used on all pages.A parameter used on an incorrect page will have no effect on frontend settings. Parameters not set with a URL parameter will be set to standard frontend defaults.Global‚ÄãParameterTypeDescriptionthemeStringSets them to dark or light mode.Theme Options‚ÄãTheme can be set as light or dark.Example Usage‚Äãhttps://app.uniswap.org/#/swap?theme=darkSwap Page‚ÄãParameterTypeDescriptioninputCurrencyaddressInput currency that will be swapped for output currency.outputCurrencyaddress or ETHOutput currency that input currency will be swapped for.exactAmountnumberThe custom token amount to buy or sell.exactFieldstringThe field to set custom token amount for. Must be input or output.Defaults‚ÄãETH defaults as the input currency. When a different token is selected for either input or output ETH will default as the opposite selected currency.Constraints‚ÄãAddresses must be valid ERC20 addresses. Slippage and amount values must be valid numbers accepted by the frontend (or error will prevent from swapping). Slippage can 0, or within the range 10->9999 bips (which converts to 0%, 0.01%->99%)When selecting ETH as the output currency a user must also choose an inputCurrency that is not ETH (to prevent ETH being populated in both fields)Setting Amounts‚ÄãTwo parameters, exactField and exactAmount can be used to set specific token amounts to be sold or bought. Both fields must be set in the URL or there will be no effect on the settings.Example Usage‚Äãhttps://app.uniswap.org/#/swap?exactField=input&exactAmount=10&inputCurrency=0x0F5D2fB29fb7d3CFeE444a200298f468908cC942Pool Page‚ÄãThe Pool page is made up of 2 subroutes: add, remove.Add Liquidity‚ÄãParameterTypeDescriptionToken0addressPool to withdraw liquidity from. (Must be an ERC20 address with an existing token)Token1addressPool to withdraw liquidity from. (Must be an ERC20 address with an existing token)Example Usage‚Äãhttps://app.uniswap.org/#/add/v2/0x6B175474E89094C44Da98b954EedeAC495271d0F/0xdAC17F958D2ee523a2206206994597C13D831ec7Remove Liquidity‚ÄãParameterTypeDescriptionToken0addressPool to withdraw liquidity from. (Must be an ERC20 address with an existing token)Token1addressPool to withdraw liquidity from. (Must be an ERC20 address with an existing token)Example Usage‚Äãhttps://app.uniswap.org/#/remove/0x6B175474E89094C44Da98b954EedeAC495271d0F-0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2Edit this pageHelpful?PreviousUsing the APINextIframe IntegrationGlobalTheme OptionsExample UsageSwap PageDefaultsConstraintsSetting AmountsExample UsagePool PageAdd LiquidityExample UsageRemove LiquidityExample UsageDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
7,p.org contracts v3 reference core interfaces pool IUniswapV3PoolState#observations,"p.org contracts v3 reference core interfaces pool IUniswapV3PoolState#observations.    IUniswapV3PoolState | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesIERC20MinimalIUniswapV3FactoryIUniswapV3PoolIUniswapV3PoolDeployercallbackPoolIUniswapV3PoolActionsIUniswapV3PoolDerivedStateIUniswapV3PoolEventsIUniswapV3PoolImmutablesIUniswapV3PoolOwnerActionsIUniswapV3PoolStateLibrariesGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreInterfacesPoolIUniswapV3PoolStateHelpful?On this pageIUniswapV3PoolStateThese methods compose the pool's state, and can change with any frequency including multiple times per transactionFunctions‚Äãslot0‚Äã function slot0( ) external view returns (uint160 sqrtPriceX96, int24 tick, uint16 observationIndex, uint16 observationCardinality, uint16 observationCardinalityNext, uint8 feeProtocol, bool unlocked)CopyThe 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.Return Values:‚ÄãNameTypeDescriptionsqrtPriceX96uint160The current price of the pool as a sqrt(token1/token0) Q64.96 valuetickint24The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary.observationIndexuint16The index of the last oracle observation that was written,observationCardinalityuint16The current maximum number of observations stored in the pool,observationCardinalityNextuint16The next maximum number of observations, to be updated when the observation.feeProtocoluint8The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0is the lower 4 bits.Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.unlockedboolWhether the pool is currently locked to reentrancyfeeGrowthGlobal0X128‚Äã function feeGrowthGlobal0X128( ) external view returns (uint256)CopyThe fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the poolThis value can overflow the uint256feeGrowthGlobal1X128‚Äã function feeGrowthGlobal1X128( ) external view returns (uint256)CopyThe fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the poolThis value can overflow the uint256protocolFees‚Äã function protocolFees( ) external view returns (uint128 token0, uint128 token1)CopyThe amounts of token0 and token1 that are owed to the protocolProtocol fees will never exceed uint128 max in either tokenliquidity‚Äã function liquidity( ) external view returns (uint128)CopyThe currently in range liquidity available to the poolThis value has no relationship to the total liquidity across all ticksticks‚Äã function ticks( int24 tick ) external view returns (uint128 liquidityGross, int128 liquidityNet, uint256 feeGrowthOutside0X128, uint256 feeGrowthOutside1X128, int56 tickCumulativeOutside, uint160 secondsPerLiquidityOutsideX128, uint32 secondsOutside, bool initialized)CopyLook up information about a specific tick in the poolParameters:‚ÄãNameTypeDescriptiontickint24The tick to look upReturn Values:‚ÄãNameTypeDescriptionliquidityGrossuint128the total amount of position liquidity that uses the pool either as tick lower or tick upper,liquidityNetint128how much liquidity changes when the pool price crosses the tick,feeGrowthOutside0X128uint256the fee growth on the other side of the tick from the current tick in token0,feeGrowthOutside1X128uint256the fee growth on the other side of the tick from the current tick in token1, feeGrowthOutsideX128 values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and are used to compute snapshots.tickCumulativeOutsideint56secondsPerLiquidityOutsideX128uint160secondsOutsideuint32initializedboola specific position.tickBitmap‚Äã function tickBitmap(  int16 wordPosition ) external view returns (uint256)CopyReturns 256 packed tick initialized boolean values. See TickBitmap for more informationpositions‚Äã function positions( bytes32 key ) external view returns (uint128 _liquidity, uint256 feeGrowthInside0LastX128, uint256 feeGrowthInside1LastX128, uint128 tokensOwed0, uint128 tokensOwed1)CopyReturns the information about a position by the position's keyParameters:‚ÄãNameTypeDescriptionkeybytes32The position's key is a hash of a preimage composed by the owner, tickLower and tickUpperReturn Values:‚ÄãNameTypeDescription_liquiditybytes32The amount of liquidity in the position,feeGrowthInside0LastX128uint256fee growth of token0 inside the tick range as of the last mint/burn/poke,feeGrowthInside1LastX128uint256fee growth of token1 inside the tick range as of the last mint/burn/poke,tokensOwed0uint128the computed amount of token0 owed to the position as of the last mint/burn/poke,tokensOwed1uint128the computed amount of token1 owed to the position as of the last mint/burn/pokeobservations‚Äã function observations( uint256 index ) external view returns (uint32 blockTimestamp, int56 tickCumulative, uint160 secondsPerLiquidityCumulativeX128, bool initialized)CopyReturns data about a specific observation indexYou most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.Parameters:‚ÄãNameTypeDescriptionindexuint256The element of the observations array to fetchReturn Values:‚ÄãNameTypeDescriptionblockTimestampuint256The timestamp of the observation,tickCumulativeint56the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,secondsPerLiquidityCumulativeX128uint160the seconds per in range liquidity for the life of the pool as of the observation timestampinitializedboolwhether the observation has been initialized and the values are safe to useEdit this pageHelpful?PreviousIUniswapV3PoolOwnerActionsNextBitMathFunctionsslot0feeGrowthGlobal0X128feeGrowthGlobal1X128protocolFeesliquiditytickstickBitmappositionsobservationsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
8,p.org concepts governance adversarial circumstances,"p.org concepts governance adversarial circumstances.    Adversarial Circumstances | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchWhat Is Uniswap?The Uniswap ProtocolProtocol ConceptsGovernanceOverviewProcessBeginners Guide to VotingGlossaryAdversarial CircumstancesChangelogResearchResourcesGlossaryüè†GovernanceAdversarial CircumstancesHelpful?On this pageAdversarial CircumstancesThis document explores some adversarial circumstances which Uniswap Governance may encounter in the future. Its goal is to help those interested in Uniswap Governance understand the reasoning behind some of its design, its limitations, and potential avenues for growth.Scenario 1‚ÄãA good faith proposal is brought to vote but is found to have an exploitable edge case. A bad faith actor uses a series of DeFi leveraging strategies to quickly buy enough UNI during the voting period to sway the vote in favor of the proposal, passing it and exploiting the vulnerability.Circumvention‚ÄãUNI voting power must be delegated to an address either entirely before a proposal has been submitted or during the proposal delay period. For now, the proposal delay is set to one block, which is about 15 seconds. A proposal delay of one block leaves no opportunity for a third party to find an exploitable edge case and opportunistically purchase uni, self delegate and sway the vote.In the future, Uniswap Governance may vote to increase the proposal delay. While there are obvious benefits to an increased proposal delay, It may introduce some potential adverse outcomes such as opportunistic edge case exploitation.Scenario 2‚ÄãA bad faith proposal is crafted and submitted to vote, which is unambiguously not in the best interest of Uniswap Governance. Multiple parties collude ahead of time to corner the UNI market to force the proposal through, gain access to the UNI reserves, and drain the funds.Circumvention‚ÄãSince UNI is a freely tradable asset, anyone can attempt a governance takeover via market buying. That said, to force-pass a bad faith vote would require a minimum of 40 million UNI. If not outright impossible, this amount would be prohibitively expensive and likely cost more when accounting for price fluctuation than the net gain from the attack.If a group somehow achieved a bad faith takeover, Timelock's delay would give affected agents time to withdraw their assets from the protocol. This would also be an opportunity to fork the protocol, a path that would likely be taken by the remaining good-faith actors.Scenario 3‚ÄãA single party uses a flash loan to push through a proposal, potentially creating a pseudo-DDOS attack by spamming governance with proposals and preventing effective use.Circumvention‚ÄãA delegated balance of 2.5 million UNI is required to submit a vote, but the balance check is set exactly one block in the past. This prevents any flash loan proposals from being created, as flash loans cannot execute outside of a single block.The proposer must also maintain a minimum balance of 2.5 million UNI throughout the voting period, or anyone may cancel the proposal. This balance maintenance check prevents many highly leveraged proposal techniques that may span several blocks.Scenario 4‚ÄãA bad faith proposal is created, which will genuinely incentivize bad faith voting.Example: ""The treasury will be drained. Any votes in favor will be sent the balance of the treasury. Any votes opposed will be locked from the funds of the treasury.""Circumvention‚ÄãNo mechanism explicitly prevents this type of scenario, but market forces disincentivize it.Because the treasury is comprised of UNI tokens exclusively, the market would react appropriately if a vote were to pass that would jeopardize the economic viability of Uniswap Governance and the UNI token. By the time the vote would pass, UNI's price would have fallen so low as to make the attack fruitless.UNI acting as the only asset of the governance treasury disincentivizes this form of bad faith voting. Uniswap Governance may choose in the future to diversify governance assets. While there are many benefits to this path, some fringe possibilities such as incentivized bad faith voting may appear.Helpful?PreviousGlossaryNextChangelogScenario 1CircumventionScenario 2CircumventionScenario 3CircumventionScenario 4CircumventionDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
9,p.org sdk 1.0.0 reference computation,p.org sdk 1.0.0 reference computation. 
10,p.org sdk v3 reference classes Trade#createuncheckedtrade,"p.org sdk v3 reference classes Trade#createuncheckedtrade.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTradeHelpful?On this pageTrade@uniswap/v3-sdk / Exports / TradeClass: Trade<TInput, TOutput, TTradeType>Represents a trade executed against a set of routes where some percentage of the input is split across each route.Each route has its own set of pools. Pools can not be re-used across routes.Does not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and when it is executed.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessors‚ÄãexecutionPriceinputAmountoutputAmountpriceImpactrouteMethods‚ÄãmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Trade<TInput, TOutput, TTradeType>(__namedParameters)Construct a trade by passing in the pre-computed property valuesType parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyTTradeTypeextends TradeTypeParameters‚ÄãNameType__namedParametersObject__namedParameters.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]__namedParameters.tradeTypeTTradeTypeDefined in‚Äãentities/trade.ts:397Properties‚Äã_executionPrice‚Äã‚Ä¢ Private _executionPrice: undefined | Price<TInput, TOutput>The cached result of the computed execution priceDefined in‚Äãentities/trade.ts:143_inputAmount‚Äã‚Ä¢ Private _inputAmount: undefined | CurrencyAmount<TInput>The cached result of the input amount computationDefined in‚Äãentities/trade.ts:97_outputAmount‚Äã‚Ä¢ Private _outputAmount: undefined | CurrencyAmount<TOutput>The cached result of the output amount computationDefined in‚Äãentities/trade.ts:120_priceImpact‚Äã‚Ä¢ Private _priceImpact: undefined | PercentThe cached result of the price impact computationDefined in‚Äãentities/trade.ts:164swaps‚Äã‚Ä¢ Readonly swaps: { inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]The swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.Defined in‚Äãentities/trade.ts:82tradeType‚Äã‚Ä¢ Readonly tradeType: TTradeTypeThe type of the trade, either exact in or exact out.Defined in‚Äãentities/trade.ts:91Accessors‚ÄãexecutionPrice‚Äã‚Ä¢ get executionPrice(): Price<TInput, TOutput>The price expressed in terms of output amount/input amount.Returns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/trade.ts:148inputAmount‚Äã‚Ä¢ get inputAmount(): CurrencyAmount<TInput>The input amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TInput>Defined in‚Äãentities/trade.ts:102outputAmount‚Äã‚Ä¢ get outputAmount(): CurrencyAmount<TOutput>The output amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TOutput>Defined in‚Äãentities/trade.ts:125priceImpact‚Äã‚Ä¢ get priceImpact(): PercentReturns the percent difference between the route's mid price and the price impactReturns‚ÄãPercentDefined in‚Äãentities/trade.ts:169route‚Äã‚Ä¢ get route(): Route<TInput, TOutput>DeprecatedDeprecated in favor of 'swaps' property. If the trade consists of multiple routes this will return an error.When the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.Returns‚ÄãRoute<TInput, TOutput>Defined in‚Äãentities/trade.ts:73Methods‚ÄãmaximumAmountIn‚Äã‚ñ∏ maximumAmountIn(slippageTolerance, amountIn?): CurrencyAmount<TInput>Get the maximum amount in that can be spent via this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountInCurrencyAmount<TInput>-Returns‚ÄãCurrencyAmount<TInput>The amount inDefined in‚Äãentities/trade.ts:456minimumAmountOut‚Äã‚ñ∏ minimumAmountOut(slippageTolerance, amountOut?): CurrencyAmount<TOutput>Get the minimum amount that must be received from this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountOutCurrencyAmount<TOutput>-Returns‚ÄãCurrencyAmount<TOutput>The amount outDefined in‚Äãentities/trade.ts:438worstExecutionPrice‚Äã‚ñ∏ worstExecutionPrice(slippageTolerance): Price<TInput, TOutput>Return the execution price after accounting for slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentthe allowed tolerated slippageReturns‚ÄãPrice<TInput, TOutput>The execution priceDefined in‚Äãentities/trade.ts:471bestTradeExactIn‚Äã‚ñ∏ Static bestTradeExactIn<TInput, TOutput>(pools, currencyAmountIn, currencyOut, __namedParameters?, currentPools?, nextAmountIn?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_INPUT>[]>Given a list of pools, and a fixed amount in, returns the top maxNumResults trades that go from an input token amount to an output token, making at most maxHops hops. Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyAmountInCurrencyAmount<TInput>undefinedused in recursion; the original value of the currencyAmountIn parametercurrencyOutTOutputundefinedthe desired currency out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountInCurrencyAmount<Currency>currencyAmountInexact amount of input currency to spendbestTradesTrade<TInput, TOutput, EXACT_INPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>[]>The exact in tradeDefined in‚Äãentities/trade.ts:495bestTradeExactOut‚Äã‚ñ∏ Static bestTradeExactOut<TInput, TOutput>(pools, currencyIn, currencyAmountOut, __namedParameters?, currentPools?, nextAmountOut?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>similar to the above method but instead targets a fixed output amount given a list of pools, and a fixed amount out, returns the top maxNumResults trades that go from an input token to an output token amount, making at most maxHops hops note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyInTInputundefinedthe currency to spendcurrencyAmountOutCurrencyAmount<TOutput>undefinedthe desired currency amount out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountOutCurrencyAmount<Currency>currencyAmountOutthe exact amount of currency outbestTradesTrade<TInput, TOutput, EXACT_OUTPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>The exact out tradeDefined in‚Äãentities/trade.ts:576createUncheckedTrade‚Äã‚ñ∏ Static createUncheckedTrade<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.inputAmountCurrencyAmount<TInput>-constructorArguments.outputAmountCurrencyAmount<TOutput>-constructorArguments.routeRoute<TInput, TOutput>-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:346createUncheckedTradeWithMultipleRoutes‚Äã‚ñ∏ Static createUncheckedTradeWithMultipleRoutes<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:377exactIn‚Äã‚ñ∏ Static exactIn<TInput, TOutput>(route, amountIn): Promise<Trade<TInput, TOutput, EXACT_INPUT>>Constructs an exact in trade with the given amount in and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact in tradeamountInCurrencyAmount<TInput>The amount being passed inReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>>The exact in tradeDefined in‚Äãentities/trade.ts:194exactOut‚Äã‚ñ∏ Static exactOut<TInput, TOutput>(route, amountOut): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>>Constructs an exact out trade with the given amount out and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact out tradeamountOutCurrencyAmount<TOutput>The amount returned by the tradeReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>>The exact out tradeDefined in‚Äãentities/trade.ts:209fromRoute‚Äã‚ñ∏ Static fromRoute<TInput, TOutput, TTradeType>(route, amount, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade by simulating swaps through the given routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>route to swap throughamountTTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>the amount specified, either input or output, depending on tradeTypetradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The routeDefined in‚Äãentities/trade.ts:226fromRoutes‚Äã‚ñ∏ Static fromRoutes<TInput, TOutput, TTradeType>(routes, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade from routes by simulating swapsType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionroutes{ amount: TTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]the routes to swap through and how much of the amount should be routed through eachtradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The tradeDefined in‚Äãentities/trade.ts:276Helpful?PreviousTickMathNextFeeAmountType parametersTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessorsexecutionPriceinputAmountoutputAmountpriceImpactrouteMethodsmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
11,p.org contracts v2 reference smart contracts pair erc 20#permit,p.org contracts v2 reference smart contracts pair erc 20#permit. 
12,p.org sdk core reference classes Percent#numerator,"p.org sdk core reference classes Percent#numerator.    Percent | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPercentHelpful?On this pagePercent@uniswap/sdk-core / Exports / PercentClass: PercentHierarchy‚ÄãFraction‚Ü≥ PercentTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatorisPercentnumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Percent(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshInherited from‚ÄãFraction.constructorDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26isPercent‚Äã‚Ä¢ Readonly isPercent: trueThis boolean prevents a fraction from being interpreted as a PercentDefined in‚Äãentities/fractions/percent.ts:19numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.addDefined in‚Äãentities/fractions/percent.ts:21divide‚Äã‚ñ∏ divide(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/percent.ts:33equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/percent.ts:29subtract‚Äã‚ñ∏ subtract(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/percent.ts:25toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber2format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/percent.ts:41toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber5format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/percent.ts:37Helpful?PreviousNativeCurrencyNextPriceHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatorisPercentnumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
13,p.org sdk v3 reference modules.md#address zero,p.org sdk v3 reference modules.md#address zero. 
14,p.org sdk v3 reference classes FullMath#muldivroundingup,"p.org sdk v3 reference classes FullMath#muldivroundingup.    FullMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesFullMathHelpful?On this pageFullMath@uniswap/v3-sdk / Exports / FullMathClass: FullMathTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãmulDivRoundingUpConstructors‚Äãconstructor‚Äã‚Ä¢ Private new FullMath()Cannot be constructed.Defined in‚Äãutils/fullMath.ts:8Methods‚ÄãmulDivRoundingUp‚Äã‚ñ∏ Static mulDivRoundingUp(a, b, denominator): defaultParameters‚ÄãNameTypeadefaultbdefaultdenominatordefaultReturns‚ÄãdefaultDefined in‚Äãutils/fullMath.ts:10Helpful?PreviousOverviewNextLiquidityMathTable of contentsConstructorsMethodsConstructorsconstructorMethodsmulDivRoundingUpDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
15,p.org contracts universal router technical reference#permit2 transfer from batch,"p.org contracts universal router technical reference#permit2 transfer from batch.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
16,p.org sdk web3 react guides connectors.md,p.org sdk web3 react guides connectors.md. 
17,p.org contracts v3 guides swaps single swaps,"p.org contracts v3 guides swaps single swaps.    Single Swaps | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapSingle SwapsMultihop SwapsProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolGuidesImplement A SwapSingle SwapsHelpful?On this pageSingle SwapsSwaps are the most common interaction with the Uniswap protocol. The following example shows you how to implement a single-path swap contract that uses two functions that you create:swapExactInputSingleswapExactOutputSingleThe swapExactInputSingle function is for performing exact input swaps, which swap a fixed amount of one token for a maximum possible amount of another token. This function uses the ExactInputSingleParams struct and the exactInputSingle function from the ISwapRouter interface.The swapExactOutputSingle function is for performing exact output swaps, which swap a minimum possible amount of one token for a fixed amount of another token. This function uses the ExactOutputSingleParams struct and the exactOutputSingle function from the ISwapRouter interface.For simplification, the example hardcodes the token contract addresses, but as explained further below the contract could be modified to change pools and tokens on a per transaction basis.When trading from a smart contract, the most important thing to keep in mind is that access to an external price source is required. Without this, trades can be frontrun for considerable loss.Note: The swap examples are not production ready code, and are implemented in a simplistic manner for the purpose of learning.Set Up the Contract‚ÄãDeclare the solidity version used to compile the contract, and abicoder v2 to allow arbitrary nested arrays and structs to be encoded and decoded in calldata, a feature used when executing a swap.// SPDX-License-Identifier: GPL-2.0-or-laterpragma solidity =0.7.6;pragma abicoder v2;CopyImport the two relevant contracts from the npm package installationimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';import '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';CopyCreate a contract called SwapExamples, and declare an immutable public variable swapRouter of type ISwapRouter. This allows us to call functions in the ISwapRouter interface.contract SwapExamples { // For the scope of these swap examples, // we will detail the design considerations when using `exactInput`, `exactInputSingle`, `exactOutput`, and `exactOutputSingle`. // It should be noted that for the sake of these examples we pass in the swap router as a constructor argument instead of inheriting it. // More advanced example contracts will detail how to inherit the swap router safely. // This example swaps DAI/WETH9 for single path swaps and DAI/USDC/WETH9 for multi path swaps. ISwapRouter public immutable swapRouter;CopyHardcode the token contract addresses and pool fee tiers for the example. In production, you would likely use an input parameter for this and pass the input into a memory variable, allowing the contract to change the pools and tokens it interacts with on a per transaction basis, but for conceptual simplicity, we are hardcoding them here. address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F; address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2; address public constant USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48; // For this example, we will set the pool fee to 0.3%. uint24 public constant poolFee = 3000; constructor(ISwapRouter _swapRouter) {  swapRouter = _swapRouter; }CopyExact Input Swaps‚ÄãThe caller must approve the contract to withdraw the tokens from the calling address's account to execute a swap. Remember that because our contract is a contract itself and not an extension of the caller (us); we must also approve the Uniswap protocol router contract to use the tokens that our contract will be in possession of after they have been withdrawn from the calling address (us).Then, transfer the amount of Dai from the calling address into our contract, and use amount as the value passed to the second approve. /// @notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9 /// using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router. /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed. /// @param amountIn The exact amount of DAI that will be swapped for WETH9. /// @return amountOut The amount of WETH9 received. function swapExactInputSingle(uint256 amountIn) external returns (uint256 amountOut) {  // msg.sender must approve this contract  // Transfer the specified amount of DAI to this contract.  TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amountIn);  // Approve the router to spend DAI.  TransferHelper.safeApprove(DAI, address(swapRouter), amountIn);CopySwap Input Parameters‚ÄãTo execute the swap function, we need to populate the ExactInputSingleParams with the necessary swap data. These parameters are found in the smart contract interfaces, which can be browsed here.A brief overview of the parameters:tokenIn The contract address of the inbound tokentokenOut The contract address of the outbound tokenfee The fee tier of the pool, used to determine the correct pool contract in which to execute the swaprecipient the destination address of the outbound tokendeadline: the unix time after which a swap will fail, to protect against long-pending transactions and wild swings in pricesamountOutMinimum: we are setting to zero, but this is a significant risk in production. For a real deployment, this value should be calculated using our SDK or an onchain price oracle - this helps protect against getting an unusually bad price for a trade due to a front running sandwich or another type of price manipulationsqrtPriceLimitX96: We set this to zero - which makes this parameter inactive. In production, this value can be used to set the limit for the price the swap will push the pool to, which can help protect against price impact or for setting up logic in a variety of price-relevant mechanisms.Call the function‚Äã  // Naively set amountOutMinimum to 0. In production, use an oracle or other data source to choose a safer value for amountOutMinimum.  // We also set the sqrtPriceLimitx96 to be 0 to ensure we swap our exact input amount.  ISwapRouter.ExactInputSingleParams memory params =   ISwapRouter.ExactInputSingleParams({    tokenIn: DAI,    tokenOut: WETH9,    fee: poolFee,    recipient: msg.sender,    deadline: block.timestamp,    amountIn: amountIn,    amountOutMinimum: 0,    sqrtPriceLimitX96: 0   });  // The call to `exactInputSingle` executes the swap.  amountOut = swapRouter.exactInputSingle(params); }CopyExact Output Swaps‚ÄãExact Output swaps a minimum possible amount of the input token for a fixed amount of the outbound token. This is the less common swap style - but useful in a variety of circumstances.Because this example transfers in the inbound asset in anticipation of the swap - its possible that some of the inbound token will be left over after the swap is executed, which is why we pay it back to the calling address at the end of the swap.Call the function‚Äã/// @notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH./// @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,/// the calling address will need to approve for a slightly higher amount, anticipating some variance./// @param amountOut The exact amount of WETH9 to receive from the swap./// @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9./// @return amountIn The amount of DAI actually spent in the swap.function swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum) external returns (uint256 amountIn) {  // Transfer the specified amount of DAI to this contract.  TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amountInMaximum);  // Approve the router to spend the specified `amountInMaximum` of DAI.  // In production, you should choose the maximum amount to spend based on oracles or other data sources to achieve a better swap.  TransferHelper.safeApprove(DAI, address(swapRouter), amountInMaximum);  ISwapRouter.ExactOutputSingleParams memory params =   ISwapRouter.ExactOutputSingleParams({    tokenIn: DAI,    tokenOut: WETH9,    fee: poolFee,    recipient: msg.sender,    deadline: block.timestamp,    amountOut: amountOut,    amountInMaximum: amountInMaximum,    sqrtPriceLimitX96: 0   });  // Executes the swap returning the amountIn needed to spend to receive the desired amountOut.  amountIn = swapRouter.exactOutputSingle(params);  // For exact output swaps, the amountInMaximum may not have all been spent.  // If the actual amount spent (amountIn) is less than the specified maximum amount, we must refund the msg.sender and approve the swapRouter to spend 0.  if (amountIn < amountInMaximum) {   TransferHelper.safeApprove(DAI, address(swapRouter), 0);   TransferHelper.safeTransfer(DAI, msg.sender, amountInMaximum - amountIn);  } }CopyA Complete Single Swap Contract‚Äã// SPDX-License-Identifier: GPL-2.0-or-laterpragma solidity =0.7.6;pragma abicoder v2;import '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';import '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';contract SwapExamples { // For the scope of these swap examples, // we will detail the design considerations when using // `exactInput`, `exactInputSingle`, `exactOutput`, and `exactOutputSingle`. // It should be noted that for the sake of these examples, we purposefully pass in the swap router instead of inherit the swap router for simplicity. // More advanced example contracts will detail how to inherit the swap router safely. ISwapRouter public immutable swapRouter; // This example swaps DAI/WETH9 for single path swaps and DAI/USDC/WETH9 for multi path swaps. address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F; address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2; address public constant USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48; // For this example, we will set the pool fee to 0.3%. uint24 public constant poolFee = 3000; constructor(ISwapRouter _swapRouter) {  swapRouter = _swapRouter; } /// @notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9 /// using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router. /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed. /// @param amountIn The exact amount of DAI that will be swapped for WETH9. /// @return amountOut The amount of WETH9 received. function swapExactInputSingle(uint256 amountIn) external returns (uint256 amountOut) {  // msg.sender must approve this contract  // Transfer the specified amount of DAI to this contract.  TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amountIn);  // Approve the router to spend DAI.  TransferHelper.safeApprove(DAI, address(swapRouter), amountIn);  // Naively set amountOutMinimum to 0. In production, use an oracle or other data source to choose a safer value for amountOutMinimum.  // We also set the sqrtPriceLimitx96 to be 0 to ensure we swap our exact input amount.  ISwapRouter.ExactInputSingleParams memory params =   ISwapRouter.ExactInputSingleParams({    tokenIn: DAI,    tokenOut: WETH9,    fee: poolFee,    recipient: msg.sender,    deadline: block.timestamp,    amountIn: amountIn,    amountOutMinimum: 0,    sqrtPriceLimitX96: 0   });  // The call to `exactInputSingle` executes the swap.  amountOut = swapRouter.exactInputSingle(params); } /// @notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH. /// @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable, /// the calling address will need to approve for a slightly higher amount, anticipating some variance. /// @param amountOut The exact amount of WETH9 to receive from the swap. /// @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9. /// @return amountIn The amount of DAI actually spent in the swap. function swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum) external returns (uint256 amountIn) {  // Transfer the specified amount of DAI to this contract.  TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amountInMaximum);  // Approve the router to spend the specifed `amountInMaximum` of DAI.  // In production, you should choose the maximum amount to spend based on oracles or other data sources to acheive a better swap.  TransferHelper.safeApprove(DAI, address(swapRouter), amountInMaximum);  ISwapRouter.ExactOutputSingleParams memory params =   ISwapRouter.ExactOutputSingleParams({    tokenIn: DAI,    tokenOut: WETH9,    fee: poolFee,    recipient: msg.sender,    deadline: block.timestamp,    amountOut: amountOut,    amountInMaximum: amountInMaximum,    sqrtPriceLimitX96: 0   });  // Executes the swap returning the amountIn needed to spend to receive the desired amountOut.  amountIn = swapRouter.exactOutputSingle(params);  // For exact output swaps, the amountInMaximum may not have all been spent.  // If the actual amount spent (amountIn) is less than the specified maximum amount, we must refund the msg.sender and approve the swapRouter to spend 0.  if (amountIn < amountInMaximum) {   TransferHelper.safeApprove(DAI, address(swapRouter), 0);   TransferHelper.safeTransfer(DAI, msg.sender, amountInMaximum - amountIn);  } }}CopyEdit this pageHelpful?PreviousSet Up Your Local EnvironmentNextMultihop SwapsSet Up the ContractExact Input SwapsSwap Input ParametersCall the functionExact Output SwapsCall the functionA Complete Single Swap ContractDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
18,p.org sdk v3 reference classes Tick#index,p.org sdk v3 reference classes Tick#index.    Tick | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickHelpful?On this pageTick@uniswap/v3-sdk / Exports / TickClass: TickTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãindexliquidityGrossliquidityNetConstructors‚Äãconstructor‚Äã‚Ä¢ new Tick(__namedParameters)Parameters‚ÄãNameType__namedParametersTickConstructorArgsDefined in‚Äãentities/tick.ts:17Properties‚Äãindex‚Äã‚Ä¢ Readonly index: numberDefined in‚Äãentities/tick.ts:13liquidityGross‚Äã‚Ä¢ Readonly liquidityGross: defaultDefined in‚Äãentities/tick.ts:14liquidityNet‚Äã‚Ä¢ Readonly liquidityNet: defaultDefined in‚Äãentities/tick.ts:15Helpful?PreviousSwapRouterNextTickLibraryTable of contentsConstructorsPropertiesConstructorsconstructorPropertiesindexliquidityGrossliquidityNetDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
19,p.org contracts v3 reference periphery SwapRouter,"p.org contracts v3 reference periphery SwapRouter.    SwapRouter | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripherySwapRouterHelpful?On this pageSwapRouterRouter for stateless execution of swaps against Uniswap V3Input parameters are viewable on the Swap Router InterfaceFunctions‚Äãconstructor‚Äã function constructor( ) publicCopyuniswapV3SwapCallback‚Äã function uniswapV3SwapCallback( int256 amount0Delta, int256 amount1Delta, bytes data ) externalCopyCalled to msg.sender after executing a swap via IUniswapV3Pool#swap.In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.Parameters:‚ÄãNameTypeDescriptionamount0Deltaint256The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.amount1Deltaint256The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.databytesAny data passed through by the caller via the IUniswapV3PoolActions#swap callexactInputSingle‚Äã function exactInputSingle( struct ISwapRouter.ExactInputSingleParams params ) external returns (uint256 amountOut)CopySwaps amountIn of one token for as much as possible of another tokenParameters:‚ÄãNameTypeDescriptionparamsstruct ISwapRouter.ExactInputSingleParamsThe parameters necessary for the swap, encoded as ExactInputSingleParams in calldataReturn Values:‚ÄãNameTypeDescriptionamountOutuint256The amount of the received tokenexactInput‚Äã function exactInput( struct ISwapRouter.ExactInputParams params ) external returns (uint256 amountOut)CopySwaps amountIn of one token for as much as possible of another along the specified pathParameters:‚ÄãNameTypeDescriptionparamsstruct ISwapRouter.ExactInputParamsThe parameters necessary for the multi-hop swap, encoded as ExactInputParams in calldataReturn Values:‚ÄãNameTypeDescriptionamountOutuint256The amount of the received tokenexactOutputSingle‚Äã function exactOutputSingle( struct ISwapRouter.ExactOutputSingleParams params ) external returns (uint256 amountIn)CopySwaps as little as possible of one token for amountOut of another tokenParameters:‚ÄãNameTypeDescriptionparamsstruct ISwapRouter.ExactOutputSingleParamsThe parameters necessary for the swap, encoded as ExactOutputSingleParams in calldataReturn Values:‚ÄãNameTypeDescriptionamountInuint256The amount of the input tokenexactOutput‚Äã function exactOutput( struct ISwapRouter.ExactOutputParams params ) external returns (uint256 amountIn)CopySwaps as little as possible of one token for amountOut of another along the specified path (reversed)Parameters:‚ÄãNameTypeDescriptionparamsstruct ISwapRouter.ExactOutputParamsThe parameters necessary for the multi-hop swap, encoded as ExactOutputParams in calldataReturn Values:‚ÄãNameTypeDescriptionamountInuint256The amount of the input tokenEdit this pageHelpful?PreviousNonfungibleTokenPositionDescriptorNextV3MigratorFunctionsconstructoruniswapV3SwapCallbackexactInputSingleexactInputexactOutputSingleexactOutputDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
20,p.org contracts universal router technical reference#nft20,"p.org contracts universal router technical reference#nft20.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
21,p.org contracts v3 reference periphery interfaces ITickLens,"p.org contracts v3 reference periphery interfaces ITickLens.    ITickLens | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesIERC20MetadataIERC721PermitIMulticallINonfungiblePositionManagerINonfungibleTokenPositionDescriptorIPeripheryImmutableStateIPeripheryPaymentsIPeripheryPaymentsWithFeeIPoolInitializerIQuoterIQuoterV2ISelfPermitISwapRouterITickLensIV3MigratorexternalLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryInterfacesITickLensHelpful?On this pageITickLensProvides functions for fetching chunks of tick data for a poolThis avoids the waterfall of fetching the tick bitmap, parsing the bitmap to know which ticks to fetch, and then sending additional multicalls to fetch the tick dataFunctions‚ÄãgetPopulatedTicksInWord‚Äã function getPopulatedTicksInWord( address pool, int16 tickBitmapIndex ) external returns (struct ITickLens.PopulatedTick[] populatedTicks)CopyGet all the tick data for the populated ticks from a word of the tick bitmap of a poolParameters:‚ÄãNameTypeDescriptionpooladdressThe address of the pool for which to fetch populated tick datatickBitmapIndexint16The index of the word in the tick bitmap for which to parse the bitmap and fetch all the populated ticksReturn Values:‚ÄãNameTypeDescriptionpopulatedTicksITickLens.PopulatedTick[]An array of tick data for the given word in the tick bitmapEdit this pageHelpful?PreviousISwapRouterNextIV3MigratorFunctionsgetPopulatedTicksInWordDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
22,p.org contracts v2 reference smart contracts router 02#getamountout,"p.org contracts v2 reference smart contracts router 02#getamountout.    Router02 | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsRouter02Helpful?On this pageRouter02Because routers are stateless and do not hold token balances, they can be replaced safely and trustlessly, if necessary. This may happen if more efficient smart contract patterns are discovered, or if additional functionality is desired. For this reason, routers have release numbers, starting at 01. This is currently recommended release, 02.CodeUniswapV2Router02.solAddressUniswapV2Router02 is deployed at 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D on the Ethereum mainnet, and the Ropsten, Rinkeby, G√∂rli, and Kovan testnets. It was built from commit 6961711.Read-Only Functionsfactory‚Äãfunction factory() external pure returns (address);CopyReturns factory address.WETH‚Äãfunction WETH() external pure returns (address);CopyReturns the canonical WETH address on the Ethereum mainnet, or the Ropsten, Rinkeby, G√∂rli, or Kovan testnets.quote‚ÄãSee quote.getAmountOut‚ÄãSee getAmountOut.getAmountIn‚ÄãSee getAmountIn.getAmountsOut‚Äãfunction getAmountsOut(uint amountIn, address[] memory path) public view returns (uint[] memory amounts);CopySee getAmountsOut.getAmountsIn‚Äãfunction getAmountsIn(uint amountOut, address[] memory path) public view returns (uint[] memory amounts);CopySee getAmountsIn.State-Changing FunctionsaddLiquidity‚Äãfunction addLiquidity( address tokenA, address tokenB, uint amountADesired, uint amountBDesired, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB, uint liquidity);CopyAdds liquidity to an ERC-20‚áÑERC-20 pool.To cover all possible scenarios, msg.sender should have already given the router an allowance of at least amountADesired/amountBDesired on tokenA/tokenB.Always adds assets at the ideal ratio, according to the price when the transaction is executed.If a pool for the passed tokens does not exists, one is created automatically, and exactly amountADesired/amountBDesired tokens are added.NameTypetokenAaddressA pool token.tokenBaddressA pool token.amountADesireduintThe amount of tokenA to add as liquidity if the B/A price is <= amountBDesired/amountADesired (A depreciates).amountBDesireduintThe amount of tokenB to add as liquidity if the A/B price is <= amountADesired/amountBDesired (B depreciates).amountAMinuintBounds the extent to which the B/A price can go up before the transaction reverts. Must be <= amountADesired.amountBMinuintBounds the extent to which the A/B price can go up before the transaction reverts. Must be <= amountBDesired.toaddressRecipient of the liquidity tokens.deadlineuintUnix timestamp after which the transaction will revert.amountAuintThe amount of tokenA sent to the pool.amountBuintThe amount of tokenB sent to the pool.liquidityuintThe amount of liquidity tokens minted.addLiquidityETH‚Äãfunction addLiquidityETH( address token, uint amountTokenDesired, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external payable returns (uint amountToken, uint amountETH, uint liquidity);CopyAdds liquidity to an ERC-20‚áÑWETH pool with ETH.To cover all possible scenarios, msg.sender should have already given the router an allowance of at least amountTokenDesired on token.Always adds assets at the ideal ratio, according to the price when the transaction is executed.msg.value is treated as a amountETHDesired.Leftover ETH, if any, is returned to msg.sender.If a pool for the passed token and WETH does not exists, one is created automatically, and exactly amountTokenDesired/msg.value tokens are added.NameTypetokenaddressA pool token.amountTokenDesireduintThe amount of token to add as liquidity if the WETH/token price is <= msg.value/amountTokenDesired (token depreciates).msg.value (amountETHDesired)uintThe amount of ETH to add as liquidity if the token/WETH price is <= amountTokenDesired/msg.value (WETH depreciates).amountTokenMinuintBounds the extent to which the WETH/token price can go up before the transaction reverts. Must be <= amountTokenDesired.amountETHMinuintBounds the extent to which the token/WETH price can go up before the transaction reverts. Must be <= msg.value.toaddressRecipient of the liquidity tokens.deadlineuintUnix timestamp after which the transaction will revert.amountTokenuintThe amount of token sent to the pool.amountETHuintThe amount of ETH converted to WETH and sent to the pool.liquidityuintThe amount of liquidity tokens minted.removeLiquidity‚Äãfunction removeLiquidity( address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB);CopyRemoves liquidity from an ERC-20‚áÑERC-20 pool.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenAaddressA pool token.tokenBaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountAMinuintThe minimum amount of tokenA that must be received for the transaction not to revert.amountBMinuintThe minimum amount of tokenB that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountAuintThe amount of tokenA received.amountBuintThe amount of tokenB received.removeLiquidityETH‚Äãfunction removeLiquidityETH( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external returns (uint amountToken, uint amountETH);CopyRemoves liquidity from an ERC-20‚áÑWETH pool and receive ETH.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountTokenuintThe amount of token received.amountETHuintThe amount of ETH received.removeLiquidityWithPermit‚Äãfunction removeLiquidityWithPermit( address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountA, uint amountB);CopyRemoves liquidity from an ERC-20‚áÑERC-20 pool without pre-approval, thanks to permit.NameTypetokenAaddressA pool token.tokenBaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountAMinuintThe minimum amount of tokenA that must be received for the transaction not to revert.amountBMinuintThe minimum amount of tokenB that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountAuintThe amount of tokenA received.amountBuintThe amount of tokenB received.removeLiquidityETHWithPermit‚Äãfunction removeLiquidityETHWithPermit( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountToken, uint amountETH);CopyRemoves liquidity from an ERC-20‚áÑWETTH pool and receive ETH without pre-approval, thanks to permit.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountTokenuintThe amount of token received.amountETHuintThe amount of ETH received.removeLiquidityETHSupportingFeeOnTransferTokens‚Äãfunction removeLiquidityETHSupportingFeeOnTransferTokens( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external returns (uint amountETH);CopyIdentical to removeLiquidityETH, but succeeds for tokens that take a fee on transfer.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountETHuintThe amount of ETH received.removeLiquidityETHWithPermitSupportingFeeOnTransferTokens‚Äãfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountETH);CopyIdentical to removeLiquidityETHWithPermit, but succeeds for tokens that take a fee on transfer.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountETHuintThe amount of ETH received.swapExactTokensForTokens‚Äãfunction swapExactTokensForTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopySwaps an exact amount of input tokens for as many output tokens as possible, along the route determined by the path. The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountIn on the input token.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapTokensForExactTokens‚Äãfunction swapTokensForExactTokens( uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopyReceive an exact amount of output tokens for as few input tokens as possible, along the route determined by the path. The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate tokens to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountInMax on the input token.NameTypeamountOutuintThe amount of output tokens to receive.amountInMaxuintThe maximum amount of input tokens that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactETHForTokens‚Äãfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts);CopySwaps an exact amount of ETH for as many output tokens as possible, along the route determined by the path. The first element of path must be WETH, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).NameTypemsg.value (amountIn)uintThe amount of ETH to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapTokensForExactETH‚Äãfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopyReceive an exact amount of ETH for as few input tokens as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountInMax on the input token.If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountOutuintThe amount of ETH to receive.amountInMaxuintThe maximum amount of input tokens that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of ETH.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactTokensForETH‚Äãfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopySwaps an exact amount of tokens for as much ETH as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the ETH.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapETHForExactTokens‚Äãfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts);CopyReceive an exact amount of tokens for as little ETH as possible, along the route determined by the path. The first element of path must be WETH, the last is the output token and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).Leftover ETH, if any, is returned to msg.sender.NameTypeamountOutuintThe amount of tokens to receive.msg.value (amountInMax)uintThe maximum amount of ETH that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactTokensForTokensSupportingFeeOnTransferTokens‚Äãfunction swapExactTokensForTokensSupportingFeeOnTransferTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external;CopyIdentical to swapExactTokensForTokens, but succeeds for tokens that take a fee on transfer.msg.sender should have already given the router an allowance of at least amountIn on the input token.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.swapExactETHForTokensSupportingFeeOnTransferTokens‚Äãfunction swapExactETHForTokensSupportingFeeOnTransferTokens( uint amountOutMin, address[] calldata path, address to, uint deadline) external payable;CopyIdentical to swapExactETHForTokens, but succeeds for tokens that take a fee on transfer.NameTypemsg.value (amountIn)uintThe amount of ETH to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.swapExactTokensForETHSupportingFeeOnTransferTokens‚Äãfunction swapExactTokensForETHSupportingFeeOnTransferTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external;CopyIdentical to swapExactTokensForETH, but succeeds for tokens that take a fee on transfer.If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the ETH.deadlineuintUnix timestamp after which the transaction will revert.Interfaceimport '@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol';Copypragma solidity >=0.6.2;interface IUniswapV2Router01 { function factory() external pure returns (address); function WETH() external pure returns (address); function addLiquidity(  address tokenA,  address tokenB,  uint amountADesired,  uint amountBDesired,  uint amountAMin,  uint amountBMin,  address to,  uint deadline ) external returns (uint amountA, uint amountB, uint liquidity); function addLiquidityETH(  address token,  uint amountTokenDesired,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external payable returns (uint amountToken, uint amountETH, uint liquidity); function removeLiquidity(  address tokenA,  address tokenB,  uint liquidity,  uint amountAMin,  uint amountBMin,  address to,  uint deadline ) external returns (uint amountA, uint amountB); function removeLiquidityETH(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external returns (uint amountToken, uint amountETH); function removeLiquidityWithPermit(  address tokenA,  address tokenB,  uint liquidity,  uint amountAMin,  uint amountBMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountA, uint amountB); function removeLiquidityETHWithPermit(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountToken, uint amountETH); function swapExactTokensForTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external returns (uint[] memory amounts); function swapTokensForExactTokens(  uint amountOut,  uint amountInMax,  address[] calldata path,  address to,  uint deadline ) external returns (uint[] memory amounts); function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)  external  payable  returns (uint[] memory amounts); function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)  external  returns (uint[] memory amounts); function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)  external  returns (uint[] memory amounts); function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)  external  payable  returns (uint[] memory amounts); function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB); function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut); function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn); function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts); function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);}interface IUniswapV2Router02 is IUniswapV2Router01 { function removeLiquidityETHSupportingFeeOnTransferTokens(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external returns (uint amountETH); function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountETH); function swapExactTokensForTokensSupportingFeeOnTransferTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external; function swapExactETHForTokensSupportingFeeOnTransferTokens(  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external payable; function swapExactTokensForETHSupportingFeeOnTransferTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external;}CopyABIimport IUniswapV2Router02 from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'Copyhttps://unpkg.com/@uniswap/v2-periphery@1.1.0-beta.0/build/IUniswapV2Router02.jsonEdit this pageHelpful?PreviousRouter01NextCommon ErrorsfactoryWETHquotegetAmountOutgetAmountIngetAmountsOutgetAmountsInaddLiquidityaddLiquidityETHremoveLiquidityremoveLiquidityETHremoveLiquidityWithPermitremoveLiquidityETHWithPermitremoveLiquidityETHSupportingFeeOnTransferTokensremoveLiquidityETHWithPermitSupportingFeeOnTransferTokensswapExactTokensForTokensswapTokensForExactTokensswapExactETHForTokensswapTokensForExactETHswapExactTokensForETHswapETHForExactTokensswapExactTokensForTokensSupportingFeeOnTransferTokensswapExactETHForTokensSupportingFeeOnTransferTokensswapExactTokensForETHSupportingFeeOnTransferTokensDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
23,p.org contracts universal router technical reference#x2y2 721,"p.org contracts universal router technical reference#x2y2 721.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
24,p.org sdk v3 reference interfaces BestTradeOptions,p.org sdk v3 reference interfaces BestTradeOptions.    BestTradeOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesBestTradeOptionsHelpful?On this pageBestTradeOptions@uniswap/v3-sdk / Exports / BestTradeOptionsInterface: BestTradeOptionsTable of contents‚ÄãProperties‚ÄãmaxHopsmaxNumResultsProperties‚ÄãmaxHops‚Äã‚Ä¢ Optional maxHops: numberDefined in‚Äãentities/trade.ts:50maxNumResults‚Äã‚Ä¢ Optional maxNumResults: numberDefined in‚Äãentities/trade.ts:48Helpful?PreviousAllowedPermitArgumentsNextClaimOptionsTable of contentsPropertiesPropertiesmaxHopsmaxNumResultsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
25,p.org contracts v3 guides swaps multihop swaps,"p.org contracts v3 guides swaps multihop swaps.    Multihop Swaps | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapSingle SwapsMultihop SwapsProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolGuidesImplement A SwapMultihop SwapsHelpful?On this pageMultihop SwapsIntroduction‚ÄãThe examples below are implementations of the two styles of multi-hop swapping available on v3. The examples below are not production ready code, and are implemented in a simplistic manner for the purpose of learning.Setting up the Contract‚ÄãDeclare the solidity version that will be used to compile the contract, and the abicoder v2 to allow arbitrary nested arrays and structs to be encoded and decoded in calldata, a feature we use when executing a swap.// SPDX-License-Identifier: GPL-2.0-or-laterpragma solidity =0.7.6;pragma abicoder v2;CopyImport the two needed contracts from the npm package installation.import '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';import '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';CopyCreate a contract called SwapExamples, and declare an immutable public variable swapRouter of type ISwapRouter. This allows us to call functions in the ISwapRouter interface.contract SwapExamples { // For the scope of these swap examples, // we will detail the design considerations when using `exactInput`, `exactInputSingle`, `exactOutput`, and `exactOutputSingle`. // It should be noted that for the sake of these examples we pass in the swap router as a constructor argument instead of inheriting it. // More advanced example contracts will detail how to inherit the swap router safely. // This example swaps DAI/WETH9 for single path swaps and DAI/USDC/WETH9 for multi path swaps. ISwapRouter public immutable swapRouter;CopyHardcode the token contract addresses and pool fee tiers for the example. In production, you would likely use an input parameter for this and pass the input into a memory variable, allowing the contract to change the pools and tokens it interacts with on a per transaction basis, but for conceptual simplicity, we are hardcoding them here. address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F; address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2; address public constant USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48; // For this example, we will set the pool fee to 0.3%. uint24 public constant poolFee = 3000; constructor(ISwapRouter _swapRouter) {  swapRouter = _swapRouter; }CopyExact Input Multi Hop Swaps‚ÄãExact input multi hop swaps will swap a fixed amount on a given input token for the maximum amount possible for a given output, and can include an arbitrary number of intermediary swaps.Input Parameters‚Äãpath: The path is a sequence of (tokenAddress - fee - tokenAddress), which are the variables needed to compute each pool contract address in our sequence of swaps. The multihop swap router code will automatically find the correct pool with these variables, and execute the swap needed within each pool in our sequence.recipient: the destination address of the outbound asset.deadline: the unix time after which a transaction will be reverted, to protect against long delays and the increased chance of large price swings therein.amountIn: the amount of the inbound assetamountOutMin: the minimum amount of the outbound asset, less than which will cause the transaction to revert. For the sake of this example we will set it to 0, in production one will need to use the SDK to quote an expected price, or an on chain price oracle for more advanced manipulation resistant systems.Calling the function‚Äã /// @notice swapExactInputMultihop swaps a fixed amount of DAI for a maximum possible amount of WETH9 through an intermediary pool. /// For this example, we will swap DAI to USDC, then USDC to WETH9 to achieve our desired output. /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed. /// @param amountIn The amount of DAI to be swapped. /// @return amountOut The amount of WETH9 received after the swap. function swapExactInputMultihop(uint256 amountIn) external returns (uint256 amountOut) {  // Transfer `amountIn` of DAI to this contract.  TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amountIn);  // Approve the router to spend DAI.  TransferHelper.safeApprove(DAI, address(swapRouter), amountIn);  // Multiple pool swaps are encoded through bytes called a `path`. A path is a sequence of token addresses and poolFees that define the pools used in the swaps.  // The format for pool encoding is (tokenIn, fee, tokenOut/tokenIn, fee, tokenOut) where tokenIn/tokenOut parameter is the shared token across the pools.  // Since we are swapping DAI to USDC and then USDC to WETH9 the path encoding is (DAI, 0.3%, USDC, 0.3%, WETH9).  ISwapRouter.ExactInputParams memory params =   ISwapRouter.ExactInputParams({    path: abi.encodePacked(DAI, poolFee, USDC, poolFee, WETH9),    recipient: msg.sender,    deadline: block.timestamp,    amountIn: amountIn,    amountOutMinimum: 0   });  // Executes the swap.  amountOut = swapRouter.exactInput(params); }CopyExact Output Multihop Swap‚ÄãAn exact output swap will swap a variable amount of the input token for a fixed amount of the outbound token. This is the less common technique for multihop swaps. The code for swapping is largely the same except for one notable difference, the Path is encoded backwards, as an exact output swap is executed in reverse order to pass down the necessary variables for the chain of transactionsInput Parameters‚Äãpath: The path is a sequence of tokenAddress Fee tokenAddress, encoded in reverse order, which are the variables needed to compute each pool contract address in our sequence of swaps. The multihop swap router code will automatically find the correct pool with these variables, and execute the swap needed within each pool in our sequence.recipient: the destination address of the outbound asset.deadline: the unix time after which a transaction will be reverted, to protect against long delays and the increased chance of large price swings therein.amountOut: The desired amount of WETH9.amountInMaximum: The maximum amount of DAI willing to be swapped for the specified amountOut of WETH9.Calling the function‚Äã /// @notice swapExactOutputMultihop swaps a minimum possible amount of DAI for a fixed amount of WETH through an intermediary pool. /// For this example, we want to swap DAI for WETH9 through a USDC pool but we specify the desired amountOut of WETH9. Notice how the path encoding is slightly different in for exact output swaps. /// @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable, /// the calling address will need to approve for a slightly higher amount, anticipating some variance. /// @param amountOut The desired amount of WETH9. /// @param amountInMaximum The maximum amount of DAI willing to be swapped for the specified amountOut of WETH9. /// @return amountIn The amountIn of DAI actually spent to receive the desired amountOut. function swapExactOutputMultihop(uint256 amountOut, uint256 amountInMaximum) external returns (uint256 amountIn) {  // Transfer the specified `amountInMaximum` to this contract.  TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amountInMaximum);  // Approve the router to spend `amountInMaximum`.  TransferHelper.safeApprove(DAI, address(swapRouter), amountInMaximum);  // The parameter path is encoded as (tokenOut, fee, tokenIn/tokenOut, fee, tokenIn)  // The tokenIn/tokenOut field is the shared token between the two pools used in the multiple pool swap. In this case USDC is the ""shared"" token.  // For an exactOutput swap, the first swap that occurs is the swap which returns the eventual desired token.  // In this case, our desired output token is WETH9 so that swap happens first, and is encoded in the path accordingly.  ISwapRouter.ExactOutputParams memory params =   ISwapRouter.ExactOutputParams({    path: abi.encodePacked(WETH9, poolFee, USDC, poolFee, DAI),    recipient: msg.sender,    deadline: block.timestamp,    amountOut: amountOut,    amountInMaximum: amountInMaximum   });  // Executes the swap, returning the amountIn actually spent.  amountIn = swapRouter.exactOutput(params);  // If the swap did not require the full amountInMaximum to achieve the exact amountOut then we refund msg.sender and approve the router to spend 0.  if (amountIn < amountInMaximum) {   TransferHelper.safeApprove(DAI, address(swapRouter), 0);   TransferHelper.safeTransferFrom(DAI, address(this), msg.sender, amountInMaximum - amountIn);  } }CopyThe Full Contract‚Äã// SPDX-License-Identifier: GPL-2.0-or-laterpragma solidity =0.7.6;pragma abicoder v2;import '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';import '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';contract SwapExamples { // For the scope of these swap examples, // we will detail the design considerations when using // `exactInput`, `exactInputSingle`, `exactOutput`, and `exactOutputSingle`. // It should be noted that for the sake of these examples, we purposefully pass in the swap router instead of inherit the swap router for simplicity. // More advanced example contracts will detail how to inherit the swap router safely. ISwapRouter public immutable swapRouter; // This example swaps DAI/WETH9 for single path swaps and DAI/USDC/WETH9 for multi path swaps. address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F; address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2; address public constant USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48; // For this example, we will set the pool fee to 0.3%. uint24 public constant poolFee = 3000; constructor(ISwapRouter _swapRouter) {  swapRouter = _swapRouter; } /// @notice swapInputMultiplePools swaps a fixed amount of DAI for a maximum possible amount of WETH9 through an intermediary pool. /// For this example, we will swap DAI to USDC, then USDC to WETH9 to achieve our desired output. /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed. /// @param amountIn The amount of DAI to be swapped. /// @return amountOut The amount of WETH9 received after the swap. function swapExactInputMultihop(uint256 amountIn) external returns (uint256 amountOut) {  // Transfer `amountIn` of DAI to this contract.  TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amountIn);  // Approve the router to spend DAI.  TransferHelper.safeApprove(DAI, address(swapRouter), amountIn);  // Multiple pool swaps are encoded through bytes called a `path`. A path is a sequence of token addresses and poolFees that define the pools used in the swaps.  // The format for pool encoding is (tokenIn, fee, tokenOut/tokenIn, fee, tokenOut) where tokenIn/tokenOut parameter is the shared token across the pools.  // Since we are swapping DAI to USDC and then USDC to WETH9 the path encoding is (DAI, 0.3%, USDC, 0.3%, WETH9).  ISwapRouter.ExactInputParams memory params =   ISwapRouter.ExactInputParams({    path: abi.encodePacked(DAI, poolFee, USDC, poolFee, WETH9),    recipient: msg.sender,    deadline: block.timestamp,    amountIn: amountIn,    amountOutMinimum: 0   });  // Executes the swap.  amountOut = swapRouter.exactInput(params); } /// @notice swapExactOutputMultihop swaps a minimum possible amount of DAI for a fixed amount of WETH through an intermediary pool. /// For this example, we want to swap DAI for WETH9 through a USDC pool but we specify the desired amountOut of WETH9. Notice how the path encoding is slightly different in for exact output swaps. /// @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable, /// the calling address will need to approve for a slightly higher amount, anticipating some variance. /// @param amountOut The desired amount of WETH9. /// @param amountInMaximum The maximum amount of DAI willing to be swapped for the specified amountOut of WETH9. /// @return amountIn The amountIn of DAI actually spent to receive the desired amountOut. function swapExactOutputMultihop(uint256 amountOut, uint256 amountInMaximum) external returns (uint256 amountIn) {  // Transfer the specified `amountInMaximum` to this contract.  TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amountInMaximum);  // Approve the router to spend `amountInMaximum`.  TransferHelper.safeApprove(DAI, address(swapRouter), amountInMaximum);  // The parameter path is encoded as (tokenOut, fee, tokenIn/tokenOut, fee, tokenIn)  // The tokenIn/tokenOut field is the shared token between the two pools used in the multiple pool swap. In this case USDC is the ""shared"" token.  // For an exactOutput swap, the first swap that occurs is the swap which returns the eventual desired token.  // In this case, our desired output token is WETH9 so that swap happpens first, and is encoded in the path accordingly.  ISwapRouter.ExactOutputParams memory params =   ISwapRouter.ExactOutputParams({    path: abi.encodePacked(WETH9, poolFee, USDC, poolFee, DAI),    recipient: msg.sender,    deadline: block.timestamp,    amountOut: amountOut,    amountInMaximum: amountInMaximum   });  // Executes the swap, returning the amountIn actually spent.  amountIn = swapRouter.exactOutput(params);  // If the swap did not require the full amountInMaximum to achieve the exact amountOut then we refund msg.sender and approve the router to spend 0.  if (amountIn < amountInMaximum) {   TransferHelper.safeApprove(DAI, address(swapRouter), 0);   TransferHelper.safeTransferFrom(DAI, address(this), msg.sender, amountInMaximum - amountIn);  } }}CopyEdit this pageHelpful?PreviousSingle SwapsNextSet Up Your ContractIntroductionSetting up the ContractExact Input Multi Hop SwapsInput ParametersCalling the functionExact Output Multihop SwapInput ParametersCalling the functionThe Full ContractDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
26,p.org sdk core reference classes Ether#equals,"p.org sdk core reference classes Ether#equals.    Ether | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesEtherHelpful?On this pageEther@uniswap/sdk-core / Exports / EtherClass: EtherEther is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnetsHierarchy‚ÄãNativeCurrency‚Ü≥ EtherTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãchainIddecimalsisNativeisTokennamesymbol_etherCacheAccessors‚ÄãwrappedMethods‚ÄãequalsonChainConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new Ether(chainId)Parameters‚ÄãNameTypechainIdnumberOverrides‚ÄãNativeCurrency.constructorDefined in‚Äãentities/ether.ts:11Properties‚ÄãchainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãNativeCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãNativeCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: trueInherited from‚ÄãNativeCurrency.isNativeDefined in‚Äãentities/nativeCurrency.ts:7isToken‚Äã‚Ä¢ Readonly isToken: falseInherited from‚ÄãNativeCurrency.isTokenDefined in‚Äãentities/nativeCurrency.ts:8name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãNativeCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãNativeCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29_etherCache‚Äã‚ñ™ Static Private _etherCache: Object = {}Index signature‚Äã‚ñ™ [chainId: number]: EtherDefined in‚Äãentities/ether.ts:21Accessors‚Äãwrapped‚Äã‚Ä¢ get wrapped(): TokenReturn the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to be used in UniswapReturns‚ÄãTokenOverrides‚ÄãNativeCurrency.wrappedDefined in‚Äãentities/ether.ts:15Methods‚Äãequals‚Äã‚ñ∏ equals(other): booleanReturns whether this currency is functionally equivalent to the other currencyParameters‚ÄãNameTypeDescriptionotherCurrencythe other currencyReturns‚ÄãbooleanOverrides‚ÄãNativeCurrency.equalsDefined in‚Äãentities/ether.ts:27onChain‚Äã‚ñ∏ Static onChain(chainId): EtherParameters‚ÄãNameTypechainIdnumberReturns‚ÄãEtherDefined in‚Äãentities/ether.ts:23Helpful?PreviousCurrencyAmountNextFractionHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertieschainIddecimalsisNativeisTokennamesymbol_etherCacheAccessorswrappedMethodsequalsonChainDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
27,p.org sdk v3 reference classes TickMath,"p.org sdk v3 reference classes TickMath.    TickMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickMathHelpful?On this pageTickMath@uniswap/v3-sdk / Exports / TickMathClass: TickMathTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãMAX_SQRT_RATIOMAX_TICKMIN_SQRT_RATIOMIN_TICKMethods‚ÄãgetSqrtRatioAtTickgetTickAtSqrtRatioConstructors‚Äãconstructor‚Äã‚Ä¢ Private new TickMath()Cannot be constructed.Defined in‚Äãutils/tickMath.ts:17Properties‚ÄãMAX_SQRT_RATIO‚Äã‚ñ™ Static MAX_SQRT_RATIO: defaultThe sqrt ratio corresponding to the maximum tick that could be used on any pool.Defined in‚Äãutils/tickMath.ts:35MAX_TICK‚Äã‚ñ™ Static MAX_TICK: number = -TickMath.MIN_TICKThe maximum tick that can be used on any pool.Defined in‚Äãutils/tickMath.ts:26MIN_SQRT_RATIO‚Äã‚ñ™ Static MIN_SQRT_RATIO: defaultThe sqrt ratio corresponding to the minimum tick that could be used on any pool.Defined in‚Äãutils/tickMath.ts:31MIN_TICK‚Äã‚ñ™ Static MIN_TICK: number = -887272The minimum tick that can be used on any pool.Defined in‚Äãutils/tickMath.ts:22Methods‚ÄãgetSqrtRatioAtTick‚Äã‚ñ∏ Static getSqrtRatioAtTick(tick): defaultReturns the sqrt ratio as a Q64.96 for the given tick. The sqrt ratio is computed as sqrt(1.0001)^tickParameters‚ÄãNameTypeDescriptionticknumberthe tick for which to compute the sqrt ratioReturns‚ÄãdefaultDefined in‚Äãutils/tickMath.ts:41getTickAtSqrtRatio‚Äã‚ñ∏ Static getTickAtSqrtRatio(sqrtRatioX96): numberReturns the tick corresponding to a given sqrt ratio, s.t. #getSqrtRatioAtTick(tick) <= sqrtRatioX96 and #getSqrtRatioAtTick(tick + 1) > sqrtRatioX96Parameters‚ÄãNameTypeDescriptionsqrtRatioX96defaultthe sqrt ratio as a Q64.96 for which to compute the tickReturns‚ÄãnumberDefined in‚Äãutils/tickMath.ts:82Helpful?PreviousTickListDataProviderNextTradeTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesMAX_SQRT_RATIOMAX_TICKMIN_SQRT_RATIOMIN_TICKMethodsgetSqrtRatioAtTickgetTickAtSqrtRatioDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
28,p.org contracts v2 reference smart contracts pair#token1,"p.org contracts v2 reference smart contracts pair#token1.    Pair | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsPairHelpful?On this pagePairThis documentation covers Uniswap-specific functionality. For ERC-20 functionality, see Pair (ERC-20).CodeUniswapV2Pair.solAddressSee Pair Addresses.EventsMint‚Äãevent Mint(address indexed sender, uint amount0, uint amount1);CopyEmitted each time liquidity tokens are created via mint.Burn‚Äãevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);CopyEmitted each time liquidity tokens are destroyed via burn.Swap‚Äãevent Swap( address indexed sender, uint amount0In, uint amount1In, uint amount0Out, uint amount1Out, address indexed to);CopyEmitted each time a swap occurs via swap.Sync‚Äãevent Sync(uint112 reserve0, uint112 reserve1);CopyEmitted each time reserves are updated via mint, burn, swap, or sync.Read-Only FunctionsMINIMUM_LIQUIDITY‚Äãfunction MINIMUM_LIQUIDITY() external pure returns (uint);CopyReturns 1000 for all pairs. See Minimum Liquidity.factory‚Äãfunction factory() external view returns (address);CopyReturns the factory address.token0‚Äãfunction token0() external view returns (address);CopyReturns the address of the pair token with the lower sort order.token1‚Äãfunction token1() external view returns (address);CopyReturns the address of the pair token with the higher sort order.getReserves‚Äãfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);CopyReturns the reserves of token0 and token1 used to price trades and distribute liquidity. See Pricing. Also returns the block.timestamp (mod 2**32) of the last block during which an interaction occured for the pair.price0CumulativeLast‚Äãfunction price0CumulativeLast() external view returns (uint);CopySee Oracles.price1CumulativeLast‚Äãfunction price1CumulativeLast() external view returns (uint);CopySee Oracles.kLast‚Äãfunction kLast() external view returns (uint);CopyReturns the product of the reserves as of the most recent liquidity event. See Protocol Charge Calculation.State-Changing Functionsmint‚Äãfunction mint(address to) external returns (uint liquidity);CopyCreates pool tokens.Emits Mint, Sync, Transfer.burn‚Äãfunction burn(address to) external returns (uint amount0, uint amount1);CopyDestroys pool tokens.Emits Burn, Sync, Transfer.swap‚Äãfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;CopySwaps tokens. For regular swaps, data.length must be 0. Also see Flash Swaps.Emits Swap, Sync.skim‚Äãfunction skim(address to) external;CopySee the whitepaper.sync‚Äãfunction sync() external;CopySee the whitepaper.Emits Sync.Interfaceimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol';Copypragma solidity >=0.5.0;interface IUniswapV2Pair { event Approval(address indexed owner, address indexed spender, uint value); event Transfer(address indexed from, address indexed to, uint value); function name() external pure returns (string memory); function symbol() external pure returns (string memory); function decimals() external pure returns (uint8); function totalSupply() external view returns (uint); function balanceOf(address owner) external view returns (uint); function allowance(address owner, address spender) external view returns (uint); function approve(address spender, uint value) external returns (bool); function transfer(address to, uint value) external returns (bool); function transferFrom(address from, address to, uint value) external returns (bool); function DOMAIN_SEPARATOR() external view returns (bytes32); function PERMIT_TYPEHASH() external pure returns (bytes32); function nonces(address owner) external view returns (uint); function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external; event Mint(address indexed sender, uint amount0, uint amount1); event Burn(address indexed sender, uint amount0, uint amount1, address indexed to); event Swap(  address indexed sender,  uint amount0In,  uint amount1In,  uint amount0Out,  uint amount1Out,  address indexed to ); event Sync(uint112 reserve0, uint112 reserve1); function MINIMUM_LIQUIDITY() external pure returns (uint); function factory() external view returns (address); function token0() external view returns (address); function token1() external view returns (address); function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast); function price0CumulativeLast() external view returns (uint); function price1CumulativeLast() external view returns (uint); function kLast() external view returns (uint); function mint(address to) external returns (uint liquidity); function burn(address to) external returns (uint amount0, uint amount1); function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external; function skim(address to) external; function sync() external;}CopyABIimport IUniswapV2Pair from '@uniswap/v2-core/build/IUniswapV2Pair.json'Copyhttps://unpkg.com/@uniswap/v2-core@1.0.0/build/IUniswapV2Pair.jsonEdit this pageHelpful?PreviousFactoryNextPair (ERC-20)MintBurnSwapSyncMINIMUM_LIQUIDITYfactorytoken0token1getReservesprice0CumulativeLastprice1CumulativeLastkLastmintburnswapskimsyncDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
29,p.org contracts v2 reference smart contracts pair#token0,"p.org contracts v2 reference smart contracts pair#token0.    Pair | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsPairHelpful?On this pagePairThis documentation covers Uniswap-specific functionality. For ERC-20 functionality, see Pair (ERC-20).CodeUniswapV2Pair.solAddressSee Pair Addresses.EventsMint‚Äãevent Mint(address indexed sender, uint amount0, uint amount1);CopyEmitted each time liquidity tokens are created via mint.Burn‚Äãevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);CopyEmitted each time liquidity tokens are destroyed via burn.Swap‚Äãevent Swap( address indexed sender, uint amount0In, uint amount1In, uint amount0Out, uint amount1Out, address indexed to);CopyEmitted each time a swap occurs via swap.Sync‚Äãevent Sync(uint112 reserve0, uint112 reserve1);CopyEmitted each time reserves are updated via mint, burn, swap, or sync.Read-Only FunctionsMINIMUM_LIQUIDITY‚Äãfunction MINIMUM_LIQUIDITY() external pure returns (uint);CopyReturns 1000 for all pairs. See Minimum Liquidity.factory‚Äãfunction factory() external view returns (address);CopyReturns the factory address.token0‚Äãfunction token0() external view returns (address);CopyReturns the address of the pair token with the lower sort order.token1‚Äãfunction token1() external view returns (address);CopyReturns the address of the pair token with the higher sort order.getReserves‚Äãfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);CopyReturns the reserves of token0 and token1 used to price trades and distribute liquidity. See Pricing. Also returns the block.timestamp (mod 2**32) of the last block during which an interaction occured for the pair.price0CumulativeLast‚Äãfunction price0CumulativeLast() external view returns (uint);CopySee Oracles.price1CumulativeLast‚Äãfunction price1CumulativeLast() external view returns (uint);CopySee Oracles.kLast‚Äãfunction kLast() external view returns (uint);CopyReturns the product of the reserves as of the most recent liquidity event. See Protocol Charge Calculation.State-Changing Functionsmint‚Äãfunction mint(address to) external returns (uint liquidity);CopyCreates pool tokens.Emits Mint, Sync, Transfer.burn‚Äãfunction burn(address to) external returns (uint amount0, uint amount1);CopyDestroys pool tokens.Emits Burn, Sync, Transfer.swap‚Äãfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;CopySwaps tokens. For regular swaps, data.length must be 0. Also see Flash Swaps.Emits Swap, Sync.skim‚Äãfunction skim(address to) external;CopySee the whitepaper.sync‚Äãfunction sync() external;CopySee the whitepaper.Emits Sync.Interfaceimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol';Copypragma solidity >=0.5.0;interface IUniswapV2Pair { event Approval(address indexed owner, address indexed spender, uint value); event Transfer(address indexed from, address indexed to, uint value); function name() external pure returns (string memory); function symbol() external pure returns (string memory); function decimals() external pure returns (uint8); function totalSupply() external view returns (uint); function balanceOf(address owner) external view returns (uint); function allowance(address owner, address spender) external view returns (uint); function approve(address spender, uint value) external returns (bool); function transfer(address to, uint value) external returns (bool); function transferFrom(address from, address to, uint value) external returns (bool); function DOMAIN_SEPARATOR() external view returns (bytes32); function PERMIT_TYPEHASH() external pure returns (bytes32); function nonces(address owner) external view returns (uint); function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external; event Mint(address indexed sender, uint amount0, uint amount1); event Burn(address indexed sender, uint amount0, uint amount1, address indexed to); event Swap(  address indexed sender,  uint amount0In,  uint amount1In,  uint amount0Out,  uint amount1Out,  address indexed to ); event Sync(uint112 reserve0, uint112 reserve1); function MINIMUM_LIQUIDITY() external pure returns (uint); function factory() external view returns (address); function token0() external view returns (address); function token1() external view returns (address); function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast); function price0CumulativeLast() external view returns (uint); function price1CumulativeLast() external view returns (uint); function kLast() external view returns (uint); function mint(address to) external returns (uint liquidity); function burn(address to) external returns (uint amount0, uint amount1); function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external; function skim(address to) external; function sync() external;}CopyABIimport IUniswapV2Pair from '@uniswap/v2-core/build/IUniswapV2Pair.json'Copyhttps://unpkg.com/@uniswap/v2-core@1.0.0/build/IUniswapV2Pair.jsonEdit this pageHelpful?PreviousFactoryNextPair (ERC-20)MintBurnSwapSyncMINIMUM_LIQUIDITYfactorytoken0token1getReservesprice0CumulativeLastprice1CumulativeLastkLastmintburnswapskimsyncDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
30,p.org sdk v3 reference classes Payments,"p.org sdk v3 reference classes Payments.    Payments | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPaymentsHelpful?On this pagePayments@uniswap/v3-sdk / Exports / PaymentsClass: PaymentsTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãencodeFeeBipsencodeRefundETHencodeSweepTokenencodeUnwrapWETH9Constructors‚Äãconstructor‚Äã‚Ä¢ Private new Payments()Cannot be constructed.Defined in‚Äãpayments.ts:25Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚Äãpayments.ts:20Methods‚ÄãencodeFeeBips‚Äã‚ñ∏ Static Private encodeFeeBips(fee): stringParameters‚ÄãNameTypefeePercentReturns‚ÄãstringDefined in‚Äãpayments.ts:27encodeRefundETH‚Äã‚ñ∏ Static encodeRefundETH(): stringReturns‚ÄãstringDefined in‚Äãpayments.ts:73encodeSweepToken‚Äã‚ñ∏ Static encodeSweepToken(token, amountMinimum, recipient, feeOptions?): stringParameters‚ÄãNameTypetokenTokenamountMinimumdefaultrecipientstringfeeOptions?FeeOptionsReturns‚ÄãstringDefined in‚Äãpayments.ts:49encodeUnwrapWETH9‚Äã‚ñ∏ Static encodeUnwrapWETH9(amountMinimum, recipient, feeOptions?): stringParameters‚ÄãNameTypeamountMinimumdefaultrecipientstringfeeOptions?FeeOptionsReturns‚ÄãstringDefined in‚Äãpayments.ts:31Helpful?PreviousNonfungiblePositionManagerNextPoolTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsencodeFeeBipsencodeRefundETHencodeSweepTokenencodeUnwrapWETH9DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
31,p.org contracts v3 reference periphery test Base64Test,p.org contracts v3 reference periphery test Base64Test.    Base64Test | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerTestBase64TestLiquidityAmountsTestMockTimeNonfungiblePositionManagerMockTimeSwapRouterNFTDescriptorTestPathTestPeripheryImmutableStateTestPoolAddressTestSelfPermitTestTestCallbackValidationTestERC20TestERC20MetadataTestERC20PermitAllowedTestMulticallTestPositionNFTOwnerTestUniswapV3CalleeTickLensTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryTestBase64TestHelpful?On this pageBase64TestFunctions‚Äãencode‚Äã function encode( ) external returns (string)CopygetGasCostOfEncode‚Äã function getGasCostOfEncode( ) external returns (uint256)CopyEdit this pageHelpful?PreviousRewardMathNextLiquidityAmountsTestFunctionsencodegetGasCostOfEncodeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
32,p.org sdk core reference classes Price#invert,"p.org sdk core reference classes Price#invert.    Price | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPriceHelpful?On this pagePrice@uniswap/sdk-core / Exports / PriceClass: Price<TBase, TQuote>Type parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyHierarchy‚ÄãFraction‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessors‚ÄãadjustedForDecimalsasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Price<TBase, TQuote>(...args)Construct a price, either with the base and quote currency amount, or theType parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyParameters‚ÄãNameType...args[TBase, TQuote, BigintIsh, BigintIsh] | [{ baseAmount: CurrencyAmount<TBase> ; quoteAmount: CurrencyAmount<TQuote> }]Overrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/price.ts:18Properties‚ÄãbaseCurrency‚Äã‚Ä¢ Readonly baseCurrency: TBaseDefined in‚Äãentities/fractions/price.ts:10denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25quoteCurrency‚Äã‚Ä¢ Readonly quoteCurrency: TQuoteDefined in‚Äãentities/fractions/price.ts:11scalar‚Äã‚Ä¢ Readonly scalar: FractionDefined in‚Äãentities/fractions/price.ts:12Accessors‚ÄãadjustedForDecimals‚Äã‚Ä¢ Private get adjustedForDecimals(): FractionGet the value scaled by decimals for formattingReturns‚ÄãFractionDefined in‚Äãentities/fractions/price.ts:77asFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.addDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.divideDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): Price<TQuote, TBase>Flip the price, switching the base and quote currencyReturns‚ÄãPrice<TQuote, TBase>Overrides‚ÄãFraction.invertDefined in‚Äãentities/fractions/price.ts:49lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply<TOtherQuote>(other): Price<TBase, TOtherQuote>Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currencyType parameters‚ÄãNameTypeTOtherQuoteextends CurrencyParameters‚ÄãNameTypeDescriptionotherPrice<TQuote, TOtherQuote>the other priceReturns‚ÄãPrice<TBase, TOtherQuote>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/price.ts:57quote‚Äã‚ñ∏ quote(currencyAmount): CurrencyAmount<TQuote>Return the amount of quote currency corresponding to a given amount of the base currencyParameters‚ÄãNameTypeDescriptioncurrencyAmountCurrencyAmount<TBase>the amount of base currency to quote against the priceReturns‚ÄãCurrencyAmount<TQuote>Defined in‚Äãentities/fractions/price.ts:67subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.subtractDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber4format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/price.ts:85toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/price.ts:81Helpful?PreviousPercentNextTokenType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessorsadjustedForDecimalsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
33,p.org sdk v3 reference interfaces FeeOptions,p.org sdk v3 reference interfaces FeeOptions.    FeeOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesFeeOptionsHelpful?On this pageFeeOptions@uniswap/v3-sdk / Exports / FeeOptionsInterface: FeeOptionsTable of contents‚ÄãProperties‚ÄãfeerecipientProperties‚Äãfee‚Äã‚Ä¢ fee: PercentThe percent of the output that will be taken as a fee.Defined in‚Äãpayments.ts:11recipient‚Äã‚Ä¢ recipient: stringThe recipient of the fee.Defined in‚Äãpayments.ts:16Helpful?PreviousCommonAddLiquidityOptionsNextIncentiveKeyTable of contentsPropertiesPropertiesfeerecipientDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
34,p.org sdk core reference classes CurrencyAmount#wrapped,"p.org sdk core reference classes CurrencyAmount#wrapped.    CurrencyAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesCurrencyAmountHelpful?On this pageCurrencyAmount@uniswap/sdk-core / Exports / CurrencyAmountClass: CurrencyAmount<T>Type parameters‚ÄãNameTypeTextends CurrencyHierarchy‚ÄãFraction‚Ü≥ CurrencyAmountTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãcurrencydecimalScaledenominatornumeratorAccessors‚ÄãasFractionquotientremainderwrappedMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new CurrencyAmount<T>(currency, numerator, denominator?)Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypecurrencyTnumeratorBigintIshdenominator?BigintIshOverrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/currencyAmount.ts:40Properties‚Äãcurrency‚Äã‚Ä¢ Readonly currency: TDefined in‚Äãentities/fractions/currencyAmount.ts:14decimalScale‚Äã‚Ä¢ Readonly decimalScale: defaultDefined in‚Äãentities/fractions/currencyAmount.ts:15denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47wrapped‚Äã‚Ä¢ get wrapped(): CurrencyAmount<Token>Returns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/fractions/currencyAmount.ts:91Methods‚Äãadd‚Äã‚ñ∏ add(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.addDefined in‚Äãentities/fractions/currencyAmount.ts:47divide‚Äã‚ñ∏ divide(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/currencyAmount.ts:64equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/currencyAmount.ts:59subtract‚Äã‚ñ∏ subtract(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/currencyAmount.ts:53toExact‚Äã‚ñ∏ toExact(format?): stringParameters‚ÄãNameTypeformatobjectReturns‚ÄãstringDefined in‚Äãentities/fractions/currencyAmount.ts:86toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformat?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/currencyAmount.ts:77toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/currencyAmount.ts:69fromFractionalAmount‚Äã‚ñ∏ Static fromFractionalAmount<T>(currency, numerator, denominator): CurrencyAmount<T>Construct a currency amount with a denominator that is not equal to 1Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currencynumeratorBigintIshthe numerator of the fractional token amountdenominatorBigintIshthe denominator of the fractional token amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:32fromRawAmount‚Äã‚ñ∏ Static fromRawAmount<T>(currency, rawAmount): CurrencyAmount<T>Returns a new currency amount instance from the unitless amount of token, i.e. the raw amountType parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currency in the amountrawAmountBigintIshthe raw token or ether amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:22Helpful?PreviousOverviewNextEtherType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiescurrencydecimalScaledenominatornumeratorAccessorsasFractionquotientremainderwrappedMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
35,p.org sdk swap widget reference v1,"p.org sdk swap widget reference v1.    API V1 Reference (Deprecated) | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap WidgetOverviewGuidesTechnical ReferenceAPI V2 ReferenceAPI V1 Reference (Deprecated)web3-reactCore SDKV2 SDKV1 SDKüè†Swap WidgetTechnical ReferenceAPI V1 Reference (Deprecated)Helpful?On this pageSwap Widget API V1 Reference (Deprecated)Required Parameters‚ÄãProp NameProp TypeDefault ValueDescriptionjsonRpcEndpointstringundefinedURI of your JSON-RPC endpoint. Strongly recommended in order to provide trade quotes prior to the user connecting a wallet. If none is provided, the widget will be completely disabled until the user connects a wallet. Once a wallet is connected, the widget will use the wallet‚Äôs JSON-RPC. See Understanding the Swap Widget States.provideranyundefinedAn EIP-1193 provider. This is required to swap.Optional Parameters‚ÄãProp NameProp TypeDefault ValueDescriptionconvenienceFeenumberundefinedOptionally, you may charge a convenience fee on top of swaps executed through your web app. The allowed range is 1 to 100 basis points (inclusive of 100) consistent with the Uniswap v3 Periphery contract.convenienceFeeRecipient{[chainId: number]: string}undefinedThe address to receive the convenience fee on each network. Required if convenienceFee is provided.defaultInputTokenAddress{[chainId: number]: string}string or 'NATIVE'Address of the token to be selected by default in the input field (e.g. USDC) for each network chain ID. If left empty the widget will use the native token of the connected chain as default. This can be explicitly defined by the special string 'NATIVE'. For convenience you may pass a single string instead of a chainId mapping. In this case, the widget will assume that string corresponds to an L1 Ethereum address with chaindId=1. Any addresses provided in this parameter must be included in the tokenList.defaultInputAmountnumber0Default amount for the input field (e.g. 1 ETH). This value will respect the decimals of the defaultInputTokenAddress. This parameter is valid only if defaultInputTokenAddress is also set. This parameter is mutually exclusive with defaultOutputAmount, so you may set only one of defaultInputAmount and defaultOutputAmount.defaultOutputTokenAddress{[chainId: number]: string}string or undefinedAddress of the token to be selected by default in the input field (e.g. USDC) for each network chain ID. None if left empty. Any addresses provided in this parameter must be included in the tokenList.defaultOutputAmountnumber0Default amount for the input field (e.g. 100 USDC). This value will respect the decimals of the defaultOutputTokenAddress. This parameter is mutually exclusive with defaultInputAmount, so you may set only one of defaultInputAmount and defaultOutputAmount.localeSupportedLocaleen-USSpecifies an explicit locale to use for the widget interface. This can be set to one of the values exported by the library in SUPPORTED_LOCALES.onConnectWallet() => voidundefinedIf passed, the ‚ÄúConnect your wallet‚Äù message will be clickable, and clicking it will trigger this handler function. This can be used to trigger your own wallet connection flow from the widget.onErrorErrorHandlerundefinedAn error handler which receives any errors that occur in the widget. This can be used for collecting error metrics.themeThemelightThemeSpecifies a custom theme (colors, font, and border radii). See Customizing the Theme.tokenListstringTokenInfo[]Specifies the set of tokens that appear by default in the token selector list. Accepts either a URI of a token list as defined by the Token Lists standard, or an inline array of tokens. If none is provided, the Uniswap Labs default token list will be used. See Customizing the Default Token List.widthnumber or string360Specifies the width of the widget. If specified as a number, this is in pixels; otherwise, it is interpreted as a CSS <length> data type. Recommended width is 360px. Minimum width is 270px. See Customizing the Width.Subscribing to Events‚ÄãDuring the lifecycle of the swap widget, most of the events you will need are available on the web3 provider. For example, the below snippet shows how to listen for events when the wallet account changes or a new wallet connects. You can see more event examples in the MetaMask docs.// Subscribe to messagesinterface ProviderMessage { type: string; data: unknown;}ethereum.on( 'message', handler: (message: ProviderMessage) => void);CopyQuestions?Join the Discord channel to ask questions and get support from the Uniswap community.Helpful?PreviousAPI V2 ReferenceNextOverviewRequired ParametersOptional ParametersSubscribing to EventsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
36,p.org sdk v3 reference interfaces TickConstructorArgs#liquiditynet,p.org sdk v3 reference interfaces TickConstructorArgs#liquiditynet.    TickConstructorArgs | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesTickConstructorArgsHelpful?On this pageTickConstructorArgs@uniswap/v3-sdk / Exports / TickConstructorArgsInterface: TickConstructorArgsTable of contents‚ÄãProperties‚ÄãindexliquidityGrossliquidityNetProperties‚Äãindex‚Äã‚Ä¢ index: numberDefined in‚Äãentities/tick.ts:7liquidityGross‚Äã‚Ä¢ liquidityGross: BigintIshDefined in‚Äãentities/tick.ts:8liquidityNet‚Äã‚Ä¢ liquidityNet: BigintIshDefined in‚Äãentities/tick.ts:9Helpful?PreviousSwapOptionsNextTickDataProviderTable of contentsPropertiesPropertiesindexliquidityGrossliquidityNetDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
37,p.org sdk v3 reference interfaces BestTradeOptions#maxnumresults,p.org sdk v3 reference interfaces BestTradeOptions#maxnumresults.    BestTradeOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesBestTradeOptionsHelpful?On this pageBestTradeOptions@uniswap/v3-sdk / Exports / BestTradeOptionsInterface: BestTradeOptionsTable of contents‚ÄãProperties‚ÄãmaxHopsmaxNumResultsProperties‚ÄãmaxHops‚Äã‚Ä¢ Optional maxHops: numberDefined in‚Äãentities/trade.ts:50maxNumResults‚Äã‚Ä¢ Optional maxNumResults: numberDefined in‚Äãentities/trade.ts:48Helpful?PreviousAllowedPermitArgumentsNextClaimOptionsTable of contentsPropertiesPropertiesmaxHopsmaxNumResultsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
38,p.org sdk v3 reference classes Trade#inputamount,"p.org sdk v3 reference classes Trade#inputamount.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTradeHelpful?On this pageTrade@uniswap/v3-sdk / Exports / TradeClass: Trade<TInput, TOutput, TTradeType>Represents a trade executed against a set of routes where some percentage of the input is split across each route.Each route has its own set of pools. Pools can not be re-used across routes.Does not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and when it is executed.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessors‚ÄãexecutionPriceinputAmountoutputAmountpriceImpactrouteMethods‚ÄãmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Trade<TInput, TOutput, TTradeType>(__namedParameters)Construct a trade by passing in the pre-computed property valuesType parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyTTradeTypeextends TradeTypeParameters‚ÄãNameType__namedParametersObject__namedParameters.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]__namedParameters.tradeTypeTTradeTypeDefined in‚Äãentities/trade.ts:397Properties‚Äã_executionPrice‚Äã‚Ä¢ Private _executionPrice: undefined | Price<TInput, TOutput>The cached result of the computed execution priceDefined in‚Äãentities/trade.ts:143_inputAmount‚Äã‚Ä¢ Private _inputAmount: undefined | CurrencyAmount<TInput>The cached result of the input amount computationDefined in‚Äãentities/trade.ts:97_outputAmount‚Äã‚Ä¢ Private _outputAmount: undefined | CurrencyAmount<TOutput>The cached result of the output amount computationDefined in‚Äãentities/trade.ts:120_priceImpact‚Äã‚Ä¢ Private _priceImpact: undefined | PercentThe cached result of the price impact computationDefined in‚Äãentities/trade.ts:164swaps‚Äã‚Ä¢ Readonly swaps: { inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]The swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.Defined in‚Äãentities/trade.ts:82tradeType‚Äã‚Ä¢ Readonly tradeType: TTradeTypeThe type of the trade, either exact in or exact out.Defined in‚Äãentities/trade.ts:91Accessors‚ÄãexecutionPrice‚Äã‚Ä¢ get executionPrice(): Price<TInput, TOutput>The price expressed in terms of output amount/input amount.Returns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/trade.ts:148inputAmount‚Äã‚Ä¢ get inputAmount(): CurrencyAmount<TInput>The input amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TInput>Defined in‚Äãentities/trade.ts:102outputAmount‚Äã‚Ä¢ get outputAmount(): CurrencyAmount<TOutput>The output amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TOutput>Defined in‚Äãentities/trade.ts:125priceImpact‚Äã‚Ä¢ get priceImpact(): PercentReturns the percent difference between the route's mid price and the price impactReturns‚ÄãPercentDefined in‚Äãentities/trade.ts:169route‚Äã‚Ä¢ get route(): Route<TInput, TOutput>DeprecatedDeprecated in favor of 'swaps' property. If the trade consists of multiple routes this will return an error.When the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.Returns‚ÄãRoute<TInput, TOutput>Defined in‚Äãentities/trade.ts:73Methods‚ÄãmaximumAmountIn‚Äã‚ñ∏ maximumAmountIn(slippageTolerance, amountIn?): CurrencyAmount<TInput>Get the maximum amount in that can be spent via this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountInCurrencyAmount<TInput>-Returns‚ÄãCurrencyAmount<TInput>The amount inDefined in‚Äãentities/trade.ts:456minimumAmountOut‚Äã‚ñ∏ minimumAmountOut(slippageTolerance, amountOut?): CurrencyAmount<TOutput>Get the minimum amount that must be received from this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountOutCurrencyAmount<TOutput>-Returns‚ÄãCurrencyAmount<TOutput>The amount outDefined in‚Äãentities/trade.ts:438worstExecutionPrice‚Äã‚ñ∏ worstExecutionPrice(slippageTolerance): Price<TInput, TOutput>Return the execution price after accounting for slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentthe allowed tolerated slippageReturns‚ÄãPrice<TInput, TOutput>The execution priceDefined in‚Äãentities/trade.ts:471bestTradeExactIn‚Äã‚ñ∏ Static bestTradeExactIn<TInput, TOutput>(pools, currencyAmountIn, currencyOut, __namedParameters?, currentPools?, nextAmountIn?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_INPUT>[]>Given a list of pools, and a fixed amount in, returns the top maxNumResults trades that go from an input token amount to an output token, making at most maxHops hops. Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyAmountInCurrencyAmount<TInput>undefinedused in recursion; the original value of the currencyAmountIn parametercurrencyOutTOutputundefinedthe desired currency out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountInCurrencyAmount<Currency>currencyAmountInexact amount of input currency to spendbestTradesTrade<TInput, TOutput, EXACT_INPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>[]>The exact in tradeDefined in‚Äãentities/trade.ts:495bestTradeExactOut‚Äã‚ñ∏ Static bestTradeExactOut<TInput, TOutput>(pools, currencyIn, currencyAmountOut, __namedParameters?, currentPools?, nextAmountOut?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>similar to the above method but instead targets a fixed output amount given a list of pools, and a fixed amount out, returns the top maxNumResults trades that go from an input token to an output token amount, making at most maxHops hops note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyInTInputundefinedthe currency to spendcurrencyAmountOutCurrencyAmount<TOutput>undefinedthe desired currency amount out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountOutCurrencyAmount<Currency>currencyAmountOutthe exact amount of currency outbestTradesTrade<TInput, TOutput, EXACT_OUTPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>The exact out tradeDefined in‚Äãentities/trade.ts:576createUncheckedTrade‚Äã‚ñ∏ Static createUncheckedTrade<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.inputAmountCurrencyAmount<TInput>-constructorArguments.outputAmountCurrencyAmount<TOutput>-constructorArguments.routeRoute<TInput, TOutput>-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:346createUncheckedTradeWithMultipleRoutes‚Äã‚ñ∏ Static createUncheckedTradeWithMultipleRoutes<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:377exactIn‚Äã‚ñ∏ Static exactIn<TInput, TOutput>(route, amountIn): Promise<Trade<TInput, TOutput, EXACT_INPUT>>Constructs an exact in trade with the given amount in and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact in tradeamountInCurrencyAmount<TInput>The amount being passed inReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>>The exact in tradeDefined in‚Äãentities/trade.ts:194exactOut‚Äã‚ñ∏ Static exactOut<TInput, TOutput>(route, amountOut): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>>Constructs an exact out trade with the given amount out and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact out tradeamountOutCurrencyAmount<TOutput>The amount returned by the tradeReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>>The exact out tradeDefined in‚Äãentities/trade.ts:209fromRoute‚Äã‚ñ∏ Static fromRoute<TInput, TOutput, TTradeType>(route, amount, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade by simulating swaps through the given routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>route to swap throughamountTTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>the amount specified, either input or output, depending on tradeTypetradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The routeDefined in‚Äãentities/trade.ts:226fromRoutes‚Äã‚ñ∏ Static fromRoutes<TInput, TOutput, TTradeType>(routes, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade from routes by simulating swapsType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionroutes{ amount: TTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]the routes to swap through and how much of the amount should be routed through eachtradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The tradeDefined in‚Äãentities/trade.ts:276Helpful?PreviousTickMathNextFeeAmountType parametersTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessorsexecutionPriceinputAmountoutputAmountpriceImpactrouteMethodsmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
39,p.org sdk v3 reference interfaces SafeTransferOptions#tokenid,p.org sdk v3 reference interfaces SafeTransferOptions#tokenid.    SafeTransferOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesSafeTransferOptionsHelpful?On this pageSafeTransferOptions@uniswap/v3-sdk / Exports / SafeTransferOptionsInterface: SafeTransferOptionsTable of contents‚ÄãProperties‚ÄãdatarecipientsendertokenIdProperties‚Äãdata‚Äã‚Ä¢ Optional data: stringThe optional parameter that passes data to the onERC721Received call for the stakerDefined in‚ÄãnonfungiblePositionManager.ts:97recipient‚Äã‚Ä¢ recipient: stringThe account that should receive the NFT.Defined in‚ÄãnonfungiblePositionManager.ts:88sender‚Äã‚Ä¢ sender: stringThe account sending the NFT.Defined in‚ÄãnonfungiblePositionManager.ts:83tokenId‚Äã‚Ä¢ tokenId: BigintIshThe id of the token being sent.Defined in‚ÄãnonfungiblePositionManager.ts:93Helpful?PreviousRemoveLiquidityOptionsNextStandardPermitArgumentsTable of contentsPropertiesPropertiesdatarecipientsendertokenIdDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
40,p.org sdk core reference classes CurrencyAmount#quotient,"p.org sdk core reference classes CurrencyAmount#quotient.    CurrencyAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesCurrencyAmountHelpful?On this pageCurrencyAmount@uniswap/sdk-core / Exports / CurrencyAmountClass: CurrencyAmount<T>Type parameters‚ÄãNameTypeTextends CurrencyHierarchy‚ÄãFraction‚Ü≥ CurrencyAmountTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãcurrencydecimalScaledenominatornumeratorAccessors‚ÄãasFractionquotientremainderwrappedMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new CurrencyAmount<T>(currency, numerator, denominator?)Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypecurrencyTnumeratorBigintIshdenominator?BigintIshOverrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/currencyAmount.ts:40Properties‚Äãcurrency‚Äã‚Ä¢ Readonly currency: TDefined in‚Äãentities/fractions/currencyAmount.ts:14decimalScale‚Äã‚Ä¢ Readonly decimalScale: defaultDefined in‚Äãentities/fractions/currencyAmount.ts:15denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47wrapped‚Äã‚Ä¢ get wrapped(): CurrencyAmount<Token>Returns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/fractions/currencyAmount.ts:91Methods‚Äãadd‚Äã‚ñ∏ add(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.addDefined in‚Äãentities/fractions/currencyAmount.ts:47divide‚Äã‚ñ∏ divide(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/currencyAmount.ts:64equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/currencyAmount.ts:59subtract‚Äã‚ñ∏ subtract(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/currencyAmount.ts:53toExact‚Äã‚ñ∏ toExact(format?): stringParameters‚ÄãNameTypeformatobjectReturns‚ÄãstringDefined in‚Äãentities/fractions/currencyAmount.ts:86toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformat?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/currencyAmount.ts:77toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/currencyAmount.ts:69fromFractionalAmount‚Äã‚ñ∏ Static fromFractionalAmount<T>(currency, numerator, denominator): CurrencyAmount<T>Construct a currency amount with a denominator that is not equal to 1Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currencynumeratorBigintIshthe numerator of the fractional token amountdenominatorBigintIshthe denominator of the fractional token amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:32fromRawAmount‚Äã‚ñ∏ Static fromRawAmount<T>(currency, rawAmount): CurrencyAmount<T>Returns a new currency amount instance from the unitless amount of token, i.e. the raw amountType parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currency in the amountrawAmountBigintIshthe raw token or ether amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:22Helpful?PreviousOverviewNextEtherType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiescurrencydecimalScaledenominatornumeratorAccessorsasFractionquotientremainderwrappedMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
41,p.org sdk core reference classes NativeCurrency#symbol,"p.org sdk core reference classes NativeCurrency#symbol.    NativeCurrency | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesNativeCurrencyHelpful?On this pageNativeCurrency@uniswap/sdk-core / Exports / NativeCurrencyClass: NativeCurrencyRepresents the native currency of the chain on which it resides, e.g.Hierarchy‚ÄãBaseCurrency‚Ü≥ NativeCurrency‚Ü≥‚Ü≥ EtherTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãchainIddecimalsisNativeisTokennamesymbolAccessors‚ÄãwrappedMethods‚ÄãequalsConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new NativeCurrency(chainId, decimals, symbol?, name?)Constructs an instance of the base class BaseCurrency.Parameters‚ÄãNameTypeDescriptionchainIdnumberthe chain ID on which this currency residesdecimalsnumberdecimals of the currencysymbol?stringsymbol of the currencyname?stringof the currencyInherited from‚ÄãBaseCurrency.constructorDefined in‚Äãentities/baseCurrency.ts:42Properties‚ÄãchainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãBaseCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãBaseCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: trueOverrides‚ÄãBaseCurrency.isNativeDefined in‚Äãentities/nativeCurrency.ts:7isToken‚Äã‚Ä¢ Readonly isToken: falseOverrides‚ÄãBaseCurrency.isTokenDefined in‚Äãentities/nativeCurrency.ts:8name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãBaseCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãBaseCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29Accessors‚Äãwrapped‚Äã‚Ä¢ Abstract get wrapped(): TokenReturn the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to be used in UniswapReturns‚ÄãTokenInherited from‚ÄãBaseCurrency.wrappedDefined in‚Äãentities/baseCurrency.ts:62Methods‚Äãequals‚Äã‚ñ∏ Abstract equals(other): booleanReturns whether this currency is functionally equivalent to the other currencyParameters‚ÄãNameTypeDescriptionotherCurrencythe other currencyReturns‚ÄãbooleanInherited from‚ÄãBaseCurrency.equalsDefined in‚Äãentities/baseCurrency.ts:56Helpful?PreviousFractionNextPercentHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertieschainIddecimalsisNativeisTokennamesymbolAccessorswrappedMethodsequalsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
42,p.org sdk core reference classes CurrencyAmount#add,"p.org sdk core reference classes CurrencyAmount#add.    CurrencyAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesCurrencyAmountHelpful?On this pageCurrencyAmount@uniswap/sdk-core / Exports / CurrencyAmountClass: CurrencyAmount<T>Type parameters‚ÄãNameTypeTextends CurrencyHierarchy‚ÄãFraction‚Ü≥ CurrencyAmountTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãcurrencydecimalScaledenominatornumeratorAccessors‚ÄãasFractionquotientremainderwrappedMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new CurrencyAmount<T>(currency, numerator, denominator?)Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypecurrencyTnumeratorBigintIshdenominator?BigintIshOverrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/currencyAmount.ts:40Properties‚Äãcurrency‚Äã‚Ä¢ Readonly currency: TDefined in‚Äãentities/fractions/currencyAmount.ts:14decimalScale‚Äã‚Ä¢ Readonly decimalScale: defaultDefined in‚Äãentities/fractions/currencyAmount.ts:15denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47wrapped‚Äã‚Ä¢ get wrapped(): CurrencyAmount<Token>Returns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/fractions/currencyAmount.ts:91Methods‚Äãadd‚Äã‚ñ∏ add(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.addDefined in‚Äãentities/fractions/currencyAmount.ts:47divide‚Äã‚ñ∏ divide(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/currencyAmount.ts:64equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/currencyAmount.ts:59subtract‚Äã‚ñ∏ subtract(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/currencyAmount.ts:53toExact‚Äã‚ñ∏ toExact(format?): stringParameters‚ÄãNameTypeformatobjectReturns‚ÄãstringDefined in‚Äãentities/fractions/currencyAmount.ts:86toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformat?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/currencyAmount.ts:77toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/currencyAmount.ts:69fromFractionalAmount‚Äã‚ñ∏ Static fromFractionalAmount<T>(currency, numerator, denominator): CurrencyAmount<T>Construct a currency amount with a denominator that is not equal to 1Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currencynumeratorBigintIshthe numerator of the fractional token amountdenominatorBigintIshthe denominator of the fractional token amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:32fromRawAmount‚Äã‚ñ∏ Static fromRawAmount<T>(currency, rawAmount): CurrencyAmount<T>Returns a new currency amount instance from the unitless amount of token, i.e. the raw amountType parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currency in the amountrawAmountBigintIshthe raw token or ether amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:22Helpful?PreviousOverviewNextEtherType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiescurrencydecimalScaledenominatornumeratorAccessorsasFractionquotientremainderwrappedMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
43,p.org sdk v3 reference interfaces RemoveLiquidityOptions#burntoken,"p.org sdk v3 reference interfaces RemoveLiquidityOptions#burntoken.    RemoveLiquidityOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesRemoveLiquidityOptionsHelpful?On this pageRemoveLiquidityOptions@uniswap/v3-sdk / Exports / RemoveLiquidityOptionsInterface: RemoveLiquidityOptionsOptions for producing the calldata to exit a position.Table of contents‚ÄãProperties‚ÄãburnTokencollectOptionsdeadlineliquidityPercentagepermitslippageTolerancetokenIdProperties‚ÄãburnToken‚Äã‚Ä¢ Optional burnToken: booleanWhether the NFT should be burned if the entire position is being exited, by default false.Defined in‚ÄãnonfungiblePositionManager.ts:162collectOptions‚Äã‚Ä¢ collectOptions: Omit<CollectOptions, ""tokenId"">Parameters to be passed on to collectDefined in‚ÄãnonfungiblePositionManager.ts:172deadline‚Äã‚Ä¢ deadline: BigintIshWhen the transaction expires, in epoch seconds.Defined in‚ÄãnonfungiblePositionManager.ts:157liquidityPercentage‚Äã‚Ä¢ liquidityPercentage: PercentThe percentage of position liquidity to exit.Defined in‚ÄãnonfungiblePositionManager.ts:147permit‚Äã‚Ä¢ Optional permit: NFTPermitOptionsThe optional permit of the token ID being exited, in case the exit transaction is being sent by an account that does not own the NFTDefined in‚ÄãnonfungiblePositionManager.ts:167slippageTolerance‚Äã‚Ä¢ slippageTolerance: PercentHow much the pool price is allowed to move.Defined in‚ÄãnonfungiblePositionManager.ts:152tokenId‚Äã‚Ä¢ tokenId: BigintIshThe ID of the token to exitDefined in‚ÄãnonfungiblePositionManager.ts:142Helpful?PreviousQuoteOptionsNextSafeTransferOptionsTable of contentsPropertiesPropertiesburnTokencollectOptionsdeadlineliquidityPercentagepermitslippageTolerancetokenIdDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
44,p.org contracts v3 reference periphery interfaces external IERC20PermitAllowed,"p.org contracts v3 reference periphery interfaces external IERC20PermitAllowed.    IERC20PermitAllowed | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesIERC20MetadataIERC721PermitIMulticallINonfungiblePositionManagerINonfungibleTokenPositionDescriptorIPeripheryImmutableStateIPeripheryPaymentsIPeripheryPaymentsWithFeeIPoolInitializerIQuoterIQuoterV2ISelfPermitISwapRouterITickLensIV3MigratorexternalIERC1271IERC20PermitAllowedIWETH9LensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryInterfacesexternalIERC20PermitAllowedHelpful?On this pageIERC20PermitAllowedInterface used by DAI/CHAI for permitFunctions‚Äãpermit‚Äã function permit( address holder, address spender, uint256 nonce, uint256 expiry, bool allowed, uint8 v, bytes32 r, bytes32 s ) externalCopyApprove the spender to spend some tokens via the holder signatureThis is the permit interface used by DAI and CHAIParameters:‚ÄãNameTypeDescriptionholderaddressThe address of the token holder, the token ownerspenderaddressThe address of the token spendernonceuint256The holder's nonce, increases at each call to permitexpiryuint256The timestamp at which the permit is no longer validallowedboolBoolean that sets approval amount, true for type(uint256).max and false for 0vuint8Must produce valid secp256k1 signature from the holder along with r and srbytes32Must produce valid secp256k1 signature from the holder along with v and ssbytes32Must produce valid secp256k1 signature from the holder along with r and vEdit this pageHelpful?PreviousIERC1271NextIWETH9FunctionspermitDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
45,p.org sdk v3 reference classes Trade#exactin,"p.org sdk v3 reference classes Trade#exactin.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTradeHelpful?On this pageTrade@uniswap/v3-sdk / Exports / TradeClass: Trade<TInput, TOutput, TTradeType>Represents a trade executed against a set of routes where some percentage of the input is split across each route.Each route has its own set of pools. Pools can not be re-used across routes.Does not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and when it is executed.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessors‚ÄãexecutionPriceinputAmountoutputAmountpriceImpactrouteMethods‚ÄãmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Trade<TInput, TOutput, TTradeType>(__namedParameters)Construct a trade by passing in the pre-computed property valuesType parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyTTradeTypeextends TradeTypeParameters‚ÄãNameType__namedParametersObject__namedParameters.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]__namedParameters.tradeTypeTTradeTypeDefined in‚Äãentities/trade.ts:397Properties‚Äã_executionPrice‚Äã‚Ä¢ Private _executionPrice: undefined | Price<TInput, TOutput>The cached result of the computed execution priceDefined in‚Äãentities/trade.ts:143_inputAmount‚Äã‚Ä¢ Private _inputAmount: undefined | CurrencyAmount<TInput>The cached result of the input amount computationDefined in‚Äãentities/trade.ts:97_outputAmount‚Äã‚Ä¢ Private _outputAmount: undefined | CurrencyAmount<TOutput>The cached result of the output amount computationDefined in‚Äãentities/trade.ts:120_priceImpact‚Äã‚Ä¢ Private _priceImpact: undefined | PercentThe cached result of the price impact computationDefined in‚Äãentities/trade.ts:164swaps‚Äã‚Ä¢ Readonly swaps: { inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]The swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.Defined in‚Äãentities/trade.ts:82tradeType‚Äã‚Ä¢ Readonly tradeType: TTradeTypeThe type of the trade, either exact in or exact out.Defined in‚Äãentities/trade.ts:91Accessors‚ÄãexecutionPrice‚Äã‚Ä¢ get executionPrice(): Price<TInput, TOutput>The price expressed in terms of output amount/input amount.Returns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/trade.ts:148inputAmount‚Äã‚Ä¢ get inputAmount(): CurrencyAmount<TInput>The input amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TInput>Defined in‚Äãentities/trade.ts:102outputAmount‚Äã‚Ä¢ get outputAmount(): CurrencyAmount<TOutput>The output amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TOutput>Defined in‚Äãentities/trade.ts:125priceImpact‚Äã‚Ä¢ get priceImpact(): PercentReturns the percent difference between the route's mid price and the price impactReturns‚ÄãPercentDefined in‚Äãentities/trade.ts:169route‚Äã‚Ä¢ get route(): Route<TInput, TOutput>DeprecatedDeprecated in favor of 'swaps' property. If the trade consists of multiple routes this will return an error.When the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.Returns‚ÄãRoute<TInput, TOutput>Defined in‚Äãentities/trade.ts:73Methods‚ÄãmaximumAmountIn‚Äã‚ñ∏ maximumAmountIn(slippageTolerance, amountIn?): CurrencyAmount<TInput>Get the maximum amount in that can be spent via this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountInCurrencyAmount<TInput>-Returns‚ÄãCurrencyAmount<TInput>The amount inDefined in‚Äãentities/trade.ts:456minimumAmountOut‚Äã‚ñ∏ minimumAmountOut(slippageTolerance, amountOut?): CurrencyAmount<TOutput>Get the minimum amount that must be received from this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountOutCurrencyAmount<TOutput>-Returns‚ÄãCurrencyAmount<TOutput>The amount outDefined in‚Äãentities/trade.ts:438worstExecutionPrice‚Äã‚ñ∏ worstExecutionPrice(slippageTolerance): Price<TInput, TOutput>Return the execution price after accounting for slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentthe allowed tolerated slippageReturns‚ÄãPrice<TInput, TOutput>The execution priceDefined in‚Äãentities/trade.ts:471bestTradeExactIn‚Äã‚ñ∏ Static bestTradeExactIn<TInput, TOutput>(pools, currencyAmountIn, currencyOut, __namedParameters?, currentPools?, nextAmountIn?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_INPUT>[]>Given a list of pools, and a fixed amount in, returns the top maxNumResults trades that go from an input token amount to an output token, making at most maxHops hops. Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyAmountInCurrencyAmount<TInput>undefinedused in recursion; the original value of the currencyAmountIn parametercurrencyOutTOutputundefinedthe desired currency out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountInCurrencyAmount<Currency>currencyAmountInexact amount of input currency to spendbestTradesTrade<TInput, TOutput, EXACT_INPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>[]>The exact in tradeDefined in‚Äãentities/trade.ts:495bestTradeExactOut‚Äã‚ñ∏ Static bestTradeExactOut<TInput, TOutput>(pools, currencyIn, currencyAmountOut, __namedParameters?, currentPools?, nextAmountOut?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>similar to the above method but instead targets a fixed output amount given a list of pools, and a fixed amount out, returns the top maxNumResults trades that go from an input token to an output token amount, making at most maxHops hops note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyInTInputundefinedthe currency to spendcurrencyAmountOutCurrencyAmount<TOutput>undefinedthe desired currency amount out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountOutCurrencyAmount<Currency>currencyAmountOutthe exact amount of currency outbestTradesTrade<TInput, TOutput, EXACT_OUTPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>The exact out tradeDefined in‚Äãentities/trade.ts:576createUncheckedTrade‚Äã‚ñ∏ Static createUncheckedTrade<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.inputAmountCurrencyAmount<TInput>-constructorArguments.outputAmountCurrencyAmount<TOutput>-constructorArguments.routeRoute<TInput, TOutput>-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:346createUncheckedTradeWithMultipleRoutes‚Äã‚ñ∏ Static createUncheckedTradeWithMultipleRoutes<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:377exactIn‚Äã‚ñ∏ Static exactIn<TInput, TOutput>(route, amountIn): Promise<Trade<TInput, TOutput, EXACT_INPUT>>Constructs an exact in trade with the given amount in and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact in tradeamountInCurrencyAmount<TInput>The amount being passed inReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>>The exact in tradeDefined in‚Äãentities/trade.ts:194exactOut‚Äã‚ñ∏ Static exactOut<TInput, TOutput>(route, amountOut): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>>Constructs an exact out trade with the given amount out and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact out tradeamountOutCurrencyAmount<TOutput>The amount returned by the tradeReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>>The exact out tradeDefined in‚Äãentities/trade.ts:209fromRoute‚Äã‚ñ∏ Static fromRoute<TInput, TOutput, TTradeType>(route, amount, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade by simulating swaps through the given routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>route to swap throughamountTTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>the amount specified, either input or output, depending on tradeTypetradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The routeDefined in‚Äãentities/trade.ts:226fromRoutes‚Äã‚ñ∏ Static fromRoutes<TInput, TOutput, TTradeType>(routes, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade from routes by simulating swapsType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionroutes{ amount: TTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]the routes to swap through and how much of the amount should be routed through eachtradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The tradeDefined in‚Äãentities/trade.ts:276Helpful?PreviousTickMathNextFeeAmountType parametersTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessorsexecutionPriceinputAmountoutputAmountpriceImpactrouteMethodsmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
46,p.org sdk core reference classes Percent#asfraction,"p.org sdk core reference classes Percent#asfraction.    Percent | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPercentHelpful?On this pagePercent@uniswap/sdk-core / Exports / PercentClass: PercentHierarchy‚ÄãFraction‚Ü≥ PercentTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatorisPercentnumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Percent(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshInherited from‚ÄãFraction.constructorDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26isPercent‚Äã‚Ä¢ Readonly isPercent: trueThis boolean prevents a fraction from being interpreted as a PercentDefined in‚Äãentities/fractions/percent.ts:19numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.addDefined in‚Äãentities/fractions/percent.ts:21divide‚Äã‚ñ∏ divide(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/percent.ts:33equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/percent.ts:29subtract‚Äã‚ñ∏ subtract(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/percent.ts:25toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber2format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/percent.ts:41toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber5format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/percent.ts:37Helpful?PreviousNativeCurrencyNextPriceHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatorisPercentnumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
47,p.org sdk v3 reference classes Payments#encodefeebips,"p.org sdk v3 reference classes Payments#encodefeebips.    Payments | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPaymentsHelpful?On this pagePayments@uniswap/v3-sdk / Exports / PaymentsClass: PaymentsTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãencodeFeeBipsencodeRefundETHencodeSweepTokenencodeUnwrapWETH9Constructors‚Äãconstructor‚Äã‚Ä¢ Private new Payments()Cannot be constructed.Defined in‚Äãpayments.ts:25Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚Äãpayments.ts:20Methods‚ÄãencodeFeeBips‚Äã‚ñ∏ Static Private encodeFeeBips(fee): stringParameters‚ÄãNameTypefeePercentReturns‚ÄãstringDefined in‚Äãpayments.ts:27encodeRefundETH‚Äã‚ñ∏ Static encodeRefundETH(): stringReturns‚ÄãstringDefined in‚Äãpayments.ts:73encodeSweepToken‚Äã‚ñ∏ Static encodeSweepToken(token, amountMinimum, recipient, feeOptions?): stringParameters‚ÄãNameTypetokenTokenamountMinimumdefaultrecipientstringfeeOptions?FeeOptionsReturns‚ÄãstringDefined in‚Äãpayments.ts:49encodeUnwrapWETH9‚Äã‚ñ∏ Static encodeUnwrapWETH9(amountMinimum, recipient, feeOptions?): stringParameters‚ÄãNameTypeamountMinimumdefaultrecipientstringfeeOptions?FeeOptionsReturns‚ÄãstringDefined in‚Äãpayments.ts:31Helpful?PreviousNonfungiblePositionManagerNextPoolTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsencodeFeeBipsencodeRefundETHencodeSweepTokenencodeUnwrapWETH9DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
48,p.org sdk v3 reference classes TickList#binarysearch,"p.org sdk v3 reference classes TickList#binarysearch.    TickList | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickListHelpful?On this pageTickList@uniswap/v3-sdk / Exports / TickListClass: TickListUtility methods for interacting with sorted lists of ticksTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãbinarySearchgetTickisAtOrAboveLargestisBelowSmallestnextInitializedTicknextInitializedTickWithinOneWordvalidateListConstructors‚Äãconstructor‚Äã‚Ä¢ Private new TickList()Cannot be constructedDefined in‚Äãutils/tickList.ts:18Methods‚ÄãbinarySearch‚Äã‚ñ∏ Static Private binarySearch(ticks, tick): numberFinds the largest tick in the list of ticks that is less than or equal to tickParameters‚ÄãNameTypeDescriptionticksreadonly Tick[]list of ticksticknumbertick to find the largest tick that is less than or equal to tickReturns‚ÄãnumberDefined in‚Äãutils/tickList.ts:62getTick‚Äã‚ñ∏ Static getTick(ticks, index): TickParameters‚ÄãNameTypeticksreadonly Tick[]indexnumberReturns‚ÄãTickDefined in‚Äãutils/tickList.ts:50isAtOrAboveLargest‚Äã‚ñ∏ Static isAtOrAboveLargest(ticks, tick): booleanParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberReturns‚ÄãbooleanDefined in‚Äãutils/tickList.ts:45isBelowSmallest‚Äã‚ñ∏ Static isBelowSmallest(ticks, tick): booleanParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberReturns‚ÄãbooleanDefined in‚Äãutils/tickList.ts:40nextInitializedTick‚Äã‚ñ∏ Static nextInitializedTick(ticks, tick, lte): TickParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberltebooleanReturns‚ÄãTickDefined in‚Äãutils/tickList.ts:83nextInitializedTickWithinOneWord‚Äã‚ñ∏ Static nextInitializedTickWithinOneWord(ticks, tick, lte, tickSpacing): [number, boolean]Parameters‚ÄãNameTypeticksreadonly Tick[]ticknumberltebooleantickSpacingnumberReturns‚Äã[number, boolean]Defined in‚Äãutils/tickList.ts:101validateList‚Äã‚ñ∏ Static validateList(ticks, tickSpacing): voidParameters‚ÄãNameTypeticksTick[]tickSpacingnumberReturns‚ÄãvoidDefined in‚Äãutils/tickList.ts:20Helpful?PreviousTickLibraryNextTickListDataProviderTable of contentsConstructorsMethodsConstructorsconstructorMethodsbinarySearchgetTickisAtOrAboveLargestisBelowSmallestnextInitializedTicknextInitializedTickWithinOneWordvalidateListDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
49,p.org contracts v2 reference smart contracts router 02,"p.org contracts v2 reference smart contracts router 02.    Router02 | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsRouter02Helpful?On this pageRouter02Because routers are stateless and do not hold token balances, they can be replaced safely and trustlessly, if necessary. This may happen if more efficient smart contract patterns are discovered, or if additional functionality is desired. For this reason, routers have release numbers, starting at 01. This is currently recommended release, 02.CodeUniswapV2Router02.solAddressUniswapV2Router02 is deployed at 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D on the Ethereum mainnet, and the Ropsten, Rinkeby, G√∂rli, and Kovan testnets. It was built from commit 6961711.Read-Only Functionsfactory‚Äãfunction factory() external pure returns (address);CopyReturns factory address.WETH‚Äãfunction WETH() external pure returns (address);CopyReturns the canonical WETH address on the Ethereum mainnet, or the Ropsten, Rinkeby, G√∂rli, or Kovan testnets.quote‚ÄãSee quote.getAmountOut‚ÄãSee getAmountOut.getAmountIn‚ÄãSee getAmountIn.getAmountsOut‚Äãfunction getAmountsOut(uint amountIn, address[] memory path) public view returns (uint[] memory amounts);CopySee getAmountsOut.getAmountsIn‚Äãfunction getAmountsIn(uint amountOut, address[] memory path) public view returns (uint[] memory amounts);CopySee getAmountsIn.State-Changing FunctionsaddLiquidity‚Äãfunction addLiquidity( address tokenA, address tokenB, uint amountADesired, uint amountBDesired, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB, uint liquidity);CopyAdds liquidity to an ERC-20‚áÑERC-20 pool.To cover all possible scenarios, msg.sender should have already given the router an allowance of at least amountADesired/amountBDesired on tokenA/tokenB.Always adds assets at the ideal ratio, according to the price when the transaction is executed.If a pool for the passed tokens does not exists, one is created automatically, and exactly amountADesired/amountBDesired tokens are added.NameTypetokenAaddressA pool token.tokenBaddressA pool token.amountADesireduintThe amount of tokenA to add as liquidity if the B/A price is <= amountBDesired/amountADesired (A depreciates).amountBDesireduintThe amount of tokenB to add as liquidity if the A/B price is <= amountADesired/amountBDesired (B depreciates).amountAMinuintBounds the extent to which the B/A price can go up before the transaction reverts. Must be <= amountADesired.amountBMinuintBounds the extent to which the A/B price can go up before the transaction reverts. Must be <= amountBDesired.toaddressRecipient of the liquidity tokens.deadlineuintUnix timestamp after which the transaction will revert.amountAuintThe amount of tokenA sent to the pool.amountBuintThe amount of tokenB sent to the pool.liquidityuintThe amount of liquidity tokens minted.addLiquidityETH‚Äãfunction addLiquidityETH( address token, uint amountTokenDesired, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external payable returns (uint amountToken, uint amountETH, uint liquidity);CopyAdds liquidity to an ERC-20‚áÑWETH pool with ETH.To cover all possible scenarios, msg.sender should have already given the router an allowance of at least amountTokenDesired on token.Always adds assets at the ideal ratio, according to the price when the transaction is executed.msg.value is treated as a amountETHDesired.Leftover ETH, if any, is returned to msg.sender.If a pool for the passed token and WETH does not exists, one is created automatically, and exactly amountTokenDesired/msg.value tokens are added.NameTypetokenaddressA pool token.amountTokenDesireduintThe amount of token to add as liquidity if the WETH/token price is <= msg.value/amountTokenDesired (token depreciates).msg.value (amountETHDesired)uintThe amount of ETH to add as liquidity if the token/WETH price is <= amountTokenDesired/msg.value (WETH depreciates).amountTokenMinuintBounds the extent to which the WETH/token price can go up before the transaction reverts. Must be <= amountTokenDesired.amountETHMinuintBounds the extent to which the token/WETH price can go up before the transaction reverts. Must be <= msg.value.toaddressRecipient of the liquidity tokens.deadlineuintUnix timestamp after which the transaction will revert.amountTokenuintThe amount of token sent to the pool.amountETHuintThe amount of ETH converted to WETH and sent to the pool.liquidityuintThe amount of liquidity tokens minted.removeLiquidity‚Äãfunction removeLiquidity( address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB);CopyRemoves liquidity from an ERC-20‚áÑERC-20 pool.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenAaddressA pool token.tokenBaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountAMinuintThe minimum amount of tokenA that must be received for the transaction not to revert.amountBMinuintThe minimum amount of tokenB that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountAuintThe amount of tokenA received.amountBuintThe amount of tokenB received.removeLiquidityETH‚Äãfunction removeLiquidityETH( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external returns (uint amountToken, uint amountETH);CopyRemoves liquidity from an ERC-20‚áÑWETH pool and receive ETH.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountTokenuintThe amount of token received.amountETHuintThe amount of ETH received.removeLiquidityWithPermit‚Äãfunction removeLiquidityWithPermit( address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountA, uint amountB);CopyRemoves liquidity from an ERC-20‚áÑERC-20 pool without pre-approval, thanks to permit.NameTypetokenAaddressA pool token.tokenBaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountAMinuintThe minimum amount of tokenA that must be received for the transaction not to revert.amountBMinuintThe minimum amount of tokenB that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountAuintThe amount of tokenA received.amountBuintThe amount of tokenB received.removeLiquidityETHWithPermit‚Äãfunction removeLiquidityETHWithPermit( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountToken, uint amountETH);CopyRemoves liquidity from an ERC-20‚áÑWETTH pool and receive ETH without pre-approval, thanks to permit.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountTokenuintThe amount of token received.amountETHuintThe amount of ETH received.removeLiquidityETHSupportingFeeOnTransferTokens‚Äãfunction removeLiquidityETHSupportingFeeOnTransferTokens( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external returns (uint amountETH);CopyIdentical to removeLiquidityETH, but succeeds for tokens that take a fee on transfer.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountETHuintThe amount of ETH received.removeLiquidityETHWithPermitSupportingFeeOnTransferTokens‚Äãfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountETH);CopyIdentical to removeLiquidityETHWithPermit, but succeeds for tokens that take a fee on transfer.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountETHuintThe amount of ETH received.swapExactTokensForTokens‚Äãfunction swapExactTokensForTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopySwaps an exact amount of input tokens for as many output tokens as possible, along the route determined by the path. The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountIn on the input token.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapTokensForExactTokens‚Äãfunction swapTokensForExactTokens( uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopyReceive an exact amount of output tokens for as few input tokens as possible, along the route determined by the path. The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate tokens to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountInMax on the input token.NameTypeamountOutuintThe amount of output tokens to receive.amountInMaxuintThe maximum amount of input tokens that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactETHForTokens‚Äãfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts);CopySwaps an exact amount of ETH for as many output tokens as possible, along the route determined by the path. The first element of path must be WETH, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).NameTypemsg.value (amountIn)uintThe amount of ETH to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapTokensForExactETH‚Äãfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopyReceive an exact amount of ETH for as few input tokens as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountInMax on the input token.If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountOutuintThe amount of ETH to receive.amountInMaxuintThe maximum amount of input tokens that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of ETH.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactTokensForETH‚Äãfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopySwaps an exact amount of tokens for as much ETH as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the ETH.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapETHForExactTokens‚Äãfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts);CopyReceive an exact amount of tokens for as little ETH as possible, along the route determined by the path. The first element of path must be WETH, the last is the output token and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).Leftover ETH, if any, is returned to msg.sender.NameTypeamountOutuintThe amount of tokens to receive.msg.value (amountInMax)uintThe maximum amount of ETH that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactTokensForTokensSupportingFeeOnTransferTokens‚Äãfunction swapExactTokensForTokensSupportingFeeOnTransferTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external;CopyIdentical to swapExactTokensForTokens, but succeeds for tokens that take a fee on transfer.msg.sender should have already given the router an allowance of at least amountIn on the input token.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.swapExactETHForTokensSupportingFeeOnTransferTokens‚Äãfunction swapExactETHForTokensSupportingFeeOnTransferTokens( uint amountOutMin, address[] calldata path, address to, uint deadline) external payable;CopyIdentical to swapExactETHForTokens, but succeeds for tokens that take a fee on transfer.NameTypemsg.value (amountIn)uintThe amount of ETH to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.swapExactTokensForETHSupportingFeeOnTransferTokens‚Äãfunction swapExactTokensForETHSupportingFeeOnTransferTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external;CopyIdentical to swapExactTokensForETH, but succeeds for tokens that take a fee on transfer.If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the ETH.deadlineuintUnix timestamp after which the transaction will revert.Interfaceimport '@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol';Copypragma solidity >=0.6.2;interface IUniswapV2Router01 { function factory() external pure returns (address); function WETH() external pure returns (address); function addLiquidity(  address tokenA,  address tokenB,  uint amountADesired,  uint amountBDesired,  uint amountAMin,  uint amountBMin,  address to,  uint deadline ) external returns (uint amountA, uint amountB, uint liquidity); function addLiquidityETH(  address token,  uint amountTokenDesired,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external payable returns (uint amountToken, uint amountETH, uint liquidity); function removeLiquidity(  address tokenA,  address tokenB,  uint liquidity,  uint amountAMin,  uint amountBMin,  address to,  uint deadline ) external returns (uint amountA, uint amountB); function removeLiquidityETH(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external returns (uint amountToken, uint amountETH); function removeLiquidityWithPermit(  address tokenA,  address tokenB,  uint liquidity,  uint amountAMin,  uint amountBMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountA, uint amountB); function removeLiquidityETHWithPermit(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountToken, uint amountETH); function swapExactTokensForTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external returns (uint[] memory amounts); function swapTokensForExactTokens(  uint amountOut,  uint amountInMax,  address[] calldata path,  address to,  uint deadline ) external returns (uint[] memory amounts); function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)  external  payable  returns (uint[] memory amounts); function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)  external  returns (uint[] memory amounts); function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)  external  returns (uint[] memory amounts); function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)  external  payable  returns (uint[] memory amounts); function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB); function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut); function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn); function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts); function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);}interface IUniswapV2Router02 is IUniswapV2Router01 { function removeLiquidityETHSupportingFeeOnTransferTokens(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external returns (uint amountETH); function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountETH); function swapExactTokensForTokensSupportingFeeOnTransferTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external; function swapExactETHForTokensSupportingFeeOnTransferTokens(  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external payable; function swapExactTokensForETHSupportingFeeOnTransferTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external;}CopyABIimport IUniswapV2Router02 from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'Copyhttps://unpkg.com/@uniswap/v2-periphery@1.1.0-beta.0/build/IUniswapV2Router02.jsonEdit this pageHelpful?PreviousRouter01NextCommon ErrorsfactoryWETHquotegetAmountOutgetAmountIngetAmountsOutgetAmountsInaddLiquidityaddLiquidityETHremoveLiquidityremoveLiquidityETHremoveLiquidityWithPermitremoveLiquidityETHWithPermitremoveLiquidityETHSupportingFeeOnTransferTokensremoveLiquidityETHWithPermitSupportingFeeOnTransferTokensswapExactTokensForTokensswapTokensForExactTokensswapExactETHForTokensswapTokensForExactETHswapExactTokensForETHswapETHForExactTokensswapExactTokensForTokensSupportingFeeOnTransferTokensswapExactETHForTokensSupportingFeeOnTransferTokensswapExactTokensForETHSupportingFeeOnTransferTokensDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
50,p.org contracts universal router technical reference#foundation,"p.org contracts universal router technical reference#foundation.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
51,p.org sdk v3 reference classes SwapRouter#interface,"p.org sdk v3 reference classes SwapRouter#interface.    SwapRouter | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesSwapRouterHelpful?On this pageSwapRouter@uniswap/v3-sdk / Exports / SwapRouterClass: SwapRouterRepresents the Uniswap V3 SwapRouter, and has static methods for helping execute trades.Table of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãswapCallParametersConstructors‚Äãconstructor‚Äã‚Ä¢ Private new SwapRouter()Cannot be constructed.Defined in‚ÄãswapRouter.ts:57Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚ÄãswapRouter.ts:52Methods‚ÄãswapCallParameters‚Äã‚ñ∏ Static swapCallParameters(trades, options): MethodParametersProduces the on-chain method name to call and the hex encoded parameters to pass as arguments for a given trade.Parameters‚ÄãNameTypeDescriptiontradesTrade<Currency, Currency, TradeType> | Trade<Currency, Currency, TradeType>[]-optionsSwapOptionsoptions for the call parametersReturns‚ÄãMethodParametersDefined in‚ÄãswapRouter.ts:64Helpful?PreviousSwapQuoterNextTickTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsswapCallParametersDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
52,p.org sdk v3 reference classes SqrtPriceMath#getnextsqrtpricefromoutput,"p.org sdk v3 reference classes SqrtPriceMath#getnextsqrtpricefromoutput.    SqrtPriceMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesSqrtPriceMathHelpful?On this pageSqrtPriceMath@uniswap/v3-sdk / Exports / SqrtPriceMathClass: SqrtPriceMathTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãgetAmount0DeltagetAmount1DeltagetNextSqrtPriceFromAmount0RoundingUpgetNextSqrtPriceFromAmount1RoundingDowngetNextSqrtPriceFromInputgetNextSqrtPriceFromOutputConstructors‚Äãconstructor‚Äã‚Ä¢ Private new SqrtPriceMath()Cannot be constructed.Defined in‚Äãutils/sqrtPriceMath.ts:23Methods‚ÄãgetAmount0Delta‚Äã‚ñ∏ Static getAmount0Delta(sqrtRatioAX96, sqrtRatioBX96, liquidity, roundUp): defaultParameters‚ÄãNameTypesqrtRatioAX96defaultsqrtRatioBX96defaultliquiditydefaultroundUpbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:25getAmount1Delta‚Äã‚ñ∏ Static getAmount1Delta(sqrtRatioAX96, sqrtRatioBX96, liquidity, roundUp): defaultParameters‚ÄãNameTypesqrtRatioAX96defaultsqrtRatioBX96defaultliquiditydefaultroundUpbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:38getNextSqrtPriceFromAmount0RoundingUp‚Äã‚ñ∏ Static Private getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96, liquidity, amount, add): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountdefaultaddbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:71getNextSqrtPriceFromAmount1RoundingDown‚Äã‚ñ∏ Static Private getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96, liquidity, amount, add): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountdefaultaddbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:100getNextSqrtPriceFromInput‚Äã‚ñ∏ Static getNextSqrtPriceFromInput(sqrtPX96, liquidity, amountIn, zeroForOne): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountIndefaultzeroForOnebooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:48getNextSqrtPriceFromOutput‚Äã‚ñ∏ Static getNextSqrtPriceFromOutput(sqrtPX96, liquidity, amountOut, zeroForOne): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountOutdefaultzeroForOnebooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:57Helpful?PreviousSelfPermitNextStakerTable of contentsConstructorsMethodsConstructorsconstructorMethodsgetAmount0DeltagetAmount1DeltagetNextSqrtPriceFromAmount0RoundingUpgetNextSqrtPriceFromAmount1RoundingDowngetNextSqrtPriceFromInputgetNextSqrtPriceFromOutputDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
53,p.org sdk web3 react guides connect wallet #building an injected connector,"p.org sdk web3 react guides connect wallet #building an injected connector.    Connecting to Wallets | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactOverviewGuidesConnecting to WalletsSupported ConnectorsSwitching ChainsCore SDKV2 SDKV1 SDKüè†web3-reactGuidesConnecting to WalletsHelpful?On this pageConnecting to WalletsIntroduction‚ÄãThis guide will cover how to connect wallets with web3-react. It is based on the web3-react example found in the Uniswap code examples repository. To run this example, check out the examples's README and follow the setup instructions.In this example we will walk through setting up web3-react and connecting the most popular browser-injected connector, MetaMask, using @web3-react/metamask.The input parameters to this guide are the chains that we want our app to be able to connect to and their RPC URLs.The guide will cover:Creating a web3-react Web3ReactProviderBuilding a web3-react InjectedConnectorConnecting and disconnecting the application to the connectorAt the end of the guide, we should be able to connect and disconnect your dApp to a MetaMask connector.For this guide, the following web3-react packages are used:@web3-react/core@web3-react/types@web3-react/metamaskinfoThis guide uses web3-react version 8, which is a beta version.These will be automatically installed by following the example's README.The core code of this guide can be found in Web3ContextProvider and InjectedConnector.Creating a Web3ReactProvider‚ÄãTo be able to interact with the methods that web3-react offers, we first need to setup a Web3ReactProvider and wrap our application in it. web3-react uses a React Context to allow us to use the exposed hooks without additional configuration. To start, we create a React component called Web3ContextProvider in order to wrap the logic of configuring the Web3ReactProvider. In this component, we first import Web3ReactProvider from @web3-react/core.The component receives just one prop which is the children to which it will be providing the Context:Defining the Web3React componentloading...CopyView on GithubWe then implement the component by rendering the imported Web3ReactProvider with the children within that:Implementing the componentloading...CopyView on GithubNote that we map our list of Connections to a tuple of the connector and hooks of the connection. The third element of a Connection refers to the type of Connection being established, which we will later use to keep track of the actively connected wallet.Finally, having created the Web3ContextProvider component, we can navigate to our index file and wrap the whole application with it:Wrapping our app with the web3 contextloading...CopyView on GithubBuilding an Injected Connector‚ÄãThe only parameter that we provided to the Web3ReactProvider component is a list of prioritized connectors, declared as PRIORITIZED_CONNECTORS. The prioritization ordering is with regards to which connector we want to be active when more than one connector is connected to our application. The list is defined inside our connectors module: Creating the prioritized Connectors listloading...CopyView on GithubEach one of those connectors lives within its own file, and they all follow a similar setup pattern. An example of a connector in the list is the InjectedConnector, which supports wallets that inject an Ethereum Provider into the browser window. The most popular example of an injected connector is the MetaMask browser extension. To set it up, we import initializeConnector function from core and the MetaMask type from metamask:Importing Connector dependenciesloading...CopyView on GithubWe then utilize the templated initializeConnector function with MetaMask as the type argument:Initializing the MetaMask connectorloading...CopyView on GithubBy passing in MetaMask as the type argument, we define the function's required input parameters. In this case, the only parameter we need to pass is an instance of Metamask, which receives the actions and onError parameters. The first parameter defines the actions that web3-react performs on its local store for the connector (this usually can be passed through without modification), while the second parameter is the callback invoked when an error occurs.The return type of the function is a tuple of the initialized Connector and the Hooks that we can use on it. Using this tuple, we create an instance of a Connection type, by setting the type property to INJECTED:Creating a connection instanceloading...CopyView on GithubFinally, we return the instance of Connection we created, which is added to the list of prioritized connectors. infoFor help on creating the rest of the supported connectors of this examples, please visit our connectors page!Connecting and disconnecting the application to the connector‚ÄãHaving built our InjectedConnector, we can now use it in the Context that allows our application to use that connector:Creating the Option componentloading...CopyView on GithubThe component receives 5 parameters:isEnabled determines whether the connector is eligible to be activatedisConnected determines whether the connector is currently active connectionType determines the ConnectionTypeonActivate is called once the component has established a connection onDeactivate is called once the component has disconnectedIn the case of MetaMask, when declaring the InjectedConnector we pass the connector-specific arguments:Creating an injected connectorloading...CopyView on GithubThen, in the html portion of the Option, we can figure out whether we want the current Option's action button to be disabled, and whether clicking the button would result in the connector being connected or disconnected:The component user interfaceloading...CopyView on GithubFinally, we also have enough information to figure out what action to take when the button is clicked. In the case that the click triggers a connection:On connecting to a Connectorloading...CopyView on GithubTo connect our wallet, all we need to do is to call the tryActivateConnector function and pass it the InjectedConnector. We then call the onActivate callback, which makes the InjectedConnector the active connector in our application's state.tryActivateConnector takes as its argument the connector that we want to activate, and attempts to call activate on it. If this activation succeeds, it returns the new ConnectionType:The implementation of tryActivateConnectorloading...CopyView on GithubIn the case that the click triggers a disconnection:On disconnecting from a Connectorloading...CopyView on GithubTo disconnect, all we need to do is to call tryDeactivateConnector and pass in it the InjectedConnector we created before. We then call the onDeactivate callback, which removes the InjectedConnector as the currently active connector from our application's state.tryDeactivateConnector takes as its argument the connector that we want to deactivate, and attempts to call deactivate on it. If this deactivation succeeds, it resets the connector's state by calling resetState and returns null:The implementation of tryDeactivateConnectorloading...CopyView on GithubNext Steps‚ÄãNow that we have gone through connecting and disconnecting from an InjectedConnector, we will learn how to connect and disconnect from all the different types of connectors that web3-react supports.Helpful?PreviousOverviewNextSupported ConnectorsIntroductionCreating a Web3ReactProviderBuilding an Injected ConnectorConnecting and disconnecting the application to the connectorNext StepsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
54,p.org sdk v3 reference classes TickList#nextinitializedtick,"p.org sdk v3 reference classes TickList#nextinitializedtick.    TickList | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickListHelpful?On this pageTickList@uniswap/v3-sdk / Exports / TickListClass: TickListUtility methods for interacting with sorted lists of ticksTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãbinarySearchgetTickisAtOrAboveLargestisBelowSmallestnextInitializedTicknextInitializedTickWithinOneWordvalidateListConstructors‚Äãconstructor‚Äã‚Ä¢ Private new TickList()Cannot be constructedDefined in‚Äãutils/tickList.ts:18Methods‚ÄãbinarySearch‚Äã‚ñ∏ Static Private binarySearch(ticks, tick): numberFinds the largest tick in the list of ticks that is less than or equal to tickParameters‚ÄãNameTypeDescriptionticksreadonly Tick[]list of ticksticknumbertick to find the largest tick that is less than or equal to tickReturns‚ÄãnumberDefined in‚Äãutils/tickList.ts:62getTick‚Äã‚ñ∏ Static getTick(ticks, index): TickParameters‚ÄãNameTypeticksreadonly Tick[]indexnumberReturns‚ÄãTickDefined in‚Äãutils/tickList.ts:50isAtOrAboveLargest‚Äã‚ñ∏ Static isAtOrAboveLargest(ticks, tick): booleanParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberReturns‚ÄãbooleanDefined in‚Äãutils/tickList.ts:45isBelowSmallest‚Äã‚ñ∏ Static isBelowSmallest(ticks, tick): booleanParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberReturns‚ÄãbooleanDefined in‚Äãutils/tickList.ts:40nextInitializedTick‚Äã‚ñ∏ Static nextInitializedTick(ticks, tick, lte): TickParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberltebooleanReturns‚ÄãTickDefined in‚Äãutils/tickList.ts:83nextInitializedTickWithinOneWord‚Äã‚ñ∏ Static nextInitializedTickWithinOneWord(ticks, tick, lte, tickSpacing): [number, boolean]Parameters‚ÄãNameTypeticksreadonly Tick[]ticknumberltebooleantickSpacingnumberReturns‚Äã[number, boolean]Defined in‚Äãutils/tickList.ts:101validateList‚Äã‚ñ∏ Static validateList(ticks, tickSpacing): voidParameters‚ÄãNameTypeticksTick[]tickSpacingnumberReturns‚ÄãvoidDefined in‚Äãutils/tickList.ts:20Helpful?PreviousTickLibraryNextTickListDataProviderTable of contentsConstructorsMethodsConstructorsconstructorMethodsbinarySearchgetTickisAtOrAboveLargestisBelowSmallestnextInitializedTicknextInitializedTickWithinOneWordvalidateListDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
55,p.org concepts research,"p.org concepts research.    Research | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchWhat Is Uniswap?The Uniswap ProtocolProtocol ConceptsGovernanceResearchResourcesGlossaryüè†ResearchHelpful?ResearchThe automated market maker is a new concept, and as such, new research comes out frequently. We've selected some of the most thoughtful here.Uniswap's Financial AlchemyAuthors: Dave White, Martin Tassy, Charlie Noyes, and Dan RobinsonAn automated market maker is a type of decentralized exchange that lets customers trade between on-chain assets like USDC and ETH. Uniswap is the most popular AMM on Ethereum. Like most AMMs, Uniswap facilitates trading between a particular pair of assets by holding reserves of both assets. It sets the trading price between them based on the size of its reserves in such a way that prices will stay in line with the broader market. Anybody who would like to can join the ‚Äúpool‚Äù for a particular pair and become a liquidity provider, or LP, so-called because they provide liquid assets for others to trade against. LPs contribute assets to both reserves simultaneously, taking on some of the risk of trading in exchange for a share of the returns.Uniswap's Financial AlchemyAn analysis of Uniswap marketsAuthors: Guillermo Angeris, Hsien-Tang Kao, Rei Chiang, Charlie Noyes, Tarun ChitraUniswap---and other constant product markets---appear to work well in practice despite their simplicity. In this paper, we give a simple formal analysis of constant product markets and their generalizations, showing that, under some common conditions, these markets must closely track the reference market price. We also show that Uniswap satisfies many other desirable properties and numerically demonstrate, via a large-scale agent-based simulation, that Uniswap is stable under a wide range of market conditions.An analysis of Uniswap marketsImproved Price Oracles: Constant Function Market MakersAuthors: Guillermo Angeris, Tarun ChitraAutomated market makers, first popularized by Hanson's logarithmic market scoring rule (or LMSR) for prediction markets, have become important building blocks, called 'primitives,' for decentralized finance. A particularly useful primitive is the ability to measure the price of an asset, a problem often known as the pricing oracle problem. In this paper, we focus on the analysis of a very large class of automated market makers, called constant function market makers (or CFMMs) which includes existing popular market makers such as Uniswap, Balancer, and Curve, whose yearly transaction volume totals to billions of dollars. We give sufficient conditions such that, under fairly general assumptions, agents who interact with these constant function market makers are incentivized to correctly report the price of an asset and that they can do so in a computationally efficient way. We also derive several other useful properties that were previously not known. These include lower bounds on the total value of assets held by CFMMs and lower bounds guaranteeing that no agent can, by any set of trades, drain the reserves of assets held by a given CFMM.Improved Price Oracles: Constant Function Market MakersPintail researchPublished medium articles by Pintail.Understanding Uniswap ReturnsUniswap: A Good Deal for Liquidity Providers?Liquidity Provider Returns in Geometric Mean MarketsAuthors: Alex EvansGeometric mean market makers (G3Ms), such as Uniswap and Balancer, comprise a popular class of automated market makers (AMMs) defined by the following rule: the reserves of the AMM before and after each trade must have the same (weighted) geometric mean. This paper extends several results known for constant-weight G3Ms to the general case of G3Ms with time-varying and potentially stochastic weights. These results include the returns and no-arbitrage prices of liquidity pool (LP) shares that investors receive for supplying liquidity to G3Ms. Using these expressions, we show how to create G3Ms whose LP shares replicate the payoffs of financial derivatives. The resulting hedges are model-independent and exact for derivative contracts whose payoff functions satisfy an elasticity constraint. These strategies allow LP shares to replicate various trading strategies and financial contracts, including standard options. G3Ms are thus shown to be capable of recreating a variety of active trading strategies through passive positions in LP shares.Liquidity Provider Returns in Geometric Mean MarketsThe Replicating Portfolio of a Constant Product MarketAuthors: Joseph ClarkWe derive the replicating portfolio of a constant product market. This is structurally short volatility (selling options) which explains why positive transaction costs are needed to induce liquidity providers to participate. Where futures and options markets do not exist, this payoff can be used to create them.https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3550601Helpful?PreviousChangelogNextResourcesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
56,p.org contracts v3 reference periphery test MockTimeSwapRouter,p.org contracts v3 reference periphery test MockTimeSwapRouter.    MockTimeSwapRouter | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerTestBase64TestLiquidityAmountsTestMockTimeNonfungiblePositionManagerMockTimeSwapRouterNFTDescriptorTestPathTestPeripheryImmutableStateTestPoolAddressTestSelfPermitTestTestCallbackValidationTestERC20TestERC20MetadataTestERC20PermitAllowedTestMulticallTestPositionNFTOwnerTestUniswapV3CalleeTickLensTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryTestMockTimeSwapRouterHelpful?On this pageMockTimeSwapRouterFunctions‚Äãconstructor‚Äã function constructor( ) publicCopy_blockTimestamp‚Äã function _blockTimestamp( ) internal returns (uint256)CopysetTime‚Äã function setTime( ) externalCopyEdit this pageHelpful?PreviousMockTimeNonfungiblePositionManagerNextNFTDescriptorTestFunctionsconstructor_blockTimestampsetTimeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
57,p.org sdk 2.0.0 reference trade#maximumamountin since 204,p.org sdk 2.0.0 reference trade#maximumamountin since 204. 
58,p.org sdk core reference classes Percent#equalto,"p.org sdk core reference classes Percent#equalto.    Percent | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPercentHelpful?On this pagePercent@uniswap/sdk-core / Exports / PercentClass: PercentHierarchy‚ÄãFraction‚Ü≥ PercentTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatorisPercentnumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Percent(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshInherited from‚ÄãFraction.constructorDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26isPercent‚Äã‚Ä¢ Readonly isPercent: trueThis boolean prevents a fraction from being interpreted as a PercentDefined in‚Äãentities/fractions/percent.ts:19numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.addDefined in‚Äãentities/fractions/percent.ts:21divide‚Äã‚ñ∏ divide(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/percent.ts:33equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/percent.ts:29subtract‚Äã‚ñ∏ subtract(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/percent.ts:25toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber2format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/percent.ts:41toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber5format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/percent.ts:37Helpful?PreviousNativeCurrencyNextPriceHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatorisPercentnumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
59,p.org sdk v3 reference classes Staker#incentive key abi,"p.org sdk v3 reference classes Staker#incentive key abi.    Staker | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesStakerHelpful?On this pageStaker@uniswap/v3-sdk / Exports / StakerClass: StakerTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINCENTIVE_KEY_ABIINTERFACEMethods‚Äã_encodeIncentiveKeycollectRewardsencodeClaimencodeDepositwithdrawTokenConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new Staker()Defined in‚Äãstaker.ts:72Properties‚ÄãINCENTIVE_KEY_ABI‚Äã‚ñ™ Static Private INCENTIVE_KEY_ABI: string = 'tuple(address rewardToken, address pool, uint256 startTime, uint256 endTime, address refundee)'Defined in‚Äãstaker.ts:73INTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚Äãstaker.ts:70Methods‚Äã_encodeIncentiveKey‚Äã‚ñ∏ Static Private _encodeIncentiveKey(incentiveKey): ObjectParameters‚ÄãNameTypeDescriptionincentiveKeyIncentiveKeyAn IncentiveKey which represents a unique staking program.Returns‚ÄãObjectAn encoded IncentiveKey to be read by ethersDefined in‚Äãstaker.ts:194collectRewards‚Äã‚ñ∏ Static collectRewards(incentiveKeys, options): MethodParametersNote: A tokenId can be staked in many programs but to claim rewards and continue the program you must unstake, claim, and then restake.Parameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]An IncentiveKey or array of IncentiveKeys that tokenId is staked in. Input an array of IncentiveKeys to claim rewards for each program.optionsClaimOptionsClaimOptions to specify tokenId, recipient, and amount wanting to collect. Note that you can only specify one amount and one recipient across the various programs if you are collecting from multiple programs at once.Returns‚ÄãMethodParametersDefined in‚Äãstaker.ts:107encodeClaim‚Äã‚ñ∏ Static Private encodeClaim(incentiveKey, options): string[]To claim rewards, must unstake and then claim.Parameters‚ÄãNameTypeDescriptionincentiveKeyIncentiveKeyThe unique identifier of a staking program.optionsClaimOptionsOptions for producing the calldata to claim. Can't claim unless you unstake.Returns‚Äãstring[]The calldatas for 'unstakeToken' and 'claimReward'.Defined in‚Äãstaker.ts:82encodeDeposit‚Äã‚ñ∏ Static encodeDeposit(incentiveKeys): stringParameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]A single IncentiveKey or array of IncentiveKeys to be encoded and used in the data parameter in safeTransferFromReturns‚ÄãstringAn IncentiveKey as a stringDefined in‚Äãstaker.ts:173withdrawToken‚Äã‚ñ∏ Static withdrawToken(incentiveKeys, withdrawOptions): MethodParametersParameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]A list of incentiveKeys to unstake from. Should include all incentiveKeys (unique staking programs) that options.tokenId is staked in.withdrawOptionsFullWithdrawOptionsOptions for producing claim calldata and withdraw calldata. Can't withdraw without unstaking all programs for tokenId.Returns‚ÄãMethodParametersCalldata for unstaking, claiming, and withdrawing.Defined in‚Äãstaker.ts:136Helpful?PreviousSqrtPriceMathNextSwapMathTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINCENTIVE_KEY_ABIINTERFACEMethods_encodeIncentiveKeycollectRewardsencodeClaimencodeDepositwithdrawTokenDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
60,p.org sdk swap widget guides getting started#customizing default token list,"p.org sdk swap widget guides getting started#customizing default token list.    Getting Started with the Swap Widget | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap WidgetOverviewGuidesGetting StartedExample ThemesTechnical Referenceweb3-reactCore SDKV2 SDKV1 SDKüè†Swap WidgetGuidesGetting StartedHelpful?On this pageGetting Started with the Swap WidgetThis guide walks you through the steps to embed the swap widget in your website in 2 minutes ‚Äî whether your site is already a decentralized application (dApp) or not. With the swap widget, your users can trade ERC-20 tokens on the Uniswap Protocol without leaving your site!Here‚Äôs a live preview of the swap widget.Example use cases include:Building a custom frontend for the Uniswap ProtocolSwapping assets in a DeFi applicationAcquiring a token to participate in your web3 community (e.g. FWB or a gaming token)Converting to the required currency for an NFT purchase (e.g. WETH)You can make the widget feel like a native part of your app by customizing the colors, font, and token list to match your app theme. This guide will teach you how.Installing the Widgets Library‚ÄãTo get started, install the widgets library using npm or Yarn. If you don‚Äôt already use it, you‚Äôll need to install react-redux as well.npmYarnnpm install --save @uniswap/widgets react-reduxCopyyarn add @uniswap/widgets react-reduxCopyAdding the Swap Widget to Your App‚ÄãNext, embed the React component in your application.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'function App() { <div className=""Uniswap""> <SwapWidget /> </div>}CopyThat‚Äôs it! You should now see a fully functional swap widget on your site. The widget is self-contained and gracefully handles all interactions with the Uniswap Protocol. It leverages the Auto Router to compute the best price across all Uniswap v2 and v3 pools.See a full implementation of the swap widget in the /cra and /nextjs branches of the widgets-demo repo.Create React App V4All code snippets will work seamlessly if you use Next.js or Create React App V5. However, if you‚Äôre using Create React App V4, you‚Äôll need to use the following import statements instead:import { SwapWidget } from '@uniswap/widgets/dist/index.js'import '@uniswap/widgets/dist/fonts.css'CopyRecommended ParametersThe swap widget is a React component that can be easily imported into any React project. It's designed to work out-of-the-box, with no required parameters or web3 integration necessary. Trading is supported on all networks where the Uniswap Protocol is deployed.Although the widget will work out-of-the-box with no parameters, we highly recommend integrators provide JSON-RPC endpoints, like from Infura or Alchemy. Existing dApps can also provide their existing web3 provider to integrate the widget seamlessly into their dApp.Additional optional parameters are available to customize the appearance and performance of the swap widget to fit your unique use case.Web3 Provider‚ÄãThe swap widget uses a web3 provider prop to allow users to connect their wallets, fetch balances, and submit transactions through the user‚Äôs connected wallet.If your app does not maintain its own web3 provider, you can omit the provider prop. The widget will use built-in wallet connection functionality (for WalletConnect and MetaMask), making it easy for you to integrate web3 in your app!If you already have a web3 provider, you can pass your provider object directly into the provider prop. Both ethers and web3.js provider objects are compatible with the widget, as is any EIP-1193 provider. You can directly use the providers returned from web3-react or wagmi (both are ethers providers). If it is not connected to a wallet, it will still be used to read data from the chain, but the widget will still prompt the user to ""Connect wallet"".Be sure to use the wallet-connected providerWhen using wagmi@v0.11, useProvider() will return the fallback provider, not the wallet-connected provider. You should instead pass useSigner<JsonRpcSigner>().data?.provider to reflect the user's connected wallet.If you maintain a web3 provider on your app, you should also consider intercepting the swap widget's wallet connection flow. Do so by passing a handler returning false to the onConnectWalletClick prop, which is triggered when the widget's ""Connect wallet"" button is clicked. Check out libraries such as web3-react, BlockNative‚Äôs Onboard, or Aragon‚Äôs useWallet() to build your own flow. To hide the swap widget's wallet connection flow entirely, pass true to the hideConnectionUI prop.The widget will match the network currently selected by the passed provider. If the user switches networks in your app or in their connected wallet, that change will propagate to the widget as well. If the user connects to a network that is not supported by the swap widget, the widget will gracefully disable itself.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'// We recommend you pass a web3 provider.import { provider } from './your/provider'// We recommend you pass your own JSON-RPC endpoints.const jsonRpcUrlMap = { 1: ['https://mainnet.infura.io/v3/<YOUR_INFURA_PROJECT_ID>'], 3: ['https://ropsten.infura.io/v3/<YOUR_INFURA_PROJECT_ID>']}function App() { <div className=""Uniswap""> <SwapWidget provider={provider} jsonRpcUrlMap={jsonRpcUrlMap} /> </div>}CopyJSON-RPC Endpoints‚ÄãJSON-RPC endpoints are used to read data when no provider is connected. We strongly recommend you pass either a Web3 Provider to the provider prop, or JSON-RPC endpoint URLs to the jsonRpcUrlMap prop.The widget will use these endpoints to fetch on-chain data and submit transactions for signature. If the user connects a MetaMask wallet, the widget will use the JSON-RPC provided by MetaMask when possible. (See a list of all chains supported on widget.) If you don‚Äôt yet have JSON-RPC endpoints, you can easily create them with services like Infura or Alchemy.If you choose not to provide a jsonRpcUrlMap prop or are missing endpoints for some chains, the widget uses free public JSON-RPC endpoints to still allow users to interact with the widget and fetch price quotes. However, these public endpoints are NOT recommended for production environment usage, are severely rate-limited, and aren't necessarily as reliable. When possible, we'd recommend providing your own endpoints!Customizing the Swap WidgetYou can set optional parameters to tailor the appearance and functionality of the swap widget to fit your dApp.Customizing the Width‚ÄãThe swap widget has a fixed height of 360px and a default width of 360px. You cannot modify the height of the widget. You can modify the width up to a minimum width of 300px.You can customize the width by passing a number (of pixels) or a valid CSS width to the width prop of the widget.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'function App() { <div className=""Uniswap""> <SwapWidget  width={360} // Custom width in pixels /> </div>}CopyFor example:width={360} sets the width to 360 pixelswidth=""100%"" sets the width to dynamically fill 100% of the parent containerwidth=""20em"" sets the width to 20 * 16 = 320 pixels because 16px is the base font-size of the widgetThe recommended and default width is 360 pixels.Customizing the Theme‚ÄãYou can customize the colors, font, and border radius of the swap widget to match the look and feel of your dApp. You can also toggle between light and dark modes. This section explains how to customize each attribute of the widget with your own theme.All attributes below are color codes, except fontFamily (string), borderRadius (number between 0 and 1), and tokenColorExtraction(boolean). The next two sections show code examples using these attributes.Check out examples of the swap widget, and the Figma file if you want to mock it up first!Overriding Attributes‚ÄãYou can override specific attributes of the widget by creating a Theme object and defining the properties you wish to override. Any properties left undefined will fallback to the default theme. For example, here is a simple Theme that removes the border radius and sets a custom font family.import { Theme, SwapWidget } from '@uniswap/widgets'// Define a custom theme to override default attributesconst theme: Theme = { borderRadius: 0, fontFamily: '""Helvetica""',}function App() { <div className=""Uniswap""> <SwapWidget theme={theme} /> </div>}CopyPlease note that the borderRadius attribute is a multiplier from 0 to 1 of how much radius to apply. Since the widget uses different values of border radius (e.g. internal edges have tighter radii than external edges), borderRadius will apply your multiplier value on all instances so that the border radii still look proportionally correct.Importing FontsThe swap widget fonts must be imported explicitly with import '@uniswap/widgets/fonts.css'. However, if you‚Äôre overriding the swap widget fonts with your own, or with a default font such as Helvetica in the example above, you can remove this import statement.Enabling Token Color Extraction‚ÄãBy default, the background color of the output module will be set by the¬†module¬†attribute. You can optionally enable color extraction to flood the output module with the color of the selected output token. In the above example, DAI is the output token so the output module is flooded with DAI yellow.To enable color extraction, set the tokenColorExtraction property to true in your Theme object.import { Theme, SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'const enableColorExtractionTheme: Theme = { tokenColorExtraction: true, // Enable color extraction of the output token}function App() { <div className=""Uniswap""> <SwapWidget theme={enableColorExtractionTheme} /> </div>}CopyToggling Light and Dark Mode‚ÄãThe swap widget provides a default light theme and dark theme as a starting point. You can import each one and extend it to create your own theme. If your app can toggle between light and dark mode, you can propagate that state down to the widget by following the example below.import { darkTheme, lightTheme, Theme, SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'let darkMode = true // Dynamically toggle dark mode on and offfunction App() { <div className=""Uniswap""> <SwapWidget theme={darkMode ? darkTheme : lightTheme} /> </div>}CopyMatching System Preference for Light and Dark Mode‚ÄãYou can match the user‚Äôs system preference for light/dark mode by using the useSystemTheme hook. This will return the default widget light or dark theme according to the user‚Äôs system configuration. You can extend this base theme with further customizations, as you will see in the next section.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'function useSystemTheme() { // Access}function App() { const theme = useSystemTheme() // Get a theme that matches the user system preference <div className=""Uniswap""> <SwapWidget theme={theme} /> </div>}CopyExtending Themes‚ÄãYou can extend any theme with custom attributes. The below example extends the base light and dark themes with custom colors.import { darkTheme, lightTheme, Theme, SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'const myLightTheme: Theme = { ...lightTheme, // Extend the lightTheme accent: '#FF007A', primary: '#000000', secondary: '#565A69',}const myDarkTheme: Theme = { ...darkTheme, // Extend the darkTheme accent: '#2172E5', primary: '#FFFFFF', secondary: '#888D9B',}let darkMode = truefunction App() { <div className=""Uniswap""> <SwapWidget theme={darkMode ? myDarkTheme : myLightTheme} /> </div>}CopyCustomizing the Token Lists‚ÄãBy default, the widget will use the Uniswap Labs default token list in the selector.Customizing the Default Token List‚ÄãIf you want to offer a different set of tokens in the widget, you can provide a custom tokenList parameter. You can browse popular token lists to find one that suits your needs and then pass the URL as a parameter.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'const CMC_TOKEN_LIST = 'https://api.coinmarketcap.com/data-api/v3/uniswap/all.json'function App() { <div className=""Uniswap""> <SwapWidget  tokenList={CMC_TOKEN_LIST} // Use the CoinMarketCap token list /> </div>}CopyAlternatively, you can create your own token list. There are two ways to provide your own token list for the widget.The first option is to create a full token list, host it at your own URI, and pass the URI as a parameter as in the above example. This option is recommended if you want to use the same token list in multiple places throughout your application or community.The second and easiest option is to construct a custom token list inline as an array of tokens. The schema is equivalent to the tokens array from the tokenlist JSON schema. This option lets you skip deployment, hosting, and versioning of a full URI token list. Here is an example of an inline token list containing only the DAI, USDT, and USDC tokens (in addition to ETH which is always available, regardless of token list).import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'// You can also pass a token list as JSON, as long as it matches the schemaconst MY_TOKEN_LIST = [ { ""name"": ""Dai Stablecoin"", ""address"": ""0x6B175474E89094C44Da98b954EedeAC495271d0F"", ""symbol"": ""DAI"", ""decimals"": 18, ""chainId"": 1, ""logoURI"": ""https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x6B175474E89094C44Da98b954EedeAC495271d0F/logo.png"" }, { ""name"": ""Tether USD"", ""address"": ""0xdAC17F958D2ee523a2206206994597C13D831ec7"", ""symbol"": ""USDT"", ""decimals"": 6, ""chainId"": 1, ""logoURI"": ""https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png"" }, { ""name"": ""USD Coin"", ""address"": ""0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"", ""symbol"": ""USDC"", ""decimals"": 6, ""chainId"": 1, ""logoURI"": ""https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/logo.png"" },]function App() { <div className=""Uniswap""> <SwapWidget tokenList={MY_TOKEN_LIST} /> </div>}CopyPlease note that the swap widget only enforces metadata validation on remotely hosted token lists, not on token list data passed as a literal value to the widget like in this example.If you want to add Layer 2 tokens to the token list, you can add an extension field. See this GitHub issue for details.Customizing the Default Input and Output Tokens‚ÄãYou can set the defaultInputTokenAddress, defaultInputAmount, defaultOutputTokenAddress, and defaultOutputAmount to pre-populate the input and output token fields respectively. This is useful when the widget appears in a context where you know which tokens the user is evaluating to trade. For example, if the widget appears on a page that displays the WBTC price chart, it would be helpful to pre-select WBTC as the output token in the widget.If your page does not need any particular defaults, then the recommended default input token is the native asset of the active network (e.g. ETH) and no default output token is recommended. Since ETH does not have an address, you can pass 'NATIVE' as the parameter to set it as the default input or output token.The following example sets the default input to 2 ETH and the default output token to WBTC.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'// Default token list from Uniswapconst UNISWAP_TOKEN_LIST = 'https://gateway.ipfs.io/ipns/tokens.uniswap.org'// Use the native token of the connected chain as the default input tokenconst NATIVE = 'NATIVE' // Special address for native token// WBTC as the default output tokenconst WBTC = '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599'function App() { <div className=""Uniswap""> <SwapWidget  tokenList={UNISWAP_TOKEN_LIST}  defaultInputTokenAddress={NATIVE}  defaultInputAmount={2}  defaultOutputTokenAddress={WBTC} /> </div>}CopyUnderstanding the Swap Widget States‚ÄãThe widget has two main connectivity states depending on if the user has connected a wallet.Before wallet connection, the widget will use the JSON-RPC endpoint to fetch token price data and provide trade quotes, but submitting transactions will be disabled.After wallet connection, the widget will be fully functional. The user will be able to fetch trade quotes and submit swap transactions using the JSON-RPC endpoint and web3 provider from their connected wallet.Questions?Join the Discord channel to ask questions and get support from the Uniswap community.Helpful?PreviousOverviewNextExample ThemesInstalling the Widgets LibraryAdding the Swap Widget to Your AppWeb3 ProviderJSON-RPC EndpointsCustomizing the WidthCustomizing the ThemeOverriding AttributesEnabling Token Color ExtractionToggling Light and Dark ModeMatching System Preference for Light and Dark ModeExtending ThemesCustomizing the Token ListsCustomizing the Default Token ListCustomizing the Default Input and Output TokensUnderstanding the Swap Widget StatesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
61,p.org sdk v3 reference classes NonfungiblePositionManager#encodecollect,"p.org sdk v3 reference classes NonfungiblePositionManager#encodecollect.    NonfungiblePositionManager | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesNonfungiblePositionManagerHelpful?On this pageNonfungiblePositionManager@uniswap/v3-sdk / Exports / NonfungiblePositionManagerClass: NonfungiblePositionManagerTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãaddCallParameterscollectCallParameterscreateCallParametersencodeCollectencodeCreateremoveCallParameterssafeTransferFromParametersConstructors‚Äãconstructor‚Äã‚Ä¢ Private new NonfungiblePositionManager()Cannot be constructed.Defined in‚ÄãnonfungiblePositionManager.ts:181Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚ÄãnonfungiblePositionManager.ts:176Methods‚ÄãaddCallParameters‚Äã‚ñ∏ Static addCallParameters(position, options): MethodParametersParameters‚ÄãNameTypepositionPositionoptionsAddLiquidityOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:199collectCallParameters‚Äã‚ñ∏ Static collectCallParameters(options): MethodParametersParameters‚ÄãNameTypeoptionsCollectOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:326createCallParameters‚Äã‚ñ∏ Static createCallParameters(pool): MethodParametersParameters‚ÄãNameTypepoolPoolReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:192encodeCollect‚Äã‚ñ∏ Static Private encodeCollect(options): string[]Parameters‚ÄãNameTypeoptionsCollectOptionsReturns‚Äãstring[]Defined in‚ÄãnonfungiblePositionManager.ts:286encodeCreate‚Äã‚ñ∏ Static Private encodeCreate(pool): stringParameters‚ÄãNameTypepoolPoolReturns‚ÄãstringDefined in‚ÄãnonfungiblePositionManager.ts:183removeCallParameters‚Äã‚ñ∏ Static removeCallParameters(position, options): MethodParametersProduces the calldata for completely or partially exiting a positionParameters‚ÄãNameTypeDescriptionpositionPositionThe position to exitoptionsRemoveLiquidityOptionsAdditional information necessary for generating the calldataReturns‚ÄãMethodParametersThe call parametersDefined in‚ÄãnonfungiblePositionManager.ts:341safeTransferFromParameters‚Äã‚ñ∏ Static safeTransferFromParameters(options): MethodParametersParameters‚ÄãNameTypeoptionsSafeTransferOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:416Helpful?PreviousNoTickDataProviderNextPaymentsTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsaddCallParameterscollectCallParameterscreateCallParametersencodeCollectencodeCreateremoveCallParameterssafeTransferFromParametersDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
62,p.org contracts v2 concepts protocol overview ecosystem participants,"p.org contracts v2 concepts protocol overview ecosystem participants.    Ecosystem Participants | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewHow Uniswap worksEcosystem ParticipantsSmart contractsGlossaryCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolConceptsProtocol OverviewEcosystem ParticipantsHelpful?Ecosystem ParticipantsThe Uniswap ecosystem is primarily comprised of three types of users: liquidity providers, traders, and developers. Liquidity providers are incentivized to contribute ERC-20 tokens to common liquidity pools. Traders can swap these tokens for one another for a fixed 0.30% fee (which goes to liquidity providers). Developers can integrate directly with Uniswap smart contracts to power new and exciting interactions with tokens, trading interfaces, retail experiences, and more.In total, interactions between these classes create a positive feedback loop, fueling digital economies by defining a common language through which tokens can be pooled, traded and used.Liquidity ProvidersLiquidity providers, or LPs, are not a homogenous group:Passive LPs are token holders who wish to passively invest their assets to accumulate trading fees.Professional LPs are focused on market making as their primary strategy. They usually develop custom tools and ways of tracking their liquidity positions across different DeFi projects.Token projects sometimes choose to become LPs to create a liquid marketplace for their token. This allows tokens to be bought and sold more easily, and unlocks interoperability with other DeFi projects through Uniswap.Finally, some DeFi pioneers are exploring complex liquidity provision interactions like incentivized liquidity, liquidity as collateral, and other experimental strategies. Uniswap is the perfect protocol for projects to experiment with these kinds of ideas.TradersThere are a several categories of traders in the protocol ecosystem:Speculators use a variety of community built tools and products to swap tokens using liquidity pulled from the Uniswap protocol.Arbitrage bots seek profits by comparing prices across different platforms to find an edge. (Though it might seem extractive, these bots actually help equalize prices across broader Ethereum markets and keep things fair.)DAPP users buy tokens on Uniswap for use in other applications on Ethereum.Smart contracts that execute trades on the protocol by implementing swap functionality (from products like DEX aggregators to custom Solidity scripts).In all cases, trades are subject to the same flat fee for trading on the protocol. Each is important for increasing the accuracy of prices and incentivizing liquidity.Developers/ProjectsThere are far too many ways Uniswap is used in the wider Ethereum ecosystem to count, but some examples include:The open-source, accessible nature of Uniswap means there are countless UX experiments and front-ends built to offer access to Uniswap functionality. You can find Uniswap functions in most of the major DeFi dashboard projects. There are also many Uniswap-specific tools built by the community.Wallets often integrate swapping and liquidity provision functionality as a core offering of their product.DEX (decentralized exchange) aggregators pull liquidity from many liquidity protocols to offer traders the best prices by splitting their trades. Uniswap is the biggest single decentralized liquidity source for these projects.Smart contract developers use the suite of functions available to invent new DeFi tools and other various experimental ideas. See projects like Unisocks or Zora, among many, many others.Uniswap Team and CommunityThe Uniswap team along with the broader Uniswap community drives development of the protocol and ecosystem.Edit this pageHelpful?PreviousHow Uniswap worksNextSmart contractsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
63,p.org concepts overview,"p.org concepts overview.    What Is Uniswap? | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchWhat Is Uniswap?The Uniswap ProtocolProtocol ConceptsGovernanceResearchResourcesGlossaryüè†What Is Uniswap?Helpful?On this pageWhat Is Uniswap?Protocol, Interface, Labs‚ÄãTo begin, we should make clear the distinctions between the different areas of ""Uniswap"", some of which may confuse new users.Uniswap Labs: The company which developed the Uniswap protocol, along with the web interface.The Uniswap Protocol: A suite of persistent, non-upgradable smart contracts that together create an automated market maker, a protocol that facilitates peer-to-peer market making and swapping of ERC-20 tokens on the Ethereum blockchain.The Uniswap Interface: A web interface that allows for easy interaction with the Uniswap protocol. The interface is only one of many ways one may interact with the Uniswap protocol.Uniswap Governance: A governance system for governing the Uniswap Protocol, enabled by the UNI token.Helpful?NextThe Uniswap ProtocolProtocol, Interface, LabsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
64,p.org sdk v3 reference classes Staker#constructor,"p.org sdk v3 reference classes Staker#constructor.    Staker | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesStakerHelpful?On this pageStaker@uniswap/v3-sdk / Exports / StakerClass: StakerTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINCENTIVE_KEY_ABIINTERFACEMethods‚Äã_encodeIncentiveKeycollectRewardsencodeClaimencodeDepositwithdrawTokenConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new Staker()Defined in‚Äãstaker.ts:72Properties‚ÄãINCENTIVE_KEY_ABI‚Äã‚ñ™ Static Private INCENTIVE_KEY_ABI: string = 'tuple(address rewardToken, address pool, uint256 startTime, uint256 endTime, address refundee)'Defined in‚Äãstaker.ts:73INTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚Äãstaker.ts:70Methods‚Äã_encodeIncentiveKey‚Äã‚ñ∏ Static Private _encodeIncentiveKey(incentiveKey): ObjectParameters‚ÄãNameTypeDescriptionincentiveKeyIncentiveKeyAn IncentiveKey which represents a unique staking program.Returns‚ÄãObjectAn encoded IncentiveKey to be read by ethersDefined in‚Äãstaker.ts:194collectRewards‚Äã‚ñ∏ Static collectRewards(incentiveKeys, options): MethodParametersNote: A tokenId can be staked in many programs but to claim rewards and continue the program you must unstake, claim, and then restake.Parameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]An IncentiveKey or array of IncentiveKeys that tokenId is staked in. Input an array of IncentiveKeys to claim rewards for each program.optionsClaimOptionsClaimOptions to specify tokenId, recipient, and amount wanting to collect. Note that you can only specify one amount and one recipient across the various programs if you are collecting from multiple programs at once.Returns‚ÄãMethodParametersDefined in‚Äãstaker.ts:107encodeClaim‚Äã‚ñ∏ Static Private encodeClaim(incentiveKey, options): string[]To claim rewards, must unstake and then claim.Parameters‚ÄãNameTypeDescriptionincentiveKeyIncentiveKeyThe unique identifier of a staking program.optionsClaimOptionsOptions for producing the calldata to claim. Can't claim unless you unstake.Returns‚Äãstring[]The calldatas for 'unstakeToken' and 'claimReward'.Defined in‚Äãstaker.ts:82encodeDeposit‚Äã‚ñ∏ Static encodeDeposit(incentiveKeys): stringParameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]A single IncentiveKey or array of IncentiveKeys to be encoded and used in the data parameter in safeTransferFromReturns‚ÄãstringAn IncentiveKey as a stringDefined in‚Äãstaker.ts:173withdrawToken‚Äã‚ñ∏ Static withdrawToken(incentiveKeys, withdrawOptions): MethodParametersParameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]A list of incentiveKeys to unstake from. Should include all incentiveKeys (unique staking programs) that options.tokenId is staked in.withdrawOptionsFullWithdrawOptionsOptions for producing claim calldata and withdraw calldata. Can't withdraw without unstaking all programs for tokenId.Returns‚ÄãMethodParametersCalldata for unstaking, claiming, and withdrawing.Defined in‚Äãstaker.ts:136Helpful?PreviousSqrtPriceMathNextSwapMathTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINCENTIVE_KEY_ABIINTERFACEMethods_encodeIncentiveKeycollectRewardsencodeClaimencodeDepositwithdrawTokenDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
65,p.org contracts universal router technical reference#v3 swap exact out,"p.org contracts universal router technical reference#v3 swap exact out.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
66,p.org contracts v3 reference periphery base PeripheryPayments,"p.org contracts v3 reference periphery base PeripheryPayments.    PeripheryPayments | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseBlockTimestampERC721PermitLiquidityManagementMulticallPeripheryImmutableStatePeripheryPaymentsPeripheryPaymentsWithFeePoolInitializerSelfPermitInterfacesLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryBasePeripheryPaymentsHelpful?On this pagePeripheryPaymentsFunctions‚Äãreceive‚Äã function receive( ) externalCopyunwrapWETH9‚Äã function unwrapWETH9( uint256 amountMinimum, address recipient ) externalCopyUnwraps the contract's WETH9 balance and sends it to recipient as ETH.The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.Parameters:‚ÄãNameTypeDescriptionamountMinimumuint256The minimum amount of WETH9 to unwraprecipientaddressThe address receiving ETHsweepToken‚Äã function sweepToken( address token, uint256 amountMinimum, address recipient ) externalCopyTransfers the full amount of a token held by this contract to recipientThe amountMinimum parameter prevents malicious contracts from stealing the token from usersParameters:‚ÄãNameTypeDescriptiontokenaddressThe contract address of the token which will be transferred to recipientamountMinimumuint256The minimum amount of token required for a transferrecipientaddressThe destination address of the tokenrefundETH‚Äã function refundETH( ) externalCopyRefunds any ETH balance held by this contract to the msg.senderUseful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amountpay‚Äã function pay( address token, address payer, address recipient, uint256 value ) internalCopyParameters:‚ÄãNameTypeDescriptiontokenaddressThe token to paypayeraddressThe entity that must payrecipientaddressThe entity that will receive paymentvalueuint256The amount to payEdit this pageHelpful?PreviousPeripheryImmutableStateNextPeripheryPaymentsWithFeeFunctionsreceiveunwrapWETH9sweepTokenrefundETHpayDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
67,p.org sdk v3 reference classes Pool# token0price,"p.org sdk v3 reference classes Pool# token0price.    Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPoolHelpful?On this pagePool@uniswap/v3-sdk / Exports / PoolClass: PoolRepresents a V3 poolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1Accessors‚ÄãchainIdtickSpacingtoken0Pricetoken1PriceMethods‚ÄãgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressConstructors‚Äãconstructor‚Äã‚Ä¢ new Pool(tokenA, tokenB, fee, sqrtRatioX96, liquidity, tickCurrent, ticks?)Construct a poolParameters‚ÄãNameTypeDefault valueDescriptiontokenATokenundefinedOne of the tokens in the pooltokenBTokenundefinedThe other token in the poolfeeFeeAmountundefinedThe fee in hundredths of a bips of the input amount of every swap that is collected by the poolsqrtRatioX96BigintIshundefinedThe sqrt of the current ratio of amounts of token1 to token0liquidityBigintIshundefinedThe current value of in range liquiditytickCurrentnumberundefinedThe current tick of the poolticksTickDataProvider | (Tick | TickConstructorArgs)[]NO_TICK_DATA_PROVIDER_DEFAULTThe current state of the pool ticks or a data provider that can return tick dataDefined in‚Äãentities/pool.ts:70Properties‚Äã_token0Price‚Äã‚Ä¢ Private Optional _token0Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:41_token1Price‚Äã‚Ä¢ Private Optional _token1Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:42fee‚Äã‚Ä¢ Readonly fee: FeeAmountDefined in‚Äãentities/pool.ts:35liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/pool.ts:37sqrtRatioX96‚Äã‚Ä¢ Readonly sqrtRatioX96: defaultDefined in‚Äãentities/pool.ts:36tickCurrent‚Äã‚Ä¢ Readonly tickCurrent: numberDefined in‚Äãentities/pool.ts:38tickDataProvider‚Äã‚Ä¢ Readonly tickDataProvider: TickDataProviderDefined in‚Äãentities/pool.ts:39token0‚Äã‚Ä¢ Readonly token0: TokenDefined in‚Äãentities/pool.ts:33token1‚Äã‚Ä¢ Readonly token1: TokenDefined in‚Äãentities/pool.ts:34Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns the chain ID of the tokens in the pool.Returns‚ÄãnumberDefined in‚Äãentities/pool.ts:149tickSpacing‚Äã‚Ä¢ get tickSpacing(): numberReturns‚ÄãnumberDefined in‚Äãentities/pool.ts:317token0Price‚Äã‚Ä¢ get token0Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:109token1Price‚Äã‚Ä¢ get token1Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:124Methods‚ÄãgetInputAmount‚Äã‚ñ∏ getInputAmount(outputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given a desired output amount of a token, return the computed input amount and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptionoutputAmountCurrencyAmount<Token>the output amount for which to quote the input amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The input amount and the pool with updated stateDefined in‚Äãentities/pool.ts:185getOutputAmount‚Äã‚ñ∏ getOutputAmount(inputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given an input amount of a token, return the computed output amount, and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptioninputAmountCurrencyAmount<Token>The input amount for which to quote the output amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limitReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The output amount and the pool with updated stateDefined in‚Äãentities/pool.ts:159involvesToken‚Äã‚ñ∏ involvesToken(token): booleanReturns true if the token is either token0 or token1Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to checkReturns‚ÄãbooleanTrue if token is either token0 or tokenDefined in‚Äãentities/pool.ts:102priceOf‚Äã‚ñ∏ priceOf(token): Price<Token, Token>Return the price of the given token in terms of the other token in the pool.Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to return price ofReturns‚ÄãPrice<Token, Token>The price of the given token, in terms of the other.Defined in‚Äãentities/pool.ts:141swap‚Äã‚ñ∏ Private swap(zeroForOne, amountSpecified, sqrtPriceLimitX96?): Promise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>Executes a swapParameters‚ÄãNameTypeDescriptionzeroForOnebooleanWhether the amount in is token0 or token1amountSpecifieddefaultThe amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>amountCalculatedsqrtRatioX96liquiditytickCurrentDefined in‚Äãentities/pool.ts:215getAddress‚Äã‚ñ∏ Static getAddress(tokenA, tokenB, fee, initCodeHashManualOverride?, factoryAddressOverride?): stringParameters‚ÄãNameTypetokenATokentokenBTokenfeeFeeAmountinitCodeHashManualOverride?stringfactoryAddressOverride?stringReturns‚ÄãstringDefined in‚Äãentities/pool.ts:44Helpful?PreviousPaymentsNextPositionTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1AccessorschainIdtickSpacingtoken0Pricetoken1PriceMethodsgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
68,p.org sdk v3 reference classes Pool# token1price,"p.org sdk v3 reference classes Pool# token1price.    Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPoolHelpful?On this pagePool@uniswap/v3-sdk / Exports / PoolClass: PoolRepresents a V3 poolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1Accessors‚ÄãchainIdtickSpacingtoken0Pricetoken1PriceMethods‚ÄãgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressConstructors‚Äãconstructor‚Äã‚Ä¢ new Pool(tokenA, tokenB, fee, sqrtRatioX96, liquidity, tickCurrent, ticks?)Construct a poolParameters‚ÄãNameTypeDefault valueDescriptiontokenATokenundefinedOne of the tokens in the pooltokenBTokenundefinedThe other token in the poolfeeFeeAmountundefinedThe fee in hundredths of a bips of the input amount of every swap that is collected by the poolsqrtRatioX96BigintIshundefinedThe sqrt of the current ratio of amounts of token1 to token0liquidityBigintIshundefinedThe current value of in range liquiditytickCurrentnumberundefinedThe current tick of the poolticksTickDataProvider | (Tick | TickConstructorArgs)[]NO_TICK_DATA_PROVIDER_DEFAULTThe current state of the pool ticks or a data provider that can return tick dataDefined in‚Äãentities/pool.ts:70Properties‚Äã_token0Price‚Äã‚Ä¢ Private Optional _token0Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:41_token1Price‚Äã‚Ä¢ Private Optional _token1Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:42fee‚Äã‚Ä¢ Readonly fee: FeeAmountDefined in‚Äãentities/pool.ts:35liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/pool.ts:37sqrtRatioX96‚Äã‚Ä¢ Readonly sqrtRatioX96: defaultDefined in‚Äãentities/pool.ts:36tickCurrent‚Äã‚Ä¢ Readonly tickCurrent: numberDefined in‚Äãentities/pool.ts:38tickDataProvider‚Äã‚Ä¢ Readonly tickDataProvider: TickDataProviderDefined in‚Äãentities/pool.ts:39token0‚Äã‚Ä¢ Readonly token0: TokenDefined in‚Äãentities/pool.ts:33token1‚Äã‚Ä¢ Readonly token1: TokenDefined in‚Äãentities/pool.ts:34Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns the chain ID of the tokens in the pool.Returns‚ÄãnumberDefined in‚Äãentities/pool.ts:149tickSpacing‚Äã‚Ä¢ get tickSpacing(): numberReturns‚ÄãnumberDefined in‚Äãentities/pool.ts:317token0Price‚Äã‚Ä¢ get token0Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:109token1Price‚Äã‚Ä¢ get token1Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:124Methods‚ÄãgetInputAmount‚Äã‚ñ∏ getInputAmount(outputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given a desired output amount of a token, return the computed input amount and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptionoutputAmountCurrencyAmount<Token>the output amount for which to quote the input amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The input amount and the pool with updated stateDefined in‚Äãentities/pool.ts:185getOutputAmount‚Äã‚ñ∏ getOutputAmount(inputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given an input amount of a token, return the computed output amount, and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptioninputAmountCurrencyAmount<Token>The input amount for which to quote the output amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limitReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The output amount and the pool with updated stateDefined in‚Äãentities/pool.ts:159involvesToken‚Äã‚ñ∏ involvesToken(token): booleanReturns true if the token is either token0 or token1Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to checkReturns‚ÄãbooleanTrue if token is either token0 or tokenDefined in‚Äãentities/pool.ts:102priceOf‚Äã‚ñ∏ priceOf(token): Price<Token, Token>Return the price of the given token in terms of the other token in the pool.Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to return price ofReturns‚ÄãPrice<Token, Token>The price of the given token, in terms of the other.Defined in‚Äãentities/pool.ts:141swap‚Äã‚ñ∏ Private swap(zeroForOne, amountSpecified, sqrtPriceLimitX96?): Promise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>Executes a swapParameters‚ÄãNameTypeDescriptionzeroForOnebooleanWhether the amount in is token0 or token1amountSpecifieddefaultThe amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>amountCalculatedsqrtRatioX96liquiditytickCurrentDefined in‚Äãentities/pool.ts:215getAddress‚Äã‚ñ∏ Static getAddress(tokenA, tokenB, fee, initCodeHashManualOverride?, factoryAddressOverride?): stringParameters‚ÄãNameTypetokenATokentokenBTokenfeeFeeAmountinitCodeHashManualOverride?stringfactoryAddressOverride?stringReturns‚ÄãstringDefined in‚Äãentities/pool.ts:44Helpful?PreviousPaymentsNextPositionTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1AccessorschainIdtickSpacingtoken0Pricetoken1PriceMethodsgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
69,p.org contracts v1 reference interfaces,"p.org contracts v1 reference interfaces.    Interfaces | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 ProtocolOverviewGuidesConnect to UniswapPool LiquidityTrade TokensCustom LinkingIframe IntegrationToken ListingTechnical ReferenceFactoryExchangeInterfacesüè†V1 ProtocolTechnical ReferenceInterfacesHelpful?On this pageFactorySolidity‚Äãinterface UniswapFactoryInterface { // Public Variables address public exchangeTemplate; uint256 public tokenCount; // Create Exchange function createExchange(address token) external returns (address exchange); // Get Exchange and Token Info function getExchange(address token) external view returns (address exchange); function getToken(address exchange) external view returns (address token); function getTokenWithId(uint256 tokenId) external view returns (address token); // Never use function initializeFactory(address template) external;}CopyVyper‚Äãcontract UniswapFactoryInterface(): # Create Exchange def createExchange(token: address) -> address: modifying # Public Variables def exchangeTemplate() -> address: constant def tokenCount() -> uint256: constant # Get Exchange and Token Info def getExchange(token_addr: address) -> address: constant def getToken(exchange: address) -> address: constant def getTokenWithId(token_id: uint256) -> address: constant # Initialize Factory def initializeFactory(template: address): modifyingCopyExchangeSolidity‚Äãinterface UniswapExchangeInterface { // Address of ERC20 token sold on this exchange function tokenAddress() external view returns (address token); // Address of Uniswap Factory function factoryAddress() external view returns (address factory); // Provide Liquidity function addLiquidity(uint256 min_liquidity, uint256 max_tokens, uint256 deadline) external payable returns (uint256); function removeLiquidity(uint256 amount, uint256 min_eth, uint256 min_tokens, uint256 deadline) external returns (uint256, uint256); // Get Prices function getEthToTokenInputPrice(uint256 eth_sold) external view returns (uint256 tokens_bought); function getEthToTokenOutputPrice(uint256 tokens_bought) external view returns (uint256 eth_sold); function getTokenToEthInputPrice(uint256 tokens_sold) external view returns (uint256 eth_bought); function getTokenToEthOutputPrice(uint256 eth_bought) external view returns (uint256 tokens_sold); // Trade ETH to ERC20 function ethToTokenSwapInput(uint256 min_tokens, uint256 deadline) external payable returns (uint256 tokens_bought); function ethToTokenTransferInput(uint256 min_tokens, uint256 deadline, address recipient) external payable returns (uint256 tokens_bought); function ethToTokenSwapOutput(uint256 tokens_bought, uint256 deadline) external payable returns (uint256 eth_sold); function ethToTokenTransferOutput(uint256 tokens_bought, uint256 deadline, address recipient) external payable returns (uint256 eth_sold); // Trade ERC20 to ETH function tokenToEthSwapInput(uint256 tokens_sold, uint256 min_eth, uint256 deadline) external returns (uint256 eth_bought); function tokenToEthTransferInput(uint256 tokens_sold, uint256 min_eth, uint256 deadline, address recipient) external returns (uint256 eth_bought); function tokenToEthSwapOutput(uint256 eth_bought, uint256 max_tokens, uint256 deadline) external returns (uint256 tokens_sold); function tokenToEthTransferOutput(uint256 eth_bought, uint256 max_tokens, uint256 deadline, address recipient) external returns (uint256 tokens_sold); // Trade ERC20 to ERC20 function tokenToTokenSwapInput(uint256 tokens_sold, uint256 min_tokens_bought, uint256 min_eth_bought, uint256 deadline, address token_addr) external returns (uint256 tokens_bought); function tokenToTokenTransferInput(uint256 tokens_sold, uint256 min_tokens_bought, uint256 min_eth_bought, uint256 deadline, address recipient, address token_addr) external returns (uint256 tokens_bought); function tokenToTokenSwapOutput(uint256 tokens_bought, uint256 max_tokens_sold, uint256 max_eth_sold, uint256 deadline, address token_addr) external returns (uint256 tokens_sold); function tokenToTokenTransferOutput(uint256 tokens_bought, uint256 max_tokens_sold, uint256 max_eth_sold, uint256 deadline, address recipient, address token_addr) external returns (uint256 tokens_sold); // Trade ERC20 to Custom Pool function tokenToExchangeSwapInput(uint256 tokens_sold, uint256 min_tokens_bought, uint256 min_eth_bought, uint256 deadline, address exchange_addr) external returns (uint256 tokens_bought); function tokenToExchangeTransferInput(uint256 tokens_sold, uint256 min_tokens_bought, uint256 min_eth_bought, uint256 deadline, address recipient, address exchange_addr) external returns (uint256 tokens_bought); function tokenToExchangeSwapOutput(uint256 tokens_bought, uint256 max_tokens_sold, uint256 max_eth_sold, uint256 deadline, address exchange_addr) external returns (uint256 tokens_sold); function tokenToExchangeTransferOutput(uint256 tokens_bought, uint256 max_tokens_sold, uint256 max_eth_sold, uint256 deadline, address recipient, address exchange_addr) external returns (uint256 tokens_sold); // ERC20 comaptibility for liquidity tokens bytes32 public name; bytes32 public symbol; uint256 public decimals; function transfer(address _to, uint256 _value) external returns (bool); function transferFrom(address _from, address _to, uint256 value) external returns (bool); function approve(address _spender, uint256 _value) external returns (bool); function allowance(address _owner, address _spender) external view returns (uint256); function balanceOf(address _owner) external view returns (uint256); function totalSupply() external view returns (uint256); // Never use function setup(address token_addr) external;}CopyVyper‚Äãcontract UniswapExchangeInterface(): # Public Variables def tokenAddress() -> address: constant def factoryAddress() -> address: constant # Providing Liquidity def addLiquidity(min_liquidity: uint256, max_tokens: uint256, deadline: timestamp) -> uint256: modifying def removeLiquidity(amount: uint256, min_eth: uint256(wei), min_tokens: uint256, deadline: timestamp) -> (uint256(wei), uint256): modifying # Trading def ethToTokenSwapInput(min_tokens: uint256, deadline: timestamp) -> uint256: modifying def ethToTokenTransferInput(min_tokens: uint256, deadline: timestamp, recipient: address) -> uint256: modifying def ethToTokenSwapOutput(tokens_bought: uint256, deadline: timestamp) -> uint256(wei): modifying def ethToTokenTransferOutput(tokens_bought: uint256, deadline: timestamp, recipient: address) -> uint256(wei): modifying def tokenToEthSwapInput(tokens_sold: uint256, min_eth: uint256(wei), deadline: timestamp) -> uint256(wei): modifying def tokenToEthTransferInput(tokens_sold: uint256, min_eth: uint256(wei), deadline: timestamp, recipient: address) -> uint256(wei): modifying def tokenToEthSwapOutput(eth_bought: uint256(wei), max_tokens: uint256, deadline: timestamp) -> uint256: modifying def tokenToEthTransferOutput(eth_bought: uint256(wei), max_tokens: uint256, deadline: timestamp, recipient: address) -> uint256: modifying def tokenToTokenSwapInput(tokens_sold: uint256, min_tokens_bought: uint256, min_eth_bought: uint256(wei), deadline: timestamp, token_addr: address) -> uint256: modifying def tokenToTokenTransferInput(tokens_sold: uint256, min_tokens_bought: uint256, min_eth_bought: uint256(wei), deadline: timestamp, recipient: address, token_addr: address) -> uint256: modifying def tokenToTokenSwapOutput(tokens_bought: uint256, max_tokens_sold: uint256, max_eth_sold: uint256(wei), deadline: timestamp, token_addr: address) -> uint256: modifying def tokenToTokenTransferOutput(tokens_bought: uint256, max_tokens_sold: uint256, max_eth_sold: uint256(wei), deadline: timestamp, recipient: address, token_addr: address) -> uint256: modifying def tokenToExchangeSwapInput(tokens_sold: uint256, min_tokens_bought: uint256, min_eth_bought: uint256(wei), deadline: timestamp, exchange_addr: address) -> uint256: modifying def tokenToExchangeTransferInput(tokens_sold: uint256, min_tokens_bought: uint256, min_eth_bought: uint256(wei), deadline: timestamp, recipient: address, exchange_addr: address) -> uint256: modifying def tokenToExchangeSwapOutput(tokens_bought: uint256, max_tokens_sold: uint256, max_eth_sold: uint256(wei), deadline: timestamp, exchange_addr: address) -> uint256: modifying def tokenToExchangeTransferOutput(tokens_bought: uint256, max_tokens_sold: uint256, max_eth_sold: uint256(wei), deadline: timestamp, recipient: address, exchange_addr: address) -> uint256: modifying # Get Price def getEthToTokenInputPrice(eth_sold: uint256(wei)) -> uint256: constant def getEthToTokenOutputPrice(tokens_bought: uint256) -> uint256(wei): constant def getTokenToEthInputPrice(tokens_sold: uint256) -> uint256(wei): constant def getTokenToEthOutputPrice(eth_bought: uint256(wei)) -> uint256: constant # Pool Token ERC20 Compatibility def balanceOf() -> address: constant def allowance(_owner : address, _spender : address) -> uint256: constant def transfer(_to : address, _value : uint256) -> bool: modifying def transferFrom(_from : address, _to : address, _value : uint256) -> bool: modifying def approve(_spender : address, _value : uint256) -> bool: modifying # Setup def setup(token_addr: address): modifyingCopyERC20 TokenSolidity‚Äãinterface ERC20Interface { function totalSupply() public view returns (uint); function balanceOf(address tokenOwner) public view returns (uint balance); function allowance(address tokenOwner, address spender) public view returns (uint remaining); function transfer(address to, uint tokens) public returns (bool success); function approve(address spender, uint tokens) public returns (bool success); function transferFrom(address from, address to, uint tokens) public returns (bool success); // optional function name() external view returns (string); function symbol() external view returns (string); function decimals() external view returns (string); event Transfer(address indexed from, address indexed to, uint tokens); event Approval(address indexed tokenOwner, address indexed spender, uint tokens);}CopyVyper‚Äãcontract ERC20Interface(): def totalSupply() -> uint256: constant def balanceOf(_owner: address) -> uint256: constant def allowance(_owner : address, _spender : address) -> uint256: constant def transfer(_to : address, _value : uint256) -> bool: modifying def approve(_spender : address, _value : uint256) -> bool: modifying def transferFrom(_from : address, _to : address, _value : uint256) -> bool: modifying # optional def name() -> bytes32: constant def symbol() -> bytes32: constant def decimals() -> uint256: constantCopyEdit this pageHelpful?PreviousExchangeSolidityVyperSolidityVyperSolidityVyperDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
70,p.org sdk core reference classes Fraction#tryparsefraction,"p.org sdk core reference classes Fraction#tryparsefraction.    Fraction | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesFractionHelpful?On this pageFraction@uniswap/sdk-core / Exports / FractionClass: FractionHierarchy‚ÄãFraction‚Ü≥ CurrencyAmount‚Ü≥ Percent‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatornumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionConstructors‚Äãconstructor‚Äã‚Ä¢ new Fraction(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:107subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:138toSignificant‚Äã‚ñ∏ toSignificant(significantDigits, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:123tryParseFraction‚Äã‚ñ∏ Static Private tryParseFraction(fractionish): FractionParameters‚ÄãNameTypefractionishBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:33Helpful?PreviousEtherNextNativeCurrencyHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatornumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
71,p.org sdk core reference classes Percent#divide,"p.org sdk core reference classes Percent#divide.    Percent | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPercentHelpful?On this pagePercent@uniswap/sdk-core / Exports / PercentClass: PercentHierarchy‚ÄãFraction‚Ü≥ PercentTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatorisPercentnumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Percent(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshInherited from‚ÄãFraction.constructorDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26isPercent‚Äã‚Ä¢ Readonly isPercent: trueThis boolean prevents a fraction from being interpreted as a PercentDefined in‚Äãentities/fractions/percent.ts:19numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.addDefined in‚Äãentities/fractions/percent.ts:21divide‚Äã‚ñ∏ divide(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/percent.ts:33equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/percent.ts:29subtract‚Äã‚ñ∏ subtract(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/percent.ts:25toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber2format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/percent.ts:41toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber5format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/percent.ts:37Helpful?PreviousNativeCurrencyNextPriceHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatorisPercentnumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
72,p.org sdk v3 reference modules.md#addliquidityoptions,p.org sdk v3 reference modules.md#addliquidityoptions. 
73,p.org sdk v3 reference interfaces WithdrawOptions#data,p.org sdk v3 reference interfaces WithdrawOptions#data.    WithdrawOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesWithdrawOptionsHelpful?On this pageWithdrawOptions@uniswap/v3-sdk / Exports / WithdrawOptionsInterface: WithdrawOptionsOptions to specify when withdrawing a position.Table of contents‚ÄãProperties‚ÄãdataownerProperties‚Äãdata‚Äã‚Ä¢ Optional data: stringSet when withdrawing. data is passed to safeTransferFrom when transferring the position from contract back to owner.Defined in‚Äãstaker.ts:66owner‚Äã‚Ä¢ owner: stringSet when withdrawing. The position will be sent to owner on withdraw.Defined in‚Äãstaker.ts:61Helpful?PreviousTickDataProviderNextOverviewTable of contentsPropertiesPropertiesdataownerDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
74,p.org sdk swap widget guides getting started,"p.org sdk swap widget guides getting started.    Getting Started with the Swap Widget | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap WidgetOverviewGuidesGetting StartedExample ThemesTechnical Referenceweb3-reactCore SDKV2 SDKV1 SDKüè†Swap WidgetGuidesGetting StartedHelpful?On this pageGetting Started with the Swap WidgetThis guide walks you through the steps to embed the swap widget in your website in 2 minutes ‚Äî whether your site is already a decentralized application (dApp) or not. With the swap widget, your users can trade ERC-20 tokens on the Uniswap Protocol without leaving your site!Here‚Äôs a live preview of the swap widget.Example use cases include:Building a custom frontend for the Uniswap ProtocolSwapping assets in a DeFi applicationAcquiring a token to participate in your web3 community (e.g. FWB or a gaming token)Converting to the required currency for an NFT purchase (e.g. WETH)You can make the widget feel like a native part of your app by customizing the colors, font, and token list to match your app theme. This guide will teach you how.Installing the Widgets Library‚ÄãTo get started, install the widgets library using npm or Yarn. If you don‚Äôt already use it, you‚Äôll need to install react-redux as well.npmYarnnpm install --save @uniswap/widgets react-reduxCopyyarn add @uniswap/widgets react-reduxCopyAdding the Swap Widget to Your App‚ÄãNext, embed the React component in your application.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'function App() { <div className=""Uniswap""> <SwapWidget /> </div>}CopyThat‚Äôs it! You should now see a fully functional swap widget on your site. The widget is self-contained and gracefully handles all interactions with the Uniswap Protocol. It leverages the Auto Router to compute the best price across all Uniswap v2 and v3 pools.See a full implementation of the swap widget in the /cra and /nextjs branches of the widgets-demo repo.Create React App V4All code snippets will work seamlessly if you use Next.js or Create React App V5. However, if you‚Äôre using Create React App V4, you‚Äôll need to use the following import statements instead:import { SwapWidget } from '@uniswap/widgets/dist/index.js'import '@uniswap/widgets/dist/fonts.css'CopyRecommended ParametersThe swap widget is a React component that can be easily imported into any React project. It's designed to work out-of-the-box, with no required parameters or web3 integration necessary. Trading is supported on all networks where the Uniswap Protocol is deployed.Although the widget will work out-of-the-box with no parameters, we highly recommend integrators provide JSON-RPC endpoints, like from Infura or Alchemy. Existing dApps can also provide their existing web3 provider to integrate the widget seamlessly into their dApp.Additional optional parameters are available to customize the appearance and performance of the swap widget to fit your unique use case.Web3 Provider‚ÄãThe swap widget uses a web3 provider prop to allow users to connect their wallets, fetch balances, and submit transactions through the user‚Äôs connected wallet.If your app does not maintain its own web3 provider, you can omit the provider prop. The widget will use built-in wallet connection functionality (for WalletConnect and MetaMask), making it easy for you to integrate web3 in your app!If you already have a web3 provider, you can pass your provider object directly into the provider prop. Both ethers and web3.js provider objects are compatible with the widget, as is any EIP-1193 provider. You can directly use the providers returned from web3-react or wagmi (both are ethers providers). If it is not connected to a wallet, it will still be used to read data from the chain, but the widget will still prompt the user to ""Connect wallet"".Be sure to use the wallet-connected providerWhen using wagmi@v0.11, useProvider() will return the fallback provider, not the wallet-connected provider. You should instead pass useSigner<JsonRpcSigner>().data?.provider to reflect the user's connected wallet.If you maintain a web3 provider on your app, you should also consider intercepting the swap widget's wallet connection flow. Do so by passing a handler returning false to the onConnectWalletClick prop, which is triggered when the widget's ""Connect wallet"" button is clicked. Check out libraries such as web3-react, BlockNative‚Äôs Onboard, or Aragon‚Äôs useWallet() to build your own flow. To hide the swap widget's wallet connection flow entirely, pass true to the hideConnectionUI prop.The widget will match the network currently selected by the passed provider. If the user switches networks in your app or in their connected wallet, that change will propagate to the widget as well. If the user connects to a network that is not supported by the swap widget, the widget will gracefully disable itself.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'// We recommend you pass a web3 provider.import { provider } from './your/provider'// We recommend you pass your own JSON-RPC endpoints.const jsonRpcUrlMap = { 1: ['https://mainnet.infura.io/v3/<YOUR_INFURA_PROJECT_ID>'], 3: ['https://ropsten.infura.io/v3/<YOUR_INFURA_PROJECT_ID>']}function App() { <div className=""Uniswap""> <SwapWidget provider={provider} jsonRpcUrlMap={jsonRpcUrlMap} /> </div>}CopyJSON-RPC Endpoints‚ÄãJSON-RPC endpoints are used to read data when no provider is connected. We strongly recommend you pass either a Web3 Provider to the provider prop, or JSON-RPC endpoint URLs to the jsonRpcUrlMap prop.The widget will use these endpoints to fetch on-chain data and submit transactions for signature. If the user connects a MetaMask wallet, the widget will use the JSON-RPC provided by MetaMask when possible. (See a list of all chains supported on widget.) If you don‚Äôt yet have JSON-RPC endpoints, you can easily create them with services like Infura or Alchemy.If you choose not to provide a jsonRpcUrlMap prop or are missing endpoints for some chains, the widget uses free public JSON-RPC endpoints to still allow users to interact with the widget and fetch price quotes. However, these public endpoints are NOT recommended for production environment usage, are severely rate-limited, and aren't necessarily as reliable. When possible, we'd recommend providing your own endpoints!Customizing the Swap WidgetYou can set optional parameters to tailor the appearance and functionality of the swap widget to fit your dApp.Customizing the Width‚ÄãThe swap widget has a fixed height of 360px and a default width of 360px. You cannot modify the height of the widget. You can modify the width up to a minimum width of 300px.You can customize the width by passing a number (of pixels) or a valid CSS width to the width prop of the widget.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'function App() { <div className=""Uniswap""> <SwapWidget  width={360} // Custom width in pixels /> </div>}CopyFor example:width={360} sets the width to 360 pixelswidth=""100%"" sets the width to dynamically fill 100% of the parent containerwidth=""20em"" sets the width to 20 * 16 = 320 pixels because 16px is the base font-size of the widgetThe recommended and default width is 360 pixels.Customizing the Theme‚ÄãYou can customize the colors, font, and border radius of the swap widget to match the look and feel of your dApp. You can also toggle between light and dark modes. This section explains how to customize each attribute of the widget with your own theme.All attributes below are color codes, except fontFamily (string), borderRadius (number between 0 and 1), and tokenColorExtraction(boolean). The next two sections show code examples using these attributes.Check out examples of the swap widget, and the Figma file if you want to mock it up first!Overriding Attributes‚ÄãYou can override specific attributes of the widget by creating a Theme object and defining the properties you wish to override. Any properties left undefined will fallback to the default theme. For example, here is a simple Theme that removes the border radius and sets a custom font family.import { Theme, SwapWidget } from '@uniswap/widgets'// Define a custom theme to override default attributesconst theme: Theme = { borderRadius: 0, fontFamily: '""Helvetica""',}function App() { <div className=""Uniswap""> <SwapWidget theme={theme} /> </div>}CopyPlease note that the borderRadius attribute is a multiplier from 0 to 1 of how much radius to apply. Since the widget uses different values of border radius (e.g. internal edges have tighter radii than external edges), borderRadius will apply your multiplier value on all instances so that the border radii still look proportionally correct.Importing FontsThe swap widget fonts must be imported explicitly with import '@uniswap/widgets/fonts.css'. However, if you‚Äôre overriding the swap widget fonts with your own, or with a default font such as Helvetica in the example above, you can remove this import statement.Enabling Token Color Extraction‚ÄãBy default, the background color of the output module will be set by the¬†module¬†attribute. You can optionally enable color extraction to flood the output module with the color of the selected output token. In the above example, DAI is the output token so the output module is flooded with DAI yellow.To enable color extraction, set the tokenColorExtraction property to true in your Theme object.import { Theme, SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'const enableColorExtractionTheme: Theme = { tokenColorExtraction: true, // Enable color extraction of the output token}function App() { <div className=""Uniswap""> <SwapWidget theme={enableColorExtractionTheme} /> </div>}CopyToggling Light and Dark Mode‚ÄãThe swap widget provides a default light theme and dark theme as a starting point. You can import each one and extend it to create your own theme. If your app can toggle between light and dark mode, you can propagate that state down to the widget by following the example below.import { darkTheme, lightTheme, Theme, SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'let darkMode = true // Dynamically toggle dark mode on and offfunction App() { <div className=""Uniswap""> <SwapWidget theme={darkMode ? darkTheme : lightTheme} /> </div>}CopyMatching System Preference for Light and Dark Mode‚ÄãYou can match the user‚Äôs system preference for light/dark mode by using the useSystemTheme hook. This will return the default widget light or dark theme according to the user‚Äôs system configuration. You can extend this base theme with further customizations, as you will see in the next section.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'function useSystemTheme() { // Access}function App() { const theme = useSystemTheme() // Get a theme that matches the user system preference <div className=""Uniswap""> <SwapWidget theme={theme} /> </div>}CopyExtending Themes‚ÄãYou can extend any theme with custom attributes. The below example extends the base light and dark themes with custom colors.import { darkTheme, lightTheme, Theme, SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'const myLightTheme: Theme = { ...lightTheme, // Extend the lightTheme accent: '#FF007A', primary: '#000000', secondary: '#565A69',}const myDarkTheme: Theme = { ...darkTheme, // Extend the darkTheme accent: '#2172E5', primary: '#FFFFFF', secondary: '#888D9B',}let darkMode = truefunction App() { <div className=""Uniswap""> <SwapWidget theme={darkMode ? myDarkTheme : myLightTheme} /> </div>}CopyCustomizing the Token Lists‚ÄãBy default, the widget will use the Uniswap Labs default token list in the selector.Customizing the Default Token List‚ÄãIf you want to offer a different set of tokens in the widget, you can provide a custom tokenList parameter. You can browse popular token lists to find one that suits your needs and then pass the URL as a parameter.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'const CMC_TOKEN_LIST = 'https://api.coinmarketcap.com/data-api/v3/uniswap/all.json'function App() { <div className=""Uniswap""> <SwapWidget  tokenList={CMC_TOKEN_LIST} // Use the CoinMarketCap token list /> </div>}CopyAlternatively, you can create your own token list. There are two ways to provide your own token list for the widget.The first option is to create a full token list, host it at your own URI, and pass the URI as a parameter as in the above example. This option is recommended if you want to use the same token list in multiple places throughout your application or community.The second and easiest option is to construct a custom token list inline as an array of tokens. The schema is equivalent to the tokens array from the tokenlist JSON schema. This option lets you skip deployment, hosting, and versioning of a full URI token list. Here is an example of an inline token list containing only the DAI, USDT, and USDC tokens (in addition to ETH which is always available, regardless of token list).import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'// You can also pass a token list as JSON, as long as it matches the schemaconst MY_TOKEN_LIST = [ { ""name"": ""Dai Stablecoin"", ""address"": ""0x6B175474E89094C44Da98b954EedeAC495271d0F"", ""symbol"": ""DAI"", ""decimals"": 18, ""chainId"": 1, ""logoURI"": ""https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x6B175474E89094C44Da98b954EedeAC495271d0F/logo.png"" }, { ""name"": ""Tether USD"", ""address"": ""0xdAC17F958D2ee523a2206206994597C13D831ec7"", ""symbol"": ""USDT"", ""decimals"": 6, ""chainId"": 1, ""logoURI"": ""https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png"" }, { ""name"": ""USD Coin"", ""address"": ""0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"", ""symbol"": ""USDC"", ""decimals"": 6, ""chainId"": 1, ""logoURI"": ""https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/logo.png"" },]function App() { <div className=""Uniswap""> <SwapWidget tokenList={MY_TOKEN_LIST} /> </div>}CopyPlease note that the swap widget only enforces metadata validation on remotely hosted token lists, not on token list data passed as a literal value to the widget like in this example.If you want to add Layer 2 tokens to the token list, you can add an extension field. See this GitHub issue for details.Customizing the Default Input and Output Tokens‚ÄãYou can set the defaultInputTokenAddress, defaultInputAmount, defaultOutputTokenAddress, and defaultOutputAmount to pre-populate the input and output token fields respectively. This is useful when the widget appears in a context where you know which tokens the user is evaluating to trade. For example, if the widget appears on a page that displays the WBTC price chart, it would be helpful to pre-select WBTC as the output token in the widget.If your page does not need any particular defaults, then the recommended default input token is the native asset of the active network (e.g. ETH) and no default output token is recommended. Since ETH does not have an address, you can pass 'NATIVE' as the parameter to set it as the default input or output token.The following example sets the default input to 2 ETH and the default output token to WBTC.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'// Default token list from Uniswapconst UNISWAP_TOKEN_LIST = 'https://gateway.ipfs.io/ipns/tokens.uniswap.org'// Use the native token of the connected chain as the default input tokenconst NATIVE = 'NATIVE' // Special address for native token// WBTC as the default output tokenconst WBTC = '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599'function App() { <div className=""Uniswap""> <SwapWidget  tokenList={UNISWAP_TOKEN_LIST}  defaultInputTokenAddress={NATIVE}  defaultInputAmount={2}  defaultOutputTokenAddress={WBTC} /> </div>}CopyUnderstanding the Swap Widget States‚ÄãThe widget has two main connectivity states depending on if the user has connected a wallet.Before wallet connection, the widget will use the JSON-RPC endpoint to fetch token price data and provide trade quotes, but submitting transactions will be disabled.After wallet connection, the widget will be fully functional. The user will be able to fetch trade quotes and submit swap transactions using the JSON-RPC endpoint and web3 provider from their connected wallet.Questions?Join the Discord channel to ask questions and get support from the Uniswap community.Helpful?PreviousOverviewNextExample ThemesInstalling the Widgets LibraryAdding the Swap Widget to Your AppWeb3 ProviderJSON-RPC EndpointsCustomizing the WidthCustomizing the ThemeOverriding AttributesEnabling Token Color ExtractionToggling Light and Dark ModeMatching System Preference for Light and Dark ModeExtending ThemesCustomizing the Token ListsCustomizing the Default Token ListCustomizing the Default Input and Output TokensUnderstanding the Swap Widget StatesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
75,p.org sdk v3 reference classes Route#midprice,"p.org sdk v3 reference classes Route#midprice.    Route | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesRouteHelpful?On this pageRoute@uniswap/v3-sdk / Exports / RouteClass: Route<TInput, TOutput>Represents a list of pools through which a swap can occurType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input tokenTOutputextends CurrencyThe output tokenTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_midPriceinputoutputpoolstokenPathAccessors‚ÄãchainIdmidPriceConstructors‚Äãconstructor‚Äã‚Ä¢ new Route<TInput, TOutput>(pools, input, output)Creates an instance of route.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDescriptionpoolsPool[]An array of Pool objects, ordered by the route the swap will takeinputTInputThe input tokenoutputTOutputThe output tokenDefined in‚Äãentities/route.ts:25Properties‚Äã_midPrice‚Äã‚Ä¢ Private _midPrice: null | Price<TInput, TOutput> = nullDefined in‚Äãentities/route.ts:17input‚Äã‚Ä¢ Readonly input: TInputDefined in‚Äãentities/route.ts:14output‚Äã‚Ä¢ Readonly output: TOutputDefined in‚Äãentities/route.ts:15pools‚Äã‚Ä¢ Readonly pools: Pool[]Defined in‚Äãentities/route.ts:12tokenPath‚Äã‚Ä¢ Readonly tokenPath: Token[]Defined in‚Äãentities/route.ts:13Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns‚ÄãnumberDefined in‚Äãentities/route.ts:54midPrice‚Äã‚Ä¢ get midPrice(): Price<TInput, TOutput>Returns the mid price of the routeReturns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/route.ts:61Helpful?PreviousPositionLibraryNextSelfPermitType parametersTable of contentsConstructorsPropertiesAccessorsConstructorsconstructorProperties_midPriceinputoutputpoolstokenPathAccessorschainIdmidPriceDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
76,p.org sdk swap widget reference v2,"p.org sdk swap widget reference v2.    API V2 Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap WidgetOverviewGuidesTechnical ReferenceAPI V2 ReferenceAPI V1 Reference (Deprecated)web3-reactCore SDKV2 SDKV1 SDKüè†Swap WidgetTechnical ReferenceAPI V2 ReferenceHelpful?On this pageSwap Widget API V2 ReferenceRecommended Parameters‚ÄãProp NameProp TypeDefault ValueDescriptionproviderJsonRpcProvider or Eip1193ProviderundefinedAn EIP-1193 provider. See Web3 provider.jsonRpcUrlMap{ [chainId: number]: string[] }JSON_RPC_FALLBACK_ENDPOINTSMapping of your JSON-RPC endpoint URLs indexed by chainId, used to provide trade quotes prior to the user connecting a wallet. If none are provided for a chain, the widget will fallback to public JSON-RPC endpoints, which are unreliable and rate-limited. See JSON-RPC Endpoints.Optional Parameters‚ÄãProp NameProp TypeDefault ValueDescriptionconvenienceFeenumberundefinedOptionally, you may charge a convenience fee on top of swaps executed through your web app. The allowed range is 1 to 100 basis points paid in the output token of a swap, consistent with the Uniswap v3 Periphery contract.convenienceFeeRecipient{[chainId: number]: string}undefinedThe address to receive the convenience fee on each network. Required if convenienceFee is provided.defaultChainIdnumber1You may specify which chainId you want to prompt a user to connect their wallet to. See a list of all chains supported on widget.defaultInputTokenAddress{[chainId: number]: string}string or 'NATIVE'Address of the token to be selected by default in the input field (e.g. USDC) for each network chain ID. If left empty the widget will use the native token of the connected chain as default. This can be explicitly defined by the special string 'NATIVE'. For convenience you may pass a single string instead of a chainId mapping. In this case, the widget will assume that string corresponds to an L1 Ethereum address with chaindId=1. Any addresses provided in this parameter must be included in the tokenList.defaultInputAmountnumber0Default amount for the input field (e.g. 1 ETH). This value will respect the decimals of the defaultInputTokenAddress. This parameter is valid only if defaultInputTokenAddress is also set. This parameter is mutually exclusive with defaultOutputTokenAmount, so you may set only one of defaultInputTokenAmount and defaultOutputTokenAmount.defaultOutputTokenAddress{[chainId: number]: string}string or undefinedAddress of the token to be selected by default in the input field (e.g. USDC) for each network chain ID. None if left empty. Any addresses provided in this parameter must be included in the tokenList.defaultOutputAmountnumber0Default amount for the input field (e.g. 100 USDC). This value will respect the decimals of the defaultOutputTokenAddress. This parameter is mutually exclusive with defaultInputTokenAmount, so you may set only one of defaultInputTokenAmount and defaultOutputTokenAmount.hideConnectionUIbooleanfalseHide the widget's built-in wallet connection UI, including the connected account chip & 'Connect wallet to swap' button.localeSupportedLocaleen-USSpecifies an explicit locale to use for the widget interface. This can be set to one of the values exported by the library in SUPPORTED_LOCALES.onConnectWalletClick() => void or () => Promise<boolean>undefinedIf passed, allows you to add custom behavior when the user clicks on the 'Connect your wallet to swap' button. To manage displaying the widget's built-in wallet connection modal, return a resolved promise with resolve(true/false).onSwitchChain(addChainParameter: AddEthereumChainParameter) => void or Promise<void>undefinedAn integration hook called when the user tries to switch chains. If the hook returns a Promise, it is assumed the integrator is attempting to switch the chain, and no further attempts will be made. If that Promise rejects, the error will be ignored so as not to crash the widget.onErrorErrorHandlerundefinedAn error handler which receives any Javascript errors that occur in the widget. This can be used for collecting error metrics.onReviewSwapClick() => void or () => Promise<boolean>undefinedIf passed, allows you to add custom behavior when the user clicks on the 'review swap' button. To manage progression to the review screen (i.e. to add a pre-swap warning speedbump), return a resolved promise with resolve(true/false).onTokenSelectorClick(f: Field) => void \| (f: Field) => Promise<boolean \| void>undefinedA click handler fired with the selected Field ('INPUT'\|'OUTPUT') when the user clicks on a token selector dropdown. To manage progression to the native token selector view (i.e. to utilize your own external token selector UI), return a resolved promise with resolve(true/false).onTxFail(error: Error, data: any) => voidundefinedAn error handler which receives error data for on-chain transaction failures. Does not include when user cancels a transaction or if a transaction isn't able to be submitted.onTxSubmit(txHash: string, data: any) => voidundefinedA handler that receives the transaction hash and related data when a user submits a transaction.onTxSuccess(txHash: string, data: any) => voidundefinedA handler that receives the transaction hash and related data when a transaction succeeds on-chain.routerUrlstringundefinedOptionally provide a base URL to your own hosted instance of the Uniswap Router API. If none is provided, the optimal trade route is computed by running the @uniswap/smart-order-router package locally in the browser; this can take a few seconds to load & is slower. You also may be able to find more optimal routes using the Router API! See more about deploying the Router API.themeThemelightThemeSpecifies a custom theme (colors, font, and border radii). See Customizing the Theme.tokenListstringTokenInfo[]Specifies the set of tokens that appear by default in the token selector list. Accepts either a URI of a token list as defined by the Token Lists standard, or an inline array of tokens. If none is provided, the Uniswap Labs default token list will be used. See Customizing the Default Token List.widthnumber or string360Specifies the width of the widget. If specified as a number, this is in pixels; otherwise, it is interpreted as a CSS <length> data type. Recommended width is 360px. Minimum width is 300px. See Customizing the Width.brandedFooterbooleantrueEnables the ""Powered by Uniswap"" footer at the bottom of the widget.dialogHTMLDivElementundefinedSpecifies the element to portal widget dialogs (e.g. Summary, Transaction dialogs) into.dialogOptionsDialogOptionsundefinedSpecifies more custom dialog behavior, like transition animations.Subscribing to Events‚ÄãDuring the lifecycle of the swap widget, most of the events you will need are available on the web3 provider. For example, the below snippet shows how to listen for events when the wallet account changes or a new wallet connects. You can see more event examples in the MetaMask docs.// Subscribe to messagesinterface ProviderMessage { type: string; data: unknown;}ethereum.on( 'message', handler: (message: ProviderMessage) => void);CopyQuestions?Join the Discord channel to ask questions and get support from the Uniswap community.Helpful?PreviousExample ThemesNextAPI V1 Reference (Deprecated)Recommended ParametersOptional ParametersSubscribing to EventsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
77,p.org sdk web3 react guides connect wallet,"p.org sdk web3 react guides connect wallet.    Connecting to Wallets | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactOverviewGuidesConnecting to WalletsSupported ConnectorsSwitching ChainsCore SDKV2 SDKV1 SDKüè†web3-reactGuidesConnecting to WalletsHelpful?On this pageConnecting to WalletsIntroduction‚ÄãThis guide will cover how to connect wallets with web3-react. It is based on the web3-react example found in the Uniswap code examples repository. To run this example, check out the examples's README and follow the setup instructions.In this example we will walk through setting up web3-react and connecting the most popular browser-injected connector, MetaMask, using @web3-react/metamask.The input parameters to this guide are the chains that we want our app to be able to connect to and their RPC URLs.The guide will cover:Creating a web3-react Web3ReactProviderBuilding a web3-react InjectedConnectorConnecting and disconnecting the application to the connectorAt the end of the guide, we should be able to connect and disconnect your dApp to a MetaMask connector.For this guide, the following web3-react packages are used:@web3-react/core@web3-react/types@web3-react/metamaskinfoThis guide uses web3-react version 8, which is a beta version.These will be automatically installed by following the example's README.The core code of this guide can be found in Web3ContextProvider and InjectedConnector.Creating a Web3ReactProvider‚ÄãTo be able to interact with the methods that web3-react offers, we first need to setup a Web3ReactProvider and wrap our application in it. web3-react uses a React Context to allow us to use the exposed hooks without additional configuration. To start, we create a React component called Web3ContextProvider in order to wrap the logic of configuring the Web3ReactProvider. In this component, we first import Web3ReactProvider from @web3-react/core.The component receives just one prop which is the children to which it will be providing the Context:Defining the Web3React componentloading...CopyView on GithubWe then implement the component by rendering the imported Web3ReactProvider with the children within that:Implementing the componentloading...CopyView on GithubNote that we map our list of Connections to a tuple of the connector and hooks of the connection. The third element of a Connection refers to the type of Connection being established, which we will later use to keep track of the actively connected wallet.Finally, having created the Web3ContextProvider component, we can navigate to our index file and wrap the whole application with it:Wrapping our app with the web3 contextloading...CopyView on GithubBuilding an Injected Connector‚ÄãThe only parameter that we provided to the Web3ReactProvider component is a list of prioritized connectors, declared as PRIORITIZED_CONNECTORS. The prioritization ordering is with regards to which connector we want to be active when more than one connector is connected to our application. The list is defined inside our connectors module: Creating the prioritized Connectors listloading...CopyView on GithubEach one of those connectors lives within its own file, and they all follow a similar setup pattern. An example of a connector in the list is the InjectedConnector, which supports wallets that inject an Ethereum Provider into the browser window. The most popular example of an injected connector is the MetaMask browser extension. To set it up, we import initializeConnector function from core and the MetaMask type from metamask:Importing Connector dependenciesloading...CopyView on GithubWe then utilize the templated initializeConnector function with MetaMask as the type argument:Initializing the MetaMask connectorloading...CopyView on GithubBy passing in MetaMask as the type argument, we define the function's required input parameters. In this case, the only parameter we need to pass is an instance of Metamask, which receives the actions and onError parameters. The first parameter defines the actions that web3-react performs on its local store for the connector (this usually can be passed through without modification), while the second parameter is the callback invoked when an error occurs.The return type of the function is a tuple of the initialized Connector and the Hooks that we can use on it. Using this tuple, we create an instance of a Connection type, by setting the type property to INJECTED:Creating a connection instanceloading...CopyView on GithubFinally, we return the instance of Connection we created, which is added to the list of prioritized connectors. infoFor help on creating the rest of the supported connectors of this examples, please visit our connectors page!Connecting and disconnecting the application to the connector‚ÄãHaving built our InjectedConnector, we can now use it in the Context that allows our application to use that connector:Creating the Option componentloading...CopyView on GithubThe component receives 5 parameters:isEnabled determines whether the connector is eligible to be activatedisConnected determines whether the connector is currently active connectionType determines the ConnectionTypeonActivate is called once the component has established a connection onDeactivate is called once the component has disconnectedIn the case of MetaMask, when declaring the InjectedConnector we pass the connector-specific arguments:Creating an injected connectorloading...CopyView on GithubThen, in the html portion of the Option, we can figure out whether we want the current Option's action button to be disabled, and whether clicking the button would result in the connector being connected or disconnected:The component user interfaceloading...CopyView on GithubFinally, we also have enough information to figure out what action to take when the button is clicked. In the case that the click triggers a connection:On connecting to a Connectorloading...CopyView on GithubTo connect our wallet, all we need to do is to call the tryActivateConnector function and pass it the InjectedConnector. We then call the onActivate callback, which makes the InjectedConnector the active connector in our application's state.tryActivateConnector takes as its argument the connector that we want to activate, and attempts to call activate on it. If this activation succeeds, it returns the new ConnectionType:The implementation of tryActivateConnectorloading...CopyView on GithubIn the case that the click triggers a disconnection:On disconnecting from a Connectorloading...CopyView on GithubTo disconnect, all we need to do is to call tryDeactivateConnector and pass in it the InjectedConnector we created before. We then call the onDeactivate callback, which removes the InjectedConnector as the currently active connector from our application's state.tryDeactivateConnector takes as its argument the connector that we want to deactivate, and attempts to call deactivate on it. If this deactivation succeeds, it resets the connector's state by calling resetState and returns null:The implementation of tryDeactivateConnectorloading...CopyView on GithubNext Steps‚ÄãNow that we have gone through connecting and disconnecting from an InjectedConnector, we will learn how to connect and disconnect from all the different types of connectors that web3-react supports.Helpful?PreviousOverviewNextSupported ConnectorsIntroductionCreating a Web3ReactProviderBuilding an Injected ConnectorConnecting and disconnecting the application to the connectorNext StepsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
78,p.org sdk core reference classes Percent#quotient,"p.org sdk core reference classes Percent#quotient.    Percent | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPercentHelpful?On this pagePercent@uniswap/sdk-core / Exports / PercentClass: PercentHierarchy‚ÄãFraction‚Ü≥ PercentTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatorisPercentnumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Percent(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshInherited from‚ÄãFraction.constructorDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26isPercent‚Äã‚Ä¢ Readonly isPercent: trueThis boolean prevents a fraction from being interpreted as a PercentDefined in‚Äãentities/fractions/percent.ts:19numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.addDefined in‚Äãentities/fractions/percent.ts:21divide‚Äã‚ñ∏ divide(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/percent.ts:33equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/percent.ts:29subtract‚Äã‚ñ∏ subtract(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/percent.ts:25toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber2format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/percent.ts:41toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber5format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/percent.ts:37Helpful?PreviousNativeCurrencyNextPriceHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatorisPercentnumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
79,p.org sdk v2 reference route,"p.org sdk v2 reference route.    Route | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKOverviewGuidesSDK Quick startFetching DataPricingTradingPair AddressesTechnical ReferenceGetting StartedTokenPairRouteTradeFractionsFetcherOther ExportsV1 SDKüè†V2 SDKTechnical ReferenceRouteHelpful?On this pageRouteconstructor(pairs: Pair[], input: Token)CopyThe Route entity represents one or more ordered Uniswap pairs with a fully specified path from input token to output token.Exampleimport { ChainId, Token, TokenAmount, Pair, Route } from '@uniswap/sdk'const HOT = new Token(ChainId.MAINNET, '0xc0FFee0000000000000000000000000000000000', 18, 'HOT', 'Caffeine')const NOT = new Token(ChainId.MAINNET, '0xDeCAf00000000000000000000000000000000000', 18, 'NOT', 'Caffeine')const HOT_NOT = new Pair(new TokenAmount(HOT, '2000000000000000000'), new TokenAmount(NOT, '1000000000000000000'))const route = new Route([HOT_NOT], NOT)CopyPropertiespairs‚Äãpairs: Pair[]CopyThe ordered pairs that the route is comprised of.path‚Äãpath: Token[]CopyThe full path from input token to output token.input‚Äãinput: stringCopyThe input token.output‚Äãoutput: stringCopyThe output token.midPrice‚ÄãmidPrice: PriceCopyReturns the current mid price along the route.Helpful?PreviousPairNextTradepairspathinputoutputmidPriceDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
80,p.org contracts universal router technical reference#v3 swap exact in,"p.org contracts universal router technical reference#v3 swap exact in.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
81,p.org contracts v2 reference smart contracts common errors,"p.org contracts v2 reference smart contracts common errors.    Common Errors | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsCommon ErrorsHelpful?On this pageCommon ErrorsThis document covers a few error codes frequently encountered while building on Uniswap V2.UniswapV2: KThis is an error that is frequently encountered, and requires a bit of context to understand it.The Uniswap constant product formula is ‚ÄúX * Y = K‚Äù. Where X and Y represent the respective reserve balances of two ERC-20 tokens, and ‚ÄúK‚Äù represents the product of the reserves. It is this ‚ÄúK‚Äù to which the ‚ÄúK‚Äù error refers.In essence, the ‚ÄúK‚Äù error means that a trade was attempted that somehow left the trading pair with less reserves than should be there, and as a result the transaction is reverted.This can have a few different causes.Fee On Transfer Tokens‚ÄãThe most common examples are caused by ‚Äúfee on transfer‚Äù tokens.Inclusive Fee On Transfer Tokens‚ÄãIn most cases, a fee on transfer token burns or diverts a small portion of every transfer such that the recipient of the transfer ends up with slightly less than the sender gave. This is called an ‚Äúinclusive‚Äù fee on transfer.In the case of inclusive fee on transfer tokens, you can use the corresponding swap functions in the router contract which end with ‚ÄúSupportingFeeOnTransfer‚Äù. These functions succeed by adjusting the ‚ÄúamountOutMin‚Äù parameter to check the recipient amount rather than the sending amount when calculating the invariant.Exclusive Fee On Transfer Tokens‚ÄãThe other type, ‚Äúexclusive‚Äù fee on transfer tokens, work by sending an additional transfer from the sending address after the primary transfer. Because the router contract cannot anticipate this trailing transfer when calculating the invariant, the transaction will either revert, or partially succeed by sending the primary transfer but breaking the pool upon the trailing transfer.In the case of exclusive fee on transfer tokens, the SupportingFeeOnTransfer functions may work, but there will be some tokens designed in such a way that they fundamentally break the router. If you are still getting a ‚ÄúK‚Äù error when using these functions, you may need to make a fork of the router contract that accommodates your token design.Rebasing Tokens‚ÄãThe less common instance of the ‚ÄúK‚Äù error is as a result of rebasing tokens.Rebasing tokens can alter the balance of any addresses holding their tokens arbitrarily. This usually works at pre specified intervals and as a result of a handful of variables used in the economics of a rebasing token.Rebasing tokens typically work in two ways.Negative Rebasing Tokens‚ÄãA negative rebasing token, the more common variant, deflates the balances of token owners. Because the rebasing is not triggered by transfers, the router cannot expect when or how a rebasing will happen. Once it does, the pair reserves will be unbalanced, and the next person to transact with the pair will bear the cost of the delta as a result of the rebasing.Needless to say, an unenviable position.Negative rebasing tokens have solved this error by altering their token contract to call sync on the trading pair at the end of every transaction involving the Uniswap router contract. Those interested in forking the router contract should anticipate that negative rebasing tokens will break the pair until the token contracts are updated to accommodate your new router.Positive Rebasing Tokens‚ÄãPositive rebasing tokens arbitrarily increase the balances of token holders. When a positive rebase happens, it creates a surplus that is unaccounted for in the trading pair. Because the extra tokens are unaccounted for in the trading pair, anyone can call skim() on the trading pair and effectively steal the positive difference from the rebalance.While positive rebalancing does not break any functionality of Uniswap, those interested in them should be aware that the positive balance found in any pair will be freely available for taking.A Note on Rebasing Tokens‚ÄãFor those interested in building a rebasing token, a word of caution: many contracts involving decentralized trading and liquidity provisioning will break upon interacting with your token. An example approach that will lead to much easier integration in future protocols can be found in CHAI. CHAI uses a wrapper function that contains the rebalancing within the wrapper, such that the redeemable token can be easily integrated into many different systems.UniswapV2: LOCKEDThe LOCKED error is a guard built into the router contract that prevents customized reentrancy contracts from attempting to return malicious code into the router contract at the end of a transaction.This error is commonly encountered when using Ganache CLI to fork the Ethereum mainnet to a local instance as a part of a development environment. The error is a bug in Ganache-Cli that will hopefully be fixed in a future release by the truffle team.A temporary fix is available by simply restarting the local fork.No Access To Archive NodeThis is an error with either Metamask or Ganache-CLI. It usually occurs after a local fork is instantiated and contracts are deployed but there is one failed transaction.A temporary fix is available by restarting the local fork and resetting metamask.UniswapV2: TRANSFER_FAILEDThis means the core contract was unable to send tokens to the recipient. This is most likely due to a scam token, where the token owner has maliciously disabled the transfer function in a way that allows users to buy the token, but not sell them.UniswapV2: EXPIREDThis is a result of a transaction that took too long to be broadcast to the mainnet.Uniswap does not set gas prices natively, so most users default to the suggested gas prices in metamask. Sometimes metamask gets it wrong, though, and sets the gas price too low. If a swap takes more than 20 minutes to execute, the core contract won‚Äôt allow it to go through.Action Requires an Active ReserveVM Exception While Processing Transaction: Action Requires an Active ReserveThis is potentially a ganache bug encountered when working on flash swaps. We haven't figured out the source of it yet.Unable To Approve Transaction On The Front EndThere are rare circumstances where users are unable to approve a token on the Uniswap front end.This is a result of some token contracts taking steps to defend against malicious contracts that attempt to front run approvals and steal a users tokens. It happens only when the user is trying to increase an approval allowance from a preallocated amount to a larger one, and only happens with a few token contracts.The solution is have the user manually set the router contract approval amount to zero, then to the number they want. The easiest way to do this is through Etherscan.Edit this pageHelpful?PreviousRouter02NextOverviewFee On Transfer TokensInclusive Fee On Transfer TokensExclusive Fee On Transfer TokensRebasing TokensNegative Rebasing TokensPositive Rebasing TokensA Note on Rebasing TokensDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
82,p.org contracts v3 reference periphery libraries BytesLib,p.org contracts v3 reference periphery libraries BytesLib.    BytesLib | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesBase64BytesLibCallbackValidationChainIdHexStringsLiquidityAmountsNFTDescriptorNFTSVGOracleLibraryPathPoolAddressPoolTicksCounterPositionKeyTokenRatioSortOrderTransferHelperWeightedOracleLibraryStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryLibrariesBytesLibHelpful?On this pageBytesLibFunctions‚Äãslice‚Äã function slice( ) internal returns (bytes)CopytoAddress‚Äã function toAddress( ) internal returns (address)CopytoUint24‚Äã function toUint24( ) internal returns (uint24)CopyEdit this pageHelpful?PreviousBase64NextCallbackValidationFunctionsslicetoAddresstoUint24DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
83,p.org contracts v2 reference smart contracts router 02#addliquidityeth,"p.org contracts v2 reference smart contracts router 02#addliquidityeth.    Router02 | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsRouter02Helpful?On this pageRouter02Because routers are stateless and do not hold token balances, they can be replaced safely and trustlessly, if necessary. This may happen if more efficient smart contract patterns are discovered, or if additional functionality is desired. For this reason, routers have release numbers, starting at 01. This is currently recommended release, 02.CodeUniswapV2Router02.solAddressUniswapV2Router02 is deployed at 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D on the Ethereum mainnet, and the Ropsten, Rinkeby, G√∂rli, and Kovan testnets. It was built from commit 6961711.Read-Only Functionsfactory‚Äãfunction factory() external pure returns (address);CopyReturns factory address.WETH‚Äãfunction WETH() external pure returns (address);CopyReturns the canonical WETH address on the Ethereum mainnet, or the Ropsten, Rinkeby, G√∂rli, or Kovan testnets.quote‚ÄãSee quote.getAmountOut‚ÄãSee getAmountOut.getAmountIn‚ÄãSee getAmountIn.getAmountsOut‚Äãfunction getAmountsOut(uint amountIn, address[] memory path) public view returns (uint[] memory amounts);CopySee getAmountsOut.getAmountsIn‚Äãfunction getAmountsIn(uint amountOut, address[] memory path) public view returns (uint[] memory amounts);CopySee getAmountsIn.State-Changing FunctionsaddLiquidity‚Äãfunction addLiquidity( address tokenA, address tokenB, uint amountADesired, uint amountBDesired, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB, uint liquidity);CopyAdds liquidity to an ERC-20‚áÑERC-20 pool.To cover all possible scenarios, msg.sender should have already given the router an allowance of at least amountADesired/amountBDesired on tokenA/tokenB.Always adds assets at the ideal ratio, according to the price when the transaction is executed.If a pool for the passed tokens does not exists, one is created automatically, and exactly amountADesired/amountBDesired tokens are added.NameTypetokenAaddressA pool token.tokenBaddressA pool token.amountADesireduintThe amount of tokenA to add as liquidity if the B/A price is <= amountBDesired/amountADesired (A depreciates).amountBDesireduintThe amount of tokenB to add as liquidity if the A/B price is <= amountADesired/amountBDesired (B depreciates).amountAMinuintBounds the extent to which the B/A price can go up before the transaction reverts. Must be <= amountADesired.amountBMinuintBounds the extent to which the A/B price can go up before the transaction reverts. Must be <= amountBDesired.toaddressRecipient of the liquidity tokens.deadlineuintUnix timestamp after which the transaction will revert.amountAuintThe amount of tokenA sent to the pool.amountBuintThe amount of tokenB sent to the pool.liquidityuintThe amount of liquidity tokens minted.addLiquidityETH‚Äãfunction addLiquidityETH( address token, uint amountTokenDesired, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external payable returns (uint amountToken, uint amountETH, uint liquidity);CopyAdds liquidity to an ERC-20‚áÑWETH pool with ETH.To cover all possible scenarios, msg.sender should have already given the router an allowance of at least amountTokenDesired on token.Always adds assets at the ideal ratio, according to the price when the transaction is executed.msg.value is treated as a amountETHDesired.Leftover ETH, if any, is returned to msg.sender.If a pool for the passed token and WETH does not exists, one is created automatically, and exactly amountTokenDesired/msg.value tokens are added.NameTypetokenaddressA pool token.amountTokenDesireduintThe amount of token to add as liquidity if the WETH/token price is <= msg.value/amountTokenDesired (token depreciates).msg.value (amountETHDesired)uintThe amount of ETH to add as liquidity if the token/WETH price is <= amountTokenDesired/msg.value (WETH depreciates).amountTokenMinuintBounds the extent to which the WETH/token price can go up before the transaction reverts. Must be <= amountTokenDesired.amountETHMinuintBounds the extent to which the token/WETH price can go up before the transaction reverts. Must be <= msg.value.toaddressRecipient of the liquidity tokens.deadlineuintUnix timestamp after which the transaction will revert.amountTokenuintThe amount of token sent to the pool.amountETHuintThe amount of ETH converted to WETH and sent to the pool.liquidityuintThe amount of liquidity tokens minted.removeLiquidity‚Äãfunction removeLiquidity( address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB);CopyRemoves liquidity from an ERC-20‚áÑERC-20 pool.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenAaddressA pool token.tokenBaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountAMinuintThe minimum amount of tokenA that must be received for the transaction not to revert.amountBMinuintThe minimum amount of tokenB that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountAuintThe amount of tokenA received.amountBuintThe amount of tokenB received.removeLiquidityETH‚Äãfunction removeLiquidityETH( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external returns (uint amountToken, uint amountETH);CopyRemoves liquidity from an ERC-20‚áÑWETH pool and receive ETH.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountTokenuintThe amount of token received.amountETHuintThe amount of ETH received.removeLiquidityWithPermit‚Äãfunction removeLiquidityWithPermit( address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountA, uint amountB);CopyRemoves liquidity from an ERC-20‚áÑERC-20 pool without pre-approval, thanks to permit.NameTypetokenAaddressA pool token.tokenBaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountAMinuintThe minimum amount of tokenA that must be received for the transaction not to revert.amountBMinuintThe minimum amount of tokenB that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountAuintThe amount of tokenA received.amountBuintThe amount of tokenB received.removeLiquidityETHWithPermit‚Äãfunction removeLiquidityETHWithPermit( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountToken, uint amountETH);CopyRemoves liquidity from an ERC-20‚áÑWETTH pool and receive ETH without pre-approval, thanks to permit.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountTokenuintThe amount of token received.amountETHuintThe amount of ETH received.removeLiquidityETHSupportingFeeOnTransferTokens‚Äãfunction removeLiquidityETHSupportingFeeOnTransferTokens( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external returns (uint amountETH);CopyIdentical to removeLiquidityETH, but succeeds for tokens that take a fee on transfer.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountETHuintThe amount of ETH received.removeLiquidityETHWithPermitSupportingFeeOnTransferTokens‚Äãfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountETH);CopyIdentical to removeLiquidityETHWithPermit, but succeeds for tokens that take a fee on transfer.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountETHuintThe amount of ETH received.swapExactTokensForTokens‚Äãfunction swapExactTokensForTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopySwaps an exact amount of input tokens for as many output tokens as possible, along the route determined by the path. The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountIn on the input token.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapTokensForExactTokens‚Äãfunction swapTokensForExactTokens( uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopyReceive an exact amount of output tokens for as few input tokens as possible, along the route determined by the path. The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate tokens to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountInMax on the input token.NameTypeamountOutuintThe amount of output tokens to receive.amountInMaxuintThe maximum amount of input tokens that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactETHForTokens‚Äãfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts);CopySwaps an exact amount of ETH for as many output tokens as possible, along the route determined by the path. The first element of path must be WETH, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).NameTypemsg.value (amountIn)uintThe amount of ETH to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapTokensForExactETH‚Äãfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopyReceive an exact amount of ETH for as few input tokens as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountInMax on the input token.If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountOutuintThe amount of ETH to receive.amountInMaxuintThe maximum amount of input tokens that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of ETH.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactTokensForETH‚Äãfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopySwaps an exact amount of tokens for as much ETH as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the ETH.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapETHForExactTokens‚Äãfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts);CopyReceive an exact amount of tokens for as little ETH as possible, along the route determined by the path. The first element of path must be WETH, the last is the output token and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).Leftover ETH, if any, is returned to msg.sender.NameTypeamountOutuintThe amount of tokens to receive.msg.value (amountInMax)uintThe maximum amount of ETH that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactTokensForTokensSupportingFeeOnTransferTokens‚Äãfunction swapExactTokensForTokensSupportingFeeOnTransferTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external;CopyIdentical to swapExactTokensForTokens, but succeeds for tokens that take a fee on transfer.msg.sender should have already given the router an allowance of at least amountIn on the input token.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.swapExactETHForTokensSupportingFeeOnTransferTokens‚Äãfunction swapExactETHForTokensSupportingFeeOnTransferTokens( uint amountOutMin, address[] calldata path, address to, uint deadline) external payable;CopyIdentical to swapExactETHForTokens, but succeeds for tokens that take a fee on transfer.NameTypemsg.value (amountIn)uintThe amount of ETH to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.swapExactTokensForETHSupportingFeeOnTransferTokens‚Äãfunction swapExactTokensForETHSupportingFeeOnTransferTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external;CopyIdentical to swapExactTokensForETH, but succeeds for tokens that take a fee on transfer.If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the ETH.deadlineuintUnix timestamp after which the transaction will revert.Interfaceimport '@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol';Copypragma solidity >=0.6.2;interface IUniswapV2Router01 { function factory() external pure returns (address); function WETH() external pure returns (address); function addLiquidity(  address tokenA,  address tokenB,  uint amountADesired,  uint amountBDesired,  uint amountAMin,  uint amountBMin,  address to,  uint deadline ) external returns (uint amountA, uint amountB, uint liquidity); function addLiquidityETH(  address token,  uint amountTokenDesired,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external payable returns (uint amountToken, uint amountETH, uint liquidity); function removeLiquidity(  address tokenA,  address tokenB,  uint liquidity,  uint amountAMin,  uint amountBMin,  address to,  uint deadline ) external returns (uint amountA, uint amountB); function removeLiquidityETH(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external returns (uint amountToken, uint amountETH); function removeLiquidityWithPermit(  address tokenA,  address tokenB,  uint liquidity,  uint amountAMin,  uint amountBMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountA, uint amountB); function removeLiquidityETHWithPermit(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountToken, uint amountETH); function swapExactTokensForTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external returns (uint[] memory amounts); function swapTokensForExactTokens(  uint amountOut,  uint amountInMax,  address[] calldata path,  address to,  uint deadline ) external returns (uint[] memory amounts); function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)  external  payable  returns (uint[] memory amounts); function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)  external  returns (uint[] memory amounts); function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)  external  returns (uint[] memory amounts); function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)  external  payable  returns (uint[] memory amounts); function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB); function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut); function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn); function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts); function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);}interface IUniswapV2Router02 is IUniswapV2Router01 { function removeLiquidityETHSupportingFeeOnTransferTokens(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external returns (uint amountETH); function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountETH); function swapExactTokensForTokensSupportingFeeOnTransferTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external; function swapExactETHForTokensSupportingFeeOnTransferTokens(  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external payable; function swapExactTokensForETHSupportingFeeOnTransferTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external;}CopyABIimport IUniswapV2Router02 from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'Copyhttps://unpkg.com/@uniswap/v2-periphery@1.1.0-beta.0/build/IUniswapV2Router02.jsonEdit this pageHelpful?PreviousRouter01NextCommon ErrorsfactoryWETHquotegetAmountOutgetAmountIngetAmountsOutgetAmountsInaddLiquidityaddLiquidityETHremoveLiquidityremoveLiquidityETHremoveLiquidityWithPermitremoveLiquidityETHWithPermitremoveLiquidityETHSupportingFeeOnTransferTokensremoveLiquidityETHWithPermitSupportingFeeOnTransferTokensswapExactTokensForTokensswapTokensForExactTokensswapExactETHForTokensswapTokensForExactETHswapExactTokensForETHswapETHForExactTokensswapExactTokensForTokensSupportingFeeOnTransferTokensswapExactETHForTokensSupportingFeeOnTransferTokensswapExactTokensForETHSupportingFeeOnTransferTokensDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
84,p.org sdk v3 reference classes TickLibrary#constructor,"p.org sdk v3 reference classes TickLibrary#constructor.    TickLibrary | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickLibraryHelpful?On this pageTickLibrary@uniswap/v3-sdk / Exports / TickLibraryClass: TickLibraryTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãgetFeeGrowthInsideConstructors‚Äãconstructor‚Äã‚Ä¢ Private new TickLibrary()Cannot be constructed.Defined in‚Äãutils/tickLibrary.ts:25Methods‚ÄãgetFeeGrowthInside‚Äã‚ñ∏ Static getFeeGrowthInside(feeGrowthOutsideLower, feeGrowthOutsideUpper, tickLower, tickUpper, tickCurrent, feeGrowthGlobal0X128, feeGrowthGlobal1X128): default[]Parameters‚ÄãNameTypefeeGrowthOutsideLowerFeeGrowthOutsidefeeGrowthOutsideUpperFeeGrowthOutsidetickLowernumbertickUppernumbertickCurrentnumberfeeGrowthGlobal0X128defaultfeeGrowthGlobal1X128defaultReturns‚Äãdefault[]Defined in‚Äãutils/tickLibrary.ts:27Helpful?PreviousTickNextTickListTable of contentsConstructorsMethodsConstructorsconstructorMethodsgetFeeGrowthInsideDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
85,p.org sdk core reference enums SupportedChainId#celo alfajores,p.org sdk core reference enums SupportedChainId#celo alfajores.    SupportedChainId | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesenumsRoundingSupportedChainIdTradeTypeV2 SDKV1 SDKüè†Core SDKTechnical ReferenceenumsSupportedChainIdHelpful?On this pageSupportedChainId@uniswap/sdk-core / Exports / SupportedChainIdEnumeration: SupportedChainIdTable of contents‚ÄãEnumeration Members‚ÄãARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENEnumeration Members‚ÄãARBITRUM_ONE‚Äã‚Ä¢ ARBITRUM_ONE = 42161Defined in‚Äãconstants.ts:10ARBITRUM_RINKEBY‚Äã‚Ä¢ ARBITRUM_RINKEBY = 421611Defined in‚Äãconstants.ts:11CELO‚Äã‚Ä¢ CELO = 42220Defined in‚Äãconstants.ts:19CELO_ALFAJORES‚Äã‚Ä¢ CELO_ALFAJORES = 44787Defined in‚Äãconstants.ts:20GOERLI‚Äã‚Ä¢ GOERLI = 5Defined in‚Äãconstants.ts:7KOVAN‚Äã‚Ä¢ KOVAN = 42Defined in‚Äãconstants.ts:8MAINNET‚Äã‚Ä¢ MAINNET = 1Defined in‚Äãconstants.ts:4OPTIMISM‚Äã‚Ä¢ OPTIMISM = 10Defined in‚Äãconstants.ts:13OPTIMISM_GOERLI‚Äã‚Ä¢ OPTIMISM_GOERLI = 420Defined in‚Äãconstants.ts:14POLYGON‚Äã‚Ä¢ POLYGON = 137Defined in‚Äãconstants.ts:16POLYGON_MUMBAI‚Äã‚Ä¢ POLYGON_MUMBAI = 80001Defined in‚Äãconstants.ts:17RINKEBY‚Äã‚Ä¢ RINKEBY = 4Defined in‚Äãconstants.ts:6ROPSTEN‚Äã‚Ä¢ ROPSTEN = 3Defined in‚Äãconstants.ts:5Helpful?PreviousRoundingNextTradeTypeTable of contentsEnumeration MembersEnumeration MembersARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
86,p.org sdk v3 reference modules.md#increaseoptions,p.org sdk v3 reference modules.md#increaseoptions. 
87,p.org sdk core reference enums Rounding,p.org sdk core reference enums Rounding.    Rounding | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesenumsRoundingSupportedChainIdTradeTypeV2 SDKV1 SDKüè†Core SDKTechnical ReferenceenumsRoundingHelpful?On this pageRounding@uniswap/sdk-core / Exports / RoundingEnumeration: RoundingTable of contents‚ÄãEnumeration Members‚ÄãROUND_DOWNROUND_HALF_UPROUND_UPEnumeration Members‚ÄãROUND_DOWN‚Äã‚Ä¢ ROUND_DOWN = 0Defined in‚Äãconstants.ts:32ROUND_HALF_UP‚Äã‚Ä¢ ROUND_HALF_UP = 1Defined in‚Äãconstants.ts:33ROUND_UP‚Äã‚Ä¢ ROUND_UP = 2Defined in‚Äãconstants.ts:34Helpful?PreviousTokenNextSupportedChainIdTable of contentsEnumeration MembersEnumeration MembersROUND_DOWNROUND_HALF_UPROUND_UPDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
88,p.org sdk core reference classes Fraction#invert,"p.org sdk core reference classes Fraction#invert.    Fraction | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesFractionHelpful?On this pageFraction@uniswap/sdk-core / Exports / FractionClass: FractionHierarchy‚ÄãFraction‚Ü≥ CurrencyAmount‚Ü≥ Percent‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatornumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionConstructors‚Äãconstructor‚Äã‚Ä¢ new Fraction(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:107subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:138toSignificant‚Äã‚ñ∏ toSignificant(significantDigits, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:123tryParseFraction‚Äã‚ñ∏ Static Private tryParseFraction(fractionish): FractionParameters‚ÄãNameTypefractionishBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:33Helpful?PreviousEtherNextNativeCurrencyHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatornumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
89,p.org sdk v3 reference interfaces SwapOptions#fee,"p.org sdk v3 reference interfaces SwapOptions#fee.    SwapOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesSwapOptionsHelpful?On this pageSwapOptions@uniswap/v3-sdk / Exports / SwapOptionsInterface: SwapOptionsOptions for producing the arguments to send calls to the router.Table of contents‚ÄãProperties‚ÄãdeadlinefeeinputTokenPermitrecipientslippageTolerancesqrtPriceLimitX96Properties‚Äãdeadline‚Äã‚Ä¢ deadline: BigintIshWhen the transaction expires, in epoch seconds.Defined in‚ÄãswapRouter.ts:30fee‚Äã‚Ä¢ Optional fee: FeeOptionsOptional information for taking a fee on output.Defined in‚ÄãswapRouter.ts:45inputTokenPermit‚Äã‚Ä¢ Optional inputTokenPermit: PermitOptionsThe optional permit parameters for spending the input.Defined in‚ÄãswapRouter.ts:35recipient‚Äã‚Ä¢ recipient: stringThe account that should receive the output.Defined in‚ÄãswapRouter.ts:25slippageTolerance‚Äã‚Ä¢ slippageTolerance: PercentHow much the execution price is allowed to move unfavorably from the trade execution price.Defined in‚ÄãswapRouter.ts:20sqrtPriceLimitX96‚Äã‚Ä¢ Optional sqrtPriceLimitX96: BigintIshThe optional price limit for the trade.Defined in‚ÄãswapRouter.ts:40Helpful?PreviousStandardPermitArgumentsNextTickConstructorArgsTable of contentsPropertiesPropertiesdeadlinefeeinputTokenPermitrecipientslippageTolerancesqrtPriceLimitX96DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
90,p.org contracts universal router technical reference#sweep,"p.org contracts universal router technical reference#sweep.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
91,p.org contracts v2 reference smart contracts router 01,"p.org contracts v2 reference smart contracts router 01.    Router01 | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsRouter01Helpful?On this pageRouter01UniswapV2Router01 should not be used any longer, because of the discovery of a low severity bug and the fact that some methods do not work with tokens that take fees on transfer. The current recommendation is to use UniswapV2Router02.CodeUniswapV2Router01.solAddressUniswapV2Router01 is deployed at 0xf164fC0Ec4E93095b804a4795bBe1e041497b92a on the Ethereum mainnet, and the Ropsten, Rinkeby, G√∂rli, and Kovan testnets. It was built from commit 2ad7da2.Read-Only Functionsfactory‚Äãfunction factory() external pure returns (address);CopyReturns factory address.WETH‚Äãfunction WETH() external pure returns (address);CopyReturns the canonical WETH address on the Ethereum mainnet, or the Ropsten, Rinkeby, G√∂rli, or Kovan testnets.State-Changing FunctionsaddLiquidity‚Äãfunction addLiquidity( address tokenA, address tokenB, uint amountADesired, uint amountBDesired, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB, uint liquidity);CopyAdds liquidity to an ERC-20‚áÑERC-20 pool.To cover all possible scenarios, msg.sender should have already given the router an allowance of at least amountADesired/amountBDesired on tokenA/tokenB.Always adds assets at the ideal ratio, according to the price when the transaction is executed.If a pool for the passed tokens does not exists, one is created automatically, and exactly amountADesired/amountBDesired tokens are added.NameTypetokenAaddressA pool token.tokenBaddressA pool token.amountADesireduintThe amount of tokenA to add as liquidity if the B/A price is <= amountBDesired/amountADesired (A depreciates).amountBDesireduintThe amount of tokenB to add as liquidity if the A/B price is <= amountADesired/amountBDesired (B depreciates).amountAMinuintBounds the extent to which the B/A price can go up before the transaction reverts. Must be <= amountADesired.amountBMinuintBounds the extent to which the A/B price can go up before the transaction reverts. Must be <= amountBDesired.toaddressRecipient of the liquidity tokens.deadlineuintUnix timestamp after which the transaction will revert.amountAuintThe amount of tokenA sent to the pool.amountBuintThe amount of tokenB sent to the pool.liquidityuintThe amount of liquidity tokens minted.addLiquidityETH‚Äãfunction addLiquidityETH( address token, uint amountTokenDesired, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external payable returns (uint amountToken, uint amountETH, uint liquidity);CopyAdds liquidity to an ERC-20‚áÑWETH pool with ETH.To cover all possible scenarios, msg.sender should have already given the router an allowance of at least amountTokenDesired on token.Always adds assets at the ideal ratio, according to the price when the transaction is executed.msg.value is treated as a amountETHDesired.Leftover ETH, if any, is returned to msg.sender.If a pool for the passed token and WETH does not exists, one is created automatically, and exactly amountTokenDesired/msg.value tokens are added.NameTypetokenaddressA pool token.amountTokenDesireduintThe amount of token to add as liquidity if the WETH/token price is <= msg.value/amountTokenDesired (token depreciates).msg.value (amountETHDesired)uintThe amount of ETH to add as liquidity if the token/WETH price is <= amountTokenDesired/msg.value (WETH depreciates).amountTokenMinuintBounds the extent to which the WETH/token price can go up before the transaction reverts. Must be <= amountTokenDesired.amountETHMinuintBounds the extent to which the token/WETH price can go up before the transaction reverts. Must be <= msg.value.toaddressRecipient of the liquidity tokens.deadlineuintUnix timestamp after which the transaction will revert.amountTokenuintThe amount of token sent to the pool.amountETHuintThe amount of ETH converted to WETH and sent to the pool.liquidityuintThe amount of liquidity tokens minted.removeLiquidity‚Äãfunction removeLiquidity( address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB);CopyRemoves liquidity from an ERC-20‚áÑERC-20 pool.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenAaddressA pool token.tokenBaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountAMinuintThe minimum amount of tokenA that must be received for the transaction not to revert.amountBMinuintThe minimum amount of tokenB that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountAuintThe amount of tokenA received.amountBuintThe amount of tokenB received.removeLiquidityETH‚Äãfunction removeLiquidityETH( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external returns (uint amountToken, uint amountETH);CopyRemoves liquidity from an ERC-20‚áÑWETH pool and receive ETH.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountTokenuintThe amount of token received.amountETHuintThe amount of ETH received.removeLiquidityWithPermit‚Äãfunction removeLiquidityWithPermit( address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountA, uint amountB);CopyRemoves liquidity from an ERC-20‚áÑERC-20 pool without pre-approval, thanks to permit.NameTypetokenAaddressA pool token.tokenBaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountAMinuintThe minimum amount of tokenA that must be received for the transaction not to revert.amountBMinuintThe minimum amount of tokenB that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountAuintThe amount of tokenA received.amountBuintThe amount of tokenB received.removeLiquidityETHWithPermit‚Äãfunction removeLiquidityETHWithPermit( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountToken, uint amountETH);CopyRemoves liquidity from an ERC-20‚áÑWETTH pool and receive ETH without pre-approval, thanks to permit.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountTokenuintThe amount of token received.amountETHuintThe amount of ETH received.swapExactTokensForTokens‚Äãfunction swapExactTokensForTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopySwaps an exact amount of input tokens for as many output tokens as possible, along the route determined by the path. The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountIn on the input token.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapTokensForExactTokens‚Äãfunction swapTokensForExactTokens( uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopyReceive an exact amount of output tokens for as few input tokens as possible, along the route determined by the path. The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountInMax on the input token.NameTypeamountOutuintThe amount of output tokens to receive.amountInMaxuintThe maximum amount of input tokens that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactETHForTokens‚Äãfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts);CopySwaps an exact amount of ETH for as many output tokens as possible, along the route determined by the path. The first element of path must be WETH, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).NameTypemsg.value (amountIn)uintThe amount of ETH to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapTokensForExactETH‚Äãfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopyReceive an exact amount of ETH for as few input tokens as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountInMax on the input token.If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountOutuintThe amount of ETH to receive.amountInMaxuintThe maximum amount of input tokens that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of ETH.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactTokensForETH‚Äãfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopySwaps an exact amount of tokens for as much ETH as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the ETH.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapETHForExactTokens‚Äãfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts);CopyReceive an exact amount of tokens for as little ETH as possible, along the route determined by the path. The first element of path must be WETH, the last is the output token and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).Leftover ETH, if any, is returned to msg.sender.NameTypeamountOutuintThe amount of tokens to receive.msg.value (amountInMax)uintThe maximum amount of ETH that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.quote‚ÄãSee quote.getAmountOut‚ÄãSee getAmountOut.getAmountIn‚ÄãThis function contains a low severity bug, do not use.getAmountsOut‚Äãfunction getAmountsOut(uint amountIn, address[] memory path) public view returns (uint[] memory amounts);CopySee getAmountsOut.getAmountsIn‚Äãfunction getAmountsIn(uint amountOut, address[] memory path) public view returns (uint[] memory amounts);CopySeegetAmountsIn.Interfaceimport '@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol';Copypragma solidity >=0.6.2;interface IUniswapV2Router01 { function factory() external pure returns (address); function WETH() external pure returns (address); function addLiquidity(  address tokenA,  address tokenB,  uint amountADesired,  uint amountBDesired,  uint amountAMin,  uint amountBMin,  address to,  uint deadline ) external returns (uint amountA, uint amountB, uint liquidity); function addLiquidityETH(  address token,  uint amountTokenDesired,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external payable returns (uint amountToken, uint amountETH, uint liquidity); function removeLiquidity(  address tokenA,  address tokenB,  uint liquidity,  uint amountAMin,  uint amountBMin,  address to,  uint deadline ) external returns (uint amountA, uint amountB); function removeLiquidityETH(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external returns (uint amountToken, uint amountETH); function removeLiquidityWithPermit(  address tokenA,  address tokenB,  uint liquidity,  uint amountAMin,  uint amountBMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountA, uint amountB); function removeLiquidityETHWithPermit(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountToken, uint amountETH); function swapExactTokensForTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external returns (uint[] memory amounts); function swapTokensForExactTokens(  uint amountOut,  uint amountInMax,  address[] calldata path,  address to,  uint deadline ) external returns (uint[] memory amounts); function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)  external  payable  returns (uint[] memory amounts); function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)  external  returns (uint[] memory amounts); function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)  external  returns (uint[] memory amounts); function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)  external  payable  returns (uint[] memory amounts); function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB); function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut); function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn); function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts); function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);}CopyABIimport IUniswapV2Router01 from '@uniswap/v2-periphery/build/IUniswapV2Router01.json'Copyhttps://unpkg.com/@uniswap/v2-periphery@1.0.0-beta.0/build/IUniswapV2Router01.jsonEdit this pageHelpful?PreviousLibraryNextRouter02factoryWETHaddLiquidityaddLiquidityETHremoveLiquidityremoveLiquidityETHremoveLiquidityWithPermitremoveLiquidityETHWithPermitswapExactTokensForTokensswapTokensForExactTokensswapExactETHForTokensswapTokensForExactETHswapExactTokensForETHswapETHForExactTokensquotegetAmountOutgetAmountIngetAmountsOutgetAmountsInDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
92,p.org sdk swap widget guides getting started#understanding widget states,"p.org sdk swap widget guides getting started#understanding widget states.    Getting Started with the Swap Widget | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap WidgetOverviewGuidesGetting StartedExample ThemesTechnical Referenceweb3-reactCore SDKV2 SDKV1 SDKüè†Swap WidgetGuidesGetting StartedHelpful?On this pageGetting Started with the Swap WidgetThis guide walks you through the steps to embed the swap widget in your website in 2 minutes ‚Äî whether your site is already a decentralized application (dApp) or not. With the swap widget, your users can trade ERC-20 tokens on the Uniswap Protocol without leaving your site!Here‚Äôs a live preview of the swap widget.Example use cases include:Building a custom frontend for the Uniswap ProtocolSwapping assets in a DeFi applicationAcquiring a token to participate in your web3 community (e.g. FWB or a gaming token)Converting to the required currency for an NFT purchase (e.g. WETH)You can make the widget feel like a native part of your app by customizing the colors, font, and token list to match your app theme. This guide will teach you how.Installing the Widgets Library‚ÄãTo get started, install the widgets library using npm or Yarn. If you don‚Äôt already use it, you‚Äôll need to install react-redux as well.npmYarnnpm install --save @uniswap/widgets react-reduxCopyyarn add @uniswap/widgets react-reduxCopyAdding the Swap Widget to Your App‚ÄãNext, embed the React component in your application.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'function App() { <div className=""Uniswap""> <SwapWidget /> </div>}CopyThat‚Äôs it! You should now see a fully functional swap widget on your site. The widget is self-contained and gracefully handles all interactions with the Uniswap Protocol. It leverages the Auto Router to compute the best price across all Uniswap v2 and v3 pools.See a full implementation of the swap widget in the /cra and /nextjs branches of the widgets-demo repo.Create React App V4All code snippets will work seamlessly if you use Next.js or Create React App V5. However, if you‚Äôre using Create React App V4, you‚Äôll need to use the following import statements instead:import { SwapWidget } from '@uniswap/widgets/dist/index.js'import '@uniswap/widgets/dist/fonts.css'CopyRecommended ParametersThe swap widget is a React component that can be easily imported into any React project. It's designed to work out-of-the-box, with no required parameters or web3 integration necessary. Trading is supported on all networks where the Uniswap Protocol is deployed.Although the widget will work out-of-the-box with no parameters, we highly recommend integrators provide JSON-RPC endpoints, like from Infura or Alchemy. Existing dApps can also provide their existing web3 provider to integrate the widget seamlessly into their dApp.Additional optional parameters are available to customize the appearance and performance of the swap widget to fit your unique use case.Web3 Provider‚ÄãThe swap widget uses a web3 provider prop to allow users to connect their wallets, fetch balances, and submit transactions through the user‚Äôs connected wallet.If your app does not maintain its own web3 provider, you can omit the provider prop. The widget will use built-in wallet connection functionality (for WalletConnect and MetaMask), making it easy for you to integrate web3 in your app!If you already have a web3 provider, you can pass your provider object directly into the provider prop. Both ethers and web3.js provider objects are compatible with the widget, as is any EIP-1193 provider. You can directly use the providers returned from web3-react or wagmi (both are ethers providers). If it is not connected to a wallet, it will still be used to read data from the chain, but the widget will still prompt the user to ""Connect wallet"".Be sure to use the wallet-connected providerWhen using wagmi@v0.11, useProvider() will return the fallback provider, not the wallet-connected provider. You should instead pass useSigner<JsonRpcSigner>().data?.provider to reflect the user's connected wallet.If you maintain a web3 provider on your app, you should also consider intercepting the swap widget's wallet connection flow. Do so by passing a handler returning false to the onConnectWalletClick prop, which is triggered when the widget's ""Connect wallet"" button is clicked. Check out libraries such as web3-react, BlockNative‚Äôs Onboard, or Aragon‚Äôs useWallet() to build your own flow. To hide the swap widget's wallet connection flow entirely, pass true to the hideConnectionUI prop.The widget will match the network currently selected by the passed provider. If the user switches networks in your app or in their connected wallet, that change will propagate to the widget as well. If the user connects to a network that is not supported by the swap widget, the widget will gracefully disable itself.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'// We recommend you pass a web3 provider.import { provider } from './your/provider'// We recommend you pass your own JSON-RPC endpoints.const jsonRpcUrlMap = { 1: ['https://mainnet.infura.io/v3/<YOUR_INFURA_PROJECT_ID>'], 3: ['https://ropsten.infura.io/v3/<YOUR_INFURA_PROJECT_ID>']}function App() { <div className=""Uniswap""> <SwapWidget provider={provider} jsonRpcUrlMap={jsonRpcUrlMap} /> </div>}CopyJSON-RPC Endpoints‚ÄãJSON-RPC endpoints are used to read data when no provider is connected. We strongly recommend you pass either a Web3 Provider to the provider prop, or JSON-RPC endpoint URLs to the jsonRpcUrlMap prop.The widget will use these endpoints to fetch on-chain data and submit transactions for signature. If the user connects a MetaMask wallet, the widget will use the JSON-RPC provided by MetaMask when possible. (See a list of all chains supported on widget.) If you don‚Äôt yet have JSON-RPC endpoints, you can easily create them with services like Infura or Alchemy.If you choose not to provide a jsonRpcUrlMap prop or are missing endpoints for some chains, the widget uses free public JSON-RPC endpoints to still allow users to interact with the widget and fetch price quotes. However, these public endpoints are NOT recommended for production environment usage, are severely rate-limited, and aren't necessarily as reliable. When possible, we'd recommend providing your own endpoints!Customizing the Swap WidgetYou can set optional parameters to tailor the appearance and functionality of the swap widget to fit your dApp.Customizing the Width‚ÄãThe swap widget has a fixed height of 360px and a default width of 360px. You cannot modify the height of the widget. You can modify the width up to a minimum width of 300px.You can customize the width by passing a number (of pixels) or a valid CSS width to the width prop of the widget.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'function App() { <div className=""Uniswap""> <SwapWidget  width={360} // Custom width in pixels /> </div>}CopyFor example:width={360} sets the width to 360 pixelswidth=""100%"" sets the width to dynamically fill 100% of the parent containerwidth=""20em"" sets the width to 20 * 16 = 320 pixels because 16px is the base font-size of the widgetThe recommended and default width is 360 pixels.Customizing the Theme‚ÄãYou can customize the colors, font, and border radius of the swap widget to match the look and feel of your dApp. You can also toggle between light and dark modes. This section explains how to customize each attribute of the widget with your own theme.All attributes below are color codes, except fontFamily (string), borderRadius (number between 0 and 1), and tokenColorExtraction(boolean). The next two sections show code examples using these attributes.Check out examples of the swap widget, and the Figma file if you want to mock it up first!Overriding Attributes‚ÄãYou can override specific attributes of the widget by creating a Theme object and defining the properties you wish to override. Any properties left undefined will fallback to the default theme. For example, here is a simple Theme that removes the border radius and sets a custom font family.import { Theme, SwapWidget } from '@uniswap/widgets'// Define a custom theme to override default attributesconst theme: Theme = { borderRadius: 0, fontFamily: '""Helvetica""',}function App() { <div className=""Uniswap""> <SwapWidget theme={theme} /> </div>}CopyPlease note that the borderRadius attribute is a multiplier from 0 to 1 of how much radius to apply. Since the widget uses different values of border radius (e.g. internal edges have tighter radii than external edges), borderRadius will apply your multiplier value on all instances so that the border radii still look proportionally correct.Importing FontsThe swap widget fonts must be imported explicitly with import '@uniswap/widgets/fonts.css'. However, if you‚Äôre overriding the swap widget fonts with your own, or with a default font such as Helvetica in the example above, you can remove this import statement.Enabling Token Color Extraction‚ÄãBy default, the background color of the output module will be set by the¬†module¬†attribute. You can optionally enable color extraction to flood the output module with the color of the selected output token. In the above example, DAI is the output token so the output module is flooded with DAI yellow.To enable color extraction, set the tokenColorExtraction property to true in your Theme object.import { Theme, SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'const enableColorExtractionTheme: Theme = { tokenColorExtraction: true, // Enable color extraction of the output token}function App() { <div className=""Uniswap""> <SwapWidget theme={enableColorExtractionTheme} /> </div>}CopyToggling Light and Dark Mode‚ÄãThe swap widget provides a default light theme and dark theme as a starting point. You can import each one and extend it to create your own theme. If your app can toggle between light and dark mode, you can propagate that state down to the widget by following the example below.import { darkTheme, lightTheme, Theme, SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'let darkMode = true // Dynamically toggle dark mode on and offfunction App() { <div className=""Uniswap""> <SwapWidget theme={darkMode ? darkTheme : lightTheme} /> </div>}CopyMatching System Preference for Light and Dark Mode‚ÄãYou can match the user‚Äôs system preference for light/dark mode by using the useSystemTheme hook. This will return the default widget light or dark theme according to the user‚Äôs system configuration. You can extend this base theme with further customizations, as you will see in the next section.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'function useSystemTheme() { // Access}function App() { const theme = useSystemTheme() // Get a theme that matches the user system preference <div className=""Uniswap""> <SwapWidget theme={theme} /> </div>}CopyExtending Themes‚ÄãYou can extend any theme with custom attributes. The below example extends the base light and dark themes with custom colors.import { darkTheme, lightTheme, Theme, SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'const myLightTheme: Theme = { ...lightTheme, // Extend the lightTheme accent: '#FF007A', primary: '#000000', secondary: '#565A69',}const myDarkTheme: Theme = { ...darkTheme, // Extend the darkTheme accent: '#2172E5', primary: '#FFFFFF', secondary: '#888D9B',}let darkMode = truefunction App() { <div className=""Uniswap""> <SwapWidget theme={darkMode ? myDarkTheme : myLightTheme} /> </div>}CopyCustomizing the Token Lists‚ÄãBy default, the widget will use the Uniswap Labs default token list in the selector.Customizing the Default Token List‚ÄãIf you want to offer a different set of tokens in the widget, you can provide a custom tokenList parameter. You can browse popular token lists to find one that suits your needs and then pass the URL as a parameter.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'const CMC_TOKEN_LIST = 'https://api.coinmarketcap.com/data-api/v3/uniswap/all.json'function App() { <div className=""Uniswap""> <SwapWidget  tokenList={CMC_TOKEN_LIST} // Use the CoinMarketCap token list /> </div>}CopyAlternatively, you can create your own token list. There are two ways to provide your own token list for the widget.The first option is to create a full token list, host it at your own URI, and pass the URI as a parameter as in the above example. This option is recommended if you want to use the same token list in multiple places throughout your application or community.The second and easiest option is to construct a custom token list inline as an array of tokens. The schema is equivalent to the tokens array from the tokenlist JSON schema. This option lets you skip deployment, hosting, and versioning of a full URI token list. Here is an example of an inline token list containing only the DAI, USDT, and USDC tokens (in addition to ETH which is always available, regardless of token list).import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'// You can also pass a token list as JSON, as long as it matches the schemaconst MY_TOKEN_LIST = [ { ""name"": ""Dai Stablecoin"", ""address"": ""0x6B175474E89094C44Da98b954EedeAC495271d0F"", ""symbol"": ""DAI"", ""decimals"": 18, ""chainId"": 1, ""logoURI"": ""https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x6B175474E89094C44Da98b954EedeAC495271d0F/logo.png"" }, { ""name"": ""Tether USD"", ""address"": ""0xdAC17F958D2ee523a2206206994597C13D831ec7"", ""symbol"": ""USDT"", ""decimals"": 6, ""chainId"": 1, ""logoURI"": ""https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png"" }, { ""name"": ""USD Coin"", ""address"": ""0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"", ""symbol"": ""USDC"", ""decimals"": 6, ""chainId"": 1, ""logoURI"": ""https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/logo.png"" },]function App() { <div className=""Uniswap""> <SwapWidget tokenList={MY_TOKEN_LIST} /> </div>}CopyPlease note that the swap widget only enforces metadata validation on remotely hosted token lists, not on token list data passed as a literal value to the widget like in this example.If you want to add Layer 2 tokens to the token list, you can add an extension field. See this GitHub issue for details.Customizing the Default Input and Output Tokens‚ÄãYou can set the defaultInputTokenAddress, defaultInputAmount, defaultOutputTokenAddress, and defaultOutputAmount to pre-populate the input and output token fields respectively. This is useful when the widget appears in a context where you know which tokens the user is evaluating to trade. For example, if the widget appears on a page that displays the WBTC price chart, it would be helpful to pre-select WBTC as the output token in the widget.If your page does not need any particular defaults, then the recommended default input token is the native asset of the active network (e.g. ETH) and no default output token is recommended. Since ETH does not have an address, you can pass 'NATIVE' as the parameter to set it as the default input or output token.The following example sets the default input to 2 ETH and the default output token to WBTC.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'// Default token list from Uniswapconst UNISWAP_TOKEN_LIST = 'https://gateway.ipfs.io/ipns/tokens.uniswap.org'// Use the native token of the connected chain as the default input tokenconst NATIVE = 'NATIVE' // Special address for native token// WBTC as the default output tokenconst WBTC = '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599'function App() { <div className=""Uniswap""> <SwapWidget  tokenList={UNISWAP_TOKEN_LIST}  defaultInputTokenAddress={NATIVE}  defaultInputAmount={2}  defaultOutputTokenAddress={WBTC} /> </div>}CopyUnderstanding the Swap Widget States‚ÄãThe widget has two main connectivity states depending on if the user has connected a wallet.Before wallet connection, the widget will use the JSON-RPC endpoint to fetch token price data and provide trade quotes, but submitting transactions will be disabled.After wallet connection, the widget will be fully functional. The user will be able to fetch trade quotes and submit swap transactions using the JSON-RPC endpoint and web3 provider from their connected wallet.Questions?Join the Discord channel to ask questions and get support from the Uniswap community.Helpful?PreviousOverviewNextExample ThemesInstalling the Widgets LibraryAdding the Swap Widget to Your AppWeb3 ProviderJSON-RPC EndpointsCustomizing the WidthCustomizing the ThemeOverriding AttributesEnabling Token Color ExtractionToggling Light and Dark ModeMatching System Preference for Light and Dark ModeExtending ThemesCustomizing the Token ListsCustomizing the Default Token ListCustomizing the Default Input and Output TokensUnderstanding the Swap Widget StatesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
93,p.org contracts v2 reference smart contracts pair#burn 1,"p.org contracts v2 reference smart contracts pair#burn 1.    Pair | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsPairHelpful?On this pagePairThis documentation covers Uniswap-specific functionality. For ERC-20 functionality, see Pair (ERC-20).CodeUniswapV2Pair.solAddressSee Pair Addresses.EventsMint‚Äãevent Mint(address indexed sender, uint amount0, uint amount1);CopyEmitted each time liquidity tokens are created via mint.Burn‚Äãevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);CopyEmitted each time liquidity tokens are destroyed via burn.Swap‚Äãevent Swap( address indexed sender, uint amount0In, uint amount1In, uint amount0Out, uint amount1Out, address indexed to);CopyEmitted each time a swap occurs via swap.Sync‚Äãevent Sync(uint112 reserve0, uint112 reserve1);CopyEmitted each time reserves are updated via mint, burn, swap, or sync.Read-Only FunctionsMINIMUM_LIQUIDITY‚Äãfunction MINIMUM_LIQUIDITY() external pure returns (uint);CopyReturns 1000 for all pairs. See Minimum Liquidity.factory‚Äãfunction factory() external view returns (address);CopyReturns the factory address.token0‚Äãfunction token0() external view returns (address);CopyReturns the address of the pair token with the lower sort order.token1‚Äãfunction token1() external view returns (address);CopyReturns the address of the pair token with the higher sort order.getReserves‚Äãfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);CopyReturns the reserves of token0 and token1 used to price trades and distribute liquidity. See Pricing. Also returns the block.timestamp (mod 2**32) of the last block during which an interaction occured for the pair.price0CumulativeLast‚Äãfunction price0CumulativeLast() external view returns (uint);CopySee Oracles.price1CumulativeLast‚Äãfunction price1CumulativeLast() external view returns (uint);CopySee Oracles.kLast‚Äãfunction kLast() external view returns (uint);CopyReturns the product of the reserves as of the most recent liquidity event. See Protocol Charge Calculation.State-Changing Functionsmint‚Äãfunction mint(address to) external returns (uint liquidity);CopyCreates pool tokens.Emits Mint, Sync, Transfer.burn‚Äãfunction burn(address to) external returns (uint amount0, uint amount1);CopyDestroys pool tokens.Emits Burn, Sync, Transfer.swap‚Äãfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;CopySwaps tokens. For regular swaps, data.length must be 0. Also see Flash Swaps.Emits Swap, Sync.skim‚Äãfunction skim(address to) external;CopySee the whitepaper.sync‚Äãfunction sync() external;CopySee the whitepaper.Emits Sync.Interfaceimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol';Copypragma solidity >=0.5.0;interface IUniswapV2Pair { event Approval(address indexed owner, address indexed spender, uint value); event Transfer(address indexed from, address indexed to, uint value); function name() external pure returns (string memory); function symbol() external pure returns (string memory); function decimals() external pure returns (uint8); function totalSupply() external view returns (uint); function balanceOf(address owner) external view returns (uint); function allowance(address owner, address spender) external view returns (uint); function approve(address spender, uint value) external returns (bool); function transfer(address to, uint value) external returns (bool); function transferFrom(address from, address to, uint value) external returns (bool); function DOMAIN_SEPARATOR() external view returns (bytes32); function PERMIT_TYPEHASH() external pure returns (bytes32); function nonces(address owner) external view returns (uint); function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external; event Mint(address indexed sender, uint amount0, uint amount1); event Burn(address indexed sender, uint amount0, uint amount1, address indexed to); event Swap(  address indexed sender,  uint amount0In,  uint amount1In,  uint amount0Out,  uint amount1Out,  address indexed to ); event Sync(uint112 reserve0, uint112 reserve1); function MINIMUM_LIQUIDITY() external pure returns (uint); function factory() external view returns (address); function token0() external view returns (address); function token1() external view returns (address); function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast); function price0CumulativeLast() external view returns (uint); function price1CumulativeLast() external view returns (uint); function kLast() external view returns (uint); function mint(address to) external returns (uint liquidity); function burn(address to) external returns (uint amount0, uint amount1); function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external; function skim(address to) external; function sync() external;}CopyABIimport IUniswapV2Pair from '@uniswap/v2-core/build/IUniswapV2Pair.json'Copyhttps://unpkg.com/@uniswap/v2-core@1.0.0/build/IUniswapV2Pair.jsonEdit this pageHelpful?PreviousFactoryNextPair (ERC-20)MintBurnSwapSyncMINIMUM_LIQUIDITYfactorytoken0token1getReservesprice0CumulativeLastprice1CumulativeLastkLastmintburnswapskimsyncDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
94,p.org sdk core reference classes Price#basecurrency,"p.org sdk core reference classes Price#basecurrency.    Price | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPriceHelpful?On this pagePrice@uniswap/sdk-core / Exports / PriceClass: Price<TBase, TQuote>Type parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyHierarchy‚ÄãFraction‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessors‚ÄãadjustedForDecimalsasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Price<TBase, TQuote>(...args)Construct a price, either with the base and quote currency amount, or theType parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyParameters‚ÄãNameType...args[TBase, TQuote, BigintIsh, BigintIsh] | [{ baseAmount: CurrencyAmount<TBase> ; quoteAmount: CurrencyAmount<TQuote> }]Overrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/price.ts:18Properties‚ÄãbaseCurrency‚Äã‚Ä¢ Readonly baseCurrency: TBaseDefined in‚Äãentities/fractions/price.ts:10denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25quoteCurrency‚Äã‚Ä¢ Readonly quoteCurrency: TQuoteDefined in‚Äãentities/fractions/price.ts:11scalar‚Äã‚Ä¢ Readonly scalar: FractionDefined in‚Äãentities/fractions/price.ts:12Accessors‚ÄãadjustedForDecimals‚Äã‚Ä¢ Private get adjustedForDecimals(): FractionGet the value scaled by decimals for formattingReturns‚ÄãFractionDefined in‚Äãentities/fractions/price.ts:77asFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.addDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.divideDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): Price<TQuote, TBase>Flip the price, switching the base and quote currencyReturns‚ÄãPrice<TQuote, TBase>Overrides‚ÄãFraction.invertDefined in‚Äãentities/fractions/price.ts:49lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply<TOtherQuote>(other): Price<TBase, TOtherQuote>Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currencyType parameters‚ÄãNameTypeTOtherQuoteextends CurrencyParameters‚ÄãNameTypeDescriptionotherPrice<TQuote, TOtherQuote>the other priceReturns‚ÄãPrice<TBase, TOtherQuote>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/price.ts:57quote‚Äã‚ñ∏ quote(currencyAmount): CurrencyAmount<TQuote>Return the amount of quote currency corresponding to a given amount of the base currencyParameters‚ÄãNameTypeDescriptioncurrencyAmountCurrencyAmount<TBase>the amount of base currency to quote against the priceReturns‚ÄãCurrencyAmount<TQuote>Defined in‚Äãentities/fractions/price.ts:67subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.subtractDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber4format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/price.ts:85toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/price.ts:81Helpful?PreviousPercentNextTokenType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessorsadjustedForDecimalsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
95,p.org contracts v3 reference periphery interfaces ISwapRouter,"p.org contracts v3 reference periphery interfaces ISwapRouter.    ISwapRouter | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesIERC20MetadataIERC721PermitIMulticallINonfungiblePositionManagerINonfungibleTokenPositionDescriptorIPeripheryImmutableStateIPeripheryPaymentsIPeripheryPaymentsWithFeeIPoolInitializerIQuoterIQuoterV2ISelfPermitISwapRouterITickLensIV3MigratorexternalLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryInterfacesISwapRouterHelpful?On this pageISwapRouterFunctions for swapping tokens via Uniswap V3Parameter Structs‚ÄãNote that fee is in hundredths of basis points (e.g. the fee for a pool at the 0.3% tier is 3000; the fee for a pool at the 0.01% tier is 100).ExactInputSingleParams‚Äã struct ExactInputSingleParams {  address tokenIn;  address tokenOut;  uint24 fee;  address recipient;  uint256 deadline;  uint256 amountIn;  uint256 amountOutMinimum;  uint160 sqrtPriceLimitX96; }CopyExactInputParams‚Äã struct ExactInputParams {  bytes path;  address recipient;  uint256 deadline;  uint256 amountIn;  uint256 amountOutMinimum; }CopyExactOutputSingleParams‚Äã struct ExactOutputSingleParams {  address tokenIn;  address tokenOut;  uint24 fee;  address recipient;  uint256 deadline;  uint256 amountOut;  uint256 amountInMaximum;  uint160 sqrtPriceLimitX96; }CopyExactOutputParams‚Äã struct ExactOutputParams {  bytes path;  address recipient;  uint256 deadline;  uint256 amountOut;  uint256 amountInMaximum; }CopyFunctions‚ÄãexactInputSingle‚Äã function exactInputSingle( struct ISwapRouter.ExactInputSingleParams params ) external returns (uint256 amountOut)CopySwaps amountIn of one token for as much as possible of another tokenParameters:‚ÄãNameTypeDescriptionparamsstruct ISwapRouter.ExactInputSingleParamsThe parameters necessary for the swap, encoded as ExactInputSingleParams in calldataReturn Values:‚ÄãNameTypeDescriptionamountOutstruct ISwapRouter.ExactInputSingleParamsThe amount of the received tokenexactInput‚Äã function exactInput( struct ISwapRouter.ExactInputParams params ) external returns (uint256 amountOut)CopySwaps amountIn of one token for as much as possible of another along the specified pathParameters:‚ÄãNameTypeDescriptionparamsstruct ISwapRouter.ExactInputParamsThe parameters necessary for the multi-hop swap, encoded as ExactInputParams in calldataReturn Values:‚ÄãNameTypeDescriptionamountOutstruct ISwapRouter.ExactInputParamsThe amount of the received tokenexactOutputSingle‚Äã function exactOutputSingle( struct ISwapRouter.ExactOutputSingleParams params ) external returns (uint256 amountIn)CopySwaps as little as possible of one token for amountOut of another tokenParameters:‚ÄãNameTypeDescriptionparamsstruct ISwapRouter.ExactOutputSingleParamsThe parameters necessary for the swap, encoded as ExactOutputSingleParams in calldataReturn Values:‚ÄãNameTypeDescriptionamountInstruct ISwapRouter.ExactOutputSingleParamsThe amount of the input tokenexactOutput‚Äã function exactOutput( struct ISwapRouter.ExactOutputParams params ) external returns (uint256 amountIn)CopySwaps as little as possible of one token for amountOut of another along the specified path (reversed)Parameters:‚ÄãNameTypeDescriptionparamsstruct ISwapRouter.ExactOutputParamsThe parameters necessary for the multi-hop swap, encoded as ExactOutputParams in calldataReturn Values:‚ÄãNameTypeDescriptionamountInstruct ISwapRouter.ExactOutputParamsThe amount of the input tokenEdit this pageHelpful?PreviousISelfPermitNextITickLensParameter StructsExactInputSingleParamsExactInputParamsExactOutputSingleParamsExactOutputParamsFunctionsexactInputSingleexactInputexactOutputSingleexactOutputDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
96,p.org sdk v3 reference classes SqrtPriceMath#getamount1delta,"p.org sdk v3 reference classes SqrtPriceMath#getamount1delta.    SqrtPriceMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesSqrtPriceMathHelpful?On this pageSqrtPriceMath@uniswap/v3-sdk / Exports / SqrtPriceMathClass: SqrtPriceMathTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãgetAmount0DeltagetAmount1DeltagetNextSqrtPriceFromAmount0RoundingUpgetNextSqrtPriceFromAmount1RoundingDowngetNextSqrtPriceFromInputgetNextSqrtPriceFromOutputConstructors‚Äãconstructor‚Äã‚Ä¢ Private new SqrtPriceMath()Cannot be constructed.Defined in‚Äãutils/sqrtPriceMath.ts:23Methods‚ÄãgetAmount0Delta‚Äã‚ñ∏ Static getAmount0Delta(sqrtRatioAX96, sqrtRatioBX96, liquidity, roundUp): defaultParameters‚ÄãNameTypesqrtRatioAX96defaultsqrtRatioBX96defaultliquiditydefaultroundUpbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:25getAmount1Delta‚Äã‚ñ∏ Static getAmount1Delta(sqrtRatioAX96, sqrtRatioBX96, liquidity, roundUp): defaultParameters‚ÄãNameTypesqrtRatioAX96defaultsqrtRatioBX96defaultliquiditydefaultroundUpbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:38getNextSqrtPriceFromAmount0RoundingUp‚Äã‚ñ∏ Static Private getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96, liquidity, amount, add): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountdefaultaddbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:71getNextSqrtPriceFromAmount1RoundingDown‚Äã‚ñ∏ Static Private getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96, liquidity, amount, add): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountdefaultaddbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:100getNextSqrtPriceFromInput‚Äã‚ñ∏ Static getNextSqrtPriceFromInput(sqrtPX96, liquidity, amountIn, zeroForOne): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountIndefaultzeroForOnebooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:48getNextSqrtPriceFromOutput‚Äã‚ñ∏ Static getNextSqrtPriceFromOutput(sqrtPX96, liquidity, amountOut, zeroForOne): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountOutdefaultzeroForOnebooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:57Helpful?PreviousSelfPermitNextStakerTable of contentsConstructorsMethodsConstructorsconstructorMethodsgetAmount0DeltagetAmount1DeltagetNextSqrtPriceFromAmount0RoundingUpgetNextSqrtPriceFromAmount1RoundingDowngetNextSqrtPriceFromInputgetNextSqrtPriceFromOutputDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
97,p.org contracts v3 reference periphery test MockTimeNonfungiblePositionManager,p.org contracts v3 reference periphery test MockTimeNonfungiblePositionManager.    MockTimeNonfungiblePositionManager | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerTestBase64TestLiquidityAmountsTestMockTimeNonfungiblePositionManagerMockTimeSwapRouterNFTDescriptorTestPathTestPeripheryImmutableStateTestPoolAddressTestSelfPermitTestTestCallbackValidationTestERC20TestERC20MetadataTestERC20PermitAllowedTestMulticallTestPositionNFTOwnerTestUniswapV3CalleeTickLensTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryTestMockTimeNonfungiblePositionManagerHelpful?On this pageMockTimeNonfungiblePositionManagerFunctions‚Äãconstructor‚Äã function constructor( ) publicCopy_blockTimestamp‚Äã function _blockTimestamp( ) internal returns (uint256)CopysetTime‚Äã function setTime( ) externalCopyEdit this pageHelpful?PreviousLiquidityAmountsTestNextMockTimeSwapRouterFunctionsconstructor_blockTimestampsetTimeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
98,p.org sdk v3 reference modules.md#encoderoutetopath,p.org sdk v3 reference modules.md#encoderoutetopath. 
99,p.org sdk v3 reference classes SqrtPriceMath#getamount0delta,"p.org sdk v3 reference classes SqrtPriceMath#getamount0delta.    SqrtPriceMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesSqrtPriceMathHelpful?On this pageSqrtPriceMath@uniswap/v3-sdk / Exports / SqrtPriceMathClass: SqrtPriceMathTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãgetAmount0DeltagetAmount1DeltagetNextSqrtPriceFromAmount0RoundingUpgetNextSqrtPriceFromAmount1RoundingDowngetNextSqrtPriceFromInputgetNextSqrtPriceFromOutputConstructors‚Äãconstructor‚Äã‚Ä¢ Private new SqrtPriceMath()Cannot be constructed.Defined in‚Äãutils/sqrtPriceMath.ts:23Methods‚ÄãgetAmount0Delta‚Äã‚ñ∏ Static getAmount0Delta(sqrtRatioAX96, sqrtRatioBX96, liquidity, roundUp): defaultParameters‚ÄãNameTypesqrtRatioAX96defaultsqrtRatioBX96defaultliquiditydefaultroundUpbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:25getAmount1Delta‚Äã‚ñ∏ Static getAmount1Delta(sqrtRatioAX96, sqrtRatioBX96, liquidity, roundUp): defaultParameters‚ÄãNameTypesqrtRatioAX96defaultsqrtRatioBX96defaultliquiditydefaultroundUpbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:38getNextSqrtPriceFromAmount0RoundingUp‚Äã‚ñ∏ Static Private getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96, liquidity, amount, add): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountdefaultaddbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:71getNextSqrtPriceFromAmount1RoundingDown‚Äã‚ñ∏ Static Private getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96, liquidity, amount, add): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountdefaultaddbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:100getNextSqrtPriceFromInput‚Äã‚ñ∏ Static getNextSqrtPriceFromInput(sqrtPX96, liquidity, amountIn, zeroForOne): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountIndefaultzeroForOnebooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:48getNextSqrtPriceFromOutput‚Äã‚ñ∏ Static getNextSqrtPriceFromOutput(sqrtPX96, liquidity, amountOut, zeroForOne): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountOutdefaultzeroForOnebooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:57Helpful?PreviousSelfPermitNextStakerTable of contentsConstructorsMethodsConstructorsconstructorMethodsgetAmount0DeltagetAmount1DeltagetNextSqrtPriceFromAmount0RoundingUpgetNextSqrtPriceFromAmount1RoundingDowngetNextSqrtPriceFromInputgetNextSqrtPriceFromOutputDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
100,p.org sdk v3 reference interfaces WithdrawOptions#owner,p.org sdk v3 reference interfaces WithdrawOptions#owner.    WithdrawOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesWithdrawOptionsHelpful?On this pageWithdrawOptions@uniswap/v3-sdk / Exports / WithdrawOptionsInterface: WithdrawOptionsOptions to specify when withdrawing a position.Table of contents‚ÄãProperties‚ÄãdataownerProperties‚Äãdata‚Äã‚Ä¢ Optional data: stringSet when withdrawing. data is passed to safeTransferFrom when transferring the position from contract back to owner.Defined in‚Äãstaker.ts:66owner‚Äã‚Ä¢ owner: stringSet when withdrawing. The position will be sent to owner on withdraw.Defined in‚Äãstaker.ts:61Helpful?PreviousTickDataProviderNextOverviewTable of contentsPropertiesPropertiesdataownerDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
101,p.org sdk v2 reference fractions#price,"p.org sdk v2 reference fractions#price.    Fractions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKOverviewGuidesSDK Quick startFetching DataPricingTradingPair AddressesTechnical ReferenceGetting StartedTokenPairRouteTradeFractionsFetcherOther ExportsV1 SDKüè†V2 SDKTechnical ReferenceFractionsHelpful?On this pageFractionconstructor(numerator: BigintIsh, denominator: BigintIsh = ONE)CopyThe base class which all subsequent fraction classes extend. Not meant to be used directly.Properties‚Äãnumerator‚Äãnumerator: JSBICopydenominator‚Äãdenominator: JSBICopyquotient‚Äãquotient: JSBICopyPerforms floor division.Methods‚Äãinvert‚Äãinvert(): FractionCopyadd‚Äãadd(other: Fraction | BigintIsh): FractionCopysubtract‚Äãsubtract(other: Fraction | BigintIsh): FractionCopymultiply‚Äãmultiply(other: Fraction | BigintIsh): FractionCopydivide‚Äãdivide(other: Fraction | BigintIsh): FractionCopytoSignificant‚ÄãtoSignificant( significantDigits: number, format: object = { groupSeparator: '' }, rounding: Rounding = Rounding.ROUND_HALF_UP): stringCopyFormats a fraction to the specified number of significant digits.For format options, see toFormat.toFixed‚ÄãtoFixed( decimalPlaces: number, format: object = { groupSeparator: '' }, rounding: Rounding = Rounding.ROUND_HALF_UP): stringCopyFormats a fraction to the specified number of decimal places.For format options, see toFormat.PercentResponsible for formatting percentages (10% instead of 0.1).Example‚Äãimport { Percent } from '@uniswap/sdk'const percent = new Percent('60', '100')console.log(percent.toSignificant(2)) // 60CopytoSignificant‚ÄãSee toSignificant.toFixed‚ÄãSee toFixed.TokenAmountconstructor(token: Token, amount: BigintIsh)CopyResponsible for formatting token amounts with specific decimal places.Example‚Äãimport { Token, TokenAmount } from '@uniswap/sdk'const FRIED = new Token(ChainId.MAINNET, '0xfa1aFe1000000000000000000000000000000000', 18, 'FRIED', 'Beans')const tokenAmount = new TokenAmount(FRIED, '3000000000000000000')console.log(tokenAmount.toExact()) // 3CopyProperties‚Äãtoken‚Äãtoken: TokenCopyraw‚Äãraw: JSBICopyReturns the full token amount, unadjusted for decimals.Methods‚Äãadd‚Äãadd(other: TokenAmount): TokenAmountCopysubtract‚Äãsubtract(other: TokenAmount): TokenAmountCopytoSignificant‚ÄãSee toSignificant.toFixed‚ÄãSee toFixed.toExact‚ÄãtoExact(format: object = { groupSeparator: '' }): stringCopyPriceconstructor(baseToken: Token, quoteToken: Token, denominator: BigintIsh, numerator: BigintIsh)CopyResponsible for denominating the relative price between two tokens. Denominator and numerator must be unadjusted for decimals.Example‚Äãimport { ChainId, WETH as WETHs, Token, Price } from '@uniswap/sdk'const WETH = WETHs[ChainId.MAINNET]const ABC = new Token(ChainId.MAINNET, '0xabc0000000000000000000000000000000000000', 18, 'ABC')const price = new Price(WETH, ABC, '1000000000000000000', '123000000000000000000')console.log(price.toSignificant(3)) // 123CopyThis example shows the¬†ETH/XYZ price, where ETH is the base token, and XYZ is the quote token. The price is constructed from an amount of XYZ (the numerator) / an amount of WETH (the denominator).Static Methods‚ÄãfromRoute‚ÄãfromRoute(route: Route): PriceCopyProperties‚ÄãbaseToken‚ÄãbaseToken: TokenCopyquoteToken‚ÄãquoteToken: TokenCopyscalar‚Äãscalar: FractionCopyUsed to adjust the price for the decimals of the base and quote tokens.raw‚Äãraw: FractionCopyReturns the raw price, unadjusted for decimals.adjusted‚Äãadjusted: FractionCopyReturns the price, adjusted for decimals.Methods‚Äãinvert‚Äãinvert(): PriceCopymultiply‚Äãmultiply(other: Price): PriceCopyquote‚Äãquote(tokenAmount: TokenAmount): TokenAmountCopyGiven an asset amount, returns an equivalent value of the other asset, according to the current price.toSignificant‚ÄãSee toSignificant.toFixed‚ÄãSee toFixed.Helpful?PreviousTradeNextFetcherPropertiesnumeratordenominatorquotientMethodsinvertaddsubtractmultiplydividetoSignificanttoFixedExampletoSignificanttoFixedExamplePropertiestokenrawMethodsaddsubtracttoSignificanttoFixedtoExactExampleStatic MethodsfromRoutePropertiesbaseTokenquoteTokenscalarrawadjustedMethodsinvertmultiplyquotetoSignificanttoFixedDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
102,p.org sdk v3 guides liquidity modifying position,"p.org sdk v3 guides liquidity modifying position.    Adding & Removing Liquidity | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityMinting a PositionAdding & Removing LiquidityCollecting FeesSwapping and Adding LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKGuidesPooling LiquidityAdding & Removing LiquidityHelpful?On this pageAdding & Removing LiquidityIntroduction‚ÄãThis guide will cover how to modify a liquidity position by adding or removing liquidity on the Uniswap V3 protocol. It is based on the modifying a position code example, found in the Uniswap code examples repository. To run this example, check out the examples's README and follow the setup instructions.infoIf you need a briefer on the SDK and to learn more about how these guides connect to the examples repository, please visit our background page!In the Uniswap V3 protocol, liquidity positions are represented using non-fungible tokens. In this guide we will use the NonfungiblePositionManager class to help us mint a liquidity position and then modify the provided liquidity for the USDC - DAI pair. The inputs to our guide are the two tokens that we are pooling for, the amount of each token we are pooling for, the Pool fee and the fraction by which to add and remove from our position.The guide will cover:Adding liquidity to our positionRemoving liquidity from our positionAt the end of the guide, given the inputs above, we should be able to add or remove liquidity from a minted position with the press of a button and see the change reflected in our position and the balance of our tokens.For this guide, the following Uniswap packages are used:@uniswap/v3-sdk@uniswap/sdk-coreThe core code of this guide can be found in addLiquidity() and removeLiquidity()noteThis guide assumes you are familiar with our Minting a Position guide. A minted position is required to add or remove liquidity from, so the buttons will be disabled until a position is minted.Also note that we do not need to give approval to the NonfungiblePositionManager to transfer our tokens as we will have already done that when minting our position.Adding liquidity to our position‚ÄãAssuming we have already minted a position, our first step is to construct the modified position using our original position to calculate the amount by which we want to increase our current position:Creating the Positionloading...CopyView on GithubThe function receives two arguments, which are the CurrencyAmounts that are used to construct the Position instance. In this example, both of the arguments follow the same logic: we multiply the parameterized tokenAmount by the parameterized fractionToAdd since the new liquidity position will be added on top of the already minted liquidity position.We then need to construct an options object of type AddLiquidityOptions similar to how we did in the minting case. In this case, we will use IncreaseOptions:Constructing the options objectloading...CopyView on GithubCompared to minting, we have we have omitted the recipient parameter and instead passed in the tokenId of the position we previously minted.The newly created position along with the options object are then passed to the NonfungiblePositionManager's addCallParameters:Passing the position and options object to addCallParametersloading...CopyView on GithubThe return values of addCallParameters are the calldata and value of the transaction we need to submit to increase our position's liquidity. We can now build and execute the transaction:Building and submitting the transactionloading...CopyView on GithubAfter pressing the button, note how the balance of USDC and DAI drops and our position's liquidity increases.Removing liquidity from our position‚ÄãThe removeLiquidity function is the mirror action of adding liquidity and will be somewhat similar as a result, requiring a position to already be minted.To start, we create a position identical to the one we minted:Creating an identical position as mintingloading...CopyView on GithubWe then need to construct an options object of type RemoveLiquidityOptions:Constructing the options objectloading...CopyView on GithubJust as with adding liquidity, we have we have omitted the recipient parameter and instead passed in the tokenId of the position we previously minted.We have also provide two additional parameters:liquidityPercentage determines how much liquidity is removed from our initial position (as a Percentage), and transfers the removed liquidity back to our address. We set this percentage from our guide configuration ranging from 0 (0%) to 1 (100%).collectOptions gives us the option to collect the fees, if any, that we have accrued for this position. In this example, we won't collect any fees, so we provide zero values. If you'd like to see how to collect fees without modifying your position, check out our collecting fees guide!Constructing the collect options objectloading...CopyView on GithubThe position object along with the options object is passed to the NonfungiblePositionManager's removeCallParameters, similar to how we did in the adding liquidity case:Getting the calldata and value for the transactionloading...CopyView on GithubThe return values removeCallParameters are the calldata and value that are needed to construct the transaction to remove liquidity from our position. We can build the transaction and send it for execution:Building and submitting the transactionloading...CopyView on GithubAfter pressing the button, note how the balance of USDC and DAI increases and our position's liquidity drops.Next Steps‚ÄãNow that you can mint and modify a position, check out how to collect fees from the position!Helpful?PreviousMinting a PositionNextCollecting FeesIntroductionAdding liquidity to our positionRemoving liquidity from our positionNext StepsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
103,p.org contracts v1 guides iframe integration,"p.org contracts v1 guides iframe integration.    Iframe Integration | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 ProtocolOverviewGuidesConnect to UniswapPool LiquidityTrade TokensCustom LinkingIframe IntegrationToken ListingTechnical ReferenceFactoryExchangeInterfacesüè†V1 ProtocolGuidesIframe IntegrationHelpful?Iframe IntegrationUniswap can be used within other sites as an iframe. An iframe shows an exact version of the app.uniswap.org site and can have custom prefilled settings.Why You May Want ThisIntegrating the Uniswap site directly into your web application can be useful for a variety of reasons.v1.app.uniswap.org allows users to buy, sell, send, or provide liquidity for ERC20 tokens. An iframe integration may be useful if your application provides services around these ERC20 tokens. (For example, users can buy DAI through a Uniswap iframe on your site, then allow users to lend that DAI on your site).It can also be useful if your application requires users to acquire some token in order to use some service (For example, allow users to buy ""REP"" token so they can engage in prediction markets on the Augur Dapp).iframe vs. custom UIOne benefit of an iframe integration is that the your site will automatically keep up with any improvements/additions to the v1.app.uniswap.org site. After the initital integration is setup no further work is needed to pull in updates as the exchange site is updated over time.Live ExampleAn example of an Iframe integration can be found on the FOAM site https://map.foam.space/To see the Iframe click the dropdown in the top right and click ""get foam"".Add To Your SiteTo include a Uniswap iframe within your site just add an iframe element within your website code and link to the Uniswap exchange.Linking to a ETH <-> DAI swap page would look something like this. To link to a token of your choice replace the address after ""outputCurrency"" with the token address of the token you want to link to.<iframe src=""https://app.uniswap.org/#/swap?use=v1?outputCurrency=0x89d24a6b4ccb1b6faa2625fe562bdd9a23260359"" height=""660px"" width=""100%"" style="" border: 0; margin: 0 auto; display: block; border-radius: 10px; max-width: 600px; min-width: 300px; "" id=""myId""/>CopyYou can customize the selected page, selected custom tokens and more using URL query parameters. See Custom Linking.Edit this pageHelpful?PreviousCustom LinkingNextToken ListingDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
104,p.org sdk core reference classes CurrencyAmount,"p.org sdk core reference classes CurrencyAmount.    CurrencyAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesCurrencyAmountHelpful?On this pageCurrencyAmount@uniswap/sdk-core / Exports / CurrencyAmountClass: CurrencyAmount<T>Type parameters‚ÄãNameTypeTextends CurrencyHierarchy‚ÄãFraction‚Ü≥ CurrencyAmountTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãcurrencydecimalScaledenominatornumeratorAccessors‚ÄãasFractionquotientremainderwrappedMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new CurrencyAmount<T>(currency, numerator, denominator?)Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypecurrencyTnumeratorBigintIshdenominator?BigintIshOverrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/currencyAmount.ts:40Properties‚Äãcurrency‚Äã‚Ä¢ Readonly currency: TDefined in‚Äãentities/fractions/currencyAmount.ts:14decimalScale‚Äã‚Ä¢ Readonly decimalScale: defaultDefined in‚Äãentities/fractions/currencyAmount.ts:15denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47wrapped‚Äã‚Ä¢ get wrapped(): CurrencyAmount<Token>Returns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/fractions/currencyAmount.ts:91Methods‚Äãadd‚Äã‚ñ∏ add(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.addDefined in‚Äãentities/fractions/currencyAmount.ts:47divide‚Äã‚ñ∏ divide(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/currencyAmount.ts:64equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/currencyAmount.ts:59subtract‚Äã‚ñ∏ subtract(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/currencyAmount.ts:53toExact‚Äã‚ñ∏ toExact(format?): stringParameters‚ÄãNameTypeformatobjectReturns‚ÄãstringDefined in‚Äãentities/fractions/currencyAmount.ts:86toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformat?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/currencyAmount.ts:77toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/currencyAmount.ts:69fromFractionalAmount‚Äã‚ñ∏ Static fromFractionalAmount<T>(currency, numerator, denominator): CurrencyAmount<T>Construct a currency amount with a denominator that is not equal to 1Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currencynumeratorBigintIshthe numerator of the fractional token amountdenominatorBigintIshthe denominator of the fractional token amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:32fromRawAmount‚Äã‚ñ∏ Static fromRawAmount<T>(currency, rawAmount): CurrencyAmount<T>Returns a new currency amount instance from the unitless amount of token, i.e. the raw amountType parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currency in the amountrawAmountBigintIshthe raw token or ether amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:22Helpful?PreviousOverviewNextEtherType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiescurrencydecimalScaledenominatornumeratorAccessorsasFractionquotientremainderwrappedMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
105,p.org sdk v3 guides routing,"p.org sdk v3 guides routing.    Routing a Swap | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKGuidesRouting a SwapHelpful?On this pageRouting a SwapIntroduction‚ÄãThis guide will cover how to use Uniswap's smart order router to compute optimal routes and execute swaps. Rather than trading between a single pool, smart routing may use multiple hops (as many as needed) to ensure that the end result of the swap is the optimal price. It is based on the routing code example, found in the Uniswap code examples repository. To run this example, check out the guide's README and follow the setup instructions.infoIf you need a briefer on the SDK and to learn more about how these guides connect to the examples repository, please visit our background page!In this example we will trade between WETH and USDC, but you can configure your example to us any two currencies and amount of input currency.The guide will cover:Creating a router instanceCreating a routeSwapping using a routeAt the end of the guide, we should be able to create a route and and execute a swap between any two currencies tokens using the example's included UI.For this guide, the following Uniswap packages are used:@uniswap/v3-sdk@uniswap/sdk-core@uniswap/smart-order-routerThe core code of this guide can be found in routing.tsCreating a router instance‚ÄãTo compute our route, we will use the @uniswap/smart-order-router package, specifically the AlphaRouter class which requires a chainId and a provider. Note that routing is not supported for local forks, so we will use a mainnet provider even when swapping on a local fork:Instantiating an AlphaRouterloading...CopyView on GithubCreating a route‚ÄãNext, we will create our options conforming to the SwapOptionsSwapRouter02 interface, defining the wallet to use, slippage tolerance, and deadline for the transaction:Routing Optionsloading...CopyView on GithubUsing these options, we can now create a trade (TradeType.EXACT_INPUT or TradeType.EXACT_OUTPUT) with the currency and the input amount to use to get a quote. For this example, we'll use an EXACT_INPUT trade to get a quote outputted in the quote currency.Creating a routeloading...CopyView on GithubSwapping using a route‚ÄãFirst, we need to give approval to the SwapRouter smart contract to spend our tokens for us:Approving SwapRouter to spend our tokensloading...CopyView on GithubOnce the approval has been granted and using the route, we can now execute the trade using the route's computed calldata, values, and gas values:Using a routeloading...CopyView on GithubAfter swapping, you should see the currency balances update in the UI shortly after the block is confirmed.Next Steps‚ÄãNow that you're familiar with trading, consider checking out our next guides on pooling liquidity to Uniswap!Helpful?PreviousExecuting a TradeNextMinting a PositionIntroductionCreating a router instanceCreating a routeSwapping using a routeNext StepsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
106,p.org sdk v3 reference classes Multicall#constructor,p.org sdk v3 reference classes Multicall#constructor.    Multicall | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesMulticallHelpful?On this pageMulticall@uniswap/v3-sdk / Exports / MulticallClass: MulticallTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãencodeMulticallConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Multicall()Cannot be constructed.Defined in‚Äãmulticall.ts:10Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚Äãmulticall.ts:5Methods‚ÄãencodeMulticall‚Äã‚ñ∏ Static encodeMulticall(calldatas): stringParameters‚ÄãNameTypecalldatasstring | string[]Returns‚ÄãstringDefined in‚Äãmulticall.ts:12Helpful?PreviousLiquidityMathNextNoTickDataProviderTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsencodeMulticallDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
107,p.org contracts v2 reference smart contracts pair#swap 1,"p.org contracts v2 reference smart contracts pair#swap 1.    Pair | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsPairHelpful?On this pagePairThis documentation covers Uniswap-specific functionality. For ERC-20 functionality, see Pair (ERC-20).CodeUniswapV2Pair.solAddressSee Pair Addresses.EventsMint‚Äãevent Mint(address indexed sender, uint amount0, uint amount1);CopyEmitted each time liquidity tokens are created via mint.Burn‚Äãevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);CopyEmitted each time liquidity tokens are destroyed via burn.Swap‚Äãevent Swap( address indexed sender, uint amount0In, uint amount1In, uint amount0Out, uint amount1Out, address indexed to);CopyEmitted each time a swap occurs via swap.Sync‚Äãevent Sync(uint112 reserve0, uint112 reserve1);CopyEmitted each time reserves are updated via mint, burn, swap, or sync.Read-Only FunctionsMINIMUM_LIQUIDITY‚Äãfunction MINIMUM_LIQUIDITY() external pure returns (uint);CopyReturns 1000 for all pairs. See Minimum Liquidity.factory‚Äãfunction factory() external view returns (address);CopyReturns the factory address.token0‚Äãfunction token0() external view returns (address);CopyReturns the address of the pair token with the lower sort order.token1‚Äãfunction token1() external view returns (address);CopyReturns the address of the pair token with the higher sort order.getReserves‚Äãfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);CopyReturns the reserves of token0 and token1 used to price trades and distribute liquidity. See Pricing. Also returns the block.timestamp (mod 2**32) of the last block during which an interaction occured for the pair.price0CumulativeLast‚Äãfunction price0CumulativeLast() external view returns (uint);CopySee Oracles.price1CumulativeLast‚Äãfunction price1CumulativeLast() external view returns (uint);CopySee Oracles.kLast‚Äãfunction kLast() external view returns (uint);CopyReturns the product of the reserves as of the most recent liquidity event. See Protocol Charge Calculation.State-Changing Functionsmint‚Äãfunction mint(address to) external returns (uint liquidity);CopyCreates pool tokens.Emits Mint, Sync, Transfer.burn‚Äãfunction burn(address to) external returns (uint amount0, uint amount1);CopyDestroys pool tokens.Emits Burn, Sync, Transfer.swap‚Äãfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;CopySwaps tokens. For regular swaps, data.length must be 0. Also see Flash Swaps.Emits Swap, Sync.skim‚Äãfunction skim(address to) external;CopySee the whitepaper.sync‚Äãfunction sync() external;CopySee the whitepaper.Emits Sync.Interfaceimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol';Copypragma solidity >=0.5.0;interface IUniswapV2Pair { event Approval(address indexed owner, address indexed spender, uint value); event Transfer(address indexed from, address indexed to, uint value); function name() external pure returns (string memory); function symbol() external pure returns (string memory); function decimals() external pure returns (uint8); function totalSupply() external view returns (uint); function balanceOf(address owner) external view returns (uint); function allowance(address owner, address spender) external view returns (uint); function approve(address spender, uint value) external returns (bool); function transfer(address to, uint value) external returns (bool); function transferFrom(address from, address to, uint value) external returns (bool); function DOMAIN_SEPARATOR() external view returns (bytes32); function PERMIT_TYPEHASH() external pure returns (bytes32); function nonces(address owner) external view returns (uint); function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external; event Mint(address indexed sender, uint amount0, uint amount1); event Burn(address indexed sender, uint amount0, uint amount1, address indexed to); event Swap(  address indexed sender,  uint amount0In,  uint amount1In,  uint amount0Out,  uint amount1Out,  address indexed to ); event Sync(uint112 reserve0, uint112 reserve1); function MINIMUM_LIQUIDITY() external pure returns (uint); function factory() external view returns (address); function token0() external view returns (address); function token1() external view returns (address); function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast); function price0CumulativeLast() external view returns (uint); function price1CumulativeLast() external view returns (uint); function kLast() external view returns (uint); function mint(address to) external returns (uint liquidity); function burn(address to) external returns (uint amount0, uint amount1); function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external; function skim(address to) external; function sync() external;}CopyABIimport IUniswapV2Pair from '@uniswap/v2-core/build/IUniswapV2Pair.json'Copyhttps://unpkg.com/@uniswap/v2-core@1.0.0/build/IUniswapV2Pair.jsonEdit this pageHelpful?PreviousFactoryNextPair (ERC-20)MintBurnSwapSyncMINIMUM_LIQUIDITYfactorytoken0token1getReservesprice0CumulativeLastprice1CumulativeLastkLastmintburnswapskimsyncDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
108,p.org sdk v3 reference classes NoTickDataProvider#error message,"p.org sdk v3 reference classes NoTickDataProvider#error message.    NoTickDataProvider | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesNoTickDataProviderHelpful?On this pageNoTickDataProvider@uniswap/v3-sdk / Exports / NoTickDataProviderClass: NoTickDataProviderThis tick data provider does not know how to fetch any tick data. It throws whenever it is required. Useful if you do not need to load tick data for your use case.Implements‚ÄãTickDataProviderTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãERROR_MESSAGEMethods‚ÄãgetTicknextInitializedTickWithinOneWordConstructors‚Äãconstructor‚Äã‚Ä¢ new NoTickDataProvider()Properties‚ÄãERROR_MESSAGE‚Äã‚ñ™ Static Private ERROR_MESSAGE: string = 'No tick data provider was given'Defined in‚Äãentities/tickDataProvider.ts:27Methods‚ÄãgetTick‚Äã‚ñ∏ getTick(_tick): Promise<{ liquidityNet: BigintIsh }>Return information corresponding to a specific tickParameters‚ÄãNameTypeDescription_ticknumberthe tick to loadReturns‚ÄãPromise<{ liquidityNet: BigintIsh }>Implementation of‚ÄãTickDataProvider.getTickDefined in‚Äãentities/tickDataProvider.ts:28nextInitializedTickWithinOneWord‚Äã‚ñ∏ nextInitializedTickWithinOneWord(_tick, _lte, _tickSpacing): Promise<[number, boolean]>Return the next tick that is initialized within a single wordParameters‚ÄãNameTypeDescription_ticknumberThe current tick_ltebooleanWhether the next tick should be lte the current tick_tickSpacingnumberThe tick spacing of the poolReturns‚ÄãPromise<[number, boolean]>Implementation of‚ÄãTickDataProvider.nextInitializedTickWithinOneWordDefined in‚Äãentities/tickDataProvider.ts:32Helpful?PreviousMulticallNextNonfungiblePositionManagerImplementsTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesERROR_MESSAGEMethodsgetTicknextInitializedTickWithinOneWordDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
109,p.org contracts v2 concepts protocol overview glossary#constant product formula,"p.org contracts v2 concepts protocol overview glossary#constant product formula.    Glossary | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewHow Uniswap worksEcosystem ParticipantsSmart contractsGlossaryCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolConceptsProtocol OverviewGlossaryHelpful?On this pageGlossaryAutomated market maker‚ÄãAn automated market maker is a smart contract on Ethereum that holds on-chain liquidity reserves. Users can trade against these reserves at prices set by an automated market making formula.Constant product formula‚ÄãThe automated market making algorithm used by Uniswap. See x*y=k.ERC20‚ÄãERC20 tokens are fungible tokens on Ethereum. Uniswap supports all standard ERC20 implementations.Factory‚ÄãA smart contract that deploys a unique smart contract for any ERC20/ERC20 trading pair.Pair‚ÄãA smart contract deployed from the Uniswap V2 Factory that enables trading between two ERC20 tokens.Pool‚ÄãLiquidity within a pair is pooled across all liquidity providers.Liquidity provider / LP‚ÄãA liquidity provider is someone who deposits an equivalent value of two ERC20 tokens into the liquidity pool within a pair. Liquidity providers take on price risk and are compensated with fees.Mid price‚ÄãThe price between what users can buy and sell tokens at a given moment. In Uniswap this is the ratio of the two ERC20 token reserves.Price impact‚ÄãThe difference between the mid-price and the execution price of a trade.Slippage‚ÄãThe amount the price moves in a trading pair between when a transaction is submitted and when it is executed.Core‚ÄãSmart contracts that are essential for Uniswap to exist. Upgrading to a new version of core would require a liquidity migration.Periphery‚ÄãExternal smart contracts that are useful, but not required for Uniswap to exist. New periphery contracts can always be deployed without migrating liquidity.Flash swap‚ÄãA trade that uses the tokens being purchased before paying for them.x * y = k‚ÄãThe constant product formula.Invariant‚ÄãThe ""k"" value in the constant product formulaEdit this pageHelpful?PreviousSmart contractsNextSwapsAutomated market makerConstant product formulaERC20FactoryPairPoolLiquidity provider / LPMid pricePrice impactSlippageCorePeripheryFlash swapx * y = kInvariantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
110,p.org sdk v3 reference classes SqrtPriceMath#getnextsqrtpricefrominput,"p.org sdk v3 reference classes SqrtPriceMath#getnextsqrtpricefrominput.    SqrtPriceMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesSqrtPriceMathHelpful?On this pageSqrtPriceMath@uniswap/v3-sdk / Exports / SqrtPriceMathClass: SqrtPriceMathTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãgetAmount0DeltagetAmount1DeltagetNextSqrtPriceFromAmount0RoundingUpgetNextSqrtPriceFromAmount1RoundingDowngetNextSqrtPriceFromInputgetNextSqrtPriceFromOutputConstructors‚Äãconstructor‚Äã‚Ä¢ Private new SqrtPriceMath()Cannot be constructed.Defined in‚Äãutils/sqrtPriceMath.ts:23Methods‚ÄãgetAmount0Delta‚Äã‚ñ∏ Static getAmount0Delta(sqrtRatioAX96, sqrtRatioBX96, liquidity, roundUp): defaultParameters‚ÄãNameTypesqrtRatioAX96defaultsqrtRatioBX96defaultliquiditydefaultroundUpbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:25getAmount1Delta‚Äã‚ñ∏ Static getAmount1Delta(sqrtRatioAX96, sqrtRatioBX96, liquidity, roundUp): defaultParameters‚ÄãNameTypesqrtRatioAX96defaultsqrtRatioBX96defaultliquiditydefaultroundUpbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:38getNextSqrtPriceFromAmount0RoundingUp‚Äã‚ñ∏ Static Private getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96, liquidity, amount, add): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountdefaultaddbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:71getNextSqrtPriceFromAmount1RoundingDown‚Äã‚ñ∏ Static Private getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96, liquidity, amount, add): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountdefaultaddbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:100getNextSqrtPriceFromInput‚Äã‚ñ∏ Static getNextSqrtPriceFromInput(sqrtPX96, liquidity, amountIn, zeroForOne): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountIndefaultzeroForOnebooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:48getNextSqrtPriceFromOutput‚Äã‚ñ∏ Static getNextSqrtPriceFromOutput(sqrtPX96, liquidity, amountOut, zeroForOne): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountOutdefaultzeroForOnebooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:57Helpful?PreviousSelfPermitNextStakerTable of contentsConstructorsMethodsConstructorsconstructorMethodsgetAmount0DeltagetAmount1DeltagetNextSqrtPriceFromAmount0RoundingUpgetNextSqrtPriceFromAmount1RoundingDowngetNextSqrtPriceFromInputgetNextSqrtPriceFromOutputDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
111,p.org sdk v3 reference classes Pool#sqrtratiox96,"p.org sdk v3 reference classes Pool#sqrtratiox96.    Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPoolHelpful?On this pagePool@uniswap/v3-sdk / Exports / PoolClass: PoolRepresents a V3 poolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1Accessors‚ÄãchainIdtickSpacingtoken0Pricetoken1PriceMethods‚ÄãgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressConstructors‚Äãconstructor‚Äã‚Ä¢ new Pool(tokenA, tokenB, fee, sqrtRatioX96, liquidity, tickCurrent, ticks?)Construct a poolParameters‚ÄãNameTypeDefault valueDescriptiontokenATokenundefinedOne of the tokens in the pooltokenBTokenundefinedThe other token in the poolfeeFeeAmountundefinedThe fee in hundredths of a bips of the input amount of every swap that is collected by the poolsqrtRatioX96BigintIshundefinedThe sqrt of the current ratio of amounts of token1 to token0liquidityBigintIshundefinedThe current value of in range liquiditytickCurrentnumberundefinedThe current tick of the poolticksTickDataProvider | (Tick | TickConstructorArgs)[]NO_TICK_DATA_PROVIDER_DEFAULTThe current state of the pool ticks or a data provider that can return tick dataDefined in‚Äãentities/pool.ts:70Properties‚Äã_token0Price‚Äã‚Ä¢ Private Optional _token0Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:41_token1Price‚Äã‚Ä¢ Private Optional _token1Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:42fee‚Äã‚Ä¢ Readonly fee: FeeAmountDefined in‚Äãentities/pool.ts:35liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/pool.ts:37sqrtRatioX96‚Äã‚Ä¢ Readonly sqrtRatioX96: defaultDefined in‚Äãentities/pool.ts:36tickCurrent‚Äã‚Ä¢ Readonly tickCurrent: numberDefined in‚Äãentities/pool.ts:38tickDataProvider‚Äã‚Ä¢ Readonly tickDataProvider: TickDataProviderDefined in‚Äãentities/pool.ts:39token0‚Äã‚Ä¢ Readonly token0: TokenDefined in‚Äãentities/pool.ts:33token1‚Äã‚Ä¢ Readonly token1: TokenDefined in‚Äãentities/pool.ts:34Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns the chain ID of the tokens in the pool.Returns‚ÄãnumberDefined in‚Äãentities/pool.ts:149tickSpacing‚Äã‚Ä¢ get tickSpacing(): numberReturns‚ÄãnumberDefined in‚Äãentities/pool.ts:317token0Price‚Äã‚Ä¢ get token0Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:109token1Price‚Äã‚Ä¢ get token1Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:124Methods‚ÄãgetInputAmount‚Äã‚ñ∏ getInputAmount(outputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given a desired output amount of a token, return the computed input amount and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptionoutputAmountCurrencyAmount<Token>the output amount for which to quote the input amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The input amount and the pool with updated stateDefined in‚Äãentities/pool.ts:185getOutputAmount‚Äã‚ñ∏ getOutputAmount(inputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given an input amount of a token, return the computed output amount, and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptioninputAmountCurrencyAmount<Token>The input amount for which to quote the output amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limitReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The output amount and the pool with updated stateDefined in‚Äãentities/pool.ts:159involvesToken‚Äã‚ñ∏ involvesToken(token): booleanReturns true if the token is either token0 or token1Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to checkReturns‚ÄãbooleanTrue if token is either token0 or tokenDefined in‚Äãentities/pool.ts:102priceOf‚Äã‚ñ∏ priceOf(token): Price<Token, Token>Return the price of the given token in terms of the other token in the pool.Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to return price ofReturns‚ÄãPrice<Token, Token>The price of the given token, in terms of the other.Defined in‚Äãentities/pool.ts:141swap‚Äã‚ñ∏ Private swap(zeroForOne, amountSpecified, sqrtPriceLimitX96?): Promise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>Executes a swapParameters‚ÄãNameTypeDescriptionzeroForOnebooleanWhether the amount in is token0 or token1amountSpecifieddefaultThe amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>amountCalculatedsqrtRatioX96liquiditytickCurrentDefined in‚Äãentities/pool.ts:215getAddress‚Äã‚ñ∏ Static getAddress(tokenA, tokenB, fee, initCodeHashManualOverride?, factoryAddressOverride?): stringParameters‚ÄãNameTypetokenATokentokenBTokenfeeFeeAmountinitCodeHashManualOverride?stringfactoryAddressOverride?stringReturns‚ÄãstringDefined in‚Äãentities/pool.ts:44Helpful?PreviousPaymentsNextPositionTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1AccessorschainIdtickSpacingtoken0Pricetoken1PriceMethodsgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
112,p.org sdk v3 reference classes TickMath#min tick,"p.org sdk v3 reference classes TickMath#min tick.    TickMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickMathHelpful?On this pageTickMath@uniswap/v3-sdk / Exports / TickMathClass: TickMathTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãMAX_SQRT_RATIOMAX_TICKMIN_SQRT_RATIOMIN_TICKMethods‚ÄãgetSqrtRatioAtTickgetTickAtSqrtRatioConstructors‚Äãconstructor‚Äã‚Ä¢ Private new TickMath()Cannot be constructed.Defined in‚Äãutils/tickMath.ts:17Properties‚ÄãMAX_SQRT_RATIO‚Äã‚ñ™ Static MAX_SQRT_RATIO: defaultThe sqrt ratio corresponding to the maximum tick that could be used on any pool.Defined in‚Äãutils/tickMath.ts:35MAX_TICK‚Äã‚ñ™ Static MAX_TICK: number = -TickMath.MIN_TICKThe maximum tick that can be used on any pool.Defined in‚Äãutils/tickMath.ts:26MIN_SQRT_RATIO‚Äã‚ñ™ Static MIN_SQRT_RATIO: defaultThe sqrt ratio corresponding to the minimum tick that could be used on any pool.Defined in‚Äãutils/tickMath.ts:31MIN_TICK‚Äã‚ñ™ Static MIN_TICK: number = -887272The minimum tick that can be used on any pool.Defined in‚Äãutils/tickMath.ts:22Methods‚ÄãgetSqrtRatioAtTick‚Äã‚ñ∏ Static getSqrtRatioAtTick(tick): defaultReturns the sqrt ratio as a Q64.96 for the given tick. The sqrt ratio is computed as sqrt(1.0001)^tickParameters‚ÄãNameTypeDescriptionticknumberthe tick for which to compute the sqrt ratioReturns‚ÄãdefaultDefined in‚Äãutils/tickMath.ts:41getTickAtSqrtRatio‚Äã‚ñ∏ Static getTickAtSqrtRatio(sqrtRatioX96): numberReturns the tick corresponding to a given sqrt ratio, s.t. #getSqrtRatioAtTick(tick) <= sqrtRatioX96 and #getSqrtRatioAtTick(tick + 1) > sqrtRatioX96Parameters‚ÄãNameTypeDescriptionsqrtRatioX96defaultthe sqrt ratio as a Q64.96 for which to compute the tickReturns‚ÄãnumberDefined in‚Äãutils/tickMath.ts:82Helpful?PreviousTickListDataProviderNextTradeTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesMAX_SQRT_RATIOMAX_TICKMIN_SQRT_RATIOMIN_TICKMethodsgetSqrtRatioAtTickgetTickAtSqrtRatioDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
113,p.org contracts v2 reference smart contracts factory #feeto,"p.org contracts v2 reference smart contracts factory #feeto.    Factory | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsFactoryHelpful?On this pageFactoryCode‚ÄãUniswapV2Factory.solAddressUniswapV2Factory is deployed at 0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f on the Ethereum mainnet, and the Ropsten, Rinkeby, G√∂rli, and Kovan testnets. It was built from commit 8160750.EventsPairCreated‚Äãevent PairCreated(address indexed token0, address indexed token1, address pair, uint);CopyEmitted each time a pair is created via createPair.token0 is guaranteed to be strictly less than token1 by sort order.The final uint log value will be 1 for the first pair created, 2 for the second, etc. (see allPairs/getPair).Read-Only FunctionsgetPair‚Äãfunction getPair(address tokenA, address tokenB) external view returns (address pair);CopyReturns the address of the pair for tokenA and tokenB, if it has been created, else address(0) (0x0000000000000000000000000000000000000000).tokenA and tokenB are interchangeable.Pair addresses can also be calculated deterministically via the SDK.allPairs‚Äãfunction allPairs(uint) external view returns (address pair);CopyReturns the address of the nth pair (0-indexed) created through the factory, or address(0) (0x0000000000000000000000000000000000000000) if not enough pairs have been created yet.Pass 0 for the address of the first pair created, 1 for the second, etc.allPairsLength‚Äãfunction allPairsLength() external view returns (uint);CopyReturns the total number of pairs created through the factory so far.feeTo‚Äãfunction feeTo() external view returns (address);CopySee Protocol Charge Calculation.feeToSetter‚Äãfunction feeToSetter() external view returns (address);CopyThe address allowed to change feeTo.State-Changing FunctionscreatePair‚Äãfunction createPair(address tokenA, address tokenB) external returns (address pair);CopyCreates a pair for tokenA and tokenB if one doesn't exist already.tokenA and tokenB are interchangeable.Emits PairCreated.Interfaceimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol';Copypragma solidity >=0.5.0;interface IUniswapV2Factory { event PairCreated(address indexed token0, address indexed token1, address pair, uint); function getPair(address tokenA, address tokenB) external view returns (address pair); function allPairs(uint) external view returns (address pair); function allPairsLength() external view returns (uint); function feeTo() external view returns (address); function feeToSetter() external view returns (address); function createPair(address tokenA, address tokenB) external returns (address pair);}CopyABIimport IUniswapV2Factory from '@uniswap/v2-core/build/IUniswapV2Factory.json'Copyhttps://unpkg.com/@uniswap/v2-core@1.0.0/build/IUniswapV2Factory.jsonEdit this pageHelpful?PreviousGovernance ReferenceNextPairCodePairCreatedgetPairallPairsallPairsLengthfeeTofeeToSettercreatePairDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
114,p.org sdk v3 reference enums FeeAmount#medium,"p.org sdk v3 reference enums FeeAmount#medium.    FeeAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsFeeAmountinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceenumsFeeAmountHelpful?On this pageFeeAmount@uniswap/v3-sdk / Exports / FeeAmountEnumeration: FeeAmountThe default factory enabled fee amounts, denominated in hundredths of bips.Table of contents‚ÄãEnumeration Members‚ÄãHIGHLOWLOWESTMEDIUMEnumeration Members‚ÄãHIGH‚Äã‚Ä¢ HIGH = 10000Defined in‚Äãconstants.ts:14LOW‚Äã‚Ä¢ LOW = 500Defined in‚Äãconstants.ts:12LOWEST‚Äã‚Ä¢ LOWEST = 100Defined in‚Äãconstants.ts:11MEDIUM‚Äã‚Ä¢ MEDIUM = 3000Defined in‚Äãconstants.ts:13Helpful?PreviousTradeNextAllowedPermitArgumentsTable of contentsEnumeration MembersEnumeration MembersHIGHLOWLOWESTMEDIUMDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
115,p.org sdk v3 reference classes Payments#encoderefundeth,"p.org sdk v3 reference classes Payments#encoderefundeth.    Payments | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPaymentsHelpful?On this pagePayments@uniswap/v3-sdk / Exports / PaymentsClass: PaymentsTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãencodeFeeBipsencodeRefundETHencodeSweepTokenencodeUnwrapWETH9Constructors‚Äãconstructor‚Äã‚Ä¢ Private new Payments()Cannot be constructed.Defined in‚Äãpayments.ts:25Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚Äãpayments.ts:20Methods‚ÄãencodeFeeBips‚Äã‚ñ∏ Static Private encodeFeeBips(fee): stringParameters‚ÄãNameTypefeePercentReturns‚ÄãstringDefined in‚Äãpayments.ts:27encodeRefundETH‚Äã‚ñ∏ Static encodeRefundETH(): stringReturns‚ÄãstringDefined in‚Äãpayments.ts:73encodeSweepToken‚Äã‚ñ∏ Static encodeSweepToken(token, amountMinimum, recipient, feeOptions?): stringParameters‚ÄãNameTypetokenTokenamountMinimumdefaultrecipientstringfeeOptions?FeeOptionsReturns‚ÄãstringDefined in‚Äãpayments.ts:49encodeUnwrapWETH9‚Äã‚ñ∏ Static encodeUnwrapWETH9(amountMinimum, recipient, feeOptions?): stringParameters‚ÄãNameTypeamountMinimumdefaultrecipientstringfeeOptions?FeeOptionsReturns‚ÄãstringDefined in‚Äãpayments.ts:31Helpful?PreviousNonfungiblePositionManagerNextPoolTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsencodeFeeBipsencodeRefundETHencodeSweepTokenencodeUnwrapWETH9DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
116,p.org contracts v3 reference periphery interfaces IQuoter,"p.org contracts v3 reference periphery interfaces IQuoter.    IQuoter | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesIERC20MetadataIERC721PermitIMulticallINonfungiblePositionManagerINonfungibleTokenPositionDescriptorIPeripheryImmutableStateIPeripheryPaymentsIPeripheryPaymentsWithFeeIPoolInitializerIQuoterIQuoterV2ISelfPermitISwapRouterITickLensIV3MigratorexternalLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryInterfacesIQuoterHelpful?On this pageIQuoterSupports quoting the calculated amounts from exact input or exact output swapsThese functions are not marked view because they rely on calling non-view functions and reverting to compute the result. They are also not gas efficient and should not be called on-chain.Functions‚ÄãquoteExactInput‚Äã function quoteExactInput( bytes path, uint256 amountIn ) external returns (uint256 amountOut)CopyReturns the amount out received for a given exact input swap without executing the swapParameters:‚ÄãNameTypeDescriptionpathbytesThe path of the swap, i.e. each token pair and the pool feeamountInuint256The amount of the first token to swapReturn Values:‚ÄãNameTypeDescriptionamountOutuint256The amount of the last token that would be receivedquoteExactInputSingle‚Äã function quoteExactInputSingle( address tokenIn, address tokenOut, uint24 fee, uint256 amountIn, uint160 sqrtPriceLimitX96 ) external returns (uint256 amountOut)CopyReturns the amount out received for a given exact input but for a swap of a single poolParameters:‚ÄãNameTypeDescriptiontokenInaddressThe token being swapped intokenOutaddressThe token being swapped outfeeuint24The fee of the token pool to consider for the pairamountInuint256The desired input amountsqrtPriceLimitX96uint160The price limit of the pool that cannot be exceeded by the swapReturn Values:‚ÄãNameTypeDescriptionamountOutuint256The amount of tokenOut that would be receivedquoteExactOutput‚Äã function quoteExactOutput( bytes path, uint256 amountOut ) external returns (uint256 amountIn)CopyReturns the amount in required for a given exact output swap without executing the swapParameters:‚ÄãNameTypeDescriptionpathbytesThe path of the swap, i.e. each token pair and the pool feeamountOutuint256The amount of the last token to receiveReturn Values:‚ÄãNameTypeDescriptionamountInuint256The amount of first token required to be paidquoteExactOutputSingle‚Äã function quoteExactOutputSingle( address tokenIn, address tokenOut, uint24 fee, uint256 amountOut, uint160 sqrtPriceLimitX96 ) external returns (uint256 amountIn)CopyReturns the amount in required to receive the given exact output amount but for a swap of a single poolParameters:‚ÄãNameTypeDescriptiontokenInaddressThe token being swapped intokenOutaddressThe token being swapped outfeeuint24The fee of the token pool to consider for the pairamountOutuint256The desired output amountsqrtPriceLimitX96uint160The price limit of the pool that cannot be exceeded by the swapReturn Values:‚ÄãNameTypeDescriptionamountInuint256The amount required as the input for the swap in order to receive amountOutEdit this pageHelpful?PreviousIPoolInitializerNextIQuoterV2FunctionsquoteExactInputquoteExactInputSinglequoteExactOutputquoteExactOutputSingleDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
117,p.org sdk core reference classes Price#lessthan,"p.org sdk core reference classes Price#lessthan.    Price | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPriceHelpful?On this pagePrice@uniswap/sdk-core / Exports / PriceClass: Price<TBase, TQuote>Type parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyHierarchy‚ÄãFraction‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessors‚ÄãadjustedForDecimalsasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Price<TBase, TQuote>(...args)Construct a price, either with the base and quote currency amount, or theType parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyParameters‚ÄãNameType...args[TBase, TQuote, BigintIsh, BigintIsh] | [{ baseAmount: CurrencyAmount<TBase> ; quoteAmount: CurrencyAmount<TQuote> }]Overrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/price.ts:18Properties‚ÄãbaseCurrency‚Äã‚Ä¢ Readonly baseCurrency: TBaseDefined in‚Äãentities/fractions/price.ts:10denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25quoteCurrency‚Äã‚Ä¢ Readonly quoteCurrency: TQuoteDefined in‚Äãentities/fractions/price.ts:11scalar‚Äã‚Ä¢ Readonly scalar: FractionDefined in‚Äãentities/fractions/price.ts:12Accessors‚ÄãadjustedForDecimals‚Äã‚Ä¢ Private get adjustedForDecimals(): FractionGet the value scaled by decimals for formattingReturns‚ÄãFractionDefined in‚Äãentities/fractions/price.ts:77asFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.addDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.divideDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): Price<TQuote, TBase>Flip the price, switching the base and quote currencyReturns‚ÄãPrice<TQuote, TBase>Overrides‚ÄãFraction.invertDefined in‚Äãentities/fractions/price.ts:49lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply<TOtherQuote>(other): Price<TBase, TOtherQuote>Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currencyType parameters‚ÄãNameTypeTOtherQuoteextends CurrencyParameters‚ÄãNameTypeDescriptionotherPrice<TQuote, TOtherQuote>the other priceReturns‚ÄãPrice<TBase, TOtherQuote>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/price.ts:57quote‚Äã‚ñ∏ quote(currencyAmount): CurrencyAmount<TQuote>Return the amount of quote currency corresponding to a given amount of the base currencyParameters‚ÄãNameTypeDescriptioncurrencyAmountCurrencyAmount<TBase>the amount of base currency to quote against the priceReturns‚ÄãCurrencyAmount<TQuote>Defined in‚Äãentities/fractions/price.ts:67subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.subtractDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber4format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/price.ts:85toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/price.ts:81Helpful?PreviousPercentNextTokenType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessorsadjustedForDecimalsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
118,p.org contracts v2 guides interface integration iframe integration,"p.org contracts v2 guides interface integration iframe integration.    Iframe Integration | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationUsing the APICustom LinkingIframe IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolGuidesInterface IntegrationIframe IntegrationHelpful?Iframe IntegrationSwap WidgetThese docs are deprecated. Please refer to Swap Widget to embed the Uniswap swap widget as a React component in your website in 2 minutes.Uniswap can be used within other sites as an iframe. An iframe shows an exact version of the Uniswap frontend site and can have custom prefilled settings.Why You May Want ThisIntegrating the Uniswap site directly into your web application can be useful for a variety of reasons.The interface allows users to buy, sell, send, or provide liquidity for ERC20 tokens. An iframe integration may be useful if your application provides services around these ERC20 tokens. (For example, users can buy DAI through a Uniswap iframe on your site, then allow users to lend that DAI on your site).It can also be useful if your application requires users to acquire some token in order to use some service (For example, allow users to buy ""REP"" token so they can engage in prediction markets on the Augur Dapp).iframe vs. custom UIOne benefit of an iframe integration is that the your site will automatically keep up with any improvements/additions to the site. After the initital integration is setup no further work is needed to pull in updates as the exchange site is updated over time.Example<iframe src=""https://app.uniswap.org/#/swap?exactField=input&exactAmount=10&inputCurrency=0x6b175474e89094c44da98b954eedeac495271d0f"" height=""660px"" width=""100%"" style="" border: 0; margin: 0 auto; margin-bottom: .5rem; display: block; border-radius: 10px; max-width: 960px; min-width: 300px; ""/>CopyAn example of an Iframe integration can be found on the FOAM site https://map.foam.space/To see the iframe, click the dropdown in the top right and click Get FOAM.Add To Your SiteTo include a Uniswap iframe within your site just add an iframe element within your website code and link to the Uniswap frontent.Linking to a ETH <-> DAI swap page would look something like this. To link to a token of your choice replace the address after outputCurrency with the token address of the token you want to link to.<iframe src=""https://app.uniswap.org/#/swap?outputCurrency=0x89d24a6b4ccb1b6faa2625fe562bdd9a23260359"" height=""660px"" width=""100%"" style="" border: 0; margin: 0 auto; display: block; border-radius: 10px; max-width: 600px; min-width: 300px; ""/>CopyYou can customize the selected page, selected custom tokens and more using URL query parameters. See Custom Linking.Edit this pageHelpful?PreviousCustom LinkingNextSmart Contract Quick startDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
119,p.org sdk core reference classes Percent#ispercent,"p.org sdk core reference classes Percent#ispercent.    Percent | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPercentHelpful?On this pagePercent@uniswap/sdk-core / Exports / PercentClass: PercentHierarchy‚ÄãFraction‚Ü≥ PercentTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatorisPercentnumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Percent(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshInherited from‚ÄãFraction.constructorDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26isPercent‚Äã‚Ä¢ Readonly isPercent: trueThis boolean prevents a fraction from being interpreted as a PercentDefined in‚Äãentities/fractions/percent.ts:19numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.addDefined in‚Äãentities/fractions/percent.ts:21divide‚Äã‚ñ∏ divide(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/percent.ts:33equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/percent.ts:29subtract‚Äã‚ñ∏ subtract(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/percent.ts:25toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber2format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/percent.ts:41toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber5format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/percent.ts:37Helpful?PreviousNativeCurrencyNextPriceHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatorisPercentnumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
120,p.org contracts v3 reference periphery base Multicall,p.org contracts v3 reference periphery base Multicall.    Multicall | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseBlockTimestampERC721PermitLiquidityManagementMulticallPeripheryImmutableStatePeripheryPaymentsPeripheryPaymentsWithFeePoolInitializerSelfPermitInterfacesLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryBaseMulticallHelpful?On this pageMulticallEnables calling multiple methods in a single call to the contractFunctions‚Äãmulticall‚Äã function multicall( bytes[] data ) external payable override returns (bytes[] results)CopyCall multiple functions in the current contract and return the data from all of them if they all succeedThe msg.value should not be trusted for any method callable from multicall.Parameters:‚ÄãNameTypeDescriptiondatabytes[]The encoded function data for each of the calls to make to this contractReturn Values:‚ÄãNameTypeDescriptionresultsbytes[]The results from each of the calls passed in via dataEdit this pageHelpful?PreviousLiquidityManagementNextPeripheryImmutableStateFunctionsmulticallDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
121,p.org contracts v3 reference periphery lens TickLens,"p.org contracts v3 reference periphery lens TickLens.    TickLens | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensQuoterQuoterV2TickLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryLensTickLensHelpful?On this pageTickLensFunctions‚ÄãgetPopulatedTicksInWord‚Äã function getPopulatedTicksInWord( address pool, int16 tickBitmapIndex ) public returns (struct ITickLens.PopulatedTick[] populatedTicks)CopyGet all the tick data for the populated ticks from a word of the tick bitmap of a poolParameters:‚ÄãNameTypeDescriptionpooladdressThe address of the pool for which to fetch populated tick datatickBitmapIndexint16The index of the word in the tick bitmap for which to parse the bitmap and fetch all the populated ticksReturn Values:‚ÄãNameTypeDescriptionpopulatedTicksITickLens.PopulatedTick[]An array of tick data for the given word in the tick bitmapEdit this pageHelpful?PreviousQuoterV2NextBase64FunctionsgetPopulatedTicksInWordDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
122,p.org sdk v3 reference classes Position#token0pricelower,"p.org sdk v3 reference classes Position#token0pricelower.    Position | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPositionHelpful?On this pagePosition@uniswap/v3-sdk / Exports / PositionClass: PositionRepresents a position on a Uniswap V3 PoolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessors‚Äãamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethods‚ÄãburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsConstructors‚Äãconstructor‚Äã‚Ä¢ new Position(__namedParameters)Constructs a position for a given pool with the given liquidityParameters‚ÄãNameType__namedParametersPositionConstructorArgsDefined in‚Äãentities/position.ts:40Properties‚Äã_mintAmounts‚Äã‚Ä¢ Private _mintAmounts: null | Readonly<{ amount0: default ; amount1: default }> = nullDefined in‚Äãentities/position.ts:31_token0Amount‚Äã‚Ä¢ Private _token0Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:29_token1Amount‚Äã‚Ä¢ Private _token1Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:30liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/position.ts:26pool‚Äã‚Ä¢ Readonly pool: PoolDefined in‚Äãentities/position.ts:23tickLower‚Äã‚Ä¢ Readonly tickLower: numberDefined in‚Äãentities/position.ts:24tickUpper‚Äã‚Ä¢ Readonly tickUpper: numberDefined in‚Äãentities/position.ts:25Accessors‚Äãamount0‚Äã‚Ä¢ get amount0(): CurrencyAmount<Token>Returns the amount of token0 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:68amount1‚Äã‚Ä¢ get amount1(): CurrencyAmount<Token>Returns the amount of token1 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:100mintAmounts‚Äã‚Ä¢ get mintAmounts(): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at the current price for the poolReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>Defined in‚Äãentities/position.ts:258token0PriceLower‚Äã‚Ä¢ get token0PriceLower(): Price<Token, Token>Returns the price of token0 at the lower tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:54token0PriceUpper‚Äã‚Ä¢ get token0PriceUpper(): Price<Token, Token>Returns the price of token0 at the upper tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:61Methods‚ÄãburnAmountsWithSlippage‚Äã‚ñ∏ burnAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercenttolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:213mintAmountsWithSlippage‚Äã‚ñ∏ mintAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to safely mint the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentTolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:157ratiosAfterSlippage‚Äã‚ñ∏ Private ratiosAfterSlippage(slippageTolerance): ObjectReturns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentageParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe amount by which the price can 'slip' before the transaction will revertReturns‚ÄãObjectThe sqrt ratios after slippageNameTypesqrtRatioX96LowerdefaultsqrtRatioX96UpperdefaultDefined in‚Äãentities/position.ts:134fromAmount0‚Äã‚ñ∏ Static fromAmount0(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited amount of token1Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:354fromAmount1‚Äã‚ñ∏ Static fromAmount1(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited amount of token0Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumberReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:378fromAmounts‚Äã‚ñ∏ Static fromAmounts(__namedParameters): PositionComputes the maximum amount of liquidity received for a given amount of token0, token1, and the prices at the tick boundaries.Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe amount of liquidity for the positionDefined in‚Äãentities/position.ts:312Helpful?PreviousPoolNextPositionLibraryTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessorsamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethodsburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
123,p.org contracts v3 reference periphery libraries WeightedOracleLibrary,"p.org contracts v3 reference periphery libraries WeightedOracleLibrary.    WeightedOracleLibrary | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesBase64BytesLibCallbackValidationChainIdHexStringsLiquidityAmountsNFTDescriptorNFTSVGOracleLibraryPathPoolAddressPoolTicksCounterPositionKeyTokenRatioSortOrderTransferHelperWeightedOracleLibraryStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryLibrariesWeightedOracleLibraryHelpful?On this pageWeightedOracleLibraryProvides functions to integrate with different tier oracles of the same V3 pairFunctions‚Äãconsult‚Äã function consult( address pool, uint32 period ) internal view returns (struct WeightedOracleLibrary.PeriodObservation observation)CopyFetches a time-weighted observation for a given Uniswap V3 poolParameters:‚ÄãNameTypeDescriptionpooladdressAddress of the pool that we want to observeperioduint32Number of seconds in the past to start calculating the time-weighted observationReturn Values:‚ÄãNameTypeDescriptionobservationaddressAn observation that has been time-weighted from (block.timestamp - period) to block.timestampgetArithmeticMeanTickWeightedByLiquidity‚Äã function getArithmeticMeanTickWeightedByLiquidity( struct WeightedOracleLibrary.PeriodObservation[] observations ) internal pure returns (int24 arithmeticMeanWeightedTick)CopyGiven some time-weighted observations, calculates the arithmetic mean tick, weighted by liquidityIn most scenarios, each entry of observations should share the same period and underlying pool tokens. If period differs across observations, the result becomes difficult to interpret and is likely biased/manipulable. If the underlying pool tokens differ across observations, extreme care must be taken to ensure that both prices and liquidity values are comparable. Even if prices are commensurate (e.g. two different USD-stable assets against ETH), liquidity values may not be, as decimals can differ between tokens.Parameters:‚ÄãNameTypeDescriptionobservationsstruct WeightedOracleLibrary.PeriodObservation[]A list of time-weighted observationsReturn Values:‚ÄãNameTypeDescriptionarithmeticMeanWeightedTickstruct WeightedOracleLibrary.PeriodObservation[]The arithmetic mean tick, weighted by the observations' time-weighted harmonic average liquidityEdit this pageHelpful?PreviousTransferHelperNextUniswap V3 Staker DesignFunctionsconsultgetArithmeticMeanTickWeightedByLiquidityDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
124,p.org sdk core reference classes Token,"p.org sdk core reference classes Token.    Token | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesTokenHelpful?On this pageToken@uniswap/sdk-core / Exports / TokenClass: TokenRepresents an ERC20 token with a unique address and some metadata.Hierarchy‚ÄãBaseCurrency‚Ü≥ TokenTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãaddresschainIddecimalsisNativeisTokennamesymbolAccessors‚ÄãwrappedMethods‚ÄãequalssortsBeforeConstructors‚Äãconstructor‚Äã‚Ä¢ new Token(chainId, address, decimals, symbol?, name?, bypassChecksum?)Parameters‚ÄãNameTypeDescriptionchainIdnumberBaseCurrency#chainIdaddressstringThe contract address on the chain on which this token livesdecimalsnumberBaseCurrency#decimalssymbol?stringBaseCurrency#symbolname?stringBaseCurrency#namebypassChecksum?booleanIf true it only checks for length === 42, startsWith 0x and contains only hex charactersOverrides‚ÄãBaseCurrency.constructorDefined in‚Äãentities/token.ts:27Properties‚Äãaddress‚Äã‚Ä¢ Readonly address: stringThe contract address on the chain on which this token livesDefined in‚Äãentities/token.ts:16chainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãBaseCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãBaseCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: falseOverrides‚ÄãBaseCurrency.isNativeDefined in‚Äãentities/token.ts:10isToken‚Äã‚Ä¢ Readonly isToken: trueOverrides‚ÄãBaseCurrency.isTokenDefined in‚Äãentities/token.ts:11name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãBaseCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãBaseCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29Accessors‚Äãwrapped‚Äã‚Ä¢ get wrapped(): TokenReturn this token, which does not need to be wrappedReturns‚ÄãTokenOverrides‚ÄãBaseCurrency.wrappedDefined in‚Äãentities/token.ts:66Methods‚Äãequals‚Äã‚ñ∏ equals(other): booleanReturns true if the two tokens are equivalent, i.e. have the same chainId and address.Parameters‚ÄãNameTypeDescriptionotherCurrencyother token to compareReturns‚ÄãbooleanOverrides‚ÄãBaseCurrency.equalsDefined in‚Äãentities/token.ts:47sortsBefore‚Äã‚ñ∏ sortsBefore(other): booleanReturns true if the address of this token sorts before the address of the other tokenThrowsif the tokens have the same addressThrowsif the tokens are on different chainsParameters‚ÄãNameTypeDescriptionotherTokenother token to compareReturns‚ÄãbooleanDefined in‚Äãentities/token.ts:57Helpful?PreviousPriceNextRoundingHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesaddresschainIddecimalsisNativeisTokennamesymbolAccessorswrappedMethodsequalssortsBeforeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
125,p.org contracts v2 reference smart contracts pair#sync,"p.org contracts v2 reference smart contracts pair#sync.    Pair | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsPairHelpful?On this pagePairThis documentation covers Uniswap-specific functionality. For ERC-20 functionality, see Pair (ERC-20).CodeUniswapV2Pair.solAddressSee Pair Addresses.EventsMint‚Äãevent Mint(address indexed sender, uint amount0, uint amount1);CopyEmitted each time liquidity tokens are created via mint.Burn‚Äãevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);CopyEmitted each time liquidity tokens are destroyed via burn.Swap‚Äãevent Swap( address indexed sender, uint amount0In, uint amount1In, uint amount0Out, uint amount1Out, address indexed to);CopyEmitted each time a swap occurs via swap.Sync‚Äãevent Sync(uint112 reserve0, uint112 reserve1);CopyEmitted each time reserves are updated via mint, burn, swap, or sync.Read-Only FunctionsMINIMUM_LIQUIDITY‚Äãfunction MINIMUM_LIQUIDITY() external pure returns (uint);CopyReturns 1000 for all pairs. See Minimum Liquidity.factory‚Äãfunction factory() external view returns (address);CopyReturns the factory address.token0‚Äãfunction token0() external view returns (address);CopyReturns the address of the pair token with the lower sort order.token1‚Äãfunction token1() external view returns (address);CopyReturns the address of the pair token with the higher sort order.getReserves‚Äãfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);CopyReturns the reserves of token0 and token1 used to price trades and distribute liquidity. See Pricing. Also returns the block.timestamp (mod 2**32) of the last block during which an interaction occured for the pair.price0CumulativeLast‚Äãfunction price0CumulativeLast() external view returns (uint);CopySee Oracles.price1CumulativeLast‚Äãfunction price1CumulativeLast() external view returns (uint);CopySee Oracles.kLast‚Äãfunction kLast() external view returns (uint);CopyReturns the product of the reserves as of the most recent liquidity event. See Protocol Charge Calculation.State-Changing Functionsmint‚Äãfunction mint(address to) external returns (uint liquidity);CopyCreates pool tokens.Emits Mint, Sync, Transfer.burn‚Äãfunction burn(address to) external returns (uint amount0, uint amount1);CopyDestroys pool tokens.Emits Burn, Sync, Transfer.swap‚Äãfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;CopySwaps tokens. For regular swaps, data.length must be 0. Also see Flash Swaps.Emits Swap, Sync.skim‚Äãfunction skim(address to) external;CopySee the whitepaper.sync‚Äãfunction sync() external;CopySee the whitepaper.Emits Sync.Interfaceimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol';Copypragma solidity >=0.5.0;interface IUniswapV2Pair { event Approval(address indexed owner, address indexed spender, uint value); event Transfer(address indexed from, address indexed to, uint value); function name() external pure returns (string memory); function symbol() external pure returns (string memory); function decimals() external pure returns (uint8); function totalSupply() external view returns (uint); function balanceOf(address owner) external view returns (uint); function allowance(address owner, address spender) external view returns (uint); function approve(address spender, uint value) external returns (bool); function transfer(address to, uint value) external returns (bool); function transferFrom(address from, address to, uint value) external returns (bool); function DOMAIN_SEPARATOR() external view returns (bytes32); function PERMIT_TYPEHASH() external pure returns (bytes32); function nonces(address owner) external view returns (uint); function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external; event Mint(address indexed sender, uint amount0, uint amount1); event Burn(address indexed sender, uint amount0, uint amount1, address indexed to); event Swap(  address indexed sender,  uint amount0In,  uint amount1In,  uint amount0Out,  uint amount1Out,  address indexed to ); event Sync(uint112 reserve0, uint112 reserve1); function MINIMUM_LIQUIDITY() external pure returns (uint); function factory() external view returns (address); function token0() external view returns (address); function token1() external view returns (address); function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast); function price0CumulativeLast() external view returns (uint); function price1CumulativeLast() external view returns (uint); function kLast() external view returns (uint); function mint(address to) external returns (uint liquidity); function burn(address to) external returns (uint amount0, uint amount1); function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external; function skim(address to) external; function sync() external;}CopyABIimport IUniswapV2Pair from '@uniswap/v2-core/build/IUniswapV2Pair.json'Copyhttps://unpkg.com/@uniswap/v2-core@1.0.0/build/IUniswapV2Pair.jsonEdit this pageHelpful?PreviousFactoryNextPair (ERC-20)MintBurnSwapSyncMINIMUM_LIQUIDITYfactorytoken0token1getReservesprice0CumulativeLastprice1CumulativeLastkLastmintburnswapskimsyncDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
126,p.org contracts universal router technical reference#transfer,"p.org contracts universal router technical reference#transfer.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
127,p.org contracts v2 reference smart contracts factory,"p.org contracts v2 reference smart contracts factory.    Factory | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsFactoryHelpful?On this pageFactoryCode‚ÄãUniswapV2Factory.solAddressUniswapV2Factory is deployed at 0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f on the Ethereum mainnet, and the Ropsten, Rinkeby, G√∂rli, and Kovan testnets. It was built from commit 8160750.EventsPairCreated‚Äãevent PairCreated(address indexed token0, address indexed token1, address pair, uint);CopyEmitted each time a pair is created via createPair.token0 is guaranteed to be strictly less than token1 by sort order.The final uint log value will be 1 for the first pair created, 2 for the second, etc. (see allPairs/getPair).Read-Only FunctionsgetPair‚Äãfunction getPair(address tokenA, address tokenB) external view returns (address pair);CopyReturns the address of the pair for tokenA and tokenB, if it has been created, else address(0) (0x0000000000000000000000000000000000000000).tokenA and tokenB are interchangeable.Pair addresses can also be calculated deterministically via the SDK.allPairs‚Äãfunction allPairs(uint) external view returns (address pair);CopyReturns the address of the nth pair (0-indexed) created through the factory, or address(0) (0x0000000000000000000000000000000000000000) if not enough pairs have been created yet.Pass 0 for the address of the first pair created, 1 for the second, etc.allPairsLength‚Äãfunction allPairsLength() external view returns (uint);CopyReturns the total number of pairs created through the factory so far.feeTo‚Äãfunction feeTo() external view returns (address);CopySee Protocol Charge Calculation.feeToSetter‚Äãfunction feeToSetter() external view returns (address);CopyThe address allowed to change feeTo.State-Changing FunctionscreatePair‚Äãfunction createPair(address tokenA, address tokenB) external returns (address pair);CopyCreates a pair for tokenA and tokenB if one doesn't exist already.tokenA and tokenB are interchangeable.Emits PairCreated.Interfaceimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol';Copypragma solidity >=0.5.0;interface IUniswapV2Factory { event PairCreated(address indexed token0, address indexed token1, address pair, uint); function getPair(address tokenA, address tokenB) external view returns (address pair); function allPairs(uint) external view returns (address pair); function allPairsLength() external view returns (uint); function feeTo() external view returns (address); function feeToSetter() external view returns (address); function createPair(address tokenA, address tokenB) external returns (address pair);}CopyABIimport IUniswapV2Factory from '@uniswap/v2-core/build/IUniswapV2Factory.json'Copyhttps://unpkg.com/@uniswap/v2-core@1.0.0/build/IUniswapV2Factory.jsonEdit this pageHelpful?PreviousGovernance ReferenceNextPairCodePairCreatedgetPairallPairsallPairsLengthfeeTofeeToSettercreatePairDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
128,p.org sdk core reference modules.md#sqrt,p.org sdk core reference modules.md#sqrt. 
129,p.org sdk core reference classes CurrencyAmount#equalto,"p.org sdk core reference classes CurrencyAmount#equalto.    CurrencyAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesCurrencyAmountHelpful?On this pageCurrencyAmount@uniswap/sdk-core / Exports / CurrencyAmountClass: CurrencyAmount<T>Type parameters‚ÄãNameTypeTextends CurrencyHierarchy‚ÄãFraction‚Ü≥ CurrencyAmountTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãcurrencydecimalScaledenominatornumeratorAccessors‚ÄãasFractionquotientremainderwrappedMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new CurrencyAmount<T>(currency, numerator, denominator?)Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypecurrencyTnumeratorBigintIshdenominator?BigintIshOverrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/currencyAmount.ts:40Properties‚Äãcurrency‚Äã‚Ä¢ Readonly currency: TDefined in‚Äãentities/fractions/currencyAmount.ts:14decimalScale‚Äã‚Ä¢ Readonly decimalScale: defaultDefined in‚Äãentities/fractions/currencyAmount.ts:15denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47wrapped‚Äã‚Ä¢ get wrapped(): CurrencyAmount<Token>Returns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/fractions/currencyAmount.ts:91Methods‚Äãadd‚Äã‚ñ∏ add(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.addDefined in‚Äãentities/fractions/currencyAmount.ts:47divide‚Äã‚ñ∏ divide(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/currencyAmount.ts:64equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/currencyAmount.ts:59subtract‚Äã‚ñ∏ subtract(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/currencyAmount.ts:53toExact‚Äã‚ñ∏ toExact(format?): stringParameters‚ÄãNameTypeformatobjectReturns‚ÄãstringDefined in‚Äãentities/fractions/currencyAmount.ts:86toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformat?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/currencyAmount.ts:77toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/currencyAmount.ts:69fromFractionalAmount‚Äã‚ñ∏ Static fromFractionalAmount<T>(currency, numerator, denominator): CurrencyAmount<T>Construct a currency amount with a denominator that is not equal to 1Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currencynumeratorBigintIshthe numerator of the fractional token amountdenominatorBigintIshthe denominator of the fractional token amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:32fromRawAmount‚Äã‚ñ∏ Static fromRawAmount<T>(currency, rawAmount): CurrencyAmount<T>Returns a new currency amount instance from the unitless amount of token, i.e. the raw amountType parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currency in the amountrawAmountBigintIshthe raw token or ether amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:22Helpful?PreviousOverviewNextEtherType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiescurrencydecimalScaledenominatornumeratorAccessorsasFractionquotientremainderwrappedMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
130,p.org contracts v3 overview,"p.org contracts v3 overview.    Overview | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolOverviewHelpful?The Uniswap V3 Smart ContractsWelcome to the Uniswap V3 smart contracts documentation.The pages here contain guides and technical documentation for the Uniswap V3 Smart Contracts. You can use these docs to learn about the V3 Protocol Smart Contracts and develop on-chain integrations.GuidesIf you are new to the Uniswap Protocol, we recommend you start with the basic concepts first.You can then setup your local environment and execute your first swap.ReferenceFor a deeper dive, read through the technical reference docs.ResourcesV3 CoreV3 PeripheryEdit this pageHelpful?NextSet Up Your Local EnvironmentDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
131,p.org sdk v1 guides getting started,"p.org sdk v1 guides getting started.    Getting Started | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKOverviewGuidesGetting StartedTechnical ReferenceDataComputationFormatOrchestrationTransactConstantsTypesüè†V1 SDKGuidesGetting StartedHelpful?Getting StartedThe Uniswap SDK is meant to simplify every aspect of integrating Uniswap into your project. It's written in TypeScript, has a robust test suite, uses bignumber.js for math, and includes an optional data-fetching module which relies on ethers.js.The SDK was built to be extremely easy to use, but also feature-rich. It offers various levels of abstraction that make it suitable for use nearly anywhere, from hackathon projects to production applications.OverviewThe SDK is divided into several modular components that perform tightly scoped tasks:Data - Fetches Uniswap data from the blockchainComputation - Computes market- and trade-specific statistics using blockchain dataFormat - Formats data for displayOrchestration - Offers named abstraction functions that seamlessly combine lower-level data- and computation-related functionsTransact - Prepares computed trades for execution against Uniswap smart contractsConstants - Exports various helpful constants for use throughout the SDKAdditionally, it exports a number of custom types:Types - Exports all types used by the SDKInstallationTo start using the SDK, simply install it into your project...yarn add @uniswap/sdkCopy...import some functions...import { ... } from '@uniswap/sdk'Copy...and dive into the rest of the documentation to learn more!Helpful?PreviousOverviewNextDataDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
132,p.org sdk v3 reference interfaces SwapOptions#inputtokenpermit,"p.org sdk v3 reference interfaces SwapOptions#inputtokenpermit.    SwapOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesSwapOptionsHelpful?On this pageSwapOptions@uniswap/v3-sdk / Exports / SwapOptionsInterface: SwapOptionsOptions for producing the arguments to send calls to the router.Table of contents‚ÄãProperties‚ÄãdeadlinefeeinputTokenPermitrecipientslippageTolerancesqrtPriceLimitX96Properties‚Äãdeadline‚Äã‚Ä¢ deadline: BigintIshWhen the transaction expires, in epoch seconds.Defined in‚ÄãswapRouter.ts:30fee‚Äã‚Ä¢ Optional fee: FeeOptionsOptional information for taking a fee on output.Defined in‚ÄãswapRouter.ts:45inputTokenPermit‚Äã‚Ä¢ Optional inputTokenPermit: PermitOptionsThe optional permit parameters for spending the input.Defined in‚ÄãswapRouter.ts:35recipient‚Äã‚Ä¢ recipient: stringThe account that should receive the output.Defined in‚ÄãswapRouter.ts:25slippageTolerance‚Äã‚Ä¢ slippageTolerance: PercentHow much the execution price is allowed to move unfavorably from the trade execution price.Defined in‚ÄãswapRouter.ts:20sqrtPriceLimitX96‚Äã‚Ä¢ Optional sqrtPriceLimitX96: BigintIshThe optional price limit for the trade.Defined in‚ÄãswapRouter.ts:40Helpful?PreviousStandardPermitArgumentsNextTickConstructorArgsTable of contentsPropertiesPropertiesdeadlinefeeinputTokenPermitrecipientslippageTolerancesqrtPriceLimitX96DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
133,p.org sdk v3 reference classes NoTickDataProvider#constructor,"p.org sdk v3 reference classes NoTickDataProvider#constructor.    NoTickDataProvider | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesNoTickDataProviderHelpful?On this pageNoTickDataProvider@uniswap/v3-sdk / Exports / NoTickDataProviderClass: NoTickDataProviderThis tick data provider does not know how to fetch any tick data. It throws whenever it is required. Useful if you do not need to load tick data for your use case.Implements‚ÄãTickDataProviderTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãERROR_MESSAGEMethods‚ÄãgetTicknextInitializedTickWithinOneWordConstructors‚Äãconstructor‚Äã‚Ä¢ new NoTickDataProvider()Properties‚ÄãERROR_MESSAGE‚Äã‚ñ™ Static Private ERROR_MESSAGE: string = 'No tick data provider was given'Defined in‚Äãentities/tickDataProvider.ts:27Methods‚ÄãgetTick‚Äã‚ñ∏ getTick(_tick): Promise<{ liquidityNet: BigintIsh }>Return information corresponding to a specific tickParameters‚ÄãNameTypeDescription_ticknumberthe tick to loadReturns‚ÄãPromise<{ liquidityNet: BigintIsh }>Implementation of‚ÄãTickDataProvider.getTickDefined in‚Äãentities/tickDataProvider.ts:28nextInitializedTickWithinOneWord‚Äã‚ñ∏ nextInitializedTickWithinOneWord(_tick, _lte, _tickSpacing): Promise<[number, boolean]>Return the next tick that is initialized within a single wordParameters‚ÄãNameTypeDescription_ticknumberThe current tick_ltebooleanWhether the next tick should be lte the current tick_tickSpacingnumberThe tick spacing of the poolReturns‚ÄãPromise<[number, boolean]>Implementation of‚ÄãTickDataProvider.nextInitializedTickWithinOneWordDefined in‚Äãentities/tickDataProvider.ts:32Helpful?PreviousMulticallNextNonfungiblePositionManagerImplementsTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesERROR_MESSAGEMethodsgetTicknextInitializedTickWithinOneWordDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
134,p.org sdk v3 reference classes Pool#tickdataprovider,"p.org sdk v3 reference classes Pool#tickdataprovider.    Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPoolHelpful?On this pagePool@uniswap/v3-sdk / Exports / PoolClass: PoolRepresents a V3 poolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1Accessors‚ÄãchainIdtickSpacingtoken0Pricetoken1PriceMethods‚ÄãgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressConstructors‚Äãconstructor‚Äã‚Ä¢ new Pool(tokenA, tokenB, fee, sqrtRatioX96, liquidity, tickCurrent, ticks?)Construct a poolParameters‚ÄãNameTypeDefault valueDescriptiontokenATokenundefinedOne of the tokens in the pooltokenBTokenundefinedThe other token in the poolfeeFeeAmountundefinedThe fee in hundredths of a bips of the input amount of every swap that is collected by the poolsqrtRatioX96BigintIshundefinedThe sqrt of the current ratio of amounts of token1 to token0liquidityBigintIshundefinedThe current value of in range liquiditytickCurrentnumberundefinedThe current tick of the poolticksTickDataProvider | (Tick | TickConstructorArgs)[]NO_TICK_DATA_PROVIDER_DEFAULTThe current state of the pool ticks or a data provider that can return tick dataDefined in‚Äãentities/pool.ts:70Properties‚Äã_token0Price‚Äã‚Ä¢ Private Optional _token0Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:41_token1Price‚Äã‚Ä¢ Private Optional _token1Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:42fee‚Äã‚Ä¢ Readonly fee: FeeAmountDefined in‚Äãentities/pool.ts:35liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/pool.ts:37sqrtRatioX96‚Äã‚Ä¢ Readonly sqrtRatioX96: defaultDefined in‚Äãentities/pool.ts:36tickCurrent‚Äã‚Ä¢ Readonly tickCurrent: numberDefined in‚Äãentities/pool.ts:38tickDataProvider‚Äã‚Ä¢ Readonly tickDataProvider: TickDataProviderDefined in‚Äãentities/pool.ts:39token0‚Äã‚Ä¢ Readonly token0: TokenDefined in‚Äãentities/pool.ts:33token1‚Äã‚Ä¢ Readonly token1: TokenDefined in‚Äãentities/pool.ts:34Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns the chain ID of the tokens in the pool.Returns‚ÄãnumberDefined in‚Äãentities/pool.ts:149tickSpacing‚Äã‚Ä¢ get tickSpacing(): numberReturns‚ÄãnumberDefined in‚Äãentities/pool.ts:317token0Price‚Äã‚Ä¢ get token0Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:109token1Price‚Äã‚Ä¢ get token1Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:124Methods‚ÄãgetInputAmount‚Äã‚ñ∏ getInputAmount(outputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given a desired output amount of a token, return the computed input amount and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptionoutputAmountCurrencyAmount<Token>the output amount for which to quote the input amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The input amount and the pool with updated stateDefined in‚Äãentities/pool.ts:185getOutputAmount‚Äã‚ñ∏ getOutputAmount(inputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given an input amount of a token, return the computed output amount, and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptioninputAmountCurrencyAmount<Token>The input amount for which to quote the output amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limitReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The output amount and the pool with updated stateDefined in‚Äãentities/pool.ts:159involvesToken‚Äã‚ñ∏ involvesToken(token): booleanReturns true if the token is either token0 or token1Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to checkReturns‚ÄãbooleanTrue if token is either token0 or tokenDefined in‚Äãentities/pool.ts:102priceOf‚Äã‚ñ∏ priceOf(token): Price<Token, Token>Return the price of the given token in terms of the other token in the pool.Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to return price ofReturns‚ÄãPrice<Token, Token>The price of the given token, in terms of the other.Defined in‚Äãentities/pool.ts:141swap‚Äã‚ñ∏ Private swap(zeroForOne, amountSpecified, sqrtPriceLimitX96?): Promise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>Executes a swapParameters‚ÄãNameTypeDescriptionzeroForOnebooleanWhether the amount in is token0 or token1amountSpecifieddefaultThe amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>amountCalculatedsqrtRatioX96liquiditytickCurrentDefined in‚Äãentities/pool.ts:215getAddress‚Äã‚ñ∏ Static getAddress(tokenA, tokenB, fee, initCodeHashManualOverride?, factoryAddressOverride?): stringParameters‚ÄãNameTypetokenATokentokenBTokenfeeFeeAmountinitCodeHashManualOverride?stringfactoryAddressOverride?stringReturns‚ÄãstringDefined in‚Äãentities/pool.ts:44Helpful?PreviousPaymentsNextPositionTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1AccessorschainIdtickSpacingtoken0Pricetoken1PriceMethodsgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
135,p.org sdk v3 reference classes SwapRouter#constructor,"p.org sdk v3 reference classes SwapRouter#constructor.    SwapRouter | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesSwapRouterHelpful?On this pageSwapRouter@uniswap/v3-sdk / Exports / SwapRouterClass: SwapRouterRepresents the Uniswap V3 SwapRouter, and has static methods for helping execute trades.Table of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãswapCallParametersConstructors‚Äãconstructor‚Äã‚Ä¢ Private new SwapRouter()Cannot be constructed.Defined in‚ÄãswapRouter.ts:57Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚ÄãswapRouter.ts:52Methods‚ÄãswapCallParameters‚Äã‚ñ∏ Static swapCallParameters(trades, options): MethodParametersProduces the on-chain method name to call and the hex encoded parameters to pass as arguments for a given trade.Parameters‚ÄãNameTypeDescriptiontradesTrade<Currency, Currency, TradeType> | Trade<Currency, Currency, TradeType>[]-optionsSwapOptionsoptions for the call parametersReturns‚ÄãMethodParametersDefined in‚ÄãswapRouter.ts:64Helpful?PreviousSwapQuoterNextTickTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsswapCallParametersDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
136,p.org contracts v3 reference periphery interfaces IPeripheryImmutableState,p.org contracts v3 reference periphery interfaces IPeripheryImmutableState.    IPeripheryImmutableState | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesIERC20MetadataIERC721PermitIMulticallINonfungiblePositionManagerINonfungibleTokenPositionDescriptorIPeripheryImmutableStateIPeripheryPaymentsIPeripheryPaymentsWithFeeIPoolInitializerIQuoterIQuoterV2ISelfPermitISwapRouterITickLensIV3MigratorexternalLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryInterfacesIPeripheryImmutableStateHelpful?On this pageIPeripheryImmutableStateFunctions that return immutable state of the routerFunctions‚Äãfactory‚Äã function factory( ) external returns (address)CopyReturn Values:‚ÄãTypeDescriptionaddressthe address of the Uniswap V3 factoryWETH9‚Äã function WETH9( ) external returns (address)CopyReturn Values:‚ÄãTypeDescriptionaddressthe address of WETH9Edit this pageHelpful?PreviousINonfungibleTokenPositionDescriptorNextIPeripheryPaymentsFunctionsfactoryWETH9DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
137,p.org sdk core reference classes Price#numerator,"p.org sdk core reference classes Price#numerator.    Price | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPriceHelpful?On this pagePrice@uniswap/sdk-core / Exports / PriceClass: Price<TBase, TQuote>Type parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyHierarchy‚ÄãFraction‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessors‚ÄãadjustedForDecimalsasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Price<TBase, TQuote>(...args)Construct a price, either with the base and quote currency amount, or theType parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyParameters‚ÄãNameType...args[TBase, TQuote, BigintIsh, BigintIsh] | [{ baseAmount: CurrencyAmount<TBase> ; quoteAmount: CurrencyAmount<TQuote> }]Overrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/price.ts:18Properties‚ÄãbaseCurrency‚Äã‚Ä¢ Readonly baseCurrency: TBaseDefined in‚Äãentities/fractions/price.ts:10denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25quoteCurrency‚Äã‚Ä¢ Readonly quoteCurrency: TQuoteDefined in‚Äãentities/fractions/price.ts:11scalar‚Äã‚Ä¢ Readonly scalar: FractionDefined in‚Äãentities/fractions/price.ts:12Accessors‚ÄãadjustedForDecimals‚Äã‚Ä¢ Private get adjustedForDecimals(): FractionGet the value scaled by decimals for formattingReturns‚ÄãFractionDefined in‚Äãentities/fractions/price.ts:77asFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.addDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.divideDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): Price<TQuote, TBase>Flip the price, switching the base and quote currencyReturns‚ÄãPrice<TQuote, TBase>Overrides‚ÄãFraction.invertDefined in‚Äãentities/fractions/price.ts:49lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply<TOtherQuote>(other): Price<TBase, TOtherQuote>Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currencyType parameters‚ÄãNameTypeTOtherQuoteextends CurrencyParameters‚ÄãNameTypeDescriptionotherPrice<TQuote, TOtherQuote>the other priceReturns‚ÄãPrice<TBase, TOtherQuote>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/price.ts:57quote‚Äã‚ñ∏ quote(currencyAmount): CurrencyAmount<TQuote>Return the amount of quote currency corresponding to a given amount of the base currencyParameters‚ÄãNameTypeDescriptioncurrencyAmountCurrencyAmount<TBase>the amount of base currency to quote against the priceReturns‚ÄãCurrencyAmount<TQuote>Defined in‚Äãentities/fractions/price.ts:67subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.subtractDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber4format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/price.ts:85toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/price.ts:81Helpful?PreviousPercentNextTokenType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessorsadjustedForDecimalsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
138,p.org sdk v2 reference trade#minimumamountout since 204,"p.org sdk v2 reference trade#minimumamountout since 204.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKOverviewGuidesSDK Quick startFetching DataPricingTradingPair AddressesTechnical ReferenceGetting StartedTokenPairRouteTradeFractionsFetcherOther ExportsV1 SDKüè†V2 SDKTechnical ReferenceTradeHelpful?On this pageTradeconstructor(route: Route, amount: TokenAmount, tradeType: TradeType)CopyThe Trade entity represents a fully specified trade along a route. This entity supplies all the information necessary to craft a router transaction.Exampleimport { ChainId, Token, TokenAmount, Pair, Trade, TradeType, Route } from '@uniswap/sdk'const HOT = new Token(ChainId.MAINNET, '0xc0FFee0000000000000000000000000000000000', 18, 'HOT', 'Caffeine')const NOT = new Token(ChainId.MAINNET, '0xDeCAf00000000000000000000000000000000000', 18, 'NOT', 'Caffeine')const HOT_NOT = new Pair(new TokenAmount(HOT, '2000000000000000000'), new TokenAmount(NOT, '1000000000000000000'))const NOT_TO_HOT = new Route([HOT_NOT], NOT)const trade = new Trade(NOT_TO_HOT, new TokenAmount(NOT, '1000000000000000'), TradeType.EXACT_INPUT)CopyPropertiesroute‚Äãroute: RouteCopyThe path property of the route should be passed as the path parameter to router functions.tradeType‚ÄãtradeType: TradeTypeCopyTradeType.EXACT_INPUT corresponds to swapExact*For* router functions. TradeType.EXACT_OUTPUT corresponds to swap*ForExact* router functions.inputAmount‚ÄãinputAmount: TokenAmountCopyFor exact input trades, this value should be passed as amountIn to router functions. For exact output trades, this value should be multiplied by a factor >1, representing slippage tolerance, and passed as amountInMax to router functions.outputAmount‚ÄãoutputAmount: TokenAmountCopyFor exact output trades, this value should be passed as amountOut to router functions. For exact input trades, this value should be multiplied by a factor <1, representing slippage tolerance, and passed as amountOutMin to router functions.executionPrice‚ÄãexecutionPrice: PriceCopyThe average price that the trade would execute at.nextMidPrice‚ÄãnextMidPrice: PriceCopyWhat the new mid price would be if the trade were to execute.slippage‚Äãslippage: PercentCopyThe slippage incurred by the trade.Strictly > .30%.MethodsIn the context of the following two methods, slippage refers to the percent difference between the actual price and the trade executionPrice.minimumAmountOut (since 2.0.4)‚ÄãminimumAmountOut(slippageTolerance: Percent): TokenAmountCopyReturns the minimum amount of the output token that should be received from a trade, given the slippage tolerance.Useful when constructing a transaction for a trade of type EXACT_INPUT.maximumAmountIn (since 2.0.4)‚ÄãmaximumAmountIn(slippageTolerance: Percent): TokenAmountCopyReturns the maximum amount of the input token that should be spent on the trade, given the slippage tolerance.Useful when constructing a transaction for a trade of type EXACT_OUTPUT.Static methodsThese static methods provide ways to construct ideal trades from lists of pairs. Note these methods do not perform any aggregation across routes, as routes are linear. It's possible that a better price can be had by combining multiple trades across different routes.bestTradeExactIn‚ÄãGiven a list of pairs, a fixed amount in, and token amount out, this method returns the best maxNumResults trades that swap an input token amount to an output token, making at most maxHops hops. The returned trades are sorted by output amount, in decreasing order, and all share the given input amount.Trade.bestTradeExactIn( pairs: Pair[], amountIn: TokenAmount, tokenOut: Token, { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {}): Trade[]CopybestTradeExactOut‚ÄãSimilar to the above method, but targets a fixed output token amount. The returned trades are sorted by input amount, in increasing order, and all share the given output amount.Trade.bestTradeExactOut( pairs: Pair[], tokenIn: Token, amountOut: TokenAmount, { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {}): Trade[]CopyHelpful?PreviousRouteNextFractionsroutetradeTypeinputAmountoutputAmountexecutionPricenextMidPriceslippageminimumAmountOut (since 2.0.4)maximumAmountIn (since 2.0.4)bestTradeExactInbestTradeExactOutDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
139,p.org contracts v3 reference periphery interfaces IV3Migrator,"p.org contracts v3 reference periphery interfaces IV3Migrator.    IV3Migrator | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesIERC20MetadataIERC721PermitIMulticallINonfungiblePositionManagerINonfungibleTokenPositionDescriptorIPeripheryImmutableStateIPeripheryPaymentsIPeripheryPaymentsWithFeeIPoolInitializerIQuoterIQuoterV2ISelfPermitISwapRouterITickLensIV3MigratorexternalLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryInterfacesIV3MigratorHelpful?On this pageIV3MigratorEnables migration of liqudity from Uniswap v2-compatible pairs into Uniswap v3 poolsFunctions‚Äãmigrate‚Äã function migrate( struct IV3Migrator.MigrateParams params ) externalCopyMigrates liquidity to v3 by burning v2 liquidity and minting a new position for v3Slippage protection is enforced via amount{0,1}Min, which should be a discount of the expected values of the maximum amount of v3 liquidity that the v2 liquidity can get. For the special case of migrating to an out-of-range position, amount{0,1}Min may be set to 0, enforcing that the position remains out of rangeParameters:‚ÄãNameTypeDescriptionparamsstruct IV3Migrator.MigrateParamsThe params necessary to migrate v2 liquidity, encoded as MigrateParams in calldataEdit this pageHelpful?PreviousITickLensNextIERC1271FunctionsmigrateDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
140,p.org sdk core reference classes Price#equalto,"p.org sdk core reference classes Price#equalto.    Price | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPriceHelpful?On this pagePrice@uniswap/sdk-core / Exports / PriceClass: Price<TBase, TQuote>Type parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyHierarchy‚ÄãFraction‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessors‚ÄãadjustedForDecimalsasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Price<TBase, TQuote>(...args)Construct a price, either with the base and quote currency amount, or theType parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyParameters‚ÄãNameType...args[TBase, TQuote, BigintIsh, BigintIsh] | [{ baseAmount: CurrencyAmount<TBase> ; quoteAmount: CurrencyAmount<TQuote> }]Overrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/price.ts:18Properties‚ÄãbaseCurrency‚Äã‚Ä¢ Readonly baseCurrency: TBaseDefined in‚Äãentities/fractions/price.ts:10denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25quoteCurrency‚Äã‚Ä¢ Readonly quoteCurrency: TQuoteDefined in‚Äãentities/fractions/price.ts:11scalar‚Äã‚Ä¢ Readonly scalar: FractionDefined in‚Äãentities/fractions/price.ts:12Accessors‚ÄãadjustedForDecimals‚Äã‚Ä¢ Private get adjustedForDecimals(): FractionGet the value scaled by decimals for formattingReturns‚ÄãFractionDefined in‚Äãentities/fractions/price.ts:77asFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.addDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.divideDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): Price<TQuote, TBase>Flip the price, switching the base and quote currencyReturns‚ÄãPrice<TQuote, TBase>Overrides‚ÄãFraction.invertDefined in‚Äãentities/fractions/price.ts:49lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply<TOtherQuote>(other): Price<TBase, TOtherQuote>Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currencyType parameters‚ÄãNameTypeTOtherQuoteextends CurrencyParameters‚ÄãNameTypeDescriptionotherPrice<TQuote, TOtherQuote>the other priceReturns‚ÄãPrice<TBase, TOtherQuote>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/price.ts:57quote‚Äã‚ñ∏ quote(currencyAmount): CurrencyAmount<TQuote>Return the amount of quote currency corresponding to a given amount of the base currencyParameters‚ÄãNameTypeDescriptioncurrencyAmountCurrencyAmount<TBase>the amount of base currency to quote against the priceReturns‚ÄãCurrencyAmount<TQuote>Defined in‚Äãentities/fractions/price.ts:67subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.subtractDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber4format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/price.ts:85toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/price.ts:81Helpful?PreviousPercentNextTokenType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessorsadjustedForDecimalsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
141,p.org sdk core reference classes CurrencyAmount#multiply,"p.org sdk core reference classes CurrencyAmount#multiply.    CurrencyAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesCurrencyAmountHelpful?On this pageCurrencyAmount@uniswap/sdk-core / Exports / CurrencyAmountClass: CurrencyAmount<T>Type parameters‚ÄãNameTypeTextends CurrencyHierarchy‚ÄãFraction‚Ü≥ CurrencyAmountTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãcurrencydecimalScaledenominatornumeratorAccessors‚ÄãasFractionquotientremainderwrappedMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new CurrencyAmount<T>(currency, numerator, denominator?)Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypecurrencyTnumeratorBigintIshdenominator?BigintIshOverrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/currencyAmount.ts:40Properties‚Äãcurrency‚Äã‚Ä¢ Readonly currency: TDefined in‚Äãentities/fractions/currencyAmount.ts:14decimalScale‚Äã‚Ä¢ Readonly decimalScale: defaultDefined in‚Äãentities/fractions/currencyAmount.ts:15denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47wrapped‚Äã‚Ä¢ get wrapped(): CurrencyAmount<Token>Returns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/fractions/currencyAmount.ts:91Methods‚Äãadd‚Äã‚ñ∏ add(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.addDefined in‚Äãentities/fractions/currencyAmount.ts:47divide‚Äã‚ñ∏ divide(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/currencyAmount.ts:64equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/currencyAmount.ts:59subtract‚Äã‚ñ∏ subtract(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/currencyAmount.ts:53toExact‚Äã‚ñ∏ toExact(format?): stringParameters‚ÄãNameTypeformatobjectReturns‚ÄãstringDefined in‚Äãentities/fractions/currencyAmount.ts:86toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformat?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/currencyAmount.ts:77toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/currencyAmount.ts:69fromFractionalAmount‚Äã‚ñ∏ Static fromFractionalAmount<T>(currency, numerator, denominator): CurrencyAmount<T>Construct a currency amount with a denominator that is not equal to 1Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currencynumeratorBigintIshthe numerator of the fractional token amountdenominatorBigintIshthe denominator of the fractional token amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:32fromRawAmount‚Äã‚ñ∏ Static fromRawAmount<T>(currency, rawAmount): CurrencyAmount<T>Returns a new currency amount instance from the unitless amount of token, i.e. the raw amountType parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currency in the amountrawAmountBigintIshthe raw token or ether amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:22Helpful?PreviousOverviewNextEtherType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiescurrencydecimalScaledenominatornumeratorAccessorsasFractionquotientremainderwrappedMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
142,p.org contracts universal router technical reference,"p.org contracts universal router technical reference.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
143,p.org sdk v3 reference interfaces TickConstructorArgs#liquiditygross,p.org sdk v3 reference interfaces TickConstructorArgs#liquiditygross.    TickConstructorArgs | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesTickConstructorArgsHelpful?On this pageTickConstructorArgs@uniswap/v3-sdk / Exports / TickConstructorArgsInterface: TickConstructorArgsTable of contents‚ÄãProperties‚ÄãindexliquidityGrossliquidityNetProperties‚Äãindex‚Äã‚Ä¢ index: numberDefined in‚Äãentities/tick.ts:7liquidityGross‚Äã‚Ä¢ liquidityGross: BigintIshDefined in‚Äãentities/tick.ts:8liquidityNet‚Äã‚Ä¢ liquidityNet: BigintIshDefined in‚Äãentities/tick.ts:9Helpful?PreviousSwapOptionsNextTickDataProviderTable of contentsPropertiesPropertiesindexliquidityGrossliquidityNetDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
144,p.org contracts v3 reference periphery test SelfPermitTest,p.org contracts v3 reference periphery test SelfPermitTest.    SelfPermitTest | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerTestBase64TestLiquidityAmountsTestMockTimeNonfungiblePositionManagerMockTimeSwapRouterNFTDescriptorTestPathTestPeripheryImmutableStateTestPoolAddressTestSelfPermitTestTestCallbackValidationTestERC20TestERC20MetadataTestERC20PermitAllowedTestMulticallTestPositionNFTOwnerTestUniswapV3CalleeTickLensTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryTestSelfPermitTestHelpful?SelfPermitTestSame as SelfPermit but not abstractEdit this pageHelpful?PreviousPoolAddressTestNextTestCallbackValidationDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
145,p.org sdk 1.0.0 reference transact,p.org sdk 1.0.0 reference transact. 
146,p.org sdk v3 reference classes Staker#encodedeposit,"p.org sdk v3 reference classes Staker#encodedeposit.    Staker | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesStakerHelpful?On this pageStaker@uniswap/v3-sdk / Exports / StakerClass: StakerTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINCENTIVE_KEY_ABIINTERFACEMethods‚Äã_encodeIncentiveKeycollectRewardsencodeClaimencodeDepositwithdrawTokenConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new Staker()Defined in‚Äãstaker.ts:72Properties‚ÄãINCENTIVE_KEY_ABI‚Äã‚ñ™ Static Private INCENTIVE_KEY_ABI: string = 'tuple(address rewardToken, address pool, uint256 startTime, uint256 endTime, address refundee)'Defined in‚Äãstaker.ts:73INTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚Äãstaker.ts:70Methods‚Äã_encodeIncentiveKey‚Äã‚ñ∏ Static Private _encodeIncentiveKey(incentiveKey): ObjectParameters‚ÄãNameTypeDescriptionincentiveKeyIncentiveKeyAn IncentiveKey which represents a unique staking program.Returns‚ÄãObjectAn encoded IncentiveKey to be read by ethersDefined in‚Äãstaker.ts:194collectRewards‚Äã‚ñ∏ Static collectRewards(incentiveKeys, options): MethodParametersNote: A tokenId can be staked in many programs but to claim rewards and continue the program you must unstake, claim, and then restake.Parameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]An IncentiveKey or array of IncentiveKeys that tokenId is staked in. Input an array of IncentiveKeys to claim rewards for each program.optionsClaimOptionsClaimOptions to specify tokenId, recipient, and amount wanting to collect. Note that you can only specify one amount and one recipient across the various programs if you are collecting from multiple programs at once.Returns‚ÄãMethodParametersDefined in‚Äãstaker.ts:107encodeClaim‚Äã‚ñ∏ Static Private encodeClaim(incentiveKey, options): string[]To claim rewards, must unstake and then claim.Parameters‚ÄãNameTypeDescriptionincentiveKeyIncentiveKeyThe unique identifier of a staking program.optionsClaimOptionsOptions for producing the calldata to claim. Can't claim unless you unstake.Returns‚Äãstring[]The calldatas for 'unstakeToken' and 'claimReward'.Defined in‚Äãstaker.ts:82encodeDeposit‚Äã‚ñ∏ Static encodeDeposit(incentiveKeys): stringParameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]A single IncentiveKey or array of IncentiveKeys to be encoded and used in the data parameter in safeTransferFromReturns‚ÄãstringAn IncentiveKey as a stringDefined in‚Äãstaker.ts:173withdrawToken‚Äã‚ñ∏ Static withdrawToken(incentiveKeys, withdrawOptions): MethodParametersParameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]A list of incentiveKeys to unstake from. Should include all incentiveKeys (unique staking programs) that options.tokenId is staked in.withdrawOptionsFullWithdrawOptionsOptions for producing claim calldata and withdraw calldata. Can't withdraw without unstaking all programs for tokenId.Returns‚ÄãMethodParametersCalldata for unstaking, claiming, and withdrawing.Defined in‚Äãstaker.ts:136Helpful?PreviousSqrtPriceMathNextSwapMathTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINCENTIVE_KEY_ABIINTERFACEMethods_encodeIncentiveKeycollectRewardsencodeClaimencodeDepositwithdrawTokenDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
147,p.org,"p.org.    Uniswap Docs | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearch Welcome to Uniswap DocsSearchWhat is UniswapLearn about the core concepts of the Uniswap Protocol, Swaps, Pools, Concentrated Liquidity and more.Integrate with UniswapLearn how to integrate with Uniswap by building a dApp through guided examples.The Uniswap smart contractsLearn about the architecture of the Uniswap Protocol smart contracts through guided examples.Integrate your dAppExplore these guided tutorials to get started integrating with Uniswap in your dApp.Fetch token pricesFetch the price of tokens in a specific PoolCreate a TradeFetch a Quote for a Trade and execute the TradeRoute tradesUse Routing to get optimized prices for your TradesProvide liquidityContribute to a Pool's liquidity by using tokens to earn feesUI ComponentIntegrate with the Swap Widget, a React component that works out of the box Integrate your smart contractsExplore these guided tutorials to get started integrating with Uniswap in your smart contracts.Setup your environmentPrepare your local environment by installing the required dependenciesImplement a SwapStart swapping from a smart contract in SolidityProvide LiquidityProvide liquidity from a smart contract in SolidityMine LiquidityStart Mining liquidity from a smart contract in SolidityImplement Flash SwapsImplement Flash Swaps from a smart contract in SolidityDeveloper Linksuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addresseswidgetsDiscordJoin our Developer Community.ForumDiscuss governance and more.GitHubView all Uniswap repositories.Uniswap Grants ProgramUniswap Governance offers grant funding for people who are building apps, tools, and activities for Uniswap Protocol users, builders, and community members. DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
148,p.org contracts v3 reference periphery libraries PoolAddress,"p.org contracts v3 reference periphery libraries PoolAddress.    PoolAddress | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesBase64BytesLibCallbackValidationChainIdHexStringsLiquidityAmountsNFTDescriptorNFTSVGOracleLibraryPathPoolAddressPoolTicksCounterPositionKeyTokenRatioSortOrderTransferHelperWeightedOracleLibraryStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryLibrariesPoolAddressHelpful?On this pagePoolAddressFunctions‚ÄãgetPoolKey‚Äã function getPoolKey( address tokenA, address tokenB, uint24 fee ) internal returns (struct PoolAddress.PoolKey)CopyReturns PoolKey: the ordered tokens with the matched fee levelsParameters:‚ÄãNameTypeDescriptiontokenAaddressThe first token of a pool, unsortedtokenBaddressThe second token of a pool, unsortedfeeuint24The fee level of the poolReturn Values:‚ÄãNameTypeDescriptionPoolkeyPoolAddress.PoolKeyThe pool details with ordered token0 and token1 assignmentscomputeAddress‚Äã function computeAddress( address factory, struct PoolAddress.PoolKey key ) internal returns (address pool)CopyDeterministically computes the pool address given the factory and PoolKeyParameters:‚ÄãNameTypeDescriptionfactoryaddressThe Uniswap V3 factory contract addresskeystruct PoolAddress.PoolKeyThe PoolKeyReturn Values:‚ÄãNameTypeDescriptionpooladdressThe contract address of the V3 poolEdit this pageHelpful?PreviousPathNextPoolTicksCounterFunctionsgetPoolKeycomputeAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
149,p.org sdk core reference classes Ether# ethercache,"p.org sdk core reference classes Ether# ethercache.    Ether | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesEtherHelpful?On this pageEther@uniswap/sdk-core / Exports / EtherClass: EtherEther is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnetsHierarchy‚ÄãNativeCurrency‚Ü≥ EtherTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãchainIddecimalsisNativeisTokennamesymbol_etherCacheAccessors‚ÄãwrappedMethods‚ÄãequalsonChainConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new Ether(chainId)Parameters‚ÄãNameTypechainIdnumberOverrides‚ÄãNativeCurrency.constructorDefined in‚Äãentities/ether.ts:11Properties‚ÄãchainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãNativeCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãNativeCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: trueInherited from‚ÄãNativeCurrency.isNativeDefined in‚Äãentities/nativeCurrency.ts:7isToken‚Äã‚Ä¢ Readonly isToken: falseInherited from‚ÄãNativeCurrency.isTokenDefined in‚Äãentities/nativeCurrency.ts:8name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãNativeCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãNativeCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29_etherCache‚Äã‚ñ™ Static Private _etherCache: Object = {}Index signature‚Äã‚ñ™ [chainId: number]: EtherDefined in‚Äãentities/ether.ts:21Accessors‚Äãwrapped‚Äã‚Ä¢ get wrapped(): TokenReturn the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to be used in UniswapReturns‚ÄãTokenOverrides‚ÄãNativeCurrency.wrappedDefined in‚Äãentities/ether.ts:15Methods‚Äãequals‚Äã‚ñ∏ equals(other): booleanReturns whether this currency is functionally equivalent to the other currencyParameters‚ÄãNameTypeDescriptionotherCurrencythe other currencyReturns‚ÄãbooleanOverrides‚ÄãNativeCurrency.equalsDefined in‚Äãentities/ether.ts:27onChain‚Äã‚ñ∏ Static onChain(chainId): EtherParameters‚ÄãNameTypechainIdnumberReturns‚ÄãEtherDefined in‚Äãentities/ether.ts:23Helpful?PreviousCurrencyAmountNextFractionHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertieschainIddecimalsisNativeisTokennamesymbol_etherCacheAccessorswrappedMethodsequalsonChainDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
150,p.org contracts v3 reference core libraries TickMath,"p.org contracts v3 reference core libraries TickMath.    TickMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesLibrariesBitMathFixedPoint128FixedPoint96FullMathLiquidityMathLowGasSafeMathOraclePositionSafeCastSecondsOutsideSqrtPriceMathSwapMathTickTickBitmapTickMathTransferHelperUnsafeMathGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreLibrariesTickMathHelpful?On this pageTickMathComputes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2-128 and 2128Functions‚ÄãgetSqrtRatioAtTick‚Äã function getSqrtRatioAtTick( int24 tick ) internal pure returns (uint160 sqrtPriceX96)CopyCalculates sqrt(1.0001^tick) * 2^96Throws if |tick| > max tickParameters:‚ÄãNameTypeDescriptiontickint24The input tick for the above formulaReturn Values:‚ÄãNameTypeDescriptionsqrtPriceX96uint160A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)at the given tickgetTickAtSqrtRatio‚Äã function getTickAtSqrtRatio( uint160 sqrtPriceX96 ) internal pure returns (int24 tick)CopyCalculates the greatest tick value such that getRatioAtTick(tick) <= ratioThrows in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may ever return.Parameters:‚ÄãNameTypeDescriptionsqrtPriceX96uint160The sqrt ratio for which to compute the tick as a Q64.96Return Values:‚ÄãNameTypeDescriptiontickint24The greatest tick for which the ratio is less than or equal to the input ratioEdit this pageHelpful?PreviousTickBitmapNextTransferHelperFunctionsgetSqrtRatioAtTickgetTickAtSqrtRatioDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
151,p.org sdk v3 reference classes Trade#fromroute,"p.org sdk v3 reference classes Trade#fromroute.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTradeHelpful?On this pageTrade@uniswap/v3-sdk / Exports / TradeClass: Trade<TInput, TOutput, TTradeType>Represents a trade executed against a set of routes where some percentage of the input is split across each route.Each route has its own set of pools. Pools can not be re-used across routes.Does not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and when it is executed.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessors‚ÄãexecutionPriceinputAmountoutputAmountpriceImpactrouteMethods‚ÄãmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Trade<TInput, TOutput, TTradeType>(__namedParameters)Construct a trade by passing in the pre-computed property valuesType parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyTTradeTypeextends TradeTypeParameters‚ÄãNameType__namedParametersObject__namedParameters.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]__namedParameters.tradeTypeTTradeTypeDefined in‚Äãentities/trade.ts:397Properties‚Äã_executionPrice‚Äã‚Ä¢ Private _executionPrice: undefined | Price<TInput, TOutput>The cached result of the computed execution priceDefined in‚Äãentities/trade.ts:143_inputAmount‚Äã‚Ä¢ Private _inputAmount: undefined | CurrencyAmount<TInput>The cached result of the input amount computationDefined in‚Äãentities/trade.ts:97_outputAmount‚Äã‚Ä¢ Private _outputAmount: undefined | CurrencyAmount<TOutput>The cached result of the output amount computationDefined in‚Äãentities/trade.ts:120_priceImpact‚Äã‚Ä¢ Private _priceImpact: undefined | PercentThe cached result of the price impact computationDefined in‚Äãentities/trade.ts:164swaps‚Äã‚Ä¢ Readonly swaps: { inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]The swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.Defined in‚Äãentities/trade.ts:82tradeType‚Äã‚Ä¢ Readonly tradeType: TTradeTypeThe type of the trade, either exact in or exact out.Defined in‚Äãentities/trade.ts:91Accessors‚ÄãexecutionPrice‚Äã‚Ä¢ get executionPrice(): Price<TInput, TOutput>The price expressed in terms of output amount/input amount.Returns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/trade.ts:148inputAmount‚Äã‚Ä¢ get inputAmount(): CurrencyAmount<TInput>The input amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TInput>Defined in‚Äãentities/trade.ts:102outputAmount‚Äã‚Ä¢ get outputAmount(): CurrencyAmount<TOutput>The output amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TOutput>Defined in‚Äãentities/trade.ts:125priceImpact‚Äã‚Ä¢ get priceImpact(): PercentReturns the percent difference between the route's mid price and the price impactReturns‚ÄãPercentDefined in‚Äãentities/trade.ts:169route‚Äã‚Ä¢ get route(): Route<TInput, TOutput>DeprecatedDeprecated in favor of 'swaps' property. If the trade consists of multiple routes this will return an error.When the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.Returns‚ÄãRoute<TInput, TOutput>Defined in‚Äãentities/trade.ts:73Methods‚ÄãmaximumAmountIn‚Äã‚ñ∏ maximumAmountIn(slippageTolerance, amountIn?): CurrencyAmount<TInput>Get the maximum amount in that can be spent via this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountInCurrencyAmount<TInput>-Returns‚ÄãCurrencyAmount<TInput>The amount inDefined in‚Äãentities/trade.ts:456minimumAmountOut‚Äã‚ñ∏ minimumAmountOut(slippageTolerance, amountOut?): CurrencyAmount<TOutput>Get the minimum amount that must be received from this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountOutCurrencyAmount<TOutput>-Returns‚ÄãCurrencyAmount<TOutput>The amount outDefined in‚Äãentities/trade.ts:438worstExecutionPrice‚Äã‚ñ∏ worstExecutionPrice(slippageTolerance): Price<TInput, TOutput>Return the execution price after accounting for slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentthe allowed tolerated slippageReturns‚ÄãPrice<TInput, TOutput>The execution priceDefined in‚Äãentities/trade.ts:471bestTradeExactIn‚Äã‚ñ∏ Static bestTradeExactIn<TInput, TOutput>(pools, currencyAmountIn, currencyOut, __namedParameters?, currentPools?, nextAmountIn?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_INPUT>[]>Given a list of pools, and a fixed amount in, returns the top maxNumResults trades that go from an input token amount to an output token, making at most maxHops hops. Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyAmountInCurrencyAmount<TInput>undefinedused in recursion; the original value of the currencyAmountIn parametercurrencyOutTOutputundefinedthe desired currency out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountInCurrencyAmount<Currency>currencyAmountInexact amount of input currency to spendbestTradesTrade<TInput, TOutput, EXACT_INPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>[]>The exact in tradeDefined in‚Äãentities/trade.ts:495bestTradeExactOut‚Äã‚ñ∏ Static bestTradeExactOut<TInput, TOutput>(pools, currencyIn, currencyAmountOut, __namedParameters?, currentPools?, nextAmountOut?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>similar to the above method but instead targets a fixed output amount given a list of pools, and a fixed amount out, returns the top maxNumResults trades that go from an input token to an output token amount, making at most maxHops hops note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyInTInputundefinedthe currency to spendcurrencyAmountOutCurrencyAmount<TOutput>undefinedthe desired currency amount out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountOutCurrencyAmount<Currency>currencyAmountOutthe exact amount of currency outbestTradesTrade<TInput, TOutput, EXACT_OUTPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>The exact out tradeDefined in‚Äãentities/trade.ts:576createUncheckedTrade‚Äã‚ñ∏ Static createUncheckedTrade<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.inputAmountCurrencyAmount<TInput>-constructorArguments.outputAmountCurrencyAmount<TOutput>-constructorArguments.routeRoute<TInput, TOutput>-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:346createUncheckedTradeWithMultipleRoutes‚Äã‚ñ∏ Static createUncheckedTradeWithMultipleRoutes<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:377exactIn‚Äã‚ñ∏ Static exactIn<TInput, TOutput>(route, amountIn): Promise<Trade<TInput, TOutput, EXACT_INPUT>>Constructs an exact in trade with the given amount in and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact in tradeamountInCurrencyAmount<TInput>The amount being passed inReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>>The exact in tradeDefined in‚Äãentities/trade.ts:194exactOut‚Äã‚ñ∏ Static exactOut<TInput, TOutput>(route, amountOut): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>>Constructs an exact out trade with the given amount out and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact out tradeamountOutCurrencyAmount<TOutput>The amount returned by the tradeReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>>The exact out tradeDefined in‚Äãentities/trade.ts:209fromRoute‚Äã‚ñ∏ Static fromRoute<TInput, TOutput, TTradeType>(route, amount, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade by simulating swaps through the given routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>route to swap throughamountTTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>the amount specified, either input or output, depending on tradeTypetradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The routeDefined in‚Äãentities/trade.ts:226fromRoutes‚Äã‚ñ∏ Static fromRoutes<TInput, TOutput, TTradeType>(routes, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade from routes by simulating swapsType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionroutes{ amount: TTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]the routes to swap through and how much of the amount should be routed through eachtradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The tradeDefined in‚Äãentities/trade.ts:276Helpful?PreviousTickMathNextFeeAmountType parametersTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessorsexecutionPriceinputAmountoutputAmountpriceImpactrouteMethodsmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
152,p.org contracts v3 reference core libraries UnsafeMath,"p.org contracts v3 reference core libraries UnsafeMath.    UnsafeMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesLibrariesBitMathFixedPoint128FixedPoint96FullMathLiquidityMathLowGasSafeMathOraclePositionSafeCastSecondsOutsideSqrtPriceMathSwapMathTickTickBitmapTickMathTransferHelperUnsafeMathGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreLibrariesUnsafeMathHelpful?On this pageUnsafeMathContains methods that perform common math functions but do not do any overflow or underflow checksFunctions‚ÄãdivRoundingUp‚Äã function divRoundingUp( uint256 x, uint256 y ) internal pure returns (uint256 z)CopyReturns ceil(x / y)panics if y == 0Parameters:‚ÄãNameTypeDescriptionxuint256The dividendyuint256The divisorReturn Values:‚ÄãNameTypeDescriptionzuint256The quotient, ceil(x / y)Edit this pageHelpful?PreviousTransferHelperNextOverviewFunctionsdivRoundingUpDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
153,p.org sdk v3 reference classes NonfungiblePositionManager#encodecreate,"p.org sdk v3 reference classes NonfungiblePositionManager#encodecreate.    NonfungiblePositionManager | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesNonfungiblePositionManagerHelpful?On this pageNonfungiblePositionManager@uniswap/v3-sdk / Exports / NonfungiblePositionManagerClass: NonfungiblePositionManagerTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãaddCallParameterscollectCallParameterscreateCallParametersencodeCollectencodeCreateremoveCallParameterssafeTransferFromParametersConstructors‚Äãconstructor‚Äã‚Ä¢ Private new NonfungiblePositionManager()Cannot be constructed.Defined in‚ÄãnonfungiblePositionManager.ts:181Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚ÄãnonfungiblePositionManager.ts:176Methods‚ÄãaddCallParameters‚Äã‚ñ∏ Static addCallParameters(position, options): MethodParametersParameters‚ÄãNameTypepositionPositionoptionsAddLiquidityOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:199collectCallParameters‚Äã‚ñ∏ Static collectCallParameters(options): MethodParametersParameters‚ÄãNameTypeoptionsCollectOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:326createCallParameters‚Äã‚ñ∏ Static createCallParameters(pool): MethodParametersParameters‚ÄãNameTypepoolPoolReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:192encodeCollect‚Äã‚ñ∏ Static Private encodeCollect(options): string[]Parameters‚ÄãNameTypeoptionsCollectOptionsReturns‚Äãstring[]Defined in‚ÄãnonfungiblePositionManager.ts:286encodeCreate‚Äã‚ñ∏ Static Private encodeCreate(pool): stringParameters‚ÄãNameTypepoolPoolReturns‚ÄãstringDefined in‚ÄãnonfungiblePositionManager.ts:183removeCallParameters‚Äã‚ñ∏ Static removeCallParameters(position, options): MethodParametersProduces the calldata for completely or partially exiting a positionParameters‚ÄãNameTypeDescriptionpositionPositionThe position to exitoptionsRemoveLiquidityOptionsAdditional information necessary for generating the calldataReturns‚ÄãMethodParametersThe call parametersDefined in‚ÄãnonfungiblePositionManager.ts:341safeTransferFromParameters‚Äã‚ñ∏ Static safeTransferFromParameters(options): MethodParametersParameters‚ÄãNameTypeoptionsSafeTransferOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:416Helpful?PreviousNoTickDataProviderNextPaymentsTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsaddCallParameterscollectCallParameterscreateCallParametersencodeCollectencodeCreateremoveCallParameterssafeTransferFromParametersDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
154,p.org sdk v3 reference interfaces SafeTransferOptions#sender,p.org sdk v3 reference interfaces SafeTransferOptions#sender.    SafeTransferOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesSafeTransferOptionsHelpful?On this pageSafeTransferOptions@uniswap/v3-sdk / Exports / SafeTransferOptionsInterface: SafeTransferOptionsTable of contents‚ÄãProperties‚ÄãdatarecipientsendertokenIdProperties‚Äãdata‚Äã‚Ä¢ Optional data: stringThe optional parameter that passes data to the onERC721Received call for the stakerDefined in‚ÄãnonfungiblePositionManager.ts:97recipient‚Äã‚Ä¢ recipient: stringThe account that should receive the NFT.Defined in‚ÄãnonfungiblePositionManager.ts:88sender‚Äã‚Ä¢ sender: stringThe account sending the NFT.Defined in‚ÄãnonfungiblePositionManager.ts:83tokenId‚Äã‚Ä¢ tokenId: BigintIshThe id of the token being sent.Defined in‚ÄãnonfungiblePositionManager.ts:93Helpful?PreviousRemoveLiquidityOptionsNextStandardPermitArgumentsTable of contentsPropertiesPropertiesdatarecipientsendertokenIdDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
155,p.org sdk v3 reference classes Pool#fee,"p.org sdk v3 reference classes Pool#fee.    Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPoolHelpful?On this pagePool@uniswap/v3-sdk / Exports / PoolClass: PoolRepresents a V3 poolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1Accessors‚ÄãchainIdtickSpacingtoken0Pricetoken1PriceMethods‚ÄãgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressConstructors‚Äãconstructor‚Äã‚Ä¢ new Pool(tokenA, tokenB, fee, sqrtRatioX96, liquidity, tickCurrent, ticks?)Construct a poolParameters‚ÄãNameTypeDefault valueDescriptiontokenATokenundefinedOne of the tokens in the pooltokenBTokenundefinedThe other token in the poolfeeFeeAmountundefinedThe fee in hundredths of a bips of the input amount of every swap that is collected by the poolsqrtRatioX96BigintIshundefinedThe sqrt of the current ratio of amounts of token1 to token0liquidityBigintIshundefinedThe current value of in range liquiditytickCurrentnumberundefinedThe current tick of the poolticksTickDataProvider | (Tick | TickConstructorArgs)[]NO_TICK_DATA_PROVIDER_DEFAULTThe current state of the pool ticks or a data provider that can return tick dataDefined in‚Äãentities/pool.ts:70Properties‚Äã_token0Price‚Äã‚Ä¢ Private Optional _token0Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:41_token1Price‚Äã‚Ä¢ Private Optional _token1Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:42fee‚Äã‚Ä¢ Readonly fee: FeeAmountDefined in‚Äãentities/pool.ts:35liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/pool.ts:37sqrtRatioX96‚Äã‚Ä¢ Readonly sqrtRatioX96: defaultDefined in‚Äãentities/pool.ts:36tickCurrent‚Äã‚Ä¢ Readonly tickCurrent: numberDefined in‚Äãentities/pool.ts:38tickDataProvider‚Äã‚Ä¢ Readonly tickDataProvider: TickDataProviderDefined in‚Äãentities/pool.ts:39token0‚Äã‚Ä¢ Readonly token0: TokenDefined in‚Äãentities/pool.ts:33token1‚Äã‚Ä¢ Readonly token1: TokenDefined in‚Äãentities/pool.ts:34Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns the chain ID of the tokens in the pool.Returns‚ÄãnumberDefined in‚Äãentities/pool.ts:149tickSpacing‚Äã‚Ä¢ get tickSpacing(): numberReturns‚ÄãnumberDefined in‚Äãentities/pool.ts:317token0Price‚Äã‚Ä¢ get token0Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:109token1Price‚Äã‚Ä¢ get token1Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:124Methods‚ÄãgetInputAmount‚Äã‚ñ∏ getInputAmount(outputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given a desired output amount of a token, return the computed input amount and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptionoutputAmountCurrencyAmount<Token>the output amount for which to quote the input amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The input amount and the pool with updated stateDefined in‚Äãentities/pool.ts:185getOutputAmount‚Äã‚ñ∏ getOutputAmount(inputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given an input amount of a token, return the computed output amount, and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptioninputAmountCurrencyAmount<Token>The input amount for which to quote the output amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limitReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The output amount and the pool with updated stateDefined in‚Äãentities/pool.ts:159involvesToken‚Äã‚ñ∏ involvesToken(token): booleanReturns true if the token is either token0 or token1Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to checkReturns‚ÄãbooleanTrue if token is either token0 or tokenDefined in‚Äãentities/pool.ts:102priceOf‚Äã‚ñ∏ priceOf(token): Price<Token, Token>Return the price of the given token in terms of the other token in the pool.Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to return price ofReturns‚ÄãPrice<Token, Token>The price of the given token, in terms of the other.Defined in‚Äãentities/pool.ts:141swap‚Äã‚ñ∏ Private swap(zeroForOne, amountSpecified, sqrtPriceLimitX96?): Promise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>Executes a swapParameters‚ÄãNameTypeDescriptionzeroForOnebooleanWhether the amount in is token0 or token1amountSpecifieddefaultThe amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>amountCalculatedsqrtRatioX96liquiditytickCurrentDefined in‚Äãentities/pool.ts:215getAddress‚Äã‚ñ∏ Static getAddress(tokenA, tokenB, fee, initCodeHashManualOverride?, factoryAddressOverride?): stringParameters‚ÄãNameTypetokenATokentokenBTokenfeeFeeAmountinitCodeHashManualOverride?stringfactoryAddressOverride?stringReturns‚ÄãstringDefined in‚Äãentities/pool.ts:44Helpful?PreviousPaymentsNextPositionTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1AccessorschainIdtickSpacingtoken0Pricetoken1PriceMethodsgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
156,p.org contracts universal router technical reference#sweep erc721,"p.org contracts universal router technical reference#sweep erc721.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
157,p.org contracts v2 guides smart contract integration building an oracle,"p.org contracts v2 guides smart contract integration building an oracle.    Building an Oracle | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationSmart Contract Quick startImplement a SwapProviding LiquidityBuilding an OracleFlash SwapsPair AddressesSupporting meta transactionsTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolGuidesSmart Contract IntegrationBuilding an OracleHelpful?On this pageBuilding an OracleTo build a price oracle on Uniswap V2, you must first understand the requirements for your use case. Once you understand the kind of price average you require, it is a matter of storing the cumulative price variable from the pair as often as necessary, and computing the average price using two or more observations of the cumulative price variables.Understanding requirementsTo understand your requirements, you should first research the answer to the following questions:Is data freshness important? I.e.: must the price average include the current price?Are recent prices more important than historical prices? I.e.: is the current price given more weight than historical prices?Note your answers for the following discussion.Oracle StrategiesFixed windows‚ÄãIn the case where data freshness is not important and recent prices are weighted equally with historical prices, it is enough to store the cumulative price once per period (e.g. once per 24 hours.)Computing the average price over these data points gives you 'fixed windows', which can be updated after the lapse of each period. We wrote an example oracle of this kind here.This example does not limit the maximum size of the fixed window, i.e. it only requires that the window size is greater than 1 period (e.g. 24 hours).Moving averages‚ÄãIn the case where data freshness is important, you can use a sliding window in which the cumulative price variable is measured more often than once per period.There are at least two kinds of moving averages that you can compute using the Uniswap cumulative price variable.Simple moving averages give equal weight to each price measurement. We have built an example of a sliding window oracle here.Exponential moving averages give more weight to the most recent price measurements. We do not yet have an example written for this type of oracle.You may wish to use exponential moving averages where recent prices are more important than historical prices, e.g. in case of liquidations. However, note that putting more weight on recent prices makes the oracle cheaper to manipulate than weighting all price measurements equally.Computing average prices‚ÄãTo compute the average price given two cumulative price observations, take the difference between the cumulative price at the beginning and end of the period, and divide by the elapsed time between them in seconds. This will produce a fixed point unsigned Q112x112 number that represents the price of one asset relative to the other. This number is represented as a uint224 where the upper 112 bits represent the integer amount, and the lower 112 bits represent the fractional amount.Pairs contain both price0CumulativeLast and price1CumulativeLast, which are ratios of reserves of token1/token0 and token0/token1 respectively. I.e. the price of token0 is expressed in terms of token1/token0, while the price of token1 is expressed in terms of token0/token1.Getting the latest cumulative priceIf you wish to compute the average price between a historical price cumulative observation and the current cumulative price, you should use the cumulative price values from the current block. If the cumulative price has not been updated in the current block, e.g. because there has not been any liquidity event (mint/burn/swap) on the pair in the current block, you can compute the cumulative price counterfactually.We provide a library for use in oracle contracts that has the method UniswapV2OracleLibrary#currentCumulativePrices for getting the cumulative price as of the current block. The current cumulative price returned by this method is computed counterfactually, meaning it requires no call to the relative gas-expensive #sync method on the pair. It is correct regardless of whether a swap has already executed in the current block.Notes on overflowThe UniswapV2Pair cumulative price variables are designed to eventually overflow, i.e. price0CumulativeLast and price1CumulativeLast and blockTimestampLast will overflow through 0.This should not pose an issue to your oracle design, as the price average computation is concerned with differences (i.e. subtraction) between two separate observations of a cumulative price variable. Subtracting between two cumulative price values will result in a number that fits within the range of uint256 as long as the observations are made for periods of max 2^32 seconds, or ~136 years.blockTimestampLast is stored only in a uint32. For the same reason as described above, the pair can save a storage slot, and many SSTORES over the life of the pair, by storing only block.timestamp % uint32(-1). This is feasible because the pair is only concerned with the time that elapses between each liquidity event when updating the cumulative prices, which is always expected to be less than 2^32 seconds.When computing time elapsed within your own oracle, you can simply store the block.timestamp of your observations as uint256, and avoid dealing with overflow math for computing the time elapsed between observations. This is how the ExampleSlidingWindowOracle handles observation timestamps.Integrating the oracle‚ÄãTo integrate an oracle into your contracts, you must ensure the oracle's observations of the cumulative price variable are kept up to date. As long as your oracle is up to date, you can depend on it to produce average prices. The process of keeping your oracle up to date is called 'maintenance'.Oracle maintenance‚ÄãIn order to measure average prices over a period, the oracle must have a way of referencing the cumulative price at the start and end of a period. The recommended way of doing this is by storing these prices in the oracle contract, and calling the oracle frequently enough to store the latest cumulative price.Reliable oracle maintenance is a difficult task, and can become a point of failure in times of congestion. Instead, consider building this functionality directly into the critical calls of your own smart contracts, or incentivize oracle maintenance calls by other parties.No-maintenance option‚ÄãIt is possible to avoid regularly storing this cumulative price at the start of the period by utilizing storage proofs. However, this approach has limitations, especially in regard to gas cost and maximum length of the time period over which the average price can be measured. If you wish to try this approach, you can follow this repository by Keydonix.Keydonix has developed a general purpose price feed oracle built on Uniswap v2 that supports arbitrary time windows (up to 256 blocks) and doesn't require any active maintenance.Edit this pageHelpful?PreviousProviding LiquidityNextFlash SwapsFixed windowsMoving averagesComputing average pricesIntegrating the oracleOracle maintenanceNo-maintenance optionDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
158,p.org sdk v3 reference modules.md#tradecomparator,p.org sdk v3 reference modules.md#tradecomparator. 
159,p.org contracts v2 reference smart contracts router 02#getamountsin,"p.org contracts v2 reference smart contracts router 02#getamountsin.    Router02 | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsRouter02Helpful?On this pageRouter02Because routers are stateless and do not hold token balances, they can be replaced safely and trustlessly, if necessary. This may happen if more efficient smart contract patterns are discovered, or if additional functionality is desired. For this reason, routers have release numbers, starting at 01. This is currently recommended release, 02.CodeUniswapV2Router02.solAddressUniswapV2Router02 is deployed at 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D on the Ethereum mainnet, and the Ropsten, Rinkeby, G√∂rli, and Kovan testnets. It was built from commit 6961711.Read-Only Functionsfactory‚Äãfunction factory() external pure returns (address);CopyReturns factory address.WETH‚Äãfunction WETH() external pure returns (address);CopyReturns the canonical WETH address on the Ethereum mainnet, or the Ropsten, Rinkeby, G√∂rli, or Kovan testnets.quote‚ÄãSee quote.getAmountOut‚ÄãSee getAmountOut.getAmountIn‚ÄãSee getAmountIn.getAmountsOut‚Äãfunction getAmountsOut(uint amountIn, address[] memory path) public view returns (uint[] memory amounts);CopySee getAmountsOut.getAmountsIn‚Äãfunction getAmountsIn(uint amountOut, address[] memory path) public view returns (uint[] memory amounts);CopySee getAmountsIn.State-Changing FunctionsaddLiquidity‚Äãfunction addLiquidity( address tokenA, address tokenB, uint amountADesired, uint amountBDesired, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB, uint liquidity);CopyAdds liquidity to an ERC-20‚áÑERC-20 pool.To cover all possible scenarios, msg.sender should have already given the router an allowance of at least amountADesired/amountBDesired on tokenA/tokenB.Always adds assets at the ideal ratio, according to the price when the transaction is executed.If a pool for the passed tokens does not exists, one is created automatically, and exactly amountADesired/amountBDesired tokens are added.NameTypetokenAaddressA pool token.tokenBaddressA pool token.amountADesireduintThe amount of tokenA to add as liquidity if the B/A price is <= amountBDesired/amountADesired (A depreciates).amountBDesireduintThe amount of tokenB to add as liquidity if the A/B price is <= amountADesired/amountBDesired (B depreciates).amountAMinuintBounds the extent to which the B/A price can go up before the transaction reverts. Must be <= amountADesired.amountBMinuintBounds the extent to which the A/B price can go up before the transaction reverts. Must be <= amountBDesired.toaddressRecipient of the liquidity tokens.deadlineuintUnix timestamp after which the transaction will revert.amountAuintThe amount of tokenA sent to the pool.amountBuintThe amount of tokenB sent to the pool.liquidityuintThe amount of liquidity tokens minted.addLiquidityETH‚Äãfunction addLiquidityETH( address token, uint amountTokenDesired, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external payable returns (uint amountToken, uint amountETH, uint liquidity);CopyAdds liquidity to an ERC-20‚áÑWETH pool with ETH.To cover all possible scenarios, msg.sender should have already given the router an allowance of at least amountTokenDesired on token.Always adds assets at the ideal ratio, according to the price when the transaction is executed.msg.value is treated as a amountETHDesired.Leftover ETH, if any, is returned to msg.sender.If a pool for the passed token and WETH does not exists, one is created automatically, and exactly amountTokenDesired/msg.value tokens are added.NameTypetokenaddressA pool token.amountTokenDesireduintThe amount of token to add as liquidity if the WETH/token price is <= msg.value/amountTokenDesired (token depreciates).msg.value (amountETHDesired)uintThe amount of ETH to add as liquidity if the token/WETH price is <= amountTokenDesired/msg.value (WETH depreciates).amountTokenMinuintBounds the extent to which the WETH/token price can go up before the transaction reverts. Must be <= amountTokenDesired.amountETHMinuintBounds the extent to which the token/WETH price can go up before the transaction reverts. Must be <= msg.value.toaddressRecipient of the liquidity tokens.deadlineuintUnix timestamp after which the transaction will revert.amountTokenuintThe amount of token sent to the pool.amountETHuintThe amount of ETH converted to WETH and sent to the pool.liquidityuintThe amount of liquidity tokens minted.removeLiquidity‚Äãfunction removeLiquidity( address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB);CopyRemoves liquidity from an ERC-20‚áÑERC-20 pool.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenAaddressA pool token.tokenBaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountAMinuintThe minimum amount of tokenA that must be received for the transaction not to revert.amountBMinuintThe minimum amount of tokenB that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountAuintThe amount of tokenA received.amountBuintThe amount of tokenB received.removeLiquidityETH‚Äãfunction removeLiquidityETH( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external returns (uint amountToken, uint amountETH);CopyRemoves liquidity from an ERC-20‚áÑWETH pool and receive ETH.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountTokenuintThe amount of token received.amountETHuintThe amount of ETH received.removeLiquidityWithPermit‚Äãfunction removeLiquidityWithPermit( address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountA, uint amountB);CopyRemoves liquidity from an ERC-20‚áÑERC-20 pool without pre-approval, thanks to permit.NameTypetokenAaddressA pool token.tokenBaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountAMinuintThe minimum amount of tokenA that must be received for the transaction not to revert.amountBMinuintThe minimum amount of tokenB that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountAuintThe amount of tokenA received.amountBuintThe amount of tokenB received.removeLiquidityETHWithPermit‚Äãfunction removeLiquidityETHWithPermit( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountToken, uint amountETH);CopyRemoves liquidity from an ERC-20‚áÑWETTH pool and receive ETH without pre-approval, thanks to permit.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountTokenuintThe amount of token received.amountETHuintThe amount of ETH received.removeLiquidityETHSupportingFeeOnTransferTokens‚Äãfunction removeLiquidityETHSupportingFeeOnTransferTokens( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external returns (uint amountETH);CopyIdentical to removeLiquidityETH, but succeeds for tokens that take a fee on transfer.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountETHuintThe amount of ETH received.removeLiquidityETHWithPermitSupportingFeeOnTransferTokens‚Äãfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountETH);CopyIdentical to removeLiquidityETHWithPermit, but succeeds for tokens that take a fee on transfer.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountETHuintThe amount of ETH received.swapExactTokensForTokens‚Äãfunction swapExactTokensForTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopySwaps an exact amount of input tokens for as many output tokens as possible, along the route determined by the path. The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountIn on the input token.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapTokensForExactTokens‚Äãfunction swapTokensForExactTokens( uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopyReceive an exact amount of output tokens for as few input tokens as possible, along the route determined by the path. The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate tokens to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountInMax on the input token.NameTypeamountOutuintThe amount of output tokens to receive.amountInMaxuintThe maximum amount of input tokens that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactETHForTokens‚Äãfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts);CopySwaps an exact amount of ETH for as many output tokens as possible, along the route determined by the path. The first element of path must be WETH, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).NameTypemsg.value (amountIn)uintThe amount of ETH to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapTokensForExactETH‚Äãfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopyReceive an exact amount of ETH for as few input tokens as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountInMax on the input token.If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountOutuintThe amount of ETH to receive.amountInMaxuintThe maximum amount of input tokens that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of ETH.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactTokensForETH‚Äãfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopySwaps an exact amount of tokens for as much ETH as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the ETH.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapETHForExactTokens‚Äãfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts);CopyReceive an exact amount of tokens for as little ETH as possible, along the route determined by the path. The first element of path must be WETH, the last is the output token and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).Leftover ETH, if any, is returned to msg.sender.NameTypeamountOutuintThe amount of tokens to receive.msg.value (amountInMax)uintThe maximum amount of ETH that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactTokensForTokensSupportingFeeOnTransferTokens‚Äãfunction swapExactTokensForTokensSupportingFeeOnTransferTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external;CopyIdentical to swapExactTokensForTokens, but succeeds for tokens that take a fee on transfer.msg.sender should have already given the router an allowance of at least amountIn on the input token.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.swapExactETHForTokensSupportingFeeOnTransferTokens‚Äãfunction swapExactETHForTokensSupportingFeeOnTransferTokens( uint amountOutMin, address[] calldata path, address to, uint deadline) external payable;CopyIdentical to swapExactETHForTokens, but succeeds for tokens that take a fee on transfer.NameTypemsg.value (amountIn)uintThe amount of ETH to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.swapExactTokensForETHSupportingFeeOnTransferTokens‚Äãfunction swapExactTokensForETHSupportingFeeOnTransferTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external;CopyIdentical to swapExactTokensForETH, but succeeds for tokens that take a fee on transfer.If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the ETH.deadlineuintUnix timestamp after which the transaction will revert.Interfaceimport '@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol';Copypragma solidity >=0.6.2;interface IUniswapV2Router01 { function factory() external pure returns (address); function WETH() external pure returns (address); function addLiquidity(  address tokenA,  address tokenB,  uint amountADesired,  uint amountBDesired,  uint amountAMin,  uint amountBMin,  address to,  uint deadline ) external returns (uint amountA, uint amountB, uint liquidity); function addLiquidityETH(  address token,  uint amountTokenDesired,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external payable returns (uint amountToken, uint amountETH, uint liquidity); function removeLiquidity(  address tokenA,  address tokenB,  uint liquidity,  uint amountAMin,  uint amountBMin,  address to,  uint deadline ) external returns (uint amountA, uint amountB); function removeLiquidityETH(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external returns (uint amountToken, uint amountETH); function removeLiquidityWithPermit(  address tokenA,  address tokenB,  uint liquidity,  uint amountAMin,  uint amountBMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountA, uint amountB); function removeLiquidityETHWithPermit(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountToken, uint amountETH); function swapExactTokensForTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external returns (uint[] memory amounts); function swapTokensForExactTokens(  uint amountOut,  uint amountInMax,  address[] calldata path,  address to,  uint deadline ) external returns (uint[] memory amounts); function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)  external  payable  returns (uint[] memory amounts); function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)  external  returns (uint[] memory amounts); function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)  external  returns (uint[] memory amounts); function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)  external  payable  returns (uint[] memory amounts); function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB); function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut); function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn); function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts); function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);}interface IUniswapV2Router02 is IUniswapV2Router01 { function removeLiquidityETHSupportingFeeOnTransferTokens(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external returns (uint amountETH); function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountETH); function swapExactTokensForTokensSupportingFeeOnTransferTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external; function swapExactETHForTokensSupportingFeeOnTransferTokens(  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external payable; function swapExactTokensForETHSupportingFeeOnTransferTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external;}CopyABIimport IUniswapV2Router02 from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'Copyhttps://unpkg.com/@uniswap/v2-periphery@1.1.0-beta.0/build/IUniswapV2Router02.jsonEdit this pageHelpful?PreviousRouter01NextCommon ErrorsfactoryWETHquotegetAmountOutgetAmountIngetAmountsOutgetAmountsInaddLiquidityaddLiquidityETHremoveLiquidityremoveLiquidityETHremoveLiquidityWithPermitremoveLiquidityETHWithPermitremoveLiquidityETHSupportingFeeOnTransferTokensremoveLiquidityETHWithPermitSupportingFeeOnTransferTokensswapExactTokensForTokensswapTokensForExactTokensswapExactETHForTokensswapTokensForExactETHswapExactTokensForETHswapETHForExactTokensswapExactTokensForTokensSupportingFeeOnTransferTokensswapExactETHForTokensSupportingFeeOnTransferTokensswapExactTokensForETHSupportingFeeOnTransferTokensDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
160,p.org sdk v3 reference classes Position# mintamounts,"p.org sdk v3 reference classes Position# mintamounts.    Position | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPositionHelpful?On this pagePosition@uniswap/v3-sdk / Exports / PositionClass: PositionRepresents a position on a Uniswap V3 PoolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessors‚Äãamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethods‚ÄãburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsConstructors‚Äãconstructor‚Äã‚Ä¢ new Position(__namedParameters)Constructs a position for a given pool with the given liquidityParameters‚ÄãNameType__namedParametersPositionConstructorArgsDefined in‚Äãentities/position.ts:40Properties‚Äã_mintAmounts‚Äã‚Ä¢ Private _mintAmounts: null | Readonly<{ amount0: default ; amount1: default }> = nullDefined in‚Äãentities/position.ts:31_token0Amount‚Äã‚Ä¢ Private _token0Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:29_token1Amount‚Äã‚Ä¢ Private _token1Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:30liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/position.ts:26pool‚Äã‚Ä¢ Readonly pool: PoolDefined in‚Äãentities/position.ts:23tickLower‚Äã‚Ä¢ Readonly tickLower: numberDefined in‚Äãentities/position.ts:24tickUpper‚Äã‚Ä¢ Readonly tickUpper: numberDefined in‚Äãentities/position.ts:25Accessors‚Äãamount0‚Äã‚Ä¢ get amount0(): CurrencyAmount<Token>Returns the amount of token0 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:68amount1‚Äã‚Ä¢ get amount1(): CurrencyAmount<Token>Returns the amount of token1 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:100mintAmounts‚Äã‚Ä¢ get mintAmounts(): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at the current price for the poolReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>Defined in‚Äãentities/position.ts:258token0PriceLower‚Äã‚Ä¢ get token0PriceLower(): Price<Token, Token>Returns the price of token0 at the lower tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:54token0PriceUpper‚Äã‚Ä¢ get token0PriceUpper(): Price<Token, Token>Returns the price of token0 at the upper tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:61Methods‚ÄãburnAmountsWithSlippage‚Äã‚ñ∏ burnAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercenttolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:213mintAmountsWithSlippage‚Äã‚ñ∏ mintAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to safely mint the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentTolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:157ratiosAfterSlippage‚Äã‚ñ∏ Private ratiosAfterSlippage(slippageTolerance): ObjectReturns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentageParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe amount by which the price can 'slip' before the transaction will revertReturns‚ÄãObjectThe sqrt ratios after slippageNameTypesqrtRatioX96LowerdefaultsqrtRatioX96UpperdefaultDefined in‚Äãentities/position.ts:134fromAmount0‚Äã‚ñ∏ Static fromAmount0(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited amount of token1Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:354fromAmount1‚Äã‚ñ∏ Static fromAmount1(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited amount of token0Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumberReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:378fromAmounts‚Äã‚ñ∏ Static fromAmounts(__namedParameters): PositionComputes the maximum amount of liquidity received for a given amount of token0, token1, and the prices at the tick boundaries.Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe amount of liquidity for the positionDefined in‚Äãentities/position.ts:312Helpful?PreviousPoolNextPositionLibraryTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessorsamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethodsburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
161,p.org sdk 2.0.0 guides trading,p.org sdk 2.0.0 guides trading. 
162,p.org contracts v3 reference periphery interfaces IPoolInitializer,"p.org contracts v3 reference periphery interfaces IPoolInitializer.    IPoolInitializer | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesIERC20MetadataIERC721PermitIMulticallINonfungiblePositionManagerINonfungibleTokenPositionDescriptorIPeripheryImmutableStateIPeripheryPaymentsIPeripheryPaymentsWithFeeIPoolInitializerIQuoterIQuoterV2ISelfPermitISwapRouterITickLensIV3MigratorexternalLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryInterfacesIPoolInitializerHelpful?On this pageIPoolInitializerProvides a method for creating and initializing a pool, if necessary, for bundling with other methods that require the pool to exist.Functions‚ÄãcreateAndInitializePoolIfNecessary‚Äã function createAndInitializePoolIfNecessary( address token0, address token1, uint24 fee, uint160 sqrtPriceX96 ) external returns (address pool)CopyCreates a new pool if it does not exist, then initializes if not initializedThis method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a poolParameters:‚ÄãNameTypeDescriptiontoken0addressThe contract address of token0 of the pooltoken1addressThe contract address of token1 of the poolfeeuint24The fee amount of the v3 pool for the specified token pairsqrtPriceX96uint160The initial square root price of the pool as a Q64.96 valueReturn Values:‚ÄãNameTypeDescriptionpooladdressReturns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessaryEdit this pageHelpful?PreviousIPeripheryPaymentsWithFeeNextIQuoterFunctionscreateAndInitializePoolIfNecessaryDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
163,p.org sdk v2 guides fetching data,"p.org sdk v2 guides fetching data.    Fetching Data | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKOverviewGuidesSDK Quick startFetching DataPricingTradingPair AddressesTechnical ReferenceGetting StartedTokenPairRouteTradeFractionsFetcherOther ExportsV1 SDKüè†V2 SDKGuidesFetching DataHelpful?On this pageFetching DataLooking for a quickstart?While the SDK is fully self-contained, there are two cases where it needs on-chain data to function. This guide will detail both of these cases, and offer some strategies that you can use to fetch this data.Case 1: TokensUnsurprisingly, the SDK needs some notion of an ERC-20 token to be able to function. This immediately raises the question of where data about tokens comes from.As an example, let's try to represent DAI in a format the SDK can work with. To do so, we need at least 3 pieces of data: a chainId, a token address, and how many decimals the token has. We also may be interested in the symbol and/or name of the token.Identifying Data‚ÄãThe first two pieces of data ‚Äî chainId and token address ‚Äî must be provided by us. Thinking about it, this makes sense, as there's really no other way to unambiguously identify a token.So, in the case of DAI, we know that the chainId is 1 (we're on mainnet), and the token address is 0x6B175474E89094C44Da98b954EedeAC495271d0F. Note that it's very important to externally verify token addresses. Don't use addresses from sources you don't trust!Required Data‚ÄãThe next piece of data we need is decimals.Provided by the User‚ÄãOne option here is to simply pass in the correct value, which we may know is 18. At this point, we're ready to represent DAI as a Token:import { ChainId, Token } from '@uniswap/sdk'const chainId = ChainId.MAINNETconst tokenAddress = '0x6B175474E89094C44Da98b954EedeAC495271d0F' // must be checksummedconst decimals = 18const DAI = new Token(chainId, tokenAddress, decimals)CopyIf we don't know or don't want to hardcode the value, we could look it up ourselves via any method of retrieving on-chain data in a function that looks something like:import { ChainId } from '@uniswap/sdk'async function getDecimals(chainId: ChainId, tokenAddress: string): Promise<number> { // implementation details}CopyFetched by the SDK‚ÄãIf we don't want to provide or look up the value ourselves, we can ask the SDK to look it up for us with Fetcher.fetchTokenDataimport { ChainId, Token, Fetcher } from '@uniswap/sdk'const chainId = ChainId.MAINNETconst tokenAddress = '0x6B175474E89094C44Da98b954EedeAC495271d0F' // must be checksummed// note that you may want/need to handle this async code differently,// for example if top-level await is not an optionconst DAI: Token = await Fetcher.fetchTokenData(chainId, tokenAddress)CopyBy default, this method will use the default provider defined by ethers.js. If you're already using ethers.js in your application, you may pass in your provider as a 3rd argument. If you're using another library, you'll have to fetch the data separately.Optional Data‚ÄãFinally, we can talk about symbol and name. Because these fields aren't used anywhere in the SDK itself, they're optional, and can be provided if you want to use them in your application. However, the SDK will not fetch them for you, so you'll have to provide them:import { ChainId, Token } from '@uniswap/sdk'const DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', 18, 'DAI', 'Dai Stablecoin')Copyor:import { ChainId, Token, Fetcher } from '@uniswap/sdk'// note that you may want/need to handle this async code differently,// for example if top-level await is not an optionconst DAI = await Fetcher.fetchTokenData( ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', undefined, 'DAI', 'Dai Stablecoin')CopyCase 2: PairsNow that we've explored how to define a token, let's talk about pairs. To read more about what Uniswap pairs are, see PairAs an example, let's try to represent the DAI-WETH pair.Identifying Data‚ÄãEach pair consists of two tokens (see previous section). Note that WETH used by the router is exported by the SDK.Required Data‚ÄãThe data we need is the reserves of the pair. To read more about reserves, see getReserves.Provided by the User‚ÄãOne option here is to simply pass in values which we've fetched ourselves to create a Pair:import { ChainId, Token, WETH, Pair, TokenAmount } from '@uniswap/sdk'const DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', 18)async function getPair(): Promise<Pair> { const pairAddress = Pair.getAddress(DAI, WETH[DAI.chainId]) const reserves = [ /* use pairAddress to fetch reserves here */ ] const [reserve0, reserve1] = reserves const tokens = [DAI, WETH[DAI.chainId]] const [token0, token1] = tokens[0].sortsBefore(tokens[1]) ? tokens : [tokens[1], tokens[0]] const pair = new Pair(new TokenAmount(token0, reserve0), new TokenAmount(token1, reserve1)) return pair}CopyNote that these values can change as frequently as every block, and should be kept up-to-date.Fetched by the SDK‚ÄãIf we don't want to look up the value ourselves, we can ask the SDK to look them up for us with Fetcher.fetchTokenData:import { ChainId, Token, WETH, Fetcher } from '@uniswap/sdk'const DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', 18)// note that you may want/need to handle this async code differently,// for example if top-level await is not an optionconst pair = await Fetcher.fetchPairData(DAI, WETH[DAI.chainId])CopyBy default, this method will use the default provider defined by ethers.js. If you're already using ethers.js in your application, you may pass in your provider as a 3rd argument. If you're using another library, you'll have to fetch the data separately.Note that these values can change as frequently as every block, and should be kept up-to-date.Helpful?PreviousSDK Quick startNextPricingIdentifying DataRequired DataProvided by the UserFetched by the SDKOptional DataIdentifying DataRequired DataProvided by the UserFetched by the SDKDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
164,p.org contracts v3 reference periphery libraries NFTSVG,"p.org contracts v3 reference periphery libraries NFTSVG.    NFTSVG | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesBase64BytesLibCallbackValidationChainIdHexStringsLiquidityAmountsNFTDescriptorNFTSVGOracleLibraryPathPoolAddressPoolTicksCounterPositionKeyTokenRatioSortOrderTransferHelperWeightedOracleLibraryStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryLibrariesNFTSVGHelpful?On this pageNFTSVGProvides a function for generating an SVG associated with a Uniswap NFTFunctions‚ÄãgenerateSVG‚Äã function generateSVG( ) internal returns (string svg)CopygetCurve‚Äã function getCurve( ) internal returns (string curve)CopygenerateSVGCurveCircle‚Äã function generateSVGCurveCircle( ) internal returns (string svg)CopyrangeLocation‚Äã function rangeLocation( ) internal returns (string, string)CopyisRare‚Äã function isRare( ) internal returns (bool)CopyEdit this pageHelpful?PreviousNFTDescriptorNextOracleLibraryFunctionsgenerateSVGgetCurvegenerateSVGCurveCirclerangeLocationisRareDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
165,p.org sdk v3 reference classes Route,"p.org sdk v3 reference classes Route.    Route | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesRouteHelpful?On this pageRoute@uniswap/v3-sdk / Exports / RouteClass: Route<TInput, TOutput>Represents a list of pools through which a swap can occurType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input tokenTOutputextends CurrencyThe output tokenTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_midPriceinputoutputpoolstokenPathAccessors‚ÄãchainIdmidPriceConstructors‚Äãconstructor‚Äã‚Ä¢ new Route<TInput, TOutput>(pools, input, output)Creates an instance of route.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDescriptionpoolsPool[]An array of Pool objects, ordered by the route the swap will takeinputTInputThe input tokenoutputTOutputThe output tokenDefined in‚Äãentities/route.ts:25Properties‚Äã_midPrice‚Äã‚Ä¢ Private _midPrice: null | Price<TInput, TOutput> = nullDefined in‚Äãentities/route.ts:17input‚Äã‚Ä¢ Readonly input: TInputDefined in‚Äãentities/route.ts:14output‚Äã‚Ä¢ Readonly output: TOutputDefined in‚Äãentities/route.ts:15pools‚Äã‚Ä¢ Readonly pools: Pool[]Defined in‚Äãentities/route.ts:12tokenPath‚Äã‚Ä¢ Readonly tokenPath: Token[]Defined in‚Äãentities/route.ts:13Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns‚ÄãnumberDefined in‚Äãentities/route.ts:54midPrice‚Äã‚Ä¢ get midPrice(): Price<TInput, TOutput>Returns the mid price of the routeReturns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/route.ts:61Helpful?PreviousPositionLibraryNextSelfPermitType parametersTable of contentsConstructorsPropertiesAccessorsConstructorsconstructorProperties_midPriceinputoutputpoolstokenPathAccessorschainIdmidPriceDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
166,p.org contracts v3 reference periphery V3Migrator,p.org contracts v3 reference periphery V3Migrator.    V3Migrator | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryV3MigratorHelpful?On this pageV3MigratorFunctions‚Äãconstructor‚Äã function constructor( ) publicCopyreceive‚Äã function receive( ) externalCopymigrate‚Äã function migrate( ) externalCopyEdit this pageHelpful?PreviousSwapRouterNextDeployment AddressesFunctionsconstructorreceivemigrateDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
167,p.org sdk core reference enums SupportedChainId#ropsten,p.org sdk core reference enums SupportedChainId#ropsten.    SupportedChainId | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesenumsRoundingSupportedChainIdTradeTypeV2 SDKV1 SDKüè†Core SDKTechnical ReferenceenumsSupportedChainIdHelpful?On this pageSupportedChainId@uniswap/sdk-core / Exports / SupportedChainIdEnumeration: SupportedChainIdTable of contents‚ÄãEnumeration Members‚ÄãARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENEnumeration Members‚ÄãARBITRUM_ONE‚Äã‚Ä¢ ARBITRUM_ONE = 42161Defined in‚Äãconstants.ts:10ARBITRUM_RINKEBY‚Äã‚Ä¢ ARBITRUM_RINKEBY = 421611Defined in‚Äãconstants.ts:11CELO‚Äã‚Ä¢ CELO = 42220Defined in‚Äãconstants.ts:19CELO_ALFAJORES‚Äã‚Ä¢ CELO_ALFAJORES = 44787Defined in‚Äãconstants.ts:20GOERLI‚Äã‚Ä¢ GOERLI = 5Defined in‚Äãconstants.ts:7KOVAN‚Äã‚Ä¢ KOVAN = 42Defined in‚Äãconstants.ts:8MAINNET‚Äã‚Ä¢ MAINNET = 1Defined in‚Äãconstants.ts:4OPTIMISM‚Äã‚Ä¢ OPTIMISM = 10Defined in‚Äãconstants.ts:13OPTIMISM_GOERLI‚Äã‚Ä¢ OPTIMISM_GOERLI = 420Defined in‚Äãconstants.ts:14POLYGON‚Äã‚Ä¢ POLYGON = 137Defined in‚Äãconstants.ts:16POLYGON_MUMBAI‚Äã‚Ä¢ POLYGON_MUMBAI = 80001Defined in‚Äãconstants.ts:17RINKEBY‚Äã‚Ä¢ RINKEBY = 4Defined in‚Äãconstants.ts:6ROPSTEN‚Äã‚Ä¢ ROPSTEN = 3Defined in‚Äãconstants.ts:5Helpful?PreviousRoundingNextTradeTypeTable of contentsEnumeration MembersEnumeration MembersARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
168,p.org contracts v3 reference core interfaces pool IUniswapV3PoolActions,"p.org contracts v3 reference core interfaces pool IUniswapV3PoolActions.    IUniswapV3PoolActions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesIERC20MinimalIUniswapV3FactoryIUniswapV3PoolIUniswapV3PoolDeployercallbackPoolIUniswapV3PoolActionsIUniswapV3PoolDerivedStateIUniswapV3PoolEventsIUniswapV3PoolImmutablesIUniswapV3PoolOwnerActionsIUniswapV3PoolStateLibrariesGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreInterfacesPoolIUniswapV3PoolActionsHelpful?On this pageIUniswapV3PoolActionsContains pool methods that can be called by anyoneFunctions‚Äãinitialize‚Äã function initialize( uint160 sqrtPriceX96 ) externalCopySets the initial price for the poolPrice is represented as a sqrt(amountToken1/amountToken0) Q64.96 valueParameters:‚ÄãNameTypeDescriptionsqrtPriceX96uint160the initial sqrt price of the pool as a Q64.96mint‚Äã function mint( address recipient, int24 tickLower, int24 tickUpper, uint128 amount, bytes data ) external returns (uint256 amount0, uint256 amount1)CopyAdds liquidity for the given recipient/tickLower/tickUpper positionThe caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.Parameters:‚ÄãNameTypeDescriptionrecipientaddressThe address for which the liquidity will be createdtickLowerint24The lower tick of the position in which to add liquiditytickUpperint24The upper tick of the position in which to add liquidityamountuint128The amount of liquidity to mintdatabytesAny data that should be passed through to the callbackReturn Values:‚ÄãNameTypeDescriptionamount0uint256The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callbackamount1uint256The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callbackcollect‚Äã function collect( address recipient, int24 tickLower, int24 tickUpper, uint128 amount0Requested, uint128 amount1Requested ) external returns (uint128 amount0, uint128 amount1)CopyCollects tokens owed to a positionDoes not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.Parameters:‚ÄãNameTypeDescriptionrecipientaddressThe address which should receive the fees collectedtickLowerint24The lower tick of the position for which to collect feestickUpperint24The upper tick of the position for which to collect feesamount0Requesteduint128How much token0 should be withdrawn from the fees owedamount1Requesteduint128How much token1 should be withdrawn from the fees owedReturn Values:‚ÄãNameTypeDescriptionamount0uint128The amount of fees collected in token0amount1uint128The amount of fees collected in token1burn‚Äã function burn( int24 tickLower, int24 tickUpper, uint128 amount ) external returns (uint256 amount0, uint256 amount1)CopyBurn liquidity from the sender and account tokens owed for the liquidity to the positionCan be used to trigger a recalculation of fees owed to a position by calling with an amount of 0 Fees must be collected separately via a call to #collectParameters:‚ÄãNameTypeDescriptiontickLowerint24The lower tick of the position for which to burn liquiditytickUpperint24The upper tick of the position for which to burn liquidityamountuint128How much liquidity to burnReturn Values:‚ÄãNameTypeDescriptionamount0uint256The amount of token0 sent to the recipientamount1uint256The amount of token1 sent to the recipientswap‚Äã function swap( address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data ) external returns (int256 amount0, int256 amount1)CopySwap token0 for token1, or token1 for token0The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallbackParameters:‚ÄãNameTypeDescriptionrecipientaddressThe address to receive the output of the swapzeroForOneboolThe direction of the swap, true for token0 to token1, false for token1 to token0amountSpecifiedint256The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96uint160The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapdatabytesAny data passed through to the callbackReturn Values:‚ÄãNameTypeDescriptionamount0int256The delta of the balance of token0 of the pool, exact when negative, minimum when positiveamount1int256The delta of the balance of token1 of the pool, exact when negative, minimum when positiveflash‚Äã function flash( address recipient, uint256 amount0, uint256 amount1, bytes data ) externalCopyReceive token0 and/or token1 and pay it back, plus a fee, in the callbackThe caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callbackParameters:‚ÄãNameTypeDescriptionrecipientaddressThe address which will receive the token0 and token1 amountsamount0uint256The amount of token0 to sendamount1uint256The amount of token1 to senddatabytesAny data to be passed through to the callbackincreaseObservationCardinalityNext‚Äã function increaseObservationCardinalityNext( uint16 observationCardinalityNext ) externalCopyIncrease the maximum number of price and liquidity observations that this pool will storeThis method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.Parameters:‚ÄãNameTypeDescriptionobservationCardinalityNextuint16The desired minimum number of observations for the pool to storeEdit this pageHelpful?PreviousIUniswapV3SwapCallbackNextIUniswapV3PoolDerivedStateFunctionsinitializemintcollectburnswapflashincreaseObservationCardinalityNextDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
169,p.org sdk core reference classes Token#chainid,"p.org sdk core reference classes Token#chainid.    Token | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesTokenHelpful?On this pageToken@uniswap/sdk-core / Exports / TokenClass: TokenRepresents an ERC20 token with a unique address and some metadata.Hierarchy‚ÄãBaseCurrency‚Ü≥ TokenTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãaddresschainIddecimalsisNativeisTokennamesymbolAccessors‚ÄãwrappedMethods‚ÄãequalssortsBeforeConstructors‚Äãconstructor‚Äã‚Ä¢ new Token(chainId, address, decimals, symbol?, name?, bypassChecksum?)Parameters‚ÄãNameTypeDescriptionchainIdnumberBaseCurrency#chainIdaddressstringThe contract address on the chain on which this token livesdecimalsnumberBaseCurrency#decimalssymbol?stringBaseCurrency#symbolname?stringBaseCurrency#namebypassChecksum?booleanIf true it only checks for length === 42, startsWith 0x and contains only hex charactersOverrides‚ÄãBaseCurrency.constructorDefined in‚Äãentities/token.ts:27Properties‚Äãaddress‚Äã‚Ä¢ Readonly address: stringThe contract address on the chain on which this token livesDefined in‚Äãentities/token.ts:16chainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãBaseCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãBaseCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: falseOverrides‚ÄãBaseCurrency.isNativeDefined in‚Äãentities/token.ts:10isToken‚Äã‚Ä¢ Readonly isToken: trueOverrides‚ÄãBaseCurrency.isTokenDefined in‚Äãentities/token.ts:11name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãBaseCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãBaseCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29Accessors‚Äãwrapped‚Äã‚Ä¢ get wrapped(): TokenReturn this token, which does not need to be wrappedReturns‚ÄãTokenOverrides‚ÄãBaseCurrency.wrappedDefined in‚Äãentities/token.ts:66Methods‚Äãequals‚Äã‚ñ∏ equals(other): booleanReturns true if the two tokens are equivalent, i.e. have the same chainId and address.Parameters‚ÄãNameTypeDescriptionotherCurrencyother token to compareReturns‚ÄãbooleanOverrides‚ÄãBaseCurrency.equalsDefined in‚Äãentities/token.ts:47sortsBefore‚Äã‚ñ∏ sortsBefore(other): booleanReturns true if the address of this token sorts before the address of the other tokenThrowsif the tokens have the same addressThrowsif the tokens are on different chainsParameters‚ÄãNameTypeDescriptionotherTokenother token to compareReturns‚ÄãbooleanDefined in‚Äãentities/token.ts:57Helpful?PreviousPriceNextRoundingHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesaddresschainIddecimalsisNativeisTokennamesymbolAccessorswrappedMethodsequalssortsBeforeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
170,p.org contracts v2 concepts protocol overview smart contracts#minimum liquidity,"p.org contracts v2 concepts protocol overview smart contracts#minimum liquidity.    Smart contracts | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewHow Uniswap worksEcosystem ParticipantsSmart contractsGlossaryCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolConceptsProtocol OverviewSmart contractsHelpful?On this pageSmart contractsUniswap V2 is a binary smart contract system. Core contracts provide fundamental safety guarantees for all parties interacting with Uniswap. Periphery contracts interact with one or more core contracts but are not themselves part of the core.CoreSource codeThe core consists of a singleton factory and many pairs, which the factory is responsible for creating and indexing. These contracts are quite minimal, even brutalist. The simple rationale for this is that contracts with a smaller surface area are easier to reason about, less bug-prone, and more functionally elegant. Perhaps the biggest upside of this design is that many desired properties of the system can be asserted directly in the code, leaving little room for error. One downside, however, is that core contracts are somewhat user-unfriendly. In fact, interacting directly with these contracts is not recommended for most use cases. Instead, a periphery contract should be used.Factory‚ÄãReference documentationThe factory holds the generic bytecode responsible for powering pairs. Its primary job is to create one and only one smart contract per unique token pair. It also contains logic to turn on the protocol charge.Pairs‚ÄãReference documentationReference documentation (ERC-20)Pairs have two primary purposes: serving as automated market makers and keeping track of pool token balances. They also expose data which can be used to build decentralized¬†price oracles.PeripherySource codeThe periphery is a constellation of smart contracts designed to support domain-specific interactions with the core. Because of Uniswap's permissionless nature, the contracts described below have no special privileges, and are in fact only a small subset of the universe of possible periphery-like contracts. However, they are useful examples of how to safely and efficiently interact with Uniswap V2.Library‚ÄãReference documentationThe library provides a variety of convenience functions for fetching data and pricing.Router‚ÄãReference documentationThe router, which uses the library, fully supports all the basic requirements of a front-end offering trading and liquidity management functionality. Notably, it natively supports multi-pair trades (e.g. x to y to z), treats ETH as a first-class citizen, and offers meta-transactions for removing liquidity.Design DecisionsThe following sections describe some of the notable design decisions made in Uniswap V2. These are safe to skip unless you're interested in gaining a deep technical understanding of how V2 works under the hood, or writing smart contract integrations!Sending Tokens‚ÄãTypically, smart contracts which need tokens to perform some functionality require would-be interactors to first make an approval on the token contract, then call a function that in turn calls transferFrom on the token contract. This is not how V2 pairs accept tokens. Instead, pairs check their token balances at the end of every interaction. Then, at the beginning of the next interaction, current balances are differenced against the stored values to determine the amount of tokens that were sent by the current interactor. See the whitepaper for a justification of why this is the case, but the takeaway is that tokens must be transferred to the pair before calling any token-requiring method (the one exception to this rule is Flash Swaps.WETH‚ÄãUnlike Uniswap V1 pools, V2 pairs do not support ETH directly, so ETH‚áÑERC-20 pairs must be emulated with WETH. The motivation behind this choice was to remove ETH-specific code in the core, resulting in a leaner codebase. End users can be kept fully ignorant of this implementation detail, however, by simply wrapping/unwrapping ETH in the periphery.The router fully supports interacting with any WETH pair via ETH.Minimum Liquidity‚ÄãTo ameliorate rounding errors and increase the theoretical minimum tick size for liquidity provision, pairs burn the first MINIMUM_LIQUIDITY pool tokens. For the vast majority of pairs, this will represent a trivial value. The burning happens automatically during the first liquidity provision, after which point the totalSupply is forevermore bounded.Edit this pageHelpful?PreviousEcosystem ParticipantsNextGlossaryFactoryPairsLibraryRouterSending TokensWETHMinimum LiquidityDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
171,p.org sdk v3 reference classes LiquidityMath#constructor,"p.org sdk v3 reference classes LiquidityMath#constructor.    LiquidityMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesLiquidityMathHelpful?On this pageLiquidityMath@uniswap/v3-sdk / Exports / LiquidityMathClass: LiquidityMathTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãaddDeltaConstructors‚Äãconstructor‚Äã‚Ä¢ Private new LiquidityMath()Cannot be constructed.Defined in‚Äãutils/liquidityMath.ts:8Methods‚ÄãaddDelta‚Äã‚ñ∏ Static addDelta(x, y): defaultParameters‚ÄãNameTypexdefaultydefaultReturns‚ÄãdefaultDefined in‚Äãutils/liquidityMath.ts:10Helpful?PreviousFullMathNextMulticallTable of contentsConstructorsMethodsConstructorsconstructorMethodsaddDeltaDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
172,p.org sdk swap widget reference v2#onConnectWalletClick,"p.org sdk swap widget reference v2#onConnectWalletClick.    API V2 Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap WidgetOverviewGuidesTechnical ReferenceAPI V2 ReferenceAPI V1 Reference (Deprecated)web3-reactCore SDKV2 SDKV1 SDKüè†Swap WidgetTechnical ReferenceAPI V2 ReferenceHelpful?On this pageSwap Widget API V2 ReferenceRecommended Parameters‚ÄãProp NameProp TypeDefault ValueDescriptionproviderJsonRpcProvider or Eip1193ProviderundefinedAn EIP-1193 provider. See Web3 provider.jsonRpcUrlMap{ [chainId: number]: string[] }JSON_RPC_FALLBACK_ENDPOINTSMapping of your JSON-RPC endpoint URLs indexed by chainId, used to provide trade quotes prior to the user connecting a wallet. If none are provided for a chain, the widget will fallback to public JSON-RPC endpoints, which are unreliable and rate-limited. See JSON-RPC Endpoints.Optional Parameters‚ÄãProp NameProp TypeDefault ValueDescriptionconvenienceFeenumberundefinedOptionally, you may charge a convenience fee on top of swaps executed through your web app. The allowed range is 1 to 100 basis points paid in the output token of a swap, consistent with the Uniswap v3 Periphery contract.convenienceFeeRecipient{[chainId: number]: string}undefinedThe address to receive the convenience fee on each network. Required if convenienceFee is provided.defaultChainIdnumber1You may specify which chainId you want to prompt a user to connect their wallet to. See a list of all chains supported on widget.defaultInputTokenAddress{[chainId: number]: string}string or 'NATIVE'Address of the token to be selected by default in the input field (e.g. USDC) for each network chain ID. If left empty the widget will use the native token of the connected chain as default. This can be explicitly defined by the special string 'NATIVE'. For convenience you may pass a single string instead of a chainId mapping. In this case, the widget will assume that string corresponds to an L1 Ethereum address with chaindId=1. Any addresses provided in this parameter must be included in the tokenList.defaultInputAmountnumber0Default amount for the input field (e.g. 1 ETH). This value will respect the decimals of the defaultInputTokenAddress. This parameter is valid only if defaultInputTokenAddress is also set. This parameter is mutually exclusive with defaultOutputTokenAmount, so you may set only one of defaultInputTokenAmount and defaultOutputTokenAmount.defaultOutputTokenAddress{[chainId: number]: string}string or undefinedAddress of the token to be selected by default in the input field (e.g. USDC) for each network chain ID. None if left empty. Any addresses provided in this parameter must be included in the tokenList.defaultOutputAmountnumber0Default amount for the input field (e.g. 100 USDC). This value will respect the decimals of the defaultOutputTokenAddress. This parameter is mutually exclusive with defaultInputTokenAmount, so you may set only one of defaultInputTokenAmount and defaultOutputTokenAmount.hideConnectionUIbooleanfalseHide the widget's built-in wallet connection UI, including the connected account chip & 'Connect wallet to swap' button.localeSupportedLocaleen-USSpecifies an explicit locale to use for the widget interface. This can be set to one of the values exported by the library in SUPPORTED_LOCALES.onConnectWalletClick() => void or () => Promise<boolean>undefinedIf passed, allows you to add custom behavior when the user clicks on the 'Connect your wallet to swap' button. To manage displaying the widget's built-in wallet connection modal, return a resolved promise with resolve(true/false).onSwitchChain(addChainParameter: AddEthereumChainParameter) => void or Promise<void>undefinedAn integration hook called when the user tries to switch chains. If the hook returns a Promise, it is assumed the integrator is attempting to switch the chain, and no further attempts will be made. If that Promise rejects, the error will be ignored so as not to crash the widget.onErrorErrorHandlerundefinedAn error handler which receives any Javascript errors that occur in the widget. This can be used for collecting error metrics.onReviewSwapClick() => void or () => Promise<boolean>undefinedIf passed, allows you to add custom behavior when the user clicks on the 'review swap' button. To manage progression to the review screen (i.e. to add a pre-swap warning speedbump), return a resolved promise with resolve(true/false).onTokenSelectorClick(f: Field) => void \| (f: Field) => Promise<boolean \| void>undefinedA click handler fired with the selected Field ('INPUT'\|'OUTPUT') when the user clicks on a token selector dropdown. To manage progression to the native token selector view (i.e. to utilize your own external token selector UI), return a resolved promise with resolve(true/false).onTxFail(error: Error, data: any) => voidundefinedAn error handler which receives error data for on-chain transaction failures. Does not include when user cancels a transaction or if a transaction isn't able to be submitted.onTxSubmit(txHash: string, data: any) => voidundefinedA handler that receives the transaction hash and related data when a user submits a transaction.onTxSuccess(txHash: string, data: any) => voidundefinedA handler that receives the transaction hash and related data when a transaction succeeds on-chain.routerUrlstringundefinedOptionally provide a base URL to your own hosted instance of the Uniswap Router API. If none is provided, the optimal trade route is computed by running the @uniswap/smart-order-router package locally in the browser; this can take a few seconds to load & is slower. You also may be able to find more optimal routes using the Router API! See more about deploying the Router API.themeThemelightThemeSpecifies a custom theme (colors, font, and border radii). See Customizing the Theme.tokenListstringTokenInfo[]Specifies the set of tokens that appear by default in the token selector list. Accepts either a URI of a token list as defined by the Token Lists standard, or an inline array of tokens. If none is provided, the Uniswap Labs default token list will be used. See Customizing the Default Token List.widthnumber or string360Specifies the width of the widget. If specified as a number, this is in pixels; otherwise, it is interpreted as a CSS <length> data type. Recommended width is 360px. Minimum width is 300px. See Customizing the Width.brandedFooterbooleantrueEnables the ""Powered by Uniswap"" footer at the bottom of the widget.dialogHTMLDivElementundefinedSpecifies the element to portal widget dialogs (e.g. Summary, Transaction dialogs) into.dialogOptionsDialogOptionsundefinedSpecifies more custom dialog behavior, like transition animations.Subscribing to Events‚ÄãDuring the lifecycle of the swap widget, most of the events you will need are available on the web3 provider. For example, the below snippet shows how to listen for events when the wallet account changes or a new wallet connects. You can see more event examples in the MetaMask docs.// Subscribe to messagesinterface ProviderMessage { type: string; data: unknown;}ethereum.on( 'message', handler: (message: ProviderMessage) => void);CopyQuestions?Join the Discord channel to ask questions and get support from the Uniswap community.Helpful?PreviousExample ThemesNextAPI V1 Reference (Deprecated)Recommended ParametersOptional ParametersSubscribing to EventsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
173,p.org sdk v3 reference interfaces ClaimOptions#amount,p.org sdk v3 reference interfaces ClaimOptions#amount.    ClaimOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesClaimOptionsHelpful?On this pageClaimOptions@uniswap/v3-sdk / Exports / ClaimOptionsInterface: ClaimOptionsOptions to specify when claiming rewards.Table of contents‚ÄãProperties‚ÄãamountrecipienttokenIdProperties‚Äãamount‚Äã‚Ä¢ Optional amount: BigintIshThe amount of rewardToken to claim. 0 claims all.Defined in‚Äãstaker.ts:52recipient‚Äã‚Ä¢ recipient: stringAddress to send rewards to.Defined in‚Äãstaker.ts:47tokenId‚Äã‚Ä¢ tokenId: BigintIshThe id of the NFTDefined in‚Äãstaker.ts:42Helpful?PreviousBestTradeOptionsNextCollectOptionsTable of contentsPropertiesPropertiesamountrecipienttokenIdDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
174,p.org sdk core reference classes Fraction#lessthan,"p.org sdk core reference classes Fraction#lessthan.    Fraction | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesFractionHelpful?On this pageFraction@uniswap/sdk-core / Exports / FractionClass: FractionHierarchy‚ÄãFraction‚Ü≥ CurrencyAmount‚Ü≥ Percent‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatornumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionConstructors‚Äãconstructor‚Äã‚Ä¢ new Fraction(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:107subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:138toSignificant‚Äã‚ñ∏ toSignificant(significantDigits, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:123tryParseFraction‚Äã‚ñ∏ Static Private tryParseFraction(fractionish): FractionParameters‚ÄãNameTypefractionishBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:33Helpful?PreviousEtherNextNativeCurrencyHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatornumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
175,p.org contracts v3 reference periphery interfaces external IERC1271,"p.org contracts v3 reference periphery interfaces external IERC1271.    IERC1271 | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesIERC20MetadataIERC721PermitIMulticallINonfungiblePositionManagerINonfungibleTokenPositionDescriptorIPeripheryImmutableStateIPeripheryPaymentsIPeripheryPaymentsWithFeeIPoolInitializerIQuoterIQuoterV2ISelfPermitISwapRouterITickLensIV3MigratorexternalIERC1271IERC20PermitAllowedIWETH9LensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryInterfacesexternalIERC1271Helpful?On this pageIERC1271Interface that verifies provided signature for the dataInterface defined by EIP-1271Functions‚ÄãisValidSignature‚Äã function isValidSignature( bytes32 hash, bytes signature ) external returns (bytes4 magicValue)CopyReturns whether the provided signature is valid for the provided dataMUST return the bytes4 magic value 0x1626ba7e when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5). MUST allow external calls.Parameters:‚ÄãNameTypeDescriptionhashbytes32Hash of the data to be signedsignaturebytesSignature byte array associated with _dataReturn Values:‚ÄãNameTypeDescriptionmagicValuebytes32The bytes4 magic value 0x1626ba7eEdit this pageHelpful?PreviousIV3MigratorNextIERC20PermitAllowedFunctionsisValidSignatureDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
176,p.org contracts v3 reference core interfaces IUniswapV3Pool,p.org contracts v3 reference core interfaces IUniswapV3Pool.    IUniswapV3Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesIERC20MinimalIUniswapV3FactoryIUniswapV3PoolIUniswapV3PoolDeployercallbackPoolLibrariesGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreInterfacesIUniswapV3PoolHelpful?IUniswapV3PoolA Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specificationThe pool interface is broken up into many smaller piecesEdit this pageHelpful?PreviousIUniswapV3FactoryNextIUniswapV3PoolDeployerDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
177,p.org sdk v2 guides trading,"p.org sdk v2 guides trading.    Trading | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKOverviewGuidesSDK Quick startFetching DataPricingTradingPair AddressesTechnical ReferenceGetting StartedTokenPairRouteTradeFractionsFetcherOther ExportsV1 SDKüè†V2 SDKGuidesTradingHelpful?TradingLooking for a quickstart?The SDK cannot execute trades or send transactions on your behalf. Rather, it offers utility classes and functions which make it easy to calculate the data required to safely interact with Uniswap. Nearly everything you need to safely transact with Uniswap is provided by the Trade entity. However, it is your responsibility to use this data to send transactions in whatever context makes sense for your application.This guide will focus exclusively on sending a transaction to the currently recommended Uniswap routerSending a Transaction to the RouterLet's say we want to trade 1 WETH for as much DAI as possible:import { ChainId, Token, WETH, Fetcher, Trade, Route, TokenAmount, TradeType } from '@uniswap/sdk'const DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', 18)// note that you may want/need to handle this async code differently,// for example if top-level await is not an optionconst pair = await Fetcher.fetchPairData(DAI, WETH[DAI.chainId])const route = new Route([pair], WETH[DAI.chainId])const amountIn = '1000000000000000000' // 1 WETHconst trade = new Trade(route, new TokenAmount(WETH[DAI.chainId], amountIn), TradeType.EXACT_INPUT)CopySo, we've constructed a trade entity, but how do we use it to actually send a transaction? There are still a few pieces we need to put in place.Before going on, we should explore how ETH works in the context of trading. Internally, the SDK uses WETH, as all Uniswap V2 pairs use WETH under the hood. However, it's perfectly possible for you as an end user to use ETH, and rely on the router to handle converting to/from WETH. So, let's use ETH.The first step is selecting the appropriate router function. The names of router functions are intended to be self-explanatory; in this case we want swapExactETHForTokens, because we're swapping an exact amount of ETH for tokens.That Solidity interface for this function is:function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts);CopyJumping back to our trading code, we can construct all the necessary parameters:import { Percent } from '@uniswap/sdk'const slippageTolerance = new Percent('50', '10000') // 50 bips, or 0.50%const amountOutMin = trade.minimumAmountOut(slippageTolerance).raw // needs to be converted to e.g. hexconst path = [WETH[DAI.chainId].address, DAI.address]const to = '' // should be a checksummed recipient addressconst deadline = Math.floor(Date.now() / 1000) + 60 * 20 // 20 minutes from the current Unix timeconst value = trade.inputAmount.raw // // needs to be converted to e.g. hexCopyThe slippage tolerance encodes how large of a price movement we're willing to tolerate before our trade will fail to execute. Since Ethereum transactions are broadcast and confirmed in an adversarial environment, this tolerance is the best we can do to protect ourselves against price movements. We use this slippage tolerance to calculate the minumum amount of DAI we must receive before our trade reverts, thanks to minimumAmountOut. Note that this code calculates this worst-case outcome assuming that the current price, i.e the route's mid price, is fair (usually a good assumption because of arbitrage).The path is simply the ordered list of token addresses we're trading through, in our case WETH and DAI (note that we use the WETH address, even though we're using ETH).The to address is the address that will receive the DAI.The deadline is the Unix timestamp after which the transaction will fail, to protect us in the case that our transaction takes a long time to confirm and we wish to rescind our trade.The value is the amount of ETH that must be included as the msg.value in our transaction.Helpful?PreviousPricingNextPair AddressesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
178,p.org sdk v3 reference classes Pool#involvestoken,"p.org sdk v3 reference classes Pool#involvestoken.    Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPoolHelpful?On this pagePool@uniswap/v3-sdk / Exports / PoolClass: PoolRepresents a V3 poolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1Accessors‚ÄãchainIdtickSpacingtoken0Pricetoken1PriceMethods‚ÄãgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressConstructors‚Äãconstructor‚Äã‚Ä¢ new Pool(tokenA, tokenB, fee, sqrtRatioX96, liquidity, tickCurrent, ticks?)Construct a poolParameters‚ÄãNameTypeDefault valueDescriptiontokenATokenundefinedOne of the tokens in the pooltokenBTokenundefinedThe other token in the poolfeeFeeAmountundefinedThe fee in hundredths of a bips of the input amount of every swap that is collected by the poolsqrtRatioX96BigintIshundefinedThe sqrt of the current ratio of amounts of token1 to token0liquidityBigintIshundefinedThe current value of in range liquiditytickCurrentnumberundefinedThe current tick of the poolticksTickDataProvider | (Tick | TickConstructorArgs)[]NO_TICK_DATA_PROVIDER_DEFAULTThe current state of the pool ticks or a data provider that can return tick dataDefined in‚Äãentities/pool.ts:70Properties‚Äã_token0Price‚Äã‚Ä¢ Private Optional _token0Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:41_token1Price‚Äã‚Ä¢ Private Optional _token1Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:42fee‚Äã‚Ä¢ Readonly fee: FeeAmountDefined in‚Äãentities/pool.ts:35liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/pool.ts:37sqrtRatioX96‚Äã‚Ä¢ Readonly sqrtRatioX96: defaultDefined in‚Äãentities/pool.ts:36tickCurrent‚Äã‚Ä¢ Readonly tickCurrent: numberDefined in‚Äãentities/pool.ts:38tickDataProvider‚Äã‚Ä¢ Readonly tickDataProvider: TickDataProviderDefined in‚Äãentities/pool.ts:39token0‚Äã‚Ä¢ Readonly token0: TokenDefined in‚Äãentities/pool.ts:33token1‚Äã‚Ä¢ Readonly token1: TokenDefined in‚Äãentities/pool.ts:34Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns the chain ID of the tokens in the pool.Returns‚ÄãnumberDefined in‚Äãentities/pool.ts:149tickSpacing‚Äã‚Ä¢ get tickSpacing(): numberReturns‚ÄãnumberDefined in‚Äãentities/pool.ts:317token0Price‚Äã‚Ä¢ get token0Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:109token1Price‚Äã‚Ä¢ get token1Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:124Methods‚ÄãgetInputAmount‚Äã‚ñ∏ getInputAmount(outputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given a desired output amount of a token, return the computed input amount and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptionoutputAmountCurrencyAmount<Token>the output amount for which to quote the input amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The input amount and the pool with updated stateDefined in‚Äãentities/pool.ts:185getOutputAmount‚Äã‚ñ∏ getOutputAmount(inputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given an input amount of a token, return the computed output amount, and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptioninputAmountCurrencyAmount<Token>The input amount for which to quote the output amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limitReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The output amount and the pool with updated stateDefined in‚Äãentities/pool.ts:159involvesToken‚Äã‚ñ∏ involvesToken(token): booleanReturns true if the token is either token0 or token1Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to checkReturns‚ÄãbooleanTrue if token is either token0 or tokenDefined in‚Äãentities/pool.ts:102priceOf‚Äã‚ñ∏ priceOf(token): Price<Token, Token>Return the price of the given token in terms of the other token in the pool.Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to return price ofReturns‚ÄãPrice<Token, Token>The price of the given token, in terms of the other.Defined in‚Äãentities/pool.ts:141swap‚Äã‚ñ∏ Private swap(zeroForOne, amountSpecified, sqrtPriceLimitX96?): Promise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>Executes a swapParameters‚ÄãNameTypeDescriptionzeroForOnebooleanWhether the amount in is token0 or token1amountSpecifieddefaultThe amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>amountCalculatedsqrtRatioX96liquiditytickCurrentDefined in‚Äãentities/pool.ts:215getAddress‚Äã‚ñ∏ Static getAddress(tokenA, tokenB, fee, initCodeHashManualOverride?, factoryAddressOverride?): stringParameters‚ÄãNameTypetokenATokentokenBTokenfeeFeeAmountinitCodeHashManualOverride?stringfactoryAddressOverride?stringReturns‚ÄãstringDefined in‚Äãentities/pool.ts:44Helpful?PreviousPaymentsNextPositionTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1AccessorschainIdtickSpacingtoken0Pricetoken1PriceMethodsgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
179,p.org sdk v3 reference classes PositionLibrary,"p.org sdk v3 reference classes PositionLibrary.    PositionLibrary | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPositionLibraryHelpful?On this pagePositionLibrary@uniswap/v3-sdk / Exports / PositionLibraryClass: PositionLibraryTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãgetTokensOwedConstructors‚Äãconstructor‚Äã‚Ä¢ Private new PositionLibrary()Cannot be constructed.Defined in‚Äãutils/position.ts:10Methods‚ÄãgetTokensOwed‚Äã‚ñ∏ Static getTokensOwed(feeGrowthInside0LastX128, feeGrowthInside1LastX128, liquidity, feeGrowthInside0X128, feeGrowthInside1X128): default[]Parameters‚ÄãNameTypefeeGrowthInside0LastX128defaultfeeGrowthInside1LastX128defaultliquiditydefaultfeeGrowthInside0X128defaultfeeGrowthInside1X128defaultReturns‚Äãdefault[]Defined in‚Äãutils/position.ts:13Helpful?PreviousPositionNextRouteTable of contentsConstructorsMethodsConstructorsconstructorMethodsgetTokensOwedDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
180,p.org contracts universal router technical reference#v2 swap exact in,"p.org contracts universal router technical reference#v2 swap exact in.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
181,p.org sdk v3 reference classes Payments#encodesweeptoken,"p.org sdk v3 reference classes Payments#encodesweeptoken.    Payments | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPaymentsHelpful?On this pagePayments@uniswap/v3-sdk / Exports / PaymentsClass: PaymentsTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãencodeFeeBipsencodeRefundETHencodeSweepTokenencodeUnwrapWETH9Constructors‚Äãconstructor‚Äã‚Ä¢ Private new Payments()Cannot be constructed.Defined in‚Äãpayments.ts:25Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚Äãpayments.ts:20Methods‚ÄãencodeFeeBips‚Äã‚ñ∏ Static Private encodeFeeBips(fee): stringParameters‚ÄãNameTypefeePercentReturns‚ÄãstringDefined in‚Äãpayments.ts:27encodeRefundETH‚Äã‚ñ∏ Static encodeRefundETH(): stringReturns‚ÄãstringDefined in‚Äãpayments.ts:73encodeSweepToken‚Äã‚ñ∏ Static encodeSweepToken(token, amountMinimum, recipient, feeOptions?): stringParameters‚ÄãNameTypetokenTokenamountMinimumdefaultrecipientstringfeeOptions?FeeOptionsReturns‚ÄãstringDefined in‚Äãpayments.ts:49encodeUnwrapWETH9‚Äã‚ñ∏ Static encodeUnwrapWETH9(amountMinimum, recipient, feeOptions?): stringParameters‚ÄãNameTypeamountMinimumdefaultrecipientstringfeeOptions?FeeOptionsReturns‚ÄãstringDefined in‚Äãpayments.ts:31Helpful?PreviousNonfungiblePositionManagerNextPoolTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsencodeFeeBipsencodeRefundETHencodeSweepTokenencodeUnwrapWETH9DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
182,p.org sdk v3 reference classes Position#liquidity,"p.org sdk v3 reference classes Position#liquidity.    Position | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPositionHelpful?On this pagePosition@uniswap/v3-sdk / Exports / PositionClass: PositionRepresents a position on a Uniswap V3 PoolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessors‚Äãamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethods‚ÄãburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsConstructors‚Äãconstructor‚Äã‚Ä¢ new Position(__namedParameters)Constructs a position for a given pool with the given liquidityParameters‚ÄãNameType__namedParametersPositionConstructorArgsDefined in‚Äãentities/position.ts:40Properties‚Äã_mintAmounts‚Äã‚Ä¢ Private _mintAmounts: null | Readonly<{ amount0: default ; amount1: default }> = nullDefined in‚Äãentities/position.ts:31_token0Amount‚Äã‚Ä¢ Private _token0Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:29_token1Amount‚Äã‚Ä¢ Private _token1Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:30liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/position.ts:26pool‚Äã‚Ä¢ Readonly pool: PoolDefined in‚Äãentities/position.ts:23tickLower‚Äã‚Ä¢ Readonly tickLower: numberDefined in‚Äãentities/position.ts:24tickUpper‚Äã‚Ä¢ Readonly tickUpper: numberDefined in‚Äãentities/position.ts:25Accessors‚Äãamount0‚Äã‚Ä¢ get amount0(): CurrencyAmount<Token>Returns the amount of token0 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:68amount1‚Äã‚Ä¢ get amount1(): CurrencyAmount<Token>Returns the amount of token1 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:100mintAmounts‚Äã‚Ä¢ get mintAmounts(): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at the current price for the poolReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>Defined in‚Äãentities/position.ts:258token0PriceLower‚Äã‚Ä¢ get token0PriceLower(): Price<Token, Token>Returns the price of token0 at the lower tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:54token0PriceUpper‚Äã‚Ä¢ get token0PriceUpper(): Price<Token, Token>Returns the price of token0 at the upper tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:61Methods‚ÄãburnAmountsWithSlippage‚Äã‚ñ∏ burnAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercenttolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:213mintAmountsWithSlippage‚Äã‚ñ∏ mintAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to safely mint the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentTolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:157ratiosAfterSlippage‚Äã‚ñ∏ Private ratiosAfterSlippage(slippageTolerance): ObjectReturns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentageParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe amount by which the price can 'slip' before the transaction will revertReturns‚ÄãObjectThe sqrt ratios after slippageNameTypesqrtRatioX96LowerdefaultsqrtRatioX96UpperdefaultDefined in‚Äãentities/position.ts:134fromAmount0‚Äã‚ñ∏ Static fromAmount0(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited amount of token1Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:354fromAmount1‚Äã‚ñ∏ Static fromAmount1(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited amount of token0Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumberReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:378fromAmounts‚Äã‚ñ∏ Static fromAmounts(__namedParameters): PositionComputes the maximum amount of liquidity received for a given amount of token0, token1, and the prices at the tick boundaries.Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe amount of liquidity for the positionDefined in‚Äãentities/position.ts:312Helpful?PreviousPoolNextPositionLibraryTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessorsamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethodsburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
183,p.org contracts v3 reference periphery staker Design,"p.org contracts v3 reference periphery staker Design.    Uniswap V3 Staker Design | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerUniswap V3 Staker DesignUniswap V3 Staker ContractInterfacesLibrariesTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryStakerUniswap V3 Staker DesignHelpful?On this pageUniswap V3 Staker DesignThe liquidity mining staker design is comprised of one canonical position staking contract, Staker. The technical reference for this contract is here and the source code is here.Data Structures‚Äãstruct Incentive { uint128 totalRewardUnclaimed; uint128 numberOfStakes; uint160 totalSecondsClaimedX128;}struct Deposit { address owner; uint96 numberOfStakes;}struct Stake { uint160 secondsPerLiquidityInsideInitialX128; uint128 liquidity;}struct IncentiveKey {  IERC20Minimal rewardToken;  IUniswapV3Pool pool;  uint256 startTime;  uint256 endTime;  address refundee;}CopyState:IUniswapV3Factory public immutable factory;INonfungiblePositionManager public immutable nonfungiblePositionManager;/// @dev bytes32 refers to the return value of IncentiveId.computemapping(bytes32 => Incentive) public incentives;/// @dev deposits[tokenId] => Depositmapping(uint256 => Deposit) public deposits;/// @dev stakes[tokenId][incentiveHash] => Stakemapping(uint256 => mapping(bytes32 => Stake)) public stakes;/// @dev rewards[rewardToken][msg.sender] => uint256mapping(address => mapping(address => uint256)) public rewards;CopyParams:struct CreateIncentiveParams { address rewardToken; address pool; uint256 startTime; uint256 endTime; uint128 totalReward;}struct EndIncentiveParams { address creator; address rewardToken; address pool; uint256 startTime; uint256 endTime;}CopyIncentives‚ÄãcreateIncentive(CreateIncentiveParams memory params)‚ÄãcreateIncentive creates a liquidity mining incentive program. The key used to look up an Incentive is the hash of its immutable properties.Check:Incentive with these params does not already existTimestamps: params.endTime >= params.startTime, params.startTime >= block.timestampIncentive with this ID does not already exist.Effects:Sets incentives[key] = Incentive(totalRewardUnclaimed=totalReward, totalSecondsClaimedX128=0, rewardToken=rewardToken)Interaction:Transfers params.totalReward from msg.sender to self.Make sure there is a check here and it fails if the transfer failsEmits IncentiveCreatedendIncentive(EndIncentiveParams memory params)‚ÄãendIncentive can be called by anyone to end an Incentive after the endTime has passed, transferring totalRewardUnclaimed of rewardToken back to refundee.Check:block.timestamp > params.endTimeIncentive exists (incentive.totalRewardUnclaimed != 0)Effects:deletes incentives[key] (This is a new change)Interactions:safeTransfers totalRewardUnclaimed of rewardToken to the incentive creator msg.senderemits IncentiveEndedDeposit/Withdraw Token‚ÄãInteractionsnonfungiblePositionManager.safeTransferFrom(sender, this, tokenId)This transfer triggers the onERC721Received hookonERC721Received(address, address from, uint256 tokenId, bytes calldata data)‚ÄãCheck:Make sure sender is univ3 nftEffects:Creates a deposit for the token setting deposit owner to from.Setting owner to from ensures that the owner of the token also owns the deposit. Approved addresses and operators may first transfer the token to themselves before depositing for deposit ownership.If data.length>0, stakes the token in one or more incentiveswithdrawToken(uint256 tokenId, address to, bytes memory data)‚ÄãChecksCheck that a Deposit exists for the token and that msg.sender is the owner on that Deposit.Check that numberOfStakes on that Deposit is 0.EffectsDelete the Deposit delete deposits[tokenId].InteractionssafeTransferFrom the token to to with data.emit DepositTransferred(token, deposit.owner, address(0))Stake/Unstake/Rewards‚ÄãstakeToken‚ÄãCheck:deposits[params.tokenId].owner == msg.senderMake sure incentive actually exists and has reward that could be claimed (incentive.rewardToken != address(0))Check if this check can check totalRewardUnclaimed insteadMake sure token not already stakedclaimReward‚ÄãInteractionsmsg.sender to withdraw all of their reward balance in a specific token to a specified to address.emit RewardClaimed(to, reward)unstakeToken‚ÄãTo unstake an NFT, you call unstakeToken, which takes all the same arguments as stake.ChecksIt checks that you are the owner of the DepositIt checks that there exists a Stake for the provided key (with exists=true).EffectsDeletes the Stake.Decrements numberOfStakes for the Deposit by 1.totalRewardsUnclaimed is decremented by reward.totalSecondsClaimed is incremented by seconds.Increments rewards[rewardToken][msg.sender] by the amount given by getRewardInfo.getRewardInfo‚ÄãIt computes secondsInsideX128 (the total liquidity seconds for which rewards are owed) for a given Stake, by:usingsnapshotCumulativesInside from the Uniswap v3 core contract to get secondsPerLiquidityInRangeX128, and subtracting secondsPerLiquidityInRangeInitialX128.Multiplying that by stake.liquidity to get the total seconds accrued by the liquidity in that periodNote that X128 means it's a UQ32X128.It computes totalSecondsUnclaimed by taking max(endTime, block.timestamp) - startTime, casting it as a Q128, and subtracting totalSecondsClaimedX128.It computes rewardRate for the Incentive casting incentive.totalRewardUnclaimed as a Q128, then dividing it by totalSecondsUnclaimedX128.reward is then calculated as secondsInsideX128 times the rewardRate, scaled down to a regular uint128.Edit this pageHelpful?PreviousWeightedOracleLibraryNextUniswap V3 Staker ContractData StructuresIncentivescreateIncentive(CreateIncentiveParams memory params)endIncentive(EndIncentiveParams memory params)Deposit/Withdraw TokenonERC721Received(address, address from, uint256 tokenId, bytes calldata data)withdrawToken(uint256 tokenId, address to, bytes memory data)Stake/Unstake/RewardsstakeTokenclaimRewardunstakeTokengetRewardInfoDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
184,p.org contracts universal router overview,"p.org contracts universal router overview.    Overview | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterOverviewHelpful?OverviewThe UniversalRouter is an ETH, ERC20, and NFT swap router, that can aggregate trades across protocols to give users access highly-flexible and personalised transactions. The contract is unowned, and is not upgradeable.The flexible command style allows us to provide users with:Splitting and interleaving of Uniswap tradesPurchases of NFTs across 8 marketplacesPartial fills of tradesWrapping and Unwrapping of ETHTime-bound, signature controlled token approvals using Permit2Transactions are encoded using a string of commands, allowing users to have maximum flexibility over what they want to perform. With all of these features available in a single transaction, the possibilities available to users are endless.Note: The UniversalRouter uses Permit2 to remove the need for token approvals being provided directly to the UniversalRouter. The Permit2 documentation can be found here.Edit this pageHelpful?PreviousError CodesNextTechnical ReferenceDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
185,p.org sdk core reference classes Percent#greaterthan,"p.org sdk core reference classes Percent#greaterthan.    Percent | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPercentHelpful?On this pagePercent@uniswap/sdk-core / Exports / PercentClass: PercentHierarchy‚ÄãFraction‚Ü≥ PercentTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatorisPercentnumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Percent(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshInherited from‚ÄãFraction.constructorDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26isPercent‚Äã‚Ä¢ Readonly isPercent: trueThis boolean prevents a fraction from being interpreted as a PercentDefined in‚Äãentities/fractions/percent.ts:19numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.addDefined in‚Äãentities/fractions/percent.ts:21divide‚Äã‚ñ∏ divide(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/percent.ts:33equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/percent.ts:29subtract‚Äã‚ñ∏ subtract(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/percent.ts:25toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber2format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/percent.ts:41toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber5format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/percent.ts:37Helpful?PreviousNativeCurrencyNextPriceHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatorisPercentnumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
186,p.org contracts v3 reference periphery base PeripheryPayments#pay,"p.org contracts v3 reference periphery base PeripheryPayments#pay.    PeripheryPayments | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseBlockTimestampERC721PermitLiquidityManagementMulticallPeripheryImmutableStatePeripheryPaymentsPeripheryPaymentsWithFeePoolInitializerSelfPermitInterfacesLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryBasePeripheryPaymentsHelpful?On this pagePeripheryPaymentsFunctions‚Äãreceive‚Äã function receive( ) externalCopyunwrapWETH9‚Äã function unwrapWETH9( uint256 amountMinimum, address recipient ) externalCopyUnwraps the contract's WETH9 balance and sends it to recipient as ETH.The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.Parameters:‚ÄãNameTypeDescriptionamountMinimumuint256The minimum amount of WETH9 to unwraprecipientaddressThe address receiving ETHsweepToken‚Äã function sweepToken( address token, uint256 amountMinimum, address recipient ) externalCopyTransfers the full amount of a token held by this contract to recipientThe amountMinimum parameter prevents malicious contracts from stealing the token from usersParameters:‚ÄãNameTypeDescriptiontokenaddressThe contract address of the token which will be transferred to recipientamountMinimumuint256The minimum amount of token required for a transferrecipientaddressThe destination address of the tokenrefundETH‚Äã function refundETH( ) externalCopyRefunds any ETH balance held by this contract to the msg.senderUseful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amountpay‚Äã function pay( address token, address payer, address recipient, uint256 value ) internalCopyParameters:‚ÄãNameTypeDescriptiontokenaddressThe token to paypayeraddressThe entity that must payrecipientaddressThe entity that will receive paymentvalueuint256The amount to payEdit this pageHelpful?PreviousPeripheryImmutableStateNextPeripheryPaymentsWithFeeFunctionsreceiveunwrapWETH9sweepTokenrefundETHpayDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
187,p.org sdk v3 reference classes TickListDataProvider,"p.org sdk v3 reference classes TickListDataProvider.    TickListDataProvider | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickListDataProviderHelpful?On this pageTickListDataProvider@uniswap/v3-sdk / Exports / TickListDataProviderClass: TickListDataProviderA data provider for ticks that is backed by an in-memory array of ticks.Implements‚ÄãTickDataProviderTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãticksMethods‚ÄãgetTicknextInitializedTickWithinOneWordConstructors‚Äãconstructor‚Äã‚Ä¢ new TickListDataProvider(ticks, tickSpacing)Parameters‚ÄãNameTypeticks(Tick | TickConstructorArgs)[]tickSpacingnumberDefined in‚Äãentities/tickListDataProvider.ts:12Properties‚Äãticks‚Äã‚Ä¢ Private ticks: readonly Tick[]Defined in‚Äãentities/tickListDataProvider.ts:10Methods‚ÄãgetTick‚Äã‚ñ∏ getTick(tick): Promise<{ liquidityGross: BigintIsh ; liquidityNet: BigintIsh }>Return information corresponding to a specific tickParameters‚ÄãNameTypeDescriptionticknumberthe tick to loadReturns‚ÄãPromise<{ liquidityGross: BigintIsh ; liquidityNet: BigintIsh }>Implementation of‚ÄãTickDataProvider.getTickDefined in‚Äãentities/tickListDataProvider.ts:18nextInitializedTickWithinOneWord‚Äã‚ñ∏ nextInitializedTickWithinOneWord(tick, lte, tickSpacing): Promise<[number, boolean]>Return the next tick that is initialized within a single wordParameters‚ÄãNameTypeDescriptionticknumberThe current tickltebooleanWhether the next tick should be lte the current ticktickSpacingnumberThe tick spacing of the poolReturns‚ÄãPromise<[number, boolean]>Implementation of‚ÄãTickDataProvider.nextInitializedTickWithinOneWordDefined in‚Äãentities/tickListDataProvider.ts:22Helpful?PreviousTickListNextTickMathImplementsTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesticksMethodsgetTicknextInitializedTickWithinOneWordDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
188,p.org sdk 1.0.0 reference constants,p.org sdk 1.0.0 reference constants. 
189,p.org sdk v3 reference classes SelfPermit#constructor,"p.org sdk v3 reference classes SelfPermit#constructor.    SelfPermit | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesSelfPermitHelpful?On this pageSelfPermit@uniswap/v3-sdk / Exports / SelfPermitClass: SelfPermitTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãencodePermitConstructors‚Äãconstructor‚Äã‚Ä¢ Private new SelfPermit()Cannot be constructed.Defined in‚ÄãselfPermit.ts:34Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚ÄãselfPermit.ts:29Methods‚ÄãencodePermit‚Äã‚ñ∏ Static encodePermit(token, options): stringParameters‚ÄãNameTypetokenTokenoptionsPermitOptionsReturns‚ÄãstringDefined in‚ÄãselfPermit.ts:36Helpful?PreviousRouteNextSqrtPriceMathTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsencodePermitDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
190,p.org sdk 2.0.0 reference trade#minimumamountout since 204,p.org sdk 2.0.0 reference trade#minimumamountout since 204. 
191,p.org contracts v3 reference periphery base SelfPermit,"p.org contracts v3 reference periphery base SelfPermit.    SelfPermit | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseBlockTimestampERC721PermitLiquidityManagementMulticallPeripheryImmutableStatePeripheryPaymentsPeripheryPaymentsWithFeePoolInitializerSelfPermitInterfacesLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryBaseSelfPermitHelpful?On this pageSelfPermitFunctionality to call permit on any EIP-2612-compliant token for use in the routeThese functions are expected to be embedded in multicalls to allow EOAs to approve a contract and call a function that requires an approval in a single transaction.Functions‚ÄãselfPermit‚Äã function selfPermit( address token, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s ) publicCopyPermits this contract to spend a given token from msg.senderThe owner is always msg.sender and the spender is always address(this).Parameters:‚ÄãNameTypeDescriptiontokenaddressThe address of the token spentvalueuint256The amount that can be spent of tokendeadlineuint256A timestamp, the current blocktime must be less than or equal to this timestampvuint8Must produce valid secp256k1 signature from the holder along with r and srbytes32Must produce valid secp256k1 signature from the holder along with v and ssbytes32Must produce valid secp256k1 signature from the holder along with r and vselfPermitIfNecessary‚Äã function selfPermitIfNecessary( address token, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s ) externalCopyPermits this contract to spend a given token from msg.senderThe owner is always msg.sender and the spender is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermitParameters:‚ÄãNameTypeDescriptiontokenaddressThe address of the token spentvalueuint256The amount that can be spent of tokendeadlineuint256A timestamp, the current blocktime must be less than or equal to this timestampvuint8Must produce valid secp256k1 signature from the holder along with r and srbytes32Must produce valid secp256k1 signature from the holder along with v and ssbytes32Must produce valid secp256k1 signature from the holder along with r and vselfPermitAllowed‚Äã function selfPermitAllowed( address token, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s ) publicCopyPermits this contract to spend the sender's tokens for permit signatures that have the allowed parameterThe owner is always msg.sender and the spender is always address(this)Parameters:‚ÄãNameTypeDescriptiontokenaddressThe address of the token spentnonceuint256The current nonce of the ownerexpiryuint256The timestamp at which the permit is no longer validvuint8Must produce valid secp256k1 signature from the holder along with r and srbytes32Must produce valid secp256k1 signature from the holder along with v and ssbytes32Must produce valid secp256k1 signature from the holder along with r and vselfPermitAllowedIfNecessary‚Äã function selfPermitAllowedIfNecessary( address token, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s ) externalCopyPermits this contract to spend the sender's tokens for permit signatures that have the allowed parameterThe owner is always msg.sender and the spender is always address(this) Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.Parameters:‚ÄãNameTypeDescriptiontokenaddressThe address of the token spentnonceuint256The current nonce of the ownerexpiryuint256The timestamp at which the permit is no longer validvuint8Must produce valid secp256k1 signature from the holder along with r and srbytes32Must produce valid secp256k1 signature from the holder along with v and ssbytes32Must produce valid secp256k1 signature from the holder along with r and vEdit this pageHelpful?PreviousPoolInitializerNextIERC20MetadataFunctionsselfPermitselfPermitIfNecessaryselfPermitAllowedselfPermitAllowedIfNecessaryDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
192,p.org sdk web3 react guides connectors,"p.org sdk web3 react guides connectors.    Supported Connectors | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactOverviewGuidesConnecting to WalletsSupported ConnectorsSwitching ChainsCore SDKV2 SDKV1 SDKüè†web3-reactGuidesSupported ConnectorsHelpful?On this pageSupported ConnectorsIntroduction‚ÄãThis guide will cover how to connect our dApp to all the different connectors that web3-react supports. It is based on the web3-react example, found in the Uniswap code examples repository. To run this example, check out the examples's README and follow the setup instructions.In this example we will cover connecting our dApp to the following connectors:Coinbase walletWalletConnect walletNetworkGnosis safeinfoFor help on setting up web3-react and interacting with a MetaMask wallet, please visit our connecting to wallets page!The input parameters to this guide are the chains that we want our dApp to be able to connect to and their RPC URLs.The guide will cover:Building a Coinbase Wallet connectorBuilding a WalletConnect Wallet connectorBuilding a Network connectorBuilding a Gnosis Safe connectorAt the end of the guide, we should be able to connect and disconnect the application to the different connectors listed above.For this guide, the following web3-react packages are used:@web3-react/core@web3-react/types@web3-react/coinbase-wallet@web3-react/walletconnect@web3-react/network@web3-react/gnosis-safeinfoThis guide uses web3-react version 8, which is a beta version.The core code of this guide can be found in the top level of our examples repository, under each connectors' name. For example, the code for the Coinbase Wallet connector can be found in the the coinbase file.Building a Coinbase Wallet connector‚ÄãThe second connector in the list of prioritized connectors that we provided as a parameter to Web3ReactProvider is the Coinbase Wallet connector:Creating the prioritized Connectors listloading...CopyView on GithubTo connect to a Coinbase Wallet connector, we first need to install @web3-react/coinbase-wallet, as well as @coinbase/wallet-sdk. Having installed the packages, we can import the CoinbaseWallet class from @web3-react/coinbase-wallet, as well as the initializeConnector function from the @web3-react/core package:Importing the Coinbase Wallet connectorloading...CopyView on GithubWe can now build our connector, supplying the required arguments:Initializing the Coinbase Wallet Connectorloading...CopyView on GithubWe pass CoinbaseWallet as the type argument to initializeConnector's templated parameter. Similar to the case of the InjectedConnector, the CoinbaseWallet class is a class that extends the AbstractConnector class, which is part of the @web3-react/core package. The parameter provided to initializeConnector is a function that receives an actions object, and expects an instance of CoinbaseWallet (to match the type argument) to be returned.We build the new CoinbaseWallet instance by passing the actions object, an options object, and an onError callback. onError handles errors that occur during interaction with the connector, and options is used to configure the connector. In our case, we pass the url, appName and reloadOnDisconnect options: url is the RPC URL to connect to that was provided as an argument to the example application, appName is the name of our application, and reloadOnDisconnect is a boolean that indicates whether the application should reload when the user disconnects from the wallet.After building the connector, we use its two return types, the Connector and it's respective hooks, and build a Connection object by setting the connection's type as the Coinbase wallet:Building the Coinbase Wallet Connectionloading...CopyView on GithubHaving built the connector, all that remains is to build the user interface and supply it to our ConnectionOptions component, just as we did with the InjectedConnector:Building the Coinbase Wallet componentloading...CopyView on GithubBuilding a WalletConnect Wallet connector‚ÄãThe third connector in the list of prioritized connectors that we provided to Web3ReactProvider is the WalletConnect Wallet connector.To connect to a WalletConnect Wallet connector, we first need to install @web3-react/walletconnect, as well as @walletconnect/ethereum-provider. Having installed the packages, we can import the WalletConnect class from @web3-react/walletconnect, as well as the initializeConnector function from@web3-react/core package:Importing the WalletConnect Wallet Connectorloading...CopyView on GithubWe can now build our connector, supplying the required arguments:Initializing the WalletConnect Wallet Connectorloading...CopyView on GithubThe main difference from the Coinbase Wallet connector lies in the arguments that the WalletConnect class requires to be instantiated. web3-react knows about this difference, as we passed the type argument WalletConnect to initializeConnector, thus specializing the type of AbstractConnector. In this case, the class receives three arguments, including actions and onError, identical to those supplied in the Coinbase Wallet connector case. The difference lies in the second argument, which is an options object. In this case, we are passing the rpc parameter, which is an object that maps the chain ID to the RPC URL to connect to. We have already created this map in our constants file using our example's parameters. The other option that we are passing is the qrcode, which is a boolean that indicates whether the QR code should be displayed in the browser. In our case, we are passing true as we want to show the QR code.Having built the connector, we just need to build the user interface to enable user interaction with the connector, and supply it to our ConnectionOptions:Building the WalletConnect Wallet componentloading...CopyView on GithubBuilding a Network connector‚ÄãThe Network connector, alongside the Gnosis Safe connector, are two of the connectors that we do not surface through our user interface, but instead we connect to them programmatically. In contrast to the previous Connectors, these do not come with any pre-built user interface for the user to interact with. We attempt to connect to them eagerly in our Web3ContextProvider component through a hook:Hook to connect eagerlyloading...CopyView on GithubThe useEagerlyConnect hook is called in the Web3ContextProvider component and attempts to connect to the Network Connector and the Gnosis Safe Connector. The hook is named eagerly as it is called in the component's body as React effect when the component is first rendered. In the hook implementation we attempt to call web3-react's connectEagerly function if it exists on the connector, otherwise we call activate otherwise. The connectEagerly function attempts to connect our application to the connector, and fails silently if it does not succeed: Connecting eagerlyloading...CopyView on GithubBefore eagerly connecting, we first need to initialize the connectors. We start by building the Network connector, and we first need to install @web3-react/network, and import the Network class from it. Note how this Connect does not require any package besides its web3-react package to function. We also need to import the initializeConnector function from @web3-react/core:Importing the Network Connectorloading...CopyView on GithubWe can now build our connector, supplying the required arguments:Initializing the Network Connectorloading...CopyView on GithubThe main difference from the other connectors lies in the arguments that the Network class requires to be instantiated. web3-react knows about this difference, as we passed the type argument Network to initializeConnector, thus specializing the type of AbstractConnector. In this case, the class receives actions, which is identical to that supplied in the rest of the connectors; urlMap, which is an object that maps the chain ID to the RPC URL to connect to, which we have already created in our constants file; and defaultChainId which is the chain ID to connect to by default.After building, the connector, we can create a Connection instance by supplying it the return value of the initializeConnector function, and the Network class:Creating a Network connectionloading...CopyView on GithubAll that remains is to return the constructed Connection instance.Building a Gnosis Safe connector‚ÄãSimilar to the Network connector, we build the Gnosis Safe connector. We start by first installing @web3-react/gnosis-safe, and import the GnosisSafe class from it. We also need to import the initializeConnector function from @web3-react/core:Importing the Gnosis Safe connectorloading...CopyView on GithubThe Gnosis Safe connector is the simplest of them all, as it does not require any additional parameterization other than actions:Initializing a Gnosis Safe Connectorloading...CopyView on GithubHaving initialized the connector, we can now build the Connection instance and return it:Creating a Gnosis Safe Connectionloading...CopyView on GithubNext steps‚ÄãNow that we have gone through building all of the different types of supported connectors, we will learn how to switch chains.Helpful?PreviousConnecting to WalletsNextSwitching ChainsIntroductionBuilding a Coinbase Wallet connectorBuilding a WalletConnect Wallet connectorBuilding a Network connectorBuilding a Gnosis Safe connectorNext stepsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
193,p.org sdk v3 reference classes Pool#tickspacing,"p.org sdk v3 reference classes Pool#tickspacing.    Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPoolHelpful?On this pagePool@uniswap/v3-sdk / Exports / PoolClass: PoolRepresents a V3 poolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1Accessors‚ÄãchainIdtickSpacingtoken0Pricetoken1PriceMethods‚ÄãgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressConstructors‚Äãconstructor‚Äã‚Ä¢ new Pool(tokenA, tokenB, fee, sqrtRatioX96, liquidity, tickCurrent, ticks?)Construct a poolParameters‚ÄãNameTypeDefault valueDescriptiontokenATokenundefinedOne of the tokens in the pooltokenBTokenundefinedThe other token in the poolfeeFeeAmountundefinedThe fee in hundredths of a bips of the input amount of every swap that is collected by the poolsqrtRatioX96BigintIshundefinedThe sqrt of the current ratio of amounts of token1 to token0liquidityBigintIshundefinedThe current value of in range liquiditytickCurrentnumberundefinedThe current tick of the poolticksTickDataProvider | (Tick | TickConstructorArgs)[]NO_TICK_DATA_PROVIDER_DEFAULTThe current state of the pool ticks or a data provider that can return tick dataDefined in‚Äãentities/pool.ts:70Properties‚Äã_token0Price‚Äã‚Ä¢ Private Optional _token0Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:41_token1Price‚Äã‚Ä¢ Private Optional _token1Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:42fee‚Äã‚Ä¢ Readonly fee: FeeAmountDefined in‚Äãentities/pool.ts:35liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/pool.ts:37sqrtRatioX96‚Äã‚Ä¢ Readonly sqrtRatioX96: defaultDefined in‚Äãentities/pool.ts:36tickCurrent‚Äã‚Ä¢ Readonly tickCurrent: numberDefined in‚Äãentities/pool.ts:38tickDataProvider‚Äã‚Ä¢ Readonly tickDataProvider: TickDataProviderDefined in‚Äãentities/pool.ts:39token0‚Äã‚Ä¢ Readonly token0: TokenDefined in‚Äãentities/pool.ts:33token1‚Äã‚Ä¢ Readonly token1: TokenDefined in‚Äãentities/pool.ts:34Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns the chain ID of the tokens in the pool.Returns‚ÄãnumberDefined in‚Äãentities/pool.ts:149tickSpacing‚Äã‚Ä¢ get tickSpacing(): numberReturns‚ÄãnumberDefined in‚Äãentities/pool.ts:317token0Price‚Äã‚Ä¢ get token0Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:109token1Price‚Äã‚Ä¢ get token1Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:124Methods‚ÄãgetInputAmount‚Äã‚ñ∏ getInputAmount(outputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given a desired output amount of a token, return the computed input amount and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptionoutputAmountCurrencyAmount<Token>the output amount for which to quote the input amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The input amount and the pool with updated stateDefined in‚Äãentities/pool.ts:185getOutputAmount‚Äã‚ñ∏ getOutputAmount(inputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given an input amount of a token, return the computed output amount, and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptioninputAmountCurrencyAmount<Token>The input amount for which to quote the output amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limitReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The output amount and the pool with updated stateDefined in‚Äãentities/pool.ts:159involvesToken‚Äã‚ñ∏ involvesToken(token): booleanReturns true if the token is either token0 or token1Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to checkReturns‚ÄãbooleanTrue if token is either token0 or tokenDefined in‚Äãentities/pool.ts:102priceOf‚Äã‚ñ∏ priceOf(token): Price<Token, Token>Return the price of the given token in terms of the other token in the pool.Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to return price ofReturns‚ÄãPrice<Token, Token>The price of the given token, in terms of the other.Defined in‚Äãentities/pool.ts:141swap‚Äã‚ñ∏ Private swap(zeroForOne, amountSpecified, sqrtPriceLimitX96?): Promise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>Executes a swapParameters‚ÄãNameTypeDescriptionzeroForOnebooleanWhether the amount in is token0 or token1amountSpecifieddefaultThe amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>amountCalculatedsqrtRatioX96liquiditytickCurrentDefined in‚Äãentities/pool.ts:215getAddress‚Äã‚ñ∏ Static getAddress(tokenA, tokenB, fee, initCodeHashManualOverride?, factoryAddressOverride?): stringParameters‚ÄãNameTypetokenATokentokenBTokenfeeFeeAmountinitCodeHashManualOverride?stringfactoryAddressOverride?stringReturns‚ÄãstringDefined in‚Äãentities/pool.ts:44Helpful?PreviousPaymentsNextPositionTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1AccessorschainIdtickSpacingtoken0Pricetoken1PriceMethodsgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
194,p.org sdk v3 reference classes NonfungiblePositionManager#createcallparameters,"p.org sdk v3 reference classes NonfungiblePositionManager#createcallparameters.    NonfungiblePositionManager | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesNonfungiblePositionManagerHelpful?On this pageNonfungiblePositionManager@uniswap/v3-sdk / Exports / NonfungiblePositionManagerClass: NonfungiblePositionManagerTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãaddCallParameterscollectCallParameterscreateCallParametersencodeCollectencodeCreateremoveCallParameterssafeTransferFromParametersConstructors‚Äãconstructor‚Äã‚Ä¢ Private new NonfungiblePositionManager()Cannot be constructed.Defined in‚ÄãnonfungiblePositionManager.ts:181Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚ÄãnonfungiblePositionManager.ts:176Methods‚ÄãaddCallParameters‚Äã‚ñ∏ Static addCallParameters(position, options): MethodParametersParameters‚ÄãNameTypepositionPositionoptionsAddLiquidityOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:199collectCallParameters‚Äã‚ñ∏ Static collectCallParameters(options): MethodParametersParameters‚ÄãNameTypeoptionsCollectOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:326createCallParameters‚Äã‚ñ∏ Static createCallParameters(pool): MethodParametersParameters‚ÄãNameTypepoolPoolReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:192encodeCollect‚Äã‚ñ∏ Static Private encodeCollect(options): string[]Parameters‚ÄãNameTypeoptionsCollectOptionsReturns‚Äãstring[]Defined in‚ÄãnonfungiblePositionManager.ts:286encodeCreate‚Äã‚ñ∏ Static Private encodeCreate(pool): stringParameters‚ÄãNameTypepoolPoolReturns‚ÄãstringDefined in‚ÄãnonfungiblePositionManager.ts:183removeCallParameters‚Äã‚ñ∏ Static removeCallParameters(position, options): MethodParametersProduces the calldata for completely or partially exiting a positionParameters‚ÄãNameTypeDescriptionpositionPositionThe position to exitoptionsRemoveLiquidityOptionsAdditional information necessary for generating the calldataReturns‚ÄãMethodParametersThe call parametersDefined in‚ÄãnonfungiblePositionManager.ts:341safeTransferFromParameters‚Äã‚ñ∏ Static safeTransferFromParameters(options): MethodParametersParameters‚ÄãNameTypeoptionsSafeTransferOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:416Helpful?PreviousNoTickDataProviderNextPaymentsTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsaddCallParameterscollectCallParameterscreateCallParametersencodeCollectencodeCreateremoveCallParameterssafeTransferFromParametersDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
195,p.org sdk core reference enums SupportedChainId#mainnet,p.org sdk core reference enums SupportedChainId#mainnet.    SupportedChainId | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesenumsRoundingSupportedChainIdTradeTypeV2 SDKV1 SDKüè†Core SDKTechnical ReferenceenumsSupportedChainIdHelpful?On this pageSupportedChainId@uniswap/sdk-core / Exports / SupportedChainIdEnumeration: SupportedChainIdTable of contents‚ÄãEnumeration Members‚ÄãARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENEnumeration Members‚ÄãARBITRUM_ONE‚Äã‚Ä¢ ARBITRUM_ONE = 42161Defined in‚Äãconstants.ts:10ARBITRUM_RINKEBY‚Äã‚Ä¢ ARBITRUM_RINKEBY = 421611Defined in‚Äãconstants.ts:11CELO‚Äã‚Ä¢ CELO = 42220Defined in‚Äãconstants.ts:19CELO_ALFAJORES‚Äã‚Ä¢ CELO_ALFAJORES = 44787Defined in‚Äãconstants.ts:20GOERLI‚Äã‚Ä¢ GOERLI = 5Defined in‚Äãconstants.ts:7KOVAN‚Äã‚Ä¢ KOVAN = 42Defined in‚Äãconstants.ts:8MAINNET‚Äã‚Ä¢ MAINNET = 1Defined in‚Äãconstants.ts:4OPTIMISM‚Äã‚Ä¢ OPTIMISM = 10Defined in‚Äãconstants.ts:13OPTIMISM_GOERLI‚Äã‚Ä¢ OPTIMISM_GOERLI = 420Defined in‚Äãconstants.ts:14POLYGON‚Äã‚Ä¢ POLYGON = 137Defined in‚Äãconstants.ts:16POLYGON_MUMBAI‚Äã‚Ä¢ POLYGON_MUMBAI = 80001Defined in‚Äãconstants.ts:17RINKEBY‚Äã‚Ä¢ RINKEBY = 4Defined in‚Äãconstants.ts:6ROPSTEN‚Äã‚Ä¢ ROPSTEN = 3Defined in‚Äãconstants.ts:5Helpful?PreviousRoundingNextTradeTypeTable of contentsEnumeration MembersEnumeration MembersARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
196,p.org sdk core reference classes Percent#multiply,"p.org sdk core reference classes Percent#multiply.    Percent | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPercentHelpful?On this pagePercent@uniswap/sdk-core / Exports / PercentClass: PercentHierarchy‚ÄãFraction‚Ü≥ PercentTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatorisPercentnumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Percent(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshInherited from‚ÄãFraction.constructorDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26isPercent‚Äã‚Ä¢ Readonly isPercent: trueThis boolean prevents a fraction from being interpreted as a PercentDefined in‚Äãentities/fractions/percent.ts:19numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.addDefined in‚Äãentities/fractions/percent.ts:21divide‚Äã‚ñ∏ divide(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/percent.ts:33equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/percent.ts:29subtract‚Äã‚ñ∏ subtract(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/percent.ts:25toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber2format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/percent.ts:41toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber5format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/percent.ts:37Helpful?PreviousNativeCurrencyNextPriceHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatorisPercentnumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
197,p.org contracts v3 reference periphery staker UniswapV3Staker,"p.org contracts v3 reference periphery staker UniswapV3Staker.    Uniswap V3 Staker Contract | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerUniswap V3 Staker DesignUniswap V3 Staker ContractInterfacesLibrariesTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryStakerUniswap V3 Staker ContractHelpful?On this pageUniswap V3 Staker ContractBelow is the technical reference for the staker contract, UniswapV3Staker.sol. A technical guide for interacting with this staking contract will be released soon.Functions‚Äãstakes‚Äã function stakes( uint256 tokenId, bytes32 incentiveId ) public view override returns (uint160 secondsPerLiquidityInsideInitialX128, uint128 liquidity)CopyReturns information about a staked liquidity NFTParameters:‚ÄãNameTypeDescriptiontokenIduint256The ID of the staked tokenincentiveIdbytes32The ID of the incentive for which the token is stakedReturn Values:‚ÄãNameTypeDescriptionsecondsPerLiquidityInsideInitialX128uint160secondsPerLiquidity represented as a UQ32.128liquiditybytes32The amount of liquidity in the NFT as of the last time the rewards were computedconstructor‚Äã function constructor( contract IUniswapV3Factory _factory, contract INonfungiblePositionManager _nonfungiblePositionManager, uint256 _maxIncentiveStartLeadTime, uint256 _maxIncentiveDuration ) publicCopyParameters:‚ÄãNameTypeDescription_factorycontract IUniswapV3Factorythe Uniswap V3 factory_nonfungiblePositionManagercontract INonfungiblePositionManagerthe NFT position manager contract address_maxIncentiveStartLeadTimeuint256the max duration of an incentive in seconds_maxIncentiveDurationuint256the max amount of seconds into the future the incentive startTime can be setcreateIncentive‚Äã function createIncentive( struct IUniswapV3Staker.IncentiveKey key, uint256 reward ) externalCopyCreates a new liquidity mining incentive programParameters:‚ÄãNameTypeDescriptionkeystruct IUniswapV3Staker.IncentiveKeyDetails of the incentive to createrewarduint256The amount of reward tokens to be distributedendIncentive‚Äã function endIncentive( struct IUniswapV3Staker.IncentiveKey key ) external returns (uint256 refund)CopyEnds an incentive after the incentive end time has passed and all stakes have been withdrawnParameters:‚ÄãNameTypeDescriptionkeystruct IUniswapV3Staker.IncentiveKeyDetails of the incentive to endReturn Values:‚ÄãNameTypeDescriptionrefunduint256The remaining reward tokens when the incentive is endedonERC721Received‚Äã function onERC721Received( ) external returns (bytes4)CopyUpon receiving a Uniswap V3 ERC721, creates the token deposit setting owner to from. Also stakes token in one or more incentives if properly formatted data has a length > 0.Whenever an {IERC721} tokenId token is transferred to this contract via {IERC721-safeTransferFrom} by operator from from, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with IERC721.onERC721Received.selector.transferDeposit‚Äã function transferDeposit( uint256 tokenId, address to ) externalCopyTransfers ownership of a deposit from the sender to the given recipientParameters:‚ÄãNameTypeDescriptiontokenIduint256The ID of the token (and the deposit) to transfertoaddressThe new owner of the depositwithdrawToken‚Äã function withdrawToken( uint256 tokenId, address to, bytes data ) externalCopyWithdraws a Uniswap V3 LP token tokenId from this contract to the recipient toParameters:‚ÄãNameTypeDescriptiontokenIduint256The unique identifier of an Uniswap V3 LP tokentoaddressThe address where the LP token will be sentdatabytesAn optional data array that will be passed along to the to address via the NFT safeTransferFromstakeToken‚Äã function stakeToken( struct IUniswapV3Staker.IncentiveKey key, uint256 tokenId ) externalCopyStakes a Uniswap V3 LP tokenParameters:‚ÄãNameTypeDescriptionkeystruct IUniswapV3Staker.IncentiveKeyThe key of the incentive for which to stake the NFTtokenIduint256The ID of the token to stakeunstakeToken‚Äã function unstakeToken( struct IUniswapV3Staker.IncentiveKey key, uint256 tokenId ) externalCopyUnstakes a Uniswap V3 LP tokenParameters:‚ÄãNameTypeDescriptionkeystruct IUniswapV3Staker.IncentiveKeyThe key of the incentive for which to unstake the NFTtokenIduint256The ID of the token to unstakeclaimReward‚Äã function claimReward( contract IERC20Minimal rewardToken, address to, uint256 amountRequested ) external override returns (uint256 reward)CopyTransfers amountRequested of accrued rewardToken rewards from the contract to the recipient toParameters:‚ÄãNameTypeDescriptionrewardTokencontract IERC20MinimalThe token being distributed as a rewardtoaddressThe address where claimed rewards will be sent toamountRequesteduint256The amount of reward tokens to claim. Claims entire reward amount if set to 0.Return Values:‚ÄãNameTypeDescriptionrewarduint256The amount of reward tokens claimedgetRewardInfo‚Äã function getRewardInfo( struct IUniswapV3Staker.IncentiveKey key, uint256 tokenId ) external view override returns (uint256 reward, uint160 secondsInsideX128)CopyCalculates the reward amount that will be received for the given stakeParameters:‚ÄãNameTypeDescriptionkeystruct IUniswapV3Staker.IncentiveKeyThe key of the incentivetokenIduint256The ID of the tokenReturn Values:‚ÄãNameTypeDescriptionrewarduint256The reward accrued to the NFT for the given incentive thus farsecondsInsideX128uint160The seconds inside the tick rangeEdit this pageHelpful?PreviousUniswap V3 Staker DesignNextIUniswapV3StakerFunctionsstakesconstructorcreateIncentiveendIncentiveonERC721ReceivedtransferDepositwithdrawTokenstakeTokenunstakeTokenclaimRewardgetRewardInfoDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
198,p.org sdk core reference classes NativeCurrency#chainid,"p.org sdk core reference classes NativeCurrency#chainid.    NativeCurrency | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesNativeCurrencyHelpful?On this pageNativeCurrency@uniswap/sdk-core / Exports / NativeCurrencyClass: NativeCurrencyRepresents the native currency of the chain on which it resides, e.g.Hierarchy‚ÄãBaseCurrency‚Ü≥ NativeCurrency‚Ü≥‚Ü≥ EtherTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãchainIddecimalsisNativeisTokennamesymbolAccessors‚ÄãwrappedMethods‚ÄãequalsConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new NativeCurrency(chainId, decimals, symbol?, name?)Constructs an instance of the base class BaseCurrency.Parameters‚ÄãNameTypeDescriptionchainIdnumberthe chain ID on which this currency residesdecimalsnumberdecimals of the currencysymbol?stringsymbol of the currencyname?stringof the currencyInherited from‚ÄãBaseCurrency.constructorDefined in‚Äãentities/baseCurrency.ts:42Properties‚ÄãchainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãBaseCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãBaseCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: trueOverrides‚ÄãBaseCurrency.isNativeDefined in‚Äãentities/nativeCurrency.ts:7isToken‚Äã‚Ä¢ Readonly isToken: falseOverrides‚ÄãBaseCurrency.isTokenDefined in‚Äãentities/nativeCurrency.ts:8name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãBaseCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãBaseCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29Accessors‚Äãwrapped‚Äã‚Ä¢ Abstract get wrapped(): TokenReturn the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to be used in UniswapReturns‚ÄãTokenInherited from‚ÄãBaseCurrency.wrappedDefined in‚Äãentities/baseCurrency.ts:62Methods‚Äãequals‚Äã‚ñ∏ Abstract equals(other): booleanReturns whether this currency is functionally equivalent to the other currencyParameters‚ÄãNameTypeDescriptionotherCurrencythe other currencyReturns‚ÄãbooleanInherited from‚ÄãBaseCurrency.equalsDefined in‚Äãentities/baseCurrency.ts:56Helpful?PreviousFractionNextPercentHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertieschainIddecimalsisNativeisTokennamesymbolAccessorswrappedMethodsequalsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
199,p.org sdk v3 reference overview,"p.org sdk v3 reference overview.    Overview | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceOverviewHelpful?On this pageOverviewTable of contents‚ÄãEnumerations‚ÄãFeeAmountClasses‚ÄãFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeInterfaces‚ÄãAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsType Aliases‚ÄãAddLiquidityOptionsFullWithdrawOptionsIncreaseOptionsMintOptionsPermitOptionsVariables‚ÄãADDRESS_ZEROFACTORY_ADDRESSPOOL_INIT_CODE_HASHTICK_SPACINGSFunctions‚ÄãcomputePoolAddressencodeRouteToPathencodeSqrtRatioX96isSortedmaxLiquidityForAmountsmostSignificantBitnearestUsableTickpriceToClosestTicksubIn256tickToPricetoHextradeComparatorType Aliases‚ÄãAddLiquidityOptions‚Äã∆¨ AddLiquidityOptions: MintOptions | IncreaseOptionsDefined in‚ÄãnonfungiblePositionManager.ts:77FullWithdrawOptions‚Äã∆¨ FullWithdrawOptions: ClaimOptions & WithdrawOptionsDefined in‚Äãstaker.ts:8IncreaseOptions‚Äã∆¨ IncreaseOptions: CommonAddLiquidityOptions & IncreaseSpecificOptionsDefined in‚ÄãnonfungiblePositionManager.ts:75MintOptions‚Äã∆¨ MintOptions: CommonAddLiquidityOptions & MintSpecificOptionsDefined in‚ÄãnonfungiblePositionManager.ts:74PermitOptions‚Äã∆¨ PermitOptions: StandardPermitArguments | AllowedPermitArgumentsDefined in‚ÄãselfPermit.ts:22Variables‚ÄãADDRESS_ZERO‚Äã‚Ä¢ Const ADDRESS_ZERO: ""0x0000000000000000000000000000000000000000""Defined in‚Äãconstants.ts:3FACTORY_ADDRESS‚Äã‚Ä¢ Const FACTORY_ADDRESS: ""0x1F98431c8aD98523631AE4a59f267346ea31F984""Defined in‚Äãconstants.ts:1POOL_INIT_CODE_HASH‚Äã‚Ä¢ Const POOL_INIT_CODE_HASH: ""0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54""Defined in‚Äãconstants.ts:5TICK_SPACINGS‚Äã‚Ä¢ Const TICK_SPACINGS: { [amount in FeeAmount]: number }The default factory tick spacings by fee amount.Defined in‚Äãconstants.ts:20Functions‚ÄãcomputePoolAddress‚Äã‚ñ∏ computePoolAddress(__namedParameters): stringComputes a pool addressParameters‚ÄãNameType__namedParametersObject__namedParameters.factoryAddressstring__namedParameters.feeFeeAmount__namedParameters.initCodeHashManualOverride?string__namedParameters.tokenAToken__namedParameters.tokenBTokenReturns‚ÄãstringThe pool addressDefined in‚Äãutils/computePoolAddress.ts:16encodeRouteToPath‚Äã‚ñ∏ encodeRouteToPath(route, exactOutput): stringConverts a route to a hex encoded pathParameters‚ÄãNameTypeDescriptionrouteRoute<Currency, Currency>the v3 path to convert to an encoded pathexactOutputbooleanwhether the route should be encoded in reverse, for making exact output swapsReturns‚ÄãstringDefined in‚Äãutils/encodeRouteToPath.ts:11encodeSqrtRatioX96‚Äã‚ñ∏ encodeSqrtRatioX96(amount1, amount0): JSBIReturns the sqrt ratio as a Q64.96 corresponding to a given ratio of amount1 and amount0Parameters‚ÄãNameTypeDescriptionamount1BigintIshThe numerator amount i.e., the amount of token1amount0BigintIshThe denominator amount i.e., the amount of token0Returns‚ÄãJSBIThe sqrt ratioDefined in‚Äãutils/encodeSqrtRatioX96.ts:11isSorted‚Äã‚ñ∏ isSorted<T>(list, comparator): booleanDetermines if a tick list is sortedType parameters‚ÄãNameTParameters‚ÄãNameTypeDescriptionlistT[]The tick listcomparator(a: T, b: T) => numberThe comparatorReturns‚Äãbooleantrue if sortedDefined in‚Äãutils/isSorted.ts:7maxLiquidityForAmounts‚Äã‚ñ∏ maxLiquidityForAmounts(sqrtRatioCurrentX96, sqrtRatioAX96, sqrtRatioBX96, amount0, amount1, useFullPrecision): JSBIComputes the maximum amount of liquidity received for a given amount of token0, token1, and the prices at the tick boundaries.Parameters‚ÄãNameTypeDescriptionsqrtRatioCurrentX96defaultthe current pricesqrtRatioAX96defaultprice at lower boundarysqrtRatioBX96defaultprice at upper boundaryamount0BigintIshtoken0 amountamount1BigintIshtoken1 amountuseFullPrecisionbooleanif false, liquidity will be maximized according to what the router can calculate, not what core can theoretically supportReturns‚ÄãJSBIDefined in‚Äãutils/maxLiquidityForAmounts.ts:68mostSignificantBit‚Äã‚ñ∏ mostSignificantBit(x): numberParameters‚ÄãNameTypexdefaultReturns‚ÄãnumberDefined in‚Äãutils/mostSignificantBit.ts:12nearestUsableTick‚Äã‚ñ∏ nearestUsableTick(tick, tickSpacing): numberReturns the closest tick that is nearest a given tick and usable for the given tick spacingParameters‚ÄãNameTypeDescriptionticknumberthe target ticktickSpacingnumberthe spacing of the poolReturns‚ÄãnumberDefined in‚Äãutils/nearestUsableTick.ts:9priceToClosestTick‚Äã‚ñ∏ priceToClosestTick(price): numberReturns the first tick for which the given price is greater than or equal to the tick priceParameters‚ÄãNameTypeDescriptionpricePrice<Token, Token>for which to return the closest tick that represents a price less than or equal to the input price, i.e. the price of the returned tick is less than or equal to the input priceReturns‚ÄãnumberDefined in‚Äãutils/priceTickConversions.ts:29subIn256‚Äã‚ñ∏ subIn256(x, y): JSBIParameters‚ÄãNameTypexdefaultydefaultReturns‚ÄãJSBIDefined in‚Äãutils/tickLibrary.ts:11tickToPrice‚Äã‚ñ∏ tickToPrice(baseToken, quoteToken, tick): Price<Token, Token>Returns a price object corresponding to the input tick and the base/quote token Inputs must be tokens because the address order is used to interpret the price represented by the tickParameters‚ÄãNameTypeDescriptionbaseTokenTokenthe base token of the pricequoteTokenTokenthe quote token of the priceticknumberthe tick for which to return the priceReturns‚ÄãPrice<Token, Token>Defined in‚Äãutils/priceTickConversions.ts:14toHex‚Äã‚ñ∏ toHex(bigintIsh): stringConverts a big int to a hex stringParameters‚ÄãNameTypebigintIshBigintIshReturns‚ÄãstringThe hex encoded calldataDefined in‚Äãutils/calldata.ts:23tradeComparator‚Äã‚ñ∏ tradeComparator<TInput, TOutput, TTradeType>(a, b): numberTrades comparator, an extension of the input output comparator that also considers other dimensions of the trade in ranking themType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputParameters‚ÄãNameTypeDescriptionaTrade<TInput, TOutput, TTradeType>The first trade to comparebTrade<TInput, TOutput, TTradeType>The second trade to compareReturns‚ÄãnumberA sorted ordering for two neighboring elements in a trade arrayDefined in‚Äãentities/trade.ts:16Helpful?PreviousSwapping and Adding LiquidityNextFullMathTable of contentsEnumerationsClassesInterfacesType AliasesVariablesFunctionsType AliasesAddLiquidityOptionsFullWithdrawOptionsIncreaseOptionsMintOptionsPermitOptionsVariablesADDRESS_ZEROFACTORY_ADDRESSPOOL_INIT_CODE_HASHTICK_SPACINGSFunctionscomputePoolAddressencodeRouteToPathencodeSqrtRatioX96isSortedmaxLiquidityForAmountsmostSignificantBitnearestUsableTickpriceToClosestTicksubIn256tickToPricetoHextradeComparatorDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
200,p.org contracts v3 reference core libraries LiquidityMath,"p.org contracts v3 reference core libraries LiquidityMath.    LiquidityMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesLibrariesBitMathFixedPoint128FixedPoint96FullMathLiquidityMathLowGasSafeMathOraclePositionSafeCastSecondsOutsideSqrtPriceMathSwapMathTickTickBitmapTickMathTransferHelperUnsafeMathGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreLibrariesLiquidityMathHelpful?On this pageLiquidityMathFunctions‚ÄãaddDelta‚Äã function addDelta( uint128 x, int128 y ) internal pure returns (uint128 z)CopyAdd a signed liquidity delta to liquidity and revert if it overflows or underflowsParameters:‚ÄãNameTypeDescriptionxuint128The liquidity before changeyint128The delta by which liquidity should be changedReturn Values:‚ÄãNameTypeDescriptionzuint128The liquidity deltaEdit this pageHelpful?PreviousFullMathNextLowGasSafeMathFunctionsaddDeltaDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
201,p.org sdk v2 reference other exports #chainid,"p.org sdk v2 reference other exports #chainid.    Other Exports | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKOverviewGuidesSDK Quick startFetching DataPricingTradingPair AddressesTechnical ReferenceGetting StartedTokenPairRouteTradeFractionsFetcherOther ExportsV1 SDKüè†V2 SDKTechnical ReferenceOther ExportsHelpful?JSBIimport { JSBI } from '@uniswap/sdk'// import JSBI from 'jsbi'CopyThe default export from jsbi.BigintIshimport { BigintIsh } from '@uniswap/sdk'// type BigintIsh = JSBI | bigint | stringCopyA union type comprised of all types that can be cast to a JSBI instance.ChainIdimport { ChainId } from '@uniswap/sdk'// enum ChainId {// MAINNET = 1,// ROPSTEN = 3,// RINKEBY = 4,// G√ñRLI = 5,// KOVAN = 42// }CopyA enum denominating supported chain IDs.TradeTypeimport { TradeType } from '@uniswap/sdk'// enum TradeType {// EXACT_INPUT,// EXACT_OUTPUT// }CopyA enum denominating supported trade types.Roundingimport { Rounding } from '@uniswap/sdk'// enum Rounding {// ROUND_DOWN,// ROUND_HALF_UP,// ROUND_UP// }CopyA enum denominating supported rounding options.FACTORY_ADDRESSimport { FACTORY_ADDRESS } from '@uniswap/sdk'CopyThe factory address.INIT_CODE_HASHimport { INIT_CODE_HASH } from '@uniswap/sdk'CopySee pair addresses.MINIMUM_LIQUIDITYimport { MINIMUM_LIQUIDITY } from '@uniswap/sdk'CopySee minimum liquidity.InsufficientReservesErrorimport { InsufficientReservesError } from '@uniswap/sdk'CopyInsufficientInputAmountErrorimport { InsufficientInputAmountError } from '@uniswap/sdk'CopyWETHimport { WETH } from '@uniswap/sdk'CopyAn object whose values are WETH Token instances, indexed by ChainId.Helpful?PreviousFetcherNextOverviewDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
202,p.org contracts v3 reference core libraries SwapMath,"p.org contracts v3 reference core libraries SwapMath.    SwapMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesLibrariesBitMathFixedPoint128FixedPoint96FullMathLiquidityMathLowGasSafeMathOraclePositionSafeCastSecondsOutsideSqrtPriceMathSwapMathTickTickBitmapTickMathTransferHelperUnsafeMathGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreLibrariesSwapMathHelpful?On this pageSwapMathContains methods for computing the result of a swap within a single tick price range, i.e., a single tick.Functions‚ÄãcomputeSwapStep‚Äã function computeSwapStep( uint160 sqrtRatioCurrentX96, uint160 sqrtRatioTargetX96, uint128 liquidity, int256 amountRemaining, uint24 feePips ) internal pure returns (uint160 sqrtRatioNextX96, uint256 amountIn, uint256 amountOut, uint256 feeAmount)CopyComputes the result of swapping some amount in, or amount out, given the parameters of the swapThe fee, plus the amount in, will never exceed the amount remaining if the swap's amountSpecified is positiveParameters:‚ÄãNameTypeDescriptionsqrtRatioCurrentX96uint160The current sqrt price of the poolsqrtRatioTargetX96uint160The price that cannot be exceeded, from which the direction of the swap is inferredliquidityuint128The usable liquidityamountRemainingint256How much input or output amount is remaining to be swapped in/outfeePipsuint24The fee taken from the input amount, expressed in hundredths of a bipReturn Values:‚ÄãNameTypeDescriptionsqrtRatioNextX96uint160The price after swapping the amount in/out, not to exceed the price targetamountInuint256The amount to be swapped in, of either token0 or token1, based on the direction of the swapamountOutuint256The amount to be received, of either token0 or token1, based on the direction of the swapfeeAmountuint256The amount of input that will be taken as a feeEdit this pageHelpful?PreviousSqrtPriceMathNextTickFunctionscomputeSwapStepDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
203,p.org contracts v3 reference governance overview,"p.org contracts v3 reference governance overview.    Overview | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernanceOverviewPeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceGovernanceOverviewHelpful?On this pageOverviewThe updated reference for the newly deployed Governor Bravo is available via Etherscan, some of the reference material below may be out of date.The Uniswap protocol is governed and upgraded by UNI token holders, using three distinct components; the UNI token, governance module, and Timelock. Together, these contracts allow the community to propose, vote, and implement changes to the uniswap protocol.Any addresses with more than 2.5M UNI (0.25% of total supply) delegated to it may propose governance actions, which contain finished, executable code. When a proposal is created, the community can cast their votes during a 7 day voting period. If there are more 'For' votes than 'Against' (i.e. a simple majority), and the number of 'For' votes >40M (meeting the quorum), it is queued in the Timelock, and may be executed in a minimum of 2 days.Timelock‚ÄãThe Timelock contract can modify system parameters, logic, and contracts in a 'time-delayed, opt-out' upgrade pattern. Timelock has a hard-coded minimum delay of 2 days, which is the least amount of notice possible for a governance action. Each proposed action will be published at a minimum of 2 days in the future from the time of announcement. Major upgrades, such as changing the risk system, may have up to a 30 day delay. Timelock is controlled by the governance module; pending and completed governance actions can be monitored on the Timelock Dashboard.Key EventsDelegateChanged‚ÄãDelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)CopyEmitted when an account changes its delegate.DelegateVotesChanged‚ÄãDelegateVotesChanged(address indexed delegate, uint previousBalance, uint newBalance)CopyEmitted when a delegate account's vote balance changes.ProposalCreated‚ÄãProposalCreated(uint id, address proposer, address[] targets, uint[] values, string[] signatures, bytes[] calldatas, uint startBlock, uint endBlock, string description)CopyEmitted when a new proposal is created.VoteCast‚ÄãVoteCast(address voter, uint proposalId, bool support, uint votes)CopyEmitted when a vote has been cast on a proposal.ProposalCanceled‚ÄãProposalCanceled(uint id)CopyEmitted when a proposal has been canceled.ProposalQueued‚ÄãProposalQueued(uint id, uint eta)CopyEmitted when a proposal has been queued in the Timelock.ProposalExecuted‚ÄãProposalExecuted(uint id)CopyEmitted when a proposal has been executed in the Timelock.Read-Only Functions: UNIGet Current Votes‚Äãfunction getCurrentVotes(address account) returns (uint96)CopyReturns the balance of votes for an account as of the current block.NameTypeaccountaddressAddress of the account of which to retrieve the number of votes.Get Prior Votes‚Äãfunction getPriorVotes(address account, uint blockNumber) returns (uint96)CopyReturns the prior number of votes for an account at a specific block number. The block number passed must be a finalized block or the function will revert.NameTypeaccountaddressAddress of the account of which to retrieve the prior number of votes.blocknumberuintThe block number at which to retrieve the prior number of votes.unnameduint96The number of prior votesState-Changing Functions: UNIDelegate‚Äãfunction delegate(address delegatee)CopyDelegate votes from the sender to the delegatee. Users can delegate to 1 address at a time, and the number of votes added to the delegatee‚Äôs vote count is equivalent to the balance of UNI in the user‚Äôs account. Votes are delegated from the current block and onward, until the sender delegates again, or transfers their UNI.NameTypedelegateeaddressThe address to which msg.sender wishes to delegate their votes to.Delegate By Signature‚Äãfunction delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s)CopyDelegate votes from the sender to the delegatee. Users can delegate to 1 address at a time, and the number of votes added to the delegatee‚Äôs vote count is equivalent to the balance of UNI in the user‚Äôs account. Votes are delegated from the current block and onward, until the sender delegates again, or transfers their UNI.NameTypedelegateeaddressThe address to which msg.sender wishis to delegate their vote tononceuintThe contract state required to match the signature. This can be retrieved from the contract‚Äôs public nonces mappingexpiryuintThe time when the signature expires. A block timestamp in seconds since the unix epoch.vuintThe recovery byte of the signature.rbytes32Half of the ECDSA signature pair.sbytes32Half of the ECDSA signature pair.Read-Only Functions: Governor AlphaQuorum Votes‚Äãfunction quorumVotes() public pure returns (uint)CopyReturns the minimum number of votes required for a proposal to succeed.Proposal Threshold‚Äãfunction proposalThreshold() returns (uint)CopyReturns the minimum number of votes required for an account to create a proposal.Proposal Max Operations‚Äãfunction proposalMaxOperations() returns (uint)CopyReturns the maximum number of actions that can be included in a proposal. Actions are functions calls that will be made when a proposal succeeds and executes.Voting Delay‚Äãfunction votingDelay() returns (uint)CopyReturns the number of blocks to wait before voting on a proposal may begin. This value is added to the current block number when a proposal is created.Voting Period‚Äãfunction votingPeriod() returns (uint)CopyReturns the duration of voting on a proposal, in blocks.Get Actions‚Äãfunction getActions(uint proposalId) returns (uint proposalId) public view returns (address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas)CopyGets the actions of a selected proposal. Pass a proposal ID and get the targets, values, signatures and calldatas of that proposal.NameTypeproposalIduintID of the proposalReturns:Array of addresses of contracts the proposal calls.Array of unsigned integers the proposal uses as values.Array of strings of the proposal‚Äôs signatures.Array of calldata bytes of the proposal.Get Receipt‚Äãfunction getReceipt(uint proposalId, address voter) returns (Receipt memory)CopyReturns a proposal ballot receipt of a given voter.NameTypeproposalIduintID of the proposal in which to get a voter‚Äôs ballot receipt.voteraddressAddress of the account of a proposal voter.ReceiptstructA Receipt struct for the ballot of the voter address.State‚Äãfunction state(uint proposalId) returns (ProposalState)CopyReturns enum of type ProposalState, possible types are:PendingActiveCanceledDefeatedSucceededQueuedExpiredExecutedNameTypeproposalIduintID of the proposalState-Changing Functions: Governor AlphaPropose‚Äãfunction propose(address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas, string memory description) returns (uint)CopyCreates a Proposal to change the protocol.Proposals will be voted on by delegated voters. If there is sufficient support before the voting period ends, the proposal shall be automatically enacted. Enacted proposals are queued and executed in the Timelock contract.The sender must hold more UNI than the current proposal threshold (proposalThreshold()) as of the immediately previous block. The proposal can have up to 10 actions (based on proposalMaxOperations()).The proposer cannot create another proposal if they currently have a pending or active proposal. It is not possible to queue two identical actions in the same block (due to a restriction in the Timelock), therefore actions in a single proposal must be unique, and unique proposals that share an identical action must be queued in different blocks.NameTypetargetsaddressThe ordered list of target addresses for calls to be made during proposal execution. This array must be the same length as all other array parameters in this function.valuesuintThe ordered list of values (i.e. msg.value) to be passed to the calls made during proposal execution. This array must be the same length as all other array parameters in this functionsignaturesstringThe ordered list of function signatures to be passed during execution. This array must be the same length as all other array parameters in this function.calldatasbytesThe ordered list of data to be passed to each individual function call during proposal execution. This array must be the same length as all other array parameters in this function.descriptionstringA human readable description of the proposal and the changes it will enact.UnnameduintReturns ID of the new proposalQueue‚Äãfunction queue(uint proposalId)CopyAfter a proposal has succeeded, any address can call the queue method to move the proposal into the Timelock queue. A proposal can only be queued if it has succeeded.NameTypeproposalIduintID of a given successful proposalExecute‚Äãfunction execute(uint proposalId) payableCopyAfter the Timelock delay period, any account may invoke the execute method to apply the changes from the proposal to the target contracts. This will invoke each of the actions described in the proposal. This function is payable so the Timelock contract can invoke payable functions that were selected in the proposal.NameTypeproposalIduintID of a given successful proposalCancel‚Äãfunction cancel(uint proposalId)CopyCancel a proposal that has not yet been executed. The Guardian is the only one who may execute this unless the proposer does not maintain the delegates required to create a proposal. If the proposer does not have more delegates than the proposal threshold, anyone can cancel the proposal.NameTypeproposalIduintID of a proposal to cancelCast Vote‚Äãfunction castVote(uint proposalId, bool support)CopyCast a vote on a proposal. The account's voting weight is determined by it's number of delegated votes at the time the proposal becomes active.NameTypeproposalIduintID of a given successful proposalsupportboolA boolean of true for 'yes' or false for 'no' on the proposal vote.Cast Vote By Signature‚Äãfunction castVoteBySig(uint proposalId, bool support, uint8 v, bytes32 r, bytes32 s)CopyCast a vote on a proposal. The account's voting weight is determined by its number of delegated votes at the time the proposal became active. This method has the same purpose as Cast Vote, but instead enables offline signatures to participate in governance voting. For more details on how to create an offline signature, review EIP-712.NameTypeproposalIduintID of a given successful proposalsupportboolA boolean of true for 'yes' or false for 'no' on the proposal vote.expiryuintThe time when the signature expires. A block timestamp in seconds since the unix epoch.vuintThe recovery byte of the signature.rbytes32Half of the ECDSA signature pair.sbytes32Half of the ECDSA signature pair.Edit this pageHelpful?PreviousUnsafeMathNextBlockTimestampTimelockDelegateChangedDelegateVotesChangedProposalCreatedVoteCastProposalCanceledProposalQueuedProposalExecutedGet Current VotesGet Prior VotesDelegateDelegate By SignatureQuorum VotesProposal ThresholdProposal Max OperationsVoting DelayVoting PeriodGet ActionsGet ReceiptStateProposeQueueExecuteCancelCast VoteCast Vote By SignatureDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
204,p.org sdk v3 reference classes Position#fromamount1,"p.org sdk v3 reference classes Position#fromamount1.    Position | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPositionHelpful?On this pagePosition@uniswap/v3-sdk / Exports / PositionClass: PositionRepresents a position on a Uniswap V3 PoolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessors‚Äãamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethods‚ÄãburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsConstructors‚Äãconstructor‚Äã‚Ä¢ new Position(__namedParameters)Constructs a position for a given pool with the given liquidityParameters‚ÄãNameType__namedParametersPositionConstructorArgsDefined in‚Äãentities/position.ts:40Properties‚Äã_mintAmounts‚Äã‚Ä¢ Private _mintAmounts: null | Readonly<{ amount0: default ; amount1: default }> = nullDefined in‚Äãentities/position.ts:31_token0Amount‚Äã‚Ä¢ Private _token0Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:29_token1Amount‚Äã‚Ä¢ Private _token1Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:30liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/position.ts:26pool‚Äã‚Ä¢ Readonly pool: PoolDefined in‚Äãentities/position.ts:23tickLower‚Äã‚Ä¢ Readonly tickLower: numberDefined in‚Äãentities/position.ts:24tickUpper‚Äã‚Ä¢ Readonly tickUpper: numberDefined in‚Äãentities/position.ts:25Accessors‚Äãamount0‚Äã‚Ä¢ get amount0(): CurrencyAmount<Token>Returns the amount of token0 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:68amount1‚Äã‚Ä¢ get amount1(): CurrencyAmount<Token>Returns the amount of token1 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:100mintAmounts‚Äã‚Ä¢ get mintAmounts(): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at the current price for the poolReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>Defined in‚Äãentities/position.ts:258token0PriceLower‚Äã‚Ä¢ get token0PriceLower(): Price<Token, Token>Returns the price of token0 at the lower tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:54token0PriceUpper‚Äã‚Ä¢ get token0PriceUpper(): Price<Token, Token>Returns the price of token0 at the upper tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:61Methods‚ÄãburnAmountsWithSlippage‚Äã‚ñ∏ burnAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercenttolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:213mintAmountsWithSlippage‚Äã‚ñ∏ mintAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to safely mint the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentTolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:157ratiosAfterSlippage‚Äã‚ñ∏ Private ratiosAfterSlippage(slippageTolerance): ObjectReturns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentageParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe amount by which the price can 'slip' before the transaction will revertReturns‚ÄãObjectThe sqrt ratios after slippageNameTypesqrtRatioX96LowerdefaultsqrtRatioX96UpperdefaultDefined in‚Äãentities/position.ts:134fromAmount0‚Äã‚ñ∏ Static fromAmount0(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited amount of token1Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:354fromAmount1‚Äã‚ñ∏ Static fromAmount1(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited amount of token0Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumberReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:378fromAmounts‚Äã‚ñ∏ Static fromAmounts(__namedParameters): PositionComputes the maximum amount of liquidity received for a given amount of token0, token1, and the prices at the tick boundaries.Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe amount of liquidity for the positionDefined in‚Äãentities/position.ts:312Helpful?PreviousPoolNextPositionLibraryTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessorsamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethodsburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
205,p.org contracts swap widget overview,p.org contracts swap widget overview. 
206,p.org contracts v3 reference periphery base PeripheryPaymentsWithFee,"p.org contracts v3 reference periphery base PeripheryPaymentsWithFee.    PeripheryPaymentsWithFee | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseBlockTimestampERC721PermitLiquidityManagementMulticallPeripheryImmutableStatePeripheryPaymentsPeripheryPaymentsWithFeePoolInitializerSelfPermitInterfacesLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryBasePeripheryPaymentsWithFeeHelpful?On this pagePeripheryPaymentsWithFeeFunctions‚ÄãunwrapWETH9WithFee‚Äã function unwrapWETH9WithFee(  uint256 amountMinimum,  address recipient,  uint256 feeBips,  address feeRecipient ) publicCopyUnwraps the contract's WETH9 balance and sends it to recipient as ETH, with a percentage between 0 (exclusive), and 1 (inclusive) going to feeRecipientThe amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.sweepTokenWithFee‚Äã function sweepTokenWithFee(  address token,  uint256 amountMinimum,  address recipient,  uint256 feeBips,  address feeRecipient ) publicCopyTransfers the full amount of a token held by this contract to recipient, with a percentage between 0 (exclusive) and 1 (inclusive) going to feeRecipientThe amountMinimum parameter prevents malicious contracts from stealing the token from usersEdit this pageHelpful?PreviousPeripheryPaymentsNextPoolInitializerFunctionsunwrapWETH9WithFeesweepTokenWithFeeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
207,p.org contracts v2 concepts advanced topics fees,"p.org contracts v2 concepts advanced topics fees.    Fees | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsFeesPricingUnderstanding ReturnsSecurityMathResearchGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolConceptsAdvanced TopicsFeesHelpful?On this pageFeesLiquidity provider fees‚ÄãThere is a 0.3% fee for swapping tokens. This fee is split by liquidity providers proportional to their contribution to liquidity reserves.Swapping fees are immediately deposited into liquidity reserves. This increases the value of liquidity tokens, functioning as a payout to all liquidity providers proportional to their share of the pool. Fees are collected by burning liquidity tokens to remove a proportional share of the underlying reserves.Since fees are added to liquidity pools, the invariant increases at the end of every trade. Within a single transaction, the invariant represents token0_pool / token1_pool at the end of the previous transaction.There are many community-developed tools to determine returns. You can also read more in the docs about how to think about LP returns.Protocol Fees‚ÄãAt the moment there are no protocol fees. However, it is possible for a 0.05% fee to be turned on in the future.More information about a potential future protocol fee can be found here.Protocol Charge Calculation‚ÄãIn the future, it is possible that a protocol-wide charge of 0.05% per trade will take effect. This represents ‚Öôth (16.6ÃÖ%) of the 0.30% fee. The fee is in effect if feeTo is not address(0) (0x0000000000000000000000000000000000000000), indicating that feeTo is the recipient of the charge.This amount would not affect the fee paid by traders, but would affect the amount received by liquidity providers.Rather than calculating this charge on swaps, which would significantly increase gas costs for all users, the charge is instead calculated when liquidity is added or removed. See the whitepaper for more details.Edit this pageHelpful?PreviousOraclesNextPricingLiquidity provider feesProtocol FeesProtocol Charge CalculationDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
208,p.org sdk v3 reference classes Position#ratiosafterslippage,"p.org sdk v3 reference classes Position#ratiosafterslippage.    Position | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPositionHelpful?On this pagePosition@uniswap/v3-sdk / Exports / PositionClass: PositionRepresents a position on a Uniswap V3 PoolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessors‚Äãamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethods‚ÄãburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsConstructors‚Äãconstructor‚Äã‚Ä¢ new Position(__namedParameters)Constructs a position for a given pool with the given liquidityParameters‚ÄãNameType__namedParametersPositionConstructorArgsDefined in‚Äãentities/position.ts:40Properties‚Äã_mintAmounts‚Äã‚Ä¢ Private _mintAmounts: null | Readonly<{ amount0: default ; amount1: default }> = nullDefined in‚Äãentities/position.ts:31_token0Amount‚Äã‚Ä¢ Private _token0Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:29_token1Amount‚Äã‚Ä¢ Private _token1Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:30liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/position.ts:26pool‚Äã‚Ä¢ Readonly pool: PoolDefined in‚Äãentities/position.ts:23tickLower‚Äã‚Ä¢ Readonly tickLower: numberDefined in‚Äãentities/position.ts:24tickUpper‚Äã‚Ä¢ Readonly tickUpper: numberDefined in‚Äãentities/position.ts:25Accessors‚Äãamount0‚Äã‚Ä¢ get amount0(): CurrencyAmount<Token>Returns the amount of token0 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:68amount1‚Äã‚Ä¢ get amount1(): CurrencyAmount<Token>Returns the amount of token1 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:100mintAmounts‚Äã‚Ä¢ get mintAmounts(): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at the current price for the poolReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>Defined in‚Äãentities/position.ts:258token0PriceLower‚Äã‚Ä¢ get token0PriceLower(): Price<Token, Token>Returns the price of token0 at the lower tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:54token0PriceUpper‚Äã‚Ä¢ get token0PriceUpper(): Price<Token, Token>Returns the price of token0 at the upper tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:61Methods‚ÄãburnAmountsWithSlippage‚Äã‚ñ∏ burnAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercenttolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:213mintAmountsWithSlippage‚Äã‚ñ∏ mintAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to safely mint the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentTolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:157ratiosAfterSlippage‚Äã‚ñ∏ Private ratiosAfterSlippage(slippageTolerance): ObjectReturns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentageParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe amount by which the price can 'slip' before the transaction will revertReturns‚ÄãObjectThe sqrt ratios after slippageNameTypesqrtRatioX96LowerdefaultsqrtRatioX96UpperdefaultDefined in‚Äãentities/position.ts:134fromAmount0‚Äã‚ñ∏ Static fromAmount0(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited amount of token1Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:354fromAmount1‚Äã‚ñ∏ Static fromAmount1(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited amount of token0Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumberReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:378fromAmounts‚Äã‚ñ∏ Static fromAmounts(__namedParameters): PositionComputes the maximum amount of liquidity received for a given amount of token0, token1, and the prices at the tick boundaries.Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe amount of liquidity for the positionDefined in‚Äãentities/position.ts:312Helpful?PreviousPoolNextPositionLibraryTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessorsamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethodsburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
209,p.org sdk v3 reference interfaces SwapOptions#slippagetolerance,"p.org sdk v3 reference interfaces SwapOptions#slippagetolerance.    SwapOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesSwapOptionsHelpful?On this pageSwapOptions@uniswap/v3-sdk / Exports / SwapOptionsInterface: SwapOptionsOptions for producing the arguments to send calls to the router.Table of contents‚ÄãProperties‚ÄãdeadlinefeeinputTokenPermitrecipientslippageTolerancesqrtPriceLimitX96Properties‚Äãdeadline‚Äã‚Ä¢ deadline: BigintIshWhen the transaction expires, in epoch seconds.Defined in‚ÄãswapRouter.ts:30fee‚Äã‚Ä¢ Optional fee: FeeOptionsOptional information for taking a fee on output.Defined in‚ÄãswapRouter.ts:45inputTokenPermit‚Äã‚Ä¢ Optional inputTokenPermit: PermitOptionsThe optional permit parameters for spending the input.Defined in‚ÄãswapRouter.ts:35recipient‚Äã‚Ä¢ recipient: stringThe account that should receive the output.Defined in‚ÄãswapRouter.ts:25slippageTolerance‚Äã‚Ä¢ slippageTolerance: PercentHow much the execution price is allowed to move unfavorably from the trade execution price.Defined in‚ÄãswapRouter.ts:20sqrtPriceLimitX96‚Äã‚Ä¢ Optional sqrtPriceLimitX96: BigintIshThe optional price limit for the trade.Defined in‚ÄãswapRouter.ts:40Helpful?PreviousStandardPermitArgumentsNextTickConstructorArgsTable of contentsPropertiesPropertiesdeadlinefeeinputTokenPermitrecipientslippageTolerancesqrtPriceLimitX96DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
210,p.org sdk v3 reference modules.md#pool init code hash,p.org sdk v3 reference modules.md#pool init code hash. 
211,p.org contracts v3 reference periphery interfaces ISelfPermit,"p.org contracts v3 reference periphery interfaces ISelfPermit.    ISelfPermit | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesIERC20MetadataIERC721PermitIMulticallINonfungiblePositionManagerINonfungibleTokenPositionDescriptorIPeripheryImmutableStateIPeripheryPaymentsIPeripheryPaymentsWithFeeIPoolInitializerIQuoterIQuoterV2ISelfPermitISwapRouterITickLensIV3MigratorexternalLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryInterfacesISelfPermitHelpful?On this pageISelfPermitFunctionality to call permit on any EIP-2612-compliant token for use in the routeFunctions‚ÄãselfPermit‚Äã function selfPermit( address token, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s ) externalCopyPermits this contract to spend a given token from msg.senderThe owner is always msg.sender and the spender is always address(this).Parameters:‚ÄãNameTypeDescriptiontokenaddressThe address of the token spentvalueuint256The amount that can be spent of tokendeadlineuint256A timestamp, the current blocktime must be less than or equal to this timestampvuint8Must produce valid secp256k1 signature from the holder along with r and srbytes32Must produce valid secp256k1 signature from the holder along with v and ssbytes32Must produce valid secp256k1 signature from the holder along with r and vselfPermitIfNecessary‚Äã function selfPermitIfNecessary( address token, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s ) externalCopyPermits this contract to spend a given token from msg.senderThe owner is always msg.sender and the spender is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermitParameters:‚ÄãNameTypeDescriptiontokenaddressThe address of the token spentvalueuint256The amount that can be spent of tokendeadlineuint256A timestamp, the current blocktime must be less than or equal to this timestampvuint8Must produce valid secp256k1 signature from the holder along with r and srbytes32Must produce valid secp256k1 signature from the holder along with v and ssbytes32Must produce valid secp256k1 signature from the holder along with r and vselfPermitAllowed‚Äã function selfPermitAllowed( address token, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s ) externalCopyPermits this contract to spend the sender's tokens for permit signatures that have the allowed parameterThe owner is always msg.sender and the spender is always address(this)Parameters:‚ÄãNameTypeDescriptiontokenaddressThe address of the token spentnonceuint256The current nonce of the ownerexpiryuint256The timestamp at which the permit is no longer validvuint8Must produce valid secp256k1 signature from the holder along with r and srbytes32Must produce valid secp256k1 signature from the holder along with v and ssbytes32Must produce valid secp256k1 signature from the holder along with r and vselfPermitAllowedIfNecessary‚Äã function selfPermitAllowedIfNecessary( address token, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s ) externalCopyPermits this contract to spend the sender's tokens for permit signatures that have the allowed parameterThe owner is always msg.sender and the spender is always address(this) Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.Parameters:‚ÄãNameTypeDescriptiontokenaddressThe address of the token spentnonceuint256The current nonce of the ownerexpiryuint256The timestamp at which the permit is no longer validvuint8Must produce valid secp256k1 signature from the holder along with r and srbytes32Must produce valid secp256k1 signature from the holder along with v and ssbytes32Must produce valid secp256k1 signature from the holder along with r and vEdit this pageHelpful?PreviousIQuoterV2NextISwapRouterFunctionsselfPermitselfPermitIfNecessaryselfPermitAllowedselfPermitAllowedIfNecessaryDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
212,p.org sdk v1 reference data,"p.org sdk v1 reference data.    Data | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKOverviewGuidesGetting StartedTechnical ReferenceDataComputationFormatOrchestrationTransactConstantsTypesüè†V1 SDKTechnical ReferenceDataHelpful?On this pagegetTokenReservesThis function fetches Uniswap reserve data for a given token address on a given network.If only a chain id is specified, the Ethereum node used to fulfill data requests is determined by ethers.getDefaultProvider, else it is the one specified by the passed provider.This function throws an error if the provided tokenAddress is not a token with a Uniswap exchange.Function Signature‚Äãexport async function getTokenReserves( tokenAddress: string, chainIdOrProvider: ChainIdOrProvider = 1): Promise<TokenReservesNormalized>CopyInput Parameters‚ÄãParameterTypeDescriptiontokenAddressstringThe checksummed address of a token with a Uniswap exchange.chainIdOrProviderChainIdOrProviderA supported chain id (1, 3, 4, or 42), or an underlying web3 provider connected to a chain with a supported chain id.Example Usage‚Äãconst tokenAddress = '0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359' // DAI Mainnetconst chainIdOrProvider: ChainIdOrProvider = 1 // could be e.g. window.ethereum insteadconst tokenReserves: TokenReservesNormalized = await getTokenReserves(tokenAddress, chainIdOrProvider)/*{ // details for the passed token token: { chainId: 1, address: '0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359', decimals: 18 }, // details for the Uniswap exchange of the passed token exchange: { chainId: 1, address: '0x09cabEC1eAd1c0Ba254B09efb3EE13841712bE14', decimals: 18 }, // details for the ETH portion of the reserves of the passed token ethReserve: { token: {  chainId: 1,  address: 'ETH',  decimals: 18 }, amount: <BigNumber> }, // details for the token portion of the reserves of the passed token tokenReserve: { token: {  chainId: 1,  address: '0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359',  decimals: 18 }, amount: <BigNumber> }}*/CopyHelpful?PreviousGetting StartedNextComputationFunction SignatureInput ParametersExample UsageDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
213,p.org contracts v3 reference periphery interfaces external IWETH9,p.org contracts v3 reference periphery interfaces external IWETH9.    IWETH9 | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesIERC20MetadataIERC721PermitIMulticallINonfungiblePositionManagerINonfungibleTokenPositionDescriptorIPeripheryImmutableStateIPeripheryPaymentsIPeripheryPaymentsWithFeeIPoolInitializerIQuoterIQuoterV2ISelfPermitISwapRouterITickLensIV3MigratorexternalIERC1271IERC20PermitAllowedIWETH9LensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryInterfacesexternalIWETH9Helpful?On this pageIWETH9Functions‚Äãdeposit‚Äã function deposit( ) externalCopyDeposit ether to get wrapped etherwithdraw‚Äã function withdraw( ) externalCopyWithdraw wrapped ether to get etherEdit this pageHelpful?PreviousIERC20PermitAllowedNextQuoterFunctionsdepositwithdrawDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
214,p.org sdk 1.0.0 reference data,p.org sdk 1.0.0 reference data. 
215,p.org sdk core reference enums SupportedChainId#polygon mumbai,p.org sdk core reference enums SupportedChainId#polygon mumbai.    SupportedChainId | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesenumsRoundingSupportedChainIdTradeTypeV2 SDKV1 SDKüè†Core SDKTechnical ReferenceenumsSupportedChainIdHelpful?On this pageSupportedChainId@uniswap/sdk-core / Exports / SupportedChainIdEnumeration: SupportedChainIdTable of contents‚ÄãEnumeration Members‚ÄãARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENEnumeration Members‚ÄãARBITRUM_ONE‚Äã‚Ä¢ ARBITRUM_ONE = 42161Defined in‚Äãconstants.ts:10ARBITRUM_RINKEBY‚Äã‚Ä¢ ARBITRUM_RINKEBY = 421611Defined in‚Äãconstants.ts:11CELO‚Äã‚Ä¢ CELO = 42220Defined in‚Äãconstants.ts:19CELO_ALFAJORES‚Äã‚Ä¢ CELO_ALFAJORES = 44787Defined in‚Äãconstants.ts:20GOERLI‚Äã‚Ä¢ GOERLI = 5Defined in‚Äãconstants.ts:7KOVAN‚Äã‚Ä¢ KOVAN = 42Defined in‚Äãconstants.ts:8MAINNET‚Äã‚Ä¢ MAINNET = 1Defined in‚Äãconstants.ts:4OPTIMISM‚Äã‚Ä¢ OPTIMISM = 10Defined in‚Äãconstants.ts:13OPTIMISM_GOERLI‚Äã‚Ä¢ OPTIMISM_GOERLI = 420Defined in‚Äãconstants.ts:14POLYGON‚Äã‚Ä¢ POLYGON = 137Defined in‚Äãconstants.ts:16POLYGON_MUMBAI‚Äã‚Ä¢ POLYGON_MUMBAI = 80001Defined in‚Äãconstants.ts:17RINKEBY‚Äã‚Ä¢ RINKEBY = 4Defined in‚Äãconstants.ts:6ROPSTEN‚Äã‚Ä¢ ROPSTEN = 3Defined in‚Äãconstants.ts:5Helpful?PreviousRoundingNextTradeTypeTable of contentsEnumeration MembersEnumeration MembersARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
216,p.org contracts v3 reference periphery test PathTest,"p.org contracts v3 reference periphery test PathTest.    PathTest | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerTestBase64TestLiquidityAmountsTestMockTimeNonfungiblePositionManagerMockTimeSwapRouterNFTDescriptorTestPathTestPeripheryImmutableStateTestPoolAddressTestSelfPermitTestTestCallbackValidationTestERC20TestERC20MetadataTestERC20PermitAllowedTestMulticallTestPositionNFTOwnerTestUniswapV3CalleeTickLensTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryTestPathTestHelpful?On this pagePathTestFunctions‚ÄãhasMultiplePools‚Äã function hasMultiplePools( ) public returns (bool)CopydecodeFirstPool‚Äã function decodeFirstPool( ) public returns (address tokenA, address tokenB, uint24 fee)CopygetFirstPool‚Äã function getFirstPool( ) public returns (bytes)CopyskipToken‚Äã function skipToken( ) public returns (bytes)CopygetGasCostOfDecodeFirstPool‚Äã function getGasCostOfDecodeFirstPool( ) public returns (uint256)CopyEdit this pageHelpful?PreviousNFTDescriptorTestNextPeripheryImmutableStateTestFunctionshasMultiplePoolsdecodeFirstPoolgetFirstPoolskipTokengetGasCostOfDecodeFirstPoolDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
217,p.org sdk v3 reference classes NonfungiblePositionManager#constructor,"p.org sdk v3 reference classes NonfungiblePositionManager#constructor.    NonfungiblePositionManager | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesNonfungiblePositionManagerHelpful?On this pageNonfungiblePositionManager@uniswap/v3-sdk / Exports / NonfungiblePositionManagerClass: NonfungiblePositionManagerTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãaddCallParameterscollectCallParameterscreateCallParametersencodeCollectencodeCreateremoveCallParameterssafeTransferFromParametersConstructors‚Äãconstructor‚Äã‚Ä¢ Private new NonfungiblePositionManager()Cannot be constructed.Defined in‚ÄãnonfungiblePositionManager.ts:181Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚ÄãnonfungiblePositionManager.ts:176Methods‚ÄãaddCallParameters‚Äã‚ñ∏ Static addCallParameters(position, options): MethodParametersParameters‚ÄãNameTypepositionPositionoptionsAddLiquidityOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:199collectCallParameters‚Äã‚ñ∏ Static collectCallParameters(options): MethodParametersParameters‚ÄãNameTypeoptionsCollectOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:326createCallParameters‚Äã‚ñ∏ Static createCallParameters(pool): MethodParametersParameters‚ÄãNameTypepoolPoolReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:192encodeCollect‚Äã‚ñ∏ Static Private encodeCollect(options): string[]Parameters‚ÄãNameTypeoptionsCollectOptionsReturns‚Äãstring[]Defined in‚ÄãnonfungiblePositionManager.ts:286encodeCreate‚Äã‚ñ∏ Static Private encodeCreate(pool): stringParameters‚ÄãNameTypepoolPoolReturns‚ÄãstringDefined in‚ÄãnonfungiblePositionManager.ts:183removeCallParameters‚Äã‚ñ∏ Static removeCallParameters(position, options): MethodParametersProduces the calldata for completely or partially exiting a positionParameters‚ÄãNameTypeDescriptionpositionPositionThe position to exitoptionsRemoveLiquidityOptionsAdditional information necessary for generating the calldataReturns‚ÄãMethodParametersThe call parametersDefined in‚ÄãnonfungiblePositionManager.ts:341safeTransferFromParameters‚Äã‚ñ∏ Static safeTransferFromParameters(options): MethodParametersParameters‚ÄãNameTypeoptionsSafeTransferOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:416Helpful?PreviousNoTickDataProviderNextPaymentsTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsaddCallParameterscollectCallParameterscreateCallParametersencodeCollectencodeCreateremoveCallParameterssafeTransferFromParametersDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
218,p.org sdk core reference classes Fraction#multiply,"p.org sdk core reference classes Fraction#multiply.    Fraction | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesFractionHelpful?On this pageFraction@uniswap/sdk-core / Exports / FractionClass: FractionHierarchy‚ÄãFraction‚Ü≥ CurrencyAmount‚Ü≥ Percent‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatornumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionConstructors‚Äãconstructor‚Äã‚Ä¢ new Fraction(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:107subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:138toSignificant‚Äã‚ñ∏ toSignificant(significantDigits, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:123tryParseFraction‚Äã‚ñ∏ Static Private tryParseFraction(fractionish): FractionParameters‚ÄãNameTypefractionishBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:33Helpful?PreviousEtherNextNativeCurrencyHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatornumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
219,p.org contracts v2 guides smart contract integration supporting meta transactions,"p.org contracts v2 guides smart contract integration supporting meta transactions.    Supporting meta transactions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationSmart Contract Quick startImplement a SwapProviding LiquidityBuilding an OracleFlash SwapsPair AddressesSupporting meta transactionsTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolGuidesSmart Contract IntegrationSupporting meta transactionsHelpful?On this pageSupporting meta transactionsAll Uniswap V2 pool tokens support meta-transaction approvals via the permit function. This obviates the need for a blocking approve transaction before programmatic interactions with pool tokens can occur.ERC-712In vanilla ERC-20 token contracts, owners may only register approvals by directly calling a function which uses msg.sender to permission itself. With meta-approvals, ownership and permissioning are derived from a signature passed into the function by the caller (sometimes referred to as the relayer). Because signing data with Ethereum private keys can be a tricky endeavor, Uniswap V2 relies on ERC-712, a signature standard with widespread community support, to ensure user safety and wallet compatibility.Domain Separator‚Äãkeccak256( abi.encode( keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'), keccak256(bytes(name)), keccak256(bytes('1')), chainId, address(this) ));Copyname is always Uniswap V2, see name.chainId is determined from the ERC-1344 chainid opcode.address(this) is the address of the pair, see Pair Addresses.Permit Typehash‚Äãkeccak256('Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)');`CopyEdit this pageHelpful?PreviousPair AddressesNextAPI OverviewDomain SeparatorPermit TypehashDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
220,p.org sdk core reference classes Percent,"p.org sdk core reference classes Percent.    Percent | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPercentHelpful?On this pagePercent@uniswap/sdk-core / Exports / PercentClass: PercentHierarchy‚ÄãFraction‚Ü≥ PercentTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatorisPercentnumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Percent(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshInherited from‚ÄãFraction.constructorDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26isPercent‚Äã‚Ä¢ Readonly isPercent: trueThis boolean prevents a fraction from being interpreted as a PercentDefined in‚Äãentities/fractions/percent.ts:19numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.addDefined in‚Äãentities/fractions/percent.ts:21divide‚Äã‚ñ∏ divide(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/percent.ts:33equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/percent.ts:29subtract‚Äã‚ñ∏ subtract(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/percent.ts:25toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber2format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/percent.ts:41toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber5format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/percent.ts:37Helpful?PreviousNativeCurrencyNextPriceHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatorisPercentnumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
221,p.org sdk v3 reference interfaces RemoveLiquidityOptions#permit,"p.org sdk v3 reference interfaces RemoveLiquidityOptions#permit.    RemoveLiquidityOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesRemoveLiquidityOptionsHelpful?On this pageRemoveLiquidityOptions@uniswap/v3-sdk / Exports / RemoveLiquidityOptionsInterface: RemoveLiquidityOptionsOptions for producing the calldata to exit a position.Table of contents‚ÄãProperties‚ÄãburnTokencollectOptionsdeadlineliquidityPercentagepermitslippageTolerancetokenIdProperties‚ÄãburnToken‚Äã‚Ä¢ Optional burnToken: booleanWhether the NFT should be burned if the entire position is being exited, by default false.Defined in‚ÄãnonfungiblePositionManager.ts:162collectOptions‚Äã‚Ä¢ collectOptions: Omit<CollectOptions, ""tokenId"">Parameters to be passed on to collectDefined in‚ÄãnonfungiblePositionManager.ts:172deadline‚Äã‚Ä¢ deadline: BigintIshWhen the transaction expires, in epoch seconds.Defined in‚ÄãnonfungiblePositionManager.ts:157liquidityPercentage‚Äã‚Ä¢ liquidityPercentage: PercentThe percentage of position liquidity to exit.Defined in‚ÄãnonfungiblePositionManager.ts:147permit‚Äã‚Ä¢ Optional permit: NFTPermitOptionsThe optional permit of the token ID being exited, in case the exit transaction is being sent by an account that does not own the NFTDefined in‚ÄãnonfungiblePositionManager.ts:167slippageTolerance‚Äã‚Ä¢ slippageTolerance: PercentHow much the pool price is allowed to move.Defined in‚ÄãnonfungiblePositionManager.ts:152tokenId‚Äã‚Ä¢ tokenId: BigintIshThe ID of the token to exitDefined in‚ÄãnonfungiblePositionManager.ts:142Helpful?PreviousQuoteOptionsNextSafeTransferOptionsTable of contentsPropertiesPropertiesburnTokencollectOptionsdeadlineliquidityPercentagepermitslippageTolerancetokenIdDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
222,p.org sdk v3 reference interfaces CollectOptions,"p.org sdk v3 reference interfaces CollectOptions.    CollectOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesCollectOptionsHelpful?On this pageCollectOptions@uniswap/v3-sdk / Exports / CollectOptionsInterface: CollectOptionsTable of contents‚ÄãProperties‚ÄãexpectedCurrencyOwed0expectedCurrencyOwed1recipienttokenIdProperties‚ÄãexpectedCurrencyOwed0‚Äã‚Ä¢ expectedCurrencyOwed0: CurrencyAmount<Currency>Expected value of tokensOwed0, including as-of-yet-unaccounted-for fees/liquidity value to be burnedDefined in‚ÄãnonfungiblePositionManager.ts:114expectedCurrencyOwed1‚Äã‚Ä¢ expectedCurrencyOwed1: CurrencyAmount<Currency>Expected value of tokensOwed1, including as-of-yet-unaccounted-for fees/liquidity value to be burnedDefined in‚ÄãnonfungiblePositionManager.ts:119recipient‚Äã‚Ä¢ recipient: stringThe account that should receive the tokens.Defined in‚ÄãnonfungiblePositionManager.ts:124tokenId‚Äã‚Ä¢ tokenId: BigintIshIndicates the ID of the position to collect for.Defined in‚ÄãnonfungiblePositionManager.ts:109Helpful?PreviousClaimOptionsNextCommonAddLiquidityOptionsTable of contentsPropertiesPropertiesexpectedCurrencyOwed0expectedCurrencyOwed1recipienttokenIdDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
223,p.org sdk core reference classes CurrencyAmount#toexact,"p.org sdk core reference classes CurrencyAmount#toexact.    CurrencyAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesCurrencyAmountHelpful?On this pageCurrencyAmount@uniswap/sdk-core / Exports / CurrencyAmountClass: CurrencyAmount<T>Type parameters‚ÄãNameTypeTextends CurrencyHierarchy‚ÄãFraction‚Ü≥ CurrencyAmountTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãcurrencydecimalScaledenominatornumeratorAccessors‚ÄãasFractionquotientremainderwrappedMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new CurrencyAmount<T>(currency, numerator, denominator?)Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypecurrencyTnumeratorBigintIshdenominator?BigintIshOverrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/currencyAmount.ts:40Properties‚Äãcurrency‚Äã‚Ä¢ Readonly currency: TDefined in‚Äãentities/fractions/currencyAmount.ts:14decimalScale‚Äã‚Ä¢ Readonly decimalScale: defaultDefined in‚Äãentities/fractions/currencyAmount.ts:15denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47wrapped‚Äã‚Ä¢ get wrapped(): CurrencyAmount<Token>Returns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/fractions/currencyAmount.ts:91Methods‚Äãadd‚Äã‚ñ∏ add(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.addDefined in‚Äãentities/fractions/currencyAmount.ts:47divide‚Äã‚ñ∏ divide(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/currencyAmount.ts:64equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/currencyAmount.ts:59subtract‚Äã‚ñ∏ subtract(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/currencyAmount.ts:53toExact‚Äã‚ñ∏ toExact(format?): stringParameters‚ÄãNameTypeformatobjectReturns‚ÄãstringDefined in‚Äãentities/fractions/currencyAmount.ts:86toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformat?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/currencyAmount.ts:77toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/currencyAmount.ts:69fromFractionalAmount‚Äã‚ñ∏ Static fromFractionalAmount<T>(currency, numerator, denominator): CurrencyAmount<T>Construct a currency amount with a denominator that is not equal to 1Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currencynumeratorBigintIshthe numerator of the fractional token amountdenominatorBigintIshthe denominator of the fractional token amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:32fromRawAmount‚Äã‚ñ∏ Static fromRawAmount<T>(currency, rawAmount): CurrencyAmount<T>Returns a new currency amount instance from the unitless amount of token, i.e. the raw amountType parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currency in the amountrawAmountBigintIshthe raw token or ether amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:22Helpful?PreviousOverviewNextEtherType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiescurrencydecimalScaledenominatornumeratorAccessorsasFractionquotientremainderwrappedMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
224,p.org sdk v3 reference interfaces NFTPermitOptions#deadline,p.org sdk v3 reference interfaces NFTPermitOptions#deadline.    NFTPermitOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesNFTPermitOptionsHelpful?On this pageNFTPermitOptions@uniswap/v3-sdk / Exports / NFTPermitOptionsInterface: NFTPermitOptionsTable of contents‚ÄãProperties‚ÄãdeadlinersspendervProperties‚Äãdeadline‚Äã‚Ä¢ deadline: BigintIshDefined in‚ÄãnonfungiblePositionManager.ts:131r‚Äã‚Ä¢ r: stringDefined in‚ÄãnonfungiblePositionManager.ts:129s‚Äã‚Ä¢ s: stringDefined in‚ÄãnonfungiblePositionManager.ts:130spender‚Äã‚Ä¢ spender: stringDefined in‚ÄãnonfungiblePositionManager.ts:132v‚Äã‚Ä¢ v: 0 | 1 | 27 | 28Defined in‚ÄãnonfungiblePositionManager.ts:128Helpful?PreviousMintSpecificOptionsNextQuoteOptionsTable of contentsPropertiesPropertiesdeadlinersspendervDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
225,p.org sdk v3 reference modules.md#subin256,p.org sdk v3 reference modules.md#subin256. 
226,p.org concepts protocol range orders,"p.org concepts protocol range orders.    Range Orders | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchWhat Is Uniswap?The Uniswap ProtocolProtocol ConceptsConcentrated LiquidityFeesOracleRange OrdersSwapsToken Integration IssuesGovernanceResearchResourcesGlossaryüè†Protocol ConceptsRange OrdersHelpful?On this pageRange OrdersCustomizable liquidity positions, along with single-sided asset provisioning, allow for a new style of swapping with automated market makers: the range order.In typical order book markets, anyone can easily set a limit order: to buy or sell an asset at a specific predetermined price, allowing the order to be filled at an indeterminate time in the future.With Uniswap V3, one can approximate a limit order by providing a single asset as liquidity within a specific range. Like traditional limit orders, range orders may be set with the expectation they will execute at some point in the future, with the target asset available for withdrawal after the spot price has crossed the full range of the order.Unlike some markets where limit orders may incur fees, the range order maker generates fees while the order is filled. This is due to the range order technically being a form of liquidity provisioning rather than a typical swap.Possibilities of Range orders‚ÄãThe nature of AMM design makes some styles of limit orders possible, while others cannot be replicated. The following are four examples of range orders and their traditional counterparts; the first two are possible, the second two are not.One important distinction: range orders, unlike traditional limit orders, will be unfilled if the spot price crosses the given range and then reverses to recross in the opposite direction before the target asset is withdrawn. While you will be earning LP fees during this time, if the goal is to exit fully in the desired destination asset, you will need to keep an eye on the order and either manually remove your liquidity when the order has been filled or use a third party position manager service to withdraw on your behalf.Take-Profit Orders‚ÄãThe current price of a DAI / ETH pool is 1,500 DAI / ETH. You would like to sell your ETH for DAI when the price of ETH reaches 1,600 DAI / ETH. This is possible, as the price space above the spot price is denominated in the higher valued asset, ETH. You can provide ETH at a price of 1,600 DAI / ETH and have the order filled when the spot price crosses your position.¬†¬†¬†¬†¬†¬†¬†Buy Limit Orders‚ÄãThe Current price of a DAI / ETH pool is 1,500 DAI / ETH. You expect that ETH will rebound after it drops to 1,000 at the next market downturn, so you would like to place a range order swapping DAI to ETH at the price of 1,000 DAI / ETH. This is possible, as the price space below the spot price is denominated in the lower-priced asset, DAI. You can provide DAI at the price of 1,000 DAI / ETH, which will be swapped for ETH when the spot price of ETH drops past 1,000 DAI / ETH.As the above examples show, in Uniswap V3, the two paired assets in a given pool are separated above and below the spot price, with the higher price asset available above the spot price and the lower-priced asset below.The following examples show limit order styles that are unable to be replicated due to the separation of assets in price space.Buy Stop Orders‚ÄãThe current price of a DAI / ETH pool is 1,500 DAI / ETH. You expect the price of ETH to rocket up to 3,000 once it hits 2,000 DAI/ ETH, So you would like to place a range order from DAI to ETH at a price of 2,000 DAI/ETH. This is not possible as the price space above 1,500 DAI / ETH is denominated in ETH - and thus, you cannot provide the DAI necessary at your desired price to be swapped into ETH.Stop-Loss Orders‚ÄãThe current price of a DAI / ETH pool is 1,500 DAI / ETH. You expect once the price of ETH drops to below 1,000, it will tank to 200. So you would like to place a range order from ETH to DAI at a price of 1,000. This is not possible as the price space below the spot price is denominated in DAI, and so you cannot allocate the ETH necessary at 1,000 to be swapped into DAI.Fees‚ÄãThe fees due to your liquidity position will be denominated in both tokens of the given pair. In any of the above examples, after swapping ETH for DAI, or DAI for ETH, a small amount of both ETH and DAI will be due to your account as liquidity provisioning rewards.Approaches to concentration when setting range orders are up to the user. Selecting a wider range may generate more fees if there is price churn within your range, at the cost of increasing the risk of having your order unfilled if the spot price reverses before completing your full range.Helpful?PreviousOracleNextSwapsPossibilities of Range ordersTake-Profit OrdersBuy Limit OrdersBuy Stop OrdersStop-Loss OrdersFeesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
227,p.org sdk v3 reference classes TickMath#getsqrtratioattick,"p.org sdk v3 reference classes TickMath#getsqrtratioattick.    TickMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickMathHelpful?On this pageTickMath@uniswap/v3-sdk / Exports / TickMathClass: TickMathTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãMAX_SQRT_RATIOMAX_TICKMIN_SQRT_RATIOMIN_TICKMethods‚ÄãgetSqrtRatioAtTickgetTickAtSqrtRatioConstructors‚Äãconstructor‚Äã‚Ä¢ Private new TickMath()Cannot be constructed.Defined in‚Äãutils/tickMath.ts:17Properties‚ÄãMAX_SQRT_RATIO‚Äã‚ñ™ Static MAX_SQRT_RATIO: defaultThe sqrt ratio corresponding to the maximum tick that could be used on any pool.Defined in‚Äãutils/tickMath.ts:35MAX_TICK‚Äã‚ñ™ Static MAX_TICK: number = -TickMath.MIN_TICKThe maximum tick that can be used on any pool.Defined in‚Äãutils/tickMath.ts:26MIN_SQRT_RATIO‚Äã‚ñ™ Static MIN_SQRT_RATIO: defaultThe sqrt ratio corresponding to the minimum tick that could be used on any pool.Defined in‚Äãutils/tickMath.ts:31MIN_TICK‚Äã‚ñ™ Static MIN_TICK: number = -887272The minimum tick that can be used on any pool.Defined in‚Äãutils/tickMath.ts:22Methods‚ÄãgetSqrtRatioAtTick‚Äã‚ñ∏ Static getSqrtRatioAtTick(tick): defaultReturns the sqrt ratio as a Q64.96 for the given tick. The sqrt ratio is computed as sqrt(1.0001)^tickParameters‚ÄãNameTypeDescriptionticknumberthe tick for which to compute the sqrt ratioReturns‚ÄãdefaultDefined in‚Äãutils/tickMath.ts:41getTickAtSqrtRatio‚Äã‚ñ∏ Static getTickAtSqrtRatio(sqrtRatioX96): numberReturns the tick corresponding to a given sqrt ratio, s.t. #getSqrtRatioAtTick(tick) <= sqrtRatioX96 and #getSqrtRatioAtTick(tick + 1) > sqrtRatioX96Parameters‚ÄãNameTypeDescriptionsqrtRatioX96defaultthe sqrt ratio as a Q64.96 for which to compute the tickReturns‚ÄãnumberDefined in‚Äãutils/tickMath.ts:82Helpful?PreviousTickListDataProviderNextTradeTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesMAX_SQRT_RATIOMAX_TICKMIN_SQRT_RATIOMIN_TICKMethodsgetSqrtRatioAtTickgetTickAtSqrtRatioDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
228,p.org sdk core reference enums SupportedChainId#optimism,p.org sdk core reference enums SupportedChainId#optimism.    SupportedChainId | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesenumsRoundingSupportedChainIdTradeTypeV2 SDKV1 SDKüè†Core SDKTechnical ReferenceenumsSupportedChainIdHelpful?On this pageSupportedChainId@uniswap/sdk-core / Exports / SupportedChainIdEnumeration: SupportedChainIdTable of contents‚ÄãEnumeration Members‚ÄãARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENEnumeration Members‚ÄãARBITRUM_ONE‚Äã‚Ä¢ ARBITRUM_ONE = 42161Defined in‚Äãconstants.ts:10ARBITRUM_RINKEBY‚Äã‚Ä¢ ARBITRUM_RINKEBY = 421611Defined in‚Äãconstants.ts:11CELO‚Äã‚Ä¢ CELO = 42220Defined in‚Äãconstants.ts:19CELO_ALFAJORES‚Äã‚Ä¢ CELO_ALFAJORES = 44787Defined in‚Äãconstants.ts:20GOERLI‚Äã‚Ä¢ GOERLI = 5Defined in‚Äãconstants.ts:7KOVAN‚Äã‚Ä¢ KOVAN = 42Defined in‚Äãconstants.ts:8MAINNET‚Äã‚Ä¢ MAINNET = 1Defined in‚Äãconstants.ts:4OPTIMISM‚Äã‚Ä¢ OPTIMISM = 10Defined in‚Äãconstants.ts:13OPTIMISM_GOERLI‚Äã‚Ä¢ OPTIMISM_GOERLI = 420Defined in‚Äãconstants.ts:14POLYGON‚Äã‚Ä¢ POLYGON = 137Defined in‚Äãconstants.ts:16POLYGON_MUMBAI‚Äã‚Ä¢ POLYGON_MUMBAI = 80001Defined in‚Äãconstants.ts:17RINKEBY‚Äã‚Ä¢ RINKEBY = 4Defined in‚Äãconstants.ts:6ROPSTEN‚Äã‚Ä¢ ROPSTEN = 3Defined in‚Äãconstants.ts:5Helpful?PreviousRoundingNextTradeTypeTable of contentsEnumeration MembersEnumeration MembersARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
229,p.org contracts v3 reference core interfaces pool IUniswapV3PoolOwnerActions,"p.org contracts v3 reference core interfaces pool IUniswapV3PoolOwnerActions.    IUniswapV3PoolOwnerActions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesIERC20MinimalIUniswapV3FactoryIUniswapV3PoolIUniswapV3PoolDeployercallbackPoolIUniswapV3PoolActionsIUniswapV3PoolDerivedStateIUniswapV3PoolEventsIUniswapV3PoolImmutablesIUniswapV3PoolOwnerActionsIUniswapV3PoolStateLibrariesGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreInterfacesPoolIUniswapV3PoolOwnerActionsHelpful?On this pageIUniswapV3PoolOwnerActionsContains pool methods that may only be called by the factory ownerFunctions‚ÄãsetFeeProtocol‚Äã function setFeeProtocol( uint8 feeProtocol0, uint8 feeProtocol1 ) externalCopySet the denominator of the protocol's % share of the feesParameters:‚ÄãNameTypeDescriptionfeeProtocol0uint8new protocol fee for token0 of the poolfeeProtocol1uint8new protocol fee for token1 of the poolcollectProtocol‚Äã function collectProtocol( address recipient, uint128 amount0Requested, uint128 amount1Requested ) external returns (uint128 amount0, uint128 amount1)CopyCollect the protocol fee accrued to the poolParameters:‚ÄãNameTypeDescriptionrecipientaddressThe address to which collected protocol fees should be sentamount0Requesteduint128The maximum amount of token0 to send, can be 0 to collect fees in only token1amount1Requesteduint128The maximum amount of token1 to send, can be 0 to collect fees in only token0Return Values:‚ÄãNameTypeDescriptionamount0uint128The protocol fee collected in token0amount1uint128The protocol fee collected in token1Edit this pageHelpful?PreviousIUniswapV3PoolImmutablesNextIUniswapV3PoolStateFunctionssetFeeProtocolcollectProtocolDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
230,p.org sdk core reference classes Ether#wrapped,"p.org sdk core reference classes Ether#wrapped.    Ether | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesEtherHelpful?On this pageEther@uniswap/sdk-core / Exports / EtherClass: EtherEther is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnetsHierarchy‚ÄãNativeCurrency‚Ü≥ EtherTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãchainIddecimalsisNativeisTokennamesymbol_etherCacheAccessors‚ÄãwrappedMethods‚ÄãequalsonChainConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new Ether(chainId)Parameters‚ÄãNameTypechainIdnumberOverrides‚ÄãNativeCurrency.constructorDefined in‚Äãentities/ether.ts:11Properties‚ÄãchainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãNativeCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãNativeCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: trueInherited from‚ÄãNativeCurrency.isNativeDefined in‚Äãentities/nativeCurrency.ts:7isToken‚Äã‚Ä¢ Readonly isToken: falseInherited from‚ÄãNativeCurrency.isTokenDefined in‚Äãentities/nativeCurrency.ts:8name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãNativeCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãNativeCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29_etherCache‚Äã‚ñ™ Static Private _etherCache: Object = {}Index signature‚Äã‚ñ™ [chainId: number]: EtherDefined in‚Äãentities/ether.ts:21Accessors‚Äãwrapped‚Äã‚Ä¢ get wrapped(): TokenReturn the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to be used in UniswapReturns‚ÄãTokenOverrides‚ÄãNativeCurrency.wrappedDefined in‚Äãentities/ether.ts:15Methods‚Äãequals‚Äã‚ñ∏ equals(other): booleanReturns whether this currency is functionally equivalent to the other currencyParameters‚ÄãNameTypeDescriptionotherCurrencythe other currencyReturns‚ÄãbooleanOverrides‚ÄãNativeCurrency.equalsDefined in‚Äãentities/ether.ts:27onChain‚Äã‚ñ∏ Static onChain(chainId): EtherParameters‚ÄãNameTypechainIdnumberReturns‚ÄãEtherDefined in‚Äãentities/ether.ts:23Helpful?PreviousCurrencyAmountNextFractionHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertieschainIddecimalsisNativeisTokennamesymbol_etherCacheAccessorswrappedMethodsequalsonChainDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
231,p.org sdk v3 reference classes TickMath#max tick,"p.org sdk v3 reference classes TickMath#max tick.    TickMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickMathHelpful?On this pageTickMath@uniswap/v3-sdk / Exports / TickMathClass: TickMathTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãMAX_SQRT_RATIOMAX_TICKMIN_SQRT_RATIOMIN_TICKMethods‚ÄãgetSqrtRatioAtTickgetTickAtSqrtRatioConstructors‚Äãconstructor‚Äã‚Ä¢ Private new TickMath()Cannot be constructed.Defined in‚Äãutils/tickMath.ts:17Properties‚ÄãMAX_SQRT_RATIO‚Äã‚ñ™ Static MAX_SQRT_RATIO: defaultThe sqrt ratio corresponding to the maximum tick that could be used on any pool.Defined in‚Äãutils/tickMath.ts:35MAX_TICK‚Äã‚ñ™ Static MAX_TICK: number = -TickMath.MIN_TICKThe maximum tick that can be used on any pool.Defined in‚Äãutils/tickMath.ts:26MIN_SQRT_RATIO‚Äã‚ñ™ Static MIN_SQRT_RATIO: defaultThe sqrt ratio corresponding to the minimum tick that could be used on any pool.Defined in‚Äãutils/tickMath.ts:31MIN_TICK‚Äã‚ñ™ Static MIN_TICK: number = -887272The minimum tick that can be used on any pool.Defined in‚Äãutils/tickMath.ts:22Methods‚ÄãgetSqrtRatioAtTick‚Äã‚ñ∏ Static getSqrtRatioAtTick(tick): defaultReturns the sqrt ratio as a Q64.96 for the given tick. The sqrt ratio is computed as sqrt(1.0001)^tickParameters‚ÄãNameTypeDescriptionticknumberthe tick for which to compute the sqrt ratioReturns‚ÄãdefaultDefined in‚Äãutils/tickMath.ts:41getTickAtSqrtRatio‚Äã‚ñ∏ Static getTickAtSqrtRatio(sqrtRatioX96): numberReturns the tick corresponding to a given sqrt ratio, s.t. #getSqrtRatioAtTick(tick) <= sqrtRatioX96 and #getSqrtRatioAtTick(tick + 1) > sqrtRatioX96Parameters‚ÄãNameTypeDescriptionsqrtRatioX96defaultthe sqrt ratio as a Q64.96 for which to compute the tickReturns‚ÄãnumberDefined in‚Äãutils/tickMath.ts:82Helpful?PreviousTickListDataProviderNextTradeTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesMAX_SQRT_RATIOMAX_TICKMIN_SQRT_RATIOMIN_TICKMethodsgetSqrtRatioAtTickgetTickAtSqrtRatioDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
232,p.org contracts v3 reference periphery libraries Path,"p.org contracts v3 reference periphery libraries Path.    Path | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesBase64BytesLibCallbackValidationChainIdHexStringsLiquidityAmountsNFTDescriptorNFTSVGOracleLibraryPathPoolAddressPoolTicksCounterPositionKeyTokenRatioSortOrderTransferHelperWeightedOracleLibraryStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryLibrariesPathHelpful?On this pagePathFunctions‚ÄãhasMultiplePools‚Äã function hasMultiplePools( bytes path ) internal returns (bool)CopyReturns true iff the path contains two or more poolsParameters:‚ÄãNameTypeDescriptionpathbytesThe encoded swap pathReturn Values:‚ÄãTypeDescriptionboolif path contains two or more pools, otherwise falsedecodeFirstPool‚Äã function decodeFirstPool( bytes path ) internal returns (address tokenA, address tokenB, uint24 fee)CopyDecodes the first pool in pathParameters:‚ÄãNameTypeDescriptionpathbytesThe bytes encoded swap pathReturn Values:‚ÄãNameTypeDescriptiontokenAaddressThe first token of the given pooltokenBaddressThe second token of the given poolfeeuint24The fee level of the poolgetFirstPool‚Äã function getFirstPool( bytes path ) internal returns (bytes)CopyGets the segment corresponding to the first pool in the pathParameters:‚ÄãNameTypeDescriptionpathbytesThe bytes encoded swap pathReturn Values:‚ÄãTypeDescriptionbytessegment containing all data necessary to target the first pool in the pathskipToken‚Äã function skipToken( bytes path ) internal returns (bytes)CopySkips a token + fee element from the buffer and returns the remainderParameters:‚ÄãNameTypeDescriptionpathbytesThe swap pathReturn Values:‚ÄãTypeDescriptionbytesremaining token + fee elements in the pathEdit this pageHelpful?PreviousOracleLibraryNextPoolAddressFunctionshasMultiplePoolsdecodeFirstPoolgetFirstPoolskipTokenDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
233,p.org sdk v3 reference classes Position#fromamount0,"p.org sdk v3 reference classes Position#fromamount0.    Position | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPositionHelpful?On this pagePosition@uniswap/v3-sdk / Exports / PositionClass: PositionRepresents a position on a Uniswap V3 PoolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessors‚Äãamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethods‚ÄãburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsConstructors‚Äãconstructor‚Äã‚Ä¢ new Position(__namedParameters)Constructs a position for a given pool with the given liquidityParameters‚ÄãNameType__namedParametersPositionConstructorArgsDefined in‚Äãentities/position.ts:40Properties‚Äã_mintAmounts‚Äã‚Ä¢ Private _mintAmounts: null | Readonly<{ amount0: default ; amount1: default }> = nullDefined in‚Äãentities/position.ts:31_token0Amount‚Äã‚Ä¢ Private _token0Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:29_token1Amount‚Äã‚Ä¢ Private _token1Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:30liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/position.ts:26pool‚Äã‚Ä¢ Readonly pool: PoolDefined in‚Äãentities/position.ts:23tickLower‚Äã‚Ä¢ Readonly tickLower: numberDefined in‚Äãentities/position.ts:24tickUpper‚Äã‚Ä¢ Readonly tickUpper: numberDefined in‚Äãentities/position.ts:25Accessors‚Äãamount0‚Äã‚Ä¢ get amount0(): CurrencyAmount<Token>Returns the amount of token0 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:68amount1‚Äã‚Ä¢ get amount1(): CurrencyAmount<Token>Returns the amount of token1 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:100mintAmounts‚Äã‚Ä¢ get mintAmounts(): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at the current price for the poolReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>Defined in‚Äãentities/position.ts:258token0PriceLower‚Äã‚Ä¢ get token0PriceLower(): Price<Token, Token>Returns the price of token0 at the lower tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:54token0PriceUpper‚Äã‚Ä¢ get token0PriceUpper(): Price<Token, Token>Returns the price of token0 at the upper tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:61Methods‚ÄãburnAmountsWithSlippage‚Äã‚ñ∏ burnAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercenttolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:213mintAmountsWithSlippage‚Äã‚ñ∏ mintAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to safely mint the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentTolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:157ratiosAfterSlippage‚Äã‚ñ∏ Private ratiosAfterSlippage(slippageTolerance): ObjectReturns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentageParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe amount by which the price can 'slip' before the transaction will revertReturns‚ÄãObjectThe sqrt ratios after slippageNameTypesqrtRatioX96LowerdefaultsqrtRatioX96UpperdefaultDefined in‚Äãentities/position.ts:134fromAmount0‚Äã‚ñ∏ Static fromAmount0(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited amount of token1Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:354fromAmount1‚Äã‚ñ∏ Static fromAmount1(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited amount of token0Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumberReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:378fromAmounts‚Äã‚ñ∏ Static fromAmounts(__namedParameters): PositionComputes the maximum amount of liquidity received for a given amount of token0, token1, and the prices at the tick boundaries.Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe amount of liquidity for the positionDefined in‚Äãentities/position.ts:312Helpful?PreviousPoolNextPositionLibraryTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessorsamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethodsburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
234,p.org contracts v3 guides flash integrations inheritance constructors,"p.org contracts v3 guides flash integrations inheritance constructors.    Getting Started | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGetting StartedCalling FlashThe Flash CallbackThe Final ContractGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolGuidesImplement Flash SwapsGetting StartedHelpful?On this pageGetting StartedIn this guide, we will write a smart contract that calls flash on a V3 pool and swaps the full amount withdrawn of token0 and token1 in the corresponding pools with the same token pair - but different fee tiers. After the swap, the contract will pay back the first pool and transfer profits to the original calling address.Flash Transactions Overview‚ÄãFlash transactions are an approach to transferring tokens on Ethereum that transfer token balances before the necessary conditions are met for those balances to be transferred. In the context of a swap, this would mean the output is sent from the swap before the input is received.Uniswap V3 introduces a new function, flash, within the Pool contract. Flash withdraws a specified amount of both token0 and token1 to the recipient address. The withdrawn amount, plus the swap fees, will be due to the pool at the end of the transaction. flash includes a fourth parameter, data, which allows the caller to abi.encode any necessary data to be passed through the function and decoded later. function flash(  address recipient,  uint256 amount0,  uint256 amount1,  bytes calldata data ) external override lock noDelegateCall {CopyThe Flash Callback‚Äãflash will withdraw the tokens, but how are they paid back? To understand this, we must look inside the flash function code. midway through the flash function, we see this:IUniswapV3FlashCallback(msg.sender).uniswapV3FlashCallback(fee0, fee1, data);CopyThis step calls the FlashCallback function on msg.sender - which passes the fee data needed to calculate the balances due to the pool, as well as any data encoded into the data parameter.In V3 there are three separate callback functions, uniswapV3SwapCallback, uniswapV3MintCallback, and uniswapV3FlashCallback, each available to be overridden with custom logic. To write our arbitrage contract, we'll be calling flash and overriding the uniswapV3FlashCallback with the steps needed to finish executing our transaction.Inheriting The V3 Contracts‚ÄãInherit IUniswapV3FlashCallback and PeripheryPayments, as we will use each in our program. Note these two inherited contracts already extend many other contracts that we will be using, such as LowGasSafeMath which we attach, to types uint256 and int256.contract PairFlash is IUniswapV3FlashCallback, PeripheryPayments { using LowGasSafeMath for uint256; using LowGasSafeMath for int256;CopyDeclare an immutable public variable swapRouter of type ISwapRouter: ISwapRouter public Immutable swapRouter;CopyDeclare the constructor here, which is executed once when the contract is deployed. Our constructor hardcodes the address of the V3 router, factory, and the address of weth9, the ERC-20 wrapper for ether. constructor(  ISwapRouter _swapRouter,  address _factory,  address _WETH9 ) PeripheryImmutableState(_factory, _WETH9) {  swapRouter = _swapRouter; }CopyThe full import section and contract declaration:pragma solidity =0.7.6;pragma abicoder v2;import '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3FlashCallback.sol';import '@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol';import '@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol';import '@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol';import '@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol';import '@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol';import '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';import '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';contract PairFlash is IUniswapV3FlashCallback, PeripheryPayments { using LowGasSafeMath for uint256; using LowGasSafeMath for int256; ISwapRouter public immutable swapRouter; constructor(  ISwapRouter _swapRouter,  address _factory,  address _WETH9 ) PeripheryImmutableState(_factory, _WETH9) {  swapRouter = _swapRouter; }CopyEdit this pageHelpful?PreviousOverviewNextCalling FlashFlash Transactions OverviewThe Flash CallbackInheriting The V3 ContractsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
235,p.org sdk v3 reference classes FullMath#constructor,"p.org sdk v3 reference classes FullMath#constructor.    FullMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesFullMathHelpful?On this pageFullMath@uniswap/v3-sdk / Exports / FullMathClass: FullMathTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãmulDivRoundingUpConstructors‚Äãconstructor‚Äã‚Ä¢ Private new FullMath()Cannot be constructed.Defined in‚Äãutils/fullMath.ts:8Methods‚ÄãmulDivRoundingUp‚Äã‚ñ∏ Static mulDivRoundingUp(a, b, denominator): defaultParameters‚ÄãNameTypeadefaultbdefaultdenominatordefaultReturns‚ÄãdefaultDefined in‚Äãutils/fullMath.ts:10Helpful?PreviousOverviewNextLiquidityMathTable of contentsConstructorsMethodsConstructorsconstructorMethodsmulDivRoundingUpDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
236,p.org sdk core reference classes Percent#lessthan,"p.org sdk core reference classes Percent#lessthan.    Percent | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPercentHelpful?On this pagePercent@uniswap/sdk-core / Exports / PercentClass: PercentHierarchy‚ÄãFraction‚Ü≥ PercentTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatorisPercentnumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Percent(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshInherited from‚ÄãFraction.constructorDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26isPercent‚Äã‚Ä¢ Readonly isPercent: trueThis boolean prevents a fraction from being interpreted as a PercentDefined in‚Äãentities/fractions/percent.ts:19numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.addDefined in‚Äãentities/fractions/percent.ts:21divide‚Äã‚ñ∏ divide(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/percent.ts:33equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/percent.ts:29subtract‚Äã‚ñ∏ subtract(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/percent.ts:25toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber2format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/percent.ts:41toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber5format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/percent.ts:37Helpful?PreviousNativeCurrencyNextPriceHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatorisPercentnumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
237,p.org sdk core reference classes Fraction#equalto,"p.org sdk core reference classes Fraction#equalto.    Fraction | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesFractionHelpful?On this pageFraction@uniswap/sdk-core / Exports / FractionClass: FractionHierarchy‚ÄãFraction‚Ü≥ CurrencyAmount‚Ü≥ Percent‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatornumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionConstructors‚Äãconstructor‚Äã‚Ä¢ new Fraction(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:107subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:138toSignificant‚Äã‚ñ∏ toSignificant(significantDigits, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:123tryParseFraction‚Äã‚ñ∏ Static Private tryParseFraction(fractionish): FractionParameters‚ÄãNameTypefractionishBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:33Helpful?PreviousEtherNextNativeCurrencyHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatornumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
238,p.org sdk core reference classes Token#istoken,"p.org sdk core reference classes Token#istoken.    Token | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesTokenHelpful?On this pageToken@uniswap/sdk-core / Exports / TokenClass: TokenRepresents an ERC20 token with a unique address and some metadata.Hierarchy‚ÄãBaseCurrency‚Ü≥ TokenTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãaddresschainIddecimalsisNativeisTokennamesymbolAccessors‚ÄãwrappedMethods‚ÄãequalssortsBeforeConstructors‚Äãconstructor‚Äã‚Ä¢ new Token(chainId, address, decimals, symbol?, name?, bypassChecksum?)Parameters‚ÄãNameTypeDescriptionchainIdnumberBaseCurrency#chainIdaddressstringThe contract address on the chain on which this token livesdecimalsnumberBaseCurrency#decimalssymbol?stringBaseCurrency#symbolname?stringBaseCurrency#namebypassChecksum?booleanIf true it only checks for length === 42, startsWith 0x and contains only hex charactersOverrides‚ÄãBaseCurrency.constructorDefined in‚Äãentities/token.ts:27Properties‚Äãaddress‚Äã‚Ä¢ Readonly address: stringThe contract address on the chain on which this token livesDefined in‚Äãentities/token.ts:16chainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãBaseCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãBaseCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: falseOverrides‚ÄãBaseCurrency.isNativeDefined in‚Äãentities/token.ts:10isToken‚Äã‚Ä¢ Readonly isToken: trueOverrides‚ÄãBaseCurrency.isTokenDefined in‚Äãentities/token.ts:11name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãBaseCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãBaseCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29Accessors‚Äãwrapped‚Äã‚Ä¢ get wrapped(): TokenReturn this token, which does not need to be wrappedReturns‚ÄãTokenOverrides‚ÄãBaseCurrency.wrappedDefined in‚Äãentities/token.ts:66Methods‚Äãequals‚Äã‚ñ∏ equals(other): booleanReturns true if the two tokens are equivalent, i.e. have the same chainId and address.Parameters‚ÄãNameTypeDescriptionotherCurrencyother token to compareReturns‚ÄãbooleanOverrides‚ÄãBaseCurrency.equalsDefined in‚Äãentities/token.ts:47sortsBefore‚Äã‚ñ∏ sortsBefore(other): booleanReturns true if the address of this token sorts before the address of the other tokenThrowsif the tokens have the same addressThrowsif the tokens are on different chainsParameters‚ÄãNameTypeDescriptionotherTokenother token to compareReturns‚ÄãbooleanDefined in‚Äãentities/token.ts:57Helpful?PreviousPriceNextRoundingHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesaddresschainIddecimalsisNativeisTokennamesymbolAccessorswrappedMethodsequalssortsBeforeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
239,p.org sdk v3 reference classes Trade#priceimpact,"p.org sdk v3 reference classes Trade#priceimpact.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTradeHelpful?On this pageTrade@uniswap/v3-sdk / Exports / TradeClass: Trade<TInput, TOutput, TTradeType>Represents a trade executed against a set of routes where some percentage of the input is split across each route.Each route has its own set of pools. Pools can not be re-used across routes.Does not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and when it is executed.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessors‚ÄãexecutionPriceinputAmountoutputAmountpriceImpactrouteMethods‚ÄãmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Trade<TInput, TOutput, TTradeType>(__namedParameters)Construct a trade by passing in the pre-computed property valuesType parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyTTradeTypeextends TradeTypeParameters‚ÄãNameType__namedParametersObject__namedParameters.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]__namedParameters.tradeTypeTTradeTypeDefined in‚Äãentities/trade.ts:397Properties‚Äã_executionPrice‚Äã‚Ä¢ Private _executionPrice: undefined | Price<TInput, TOutput>The cached result of the computed execution priceDefined in‚Äãentities/trade.ts:143_inputAmount‚Äã‚Ä¢ Private _inputAmount: undefined | CurrencyAmount<TInput>The cached result of the input amount computationDefined in‚Äãentities/trade.ts:97_outputAmount‚Äã‚Ä¢ Private _outputAmount: undefined | CurrencyAmount<TOutput>The cached result of the output amount computationDefined in‚Äãentities/trade.ts:120_priceImpact‚Äã‚Ä¢ Private _priceImpact: undefined | PercentThe cached result of the price impact computationDefined in‚Äãentities/trade.ts:164swaps‚Äã‚Ä¢ Readonly swaps: { inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]The swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.Defined in‚Äãentities/trade.ts:82tradeType‚Äã‚Ä¢ Readonly tradeType: TTradeTypeThe type of the trade, either exact in or exact out.Defined in‚Äãentities/trade.ts:91Accessors‚ÄãexecutionPrice‚Äã‚Ä¢ get executionPrice(): Price<TInput, TOutput>The price expressed in terms of output amount/input amount.Returns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/trade.ts:148inputAmount‚Äã‚Ä¢ get inputAmount(): CurrencyAmount<TInput>The input amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TInput>Defined in‚Äãentities/trade.ts:102outputAmount‚Äã‚Ä¢ get outputAmount(): CurrencyAmount<TOutput>The output amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TOutput>Defined in‚Äãentities/trade.ts:125priceImpact‚Äã‚Ä¢ get priceImpact(): PercentReturns the percent difference between the route's mid price and the price impactReturns‚ÄãPercentDefined in‚Äãentities/trade.ts:169route‚Äã‚Ä¢ get route(): Route<TInput, TOutput>DeprecatedDeprecated in favor of 'swaps' property. If the trade consists of multiple routes this will return an error.When the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.Returns‚ÄãRoute<TInput, TOutput>Defined in‚Äãentities/trade.ts:73Methods‚ÄãmaximumAmountIn‚Äã‚ñ∏ maximumAmountIn(slippageTolerance, amountIn?): CurrencyAmount<TInput>Get the maximum amount in that can be spent via this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountInCurrencyAmount<TInput>-Returns‚ÄãCurrencyAmount<TInput>The amount inDefined in‚Äãentities/trade.ts:456minimumAmountOut‚Äã‚ñ∏ minimumAmountOut(slippageTolerance, amountOut?): CurrencyAmount<TOutput>Get the minimum amount that must be received from this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountOutCurrencyAmount<TOutput>-Returns‚ÄãCurrencyAmount<TOutput>The amount outDefined in‚Äãentities/trade.ts:438worstExecutionPrice‚Äã‚ñ∏ worstExecutionPrice(slippageTolerance): Price<TInput, TOutput>Return the execution price after accounting for slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentthe allowed tolerated slippageReturns‚ÄãPrice<TInput, TOutput>The execution priceDefined in‚Äãentities/trade.ts:471bestTradeExactIn‚Äã‚ñ∏ Static bestTradeExactIn<TInput, TOutput>(pools, currencyAmountIn, currencyOut, __namedParameters?, currentPools?, nextAmountIn?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_INPUT>[]>Given a list of pools, and a fixed amount in, returns the top maxNumResults trades that go from an input token amount to an output token, making at most maxHops hops. Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyAmountInCurrencyAmount<TInput>undefinedused in recursion; the original value of the currencyAmountIn parametercurrencyOutTOutputundefinedthe desired currency out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountInCurrencyAmount<Currency>currencyAmountInexact amount of input currency to spendbestTradesTrade<TInput, TOutput, EXACT_INPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>[]>The exact in tradeDefined in‚Äãentities/trade.ts:495bestTradeExactOut‚Äã‚ñ∏ Static bestTradeExactOut<TInput, TOutput>(pools, currencyIn, currencyAmountOut, __namedParameters?, currentPools?, nextAmountOut?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>similar to the above method but instead targets a fixed output amount given a list of pools, and a fixed amount out, returns the top maxNumResults trades that go from an input token to an output token amount, making at most maxHops hops note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyInTInputundefinedthe currency to spendcurrencyAmountOutCurrencyAmount<TOutput>undefinedthe desired currency amount out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountOutCurrencyAmount<Currency>currencyAmountOutthe exact amount of currency outbestTradesTrade<TInput, TOutput, EXACT_OUTPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>The exact out tradeDefined in‚Äãentities/trade.ts:576createUncheckedTrade‚Äã‚ñ∏ Static createUncheckedTrade<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.inputAmountCurrencyAmount<TInput>-constructorArguments.outputAmountCurrencyAmount<TOutput>-constructorArguments.routeRoute<TInput, TOutput>-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:346createUncheckedTradeWithMultipleRoutes‚Äã‚ñ∏ Static createUncheckedTradeWithMultipleRoutes<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:377exactIn‚Äã‚ñ∏ Static exactIn<TInput, TOutput>(route, amountIn): Promise<Trade<TInput, TOutput, EXACT_INPUT>>Constructs an exact in trade with the given amount in and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact in tradeamountInCurrencyAmount<TInput>The amount being passed inReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>>The exact in tradeDefined in‚Äãentities/trade.ts:194exactOut‚Äã‚ñ∏ Static exactOut<TInput, TOutput>(route, amountOut): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>>Constructs an exact out trade with the given amount out and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact out tradeamountOutCurrencyAmount<TOutput>The amount returned by the tradeReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>>The exact out tradeDefined in‚Äãentities/trade.ts:209fromRoute‚Äã‚ñ∏ Static fromRoute<TInput, TOutput, TTradeType>(route, amount, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade by simulating swaps through the given routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>route to swap throughamountTTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>the amount specified, either input or output, depending on tradeTypetradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The routeDefined in‚Äãentities/trade.ts:226fromRoutes‚Äã‚ñ∏ Static fromRoutes<TInput, TOutput, TTradeType>(routes, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade from routes by simulating swapsType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionroutes{ amount: TTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]the routes to swap through and how much of the amount should be routed through eachtradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The tradeDefined in‚Äãentities/trade.ts:276Helpful?PreviousTickMathNextFeeAmountType parametersTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessorsexecutionPriceinputAmountoutputAmountpriceImpactrouteMethodsmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
240,p.org sdk v3 reference classes Position#fromamounts,"p.org sdk v3 reference classes Position#fromamounts.    Position | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPositionHelpful?On this pagePosition@uniswap/v3-sdk / Exports / PositionClass: PositionRepresents a position on a Uniswap V3 PoolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessors‚Äãamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethods‚ÄãburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsConstructors‚Äãconstructor‚Äã‚Ä¢ new Position(__namedParameters)Constructs a position for a given pool with the given liquidityParameters‚ÄãNameType__namedParametersPositionConstructorArgsDefined in‚Äãentities/position.ts:40Properties‚Äã_mintAmounts‚Äã‚Ä¢ Private _mintAmounts: null | Readonly<{ amount0: default ; amount1: default }> = nullDefined in‚Äãentities/position.ts:31_token0Amount‚Äã‚Ä¢ Private _token0Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:29_token1Amount‚Äã‚Ä¢ Private _token1Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:30liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/position.ts:26pool‚Äã‚Ä¢ Readonly pool: PoolDefined in‚Äãentities/position.ts:23tickLower‚Äã‚Ä¢ Readonly tickLower: numberDefined in‚Äãentities/position.ts:24tickUpper‚Äã‚Ä¢ Readonly tickUpper: numberDefined in‚Äãentities/position.ts:25Accessors‚Äãamount0‚Äã‚Ä¢ get amount0(): CurrencyAmount<Token>Returns the amount of token0 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:68amount1‚Äã‚Ä¢ get amount1(): CurrencyAmount<Token>Returns the amount of token1 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:100mintAmounts‚Äã‚Ä¢ get mintAmounts(): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at the current price for the poolReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>Defined in‚Äãentities/position.ts:258token0PriceLower‚Äã‚Ä¢ get token0PriceLower(): Price<Token, Token>Returns the price of token0 at the lower tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:54token0PriceUpper‚Äã‚Ä¢ get token0PriceUpper(): Price<Token, Token>Returns the price of token0 at the upper tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:61Methods‚ÄãburnAmountsWithSlippage‚Äã‚ñ∏ burnAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercenttolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:213mintAmountsWithSlippage‚Äã‚ñ∏ mintAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to safely mint the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentTolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:157ratiosAfterSlippage‚Äã‚ñ∏ Private ratiosAfterSlippage(slippageTolerance): ObjectReturns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentageParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe amount by which the price can 'slip' before the transaction will revertReturns‚ÄãObjectThe sqrt ratios after slippageNameTypesqrtRatioX96LowerdefaultsqrtRatioX96UpperdefaultDefined in‚Äãentities/position.ts:134fromAmount0‚Äã‚ñ∏ Static fromAmount0(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited amount of token1Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:354fromAmount1‚Äã‚ñ∏ Static fromAmount1(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited amount of token0Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumberReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:378fromAmounts‚Äã‚ñ∏ Static fromAmounts(__namedParameters): PositionComputes the maximum amount of liquidity received for a given amount of token0, token1, and the prices at the tick boundaries.Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe amount of liquidity for the positionDefined in‚Äãentities/position.ts:312Helpful?PreviousPoolNextPositionLibraryTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessorsamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethodsburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
241,p.org sdk v3 reference interfaces MintSpecificOptions#createpool,p.org sdk v3 reference interfaces MintSpecificOptions#createpool.    MintSpecificOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesMintSpecificOptionsHelpful?On this pageMintSpecificOptions@uniswap/v3-sdk / Exports / MintSpecificOptionsInterface: MintSpecificOptionsTable of contents‚ÄãProperties‚ÄãcreatePoolrecipientProperties‚ÄãcreatePool‚Äã‚Ä¢ Optional createPool: booleanCreates pool if not initialized before mint.Defined in‚ÄãnonfungiblePositionManager.ts:34recipient‚Äã‚Ä¢ recipient: stringThe account that should receive the minted NFT.Defined in‚ÄãnonfungiblePositionManager.ts:29Helpful?PreviousMethodParametersNextNFTPermitOptionsTable of contentsPropertiesPropertiescreatePoolrecipientDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
242,p.org sdk core reference enums TradeType#exact input,p.org sdk core reference enums TradeType#exact input.    TradeType | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesenumsRoundingSupportedChainIdTradeTypeV2 SDKV1 SDKüè†Core SDKTechnical ReferenceenumsTradeTypeHelpful?On this pageTradeType@uniswap/sdk-core / Exports / TradeTypeEnumeration: TradeTypeTable of contents‚ÄãEnumeration Members‚ÄãEXACT_INPUTEXACT_OUTPUTEnumeration Members‚ÄãEXACT_INPUT‚Äã‚Ä¢ EXACT_INPUT = 0Defined in‚Äãconstants.ts:27EXACT_OUTPUT‚Äã‚Ä¢ EXACT_OUTPUT = 1Defined in‚Äãconstants.ts:28Helpful?PreviousSupportedChainIdNextOverviewTable of contentsEnumeration MembersEnumeration MembersEXACT_INPUTEXACT_OUTPUTDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
243,p.org sdk v3 reference classes Multicall#interface,p.org sdk v3 reference classes Multicall#interface.    Multicall | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesMulticallHelpful?On this pageMulticall@uniswap/v3-sdk / Exports / MulticallClass: MulticallTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãencodeMulticallConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Multicall()Cannot be constructed.Defined in‚Äãmulticall.ts:10Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚Äãmulticall.ts:5Methods‚ÄãencodeMulticall‚Äã‚ñ∏ Static encodeMulticall(calldatas): stringParameters‚ÄãNameTypecalldatasstring | string[]Returns‚ÄãstringDefined in‚Äãmulticall.ts:12Helpful?PreviousLiquidityMathNextNoTickDataProviderTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsencodeMulticallDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
244,p.org sdk core reference modules.md#bigintish,p.org sdk core reference modules.md#bigintish. 
245,p.org sdk v3 reference classes PositionLibrary#gettokensowed,"p.org sdk v3 reference classes PositionLibrary#gettokensowed.    PositionLibrary | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPositionLibraryHelpful?On this pagePositionLibrary@uniswap/v3-sdk / Exports / PositionLibraryClass: PositionLibraryTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãgetTokensOwedConstructors‚Äãconstructor‚Äã‚Ä¢ Private new PositionLibrary()Cannot be constructed.Defined in‚Äãutils/position.ts:10Methods‚ÄãgetTokensOwed‚Äã‚ñ∏ Static getTokensOwed(feeGrowthInside0LastX128, feeGrowthInside1LastX128, liquidity, feeGrowthInside0X128, feeGrowthInside1X128): default[]Parameters‚ÄãNameTypefeeGrowthInside0LastX128defaultfeeGrowthInside1LastX128defaultliquiditydefaultfeeGrowthInside0X128defaultfeeGrowthInside1X128defaultReturns‚Äãdefault[]Defined in‚Äãutils/position.ts:13Helpful?PreviousPositionNextRouteTable of contentsConstructorsMethodsConstructorsconstructorMethodsgetTokensOwedDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
246,p.org sdk core reference classes Price#multiply,"p.org sdk core reference classes Price#multiply.    Price | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPriceHelpful?On this pagePrice@uniswap/sdk-core / Exports / PriceClass: Price<TBase, TQuote>Type parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyHierarchy‚ÄãFraction‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessors‚ÄãadjustedForDecimalsasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Price<TBase, TQuote>(...args)Construct a price, either with the base and quote currency amount, or theType parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyParameters‚ÄãNameType...args[TBase, TQuote, BigintIsh, BigintIsh] | [{ baseAmount: CurrencyAmount<TBase> ; quoteAmount: CurrencyAmount<TQuote> }]Overrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/price.ts:18Properties‚ÄãbaseCurrency‚Äã‚Ä¢ Readonly baseCurrency: TBaseDefined in‚Äãentities/fractions/price.ts:10denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25quoteCurrency‚Äã‚Ä¢ Readonly quoteCurrency: TQuoteDefined in‚Äãentities/fractions/price.ts:11scalar‚Äã‚Ä¢ Readonly scalar: FractionDefined in‚Äãentities/fractions/price.ts:12Accessors‚ÄãadjustedForDecimals‚Äã‚Ä¢ Private get adjustedForDecimals(): FractionGet the value scaled by decimals for formattingReturns‚ÄãFractionDefined in‚Äãentities/fractions/price.ts:77asFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.addDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.divideDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): Price<TQuote, TBase>Flip the price, switching the base and quote currencyReturns‚ÄãPrice<TQuote, TBase>Overrides‚ÄãFraction.invertDefined in‚Äãentities/fractions/price.ts:49lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply<TOtherQuote>(other): Price<TBase, TOtherQuote>Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currencyType parameters‚ÄãNameTypeTOtherQuoteextends CurrencyParameters‚ÄãNameTypeDescriptionotherPrice<TQuote, TOtherQuote>the other priceReturns‚ÄãPrice<TBase, TOtherQuote>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/price.ts:57quote‚Äã‚ñ∏ quote(currencyAmount): CurrencyAmount<TQuote>Return the amount of quote currency corresponding to a given amount of the base currencyParameters‚ÄãNameTypeDescriptioncurrencyAmountCurrencyAmount<TBase>the amount of base currency to quote against the priceReturns‚ÄãCurrencyAmount<TQuote>Defined in‚Äãentities/fractions/price.ts:67subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.subtractDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber4format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/price.ts:85toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/price.ts:81Helpful?PreviousPercentNextTokenType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessorsadjustedForDecimalsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
247,p.org sdk v3 reference interfaces MethodParameters#calldata,p.org sdk v3 reference interfaces MethodParameters#calldata.    MethodParameters | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesMethodParametersHelpful?On this pageMethodParameters@uniswap/v3-sdk / Exports / MethodParametersInterface: MethodParametersGenerated method parameters for executing a call.Table of contents‚ÄãProperties‚ÄãcalldatavalueProperties‚Äãcalldata‚Äã‚Ä¢ calldata: stringThe hex encoded calldata to perform the given operationDefined in‚Äãutils/calldata.ts:11value‚Äã‚Ä¢ value: stringThe amount of ether (wei) to send in hex.Defined in‚Äãutils/calldata.ts:15Helpful?PreviousIncreaseSpecificOptionsNextMintSpecificOptionsTable of contentsPropertiesPropertiescalldatavalueDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
248,p.org contracts v3 reference periphery libraries Base64,p.org contracts v3 reference periphery libraries Base64.    Base64 | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesBase64BytesLibCallbackValidationChainIdHexStringsLiquidityAmountsNFTDescriptorNFTSVGOracleLibraryPathPoolAddressPoolTicksCounterPositionKeyTokenRatioSortOrderTransferHelperWeightedOracleLibraryStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryLibrariesBase64Helpful?On this pageBase64Provides a function for encoding some bytes in base64Functions‚Äãencode‚Äã function encode( ) internal returns (string)CopyEncodes some bytes to the base64 representationEdit this pageHelpful?PreviousTickLensNextBytesLibFunctionsencodeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
249,p.org sdk v3 reference interfaces CommonAddLiquidityOptions,"p.org sdk v3 reference interfaces CommonAddLiquidityOptions.    CommonAddLiquidityOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesCommonAddLiquidityOptionsHelpful?On this pageCommonAddLiquidityOptions@uniswap/v3-sdk / Exports / CommonAddLiquidityOptionsInterface: CommonAddLiquidityOptionsOptions for producing the calldata to add liquidity.Table of contents‚ÄãProperties‚ÄãdeadlineslippageTolerancetoken0Permittoken1PermituseNativeProperties‚Äãdeadline‚Äã‚Ä¢ deadline: BigintIshWhen the transaction expires, in epoch seconds.Defined in‚ÄãnonfungiblePositionManager.ts:56slippageTolerance‚Äã‚Ä¢ slippageTolerance: PercentHow much the pool price is allowed to move.Defined in‚ÄãnonfungiblePositionManager.ts:51token0Permit‚Äã‚Ä¢ Optional token0Permit: PermitOptionsThe optional permit parameters for spending token0Defined in‚ÄãnonfungiblePositionManager.ts:66token1Permit‚Äã‚Ä¢ Optional token1Permit: PermitOptionsThe optional permit parameters for spending token1Defined in‚ÄãnonfungiblePositionManager.ts:71useNative‚Äã‚Ä¢ Optional useNative: NativeCurrencyWhether to spend ether. If true, one of the pool tokens must be WETH, by default falseDefined in‚ÄãnonfungiblePositionManager.ts:61Helpful?PreviousCollectOptionsNextFeeOptionsTable of contentsPropertiesPropertiesdeadlineslippageTolerancetoken0Permittoken1PermituseNativeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
250,p.org contracts v2 guides smart contract integration providing liquidity,"p.org contracts v2 guides smart contract integration providing liquidity.    Providing Liquidity | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationSmart Contract Quick startImplement a SwapProviding LiquidityBuilding an OracleFlash SwapsPair AddressesSupporting meta transactionsTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolGuidesSmart Contract IntegrationProviding LiquidityHelpful?On this pageProviding LiquidityIntroduction‚ÄãWhen providing liquidity from a smart contract, the most important thing to keep in mind is that tokens deposited into a pool at any rate other than the current reserve ratio are vulnerable to being arbitraged. As an example, if the ratio of x:y in a pair is 10:2 (i.e. the price is 5), and someone naively adds liquidity at 5:2 (a price of 2.5), the contract will simply accept all tokens (changing the price to 3.75 and opening up the market to arbitrage), but only issue pool tokens entitling the sender to the amount of assets sent at the proper ratio, in this case 5:1. To avoid donating to arbitrageurs, it is imperative to add liquidity at the current price. Luckily, it's easy to ensure that this condition is met!Using the Router‚ÄãThe easiest way to safely add liquidity to a pool is to use the router, which provides simple methods to safely add liquidity to a pool. If the liquidity is to be added to an ERC-20/ERC-20 pair, use addLiquidity. If WETH is involved, use addLiquidityETH.These methods both require the caller to commit to a belief about the current price, which is encoded in the amount*Desired parameters. Typically, it's fairly safe to assume that the current fair market price is around what the current reserve ratio is for a pair (because of arbitrage). So, if a user wants to add 1 ETH to a pool, and the current DAI/WETH ratio of the pool is 200/1, it's reasonable to calculate that 200 DAI must be sent along with the ETH, which is an implicit commitment to the price of 200 DAI/1 WETH. However, it's important to note that this must be calculated before the transaction is submitted. It is not safe to look up the reserve ratio from within a transaction and rely on it as a price belief, as this ratio can be cheaply manipulated to your detriment.However, it is still possible to submit a transaction which encodes a belief about the price which ends up being wrong because of a larger change in the true market price before the transaction is confirmed. For that reason, it's necessary to pass an additional set of parameters which encode the caller's tolerance to price changes. These amount*Min parameters should typically be set to percentages of the calculated desired price. So, at a 1% tolerance level, if our user sends a transaction with 1 ETH and 200 DAI, amountETHMin should be set to e.g. .99 ETH, and amountTokenMin should be set to 198 DAI. This means that, at worst, liquidity will be added at a rate between 198 DAI/1 ETH and 202.02 DAI/1 ETH (200 DAI/.99 ETH).Once the price calculations have been made, it's important to ensure that your contract a) controls at least as many tokens/ETH as were passed as amount*Desired parameters, and b) has granted approval to the router to withdraw this many tokens.Edit this pageHelpful?PreviousImplement a SwapNextBuilding an OracleIntroductionUsing the RouterDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
251,p.org sdk v3 guides background,"p.org sdk v3 guides background.    Background | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKGuidesBackgroundHelpful?On this pageBackgroundBefore integrating with Uniswap, it may be helpful for newcomers to review the following background information on some important developer web3 concepts, the structure of our examples, and SDK concepts.infoAlready familiar with web3 development and/or the basics of our SDK and want to get right to the code? Start with our first guide, Getting a Quote!Providers‚ÄãCommunication with the blockchain is typically done through a provider and local models of smart contracts and their ABIs.To achieve this, our examples use the ethers.js library. To instantiate a provider you will need a data source. Our examples offer two options:JSON RPC URL: If you are working directly with the Ethereum mainnet or a local fork, products such as infura offer JSON RPC URLs for a wide variety of chains and testnets. For our examples, we'll only be using the Ethereum mainnet.Wallet Extension: If you are connecting to a wallet browser extension, these wallets embed a source directly into the Javascript window object as window.ethereum. This object surfaces information about the user's wallets and provides the ability to communicate with the connected chain. Importantly for our examples, it can be used with ethers.js to construct a provider.Uniswap's Runnable Examples‚ÄãEach guide is accompanied and driven by runnable examples using React to provide a basic UI for interacting with the example. Each examples provides relevant options such as running against a local blockchain or connecting to the Ethereum mainnet directly. You also have the option of using a wallet extension which can be connected to either environment.Inputs and environment settings are configured in each example's config.ts and allows for simple setup and configuration.Developing and Testing‚ÄãTo test your code, we recommend utilizing a local fork of the Ethereum mainnet. To help facilitate easy testing, each example includes a quickstart for running the local chain with a test wallet. To further test, we also recommend using a wallet extension and connecting to the local chain. Finally, each example can be run against the Ethereum mainnet if desired. Full development instructs can be found in the README.md of each code example.Utility Libraries‚ÄãEach example is concentrated into a single file within the libs/ folder of the example, with the entry points noted in each guide and README.To allow the guides to focus on the SDK's core functionality, additional basic building blocks can be found in each example's libs folder. The exported functionality from these files is intended to be the minimum needed for each example and not a complete library for production usage. These also include storing core constants such as definitions for tokens, ABI's, and blockchain addresses that can distract from the core concepts. Below are summaries of the helping libraries you will encounter.Provider Utilities‚Äãprovider.ts wraps the basics of ethers.js and connecting to wallet extensions into an abstracted view of a provider, a wallet address, and the ability to send transactions. It also helps abstract the configured environment you wish to run against in your example without making code changes outside of your configuration.Wallet Utilities‚Äãwallet.ts offers the ability to query a wallet (whether connected via an extension or defined in code/config) for its balances and other essential information.Pool Information‚Äãpool.ts contains the basic querying of pool information when not essential / core to the relevant guideDisplay Utilities‚Äãconversion.ts provides display and light math wrappers to help show human readable prices when dealing with currency amounts (typically stored as raw numbers and the decimal placement separate for precision reasons) in the form of two functions: fromReadableAmount and toReadableAmountNotable SDK Structures and Concepts‚ÄãWhen working with the SDK it can be helpful to understand some of the design choices and why they are needed. Below you can find a few important concepts.ABI's‚ÄãTo allow others to interact with a smart contract, each contract exposes an ABI (Application Binary Interface). As these are defined on the blockchain, we must ensure the correct definitions are provided to our Javascript functions. ABI's are provided from various SDK's and imported in as needed. Some examples will define an ABI directly as needed.CurrencyAmount and JSBI‚ÄãCryptocurrency applications often work with very small fractions of tokens. As a result, high precision is very important. To ensure precision is upheld, the CurrencyAmount class helps store exact values as fractions and utilizes JSBI for compatibility across the web. To display these amounts nicely to users, additional work is sometimes required.Currency‚ÄãThe Currency class can represent both native currency (ETH) and an ERC20 Token. Currencies vary in their relative value, so the Token class allows your application to define the number of decimals needed for each currency along with the currency's address, symbol, and name.Helpful?PreviousOverviewNextGetting a QuoteProvidersUniswap's Runnable ExamplesDeveloping and TestingUtility LibrariesNotable SDK Structures and ConceptsABI'sCurrencyAmount and JSBICurrencyDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
252,p.org sdk core reference classes CurrencyAmount#remainder,"p.org sdk core reference classes CurrencyAmount#remainder.    CurrencyAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesCurrencyAmountHelpful?On this pageCurrencyAmount@uniswap/sdk-core / Exports / CurrencyAmountClass: CurrencyAmount<T>Type parameters‚ÄãNameTypeTextends CurrencyHierarchy‚ÄãFraction‚Ü≥ CurrencyAmountTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãcurrencydecimalScaledenominatornumeratorAccessors‚ÄãasFractionquotientremainderwrappedMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new CurrencyAmount<T>(currency, numerator, denominator?)Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypecurrencyTnumeratorBigintIshdenominator?BigintIshOverrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/currencyAmount.ts:40Properties‚Äãcurrency‚Äã‚Ä¢ Readonly currency: TDefined in‚Äãentities/fractions/currencyAmount.ts:14decimalScale‚Äã‚Ä¢ Readonly decimalScale: defaultDefined in‚Äãentities/fractions/currencyAmount.ts:15denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47wrapped‚Äã‚Ä¢ get wrapped(): CurrencyAmount<Token>Returns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/fractions/currencyAmount.ts:91Methods‚Äãadd‚Äã‚ñ∏ add(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.addDefined in‚Äãentities/fractions/currencyAmount.ts:47divide‚Äã‚ñ∏ divide(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/currencyAmount.ts:64equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/currencyAmount.ts:59subtract‚Äã‚ñ∏ subtract(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/currencyAmount.ts:53toExact‚Äã‚ñ∏ toExact(format?): stringParameters‚ÄãNameTypeformatobjectReturns‚ÄãstringDefined in‚Äãentities/fractions/currencyAmount.ts:86toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformat?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/currencyAmount.ts:77toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/currencyAmount.ts:69fromFractionalAmount‚Äã‚ñ∏ Static fromFractionalAmount<T>(currency, numerator, denominator): CurrencyAmount<T>Construct a currency amount with a denominator that is not equal to 1Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currencynumeratorBigintIshthe numerator of the fractional token amountdenominatorBigintIshthe denominator of the fractional token amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:32fromRawAmount‚Äã‚ñ∏ Static fromRawAmount<T>(currency, rawAmount): CurrencyAmount<T>Returns a new currency amount instance from the unitless amount of token, i.e. the raw amountType parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currency in the amountrawAmountBigintIshthe raw token or ether amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:22Helpful?PreviousOverviewNextEtherType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiescurrencydecimalScaledenominatornumeratorAccessorsasFractionquotientremainderwrappedMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
253,p.org sdk v2 reference trade,"p.org sdk v2 reference trade.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKOverviewGuidesSDK Quick startFetching DataPricingTradingPair AddressesTechnical ReferenceGetting StartedTokenPairRouteTradeFractionsFetcherOther ExportsV1 SDKüè†V2 SDKTechnical ReferenceTradeHelpful?On this pageTradeconstructor(route: Route, amount: TokenAmount, tradeType: TradeType)CopyThe Trade entity represents a fully specified trade along a route. This entity supplies all the information necessary to craft a router transaction.Exampleimport { ChainId, Token, TokenAmount, Pair, Trade, TradeType, Route } from '@uniswap/sdk'const HOT = new Token(ChainId.MAINNET, '0xc0FFee0000000000000000000000000000000000', 18, 'HOT', 'Caffeine')const NOT = new Token(ChainId.MAINNET, '0xDeCAf00000000000000000000000000000000000', 18, 'NOT', 'Caffeine')const HOT_NOT = new Pair(new TokenAmount(HOT, '2000000000000000000'), new TokenAmount(NOT, '1000000000000000000'))const NOT_TO_HOT = new Route([HOT_NOT], NOT)const trade = new Trade(NOT_TO_HOT, new TokenAmount(NOT, '1000000000000000'), TradeType.EXACT_INPUT)CopyPropertiesroute‚Äãroute: RouteCopyThe path property of the route should be passed as the path parameter to router functions.tradeType‚ÄãtradeType: TradeTypeCopyTradeType.EXACT_INPUT corresponds to swapExact*For* router functions. TradeType.EXACT_OUTPUT corresponds to swap*ForExact* router functions.inputAmount‚ÄãinputAmount: TokenAmountCopyFor exact input trades, this value should be passed as amountIn to router functions. For exact output trades, this value should be multiplied by a factor >1, representing slippage tolerance, and passed as amountInMax to router functions.outputAmount‚ÄãoutputAmount: TokenAmountCopyFor exact output trades, this value should be passed as amountOut to router functions. For exact input trades, this value should be multiplied by a factor <1, representing slippage tolerance, and passed as amountOutMin to router functions.executionPrice‚ÄãexecutionPrice: PriceCopyThe average price that the trade would execute at.nextMidPrice‚ÄãnextMidPrice: PriceCopyWhat the new mid price would be if the trade were to execute.slippage‚Äãslippage: PercentCopyThe slippage incurred by the trade.Strictly > .30%.MethodsIn the context of the following two methods, slippage refers to the percent difference between the actual price and the trade executionPrice.minimumAmountOut (since 2.0.4)‚ÄãminimumAmountOut(slippageTolerance: Percent): TokenAmountCopyReturns the minimum amount of the output token that should be received from a trade, given the slippage tolerance.Useful when constructing a transaction for a trade of type EXACT_INPUT.maximumAmountIn (since 2.0.4)‚ÄãmaximumAmountIn(slippageTolerance: Percent): TokenAmountCopyReturns the maximum amount of the input token that should be spent on the trade, given the slippage tolerance.Useful when constructing a transaction for a trade of type EXACT_OUTPUT.Static methodsThese static methods provide ways to construct ideal trades from lists of pairs. Note these methods do not perform any aggregation across routes, as routes are linear. It's possible that a better price can be had by combining multiple trades across different routes.bestTradeExactIn‚ÄãGiven a list of pairs, a fixed amount in, and token amount out, this method returns the best maxNumResults trades that swap an input token amount to an output token, making at most maxHops hops. The returned trades are sorted by output amount, in decreasing order, and all share the given input amount.Trade.bestTradeExactIn( pairs: Pair[], amountIn: TokenAmount, tokenOut: Token, { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {}): Trade[]CopybestTradeExactOut‚ÄãSimilar to the above method, but targets a fixed output token amount. The returned trades are sorted by input amount, in increasing order, and all share the given output amount.Trade.bestTradeExactOut( pairs: Pair[], tokenIn: Token, amountOut: TokenAmount, { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {}): Trade[]CopyHelpful?PreviousRouteNextFractionsroutetradeTypeinputAmountoutputAmountexecutionPricenextMidPriceslippageminimumAmountOut (since 2.0.4)maximumAmountIn (since 2.0.4)bestTradeExactInbestTradeExactOutDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
254,p.org sdk v3 reference classes Position#amount0,"p.org sdk v3 reference classes Position#amount0.    Position | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPositionHelpful?On this pagePosition@uniswap/v3-sdk / Exports / PositionClass: PositionRepresents a position on a Uniswap V3 PoolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessors‚Äãamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethods‚ÄãburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsConstructors‚Äãconstructor‚Äã‚Ä¢ new Position(__namedParameters)Constructs a position for a given pool with the given liquidityParameters‚ÄãNameType__namedParametersPositionConstructorArgsDefined in‚Äãentities/position.ts:40Properties‚Äã_mintAmounts‚Äã‚Ä¢ Private _mintAmounts: null | Readonly<{ amount0: default ; amount1: default }> = nullDefined in‚Äãentities/position.ts:31_token0Amount‚Äã‚Ä¢ Private _token0Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:29_token1Amount‚Äã‚Ä¢ Private _token1Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:30liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/position.ts:26pool‚Äã‚Ä¢ Readonly pool: PoolDefined in‚Äãentities/position.ts:23tickLower‚Äã‚Ä¢ Readonly tickLower: numberDefined in‚Äãentities/position.ts:24tickUpper‚Äã‚Ä¢ Readonly tickUpper: numberDefined in‚Äãentities/position.ts:25Accessors‚Äãamount0‚Äã‚Ä¢ get amount0(): CurrencyAmount<Token>Returns the amount of token0 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:68amount1‚Äã‚Ä¢ get amount1(): CurrencyAmount<Token>Returns the amount of token1 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:100mintAmounts‚Äã‚Ä¢ get mintAmounts(): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at the current price for the poolReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>Defined in‚Äãentities/position.ts:258token0PriceLower‚Äã‚Ä¢ get token0PriceLower(): Price<Token, Token>Returns the price of token0 at the lower tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:54token0PriceUpper‚Äã‚Ä¢ get token0PriceUpper(): Price<Token, Token>Returns the price of token0 at the upper tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:61Methods‚ÄãburnAmountsWithSlippage‚Äã‚ñ∏ burnAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercenttolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:213mintAmountsWithSlippage‚Äã‚ñ∏ mintAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to safely mint the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentTolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:157ratiosAfterSlippage‚Äã‚ñ∏ Private ratiosAfterSlippage(slippageTolerance): ObjectReturns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentageParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe amount by which the price can 'slip' before the transaction will revertReturns‚ÄãObjectThe sqrt ratios after slippageNameTypesqrtRatioX96LowerdefaultsqrtRatioX96UpperdefaultDefined in‚Äãentities/position.ts:134fromAmount0‚Äã‚ñ∏ Static fromAmount0(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited amount of token1Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:354fromAmount1‚Äã‚ñ∏ Static fromAmount1(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited amount of token0Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumberReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:378fromAmounts‚Äã‚ñ∏ Static fromAmounts(__namedParameters): PositionComputes the maximum amount of liquidity received for a given amount of token0, token1, and the prices at the tick boundaries.Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe amount of liquidity for the positionDefined in‚Äãentities/position.ts:312Helpful?PreviousPoolNextPositionLibraryTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessorsamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethodsburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
255,p.org sdk core reference classes CurrencyAmount#invert,"p.org sdk core reference classes CurrencyAmount#invert.    CurrencyAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesCurrencyAmountHelpful?On this pageCurrencyAmount@uniswap/sdk-core / Exports / CurrencyAmountClass: CurrencyAmount<T>Type parameters‚ÄãNameTypeTextends CurrencyHierarchy‚ÄãFraction‚Ü≥ CurrencyAmountTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãcurrencydecimalScaledenominatornumeratorAccessors‚ÄãasFractionquotientremainderwrappedMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new CurrencyAmount<T>(currency, numerator, denominator?)Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypecurrencyTnumeratorBigintIshdenominator?BigintIshOverrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/currencyAmount.ts:40Properties‚Äãcurrency‚Äã‚Ä¢ Readonly currency: TDefined in‚Äãentities/fractions/currencyAmount.ts:14decimalScale‚Äã‚Ä¢ Readonly decimalScale: defaultDefined in‚Äãentities/fractions/currencyAmount.ts:15denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47wrapped‚Äã‚Ä¢ get wrapped(): CurrencyAmount<Token>Returns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/fractions/currencyAmount.ts:91Methods‚Äãadd‚Äã‚ñ∏ add(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.addDefined in‚Äãentities/fractions/currencyAmount.ts:47divide‚Äã‚ñ∏ divide(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/currencyAmount.ts:64equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/currencyAmount.ts:59subtract‚Äã‚ñ∏ subtract(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/currencyAmount.ts:53toExact‚Äã‚ñ∏ toExact(format?): stringParameters‚ÄãNameTypeformatobjectReturns‚ÄãstringDefined in‚Äãentities/fractions/currencyAmount.ts:86toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformat?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/currencyAmount.ts:77toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/currencyAmount.ts:69fromFractionalAmount‚Äã‚ñ∏ Static fromFractionalAmount<T>(currency, numerator, denominator): CurrencyAmount<T>Construct a currency amount with a denominator that is not equal to 1Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currencynumeratorBigintIshthe numerator of the fractional token amountdenominatorBigintIshthe denominator of the fractional token amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:32fromRawAmount‚Äã‚ñ∏ Static fromRawAmount<T>(currency, rawAmount): CurrencyAmount<T>Returns a new currency amount instance from the unitless amount of token, i.e. the raw amountType parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currency in the amountrawAmountBigintIshthe raw token or ether amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:22Helpful?PreviousOverviewNextEtherType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiescurrencydecimalScaledenominatornumeratorAccessorsasFractionquotientremainderwrappedMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
256,p.org sdk v3 reference classes Position#amount1,"p.org sdk v3 reference classes Position#amount1.    Position | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPositionHelpful?On this pagePosition@uniswap/v3-sdk / Exports / PositionClass: PositionRepresents a position on a Uniswap V3 PoolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessors‚Äãamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethods‚ÄãburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsConstructors‚Äãconstructor‚Äã‚Ä¢ new Position(__namedParameters)Constructs a position for a given pool with the given liquidityParameters‚ÄãNameType__namedParametersPositionConstructorArgsDefined in‚Äãentities/position.ts:40Properties‚Äã_mintAmounts‚Äã‚Ä¢ Private _mintAmounts: null | Readonly<{ amount0: default ; amount1: default }> = nullDefined in‚Äãentities/position.ts:31_token0Amount‚Äã‚Ä¢ Private _token0Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:29_token1Amount‚Äã‚Ä¢ Private _token1Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:30liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/position.ts:26pool‚Äã‚Ä¢ Readonly pool: PoolDefined in‚Äãentities/position.ts:23tickLower‚Äã‚Ä¢ Readonly tickLower: numberDefined in‚Äãentities/position.ts:24tickUpper‚Äã‚Ä¢ Readonly tickUpper: numberDefined in‚Äãentities/position.ts:25Accessors‚Äãamount0‚Äã‚Ä¢ get amount0(): CurrencyAmount<Token>Returns the amount of token0 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:68amount1‚Äã‚Ä¢ get amount1(): CurrencyAmount<Token>Returns the amount of token1 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:100mintAmounts‚Äã‚Ä¢ get mintAmounts(): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at the current price for the poolReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>Defined in‚Äãentities/position.ts:258token0PriceLower‚Äã‚Ä¢ get token0PriceLower(): Price<Token, Token>Returns the price of token0 at the lower tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:54token0PriceUpper‚Äã‚Ä¢ get token0PriceUpper(): Price<Token, Token>Returns the price of token0 at the upper tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:61Methods‚ÄãburnAmountsWithSlippage‚Äã‚ñ∏ burnAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercenttolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:213mintAmountsWithSlippage‚Äã‚ñ∏ mintAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to safely mint the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentTolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:157ratiosAfterSlippage‚Äã‚ñ∏ Private ratiosAfterSlippage(slippageTolerance): ObjectReturns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentageParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe amount by which the price can 'slip' before the transaction will revertReturns‚ÄãObjectThe sqrt ratios after slippageNameTypesqrtRatioX96LowerdefaultsqrtRatioX96UpperdefaultDefined in‚Äãentities/position.ts:134fromAmount0‚Äã‚ñ∏ Static fromAmount0(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited amount of token1Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:354fromAmount1‚Äã‚ñ∏ Static fromAmount1(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited amount of token0Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumberReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:378fromAmounts‚Äã‚ñ∏ Static fromAmounts(__namedParameters): PositionComputes the maximum amount of liquidity received for a given amount of token0, token1, and the prices at the tick boundaries.Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe amount of liquidity for the positionDefined in‚Äãentities/position.ts:312Helpful?PreviousPoolNextPositionLibraryTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessorsamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethodsburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
257,p.org sdk core reference enums SupportedChainId#celo,p.org sdk core reference enums SupportedChainId#celo.    SupportedChainId | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesenumsRoundingSupportedChainIdTradeTypeV2 SDKV1 SDKüè†Core SDKTechnical ReferenceenumsSupportedChainIdHelpful?On this pageSupportedChainId@uniswap/sdk-core / Exports / SupportedChainIdEnumeration: SupportedChainIdTable of contents‚ÄãEnumeration Members‚ÄãARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENEnumeration Members‚ÄãARBITRUM_ONE‚Äã‚Ä¢ ARBITRUM_ONE = 42161Defined in‚Äãconstants.ts:10ARBITRUM_RINKEBY‚Äã‚Ä¢ ARBITRUM_RINKEBY = 421611Defined in‚Äãconstants.ts:11CELO‚Äã‚Ä¢ CELO = 42220Defined in‚Äãconstants.ts:19CELO_ALFAJORES‚Äã‚Ä¢ CELO_ALFAJORES = 44787Defined in‚Äãconstants.ts:20GOERLI‚Äã‚Ä¢ GOERLI = 5Defined in‚Äãconstants.ts:7KOVAN‚Äã‚Ä¢ KOVAN = 42Defined in‚Äãconstants.ts:8MAINNET‚Äã‚Ä¢ MAINNET = 1Defined in‚Äãconstants.ts:4OPTIMISM‚Äã‚Ä¢ OPTIMISM = 10Defined in‚Äãconstants.ts:13OPTIMISM_GOERLI‚Äã‚Ä¢ OPTIMISM_GOERLI = 420Defined in‚Äãconstants.ts:14POLYGON‚Äã‚Ä¢ POLYGON = 137Defined in‚Äãconstants.ts:16POLYGON_MUMBAI‚Äã‚Ä¢ POLYGON_MUMBAI = 80001Defined in‚Äãconstants.ts:17RINKEBY‚Äã‚Ä¢ RINKEBY = 4Defined in‚Äãconstants.ts:6ROPSTEN‚Äã‚Ä¢ ROPSTEN = 3Defined in‚Äãconstants.ts:5Helpful?PreviousRoundingNextTradeTypeTable of contentsEnumeration MembersEnumeration MembersARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
258,p.org sdk v3 reference classes FullMath,"p.org sdk v3 reference classes FullMath.    FullMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesFullMathHelpful?On this pageFullMath@uniswap/v3-sdk / Exports / FullMathClass: FullMathTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãmulDivRoundingUpConstructors‚Äãconstructor‚Äã‚Ä¢ Private new FullMath()Cannot be constructed.Defined in‚Äãutils/fullMath.ts:8Methods‚ÄãmulDivRoundingUp‚Äã‚ñ∏ Static mulDivRoundingUp(a, b, denominator): defaultParameters‚ÄãNameTypeadefaultbdefaultdenominatordefaultReturns‚ÄãdefaultDefined in‚Äãutils/fullMath.ts:10Helpful?PreviousOverviewNextLiquidityMathTable of contentsConstructorsMethodsConstructorsconstructorMethodsmulDivRoundingUpDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
259,p.org contracts universal router technical reference#looks rare 1155,"p.org contracts universal router technical reference#looks rare 1155.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
260,p.org sdk core reference classes NativeCurrency#istoken,"p.org sdk core reference classes NativeCurrency#istoken.    NativeCurrency | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesNativeCurrencyHelpful?On this pageNativeCurrency@uniswap/sdk-core / Exports / NativeCurrencyClass: NativeCurrencyRepresents the native currency of the chain on which it resides, e.g.Hierarchy‚ÄãBaseCurrency‚Ü≥ NativeCurrency‚Ü≥‚Ü≥ EtherTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãchainIddecimalsisNativeisTokennamesymbolAccessors‚ÄãwrappedMethods‚ÄãequalsConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new NativeCurrency(chainId, decimals, symbol?, name?)Constructs an instance of the base class BaseCurrency.Parameters‚ÄãNameTypeDescriptionchainIdnumberthe chain ID on which this currency residesdecimalsnumberdecimals of the currencysymbol?stringsymbol of the currencyname?stringof the currencyInherited from‚ÄãBaseCurrency.constructorDefined in‚Äãentities/baseCurrency.ts:42Properties‚ÄãchainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãBaseCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãBaseCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: trueOverrides‚ÄãBaseCurrency.isNativeDefined in‚Äãentities/nativeCurrency.ts:7isToken‚Äã‚Ä¢ Readonly isToken: falseOverrides‚ÄãBaseCurrency.isTokenDefined in‚Äãentities/nativeCurrency.ts:8name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãBaseCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãBaseCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29Accessors‚Äãwrapped‚Äã‚Ä¢ Abstract get wrapped(): TokenReturn the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to be used in UniswapReturns‚ÄãTokenInherited from‚ÄãBaseCurrency.wrappedDefined in‚Äãentities/baseCurrency.ts:62Methods‚Äãequals‚Äã‚ñ∏ Abstract equals(other): booleanReturns whether this currency is functionally equivalent to the other currencyParameters‚ÄãNameTypeDescriptionotherCurrencythe other currencyReturns‚ÄãbooleanInherited from‚ÄãBaseCurrency.equalsDefined in‚Äãentities/baseCurrency.ts:56Helpful?PreviousFractionNextPercentHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertieschainIddecimalsisNativeisTokennamesymbolAccessorswrappedMethodsequalsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
261,p.org sdk v3 reference modules.md#permitoptions,p.org sdk v3 reference modules.md#permitoptions. 
262,p.org contracts v3 reference periphery libraries OracleLibrary,"p.org contracts v3 reference periphery libraries OracleLibrary.    OracleLibrary | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesBase64BytesLibCallbackValidationChainIdHexStringsLiquidityAmountsNFTDescriptorNFTSVGOracleLibraryPathPoolAddressPoolTicksCounterPositionKeyTokenRatioSortOrderTransferHelperWeightedOracleLibraryStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryLibrariesOracleLibraryHelpful?On this pageOracleLibraryProvides functions to integrate with V3 pool oracleFunctions‚Äãconsult‚Äã function consult( address pool, uint32 period ) internal view returns (int24 arithmeticMeanTick, uint128 harmonicMeanLiquidity)CopyCalculates time-weighted means of tick and liquidity for a given Uniswap V3 poolParameters:‚ÄãNameTypeDescriptionpooladdressAddress of Uniswap V3 pool that we want to observeperioduint32Number of seconds in the past to start calculating time-weighted averageReturn Values:‚ÄãNameTypeDescriptionarithmeticMeanTickint24The arithmetic mean tick from (block.timestamp - secondsAgo) to block.timestampharmonicMeanLiquidityuint128The harmonic mean liquidity from (block.timestamp - secondsAgo) to block.timestampgetQuoteAtTick‚Äã function getQuoteAtTick( int24 tick, uint128 baseAmount, address baseToken, address quoteToken ) internal pure returns (uint256 quoteAmount)CopyGiven a tick and a token amount, calculates the amount of token received in exchangeParameters:‚ÄãNameTypeDescriptiontickint24Tick value used to calculate the quotebaseAmountuint128Amount of token to be convertedbaseTokenaddressAddress of an ERC20 token contract used as the baseAmount denominationquoteTokenaddressAddress of an ERC20 token contract used as the quoteAmount denominationReturn Values:‚ÄãNameTypeDescriptionquoteAmountuint256Amount of quoteToken received for baseAmount of baseTokenEdit this pageHelpful?PreviousNFTSVGNextPathFunctionsconsultgetQuoteAtTickDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
263,p.org sdk core reference classes Token#decimals,"p.org sdk core reference classes Token#decimals.    Token | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesTokenHelpful?On this pageToken@uniswap/sdk-core / Exports / TokenClass: TokenRepresents an ERC20 token with a unique address and some metadata.Hierarchy‚ÄãBaseCurrency‚Ü≥ TokenTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãaddresschainIddecimalsisNativeisTokennamesymbolAccessors‚ÄãwrappedMethods‚ÄãequalssortsBeforeConstructors‚Äãconstructor‚Äã‚Ä¢ new Token(chainId, address, decimals, symbol?, name?, bypassChecksum?)Parameters‚ÄãNameTypeDescriptionchainIdnumberBaseCurrency#chainIdaddressstringThe contract address on the chain on which this token livesdecimalsnumberBaseCurrency#decimalssymbol?stringBaseCurrency#symbolname?stringBaseCurrency#namebypassChecksum?booleanIf true it only checks for length === 42, startsWith 0x and contains only hex charactersOverrides‚ÄãBaseCurrency.constructorDefined in‚Äãentities/token.ts:27Properties‚Äãaddress‚Äã‚Ä¢ Readonly address: stringThe contract address on the chain on which this token livesDefined in‚Äãentities/token.ts:16chainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãBaseCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãBaseCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: falseOverrides‚ÄãBaseCurrency.isNativeDefined in‚Äãentities/token.ts:10isToken‚Äã‚Ä¢ Readonly isToken: trueOverrides‚ÄãBaseCurrency.isTokenDefined in‚Äãentities/token.ts:11name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãBaseCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãBaseCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29Accessors‚Äãwrapped‚Äã‚Ä¢ get wrapped(): TokenReturn this token, which does not need to be wrappedReturns‚ÄãTokenOverrides‚ÄãBaseCurrency.wrappedDefined in‚Äãentities/token.ts:66Methods‚Äãequals‚Äã‚ñ∏ equals(other): booleanReturns true if the two tokens are equivalent, i.e. have the same chainId and address.Parameters‚ÄãNameTypeDescriptionotherCurrencyother token to compareReturns‚ÄãbooleanOverrides‚ÄãBaseCurrency.equalsDefined in‚Äãentities/token.ts:47sortsBefore‚Äã‚ñ∏ sortsBefore(other): booleanReturns true if the address of this token sorts before the address of the other tokenThrowsif the tokens have the same addressThrowsif the tokens are on different chainsParameters‚ÄãNameTypeDescriptionotherTokenother token to compareReturns‚ÄãbooleanDefined in‚Äãentities/token.ts:57Helpful?PreviousPriceNextRoundingHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesaddresschainIddecimalsisNativeisTokennamesymbolAccessorswrappedMethodsequalssortsBeforeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
264,p.org sdk v3 reference classes Trade#worstexecutionprice,"p.org sdk v3 reference classes Trade#worstexecutionprice.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTradeHelpful?On this pageTrade@uniswap/v3-sdk / Exports / TradeClass: Trade<TInput, TOutput, TTradeType>Represents a trade executed against a set of routes where some percentage of the input is split across each route.Each route has its own set of pools. Pools can not be re-used across routes.Does not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and when it is executed.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessors‚ÄãexecutionPriceinputAmountoutputAmountpriceImpactrouteMethods‚ÄãmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Trade<TInput, TOutput, TTradeType>(__namedParameters)Construct a trade by passing in the pre-computed property valuesType parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyTTradeTypeextends TradeTypeParameters‚ÄãNameType__namedParametersObject__namedParameters.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]__namedParameters.tradeTypeTTradeTypeDefined in‚Äãentities/trade.ts:397Properties‚Äã_executionPrice‚Äã‚Ä¢ Private _executionPrice: undefined | Price<TInput, TOutput>The cached result of the computed execution priceDefined in‚Äãentities/trade.ts:143_inputAmount‚Äã‚Ä¢ Private _inputAmount: undefined | CurrencyAmount<TInput>The cached result of the input amount computationDefined in‚Äãentities/trade.ts:97_outputAmount‚Äã‚Ä¢ Private _outputAmount: undefined | CurrencyAmount<TOutput>The cached result of the output amount computationDefined in‚Äãentities/trade.ts:120_priceImpact‚Äã‚Ä¢ Private _priceImpact: undefined | PercentThe cached result of the price impact computationDefined in‚Äãentities/trade.ts:164swaps‚Äã‚Ä¢ Readonly swaps: { inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]The swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.Defined in‚Äãentities/trade.ts:82tradeType‚Äã‚Ä¢ Readonly tradeType: TTradeTypeThe type of the trade, either exact in or exact out.Defined in‚Äãentities/trade.ts:91Accessors‚ÄãexecutionPrice‚Äã‚Ä¢ get executionPrice(): Price<TInput, TOutput>The price expressed in terms of output amount/input amount.Returns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/trade.ts:148inputAmount‚Äã‚Ä¢ get inputAmount(): CurrencyAmount<TInput>The input amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TInput>Defined in‚Äãentities/trade.ts:102outputAmount‚Äã‚Ä¢ get outputAmount(): CurrencyAmount<TOutput>The output amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TOutput>Defined in‚Äãentities/trade.ts:125priceImpact‚Äã‚Ä¢ get priceImpact(): PercentReturns the percent difference between the route's mid price and the price impactReturns‚ÄãPercentDefined in‚Äãentities/trade.ts:169route‚Äã‚Ä¢ get route(): Route<TInput, TOutput>DeprecatedDeprecated in favor of 'swaps' property. If the trade consists of multiple routes this will return an error.When the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.Returns‚ÄãRoute<TInput, TOutput>Defined in‚Äãentities/trade.ts:73Methods‚ÄãmaximumAmountIn‚Äã‚ñ∏ maximumAmountIn(slippageTolerance, amountIn?): CurrencyAmount<TInput>Get the maximum amount in that can be spent via this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountInCurrencyAmount<TInput>-Returns‚ÄãCurrencyAmount<TInput>The amount inDefined in‚Äãentities/trade.ts:456minimumAmountOut‚Äã‚ñ∏ minimumAmountOut(slippageTolerance, amountOut?): CurrencyAmount<TOutput>Get the minimum amount that must be received from this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountOutCurrencyAmount<TOutput>-Returns‚ÄãCurrencyAmount<TOutput>The amount outDefined in‚Äãentities/trade.ts:438worstExecutionPrice‚Äã‚ñ∏ worstExecutionPrice(slippageTolerance): Price<TInput, TOutput>Return the execution price after accounting for slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentthe allowed tolerated slippageReturns‚ÄãPrice<TInput, TOutput>The execution priceDefined in‚Äãentities/trade.ts:471bestTradeExactIn‚Äã‚ñ∏ Static bestTradeExactIn<TInput, TOutput>(pools, currencyAmountIn, currencyOut, __namedParameters?, currentPools?, nextAmountIn?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_INPUT>[]>Given a list of pools, and a fixed amount in, returns the top maxNumResults trades that go from an input token amount to an output token, making at most maxHops hops. Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyAmountInCurrencyAmount<TInput>undefinedused in recursion; the original value of the currencyAmountIn parametercurrencyOutTOutputundefinedthe desired currency out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountInCurrencyAmount<Currency>currencyAmountInexact amount of input currency to spendbestTradesTrade<TInput, TOutput, EXACT_INPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>[]>The exact in tradeDefined in‚Äãentities/trade.ts:495bestTradeExactOut‚Äã‚ñ∏ Static bestTradeExactOut<TInput, TOutput>(pools, currencyIn, currencyAmountOut, __namedParameters?, currentPools?, nextAmountOut?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>similar to the above method but instead targets a fixed output amount given a list of pools, and a fixed amount out, returns the top maxNumResults trades that go from an input token to an output token amount, making at most maxHops hops note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyInTInputundefinedthe currency to spendcurrencyAmountOutCurrencyAmount<TOutput>undefinedthe desired currency amount out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountOutCurrencyAmount<Currency>currencyAmountOutthe exact amount of currency outbestTradesTrade<TInput, TOutput, EXACT_OUTPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>The exact out tradeDefined in‚Äãentities/trade.ts:576createUncheckedTrade‚Äã‚ñ∏ Static createUncheckedTrade<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.inputAmountCurrencyAmount<TInput>-constructorArguments.outputAmountCurrencyAmount<TOutput>-constructorArguments.routeRoute<TInput, TOutput>-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:346createUncheckedTradeWithMultipleRoutes‚Äã‚ñ∏ Static createUncheckedTradeWithMultipleRoutes<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:377exactIn‚Äã‚ñ∏ Static exactIn<TInput, TOutput>(route, amountIn): Promise<Trade<TInput, TOutput, EXACT_INPUT>>Constructs an exact in trade with the given amount in and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact in tradeamountInCurrencyAmount<TInput>The amount being passed inReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>>The exact in tradeDefined in‚Äãentities/trade.ts:194exactOut‚Äã‚ñ∏ Static exactOut<TInput, TOutput>(route, amountOut): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>>Constructs an exact out trade with the given amount out and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact out tradeamountOutCurrencyAmount<TOutput>The amount returned by the tradeReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>>The exact out tradeDefined in‚Äãentities/trade.ts:209fromRoute‚Äã‚ñ∏ Static fromRoute<TInput, TOutput, TTradeType>(route, amount, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade by simulating swaps through the given routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>route to swap throughamountTTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>the amount specified, either input or output, depending on tradeTypetradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The routeDefined in‚Äãentities/trade.ts:226fromRoutes‚Äã‚ñ∏ Static fromRoutes<TInput, TOutput, TTradeType>(routes, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade from routes by simulating swapsType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionroutes{ amount: TTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]the routes to swap through and how much of the amount should be routed through eachtradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The tradeDefined in‚Äãentities/trade.ts:276Helpful?PreviousTickMathNextFeeAmountType parametersTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessorsexecutionPriceinputAmountoutputAmountpriceImpactrouteMethodsmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
265,p.org sdk v3 reference classes SwapQuoter#v1interface,"p.org sdk v3 reference classes SwapQuoter#v1interface.    SwapQuoter | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesSwapQuoterHelpful?On this pageSwapQuoter@uniswap/v3-sdk / Exports / SwapQuoterClass: SwapQuoterRepresents the Uniswap V3 QuoterV1 contract with a method for returning the formatted calldata needed to call the quoter contract.Table of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãV1INTERFACEV2INTERFACEMethods‚ÄãquoteCallParametersConstructors‚Äãconstructor‚Äã‚Ä¢ new SwapQuoter()Properties‚ÄãV1INTERFACE‚Äã‚ñ™ Static V1INTERFACE: InterfaceDefined in‚Äãquoter.ts:37V2INTERFACE‚Äã‚ñ™ Static V2INTERFACE: InterfaceDefined in‚Äãquoter.ts:38Methods‚ÄãquoteCallParameters‚Äã‚ñ∏ Static quoteCallParameters<TInput, TOutput>(route, amount, tradeType, options?): MethodParametersProduces the on-chain method name of the appropriate function within QuoterV2, and the relevant hex encoded parameters.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The swap route, a list of pools through which a swap can occuramountCurrencyAmount<TInput | TOutput>The amount of the quote, either an amount in, or an amount outtradeTypeTradeTypeThe trade type, either exact input or exact outputoptionsQuoteOptionsThe optional params including price limit and Quoter contract switchReturns‚ÄãMethodParametersThe formatted calldataDefined in‚Äãquoter.ts:51Helpful?PreviousSwapMathNextSwapRouterTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesV1INTERFACEV2INTERFACEMethodsquoteCallParametersDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
266,p.org sdk v1 reference transact,"p.org sdk v1 reference transact.    Transact | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKOverviewGuidesGetting StartedTechnical ReferenceDataComputationFormatOrchestrationTransactConstantsTypesüè†V1 SDKTechnical ReferenceTransactHelpful?On this pagegetExecutionDetailsThe function formats trade data for execution against the relevant Uniswap exchange.Function Signature‚Äãexport function getExecutionDetails( trade: TradeDetails, maxSlippage?: number, deadline?: number, recipient?: string): ExecutionDetailsCopyInput Parameters‚ÄãParameterTypeDescriptiontradeTradeDetailsThe trade to execute.maxSlippage?numberThe maximum slippage to allow, in basis points. Defaults to 200 (2%).deadline?numberWhen the transaction will expire. Defaults to 10 minutes in the future.recipient?numberAn optional recipient address. Defaults to the msg.senderExample Usage‚ÄãMethod arguments are returned as one of: BigNumber, number, or string. BigNumbers are large number objects, numbers are small numbers in base 10, and strings are addresses.const tradeDetails: TradeDetails = tradeExactEthForTokensWithData(reserves, '1000000000000000000')const executionDetails: ExecutionDetails = await getExecutionDetails(tradeDetails)/*{ // the address of the relevant exchange exchangeAddress: 0x09cabEC1eAd1c0Ba254B09efb3EE13841712bE14, // the name of the method that must be called methodName: ""ethToTokenSwapInput"", // the id of the method name methodId: ""0xf39b5b9b"", // the ether value that must be sent with the transaction value: <BigNumber>, // method arguments as an array methodArguments: MethodArgument[]}*/CopyHelpful?PreviousOrchestrationNextConstantsFunction SignatureInput ParametersExample UsageDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
267,p.org contracts v3 reference core libraries TransferHelper,"p.org contracts v3 reference core libraries TransferHelper.    TransferHelper | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesLibrariesBitMathFixedPoint128FixedPoint96FullMathLiquidityMathLowGasSafeMathOraclePositionSafeCastSecondsOutsideSqrtPriceMathSwapMathTickTickBitmapTickMathTransferHelperUnsafeMathGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreLibrariesTransferHelperHelpful?On this pageTransferHelperContains helper methods for interacting with ERC20 tokens that do not consistently return true/falseFunctions‚ÄãsafeTransfer‚Äã function safeTransfer( address token, address to, uint256 value ) internalCopyTransfers tokens from msg.sender to a recipientCalls transfer on token contract, errors with TF if transfer failsParameters:‚ÄãNameTypeDescriptiontokenaddressThe contract address of the token which will be transferredtoaddressThe recipient of the transfervalueuint256The value of the transferEdit this pageHelpful?PreviousTickMathNextUnsafeMathFunctionssafeTransferDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
268,p.org sdk core reference classes CurrencyAmount#lessthan,"p.org sdk core reference classes CurrencyAmount#lessthan.    CurrencyAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesCurrencyAmountHelpful?On this pageCurrencyAmount@uniswap/sdk-core / Exports / CurrencyAmountClass: CurrencyAmount<T>Type parameters‚ÄãNameTypeTextends CurrencyHierarchy‚ÄãFraction‚Ü≥ CurrencyAmountTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãcurrencydecimalScaledenominatornumeratorAccessors‚ÄãasFractionquotientremainderwrappedMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new CurrencyAmount<T>(currency, numerator, denominator?)Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypecurrencyTnumeratorBigintIshdenominator?BigintIshOverrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/currencyAmount.ts:40Properties‚Äãcurrency‚Äã‚Ä¢ Readonly currency: TDefined in‚Äãentities/fractions/currencyAmount.ts:14decimalScale‚Äã‚Ä¢ Readonly decimalScale: defaultDefined in‚Äãentities/fractions/currencyAmount.ts:15denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47wrapped‚Äã‚Ä¢ get wrapped(): CurrencyAmount<Token>Returns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/fractions/currencyAmount.ts:91Methods‚Äãadd‚Äã‚ñ∏ add(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.addDefined in‚Äãentities/fractions/currencyAmount.ts:47divide‚Äã‚ñ∏ divide(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/currencyAmount.ts:64equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/currencyAmount.ts:59subtract‚Äã‚ñ∏ subtract(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/currencyAmount.ts:53toExact‚Äã‚ñ∏ toExact(format?): stringParameters‚ÄãNameTypeformatobjectReturns‚ÄãstringDefined in‚Äãentities/fractions/currencyAmount.ts:86toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformat?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/currencyAmount.ts:77toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/currencyAmount.ts:69fromFractionalAmount‚Äã‚ñ∏ Static fromFractionalAmount<T>(currency, numerator, denominator): CurrencyAmount<T>Construct a currency amount with a denominator that is not equal to 1Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currencynumeratorBigintIshthe numerator of the fractional token amountdenominatorBigintIshthe denominator of the fractional token amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:32fromRawAmount‚Äã‚ñ∏ Static fromRawAmount<T>(currency, rawAmount): CurrencyAmount<T>Returns a new currency amount instance from the unitless amount of token, i.e. the raw amountType parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currency in the amountrawAmountBigintIshthe raw token or ether amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:22Helpful?PreviousOverviewNextEtherType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiescurrencydecimalScaledenominatornumeratorAccessorsasFractionquotientremainderwrappedMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
269,p.org sdk core reference classes CurrencyAmount#fromfractionalamount,"p.org sdk core reference classes CurrencyAmount#fromfractionalamount.    CurrencyAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesCurrencyAmountHelpful?On this pageCurrencyAmount@uniswap/sdk-core / Exports / CurrencyAmountClass: CurrencyAmount<T>Type parameters‚ÄãNameTypeTextends CurrencyHierarchy‚ÄãFraction‚Ü≥ CurrencyAmountTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãcurrencydecimalScaledenominatornumeratorAccessors‚ÄãasFractionquotientremainderwrappedMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new CurrencyAmount<T>(currency, numerator, denominator?)Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypecurrencyTnumeratorBigintIshdenominator?BigintIshOverrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/currencyAmount.ts:40Properties‚Äãcurrency‚Äã‚Ä¢ Readonly currency: TDefined in‚Äãentities/fractions/currencyAmount.ts:14decimalScale‚Äã‚Ä¢ Readonly decimalScale: defaultDefined in‚Äãentities/fractions/currencyAmount.ts:15denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47wrapped‚Äã‚Ä¢ get wrapped(): CurrencyAmount<Token>Returns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/fractions/currencyAmount.ts:91Methods‚Äãadd‚Äã‚ñ∏ add(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.addDefined in‚Äãentities/fractions/currencyAmount.ts:47divide‚Äã‚ñ∏ divide(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/currencyAmount.ts:64equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/currencyAmount.ts:59subtract‚Äã‚ñ∏ subtract(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/currencyAmount.ts:53toExact‚Äã‚ñ∏ toExact(format?): stringParameters‚ÄãNameTypeformatobjectReturns‚ÄãstringDefined in‚Äãentities/fractions/currencyAmount.ts:86toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformat?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/currencyAmount.ts:77toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/currencyAmount.ts:69fromFractionalAmount‚Äã‚ñ∏ Static fromFractionalAmount<T>(currency, numerator, denominator): CurrencyAmount<T>Construct a currency amount with a denominator that is not equal to 1Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currencynumeratorBigintIshthe numerator of the fractional token amountdenominatorBigintIshthe denominator of the fractional token amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:32fromRawAmount‚Äã‚ñ∏ Static fromRawAmount<T>(currency, rawAmount): CurrencyAmount<T>Returns a new currency amount instance from the unitless amount of token, i.e. the raw amountType parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currency in the amountrawAmountBigintIshthe raw token or ether amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:22Helpful?PreviousOverviewNextEtherType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiescurrencydecimalScaledenominatornumeratorAccessorsasFractionquotientremainderwrappedMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
270,p.org contracts v2 guides interface integration using the api,"p.org contracts v2 guides interface integration using the api.    Using the API | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationUsing the APICustom LinkingIframe IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolGuidesInterface IntegrationUsing the APIHelpful?On this pageUsing the APIIn this guide we will create a web interface that consumes and displays data from the Uniswap Subgraph. The goal is to provide a quick overview of a setup that you can extend to create your own UIs and analytics around Uniswap data.Many different libraries can be used to create an interface and a connection to the subgraph graphql endpoint, but in this guide we will use React for the interface, and Apollo Client for sending queries. We'll also be using yarn for dependency management.Setup and Installs‚ÄãWe'll need to create the basic skeleton for the application. We'll use create-react-app for this. We'll also add the dependencies we need. Navigate to your root location in your command line and run:yarn create react-app uniswap-democd uniswap-demoyarn add apollo-client apollo-cache-inmemory apollo-link-http graphql graphql-tag @apollo/react-hooksyarn startCopyIn your browser you should see the default React app running. In a text editor open App.js within src and replace the contents with this stripped down boilerplate. We'll add to this as we go.import React from 'react'import './App.css'function App() { return <div></div>}export default AppCopyGraphql Client‚ÄãWe need to set up some middleware in order to make requests to the Uniswap subgraph and receive data. To do this we'll use Apollo and create a graphql client to handle this.Add the imports shown below and instantiate a new client instance. Notice how we use the link to the Uniswap subgraph here.import React from 'react'import './App.css'import { ApolloClient } from 'apollo-client'import { InMemoryCache } from 'apollo-cache-inmemory'import { HttpLink } from 'apollo-link-http'export const client = new ApolloClient({ link: new HttpLink({ uri: 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2', }), cache: new InMemoryCache(),})function App() { return <div></div>}export default AppCopyWe also need to add a context so that Apollo can handle requests properly. In your index.js file import the proper provider and wrap the root in it like this:import React from 'react'import ReactDOM from 'react-dom'import App from './App'import registerServiceWorker from './registerServiceWorker'import './index.css'import { ApolloProvider } from 'react-apollo'import { client } from './App'ReactDOM.render( <ApolloProvider client={client}> <App /> </ApolloProvider>, document.getElementById('root'))registerServiceWorker()CopyWriting the queries‚ÄãNext we'll construct our query and fetch data. For this example we will fetch some data about the Dai token on Uniswap V2. We'll get the current price, and total liquidity across all pairs. We'll be using the Dai address as an id in this query. We'll also fetch the USD price of ETH to help create USD conversion for Dai data.First we need to define the query itself. We'll use gql to parse a query string into the GraphQL AST standard. Import the gql helper into the app and use it to create the query. Add the following to your App.js file:import gql from 'graphql-tag'const DAI_QUERY = gql` query tokens($tokenAddress: Bytes!) { tokens(where: { id: $tokenAddress }) {  derivedETH  totalLiquidity } }`const ETH_PRICE_QUERY = gql` query ethPrice { bundle(id: ""1"") {  ethPrice } }`CopyWe use an id of 1 for the bundle because there is only one hardcoded bundle in the subgraph.Fetch data‚ÄãNow we're ready to use these queries to fetch data from the Uniswap V2 subgraph. To do this we can use the useQuery hook which uses our client instance to fetch data, and gives us live info about the status of the request. To do this add the following to your App.js file:import { useQuery } from '@apollo/react-hooks'const { loading, error, data: ethPriceData } = useQuery(ETH_PRICE_QUERY)const { loading: daiLoading, error: daiError, data: daiData,} = useQuery(DAI_QUERY, { variables: { tokenAddress: '0x6b175474e89094c44da98b954eedeac495271d0f', },})CopyNotice we're using the Dai token address to fetch data about Dai.Formatting Response‚ÄãNow that we have our data we can format it and display it in the UI. First, we parse the return data to get the actual data that we want. Then we'll use it to get the USD price of Dai. Lastly we'll insert this data into the UI itself.These queries will return a response object for each query. Within each one we're interested in the root field we defined in the query definition. For the daiData response we defined this as tokens, and for the ethPriceData query we defined this as ethPrice. Within each one we'll get an array of results. Because we're only querying for single entities we'll reference the 0 index in the data array.Add the following lines to your App.js file to parse the responses:const daiPriceInEth = daiData && daiData.tokens[0].derivedETHconst daiTotalLiquidity = daiData && daiData.tokens[0].totalLiquidityconst ethPriceInUSD = ethPriceData && ethPriceData.bundles[0].ethPriceCopyDisplaying in the UI‚ÄãFinally we can use our parsed response data to hydrate the UI. We'll do this in two steps.First we'll create loading states. To detect if a query is still pending a response we can reference the loading variables we've already defined. We'll add two loading states, one for the Dai price, and one for the Dai total liquidity. These may flicker fast because the time to query is fast.Populate with loaded data. Once we detect that the queries have finished loading we can populate the UI with the real data.To do this add the following lines in the return function of your App.js file:return ( <div> <div>  Dai price:{' '}  {ethLoading || daiLoading  ? 'Loading token data...'  : '$' +   // parse responses as floats and fix to 2 decimals   (parseFloat(daiPriceInEth) * parseFloat(ethPriceInUSD)).toFixed(2)} </div> <div>  Dai total liquidity:{' '}  {daiLoading  ? 'Loading token data...'  : // display the total amount of DAI spread across all pools   parseFloat(daiTotalLiquidity).toFixed(0)} </div> </div>)CopyNext steps‚ÄãThis should render a very basic page with these two stats about the Dai token within Uniswap. This is a very basic example of what you can do with the Uniswap subgraph and we encourage you to build out more complex and interesting tools!You can visit our analytics site to see a more advanced analytics page, or visit the github for more detailed examples of using the Uniswap subgraph to create UIs.Review‚ÄãIn the end your App.js file should look like this:import React, { useEffect } from 'react'import './App.css'import { ApolloClient } from 'apollo-client'import { InMemoryCache } from 'apollo-cache-inmemory'import { HttpLink } from 'apollo-link-http'import { useQuery } from '@apollo/react-hooks'import gql from 'graphql-tag'export const client = new ApolloClient({ link: new HttpLink({ uri: 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2', }), fetchOptions: { mode: 'no-cors', }, cache: new InMemoryCache(),})const DAI_QUERY = gql` query tokens($tokenAddress: Bytes!) { tokens(where: { id: $tokenAddress }) {  derivedETH  totalLiquidity } }`const ETH_PRICE_QUERY = gql` query bundles { bundles(where: { id: ""1"" }) {  ethPrice } }`function App() { const { loading: ethLoading, data: ethPriceData } = useQuery(ETH_PRICE_QUERY) const { loading: daiLoading, data: daiData } = useQuery(DAI_QUERY, { variables: {  tokenAddress: '0x6b175474e89094c44da98b954eedeac495271d0f', }, }) const daiPriceInEth = daiData && daiData.tokens[0].derivedETH const daiTotalLiquidity = daiData && daiData.tokens[0].totalLiquidity const ethPriceInUSD = ethPriceData && ethPriceData.bundles[0].ethPrice return ( <div>  <div>  Dai price:{' '}  {ethLoading || daiLoading   ? 'Loading token data...'   : '$' +   // parse responses as floats and fix to 2 decimals   (parseFloat(daiPriceInEth) * parseFloat(ethPriceInUSD)).toFixed(2)}  </div>  <div>  Dai total liquidity:{' '}  {daiLoading   ? 'Loading token data...'   : // display the total amount of DAI spread across all pools   parseFloat(daiTotalLiquidity).toFixed(0)}  </div> </div> )}export default AppCopyEdit this pageHelpful?PreviousResearchNextCustom LinkingSetup and InstallsGraphql ClientWriting the queriesFetch dataFormatting ResponseDisplaying in the UINext stepsReviewDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
271,p.org contracts v2 reference smart contracts library#getamountin,"p.org contracts v2 reference smart contracts library#getamountin.    Library | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsLibraryHelpful?On this pageLibraryCode‚ÄãUniswapV2Library.solInternal FunctionssortTokens‚Äãfunction sortTokens(address tokenA, address tokenB) internal pure returns (address token0, address token1);CopySorts token addresses.pairFor‚Äãfunction pairFor(address factory, address tokenA, address tokenB) internal pure returns (address pair);CopyCalculates the address for a pair without making any external calls via the v2 SDK.getReserves‚Äãfunction getReserves(address factory, address tokenA, address tokenB) internal view returns (uint reserveA, uint reserveB);CopyCalls getReserves on the pair for the passed tokens, and returns the results sorted in the order that the parameters were passed in.quote‚Äãfunction quote(uint amountA, uint reserveA, uint reserveB) internal pure returns (uint amountB);CopyGiven some asset amount and reserves, returns an amount of the other asset representing equivalent value.Useful for calculating optimal token amounts before calling mint.getAmountOut‚Äãfunction getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) internal pure returns (uint amountOut);CopyGiven an input asset amount, returns the maximum output amount of the other asset (accounting for fees) given reserves.Used in getAmountsOut.getAmountIn‚Äãfunction getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) internal pure returns (uint amountIn);CopyReturns the minimum input asset amount required to buy the given output asset amount (accounting for fees) given reserves.Used in getAmountsIn.getAmountsOut‚Äãfunction getAmountsOut(uint amountIn, address[] memory path) internal view returns (uint[] memory amounts);CopyGiven an input asset amount and an array of token addresses, calculates all subsequent maximum output token amounts by calling getReserves for each pair of token addresses in the path in turn, and using these to call getAmountOut.Useful for calculating optimal token amounts before calling swap.getAmountsIn‚Äãfunction getAmountsIn(address factory, uint amountOut, address[] memory path) internal view returns (uint[] memory amounts);CopyGiven an output asset amount and an array of token addresses, calculates all preceding minimum input token amounts by calling getReserves for each pair of token addresses in the path in turn, and using these to call getAmountIn.Useful for calculating optimal token amounts before calling swap.Edit this pageHelpful?PreviousPair (ERC-20)NextRouter01CodesortTokenspairForgetReservesquotegetAmountOutgetAmountIngetAmountsOutgetAmountsInDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
272,p.org contracts universal router technical reference#owner check 721,"p.org contracts universal router technical reference#owner check 721.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
273,p.org contracts v3 reference core interfaces IUniswapV3PoolDeployer,"p.org contracts v3 reference core interfaces IUniswapV3PoolDeployer.    IUniswapV3PoolDeployer | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesIERC20MinimalIUniswapV3FactoryIUniswapV3PoolIUniswapV3PoolDeployercallbackPoolLibrariesGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreInterfacesIUniswapV3PoolDeployerHelpful?On this pageIUniswapV3PoolDeployerA contract that constructs a pool must implement this to pass arguments to the poolThis is used to avoid having constructor arguments in the pool contract, which results in the init code hash of the pool being constant allowing the CREATE2 address of the pool to be cheaply computed on-chainFunctions‚Äãparameters‚Äã function parameters( ) external view returns (address factory, address token0, address token1, uint24 fee, int24 tickSpacing)CopyGet the parameters to be used in constructing the pool, set transiently during pool creation.Return Values :‚ÄãNameTypeDescriptionfactory addressThe factory addresstoken0addressThe first token of the pool by address sort ordertoken1addressThe second token of the pool by address sort orderfee uint24The fee collected upon every swap in the pool, denominated in hundredths of a biptickSpacingint24The minimum number of ticks between initialized ticksEdit this pageHelpful?PreviousIUniswapV3PoolNextIUniswapV3FlashCallbackFunctionsparametersDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
274,p.org contracts v3 reference core UniswapV3Pool#observe,"p.org contracts v3 reference core UniswapV3Pool#observe.    UniswapV3Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesLibrariesGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreUniswapV3PoolHelpful?On this pageUniswapV3PoolFunctions‚Äã_blockTimestamp‚Äã function _blockTimestamp( ) internal view virtual returns (uint32)CopyReturns the block timestamp truncated to 32 bits, i.e. mod 2**32. This method is overridden in tests.snapshotCumulativesInside‚Äã function snapshotCumulativesInside( int24 tickLower, int24 tickUpper ) external view override noDelegateCall returns (int56 tickCumulativeInside, uint160 secondsPerLiquidityInsideX128, uint32 secondsInside)CopyReturns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick rangeSnapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.Parameters:‚ÄãNameTypeDescriptiontickLowerint24The lower tick of the rangetickUpperint24The upper tick of the rangeReturn Values:‚ÄãNameTypeDescriptiontickCumulativeInsideint56The snapshot of the tick accumulator for the rangesecondsPerLiquidityInsideX128uint160The snapshot of seconds per liquidity for the rangesecondsInsideuint32The snapshot of seconds per liquidity for the rangeobserve‚Äã function observe( uint32[] secondsAgos ) external view override noDelegateCall returns (int56[] tickCumulatives, uint160[] secondsPerLiquidityCumulativeX128s)CopyReturns the cumulative tick and liquidity as of each timestamp secondsAgo from the current block timestampTo get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0]. The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.Parameters:‚ÄãNameTypeDescriptionsecondsAgosuint32[]From how long ago each cumulative tick and liquidity value should be returnedReturn Values:‚ÄãNameTypeDescriptiontickCumulativesint56[]Cumulative tick values as of each secondsAgos from the current block timestampsecondsPerLiquidityCumulativeX128suint160[]Cumulative seconds per liquidity-in-range value as of each secondsAgos from the current blocktimestampincreaseObservationCardinalityNext‚Äã function increaseObservationCardinalityNext( uint16 observationCardinalityNext ) external override lock noDelegateCallCopyIncrease the maximum number of price and liquidity observations that this pool will storeThis method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.Parameters:‚ÄãNameTypeDescriptionobservationCardinalityNextuint16The desired minimum number of observations for the pool to storeinitialize‚Äã function initialize( uint160 sqrtPriceX96 ) external overrideCopySets the initial price for the poolnot locked because it initializes unlockedParameters:‚ÄãNameTypeDescriptionsqrtPriceX96uint160the initial sqrt price of the pool as a Q64.96mint‚Äã function mint( address recipient, int24 tickLower, int24 tickUpper, uint128 amount, bytes data ) external override lock returns (uint256 amount0, uint256 amount1)CopyAdds liquidity for the given recipient/tickLower/tickUpper positionnoDelegateCall is applied indirectly via _modifyPositionParameters:‚ÄãNameTypeDescriptionrecipientaddressThe address for which the liquidity will be createdtickLowerint24The lower tick of the position in which to add liquiditytickUpperint24The upper tick of the position in which to add liquidityamountuint128The amount of liquidity to mintdatabytesAny data that should be passed through to the callbackReturn Values:‚ÄãNameTypeDescriptionamount0uint256The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callbackamount1uint256The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callbackcollect‚Äã function collect( address recipient, int24 tickLower, int24 tickUpper, uint128 amount0Requested, uint128 amount1Requested ) external override lock returns (uint128 amount0, uint128 amount1)CopyCollects tokens owed to a positionDoes not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.Parameters:‚ÄãNameTypeDescriptionrecipientaddressThe address which should receive the fees collectedtickLowerint24The lower tick of the position for which to collect feestickUpperint24The upper tick of the position for which to collect feesamount0Requesteduint128How much token0 should be withdrawn from the fees owedamount1Requesteduint128How much token1 should be withdrawn from the fees owedReturn Values:‚ÄãNameTypeDescriptionamount0uint128The amount of fees collected in token0amount1uint128The amount of fees collected in token1burn‚Äã function burn( int24 tickLower, int24 tickUpper, uint128 amount ) external override lock returns (uint256 amount0, uint256 amount1)CopyBurn liquidity from the sender and account tokens owed for the liquidity to the positionnoDelegateCall is applied indirectly via _modifyPositionParameters:‚ÄãNameTypeDescriptiontickLowerint24The lower tick of the position for which to burn liquiditytickUpperint24The upper tick of the position for which to burn liquidityamountuint128How much liquidity to burnReturn Values:‚ÄãNameTypeDescriptionamount0uint256The amount of token0 sent to the recipientamount1uint256The amount of token1 sent to the recipientswap‚Äã function swap( address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data ) external override noDelegateCall returns (int256 amount0, int256 amount1)CopySwap token0 for token1, or token1 for token0The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallbackParameters:‚ÄãNameTypeDescriptionrecipientaddressThe address to receive the output of the swapzeroForOneboolThe direction of the swap, true for token0 to token1, false for token1 to token0amountSpecifiedint256The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96uint160The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapdatabytesAny data to be passed through to the callbackReturn Values:‚ÄãNameTypeDescriptionamount0int256The delta of the balance of token0 of the pool, exact when negative, minimum when positiveamount1int256The delta of the balance of token1 of the pool, exact when negative, minimum when positiveflash‚Äã function flash( address recipient, uint256 amount0, uint256 amount1, bytes data ) external override lock noDelegateCallCopyReceive token0 and/or token1 and pay it back, plus a fee, in the callbackThe caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callbackParameters:‚ÄãNameTypeDescriptionrecipientaddressThe address which will receive the token0 and token1 amountsamount0uint256The amount of token0 to sendamount1uint256The amount of token1 to senddatabytesAny data to be passed through to the callbacksetFeeProtocol‚Äã function setFeeProtocol( uint8 feeProtocol0, uint8 feeProtocol1 ) external override lock onlyFactoryOwnerCopySet the denominator of the protocol's % share of the feesParameters:‚ÄãNameTypeDescriptionfeeProtocol0uint8new protocol fee for token0 of the poolfeeProtocol1uint8new protocol fee for token1 of the poolcollectProtocol‚Äã function collectProtocol( address recipient, uint128 amount0Requested, uint128 amount1Requested ) external override lock onlyFactoryOwner returns (uint128 amount0, uint128 amount1)CopyCollect the protocol fee accrued to the poolParameters:‚ÄãNameTypeDescriptionrecipientaddressThe address to which collected protocol fees should be sentamount0Requesteduint128The maximum amount of token0 to send, can be 0 to collect fees in only token1amount1Requesteduint128The maximum amount of token1 to send, can be 0 to collect fees in only token0Return Values:‚ÄãNameTypeDescriptionamount0uint128The protocol fee collected in token0amount1uint128The protocol fee collected in token1Edit this pageHelpful?PreviousUniswapV3FactoryNextUniswapV3PoolDeployerFunctions_blockTimestampsnapshotCumulativesInsideobserveincreaseObservationCardinalityNextinitializemintcollectburnswapflashsetFeeProtocolcollectProtocolDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
275,p.org sdk 2.0.0 reference pair#getinputamount,p.org sdk 2.0.0 reference pair#getinputamount. 
276,p.org sdk v2 reference fetcher#fetchtokendata,"p.org sdk v2 reference fetcher#fetchtokendata.    Fetcher | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKOverviewGuidesSDK Quick startFetching DataPricingTradingPair AddressesTechnical ReferenceGetting StartedTokenPairRouteTradeFractionsFetcherOther ExportsV1 SDKüè†V2 SDKTechnical ReferenceFetcherHelpful?On this pageFetcherThe data fetching logic is split from the rest of the code for better tree-shaking, i.e. so that it does not get packaged into your code unless it is used. The SDK is otherwise unconcerned with how you get data from the blockchain.This class contains static methods for constructing instances of pairs and tokens from on-chain data. It cannot be constructed.Static MethodsfetchTokenData‚Äãasync fetchTokenData( chainId: ChainId, address: string, provider = getDefaultProvider(getNetwork(chainId)), symbol?: string, name?: string): Promise<Token>CopyInitializes a class instance from a chainId and token address, if the decimals of the token are unknown and cannot be fetched externally. Decimals are fetched via an ethers.js v5 provider. If not passed in, a default provider is used.fetchPairData‚Äãasync fetchPairData( tokenA: Token, tokenB: Token, provider = getDefaultProvider(getNetwork(tokenA.chainId))): Promise<Pair>CopyInitializes a class instance from two Tokens, if the pair's balances of these tokens are unknown and cannot be fetched externally. Pair reserves are fetched via an ethers.js v5 provider. If not passed in, a default provider is used.Helpful?PreviousFractionsNextOther ExportsfetchTokenDatafetchPairDataDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
277,p.org contracts v3 reference core libraries SafeCast,"p.org contracts v3 reference core libraries SafeCast.    SafeCast | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesLibrariesBitMathFixedPoint128FixedPoint96FullMathLiquidityMathLowGasSafeMathOraclePositionSafeCastSecondsOutsideSqrtPriceMathSwapMathTickTickBitmapTickMathTransferHelperUnsafeMathGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreLibrariesSafeCastHelpful?On this pageSafeCastContains methods for safely casting between typesFunctions‚ÄãtoUint160‚Äã function toUint160( uint256 y ) internal pure returns (uint160 z)CopyCast a uint256 to a uint160, revert on overflowParameters:‚ÄãNameTypeDescriptionyuint256The uint256 to be downcastedReturn Values:‚ÄãNameTypeDescriptionzuint160The downcasted integer, now type uint160toInt128‚Äã function toInt128( int256 y ) internal pure returns (int128 z)CopyCast a int256 to a int128, revert on overflow or underflowParameters:‚ÄãNameTypeDescriptionyint256The int256 to be downcastedReturn Values:‚ÄãNameTypeDescriptionzint128The downcasted integer, now type int128toInt256‚Äã function toInt256( uint256 y ) internal pure returns (int256 z)CopyCast a uint256 to a int256, revert on overflowParameters:‚ÄãNameTypeDescriptionyuint256The uint256 to be castedReturn Values:‚ÄãNameTypeDescriptionzint256The casted integer, now type int256Edit this pageHelpful?PreviousPositionNextSecondsOutsideFunctionstoUint160toInt128toInt256DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
278,p.org contracts v3 reference periphery libraries LiquidityAmounts,"p.org contracts v3 reference periphery libraries LiquidityAmounts.    LiquidityAmounts | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesBase64BytesLibCallbackValidationChainIdHexStringsLiquidityAmountsNFTDescriptorNFTSVGOracleLibraryPathPoolAddressPoolTicksCounterPositionKeyTokenRatioSortOrderTransferHelperWeightedOracleLibraryStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryLibrariesLiquidityAmountsHelpful?On this pageLiquidityAmountsProvides functions for computing liquidity amounts from token amounts and pricesFunctions‚ÄãgetLiquidityForAmount0‚Äã function getLiquidityForAmount0( uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, uint256 amount0 ) internal returns (uint128 liquidity)CopyComputes the amount of liquidity received for a given amount of token0 and price rangeCalculates amount0 (sqrt(upper) sqrt(lower)) / (sqrt(upper) - sqrt(lower))Parameters:‚ÄãNameTypeDescriptionsqrtRatioAX96uint160A sqrt price representing the first tick boundarysqrtRatioBX96uint160A sqrt price representing the second tick boundaryamount0uint256The amount0 being sent inReturn Values:‚ÄãNameTypeDescriptionliquidityuint128The amount of returned liquiditygetLiquidityForAmount1‚Äã function getLiquidityForAmount1( uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, uint256 amount1 ) internal returns (uint128 liquidity)CopyComputes the amount of liquidity received for a given amount of token1 and price rangeCalculates amount1 / (sqrt(upper) - sqrt(lower)).Parameters:‚ÄãNameTypeDescriptionsqrtRatioAX96uint160A sqrt price representing the first tick boundarysqrtRatioBX96uint160A sqrt price representing the second tick boundaryamount1uint256The amount1 being sent inReturn Values:‚ÄãNameTypeDescriptionliquidityuint128The amount of returned liquiditygetLiquidityForAmounts‚Äã function getLiquidityForAmounts( uint160 sqrtRatioX96, uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, uint256 amount0, uint256 amount1 ) internal returns (uint128 liquidity)CopyComputes the maximum amount of liquidity received for a given amount of token0, token1, the current pool prices and the prices at the tick boundariesParameters:‚ÄãNameTypeDescriptionsqrtRatioX96uint160A sqrt price representing the current pool pricessqrtRatioAX96uint160A sqrt price representing the first tick boundarysqrtRatioBX96uint160A sqrt price representing the second tick boundaryamount0uint256The amount of token0 being sent inamount1uint256The amount of token1 being sent inReturn Values:‚ÄãNameTypeDescriptionliquidityuint128The maximum amount of liquidity receivedgetAmount0ForLiquidity‚Äã function getAmount0ForLiquidity( uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, uint128 liquidity ) internal returns (uint256 amount0)CopyComputes the amount of token0 for a given amount of liquidity and a price rangeParameters:‚ÄãNameTypeDescriptionsqrtRatioAX96uint160A sqrt price representing the first tick boundarysqrtRatioBX96uint160A sqrt price representing the second tick boundaryliquidityuint128The liquidity being valuedReturn Values:‚ÄãNameTypeDescriptionamount0uint256The amount of token0getAmount1ForLiquidity‚Äã function getAmount1ForLiquidity( uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, uint128 liquidity ) internal returns (uint256 amount1)CopyComputes the amount of token1 for a given amount of liquidity and a price rangeParameters:‚ÄãNameTypeDescriptionsqrtRatioAX96uint160A sqrt price representing the first tick boundarysqrtRatioBX96uint160A sqrt price representing the second tick boundaryliquidityuint128The liquidity being valuedReturn Values:‚ÄãNameTypeDescriptionamount1uint256The amount of token1getAmountsForLiquidity‚Äã function getAmountsForLiquidity( uint160 sqrtRatioX96, uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, uint128 liquidity ) internal returns (uint256 amount0, uint256 amount1)CopyComputes the token0 and token1 value for a given amount of liquidity, the current pool prices and the prices at the tick boundariesParameters:‚ÄãNameTypeDescriptionsqrtRatioX96uint160A sqrt price representing the current pool pricessqrtRatioAX96uint160A sqrt price representing the first tick boundarysqrtRatioBX96uint160A sqrt price representing the second tick boundaryliquidityuint128The liquidity being valuedReturn Values:‚ÄãNameTypeDescriptionamount0uint256The amount of token0amount1uint256The amount of token1Edit this pageHelpful?PreviousHexStringsNextNFTDescriptorFunctionsgetLiquidityForAmount0getLiquidityForAmount1getLiquidityForAmountsgetAmount0ForLiquiditygetAmount1ForLiquiditygetAmountsForLiquidityDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
279,p.org contracts v3 reference periphery staker libraries RewardMath,"p.org contracts v3 reference periphery staker libraries RewardMath.    RewardMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerUniswap V3 Staker DesignUniswap V3 Staker ContractInterfacesLibrariesIncentiveIdNFTPositionInfoRewardMathTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryStakerLibrariesRewardMathHelpful?On this pageRewardMathAllows computing rewards given some parameters of stakes and incentivesFunctions‚ÄãcomputeRewardAmount‚Äã function computeRewardAmount( uint256 totalRewardUnclaimed, uint160 totalSecondsClaimedX128, uint256 startTime, uint256 endTime, uint128 liquidity, uint160 secondsPerLiquidityInsideInitialX128, uint160 secondsPerLiquidityInsideX128, uint256 currentTime ) internal pure returns (uint256 reward, uint160 secondsInsideX128)CopyCompute the amount of rewards owed given parameters of the incentive and stakeParameters:‚ÄãNameTypeDescriptiontotalRewardUnclaimeduint256The total amount of unclaimed rewards left for an incentivetotalSecondsClaimedX128uint160How many full liquidity-seconds have been already claimed for the incentivestartTimeuint256When the incentive rewards began in epoch secondsendTimeuint256When rewards are no longer being dripped out in epoch secondsliquidityuint128The amount of liquidity, assumed to be constant over the period over which the snapshots are measuredsecondsPerLiquidityInsideInitialX128uint160The seconds per liquidity of the liquidity tick range as of the beginning of the periodsecondsPerLiquidityInsideX128uint160The seconds per liquidity of the liquidity tick range as of the current block timestampcurrentTimeuint256The current block timestamp, which must be greater than or equal to the start timeReturn Values:‚ÄãNameTypeDescriptionrewarduint256The amount of rewards owedsecondsInsideX128uint160The total liquidity seconds inside the position's range for the duration of the stakeEdit this pageHelpful?PreviousNFTPositionInfoNextBase64TestFunctionscomputeRewardAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
280,p.org sdk v3 reference classes Tick#constructor,p.org sdk v3 reference classes Tick#constructor.    Tick | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickHelpful?On this pageTick@uniswap/v3-sdk / Exports / TickClass: TickTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãindexliquidityGrossliquidityNetConstructors‚Äãconstructor‚Äã‚Ä¢ new Tick(__namedParameters)Parameters‚ÄãNameType__namedParametersTickConstructorArgsDefined in‚Äãentities/tick.ts:17Properties‚Äãindex‚Äã‚Ä¢ Readonly index: numberDefined in‚Äãentities/tick.ts:13liquidityGross‚Äã‚Ä¢ Readonly liquidityGross: defaultDefined in‚Äãentities/tick.ts:14liquidityNet‚Äã‚Ä¢ Readonly liquidityNet: defaultDefined in‚Äãentities/tick.ts:15Helpful?PreviousSwapRouterNextTickLibraryTable of contentsConstructorsPropertiesConstructorsconstructorPropertiesindexliquidityGrossliquidityNetDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
281,p.org contracts v2 concepts advanced topics fees#protocol charge calculation,"p.org contracts v2 concepts advanced topics fees#protocol charge calculation.    Fees | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsFeesPricingUnderstanding ReturnsSecurityMathResearchGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolConceptsAdvanced TopicsFeesHelpful?On this pageFeesLiquidity provider fees‚ÄãThere is a 0.3% fee for swapping tokens. This fee is split by liquidity providers proportional to their contribution to liquidity reserves.Swapping fees are immediately deposited into liquidity reserves. This increases the value of liquidity tokens, functioning as a payout to all liquidity providers proportional to their share of the pool. Fees are collected by burning liquidity tokens to remove a proportional share of the underlying reserves.Since fees are added to liquidity pools, the invariant increases at the end of every trade. Within a single transaction, the invariant represents token0_pool / token1_pool at the end of the previous transaction.There are many community-developed tools to determine returns. You can also read more in the docs about how to think about LP returns.Protocol Fees‚ÄãAt the moment there are no protocol fees. However, it is possible for a 0.05% fee to be turned on in the future.More information about a potential future protocol fee can be found here.Protocol Charge Calculation‚ÄãIn the future, it is possible that a protocol-wide charge of 0.05% per trade will take effect. This represents ‚Öôth (16.6ÃÖ%) of the 0.30% fee. The fee is in effect if feeTo is not address(0) (0x0000000000000000000000000000000000000000), indicating that feeTo is the recipient of the charge.This amount would not affect the fee paid by traders, but would affect the amount received by liquidity providers.Rather than calculating this charge on swaps, which would significantly increase gas costs for all users, the charge is instead calculated when liquidity is added or removed. See the whitepaper for more details.Edit this pageHelpful?PreviousOraclesNextPricingLiquidity provider feesProtocol FeesProtocol Charge CalculationDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
282,p.org sdk v3 reference classes NonfungiblePositionManager#addcallparameters,"p.org sdk v3 reference classes NonfungiblePositionManager#addcallparameters.    NonfungiblePositionManager | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesNonfungiblePositionManagerHelpful?On this pageNonfungiblePositionManager@uniswap/v3-sdk / Exports / NonfungiblePositionManagerClass: NonfungiblePositionManagerTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãaddCallParameterscollectCallParameterscreateCallParametersencodeCollectencodeCreateremoveCallParameterssafeTransferFromParametersConstructors‚Äãconstructor‚Äã‚Ä¢ Private new NonfungiblePositionManager()Cannot be constructed.Defined in‚ÄãnonfungiblePositionManager.ts:181Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚ÄãnonfungiblePositionManager.ts:176Methods‚ÄãaddCallParameters‚Äã‚ñ∏ Static addCallParameters(position, options): MethodParametersParameters‚ÄãNameTypepositionPositionoptionsAddLiquidityOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:199collectCallParameters‚Äã‚ñ∏ Static collectCallParameters(options): MethodParametersParameters‚ÄãNameTypeoptionsCollectOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:326createCallParameters‚Äã‚ñ∏ Static createCallParameters(pool): MethodParametersParameters‚ÄãNameTypepoolPoolReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:192encodeCollect‚Äã‚ñ∏ Static Private encodeCollect(options): string[]Parameters‚ÄãNameTypeoptionsCollectOptionsReturns‚Äãstring[]Defined in‚ÄãnonfungiblePositionManager.ts:286encodeCreate‚Äã‚ñ∏ Static Private encodeCreate(pool): stringParameters‚ÄãNameTypepoolPoolReturns‚ÄãstringDefined in‚ÄãnonfungiblePositionManager.ts:183removeCallParameters‚Äã‚ñ∏ Static removeCallParameters(position, options): MethodParametersProduces the calldata for completely or partially exiting a positionParameters‚ÄãNameTypeDescriptionpositionPositionThe position to exitoptionsRemoveLiquidityOptionsAdditional information necessary for generating the calldataReturns‚ÄãMethodParametersThe call parametersDefined in‚ÄãnonfungiblePositionManager.ts:341safeTransferFromParameters‚Äã‚ñ∏ Static safeTransferFromParameters(options): MethodParametersParameters‚ÄãNameTypeoptionsSafeTransferOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:416Helpful?PreviousNoTickDataProviderNextPaymentsTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsaddCallParameterscollectCallParameterscreateCallParametersencodeCollectencodeCreateremoveCallParameterssafeTransferFromParametersDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
283,p.org contracts universal router technical reference#pay portion,"p.org contracts universal router technical reference#pay portion.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
284,p.org sdk v3 reference modules.md#tohex,p.org sdk v3 reference modules.md#tohex. 
285,p.org contracts v3 reference periphery libraries NFTDescriptor,p.org contracts v3 reference periphery libraries NFTDescriptor.    NFTDescriptor | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesBase64BytesLibCallbackValidationChainIdHexStringsLiquidityAmountsNFTDescriptorNFTSVGOracleLibraryPathPoolAddressPoolTicksCounterPositionKeyTokenRatioSortOrderTransferHelperWeightedOracleLibraryStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryLibrariesNFTDescriptorHelpful?On this pageNFTDescriptorFunctions‚ÄãconstructTokenURI‚Äã function constructTokenURI( ) public returns (string)CopyescapeQuotes‚Äã function escapeQuotes( ) internal returns (string)CopytickToDecimalString‚Äã function tickToDecimalString( ) internal returns (string)CopyfixedPointToDecimalString‚Äã function fixedPointToDecimalString( ) internal returns (string)CopyfeeToPercentString‚Äã function feeToPercentString( ) internal returns (string)CopyaddressToString‚Äã function addressToString( ) internal returns (string)CopygenerateSVGImage‚Äã function generateSVGImage( ) internal returns (string svg)CopytokenToColorHex‚Äã function tokenToColorHex( ) internal returns (string str)CopygetCircleCoord‚Äã function getCircleCoord( ) internal returns (uint256)CopysliceTokenHex‚Äã function sliceTokenHex( ) internal returns (uint256)CopyEdit this pageHelpful?PreviousLiquidityAmountsNextNFTSVGFunctionsconstructTokenURIescapeQuotestickToDecimalStringfixedPointToDecimalStringfeeToPercentStringaddressToStringgenerateSVGImagetokenToColorHexgetCircleCoordsliceTokenHexDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
286,p.org sdk v3 reference interfaces IncentiveKey,p.org sdk v3 reference interfaces IncentiveKey.    IncentiveKey | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesIncentiveKeyHelpful?On this pageIncentiveKey@uniswap/v3-sdk / Exports / IncentiveKeyInterface: IncentiveKeyRepresents a unique staking program.Table of contents‚ÄãProperties‚ÄãendTimepoolrefundeerewardTokenstartTimeProperties‚ÄãendTime‚Äã‚Ä¢ endTime: BigintIshThe time that the incentive program ends.Defined in‚Äãstaker.ts:28pool‚Äã‚Ä¢ pool: PoolThe pool that the staked positions must provide in.Defined in‚Äãstaker.ts:20refundee‚Äã‚Ä¢ refundee: stringThe address which receives any remaining reward tokens at endTime.Defined in‚Äãstaker.ts:32rewardToken‚Äã‚Ä¢ rewardToken: TokenThe token rewarded for participating in the staking program.Defined in‚Äãstaker.ts:16startTime‚Äã‚Ä¢ startTime: BigintIshThe time when the incentive program begins.Defined in‚Äãstaker.ts:24Helpful?PreviousFeeOptionsNextIncreaseSpecificOptionsTable of contentsPropertiesPropertiesendTimepoolrefundeerewardTokenstartTimeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
287,p.org contracts v3 reference periphery base PeripheryImmutableState,"p.org contracts v3 reference periphery base PeripheryImmutableState.    PeripheryImmutableState | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseBlockTimestampERC721PermitLiquidityManagementMulticallPeripheryImmutableStatePeripheryPaymentsPeripheryPaymentsWithFeePoolInitializerSelfPermitInterfacesLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryBasePeripheryImmutableStateHelpful?On this pagePeripheryImmutableStateImmutable state used by periphery contractsFunctions‚Äãconstructor‚Äã function constructor( address _factory, address _WETH9 ) internalCopyEdit this pageHelpful?PreviousMulticallNextPeripheryPaymentsFunctionsconstructorDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
288,p.org sdk v3 reference interfaces CollectOptions#expectedcurrencyowed1,"p.org sdk v3 reference interfaces CollectOptions#expectedcurrencyowed1.    CollectOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesCollectOptionsHelpful?On this pageCollectOptions@uniswap/v3-sdk / Exports / CollectOptionsInterface: CollectOptionsTable of contents‚ÄãProperties‚ÄãexpectedCurrencyOwed0expectedCurrencyOwed1recipienttokenIdProperties‚ÄãexpectedCurrencyOwed0‚Äã‚Ä¢ expectedCurrencyOwed0: CurrencyAmount<Currency>Expected value of tokensOwed0, including as-of-yet-unaccounted-for fees/liquidity value to be burnedDefined in‚ÄãnonfungiblePositionManager.ts:114expectedCurrencyOwed1‚Äã‚Ä¢ expectedCurrencyOwed1: CurrencyAmount<Currency>Expected value of tokensOwed1, including as-of-yet-unaccounted-for fees/liquidity value to be burnedDefined in‚ÄãnonfungiblePositionManager.ts:119recipient‚Äã‚Ä¢ recipient: stringThe account that should receive the tokens.Defined in‚ÄãnonfungiblePositionManager.ts:124tokenId‚Äã‚Ä¢ tokenId: BigintIshIndicates the ID of the position to collect for.Defined in‚ÄãnonfungiblePositionManager.ts:109Helpful?PreviousClaimOptionsNextCommonAddLiquidityOptionsTable of contentsPropertiesPropertiesexpectedCurrencyOwed0expectedCurrencyOwed1recipienttokenIdDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
289,p.org sdk v3 reference classes Trade#maximumamountin,"p.org sdk v3 reference classes Trade#maximumamountin.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTradeHelpful?On this pageTrade@uniswap/v3-sdk / Exports / TradeClass: Trade<TInput, TOutput, TTradeType>Represents a trade executed against a set of routes where some percentage of the input is split across each route.Each route has its own set of pools. Pools can not be re-used across routes.Does not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and when it is executed.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessors‚ÄãexecutionPriceinputAmountoutputAmountpriceImpactrouteMethods‚ÄãmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Trade<TInput, TOutput, TTradeType>(__namedParameters)Construct a trade by passing in the pre-computed property valuesType parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyTTradeTypeextends TradeTypeParameters‚ÄãNameType__namedParametersObject__namedParameters.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]__namedParameters.tradeTypeTTradeTypeDefined in‚Äãentities/trade.ts:397Properties‚Äã_executionPrice‚Äã‚Ä¢ Private _executionPrice: undefined | Price<TInput, TOutput>The cached result of the computed execution priceDefined in‚Äãentities/trade.ts:143_inputAmount‚Äã‚Ä¢ Private _inputAmount: undefined | CurrencyAmount<TInput>The cached result of the input amount computationDefined in‚Äãentities/trade.ts:97_outputAmount‚Äã‚Ä¢ Private _outputAmount: undefined | CurrencyAmount<TOutput>The cached result of the output amount computationDefined in‚Äãentities/trade.ts:120_priceImpact‚Äã‚Ä¢ Private _priceImpact: undefined | PercentThe cached result of the price impact computationDefined in‚Äãentities/trade.ts:164swaps‚Äã‚Ä¢ Readonly swaps: { inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]The swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.Defined in‚Äãentities/trade.ts:82tradeType‚Äã‚Ä¢ Readonly tradeType: TTradeTypeThe type of the trade, either exact in or exact out.Defined in‚Äãentities/trade.ts:91Accessors‚ÄãexecutionPrice‚Äã‚Ä¢ get executionPrice(): Price<TInput, TOutput>The price expressed in terms of output amount/input amount.Returns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/trade.ts:148inputAmount‚Äã‚Ä¢ get inputAmount(): CurrencyAmount<TInput>The input amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TInput>Defined in‚Äãentities/trade.ts:102outputAmount‚Äã‚Ä¢ get outputAmount(): CurrencyAmount<TOutput>The output amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TOutput>Defined in‚Äãentities/trade.ts:125priceImpact‚Äã‚Ä¢ get priceImpact(): PercentReturns the percent difference between the route's mid price and the price impactReturns‚ÄãPercentDefined in‚Äãentities/trade.ts:169route‚Äã‚Ä¢ get route(): Route<TInput, TOutput>DeprecatedDeprecated in favor of 'swaps' property. If the trade consists of multiple routes this will return an error.When the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.Returns‚ÄãRoute<TInput, TOutput>Defined in‚Äãentities/trade.ts:73Methods‚ÄãmaximumAmountIn‚Äã‚ñ∏ maximumAmountIn(slippageTolerance, amountIn?): CurrencyAmount<TInput>Get the maximum amount in that can be spent via this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountInCurrencyAmount<TInput>-Returns‚ÄãCurrencyAmount<TInput>The amount inDefined in‚Äãentities/trade.ts:456minimumAmountOut‚Äã‚ñ∏ minimumAmountOut(slippageTolerance, amountOut?): CurrencyAmount<TOutput>Get the minimum amount that must be received from this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountOutCurrencyAmount<TOutput>-Returns‚ÄãCurrencyAmount<TOutput>The amount outDefined in‚Äãentities/trade.ts:438worstExecutionPrice‚Äã‚ñ∏ worstExecutionPrice(slippageTolerance): Price<TInput, TOutput>Return the execution price after accounting for slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentthe allowed tolerated slippageReturns‚ÄãPrice<TInput, TOutput>The execution priceDefined in‚Äãentities/trade.ts:471bestTradeExactIn‚Äã‚ñ∏ Static bestTradeExactIn<TInput, TOutput>(pools, currencyAmountIn, currencyOut, __namedParameters?, currentPools?, nextAmountIn?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_INPUT>[]>Given a list of pools, and a fixed amount in, returns the top maxNumResults trades that go from an input token amount to an output token, making at most maxHops hops. Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyAmountInCurrencyAmount<TInput>undefinedused in recursion; the original value of the currencyAmountIn parametercurrencyOutTOutputundefinedthe desired currency out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountInCurrencyAmount<Currency>currencyAmountInexact amount of input currency to spendbestTradesTrade<TInput, TOutput, EXACT_INPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>[]>The exact in tradeDefined in‚Äãentities/trade.ts:495bestTradeExactOut‚Äã‚ñ∏ Static bestTradeExactOut<TInput, TOutput>(pools, currencyIn, currencyAmountOut, __namedParameters?, currentPools?, nextAmountOut?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>similar to the above method but instead targets a fixed output amount given a list of pools, and a fixed amount out, returns the top maxNumResults trades that go from an input token to an output token amount, making at most maxHops hops note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyInTInputundefinedthe currency to spendcurrencyAmountOutCurrencyAmount<TOutput>undefinedthe desired currency amount out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountOutCurrencyAmount<Currency>currencyAmountOutthe exact amount of currency outbestTradesTrade<TInput, TOutput, EXACT_OUTPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>The exact out tradeDefined in‚Äãentities/trade.ts:576createUncheckedTrade‚Äã‚ñ∏ Static createUncheckedTrade<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.inputAmountCurrencyAmount<TInput>-constructorArguments.outputAmountCurrencyAmount<TOutput>-constructorArguments.routeRoute<TInput, TOutput>-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:346createUncheckedTradeWithMultipleRoutes‚Äã‚ñ∏ Static createUncheckedTradeWithMultipleRoutes<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:377exactIn‚Äã‚ñ∏ Static exactIn<TInput, TOutput>(route, amountIn): Promise<Trade<TInput, TOutput, EXACT_INPUT>>Constructs an exact in trade with the given amount in and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact in tradeamountInCurrencyAmount<TInput>The amount being passed inReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>>The exact in tradeDefined in‚Äãentities/trade.ts:194exactOut‚Äã‚ñ∏ Static exactOut<TInput, TOutput>(route, amountOut): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>>Constructs an exact out trade with the given amount out and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact out tradeamountOutCurrencyAmount<TOutput>The amount returned by the tradeReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>>The exact out tradeDefined in‚Äãentities/trade.ts:209fromRoute‚Äã‚ñ∏ Static fromRoute<TInput, TOutput, TTradeType>(route, amount, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade by simulating swaps through the given routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>route to swap throughamountTTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>the amount specified, either input or output, depending on tradeTypetradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The routeDefined in‚Äãentities/trade.ts:226fromRoutes‚Äã‚ñ∏ Static fromRoutes<TInput, TOutput, TTradeType>(routes, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade from routes by simulating swapsType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionroutes{ amount: TTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]the routes to swap through and how much of the amount should be routed through eachtradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The tradeDefined in‚Äãentities/trade.ts:276Helpful?PreviousTickMathNextFeeAmountType parametersTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessorsexecutionPriceinputAmountoutputAmountpriceImpactrouteMethodsmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
290,p.org sdk v3 reference classes SwapMath#constructor,"p.org sdk v3 reference classes SwapMath#constructor.    SwapMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesSwapMathHelpful?On this pageSwapMath@uniswap/v3-sdk / Exports / SwapMathClass: SwapMathTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãcomputeSwapStepConstructors‚Äãconstructor‚Äã‚Ä¢ Private new SwapMath()Cannot be constructed.Defined in‚Äãutils/swapMath.ts:13Methods‚ÄãcomputeSwapStep‚Äã‚ñ∏ Static computeSwapStep(sqrtRatioCurrentX96, sqrtRatioTargetX96, liquidity, amountRemaining, feePips): [default, default, default, default]Parameters‚ÄãNameTypesqrtRatioCurrentX96defaultsqrtRatioTargetX96defaultliquiditydefaultamountRemainingdefaultfeePipsFeeAmountReturns‚Äã[default, default, default, default]Defined in‚Äãutils/swapMath.ts:15Helpful?PreviousStakerNextSwapQuoterTable of contentsConstructorsMethodsConstructorsconstructorMethodscomputeSwapStepDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
291,p.org sdk v3 reference interfaces RemoveLiquidityOptions#collectoptions,"p.org sdk v3 reference interfaces RemoveLiquidityOptions#collectoptions.    RemoveLiquidityOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesRemoveLiquidityOptionsHelpful?On this pageRemoveLiquidityOptions@uniswap/v3-sdk / Exports / RemoveLiquidityOptionsInterface: RemoveLiquidityOptionsOptions for producing the calldata to exit a position.Table of contents‚ÄãProperties‚ÄãburnTokencollectOptionsdeadlineliquidityPercentagepermitslippageTolerancetokenIdProperties‚ÄãburnToken‚Äã‚Ä¢ Optional burnToken: booleanWhether the NFT should be burned if the entire position is being exited, by default false.Defined in‚ÄãnonfungiblePositionManager.ts:162collectOptions‚Äã‚Ä¢ collectOptions: Omit<CollectOptions, ""tokenId"">Parameters to be passed on to collectDefined in‚ÄãnonfungiblePositionManager.ts:172deadline‚Äã‚Ä¢ deadline: BigintIshWhen the transaction expires, in epoch seconds.Defined in‚ÄãnonfungiblePositionManager.ts:157liquidityPercentage‚Äã‚Ä¢ liquidityPercentage: PercentThe percentage of position liquidity to exit.Defined in‚ÄãnonfungiblePositionManager.ts:147permit‚Äã‚Ä¢ Optional permit: NFTPermitOptionsThe optional permit of the token ID being exited, in case the exit transaction is being sent by an account that does not own the NFTDefined in‚ÄãnonfungiblePositionManager.ts:167slippageTolerance‚Äã‚Ä¢ slippageTolerance: PercentHow much the pool price is allowed to move.Defined in‚ÄãnonfungiblePositionManager.ts:152tokenId‚Äã‚Ä¢ tokenId: BigintIshThe ID of the token to exitDefined in‚ÄãnonfungiblePositionManager.ts:142Helpful?PreviousQuoteOptionsNextSafeTransferOptionsTable of contentsPropertiesPropertiesburnTokencollectOptionsdeadlineliquidityPercentagepermitslippageTolerancetokenIdDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
292,p.org sdk v1 reference types,"p.org sdk v1 reference types.    Types | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKOverviewGuidesGetting StartedTechnical ReferenceDataComputationFormatOrchestrationTransactConstantsTypesüè†V1 SDKTechnical ReferenceTypesHelpful?TypesBelow is an exhaustive list of all the external types used in the SDK.import BigNumber from 'bignumber.js'import { ethers } from 'ethers'import { SUPPORTED_CHAIN_ID, TRADE_TYPE, TRADE_EXACT, FIXED_UNDERFLOW_BEHAVIOR } from './constants'export type BigNumberish = BigNumber | ethers.utils.BigNumber | string | number//// types for on-chain, submitted, and normalized dataexport type ChainIdOrProvider = SUPPORTED_CHAIN_ID | ethers.providers.AsyncSendable | ethers.providers.Provider// type guard for ChainIdOrProviderexport function isChainId(chainIdOrProvider: ChainIdOrProvider): chainIdOrProvider is SUPPORTED_CHAIN_ID { const chainId: SUPPORTED_CHAIN_ID = chainIdOrProvider as SUPPORTED_CHAIN_ID return typeof chainId === 'number'}// type guard for ChainIdOrProviderexport function isLowLevelProvider( chainIdOrProvider: ChainIdOrProvider): chainIdOrProvider is ethers.providers.AsyncSendable { if (isChainId(chainIdOrProvider)) { return false } else { const provider: ethers.providers.AsyncSendable = chainIdOrProvider as ethers.providers.AsyncSendable return 'send' in provider || 'sendAsync' in provider }}export interface Token { chainId?: SUPPORTED_CHAIN_ID address?: string decimals: number}export interface TokenAmount { token: Token amount: BigNumberish}export interface TokenAmountNormalized { token: Token amount: BigNumber}export interface TokenReserves { token: Token exchange?: Token ethReserve: TokenAmount tokenReserve: TokenAmount}export interface TokenReservesNormalized { token: Token exchange?: Token ethReserve: TokenAmountNormalized tokenReserve: TokenAmountNormalized}export interface EthReserves { token: Token}// type for input dataexport type OptionalReserves = TokenReserves | EthReserves | undefined// type guard for OptionalReservesexport function areTokenReserves(reserves: OptionalReserves): reserves is TokenReserves { const tokenReserves: TokenReserves = reserves as TokenReserves return ( tokenReserves !== undefined && tokenReserves.ethReserve !== undefined && tokenReserves.tokenReserve !== undefined )}// type guard for OptionalReservesexport function areETHReserves(reserves: OptionalReserves): reserves is EthReserves { const tokenReserves: TokenReserves = reserves as TokenReserves return ( tokenReserves !== undefined && tokenReserves.ethReserve === undefined && tokenReserves.tokenReserve === undefined )}// type for output dataexport type NormalizedReserves = TokenReservesNormalized | EthReserves// type guard for NormalizedReservesexport function areTokenReservesNormalized(reserves: NormalizedReserves): reserves is TokenReservesNormalized { const tokenReservesNormalized: TokenReservesNormalized = reserves as TokenReservesNormalized return tokenReservesNormalized.ethReserve !== undefined && tokenReservesNormalized.tokenReserve !== undefined}//// types for computed dataexport interface Rate { rate: BigNumber rateInverted: BigNumber}export interface MarketDetails { tradeType: TRADE_TYPE inputReserves: NormalizedReserves outputReserves: NormalizedReserves marketRate: Rate}export interface TradeDetails { marketDetailsPre: MarketDetails marketDetailsPost: MarketDetails tradeType: TRADE_TYPE tradeExact: TRADE_EXACT inputAmount: TokenAmountNormalized outputAmount: TokenAmountNormalized executionRate: Rate marketRateSlippage: BigNumber executionRateSlippage: BigNumber}export type MethodArgument = BigNumber | number | stringexport interface ExecutionDetails { exchangeAddress: string methodName: string methodId: string value: BigNumber methodArguments: MethodArgument[]}//// types for formatting dataexport type FlexibleFormat = BigNumber.Format | boolean// type guard for FlexibleFormatexport function isFormat(flexibleFormat: FlexibleFormat): flexibleFormat is BigNumber.Format { const format: BigNumber.Format = flexibleFormat as BigNumber.Format return typeof format !== 'boolean'}export interface FormatSignificantOptions { significantDigits: number roundingMode: BigNumber.RoundingMode forceIntegerSignificance: boolean format: FlexibleFormat}export interface FormatFixedOptions { decimalPlaces: number roundingMode: BigNumber.RoundingMode dropTrailingZeros: boolean underflowBehavior: FIXED_UNDERFLOW_BEHAVIOR format: FlexibleFormat}CopyHelpful?PreviousConstantsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
293,p.org contracts universal router technical reference#nftx,"p.org contracts universal router technical reference#nftx.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
294,p.org contracts v3 guides local environment,"p.org contracts v3 guides local environment.    Set Up Your Local Environment | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolGuidesSet Up Your Local EnvironmentHelpful?On this pageSet Up Your Local EnvironmentOne of the most common questions we get asked is what development toolset to use to build on-chain integrations with Uniswap. There‚Äôs no right answer to this question but for this guide we‚Äôll recommend a common one: Node.js , NPM and Hardhat.At the end of this guide you‚Äôll have a development environment set up that you can use to build the rest of the examples in the Guides section of the docs, or start your own integration project!To get you started as quickly as possible, we have provided the Quick Start section below where you can clone some boiler plate and get building. To start from scratch and learn the underlying concepts, jump to the Start from Scratch section. Quick StartThe Uniswap boilerplate repo provides a basic Hardhat environment with required imports already pre-loaded for you. You can simply clone it and install the dependencies: git clone https://github.com/Uniswap/uniswap-first-contract-examplecd uniswap-first-contract-examplenpm install CopyThen hop to the Local Node with a Mainnet Fork to complete your set up and start developing. Start from ScratchIn the following sections, we‚Äôll walk through the steps to create the same environment set up as the boiler plate from scratch and learn the underlying concepts. Set Up Dependencies‚ÄãNode is one of the most common Javascript runtimes. For our purposes it will provide scripting we can use to compile and test our contracts. If you haven‚Äôt already, install NodeJS and its package manager NPM (instructions). Once those dependencies are set up, we can initialize our project: $ npm initCopyHardhat is an Ethereum development toolset that provides a number of powerful features including Solidity compilation, testing and deployment, all in a single convenient wrapper. We‚Äôll use NPM to add Hardhat to our project: $ npm add --save-dev hardhatCopyWith Hardhat installed we can invoke it to scaffold our development environment. When you first run Hardhat you‚Äôll have the option of starting with a templated Javascript or Typescript project or an empty project. Since Hardhat relies heavily on folder structure, we recommend starting with either of the templated options. Initialize Hardhat and follow the prompts to make your selection and answer yes to the follow up prompts:$ npx hardhat initCopyOnce the Hardhat initialization completes, take a look around at what got set up. The folder structure should be intuitive, ./contracts is where you‚Äôll write your Solidity contracts, ./test is where you‚Äôll write your tests and ./scripts is where you can write scripts to perform actions like deploying. Out of the box, Hardhat is configured to use this folder structure so don‚Äôt change it unless you know what you‚Äôre doing!Next we‚Äôll use NPM to add the Uniswap V3 contracts which will allow us to seamlessly integrate with the protocol in our new contracts:$ npm add @uniswap/v3-periphery @uniswap/v3-coreCopyThe Uniswap V3 contracts were written using a past version of the solidity compiler. Since we‚Äôre building integrations on V3 we have to tell Hardhat to use the correct compiler to build these files. Go to the ./hardhat.config.js file and change the Solidity version to ‚Äú0.7.6‚Äù: // ...module.exports = { solidity: ""0.7.6"",};CopyThat‚Äôs it! You should now have a functional development environment to start building on chain Uniswap integrations. Let‚Äôs run a quick test to confirm everything is set up properly. Compile a Basic Contract‚ÄãTo confirm that our environment is configured correctly we‚Äôll attempt to compile a basic Swap contract. Create a new file, ./contracts/Swap.sol and paste the following code into it (a detailed guide to this contract can be found here): // SPDX-License-Identifier: GPL-2.0-or-laterpragma solidity =0.7.6;pragma abicoder v2;import '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';import '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';contract SimpleSwap { ISwapRouter public immutable swapRouter; address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F; address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2; uint24 public constant feeTier = 3000;  constructor(ISwapRouter _swapRouter) {  swapRouter = _swapRouter; }  function swapWETHForDAI(uint256 amountIn) external returns (uint256 amountOut) {  // Transfer the specified amount of WETH9 to this contract.  TransferHelper.safeTransferFrom(WETH9, msg.sender, address(this), amountIn);  // Approve the router to spend WETH9.  TransferHelper.safeApprove(WETH9, address(swapRouter), amountIn);  // Note: To use this example, you should explicitly set slippage limits, omitting for simplicity  uint256 minOut = /* Calculate min output */ 0;  uint160 priceLimit = /* Calculate price limit */ 0;  // Create the params that will be used to execute the swap  ISwapRouter.ExactInputSingleParams memory params =   ISwapRouter.ExactInputSingleParams({    tokenIn: WETH9,    tokenOut: DAI,    fee: feeTier,    recipient: msg.sender,    deadline: block.timestamp,    amountIn: amountIn,    amountOutMinimum: minOut,    sqrtPriceLimitX96: priceLimit   });  // The call to `exactInputSingle` executes the swap.  amountOut = swapRouter.exactInputSingle(params); }}CopyTo compile all the contracts in the ./contracts folder, we‚Äôll use the Hardhat compile command: $ npx hardhat compileCopyIf the environment is compiled correctly you should see the message: Compiled { x } Solidity files successfullyCopyLocal Node with a Mainnet ForkWhen building and testing integrations with on chain protocols, developers often hit a problem: the liquidity on the live chain is critical to thoroughly testing their code but testing against a live network like Mainnet can be extremely expensive. Luckily, Hardhat has a powerful feature that allows developers to run a local Ethereum test node that uses a fork of Mainnet. This allows us to test against simulated liquidity for free. As a prerequisite we‚Äôll need an RPC that supports Forking. Alchemy includes forking in its free tier so it‚Äôs a great place to start (sign up and get an API key here). You can then run the following Hardhat command to start your node:$ npx hardhat node --fork https://eth-mainnet.alchemyapi.io/v2/{YOUR_API_KEY}CopyWith your local node up and running, you can use the --network localhost flag in tests to point the Hardhat testing suite to that local node: $ npx hardhat test --network localhostCopyNext StepsWith your environment set up you‚Äôre ready to start building. Jump over to the guides section to learn about the Uniswap functions you can integrate with. Remember to add all contracts (.sol files) to the ./contracts folder and their subsequent tests to the ./tests folder. You can then test them against your local forked node by running: $ npx hardhat test --network localhostCopyEdit this pageHelpful?PreviousOverviewNextSingle SwapsSet Up DependenciesCompile a Basic ContractDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
295,p.org sdk core reference classes Ether#istoken,"p.org sdk core reference classes Ether#istoken.    Ether | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesEtherHelpful?On this pageEther@uniswap/sdk-core / Exports / EtherClass: EtherEther is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnetsHierarchy‚ÄãNativeCurrency‚Ü≥ EtherTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãchainIddecimalsisNativeisTokennamesymbol_etherCacheAccessors‚ÄãwrappedMethods‚ÄãequalsonChainConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new Ether(chainId)Parameters‚ÄãNameTypechainIdnumberOverrides‚ÄãNativeCurrency.constructorDefined in‚Äãentities/ether.ts:11Properties‚ÄãchainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãNativeCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãNativeCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: trueInherited from‚ÄãNativeCurrency.isNativeDefined in‚Äãentities/nativeCurrency.ts:7isToken‚Äã‚Ä¢ Readonly isToken: falseInherited from‚ÄãNativeCurrency.isTokenDefined in‚Äãentities/nativeCurrency.ts:8name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãNativeCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãNativeCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29_etherCache‚Äã‚ñ™ Static Private _etherCache: Object = {}Index signature‚Äã‚ñ™ [chainId: number]: EtherDefined in‚Äãentities/ether.ts:21Accessors‚Äãwrapped‚Äã‚Ä¢ get wrapped(): TokenReturn the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to be used in UniswapReturns‚ÄãTokenOverrides‚ÄãNativeCurrency.wrappedDefined in‚Äãentities/ether.ts:15Methods‚Äãequals‚Äã‚ñ∏ equals(other): booleanReturns whether this currency is functionally equivalent to the other currencyParameters‚ÄãNameTypeDescriptionotherCurrencythe other currencyReturns‚ÄãbooleanOverrides‚ÄãNativeCurrency.equalsDefined in‚Äãentities/ether.ts:27onChain‚Äã‚ñ∏ Static onChain(chainId): EtherParameters‚ÄãNameTypechainIdnumberReturns‚ÄãEtherDefined in‚Äãentities/ether.ts:23Helpful?PreviousCurrencyAmountNextFractionHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertieschainIddecimalsisNativeisTokennamesymbol_etherCacheAccessorswrappedMethodsequalsonChainDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
296,p.org contracts v3 reference core libraries FixedPoint96,"p.org contracts v3 reference core libraries FixedPoint96.    FixedPoint96 | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesLibrariesBitMathFixedPoint128FixedPoint96FullMathLiquidityMathLowGasSafeMathOraclePositionSafeCastSecondsOutsideSqrtPriceMathSwapMathTickTickBitmapTickMathTransferHelperUnsafeMathGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreLibrariesFixedPoint96Helpful?FixedPoint96A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)Used in SqrtPriceMath.solEdit this pageHelpful?PreviousFixedPoint128NextFullMathDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
297,p.org sdk v3 reference classes TickList#isatorabovelargest,"p.org sdk v3 reference classes TickList#isatorabovelargest.    TickList | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickListHelpful?On this pageTickList@uniswap/v3-sdk / Exports / TickListClass: TickListUtility methods for interacting with sorted lists of ticksTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãbinarySearchgetTickisAtOrAboveLargestisBelowSmallestnextInitializedTicknextInitializedTickWithinOneWordvalidateListConstructors‚Äãconstructor‚Äã‚Ä¢ Private new TickList()Cannot be constructedDefined in‚Äãutils/tickList.ts:18Methods‚ÄãbinarySearch‚Äã‚ñ∏ Static Private binarySearch(ticks, tick): numberFinds the largest tick in the list of ticks that is less than or equal to tickParameters‚ÄãNameTypeDescriptionticksreadonly Tick[]list of ticksticknumbertick to find the largest tick that is less than or equal to tickReturns‚ÄãnumberDefined in‚Äãutils/tickList.ts:62getTick‚Äã‚ñ∏ Static getTick(ticks, index): TickParameters‚ÄãNameTypeticksreadonly Tick[]indexnumberReturns‚ÄãTickDefined in‚Äãutils/tickList.ts:50isAtOrAboveLargest‚Äã‚ñ∏ Static isAtOrAboveLargest(ticks, tick): booleanParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberReturns‚ÄãbooleanDefined in‚Äãutils/tickList.ts:45isBelowSmallest‚Äã‚ñ∏ Static isBelowSmallest(ticks, tick): booleanParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberReturns‚ÄãbooleanDefined in‚Äãutils/tickList.ts:40nextInitializedTick‚Äã‚ñ∏ Static nextInitializedTick(ticks, tick, lte): TickParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberltebooleanReturns‚ÄãTickDefined in‚Äãutils/tickList.ts:83nextInitializedTickWithinOneWord‚Äã‚ñ∏ Static nextInitializedTickWithinOneWord(ticks, tick, lte, tickSpacing): [number, boolean]Parameters‚ÄãNameTypeticksreadonly Tick[]ticknumberltebooleantickSpacingnumberReturns‚Äã[number, boolean]Defined in‚Äãutils/tickList.ts:101validateList‚Äã‚ñ∏ Static validateList(ticks, tickSpacing): voidParameters‚ÄãNameTypeticksTick[]tickSpacingnumberReturns‚ÄãvoidDefined in‚Äãutils/tickList.ts:20Helpful?PreviousTickLibraryNextTickListDataProviderTable of contentsConstructorsMethodsConstructorsconstructorMethodsbinarySearchgetTickisAtOrAboveLargestisBelowSmallestnextInitializedTicknextInitializedTickWithinOneWordvalidateListDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
298,p.org sdk v3 reference modules.md#fullwithdrawoptions,p.org sdk v3 reference modules.md#fullwithdrawoptions. 
299,p.org contracts v2 concepts core concepts swaps,"p.org contracts v2 concepts core concepts swaps.    Swaps | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsSwapsPoolsFlash SwapsOraclesAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolConceptsCore ConceptsSwapsHelpful?On this pageSwapsIntroductionToken swaps in Uniswap are a simple way to trade one ERC-20 token for another.For end-users, swapping is intuitive: a user picks an input token and an output token. They specify an input amount, and the protocol calculates how much of the output token they‚Äôll receive. They then execute the swap with one click, receiving the output token in their wallet immediately.In this guide, we‚Äôll look at what happens during a swap at the protocol level in order to gain a deeper understanding of how Uniswap works.Swaps in Uniswap are different from trades on traditional platforms. Uniswap does not use an order book to represent liquidity or determine prices. Uniswap uses an automated market maker mechanism to provide instant feedback on rates and slippage.As we learned in Protocol Overview, each pair on Uniswap is actually underpinned by a liquidity pool. Liquidity pools are smart contracts that hold balances of two unique tokens and enforces rules around depositing and withdrawing them.This rule is the constant product formula. When either token is withdrawn (purchased), a proportional amount of the other must be deposited (sold), in order to maintain the constant.Anatomy of a swap‚ÄãAt the most basic level, all swaps in Uniswap V2 happen within a single function, aptly named swap:function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data);CopyReceiving tokensAs is probably clear from the function signature, Uniswap requires swap callers to specify how many output tokens they would like to receive via the amount{0,1}Out parameters, which correspond to the desired amount of token{0,1}.Sending TokensWhat‚Äôs not as clear is how Uniswap receives tokens as payment for the swap. Typically, smart contracts which need tokens to perform some functionality require callers to first make an approval on the token contract, then call a function that in turn calls transferFrom on the token contract. This is not how V2 pairs accept tokens. Instead, pairs check their token balances at the end of every interaction. Then, at the beginning of the next interaction, current balances are differenced against the stored values to determine the amount of tokens that were sent by the current interactor. See the whitepaper for a justification of why this is the case.The takeaway is that tokens must be transferred to pairs before swap is called (the one exception to this rule is Flash Swaps). This means that to safely use the swap function, it must be called from another smart contract. The alternative (transferring tokens to the pair and then calling swap) is not safe to do non-atomically because the sent tokens would be vulnerable to arbitrage.Developer resourcesTo see how to implement token swaps in a smart contract read Trading from a smart contract.To see how to execute a swap from an interface read Trading (SDK)Edit this pageHelpful?PreviousGlossaryNextPoolsAnatomy of a swapDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
300,p.org contracts v2 reference smart contracts router 02#addliquidity,"p.org contracts v2 reference smart contracts router 02#addliquidity.    Router02 | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsRouter02Helpful?On this pageRouter02Because routers are stateless and do not hold token balances, they can be replaced safely and trustlessly, if necessary. This may happen if more efficient smart contract patterns are discovered, or if additional functionality is desired. For this reason, routers have release numbers, starting at 01. This is currently recommended release, 02.CodeUniswapV2Router02.solAddressUniswapV2Router02 is deployed at 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D on the Ethereum mainnet, and the Ropsten, Rinkeby, G√∂rli, and Kovan testnets. It was built from commit 6961711.Read-Only Functionsfactory‚Äãfunction factory() external pure returns (address);CopyReturns factory address.WETH‚Äãfunction WETH() external pure returns (address);CopyReturns the canonical WETH address on the Ethereum mainnet, or the Ropsten, Rinkeby, G√∂rli, or Kovan testnets.quote‚ÄãSee quote.getAmountOut‚ÄãSee getAmountOut.getAmountIn‚ÄãSee getAmountIn.getAmountsOut‚Äãfunction getAmountsOut(uint amountIn, address[] memory path) public view returns (uint[] memory amounts);CopySee getAmountsOut.getAmountsIn‚Äãfunction getAmountsIn(uint amountOut, address[] memory path) public view returns (uint[] memory amounts);CopySee getAmountsIn.State-Changing FunctionsaddLiquidity‚Äãfunction addLiquidity( address tokenA, address tokenB, uint amountADesired, uint amountBDesired, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB, uint liquidity);CopyAdds liquidity to an ERC-20‚áÑERC-20 pool.To cover all possible scenarios, msg.sender should have already given the router an allowance of at least amountADesired/amountBDesired on tokenA/tokenB.Always adds assets at the ideal ratio, according to the price when the transaction is executed.If a pool for the passed tokens does not exists, one is created automatically, and exactly amountADesired/amountBDesired tokens are added.NameTypetokenAaddressA pool token.tokenBaddressA pool token.amountADesireduintThe amount of tokenA to add as liquidity if the B/A price is <= amountBDesired/amountADesired (A depreciates).amountBDesireduintThe amount of tokenB to add as liquidity if the A/B price is <= amountADesired/amountBDesired (B depreciates).amountAMinuintBounds the extent to which the B/A price can go up before the transaction reverts. Must be <= amountADesired.amountBMinuintBounds the extent to which the A/B price can go up before the transaction reverts. Must be <= amountBDesired.toaddressRecipient of the liquidity tokens.deadlineuintUnix timestamp after which the transaction will revert.amountAuintThe amount of tokenA sent to the pool.amountBuintThe amount of tokenB sent to the pool.liquidityuintThe amount of liquidity tokens minted.addLiquidityETH‚Äãfunction addLiquidityETH( address token, uint amountTokenDesired, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external payable returns (uint amountToken, uint amountETH, uint liquidity);CopyAdds liquidity to an ERC-20‚áÑWETH pool with ETH.To cover all possible scenarios, msg.sender should have already given the router an allowance of at least amountTokenDesired on token.Always adds assets at the ideal ratio, according to the price when the transaction is executed.msg.value is treated as a amountETHDesired.Leftover ETH, if any, is returned to msg.sender.If a pool for the passed token and WETH does not exists, one is created automatically, and exactly amountTokenDesired/msg.value tokens are added.NameTypetokenaddressA pool token.amountTokenDesireduintThe amount of token to add as liquidity if the WETH/token price is <= msg.value/amountTokenDesired (token depreciates).msg.value (amountETHDesired)uintThe amount of ETH to add as liquidity if the token/WETH price is <= amountTokenDesired/msg.value (WETH depreciates).amountTokenMinuintBounds the extent to which the WETH/token price can go up before the transaction reverts. Must be <= amountTokenDesired.amountETHMinuintBounds the extent to which the token/WETH price can go up before the transaction reverts. Must be <= msg.value.toaddressRecipient of the liquidity tokens.deadlineuintUnix timestamp after which the transaction will revert.amountTokenuintThe amount of token sent to the pool.amountETHuintThe amount of ETH converted to WETH and sent to the pool.liquidityuintThe amount of liquidity tokens minted.removeLiquidity‚Äãfunction removeLiquidity( address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB);CopyRemoves liquidity from an ERC-20‚áÑERC-20 pool.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenAaddressA pool token.tokenBaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountAMinuintThe minimum amount of tokenA that must be received for the transaction not to revert.amountBMinuintThe minimum amount of tokenB that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountAuintThe amount of tokenA received.amountBuintThe amount of tokenB received.removeLiquidityETH‚Äãfunction removeLiquidityETH( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external returns (uint amountToken, uint amountETH);CopyRemoves liquidity from an ERC-20‚áÑWETH pool and receive ETH.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountTokenuintThe amount of token received.amountETHuintThe amount of ETH received.removeLiquidityWithPermit‚Äãfunction removeLiquidityWithPermit( address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountA, uint amountB);CopyRemoves liquidity from an ERC-20‚áÑERC-20 pool without pre-approval, thanks to permit.NameTypetokenAaddressA pool token.tokenBaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountAMinuintThe minimum amount of tokenA that must be received for the transaction not to revert.amountBMinuintThe minimum amount of tokenB that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountAuintThe amount of tokenA received.amountBuintThe amount of tokenB received.removeLiquidityETHWithPermit‚Äãfunction removeLiquidityETHWithPermit( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountToken, uint amountETH);CopyRemoves liquidity from an ERC-20‚áÑWETTH pool and receive ETH without pre-approval, thanks to permit.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountTokenuintThe amount of token received.amountETHuintThe amount of ETH received.removeLiquidityETHSupportingFeeOnTransferTokens‚Äãfunction removeLiquidityETHSupportingFeeOnTransferTokens( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external returns (uint amountETH);CopyIdentical to removeLiquidityETH, but succeeds for tokens that take a fee on transfer.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountETHuintThe amount of ETH received.removeLiquidityETHWithPermitSupportingFeeOnTransferTokens‚Äãfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountETH);CopyIdentical to removeLiquidityETHWithPermit, but succeeds for tokens that take a fee on transfer.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountETHuintThe amount of ETH received.swapExactTokensForTokens‚Äãfunction swapExactTokensForTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopySwaps an exact amount of input tokens for as many output tokens as possible, along the route determined by the path. The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountIn on the input token.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapTokensForExactTokens‚Äãfunction swapTokensForExactTokens( uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopyReceive an exact amount of output tokens for as few input tokens as possible, along the route determined by the path. The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate tokens to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountInMax on the input token.NameTypeamountOutuintThe amount of output tokens to receive.amountInMaxuintThe maximum amount of input tokens that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactETHForTokens‚Äãfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts);CopySwaps an exact amount of ETH for as many output tokens as possible, along the route determined by the path. The first element of path must be WETH, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).NameTypemsg.value (amountIn)uintThe amount of ETH to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapTokensForExactETH‚Äãfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopyReceive an exact amount of ETH for as few input tokens as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountInMax on the input token.If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountOutuintThe amount of ETH to receive.amountInMaxuintThe maximum amount of input tokens that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of ETH.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactTokensForETH‚Äãfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopySwaps an exact amount of tokens for as much ETH as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the ETH.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapETHForExactTokens‚Äãfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts);CopyReceive an exact amount of tokens for as little ETH as possible, along the route determined by the path. The first element of path must be WETH, the last is the output token and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).Leftover ETH, if any, is returned to msg.sender.NameTypeamountOutuintThe amount of tokens to receive.msg.value (amountInMax)uintThe maximum amount of ETH that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactTokensForTokensSupportingFeeOnTransferTokens‚Äãfunction swapExactTokensForTokensSupportingFeeOnTransferTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external;CopyIdentical to swapExactTokensForTokens, but succeeds for tokens that take a fee on transfer.msg.sender should have already given the router an allowance of at least amountIn on the input token.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.swapExactETHForTokensSupportingFeeOnTransferTokens‚Äãfunction swapExactETHForTokensSupportingFeeOnTransferTokens( uint amountOutMin, address[] calldata path, address to, uint deadline) external payable;CopyIdentical to swapExactETHForTokens, but succeeds for tokens that take a fee on transfer.NameTypemsg.value (amountIn)uintThe amount of ETH to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.swapExactTokensForETHSupportingFeeOnTransferTokens‚Äãfunction swapExactTokensForETHSupportingFeeOnTransferTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external;CopyIdentical to swapExactTokensForETH, but succeeds for tokens that take a fee on transfer.If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the ETH.deadlineuintUnix timestamp after which the transaction will revert.Interfaceimport '@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol';Copypragma solidity >=0.6.2;interface IUniswapV2Router01 { function factory() external pure returns (address); function WETH() external pure returns (address); function addLiquidity(  address tokenA,  address tokenB,  uint amountADesired,  uint amountBDesired,  uint amountAMin,  uint amountBMin,  address to,  uint deadline ) external returns (uint amountA, uint amountB, uint liquidity); function addLiquidityETH(  address token,  uint amountTokenDesired,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external payable returns (uint amountToken, uint amountETH, uint liquidity); function removeLiquidity(  address tokenA,  address tokenB,  uint liquidity,  uint amountAMin,  uint amountBMin,  address to,  uint deadline ) external returns (uint amountA, uint amountB); function removeLiquidityETH(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external returns (uint amountToken, uint amountETH); function removeLiquidityWithPermit(  address tokenA,  address tokenB,  uint liquidity,  uint amountAMin,  uint amountBMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountA, uint amountB); function removeLiquidityETHWithPermit(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountToken, uint amountETH); function swapExactTokensForTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external returns (uint[] memory amounts); function swapTokensForExactTokens(  uint amountOut,  uint amountInMax,  address[] calldata path,  address to,  uint deadline ) external returns (uint[] memory amounts); function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)  external  payable  returns (uint[] memory amounts); function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)  external  returns (uint[] memory amounts); function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)  external  returns (uint[] memory amounts); function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)  external  payable  returns (uint[] memory amounts); function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB); function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut); function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn); function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts); function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);}interface IUniswapV2Router02 is IUniswapV2Router01 { function removeLiquidityETHSupportingFeeOnTransferTokens(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external returns (uint amountETH); function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountETH); function swapExactTokensForTokensSupportingFeeOnTransferTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external; function swapExactETHForTokensSupportingFeeOnTransferTokens(  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external payable; function swapExactTokensForETHSupportingFeeOnTransferTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external;}CopyABIimport IUniswapV2Router02 from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'Copyhttps://unpkg.com/@uniswap/v2-periphery@1.1.0-beta.0/build/IUniswapV2Router02.jsonEdit this pageHelpful?PreviousRouter01NextCommon ErrorsfactoryWETHquotegetAmountOutgetAmountIngetAmountsOutgetAmountsInaddLiquidityaddLiquidityETHremoveLiquidityremoveLiquidityETHremoveLiquidityWithPermitremoveLiquidityETHWithPermitremoveLiquidityETHSupportingFeeOnTransferTokensremoveLiquidityETHWithPermitSupportingFeeOnTransferTokensswapExactTokensForTokensswapTokensForExactTokensswapExactETHForTokensswapTokensForExactETHswapExactTokensForETHswapETHForExactTokensswapExactTokensForTokensSupportingFeeOnTransferTokensswapExactETHForTokensSupportingFeeOnTransferTokensswapExactTokensForETHSupportingFeeOnTransferTokensDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
301,p.org sdk v3 reference interfaces ClaimOptions#tokenid,p.org sdk v3 reference interfaces ClaimOptions#tokenid.    ClaimOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesClaimOptionsHelpful?On this pageClaimOptions@uniswap/v3-sdk / Exports / ClaimOptionsInterface: ClaimOptionsOptions to specify when claiming rewards.Table of contents‚ÄãProperties‚ÄãamountrecipienttokenIdProperties‚Äãamount‚Äã‚Ä¢ Optional amount: BigintIshThe amount of rewardToken to claim. 0 claims all.Defined in‚Äãstaker.ts:52recipient‚Äã‚Ä¢ recipient: stringAddress to send rewards to.Defined in‚Äãstaker.ts:47tokenId‚Äã‚Ä¢ tokenId: BigintIshThe id of the NFTDefined in‚Äãstaker.ts:42Helpful?PreviousBestTradeOptionsNextCollectOptionsTable of contentsPropertiesPropertiesamountrecipienttokenIdDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
302,p.org contracts v2 guides smart contract integration using flash swaps,"p.org contracts v2 guides smart contract integration using flash swaps.    Flash Swaps | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationSmart Contract Quick startImplement a SwapProviding LiquidityBuilding an OracleFlash SwapsPair AddressesSupporting meta transactionsTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolGuidesSmart Contract IntegrationFlash SwapsHelpful?On this pageFlash SwapsFlash swaps are an integral feature of Uniswap V2. In fact, under the hood, all swaps are actually flash swaps! This simply means that pair contracts send output tokens to the recipient before enforcing that enough input tokens have been received. This is slightly atypical, as one might expect a pair to ensure it's received payment before delivery. However, because Ethereum transactions are atomic, we can roll back the entire swap if it turns out that the contract hasn't received enough tokens to make itself whole by the end of the transaction.To see how this all works, let's start by examining the interface of the swap function:function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data);CopyFor the sake of example, let's assume that we're dealing with a DAI/WETH pair, where DAI is token0 and WETH is token1. amount0Out and amount1Out specify the amount of DAI and WETH that the msg.sender wants the pair to send to the to address (one of these amounts may be 0). At this point you may be wondering how the contract receives tokens. For a typical (non-flash) swap, it's actually the responsibility of msg.sender to ensure that enough WETH or DAI has already been sent to the pair before swap is called (in the context of trading, this is all handled neatly by a router contract). But when executing a flash swap, tokens do not need to be sent to the contract before calling swap. Instead, they must be sent from within a callback function that the pair triggers on the to address.Triggering a Flash SwapTo differentiate between the ""typical"" trading case and the flash swap case, pairs use the data parameter. Specifically, if data.length equals 0, the contract assumes that payment has already been received, and simply transfers the tokens to the to address. But, if data.length is greater than 0, the contract transfers the tokens and then calls the following function on the to address:function uniswapV2Call(address sender, uint amount0, uint amount1, bytes calldata data);CopyThe logic behind this identification strategy is simple: the vast majority of valid flash swap use cases involve interactions with external protocols. The best way to pass information dictating how these interactions happen (function arguments, safety parameters, addresses, etc.) is via the data parameter. It's expected that data will be abi.decoded from within uniswapV2Call. In the rare case where no data is required, callers should ensure that data.length equals 1 (i.e. encode a single junk byte as bytes), and then ignore this argument in uniswapV2Call.Pairs call uniswapV2Call with the sender argument set to the msg.sender of the swap. amount0 and amount1 are simply amount0Out and amount1Out.Using uniswapV2CallThere are several conditions that should be checked in all uniswapV2Call functions:function uniswapV2Call(address sender, uint amount0, uint amount1, bytes calldata data) { address token0 = IUniswapV2Pair(msg.sender).token0(); // fetch the address of token0 address token1 = IUniswapV2Pair(msg.sender).token1(); // fetch the address of token1 assert(msg.sender == IUniswapV2Factory(factoryV2).getPair(token0, token1)); // ensure that msg.sender is a V2 pair // rest of the function goes here!}CopyThe first 2 lines simply fetch the token addresses from the pair, and the 3rd ensures that the msg.sender is an actual Uniswap V2 pair address.RepaymentAt the end of uniswapV2Call, contracts must return enough tokens to the pair to make it whole. Specifically, this means that the product of the pair reserves after the swap, discounting all token amounts sent by 0.3% LP fee, must be greater than before.Multi-Token‚ÄãIn the case where the token withdrawn is not the token returned (i.e. DAI was requested in the flash swap, and WETH was returned, or vice versa), the fee simplifies to the simple swap case. This means that the standard getAmountIn pricing function should be used to calculate e.g., the amount of WETH that must be returned in exchange for the amount of DAI that was requested out.This type of fee calculation gives a slight advantage to the caller, as the fee derived from repayment in a corresponding token will always be slightly less than the fee derived from a direct token repayment, as a result of the difference between the amount required to pay back a swap, versus the amount withdrawn and then directly returned. The approximate comparison of fees is ~ 30 bps for a swap fee vs. 30.09 bps for a direct repayment.Single-Token‚ÄãIn the case where the token withdrawn is the same as the token returned (i.e. DAI was requested in the flash swap, used, then returned, or vice versa with WETH), the following condition must be satisfied:DAIReservePre - DAIWithdrawn + (DAIReturned * .997) >= DAIReservePreIt may be more intuitive to rewrite this formula in terms of a ""fee"" levied on the withdrawn amount (despite the fact that Uniswap always levies fees on input amounts, in this case the returned amount, here we can simplify to an effective fee on the withdrawn amount). If we rearrange, the formula looks like:(DAIReturned * .997) - DAIWithdrawn >= 0DAIReturned >= DAIWithdrawn / .997So, the effective fee on the withdrawn amount is .003 / .997 ‚âà 0.3009027%.ResourcesFor further exploration of flash swaps, see the whitepaper.ExampleA fully functional example of flash swaps is available: ExampleFlashSwap.sol.Interfaceimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Callee.sol';Copypragma solidity >=0.5.0;interface IUniswapV2Callee { function uniswapV2Call(address sender, uint amount0, uint amount1, bytes calldata data) external;}CopyEdit this pageHelpful?PreviousBuilding an OracleNextPair AddressesMulti-TokenSingle-TokenDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
303,p.org sdk v3 reference classes TickMath#constructor,"p.org sdk v3 reference classes TickMath#constructor.    TickMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickMathHelpful?On this pageTickMath@uniswap/v3-sdk / Exports / TickMathClass: TickMathTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãMAX_SQRT_RATIOMAX_TICKMIN_SQRT_RATIOMIN_TICKMethods‚ÄãgetSqrtRatioAtTickgetTickAtSqrtRatioConstructors‚Äãconstructor‚Äã‚Ä¢ Private new TickMath()Cannot be constructed.Defined in‚Äãutils/tickMath.ts:17Properties‚ÄãMAX_SQRT_RATIO‚Äã‚ñ™ Static MAX_SQRT_RATIO: defaultThe sqrt ratio corresponding to the maximum tick that could be used on any pool.Defined in‚Äãutils/tickMath.ts:35MAX_TICK‚Äã‚ñ™ Static MAX_TICK: number = -TickMath.MIN_TICKThe maximum tick that can be used on any pool.Defined in‚Äãutils/tickMath.ts:26MIN_SQRT_RATIO‚Äã‚ñ™ Static MIN_SQRT_RATIO: defaultThe sqrt ratio corresponding to the minimum tick that could be used on any pool.Defined in‚Äãutils/tickMath.ts:31MIN_TICK‚Äã‚ñ™ Static MIN_TICK: number = -887272The minimum tick that can be used on any pool.Defined in‚Äãutils/tickMath.ts:22Methods‚ÄãgetSqrtRatioAtTick‚Äã‚ñ∏ Static getSqrtRatioAtTick(tick): defaultReturns the sqrt ratio as a Q64.96 for the given tick. The sqrt ratio is computed as sqrt(1.0001)^tickParameters‚ÄãNameTypeDescriptionticknumberthe tick for which to compute the sqrt ratioReturns‚ÄãdefaultDefined in‚Äãutils/tickMath.ts:41getTickAtSqrtRatio‚Äã‚ñ∏ Static getTickAtSqrtRatio(sqrtRatioX96): numberReturns the tick corresponding to a given sqrt ratio, s.t. #getSqrtRatioAtTick(tick) <= sqrtRatioX96 and #getSqrtRatioAtTick(tick + 1) > sqrtRatioX96Parameters‚ÄãNameTypeDescriptionsqrtRatioX96defaultthe sqrt ratio as a Q64.96 for which to compute the tickReturns‚ÄãnumberDefined in‚Äãutils/tickMath.ts:82Helpful?PreviousTickListDataProviderNextTradeTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesMAX_SQRT_RATIOMAX_TICKMIN_SQRT_RATIOMIN_TICKMethodsgetSqrtRatioAtTickgetTickAtSqrtRatioDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
304,p.org contracts v3 guides providing liquidity decrease liquidity,"p.org contracts v3 guides providing liquidity decrease liquidity.    Decrease Liquidity | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquiditySet Up Your ContractMint a New PositionCollecting FeesDecrease LiquidityIncrease LiquidityThe Full ContractLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolGuidesProviding LiquidityDecrease LiquidityHelpful?On this pageDecrease LiquidityMake sure to go through the Setting Up Your Contract before continuing to this sectionHere we decrease the liquidity of our position without withdrawing all of it.This example assumes the contract already has possession of the position NFT, and requires the calling address to be the same address that deposited the position NFT to our contract.In production, amount0Min and amount1Min should be adjusted to create slippage protections.Decrease Liquidity‚Äã /// @notice A function that decreases the current liquidity by half. An example to show how to call the `decreaseLiquidity` function defined in periphery. /// @param tokenId The id of the erc721 token /// @return amount0 The amount received back in token0 /// @return amount1 The amount returned back in token1 function decreaseLiquidityInHalf(uint256 tokenId) external returns (uint256 amount0, uint256 amount1) {  // caller must be the owner of the NFT  require(msg.sender == deposits[tokenId].owner, 'Not the owner');  // get liquidity data for tokenId  uint128 liquidity = deposits[tokenId].liquidity;  uint128 halfLiquidity = liquidity / 2;  // amount0Min and amount1Min are price slippage checks  // if the amount received after burning is not greater than these minimums, transaction will fail  INonfungiblePositionManager.DecreaseLiquidityParams memory params =   INonfungiblePositionManager.DecreaseLiquidityParams({    tokenId: tokenId,    liquidity: halfLiquidity,    amount0Min: 0,    amount1Min: 0,    deadline: block.timestamp   });  (amount0, amount1) = nonfungiblePositionManager.decreaseLiquidity(params);  //send liquidity back to owner  _sendToOwner(tokenId, amount0, amount1); }CopySending Fees To The Calling Address‚ÄãThis internal helper function sends any tokens, in the form of fees or position tokens, to the owner of an NFT.In _sendToOwner, we pass the amount of fees due, previously populated in the last function, as arguments to safeTransfer, which transfers the fees to owner. /// @notice Transfers funds to owner of NFT /// @param tokenId The id of the erc721 /// @param amount0 The amount of token0 /// @param amount1 The amount of token1 function _sendToOwner(  uint256 tokenId,  uint256 amount0,  uint256 amount1 ) internal {  // get owner of contract  address owner = deposits[tokenId].owner;  address token0 = deposits[tokenId].token0;  address token1 = deposits[tokenId].token1;  // send collected fees to owner  TransferHelper.safeTransfer(token0, owner, amount0);  TransferHelper.safeTransfer(token1, owner, amount1); }CopyEdit this pageHelpful?PreviousCollecting FeesNextIncrease LiquidityDecrease LiquiditySending Fees To The Calling AddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
305,p.org sdk v3 reference interfaces MintSpecificOptions,p.org sdk v3 reference interfaces MintSpecificOptions.    MintSpecificOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesMintSpecificOptionsHelpful?On this pageMintSpecificOptions@uniswap/v3-sdk / Exports / MintSpecificOptionsInterface: MintSpecificOptionsTable of contents‚ÄãProperties‚ÄãcreatePoolrecipientProperties‚ÄãcreatePool‚Äã‚Ä¢ Optional createPool: booleanCreates pool if not initialized before mint.Defined in‚ÄãnonfungiblePositionManager.ts:34recipient‚Äã‚Ä¢ recipient: stringThe account that should receive the minted NFT.Defined in‚ÄãnonfungiblePositionManager.ts:29Helpful?PreviousMethodParametersNextNFTPermitOptionsTable of contentsPropertiesPropertiescreatePoolrecipientDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
306,p.org sdk v2 reference fractions,"p.org sdk v2 reference fractions.    Fractions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKOverviewGuidesSDK Quick startFetching DataPricingTradingPair AddressesTechnical ReferenceGetting StartedTokenPairRouteTradeFractionsFetcherOther ExportsV1 SDKüè†V2 SDKTechnical ReferenceFractionsHelpful?On this pageFractionconstructor(numerator: BigintIsh, denominator: BigintIsh = ONE)CopyThe base class which all subsequent fraction classes extend. Not meant to be used directly.Properties‚Äãnumerator‚Äãnumerator: JSBICopydenominator‚Äãdenominator: JSBICopyquotient‚Äãquotient: JSBICopyPerforms floor division.Methods‚Äãinvert‚Äãinvert(): FractionCopyadd‚Äãadd(other: Fraction | BigintIsh): FractionCopysubtract‚Äãsubtract(other: Fraction | BigintIsh): FractionCopymultiply‚Äãmultiply(other: Fraction | BigintIsh): FractionCopydivide‚Äãdivide(other: Fraction | BigintIsh): FractionCopytoSignificant‚ÄãtoSignificant( significantDigits: number, format: object = { groupSeparator: '' }, rounding: Rounding = Rounding.ROUND_HALF_UP): stringCopyFormats a fraction to the specified number of significant digits.For format options, see toFormat.toFixed‚ÄãtoFixed( decimalPlaces: number, format: object = { groupSeparator: '' }, rounding: Rounding = Rounding.ROUND_HALF_UP): stringCopyFormats a fraction to the specified number of decimal places.For format options, see toFormat.PercentResponsible for formatting percentages (10% instead of 0.1).Example‚Äãimport { Percent } from '@uniswap/sdk'const percent = new Percent('60', '100')console.log(percent.toSignificant(2)) // 60CopytoSignificant‚ÄãSee toSignificant.toFixed‚ÄãSee toFixed.TokenAmountconstructor(token: Token, amount: BigintIsh)CopyResponsible for formatting token amounts with specific decimal places.Example‚Äãimport { Token, TokenAmount } from '@uniswap/sdk'const FRIED = new Token(ChainId.MAINNET, '0xfa1aFe1000000000000000000000000000000000', 18, 'FRIED', 'Beans')const tokenAmount = new TokenAmount(FRIED, '3000000000000000000')console.log(tokenAmount.toExact()) // 3CopyProperties‚Äãtoken‚Äãtoken: TokenCopyraw‚Äãraw: JSBICopyReturns the full token amount, unadjusted for decimals.Methods‚Äãadd‚Äãadd(other: TokenAmount): TokenAmountCopysubtract‚Äãsubtract(other: TokenAmount): TokenAmountCopytoSignificant‚ÄãSee toSignificant.toFixed‚ÄãSee toFixed.toExact‚ÄãtoExact(format: object = { groupSeparator: '' }): stringCopyPriceconstructor(baseToken: Token, quoteToken: Token, denominator: BigintIsh, numerator: BigintIsh)CopyResponsible for denominating the relative price between two tokens. Denominator and numerator must be unadjusted for decimals.Example‚Äãimport { ChainId, WETH as WETHs, Token, Price } from '@uniswap/sdk'const WETH = WETHs[ChainId.MAINNET]const ABC = new Token(ChainId.MAINNET, '0xabc0000000000000000000000000000000000000', 18, 'ABC')const price = new Price(WETH, ABC, '1000000000000000000', '123000000000000000000')console.log(price.toSignificant(3)) // 123CopyThis example shows the¬†ETH/XYZ price, where ETH is the base token, and XYZ is the quote token. The price is constructed from an amount of XYZ (the numerator) / an amount of WETH (the denominator).Static Methods‚ÄãfromRoute‚ÄãfromRoute(route: Route): PriceCopyProperties‚ÄãbaseToken‚ÄãbaseToken: TokenCopyquoteToken‚ÄãquoteToken: TokenCopyscalar‚Äãscalar: FractionCopyUsed to adjust the price for the decimals of the base and quote tokens.raw‚Äãraw: FractionCopyReturns the raw price, unadjusted for decimals.adjusted‚Äãadjusted: FractionCopyReturns the price, adjusted for decimals.Methods‚Äãinvert‚Äãinvert(): PriceCopymultiply‚Äãmultiply(other: Price): PriceCopyquote‚Äãquote(tokenAmount: TokenAmount): TokenAmountCopyGiven an asset amount, returns an equivalent value of the other asset, according to the current price.toSignificant‚ÄãSee toSignificant.toFixed‚ÄãSee toFixed.Helpful?PreviousTradeNextFetcherPropertiesnumeratordenominatorquotientMethodsinvertaddsubtractmultiplydividetoSignificanttoFixedExampletoSignificanttoFixedExamplePropertiestokenrawMethodsaddsubtracttoSignificanttoFixedtoExactExampleStatic MethodsfromRoutePropertiesbaseTokenquoteTokenscalarrawadjustedMethodsinvertmultiplyquotetoSignificanttoFixedDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
307,p.org sdk v3 reference interfaces CollectOptions#expectedcurrencyowed0,"p.org sdk v3 reference interfaces CollectOptions#expectedcurrencyowed0.    CollectOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesCollectOptionsHelpful?On this pageCollectOptions@uniswap/v3-sdk / Exports / CollectOptionsInterface: CollectOptionsTable of contents‚ÄãProperties‚ÄãexpectedCurrencyOwed0expectedCurrencyOwed1recipienttokenIdProperties‚ÄãexpectedCurrencyOwed0‚Äã‚Ä¢ expectedCurrencyOwed0: CurrencyAmount<Currency>Expected value of tokensOwed0, including as-of-yet-unaccounted-for fees/liquidity value to be burnedDefined in‚ÄãnonfungiblePositionManager.ts:114expectedCurrencyOwed1‚Äã‚Ä¢ expectedCurrencyOwed1: CurrencyAmount<Currency>Expected value of tokensOwed1, including as-of-yet-unaccounted-for fees/liquidity value to be burnedDefined in‚ÄãnonfungiblePositionManager.ts:119recipient‚Äã‚Ä¢ recipient: stringThe account that should receive the tokens.Defined in‚ÄãnonfungiblePositionManager.ts:124tokenId‚Äã‚Ä¢ tokenId: BigintIshIndicates the ID of the position to collect for.Defined in‚ÄãnonfungiblePositionManager.ts:109Helpful?PreviousClaimOptionsNextCommonAddLiquidityOptionsTable of contentsPropertiesPropertiesexpectedCurrencyOwed0expectedCurrencyOwed1recipienttokenIdDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
308,p.org sdk v3 reference modules.md#tick spacings,p.org sdk v3 reference modules.md#tick spacings. 
309,p.org sdk core reference classes Token#isnative,"p.org sdk core reference classes Token#isnative.    Token | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesTokenHelpful?On this pageToken@uniswap/sdk-core / Exports / TokenClass: TokenRepresents an ERC20 token with a unique address and some metadata.Hierarchy‚ÄãBaseCurrency‚Ü≥ TokenTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãaddresschainIddecimalsisNativeisTokennamesymbolAccessors‚ÄãwrappedMethods‚ÄãequalssortsBeforeConstructors‚Äãconstructor‚Äã‚Ä¢ new Token(chainId, address, decimals, symbol?, name?, bypassChecksum?)Parameters‚ÄãNameTypeDescriptionchainIdnumberBaseCurrency#chainIdaddressstringThe contract address on the chain on which this token livesdecimalsnumberBaseCurrency#decimalssymbol?stringBaseCurrency#symbolname?stringBaseCurrency#namebypassChecksum?booleanIf true it only checks for length === 42, startsWith 0x and contains only hex charactersOverrides‚ÄãBaseCurrency.constructorDefined in‚Äãentities/token.ts:27Properties‚Äãaddress‚Äã‚Ä¢ Readonly address: stringThe contract address on the chain on which this token livesDefined in‚Äãentities/token.ts:16chainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãBaseCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãBaseCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: falseOverrides‚ÄãBaseCurrency.isNativeDefined in‚Äãentities/token.ts:10isToken‚Äã‚Ä¢ Readonly isToken: trueOverrides‚ÄãBaseCurrency.isTokenDefined in‚Äãentities/token.ts:11name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãBaseCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãBaseCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29Accessors‚Äãwrapped‚Äã‚Ä¢ get wrapped(): TokenReturn this token, which does not need to be wrappedReturns‚ÄãTokenOverrides‚ÄãBaseCurrency.wrappedDefined in‚Äãentities/token.ts:66Methods‚Äãequals‚Äã‚ñ∏ equals(other): booleanReturns true if the two tokens are equivalent, i.e. have the same chainId and address.Parameters‚ÄãNameTypeDescriptionotherCurrencyother token to compareReturns‚ÄãbooleanOverrides‚ÄãBaseCurrency.equalsDefined in‚Äãentities/token.ts:47sortsBefore‚Äã‚ñ∏ sortsBefore(other): booleanReturns true if the address of this token sorts before the address of the other tokenThrowsif the tokens have the same addressThrowsif the tokens are on different chainsParameters‚ÄãNameTypeDescriptionotherTokenother token to compareReturns‚ÄãbooleanDefined in‚Äãentities/token.ts:57Helpful?PreviousPriceNextRoundingHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesaddresschainIddecimalsisNativeisTokennamesymbolAccessorswrappedMethodsequalssortsBeforeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
310,p.org sdk core reference classes Fraction#quotient,"p.org sdk core reference classes Fraction#quotient.    Fraction | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesFractionHelpful?On this pageFraction@uniswap/sdk-core / Exports / FractionClass: FractionHierarchy‚ÄãFraction‚Ü≥ CurrencyAmount‚Ü≥ Percent‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatornumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionConstructors‚Äãconstructor‚Äã‚Ä¢ new Fraction(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:107subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:138toSignificant‚Äã‚ñ∏ toSignificant(significantDigits, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:123tryParseFraction‚Äã‚ñ∏ Static Private tryParseFraction(fractionish): FractionParameters‚ÄãNameTypefractionishBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:33Helpful?PreviousEtherNextNativeCurrencyHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatornumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
311,p.org contracts v3 reference core libraries FullMath,"p.org contracts v3 reference core libraries FullMath.    FullMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesLibrariesBitMathFixedPoint128FixedPoint96FullMathLiquidityMathLowGasSafeMathOraclePositionSafeCastSecondsOutsideSqrtPriceMathSwapMathTickTickBitmapTickMathTransferHelperUnsafeMathGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreLibrariesFullMathHelpful?On this pageFullMathFacilitates multiplication and division that can have overflow of an intermediate value without any loss of precisionHandles ""phantom overflow"" i.e., allows multiplication and division where an intermediate value overflows 256 bitsFunctions‚ÄãmulDiv‚Äã function mulDiv( uint256 a, uint256 b, uint256 denominator ) internal pure returns (uint256 result)CopyCalculates floor(a√ób√∑denominator) with full precision. Throws if result overflows a uint256 or denominator == 0Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldivParameters:‚ÄãNameTypeDescriptionauint256The multiplicandbuint256The multiplierdenominatoruint256The divisorReturn Values:‚ÄãNameTypeDescriptionresultuint256The 256-bit resultmulDivRoundingUp‚Äã function mulDivRoundingUp( uint256 a, uint256 b, uint256 denominator ) internal pure returns (uint256 result)CopyCalculates ceil(a√ób√∑denominator) with full precision. Throws if result overflows a uint256 or denominator == 0Parameters:‚ÄãNameTypeDescriptionauint256The multiplicandbuint256The multiplierdenominatoruint256The divisorReturn Values:‚ÄãNameTypeDescriptionresultuint256The 256-bit resultEdit this pageHelpful?PreviousFixedPoint96NextLiquidityMathFunctionsmulDivmulDivRoundingUpDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
312,p.org contracts v2 concepts core concepts pools,"p.org contracts v2 concepts core concepts pools.    Pools | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsSwapsPoolsFlash SwapsOraclesAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolConceptsCore ConceptsPoolsHelpful?PoolsIntroductionEach Uniswap liquidity pool is a trading venue for a pair of ERC20 tokens. When a pool contract is created, its balances of each token are 0; in order for the pool to begin facilitating trades, someone must seed it with an initial deposit of each token. This first liquidity provider is the one who sets the initial price of the pool. They are incentivized to deposit an equal value of both tokens into the pool. To see why, consider the case where the first liquidity provider deposits tokens at a ratio different from the current market rate. This immediately creates a profitable arbitrage opportunity, which is likely to be taken by an external party.When other liquidity providers add to an existing pool, they must deposit pair tokens proportional to the current price. If they don‚Äôt, the liquidity they added is at risk of being arbitraged as well. If they believe the current price is not correct, they may arbitrage it to the level they desire, and add liquidity at that price.Pool tokensWhenever liquidity is deposited into a pool, unique tokens known as liquidity tokens are minted and sent to the provider's address. These tokens represent a given liquidity provider's contribution to a pool. The proportion of the pool's liquidity provided determines the number of liquidity tokens the provider receives. If the provider is minting a new pool, the number of liquidity tokens they will receive will equal sqrt(x * y), where x and y represent the amount of each token provided.Whenever a trade occurs, a 0.3% fee is charged to the transaction sender. This fee is distributed pro-rata to all LPs in the pool upon completion of the trade.To retrieve the underlying liquidity, plus any fees accrued, liquidity providers must ""burn"" their liquidity tokens, effectively exchanging them for their portion of the liquidity pool, plus the proportional fee allocation.As liquidity tokens are themselves tradable assets, liquidity providers may sell, transfer, or otherwise use their liquidity tokens in any way they see fit.Learn more with advanced topics:Understanding ReturnsFeesWhy pools?Uniswap is unique in that it doesn‚Äôt use an order book to derive the price of an asset or to match buyers and sellers of tokens. Instead, Uniswap uses what are called Liquidity Pools.Liquidity is typically represented by discrete orders placed by individuals onto a centrally operated order book. A participant looking to provide liquidity or make markets must actively manage their orders, continuously updating them in response to the activity of others in the marketplace.While order books are foundational to finance and work great for certain usecases, they suffer from a few important limitations that are especially magnified when applied to a decentralized or blockchain-native setting. Order books require intermediary infrastructure to host the orderbook and match orders. This creates points of control and adds additional layers of complexity. They also require active participation and management from market makers who usually use sophisticated infrastructure and algorithms, limiting participation to advanced traders. Order books were invented in a world with relatively few assets being traded, so it is not surprising they aren't ideal for an ecosystem where anyone can create their own token, and those tokens usually have low liquidity. In sum, with the infrastructural trade-offs presented by a platform like Ethereum, order books are not the native architecture for implementing a liquidity protocol on a blockchain.Uniswap focuses on the strengths of Ethereum to reimagine token swaps from first principles.A blockchain-native liquidity protocol should take advantage of the trusted code execution environment, the autonomous and perpetually running virtual machine, and an open, permissionless, and inclusive access model that produces an exponentially growing ecosystem of virtual assets.It is important to reiterate that a Pool is just a smart contract, operated by users calling functions on it. Swapping tokens is calling swap on a Pool contract instance, while providing liquidity is calling deposit.Just how end-users can interact with the Uniswap protocol through the Interface (which in turn interacts with the underlying contracts), developers can interact directly with the smart contracts and integrate Uniswap functionality into their own applications without relying on intermediaries or needing permission.Developer resourcesTo see how to pool tokens in a smart contract read Providing Liquidity.Edit this pageHelpful?PreviousSwapsNextFlash SwapsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
313,p.org contracts v2 reference smart contracts pair#getreserves,"p.org contracts v2 reference smart contracts pair#getreserves.    Pair | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsPairHelpful?On this pagePairThis documentation covers Uniswap-specific functionality. For ERC-20 functionality, see Pair (ERC-20).CodeUniswapV2Pair.solAddressSee Pair Addresses.EventsMint‚Äãevent Mint(address indexed sender, uint amount0, uint amount1);CopyEmitted each time liquidity tokens are created via mint.Burn‚Äãevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);CopyEmitted each time liquidity tokens are destroyed via burn.Swap‚Äãevent Swap( address indexed sender, uint amount0In, uint amount1In, uint amount0Out, uint amount1Out, address indexed to);CopyEmitted each time a swap occurs via swap.Sync‚Äãevent Sync(uint112 reserve0, uint112 reserve1);CopyEmitted each time reserves are updated via mint, burn, swap, or sync.Read-Only FunctionsMINIMUM_LIQUIDITY‚Äãfunction MINIMUM_LIQUIDITY() external pure returns (uint);CopyReturns 1000 for all pairs. See Minimum Liquidity.factory‚Äãfunction factory() external view returns (address);CopyReturns the factory address.token0‚Äãfunction token0() external view returns (address);CopyReturns the address of the pair token with the lower sort order.token1‚Äãfunction token1() external view returns (address);CopyReturns the address of the pair token with the higher sort order.getReserves‚Äãfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);CopyReturns the reserves of token0 and token1 used to price trades and distribute liquidity. See Pricing. Also returns the block.timestamp (mod 2**32) of the last block during which an interaction occured for the pair.price0CumulativeLast‚Äãfunction price0CumulativeLast() external view returns (uint);CopySee Oracles.price1CumulativeLast‚Äãfunction price1CumulativeLast() external view returns (uint);CopySee Oracles.kLast‚Äãfunction kLast() external view returns (uint);CopyReturns the product of the reserves as of the most recent liquidity event. See Protocol Charge Calculation.State-Changing Functionsmint‚Äãfunction mint(address to) external returns (uint liquidity);CopyCreates pool tokens.Emits Mint, Sync, Transfer.burn‚Äãfunction burn(address to) external returns (uint amount0, uint amount1);CopyDestroys pool tokens.Emits Burn, Sync, Transfer.swap‚Äãfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;CopySwaps tokens. For regular swaps, data.length must be 0. Also see Flash Swaps.Emits Swap, Sync.skim‚Äãfunction skim(address to) external;CopySee the whitepaper.sync‚Äãfunction sync() external;CopySee the whitepaper.Emits Sync.Interfaceimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol';Copypragma solidity >=0.5.0;interface IUniswapV2Pair { event Approval(address indexed owner, address indexed spender, uint value); event Transfer(address indexed from, address indexed to, uint value); function name() external pure returns (string memory); function symbol() external pure returns (string memory); function decimals() external pure returns (uint8); function totalSupply() external view returns (uint); function balanceOf(address owner) external view returns (uint); function allowance(address owner, address spender) external view returns (uint); function approve(address spender, uint value) external returns (bool); function transfer(address to, uint value) external returns (bool); function transferFrom(address from, address to, uint value) external returns (bool); function DOMAIN_SEPARATOR() external view returns (bytes32); function PERMIT_TYPEHASH() external pure returns (bytes32); function nonces(address owner) external view returns (uint); function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external; event Mint(address indexed sender, uint amount0, uint amount1); event Burn(address indexed sender, uint amount0, uint amount1, address indexed to); event Swap(  address indexed sender,  uint amount0In,  uint amount1In,  uint amount0Out,  uint amount1Out,  address indexed to ); event Sync(uint112 reserve0, uint112 reserve1); function MINIMUM_LIQUIDITY() external pure returns (uint); function factory() external view returns (address); function token0() external view returns (address); function token1() external view returns (address); function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast); function price0CumulativeLast() external view returns (uint); function price1CumulativeLast() external view returns (uint); function kLast() external view returns (uint); function mint(address to) external returns (uint liquidity); function burn(address to) external returns (uint amount0, uint amount1); function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external; function skim(address to) external; function sync() external;}CopyABIimport IUniswapV2Pair from '@uniswap/v2-core/build/IUniswapV2Pair.json'Copyhttps://unpkg.com/@uniswap/v2-core@1.0.0/build/IUniswapV2Pair.jsonEdit this pageHelpful?PreviousFactoryNextPair (ERC-20)MintBurnSwapSyncMINIMUM_LIQUIDITYfactorytoken0token1getReservesprice0CumulativeLastprice1CumulativeLastkLastmintburnswapskimsyncDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
314,p.org contracts universal router technical reference#sweep erc1155,"p.org contracts universal router technical reference#sweep erc1155.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
315,p.org contracts v3 guides flash integrations calling flash,"p.org contracts v3 guides flash integrations calling flash.    Calling Flash | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGetting StartedCalling FlashThe Flash CallbackThe Final ContractGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolGuidesImplement Flash SwapsCalling FlashHelpful?On this pageCalling FlashParameter Structs‚ÄãIn order to call flash, we will need the flash parameters for the initial call, as well as any parameters we want to pass through to the callback.The FlashParams struct will contain the token addresses and amounts we wish to pull out of the pool, as well as the three fee tiers used to determine which pool we are withdrawing from, and which we will be swapping with. struct FlashParams {  address token0;  address token1;  uint24 fee1;  uint256 amount0;  uint256 amount1;  uint24 fee2;  uint24 fee3; }CopyThe FlashCallbackData struct will contain the data we want to send to the callback. This includes poolKey, which expresses the sorted tokens with the matched fee tier, returned by the PoolAddress library. struct FlashCallbackData {  uint256 amount0;  uint256 amount1;  address payer;  PoolAddress.PoolKey poolKey;  uint24 poolFee2;  uint24 poolFee3; }CopyPool Key‚ÄãNow we'll start our function by assigning the relevant parameters from the Flashparams (which we have declared in memory as params) to our variable poolKey function initFlash(FlashParams memory params) external {  PoolAddress.PoolKey memory poolKey =   PoolAddress.PoolKey({token0: params.token0, token1: params.token1, fee: params.fee1}); }CopyNext we will declare pool as type [IUniswapV3Pool], which allows us to call flash on our desired pool contract.  IUniswapV3Pool pool = IUniswapV3Pool(PoolAddress.computeAddress(factory, poolKey));CopyCalling Flash‚ÄãFinally, we call flash on our previously declared pool. In the last parameter, we abi.encode the FlashCallbackData, which will be decoded in the callback and used to inform the next steps of the transaction.  pool.flash(   address(this),   params.amount0,   params.amount1,   abi.encode(    FlashCallbackData({     amount0: params.amount0,     amount1: params.amount1,     payer: msg.sender,     poolKey: poolKey,     poolFee2: params.fee2,     poolFee3: params.fee3    })   )  );CopyThe full function: //fee1 is the fee of the pool from the initial borrow //fee2 is the fee of the first pool to arb from //fee3 is the fee of the second pool to arb from struct FlashParams {  address token0;  address token1;  uint24 fee1;  uint256 amount0;  uint256 amount1;  uint24 fee2;  uint24 fee3; } // fee2 and fee3 are the two other fees associated with the two other pools of token0 and token1 struct FlashCallbackData {  uint256 amount0;  uint256 amount1;  address payer;  PoolAddress.PoolKey poolKey;  uint24 poolFee2;  uint24 poolFee3; }function initFlash(FlashParams memory params) external {  PoolAddress.PoolKey memory poolKey =   PoolAddress.PoolKey({token0: params.token0, token1: params.token1, fee: params.fee1});  IUniswapV3Pool pool = IUniswapV3Pool(PoolAddress.computeAddress(factory, poolKey));  pool.flash(   address(this),   params.amount0,   params.amount1,   abi.encode(    FlashCallbackData({     amount0: params.amount0,     amount1: params.amount1,     payer: msg.sender,     poolKey: poolKey,     poolFee2: params.fee2,     poolFee3: params.fee3    })   )  ); }CopyEdit this pageHelpful?PreviousGetting StartedNextThe Flash CallbackParameter StructsPool KeyCalling FlashDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
316,p.org sdk v3 reference interfaces AllowedPermitArguments#nonce,p.org sdk v3 reference interfaces AllowedPermitArguments#nonce.    AllowedPermitArguments | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesAllowedPermitArgumentsHelpful?On this pageAllowedPermitArguments@uniswap/v3-sdk / Exports / AllowedPermitArgumentsInterface: AllowedPermitArgumentsTable of contents‚ÄãProperties‚ÄãexpirynoncersvProperties‚Äãexpiry‚Äã‚Ä¢ expiry: BigintIshDefined in‚ÄãselfPermit.ts:19nonce‚Äã‚Ä¢ nonce: BigintIshDefined in‚ÄãselfPermit.ts:18r‚Äã‚Ä¢ r: stringDefined in‚ÄãselfPermit.ts:16s‚Äã‚Ä¢ s: stringDefined in‚ÄãselfPermit.ts:17v‚Äã‚Ä¢ v: 0 | 1 | 27 | 28Defined in‚ÄãselfPermit.ts:15Helpful?PreviousFeeAmountNextBestTradeOptionsTable of contentsPropertiesPropertiesexpirynoncersvDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
317,p.org sdk v3 reference classes SelfPermit#encodepermit,"p.org sdk v3 reference classes SelfPermit#encodepermit.    SelfPermit | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesSelfPermitHelpful?On this pageSelfPermit@uniswap/v3-sdk / Exports / SelfPermitClass: SelfPermitTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãencodePermitConstructors‚Äãconstructor‚Äã‚Ä¢ Private new SelfPermit()Cannot be constructed.Defined in‚ÄãselfPermit.ts:34Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚ÄãselfPermit.ts:29Methods‚ÄãencodePermit‚Äã‚ñ∏ Static encodePermit(token, options): stringParameters‚ÄãNameTypetokenTokenoptionsPermitOptionsReturns‚ÄãstringDefined in‚ÄãselfPermit.ts:36Helpful?PreviousRouteNextSqrtPriceMathTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsencodePermitDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
318,p.org contracts v2 concepts core concepts oracles,"p.org contracts v2 concepts core concepts oracles.    Oracles | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsSwapsPoolsFlash SwapsOraclesAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolConceptsCore ConceptsOraclesHelpful?On this pageIntroductionA price oracle is any tool used to view price information about a given asset. When you look at stock prices on your phone, you are using your phone as a price oracle. Similarly, the app on your phone relies on devices to retrieve price information - likely several, which are aggregated and then displayed to you, the end-user. These are price oracles as well.When building smart contracts that integrate with DeFi protocols, developers will inevitably run into the price oracle problem. What is the best way to retrieve the price of a given asset on-chain?Many oracle designs on Ethereum have been implemented on an ad-hoc basis, with varying degrees of decentralization and security. Because of this, the ecosystem has witnessed numerous high-profile hacks where the oracle implementation is the primary attack vector. Some of these vulnerabilities are discussed here.While there is no one size fits all solution, Uniswap V2 enables developers to build highly decentralized and manipulation-resistant on-chain price oracles, which may solve many of the demands necessary for building robust protocols.Uniswap V2 solutionUniswap V2 includes several improvements for supporting manipulation-resistant public price feeds. First, every pair measures (but does not store) the market price at the beginning of each block, before any trades take place. This price is expensive to manipulate because it is set by the last transaction, whether it is a mint, swap, or burn, in a previous block.To set the measured price to one that is out of sync with the global market price, an attacker has to make a bad trade at the end of a previous block , typically with no guarantee that they will arbitrage it back in the next block. Attackers will lose money to arbitrageurs unless they can ‚Äúselfishly‚Äù mine two blocks in a row. This type of attack presents several challenges and has not been observed to date.Unfortunately, this alone is not enough. If significant value settles based on the price resulting from this mechanism, an attack‚Äôs profit will likely outweigh the loss.Instead, Uniswap V2 adds this end-of-block price to a single cumulative-price variable in the core contract weighted by the amount of time this price existed. This variable represents a sum of the Uniswap price for every second in the entire history of the contract.This variable can be used by external contracts to track accurate time-weighted average prices (TWAPs) across any time interval.The TWAP is constructed by reading the cumulative price from an ERC20 token pair at the beginning and at the end of the desired interval. The difference in this cumulative price can then be divided by the length of the interval to create a TWAP for that period.TWAPs can be used directly or as the basis for moving averages (EMAs and SMAs) as needed.A few notes:For a 10-minute TWAP, sample once every 10 minutes. For a 1-week TWAP, sample once every week.For a simple TWAP, the cost of manipulation increases (approx. linear) with liquidity on Uniswap, as well as (approx. linear) with the length of time over which you average.The Cost of an attack is relatively simple to estimate. Moving the price 5% on a 1-hour TWAP is approximately equal to the amount lost to arbitrage and fees for moving the price 5% every block for 1 hour.There are some nuances that are good to be aware of when using Uniswap V2 as an oracle, especially where manipulation resistance is concerned. The whitepaper elaborates on some of them. Additional oracle-focused developer guides and documentation will be released soon.In the meantime, check out our example implementation of a 24 hr TWAP Oracle built on Uniswap V2!Manipulation resistance‚ÄãThe cost of manipulating the price for a specific time period can be roughly estimated as the amount lost to arbitrage and fees every block for the entire period. For larger liquidity pools and over longer time periods, this attack is impractical, as the cost of manipulation typically exceeds the value at stake.Other factors, such as network congestion, can reduce the cost of attack. For a more in-depth review of the security of Uniswap V2 price oracles, read the security audit section on Oracle Integrity.Building an oracleTo learn more about building oracles check out building an Oracle in the developer guides.Edit this pageHelpful?PreviousFlash SwapsNextFeesManipulation resistanceDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
319,p.org sdk v3 reference classes Position#token0priceupper,"p.org sdk v3 reference classes Position#token0priceupper.    Position | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPositionHelpful?On this pagePosition@uniswap/v3-sdk / Exports / PositionClass: PositionRepresents a position on a Uniswap V3 PoolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessors‚Äãamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethods‚ÄãburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsConstructors‚Äãconstructor‚Äã‚Ä¢ new Position(__namedParameters)Constructs a position for a given pool with the given liquidityParameters‚ÄãNameType__namedParametersPositionConstructorArgsDefined in‚Äãentities/position.ts:40Properties‚Äã_mintAmounts‚Äã‚Ä¢ Private _mintAmounts: null | Readonly<{ amount0: default ; amount1: default }> = nullDefined in‚Äãentities/position.ts:31_token0Amount‚Äã‚Ä¢ Private _token0Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:29_token1Amount‚Äã‚Ä¢ Private _token1Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:30liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/position.ts:26pool‚Äã‚Ä¢ Readonly pool: PoolDefined in‚Äãentities/position.ts:23tickLower‚Äã‚Ä¢ Readonly tickLower: numberDefined in‚Äãentities/position.ts:24tickUpper‚Äã‚Ä¢ Readonly tickUpper: numberDefined in‚Äãentities/position.ts:25Accessors‚Äãamount0‚Äã‚Ä¢ get amount0(): CurrencyAmount<Token>Returns the amount of token0 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:68amount1‚Äã‚Ä¢ get amount1(): CurrencyAmount<Token>Returns the amount of token1 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:100mintAmounts‚Äã‚Ä¢ get mintAmounts(): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at the current price for the poolReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>Defined in‚Äãentities/position.ts:258token0PriceLower‚Äã‚Ä¢ get token0PriceLower(): Price<Token, Token>Returns the price of token0 at the lower tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:54token0PriceUpper‚Äã‚Ä¢ get token0PriceUpper(): Price<Token, Token>Returns the price of token0 at the upper tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:61Methods‚ÄãburnAmountsWithSlippage‚Äã‚ñ∏ burnAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercenttolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:213mintAmountsWithSlippage‚Äã‚ñ∏ mintAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to safely mint the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentTolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:157ratiosAfterSlippage‚Äã‚ñ∏ Private ratiosAfterSlippage(slippageTolerance): ObjectReturns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentageParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe amount by which the price can 'slip' before the transaction will revertReturns‚ÄãObjectThe sqrt ratios after slippageNameTypesqrtRatioX96LowerdefaultsqrtRatioX96UpperdefaultDefined in‚Äãentities/position.ts:134fromAmount0‚Äã‚ñ∏ Static fromAmount0(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited amount of token1Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:354fromAmount1‚Äã‚ñ∏ Static fromAmount1(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited amount of token0Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumberReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:378fromAmounts‚Äã‚ñ∏ Static fromAmounts(__namedParameters): PositionComputes the maximum amount of liquidity received for a given amount of token0, token1, and the prices at the tick boundaries.Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe amount of liquidity for the positionDefined in‚Äãentities/position.ts:312Helpful?PreviousPoolNextPositionLibraryTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessorsamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethodsburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
320,p.org sdk core reference classes Token#equals,"p.org sdk core reference classes Token#equals.    Token | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesTokenHelpful?On this pageToken@uniswap/sdk-core / Exports / TokenClass: TokenRepresents an ERC20 token with a unique address and some metadata.Hierarchy‚ÄãBaseCurrency‚Ü≥ TokenTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãaddresschainIddecimalsisNativeisTokennamesymbolAccessors‚ÄãwrappedMethods‚ÄãequalssortsBeforeConstructors‚Äãconstructor‚Äã‚Ä¢ new Token(chainId, address, decimals, symbol?, name?, bypassChecksum?)Parameters‚ÄãNameTypeDescriptionchainIdnumberBaseCurrency#chainIdaddressstringThe contract address on the chain on which this token livesdecimalsnumberBaseCurrency#decimalssymbol?stringBaseCurrency#symbolname?stringBaseCurrency#namebypassChecksum?booleanIf true it only checks for length === 42, startsWith 0x and contains only hex charactersOverrides‚ÄãBaseCurrency.constructorDefined in‚Äãentities/token.ts:27Properties‚Äãaddress‚Äã‚Ä¢ Readonly address: stringThe contract address on the chain on which this token livesDefined in‚Äãentities/token.ts:16chainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãBaseCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãBaseCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: falseOverrides‚ÄãBaseCurrency.isNativeDefined in‚Äãentities/token.ts:10isToken‚Äã‚Ä¢ Readonly isToken: trueOverrides‚ÄãBaseCurrency.isTokenDefined in‚Äãentities/token.ts:11name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãBaseCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãBaseCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29Accessors‚Äãwrapped‚Äã‚Ä¢ get wrapped(): TokenReturn this token, which does not need to be wrappedReturns‚ÄãTokenOverrides‚ÄãBaseCurrency.wrappedDefined in‚Äãentities/token.ts:66Methods‚Äãequals‚Äã‚ñ∏ equals(other): booleanReturns true if the two tokens are equivalent, i.e. have the same chainId and address.Parameters‚ÄãNameTypeDescriptionotherCurrencyother token to compareReturns‚ÄãbooleanOverrides‚ÄãBaseCurrency.equalsDefined in‚Äãentities/token.ts:47sortsBefore‚Äã‚ñ∏ sortsBefore(other): booleanReturns true if the address of this token sorts before the address of the other tokenThrowsif the tokens have the same addressThrowsif the tokens are on different chainsParameters‚ÄãNameTypeDescriptionotherTokenother token to compareReturns‚ÄãbooleanDefined in‚Äãentities/token.ts:57Helpful?PreviousPriceNextRoundingHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesaddresschainIddecimalsisNativeisTokennamesymbolAccessorswrappedMethodsequalssortsBeforeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
321,p.org contracts v2 reference smart contracts library#quote,"p.org contracts v2 reference smart contracts library#quote.    Library | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsLibraryHelpful?On this pageLibraryCode‚ÄãUniswapV2Library.solInternal FunctionssortTokens‚Äãfunction sortTokens(address tokenA, address tokenB) internal pure returns (address token0, address token1);CopySorts token addresses.pairFor‚Äãfunction pairFor(address factory, address tokenA, address tokenB) internal pure returns (address pair);CopyCalculates the address for a pair without making any external calls via the v2 SDK.getReserves‚Äãfunction getReserves(address factory, address tokenA, address tokenB) internal view returns (uint reserveA, uint reserveB);CopyCalls getReserves on the pair for the passed tokens, and returns the results sorted in the order that the parameters were passed in.quote‚Äãfunction quote(uint amountA, uint reserveA, uint reserveB) internal pure returns (uint amountB);CopyGiven some asset amount and reserves, returns an amount of the other asset representing equivalent value.Useful for calculating optimal token amounts before calling mint.getAmountOut‚Äãfunction getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) internal pure returns (uint amountOut);CopyGiven an input asset amount, returns the maximum output amount of the other asset (accounting for fees) given reserves.Used in getAmountsOut.getAmountIn‚Äãfunction getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) internal pure returns (uint amountIn);CopyReturns the minimum input asset amount required to buy the given output asset amount (accounting for fees) given reserves.Used in getAmountsIn.getAmountsOut‚Äãfunction getAmountsOut(uint amountIn, address[] memory path) internal view returns (uint[] memory amounts);CopyGiven an input asset amount and an array of token addresses, calculates all subsequent maximum output token amounts by calling getReserves for each pair of token addresses in the path in turn, and using these to call getAmountOut.Useful for calculating optimal token amounts before calling swap.getAmountsIn‚Äãfunction getAmountsIn(address factory, uint amountOut, address[] memory path) internal view returns (uint[] memory amounts);CopyGiven an output asset amount and an array of token addresses, calculates all preceding minimum input token amounts by calling getReserves for each pair of token addresses in the path in turn, and using these to call getAmountIn.Useful for calculating optimal token amounts before calling swap.Edit this pageHelpful?PreviousPair (ERC-20)NextRouter01CodesortTokenspairForgetReservesquotegetAmountOutgetAmountIngetAmountsOutgetAmountsInDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
322,p.org sdk v3 reference classes Tick#liquiditynet,p.org sdk v3 reference classes Tick#liquiditynet.    Tick | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickHelpful?On this pageTick@uniswap/v3-sdk / Exports / TickClass: TickTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãindexliquidityGrossliquidityNetConstructors‚Äãconstructor‚Äã‚Ä¢ new Tick(__namedParameters)Parameters‚ÄãNameType__namedParametersTickConstructorArgsDefined in‚Äãentities/tick.ts:17Properties‚Äãindex‚Äã‚Ä¢ Readonly index: numberDefined in‚Äãentities/tick.ts:13liquidityGross‚Äã‚Ä¢ Readonly liquidityGross: defaultDefined in‚Äãentities/tick.ts:14liquidityNet‚Äã‚Ä¢ Readonly liquidityNet: defaultDefined in‚Äãentities/tick.ts:15Helpful?PreviousSwapRouterNextTickLibraryTable of contentsConstructorsPropertiesConstructorsconstructorPropertiesindexliquidityGrossliquidityNetDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
323,p.org sdk core reference classes NativeCurrency#wrapped,"p.org sdk core reference classes NativeCurrency#wrapped.    NativeCurrency | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesNativeCurrencyHelpful?On this pageNativeCurrency@uniswap/sdk-core / Exports / NativeCurrencyClass: NativeCurrencyRepresents the native currency of the chain on which it resides, e.g.Hierarchy‚ÄãBaseCurrency‚Ü≥ NativeCurrency‚Ü≥‚Ü≥ EtherTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãchainIddecimalsisNativeisTokennamesymbolAccessors‚ÄãwrappedMethods‚ÄãequalsConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new NativeCurrency(chainId, decimals, symbol?, name?)Constructs an instance of the base class BaseCurrency.Parameters‚ÄãNameTypeDescriptionchainIdnumberthe chain ID on which this currency residesdecimalsnumberdecimals of the currencysymbol?stringsymbol of the currencyname?stringof the currencyInherited from‚ÄãBaseCurrency.constructorDefined in‚Äãentities/baseCurrency.ts:42Properties‚ÄãchainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãBaseCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãBaseCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: trueOverrides‚ÄãBaseCurrency.isNativeDefined in‚Äãentities/nativeCurrency.ts:7isToken‚Äã‚Ä¢ Readonly isToken: falseOverrides‚ÄãBaseCurrency.isTokenDefined in‚Äãentities/nativeCurrency.ts:8name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãBaseCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãBaseCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29Accessors‚Äãwrapped‚Äã‚Ä¢ Abstract get wrapped(): TokenReturn the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to be used in UniswapReturns‚ÄãTokenInherited from‚ÄãBaseCurrency.wrappedDefined in‚Äãentities/baseCurrency.ts:62Methods‚Äãequals‚Äã‚ñ∏ Abstract equals(other): booleanReturns whether this currency is functionally equivalent to the other currencyParameters‚ÄãNameTypeDescriptionotherCurrencythe other currencyReturns‚ÄãbooleanInherited from‚ÄãBaseCurrency.equalsDefined in‚Äãentities/baseCurrency.ts:56Helpful?PreviousFractionNextPercentHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertieschainIddecimalsisNativeisTokennamesymbolAccessorswrappedMethodsequalsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
324,p.org sdk core reference classes Price#quotient,"p.org sdk core reference classes Price#quotient.    Price | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPriceHelpful?On this pagePrice@uniswap/sdk-core / Exports / PriceClass: Price<TBase, TQuote>Type parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyHierarchy‚ÄãFraction‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessors‚ÄãadjustedForDecimalsasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Price<TBase, TQuote>(...args)Construct a price, either with the base and quote currency amount, or theType parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyParameters‚ÄãNameType...args[TBase, TQuote, BigintIsh, BigintIsh] | [{ baseAmount: CurrencyAmount<TBase> ; quoteAmount: CurrencyAmount<TQuote> }]Overrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/price.ts:18Properties‚ÄãbaseCurrency‚Äã‚Ä¢ Readonly baseCurrency: TBaseDefined in‚Äãentities/fractions/price.ts:10denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25quoteCurrency‚Äã‚Ä¢ Readonly quoteCurrency: TQuoteDefined in‚Äãentities/fractions/price.ts:11scalar‚Äã‚Ä¢ Readonly scalar: FractionDefined in‚Äãentities/fractions/price.ts:12Accessors‚ÄãadjustedForDecimals‚Äã‚Ä¢ Private get adjustedForDecimals(): FractionGet the value scaled by decimals for formattingReturns‚ÄãFractionDefined in‚Äãentities/fractions/price.ts:77asFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.addDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.divideDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): Price<TQuote, TBase>Flip the price, switching the base and quote currencyReturns‚ÄãPrice<TQuote, TBase>Overrides‚ÄãFraction.invertDefined in‚Äãentities/fractions/price.ts:49lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply<TOtherQuote>(other): Price<TBase, TOtherQuote>Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currencyType parameters‚ÄãNameTypeTOtherQuoteextends CurrencyParameters‚ÄãNameTypeDescriptionotherPrice<TQuote, TOtherQuote>the other priceReturns‚ÄãPrice<TBase, TOtherQuote>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/price.ts:57quote‚Äã‚ñ∏ quote(currencyAmount): CurrencyAmount<TQuote>Return the amount of quote currency corresponding to a given amount of the base currencyParameters‚ÄãNameTypeDescriptioncurrencyAmountCurrencyAmount<TBase>the amount of base currency to quote against the priceReturns‚ÄãCurrencyAmount<TQuote>Defined in‚Äãentities/fractions/price.ts:67subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.subtractDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber4format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/price.ts:85toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/price.ts:81Helpful?PreviousPercentNextTokenType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessorsadjustedForDecimalsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
325,p.org sdk v3 reference modules.md#mintoptions,p.org sdk v3 reference modules.md#mintoptions. 
326,p.org sdk core reference classes Percent#denominator,"p.org sdk core reference classes Percent#denominator.    Percent | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPercentHelpful?On this pagePercent@uniswap/sdk-core / Exports / PercentClass: PercentHierarchy‚ÄãFraction‚Ü≥ PercentTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatorisPercentnumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Percent(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshInherited from‚ÄãFraction.constructorDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26isPercent‚Äã‚Ä¢ Readonly isPercent: trueThis boolean prevents a fraction from being interpreted as a PercentDefined in‚Äãentities/fractions/percent.ts:19numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.addDefined in‚Äãentities/fractions/percent.ts:21divide‚Äã‚ñ∏ divide(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/percent.ts:33equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/percent.ts:29subtract‚Äã‚ñ∏ subtract(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/percent.ts:25toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber2format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/percent.ts:41toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber5format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/percent.ts:37Helpful?PreviousNativeCurrencyNextPriceHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatorisPercentnumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
327,p.org contracts v3 reference periphery libraries ChainId,p.org contracts v3 reference periphery libraries ChainId.    ChainId | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesBase64BytesLibCallbackValidationChainIdHexStringsLiquidityAmountsNFTDescriptorNFTSVGOracleLibraryPathPoolAddressPoolTicksCounterPositionKeyTokenRatioSortOrderTransferHelperWeightedOracleLibraryStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryLibrariesChainIdHelpful?On this pageChainIdFunctions‚Äãget‚Äã function get( ) internal returns (uint256 chainId)CopyGets the current chain IDReturn Values:‚ÄãNameTypeDescriptionchainIduint256The current chain IDEdit this pageHelpful?PreviousCallbackValidationNextHexStringsFunctionsgetDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
328,p.org sdk v3 reference classes Staker# encodeincentivekey,"p.org sdk v3 reference classes Staker# encodeincentivekey.    Staker | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesStakerHelpful?On this pageStaker@uniswap/v3-sdk / Exports / StakerClass: StakerTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINCENTIVE_KEY_ABIINTERFACEMethods‚Äã_encodeIncentiveKeycollectRewardsencodeClaimencodeDepositwithdrawTokenConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new Staker()Defined in‚Äãstaker.ts:72Properties‚ÄãINCENTIVE_KEY_ABI‚Äã‚ñ™ Static Private INCENTIVE_KEY_ABI: string = 'tuple(address rewardToken, address pool, uint256 startTime, uint256 endTime, address refundee)'Defined in‚Äãstaker.ts:73INTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚Äãstaker.ts:70Methods‚Äã_encodeIncentiveKey‚Äã‚ñ∏ Static Private _encodeIncentiveKey(incentiveKey): ObjectParameters‚ÄãNameTypeDescriptionincentiveKeyIncentiveKeyAn IncentiveKey which represents a unique staking program.Returns‚ÄãObjectAn encoded IncentiveKey to be read by ethersDefined in‚Äãstaker.ts:194collectRewards‚Äã‚ñ∏ Static collectRewards(incentiveKeys, options): MethodParametersNote: A tokenId can be staked in many programs but to claim rewards and continue the program you must unstake, claim, and then restake.Parameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]An IncentiveKey or array of IncentiveKeys that tokenId is staked in. Input an array of IncentiveKeys to claim rewards for each program.optionsClaimOptionsClaimOptions to specify tokenId, recipient, and amount wanting to collect. Note that you can only specify one amount and one recipient across the various programs if you are collecting from multiple programs at once.Returns‚ÄãMethodParametersDefined in‚Äãstaker.ts:107encodeClaim‚Äã‚ñ∏ Static Private encodeClaim(incentiveKey, options): string[]To claim rewards, must unstake and then claim.Parameters‚ÄãNameTypeDescriptionincentiveKeyIncentiveKeyThe unique identifier of a staking program.optionsClaimOptionsOptions for producing the calldata to claim. Can't claim unless you unstake.Returns‚Äãstring[]The calldatas for 'unstakeToken' and 'claimReward'.Defined in‚Äãstaker.ts:82encodeDeposit‚Äã‚ñ∏ Static encodeDeposit(incentiveKeys): stringParameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]A single IncentiveKey or array of IncentiveKeys to be encoded and used in the data parameter in safeTransferFromReturns‚ÄãstringAn IncentiveKey as a stringDefined in‚Äãstaker.ts:173withdrawToken‚Äã‚ñ∏ Static withdrawToken(incentiveKeys, withdrawOptions): MethodParametersParameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]A list of incentiveKeys to unstake from. Should include all incentiveKeys (unique staking programs) that options.tokenId is staked in.withdrawOptionsFullWithdrawOptionsOptions for producing claim calldata and withdraw calldata. Can't withdraw without unstaking all programs for tokenId.Returns‚ÄãMethodParametersCalldata for unstaking, claiming, and withdrawing.Defined in‚Äãstaker.ts:136Helpful?PreviousSqrtPriceMathNextSwapMathTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINCENTIVE_KEY_ABIINTERFACEMethods_encodeIncentiveKeycollectRewardsencodeClaimencodeDepositwithdrawTokenDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
329,p.org sdk v3 reference modules.md#ticktoprice,p.org sdk v3 reference modules.md#ticktoprice. 
330,p.org sdk v3 reference classes TickMath#min sqrt ratio,"p.org sdk v3 reference classes TickMath#min sqrt ratio.    TickMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickMathHelpful?On this pageTickMath@uniswap/v3-sdk / Exports / TickMathClass: TickMathTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãMAX_SQRT_RATIOMAX_TICKMIN_SQRT_RATIOMIN_TICKMethods‚ÄãgetSqrtRatioAtTickgetTickAtSqrtRatioConstructors‚Äãconstructor‚Äã‚Ä¢ Private new TickMath()Cannot be constructed.Defined in‚Äãutils/tickMath.ts:17Properties‚ÄãMAX_SQRT_RATIO‚Äã‚ñ™ Static MAX_SQRT_RATIO: defaultThe sqrt ratio corresponding to the maximum tick that could be used on any pool.Defined in‚Äãutils/tickMath.ts:35MAX_TICK‚Äã‚ñ™ Static MAX_TICK: number = -TickMath.MIN_TICKThe maximum tick that can be used on any pool.Defined in‚Äãutils/tickMath.ts:26MIN_SQRT_RATIO‚Äã‚ñ™ Static MIN_SQRT_RATIO: defaultThe sqrt ratio corresponding to the minimum tick that could be used on any pool.Defined in‚Äãutils/tickMath.ts:31MIN_TICK‚Äã‚ñ™ Static MIN_TICK: number = -887272The minimum tick that can be used on any pool.Defined in‚Äãutils/tickMath.ts:22Methods‚ÄãgetSqrtRatioAtTick‚Äã‚ñ∏ Static getSqrtRatioAtTick(tick): defaultReturns the sqrt ratio as a Q64.96 for the given tick. The sqrt ratio is computed as sqrt(1.0001)^tickParameters‚ÄãNameTypeDescriptionticknumberthe tick for which to compute the sqrt ratioReturns‚ÄãdefaultDefined in‚Äãutils/tickMath.ts:41getTickAtSqrtRatio‚Äã‚ñ∏ Static getTickAtSqrtRatio(sqrtRatioX96): numberReturns the tick corresponding to a given sqrt ratio, s.t. #getSqrtRatioAtTick(tick) <= sqrtRatioX96 and #getSqrtRatioAtTick(tick + 1) > sqrtRatioX96Parameters‚ÄãNameTypeDescriptionsqrtRatioX96defaultthe sqrt ratio as a Q64.96 for which to compute the tickReturns‚ÄãnumberDefined in‚Äãutils/tickMath.ts:82Helpful?PreviousTickListDataProviderNextTradeTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesMAX_SQRT_RATIOMAX_TICKMIN_SQRT_RATIOMIN_TICKMethodsgetSqrtRatioAtTickgetTickAtSqrtRatioDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
331,p.org sdk v3 reference classes SwapMath#computeswapstep,"p.org sdk v3 reference classes SwapMath#computeswapstep.    SwapMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesSwapMathHelpful?On this pageSwapMath@uniswap/v3-sdk / Exports / SwapMathClass: SwapMathTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãcomputeSwapStepConstructors‚Äãconstructor‚Äã‚Ä¢ Private new SwapMath()Cannot be constructed.Defined in‚Äãutils/swapMath.ts:13Methods‚ÄãcomputeSwapStep‚Äã‚ñ∏ Static computeSwapStep(sqrtRatioCurrentX96, sqrtRatioTargetX96, liquidity, amountRemaining, feePips): [default, default, default, default]Parameters‚ÄãNameTypesqrtRatioCurrentX96defaultsqrtRatioTargetX96defaultliquiditydefaultamountRemainingdefaultfeePipsFeeAmountReturns‚Äã[default, default, default, default]Defined in‚Äãutils/swapMath.ts:15Helpful?PreviousStakerNextSwapQuoterTable of contentsConstructorsMethodsConstructorsconstructorMethodscomputeSwapStepDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
332,p.org sdk core reference enums SupportedChainId#polygon,p.org sdk core reference enums SupportedChainId#polygon.    SupportedChainId | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesenumsRoundingSupportedChainIdTradeTypeV2 SDKV1 SDKüè†Core SDKTechnical ReferenceenumsSupportedChainIdHelpful?On this pageSupportedChainId@uniswap/sdk-core / Exports / SupportedChainIdEnumeration: SupportedChainIdTable of contents‚ÄãEnumeration Members‚ÄãARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENEnumeration Members‚ÄãARBITRUM_ONE‚Äã‚Ä¢ ARBITRUM_ONE = 42161Defined in‚Äãconstants.ts:10ARBITRUM_RINKEBY‚Äã‚Ä¢ ARBITRUM_RINKEBY = 421611Defined in‚Äãconstants.ts:11CELO‚Äã‚Ä¢ CELO = 42220Defined in‚Äãconstants.ts:19CELO_ALFAJORES‚Äã‚Ä¢ CELO_ALFAJORES = 44787Defined in‚Äãconstants.ts:20GOERLI‚Äã‚Ä¢ GOERLI = 5Defined in‚Äãconstants.ts:7KOVAN‚Äã‚Ä¢ KOVAN = 42Defined in‚Äãconstants.ts:8MAINNET‚Äã‚Ä¢ MAINNET = 1Defined in‚Äãconstants.ts:4OPTIMISM‚Äã‚Ä¢ OPTIMISM = 10Defined in‚Äãconstants.ts:13OPTIMISM_GOERLI‚Äã‚Ä¢ OPTIMISM_GOERLI = 420Defined in‚Äãconstants.ts:14POLYGON‚Äã‚Ä¢ POLYGON = 137Defined in‚Äãconstants.ts:16POLYGON_MUMBAI‚Äã‚Ä¢ POLYGON_MUMBAI = 80001Defined in‚Äãconstants.ts:17RINKEBY‚Äã‚Ä¢ RINKEBY = 4Defined in‚Äãconstants.ts:6ROPSTEN‚Äã‚Ä¢ ROPSTEN = 3Defined in‚Äãconstants.ts:5Helpful?PreviousRoundingNextTradeTypeTable of contentsEnumeration MembersEnumeration MembersARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
333,p.org sdk core reference classes Price#scalar,"p.org sdk core reference classes Price#scalar.    Price | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPriceHelpful?On this pagePrice@uniswap/sdk-core / Exports / PriceClass: Price<TBase, TQuote>Type parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyHierarchy‚ÄãFraction‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessors‚ÄãadjustedForDecimalsasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Price<TBase, TQuote>(...args)Construct a price, either with the base and quote currency amount, or theType parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyParameters‚ÄãNameType...args[TBase, TQuote, BigintIsh, BigintIsh] | [{ baseAmount: CurrencyAmount<TBase> ; quoteAmount: CurrencyAmount<TQuote> }]Overrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/price.ts:18Properties‚ÄãbaseCurrency‚Äã‚Ä¢ Readonly baseCurrency: TBaseDefined in‚Äãentities/fractions/price.ts:10denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25quoteCurrency‚Äã‚Ä¢ Readonly quoteCurrency: TQuoteDefined in‚Äãentities/fractions/price.ts:11scalar‚Äã‚Ä¢ Readonly scalar: FractionDefined in‚Äãentities/fractions/price.ts:12Accessors‚ÄãadjustedForDecimals‚Äã‚Ä¢ Private get adjustedForDecimals(): FractionGet the value scaled by decimals for formattingReturns‚ÄãFractionDefined in‚Äãentities/fractions/price.ts:77asFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.addDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.divideDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): Price<TQuote, TBase>Flip the price, switching the base and quote currencyReturns‚ÄãPrice<TQuote, TBase>Overrides‚ÄãFraction.invertDefined in‚Äãentities/fractions/price.ts:49lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply<TOtherQuote>(other): Price<TBase, TOtherQuote>Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currencyType parameters‚ÄãNameTypeTOtherQuoteextends CurrencyParameters‚ÄãNameTypeDescriptionotherPrice<TQuote, TOtherQuote>the other priceReturns‚ÄãPrice<TBase, TOtherQuote>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/price.ts:57quote‚Äã‚ñ∏ quote(currencyAmount): CurrencyAmount<TQuote>Return the amount of quote currency corresponding to a given amount of the base currencyParameters‚ÄãNameTypeDescriptioncurrencyAmountCurrencyAmount<TBase>the amount of base currency to quote against the priceReturns‚ÄãCurrencyAmount<TQuote>Defined in‚Äãentities/fractions/price.ts:67subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.subtractDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber4format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/price.ts:85toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/price.ts:81Helpful?PreviousPercentNextTokenType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessorsadjustedForDecimalsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
334,p.org sdk v3 reference interfaces SwapOptions#recipient,"p.org sdk v3 reference interfaces SwapOptions#recipient.    SwapOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesSwapOptionsHelpful?On this pageSwapOptions@uniswap/v3-sdk / Exports / SwapOptionsInterface: SwapOptionsOptions for producing the arguments to send calls to the router.Table of contents‚ÄãProperties‚ÄãdeadlinefeeinputTokenPermitrecipientslippageTolerancesqrtPriceLimitX96Properties‚Äãdeadline‚Äã‚Ä¢ deadline: BigintIshWhen the transaction expires, in epoch seconds.Defined in‚ÄãswapRouter.ts:30fee‚Äã‚Ä¢ Optional fee: FeeOptionsOptional information for taking a fee on output.Defined in‚ÄãswapRouter.ts:45inputTokenPermit‚Äã‚Ä¢ Optional inputTokenPermit: PermitOptionsThe optional permit parameters for spending the input.Defined in‚ÄãswapRouter.ts:35recipient‚Äã‚Ä¢ recipient: stringThe account that should receive the output.Defined in‚ÄãswapRouter.ts:25slippageTolerance‚Äã‚Ä¢ slippageTolerance: PercentHow much the execution price is allowed to move unfavorably from the trade execution price.Defined in‚ÄãswapRouter.ts:20sqrtPriceLimitX96‚Äã‚Ä¢ Optional sqrtPriceLimitX96: BigintIshThe optional price limit for the trade.Defined in‚ÄãswapRouter.ts:40Helpful?PreviousStandardPermitArgumentsNextTickConstructorArgsTable of contentsPropertiesPropertiesdeadlinefeeinputTokenPermitrecipientslippageTolerancesqrtPriceLimitX96DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
335,p.org sdk core reference classes Token#constructor,"p.org sdk core reference classes Token#constructor.    Token | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesTokenHelpful?On this pageToken@uniswap/sdk-core / Exports / TokenClass: TokenRepresents an ERC20 token with a unique address and some metadata.Hierarchy‚ÄãBaseCurrency‚Ü≥ TokenTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãaddresschainIddecimalsisNativeisTokennamesymbolAccessors‚ÄãwrappedMethods‚ÄãequalssortsBeforeConstructors‚Äãconstructor‚Äã‚Ä¢ new Token(chainId, address, decimals, symbol?, name?, bypassChecksum?)Parameters‚ÄãNameTypeDescriptionchainIdnumberBaseCurrency#chainIdaddressstringThe contract address on the chain on which this token livesdecimalsnumberBaseCurrency#decimalssymbol?stringBaseCurrency#symbolname?stringBaseCurrency#namebypassChecksum?booleanIf true it only checks for length === 42, startsWith 0x and contains only hex charactersOverrides‚ÄãBaseCurrency.constructorDefined in‚Äãentities/token.ts:27Properties‚Äãaddress‚Äã‚Ä¢ Readonly address: stringThe contract address on the chain on which this token livesDefined in‚Äãentities/token.ts:16chainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãBaseCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãBaseCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: falseOverrides‚ÄãBaseCurrency.isNativeDefined in‚Äãentities/token.ts:10isToken‚Äã‚Ä¢ Readonly isToken: trueOverrides‚ÄãBaseCurrency.isTokenDefined in‚Äãentities/token.ts:11name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãBaseCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãBaseCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29Accessors‚Äãwrapped‚Äã‚Ä¢ get wrapped(): TokenReturn this token, which does not need to be wrappedReturns‚ÄãTokenOverrides‚ÄãBaseCurrency.wrappedDefined in‚Äãentities/token.ts:66Methods‚Äãequals‚Äã‚ñ∏ equals(other): booleanReturns true if the two tokens are equivalent, i.e. have the same chainId and address.Parameters‚ÄãNameTypeDescriptionotherCurrencyother token to compareReturns‚ÄãbooleanOverrides‚ÄãBaseCurrency.equalsDefined in‚Äãentities/token.ts:47sortsBefore‚Äã‚ñ∏ sortsBefore(other): booleanReturns true if the address of this token sorts before the address of the other tokenThrowsif the tokens have the same addressThrowsif the tokens are on different chainsParameters‚ÄãNameTypeDescriptionotherTokenother token to compareReturns‚ÄãbooleanDefined in‚Äãentities/token.ts:57Helpful?PreviousPriceNextRoundingHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesaddresschainIddecimalsisNativeisTokennamesymbolAccessorswrappedMethodsequalssortsBeforeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
336,p.org contracts v3 reference periphery base LiquidityManagement,"p.org contracts v3 reference periphery base LiquidityManagement.    LiquidityManagement | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseBlockTimestampERC721PermitLiquidityManagementMulticallPeripheryImmutableStatePeripheryPaymentsPeripheryPaymentsWithFeePoolInitializerSelfPermitInterfacesLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryBaseLiquidityManagementHelpful?On this pageLiquidityManagementInternal functions for safely managing liquidity in Uniswap V3Parameter Structs‚ÄãAddLiquidityParams‚Äã struct AddLiquidityParams {  address token0;  address token1;  uint24 fee;  address recipient;  int24 tickLower;  int24 tickUpper;  uint256 amount0Desired;  uint256 amount1Desired;  uint256 amount0Min;  uint256 amount1Min; }CopyFunctions‚ÄãuniswapV3MintCallback‚Äã function uniswapV3MintCallback( uint256 amount0Owed, uint256 amount1Owed, bytes data ) externalCopyCalled to msg.sender after minting liquidity to a position from IUniswapV3Pool#mint.In the implementation you must pay the pool tokens owed for the minted liquidity. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.Parameters:‚ÄãNameTypeDescriptionamount0Oweduint256The amount of token0 due to the pool for the minted liquidityamount1Oweduint256The amount of token1 due to the pool for the minted liquiditydatabytesAny data passed through by the caller via the IUniswapV3PoolActions#mint calladdLiquidity‚Äã function addLiquidity( AddLiquidityParams memory params ) internal returns (uint128 liquidity, uint256 amount0, uint256 amount1, contract IUniswapV3Pool pool)CopyAdd liquidity to an initialized poolEdit this pageHelpful?PreviousERC721PermitNextMulticallParameter StructsAddLiquidityParamsFunctionsuniswapV3MintCallbackaddLiquidityDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
337,p.org sdk v3 reference interfaces TickDataProvider,"p.org sdk v3 reference interfaces TickDataProvider.    TickDataProvider | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesTickDataProviderHelpful?On this pageTickDataProvider@uniswap/v3-sdk / Exports / TickDataProviderInterface: TickDataProviderProvides information about ticksImplemented by‚ÄãNoTickDataProviderTickListDataProviderTable of contents‚ÄãMethods‚ÄãgetTicknextInitializedTickWithinOneWordMethods‚ÄãgetTick‚Äã‚ñ∏ getTick(tick): Promise<{ liquidityNet: BigintIsh }>Return information corresponding to a specific tickParameters‚ÄãNameTypeDescriptionticknumberthe tick to loadReturns‚ÄãPromise<{ liquidityNet: BigintIsh }>Defined in‚Äãentities/tickDataProvider.ts:11nextInitializedTickWithinOneWord‚Äã‚ñ∏ nextInitializedTickWithinOneWord(tick, lte, tickSpacing): Promise<[number, boolean]>Return the next tick that is initialized within a single wordParameters‚ÄãNameTypeDescriptionticknumberThe current tickltebooleanWhether the next tick should be lte the current ticktickSpacingnumberThe tick spacing of the poolReturns‚ÄãPromise<[number, boolean]>Defined in‚Äãentities/tickDataProvider.ts:19Helpful?PreviousTickConstructorArgsNextWithdrawOptionsImplemented byTable of contentsMethodsMethodsgetTicknextInitializedTickWithinOneWordDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
338,p.org sdk v3 reference classes SwapMath,"p.org sdk v3 reference classes SwapMath.    SwapMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesSwapMathHelpful?On this pageSwapMath@uniswap/v3-sdk / Exports / SwapMathClass: SwapMathTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãcomputeSwapStepConstructors‚Äãconstructor‚Äã‚Ä¢ Private new SwapMath()Cannot be constructed.Defined in‚Äãutils/swapMath.ts:13Methods‚ÄãcomputeSwapStep‚Äã‚ñ∏ Static computeSwapStep(sqrtRatioCurrentX96, sqrtRatioTargetX96, liquidity, amountRemaining, feePips): [default, default, default, default]Parameters‚ÄãNameTypesqrtRatioCurrentX96defaultsqrtRatioTargetX96defaultliquiditydefaultamountRemainingdefaultfeePipsFeeAmountReturns‚Äã[default, default, default, default]Defined in‚Äãutils/swapMath.ts:15Helpful?PreviousStakerNextSwapQuoterTable of contentsConstructorsMethodsConstructorsconstructorMethodscomputeSwapStepDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
339,p.org sdk v3 reference classes Pool#constructor,"p.org sdk v3 reference classes Pool#constructor.    Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPoolHelpful?On this pagePool@uniswap/v3-sdk / Exports / PoolClass: PoolRepresents a V3 poolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1Accessors‚ÄãchainIdtickSpacingtoken0Pricetoken1PriceMethods‚ÄãgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressConstructors‚Äãconstructor‚Äã‚Ä¢ new Pool(tokenA, tokenB, fee, sqrtRatioX96, liquidity, tickCurrent, ticks?)Construct a poolParameters‚ÄãNameTypeDefault valueDescriptiontokenATokenundefinedOne of the tokens in the pooltokenBTokenundefinedThe other token in the poolfeeFeeAmountundefinedThe fee in hundredths of a bips of the input amount of every swap that is collected by the poolsqrtRatioX96BigintIshundefinedThe sqrt of the current ratio of amounts of token1 to token0liquidityBigintIshundefinedThe current value of in range liquiditytickCurrentnumberundefinedThe current tick of the poolticksTickDataProvider | (Tick | TickConstructorArgs)[]NO_TICK_DATA_PROVIDER_DEFAULTThe current state of the pool ticks or a data provider that can return tick dataDefined in‚Äãentities/pool.ts:70Properties‚Äã_token0Price‚Äã‚Ä¢ Private Optional _token0Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:41_token1Price‚Äã‚Ä¢ Private Optional _token1Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:42fee‚Äã‚Ä¢ Readonly fee: FeeAmountDefined in‚Äãentities/pool.ts:35liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/pool.ts:37sqrtRatioX96‚Äã‚Ä¢ Readonly sqrtRatioX96: defaultDefined in‚Äãentities/pool.ts:36tickCurrent‚Äã‚Ä¢ Readonly tickCurrent: numberDefined in‚Äãentities/pool.ts:38tickDataProvider‚Äã‚Ä¢ Readonly tickDataProvider: TickDataProviderDefined in‚Äãentities/pool.ts:39token0‚Äã‚Ä¢ Readonly token0: TokenDefined in‚Äãentities/pool.ts:33token1‚Äã‚Ä¢ Readonly token1: TokenDefined in‚Äãentities/pool.ts:34Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns the chain ID of the tokens in the pool.Returns‚ÄãnumberDefined in‚Äãentities/pool.ts:149tickSpacing‚Äã‚Ä¢ get tickSpacing(): numberReturns‚ÄãnumberDefined in‚Äãentities/pool.ts:317token0Price‚Äã‚Ä¢ get token0Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:109token1Price‚Äã‚Ä¢ get token1Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:124Methods‚ÄãgetInputAmount‚Äã‚ñ∏ getInputAmount(outputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given a desired output amount of a token, return the computed input amount and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptionoutputAmountCurrencyAmount<Token>the output amount for which to quote the input amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The input amount and the pool with updated stateDefined in‚Äãentities/pool.ts:185getOutputAmount‚Äã‚ñ∏ getOutputAmount(inputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given an input amount of a token, return the computed output amount, and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptioninputAmountCurrencyAmount<Token>The input amount for which to quote the output amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limitReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The output amount and the pool with updated stateDefined in‚Äãentities/pool.ts:159involvesToken‚Äã‚ñ∏ involvesToken(token): booleanReturns true if the token is either token0 or token1Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to checkReturns‚ÄãbooleanTrue if token is either token0 or tokenDefined in‚Äãentities/pool.ts:102priceOf‚Äã‚ñ∏ priceOf(token): Price<Token, Token>Return the price of the given token in terms of the other token in the pool.Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to return price ofReturns‚ÄãPrice<Token, Token>The price of the given token, in terms of the other.Defined in‚Äãentities/pool.ts:141swap‚Äã‚ñ∏ Private swap(zeroForOne, amountSpecified, sqrtPriceLimitX96?): Promise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>Executes a swapParameters‚ÄãNameTypeDescriptionzeroForOnebooleanWhether the amount in is token0 or token1amountSpecifieddefaultThe amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>amountCalculatedsqrtRatioX96liquiditytickCurrentDefined in‚Äãentities/pool.ts:215getAddress‚Äã‚ñ∏ Static getAddress(tokenA, tokenB, fee, initCodeHashManualOverride?, factoryAddressOverride?): stringParameters‚ÄãNameTypetokenATokentokenBTokenfeeFeeAmountinitCodeHashManualOverride?stringfactoryAddressOverride?stringReturns‚ÄãstringDefined in‚Äãentities/pool.ts:44Helpful?PreviousPaymentsNextPositionTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1AccessorschainIdtickSpacingtoken0Pricetoken1PriceMethodsgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
340,p.org sdk swap widget guides examples#customizing theme,"p.org sdk swap widget guides examples#customizing theme.    Swap Widget Example Themes | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap WidgetOverviewGuidesGetting StartedExample ThemesTechnical Referenceweb3-reactCore SDKV2 SDKV1 SDKüè†Swap WidgetGuidesExample ThemesHelpful?On this pageSwap Widget Example ThemesThe Getting Started guide showed how to embed the swap widget and let your users trade tokens on the Uniswap Protocol without leaving your dApp.Below you‚Äôll find a few examples showing how you can customize the widget theme to match the look and feel of your dApp. All of them can be integrated using the following code snippet where you can set your theme:import { Theme, SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/dist/fonts.css'const theme: Theme = { // Check out the theme examples below}function App() { <div className=""Uniswap""> <SwapWidget theme={theme} /> </div>}CopyTheme Examples‚ÄãCopy any of the theme object below to start making your own custom appearance for the swap widget. You might also need the right CSS import for any custom fonts.const theme: Theme = { primary: '#1F4A05', secondary: '#5F7D52', interactive: '#CBD6BA', container: '#D9ECD9', module: '#E9F7DF', accent: '#8E8B78', outline: '#CADDC2', dialog: '#FFF', fontFamily: 'Nunito', borderRadius: 0.8,}Copyconst theme: Theme = { primary: '#000', secondary: '#666', interactive: '#0089EC', container: '#FFF', module: '#E7E7E7', accent: '#3D3B31', outline: '#343D3A', dialog: '#FFF', fontFamily: 'Verdana', borderRadius: 0.8,}Copyconst theme: Theme = { primary: '#FFF', secondary: '#A9A9A9', interactive: '#000', container: '#4E4E5A', module: '#222633', accent: '#71FF98', outline: '#CC1', dialog: '#000', fontFamily: 'Josefin Sans', borderRadius: 0.5,}Copyconst theme: Theme = { primary: '#000', secondary: '#A9A9A9', interactive: '#1E4D3C', container: '#98D747', module: '#FFF', accent: '#FD5B00', outline: '#1E4D3C', dialog: '#000', fontFamily: 'Inter', borderRadius: 0.2,}Copyconst theme: Theme = { primary: '#001D82', secondary: '#6677C1', interactive: '#005BAE', container: '#ABD6FE', module: '#FFF7FB', accent: '#FF7BC2', outline: '#ABD6FE', dialog: '#FFF', fontFamily: 'Arvo', borderRadius: 1,}Copyconst theme: Theme = { primary: '#000', secondary: '#666', interactive: '#AFAFAF', container: '#DADADA', module: '#FFF', accent: '#0018F4', outline: '#000', dialog: '#FFF', fontFamily: 'Comic Sans MS', borderRadius: 0.2,}CopyQuestions?Join the Discord channel to ask questions and get support from the Uniswap community.Helpful?PreviousGetting StartedNextAPI V2 ReferenceTheme ExamplesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
341,p.org sdk core reference classes Fraction#numerator,"p.org sdk core reference classes Fraction#numerator.    Fraction | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesFractionHelpful?On this pageFraction@uniswap/sdk-core / Exports / FractionClass: FractionHierarchy‚ÄãFraction‚Ü≥ CurrencyAmount‚Ü≥ Percent‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatornumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionConstructors‚Äãconstructor‚Äã‚Ä¢ new Fraction(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:107subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:138toSignificant‚Äã‚ñ∏ toSignificant(significantDigits, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:123tryParseFraction‚Äã‚ñ∏ Static Private tryParseFraction(fractionish): FractionParameters‚ÄãNameTypefractionishBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:33Helpful?PreviousEtherNextNativeCurrencyHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatornumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
342,p.org contracts v2 reference smart contracts library,"p.org contracts v2 reference smart contracts library.    Library | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsLibraryHelpful?On this pageLibraryCode‚ÄãUniswapV2Library.solInternal FunctionssortTokens‚Äãfunction sortTokens(address tokenA, address tokenB) internal pure returns (address token0, address token1);CopySorts token addresses.pairFor‚Äãfunction pairFor(address factory, address tokenA, address tokenB) internal pure returns (address pair);CopyCalculates the address for a pair without making any external calls via the v2 SDK.getReserves‚Äãfunction getReserves(address factory, address tokenA, address tokenB) internal view returns (uint reserveA, uint reserveB);CopyCalls getReserves on the pair for the passed tokens, and returns the results sorted in the order that the parameters were passed in.quote‚Äãfunction quote(uint amountA, uint reserveA, uint reserveB) internal pure returns (uint amountB);CopyGiven some asset amount and reserves, returns an amount of the other asset representing equivalent value.Useful for calculating optimal token amounts before calling mint.getAmountOut‚Äãfunction getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) internal pure returns (uint amountOut);CopyGiven an input asset amount, returns the maximum output amount of the other asset (accounting for fees) given reserves.Used in getAmountsOut.getAmountIn‚Äãfunction getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) internal pure returns (uint amountIn);CopyReturns the minimum input asset amount required to buy the given output asset amount (accounting for fees) given reserves.Used in getAmountsIn.getAmountsOut‚Äãfunction getAmountsOut(uint amountIn, address[] memory path) internal view returns (uint[] memory amounts);CopyGiven an input asset amount and an array of token addresses, calculates all subsequent maximum output token amounts by calling getReserves for each pair of token addresses in the path in turn, and using these to call getAmountOut.Useful for calculating optimal token amounts before calling swap.getAmountsIn‚Äãfunction getAmountsIn(address factory, uint amountOut, address[] memory path) internal view returns (uint[] memory amounts);CopyGiven an output asset amount and an array of token addresses, calculates all preceding minimum input token amounts by calling getReserves for each pair of token addresses in the path in turn, and using these to call getAmountIn.Useful for calculating optimal token amounts before calling swap.Edit this pageHelpful?PreviousPair (ERC-20)NextRouter01CodesortTokenspairForgetReservesquotegetAmountOutgetAmountIngetAmountsOutgetAmountsInDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
343,p.org sdk core reference classes Token#wrapped,"p.org sdk core reference classes Token#wrapped.    Token | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesTokenHelpful?On this pageToken@uniswap/sdk-core / Exports / TokenClass: TokenRepresents an ERC20 token with a unique address and some metadata.Hierarchy‚ÄãBaseCurrency‚Ü≥ TokenTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãaddresschainIddecimalsisNativeisTokennamesymbolAccessors‚ÄãwrappedMethods‚ÄãequalssortsBeforeConstructors‚Äãconstructor‚Äã‚Ä¢ new Token(chainId, address, decimals, symbol?, name?, bypassChecksum?)Parameters‚ÄãNameTypeDescriptionchainIdnumberBaseCurrency#chainIdaddressstringThe contract address on the chain on which this token livesdecimalsnumberBaseCurrency#decimalssymbol?stringBaseCurrency#symbolname?stringBaseCurrency#namebypassChecksum?booleanIf true it only checks for length === 42, startsWith 0x and contains only hex charactersOverrides‚ÄãBaseCurrency.constructorDefined in‚Äãentities/token.ts:27Properties‚Äãaddress‚Äã‚Ä¢ Readonly address: stringThe contract address on the chain on which this token livesDefined in‚Äãentities/token.ts:16chainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãBaseCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãBaseCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: falseOverrides‚ÄãBaseCurrency.isNativeDefined in‚Äãentities/token.ts:10isToken‚Äã‚Ä¢ Readonly isToken: trueOverrides‚ÄãBaseCurrency.isTokenDefined in‚Äãentities/token.ts:11name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãBaseCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãBaseCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29Accessors‚Äãwrapped‚Äã‚Ä¢ get wrapped(): TokenReturn this token, which does not need to be wrappedReturns‚ÄãTokenOverrides‚ÄãBaseCurrency.wrappedDefined in‚Äãentities/token.ts:66Methods‚Äãequals‚Äã‚ñ∏ equals(other): booleanReturns true if the two tokens are equivalent, i.e. have the same chainId and address.Parameters‚ÄãNameTypeDescriptionotherCurrencyother token to compareReturns‚ÄãbooleanOverrides‚ÄãBaseCurrency.equalsDefined in‚Äãentities/token.ts:47sortsBefore‚Äã‚ñ∏ sortsBefore(other): booleanReturns true if the address of this token sorts before the address of the other tokenThrowsif the tokens have the same addressThrowsif the tokens are on different chainsParameters‚ÄãNameTypeDescriptionotherTokenother token to compareReturns‚ÄãbooleanDefined in‚Äãentities/token.ts:57Helpful?PreviousPriceNextRoundingHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesaddresschainIddecimalsisNativeisTokennamesymbolAccessorswrappedMethodsequalssortsBeforeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
344,p.org sdk v1 reference constants,"p.org sdk v1 reference constants.    Constants | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKOverviewGuidesGetting StartedTechnical ReferenceDataComputationFormatOrchestrationTransactConstantsTypesüè†V1 SDKTechnical ReferenceConstantsHelpful?ConstantsBelow is an exhaustive list of all external constants used in the SDK.import BigNumber from 'bignumber.js'import ERC20 from './abis/ERC20.json'import FACTORY from './abis/FACTORY.json'import EXCHANGE from './abis/EXCHANGE.json'export const ETH = 'ETH'export enum SUPPORTED_CHAIN_ID { Mainnet = 1, Ropsten = 3, Rinkeby = 4, Kovan = 42,}export const FACTORY_ADDRESS: { [key: number]: string } = {}export const FACTORY_ABI: string = JSON.stringify(FACTORY)export const EXCHANGE_ABI: string = JSON.stringify(EXCHANGE)export enum TRADE_TYPE { ETH_TO_TOKEN = 'ETH_TO_TOKEN', TOKEN_TO_ETH = 'TOKEN_TO_ETH', TOKEN_TO_TOKEN = 'TOKEN_TO_TOKEN',}export enum TRADE_EXACT { INPUT = 'INPUT', OUTPUT = 'OUTPUT',}export enum TRADE_METHODS { ethToTokenSwapInput = 'ethToTokenSwapInput', ethToTokenTransferInput = 'ethToTokenTransferInput', ethToTokenSwapOutput = 'ethToTokenSwapOutput', ethToTokenTransferOutput = 'ethToTokenTransferOutput', tokenToEthSwapInput = 'tokenToEthSwapInput', tokenToEthTransferInput = 'tokenToEthTransferInput', tokenToEthSwapOutput = 'tokenToEthSwapOutput', tokenToEthTransferOutput = 'tokenToEthTransferOutput', tokenToTokenSwapInput = 'tokenToTokenSwapInput', tokenToTokenTransferInput = 'tokenToTokenTransferInput', tokenToTokenSwapOutput = 'tokenToTokenSwapOutput', tokenToTokenTransferOutput = 'tokenToTokenTransferOutput',}export const TRADE_METHOD_IDS: { [key: string]: string } = {}export enum FIXED_UNDERFLOW_BEHAVIOR { ZERO = 'ZERO', LESS_THAN = 'LESS_THAN', ONE_DIGIT = 'ONE_DIGIT',}CopyHelpful?PreviousTransactNextTypesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
345,p.org contracts v3 guides providing liquidity the full contract,"p.org contracts v3 guides providing liquidity the full contract.    The Full Contract | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquiditySet Up Your ContractMint a New PositionCollecting FeesDecrease LiquidityIncrease LiquidityThe Full ContractLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolGuidesProviding LiquidityThe Full ContractHelpful?The Full ContractBelow we have the complete functioning code example: a contract that can custody Uniswap V3 position NFT's and manipulate the positions and liquidity therein by collecting fees, increasing or decreasing liquidity, and minting new positions. View on github here.// SPDX-License-Identifier: GPL-2.0-or-laterpragma solidity =0.7.6;pragma abicoder v2;import '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol';import '@uniswap/v3-core/contracts/libraries/TickMath.sol';import '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol';import '../libraries/TransferHelper.sol';import '../interfaces/INonfungiblePositionManager.sol';import '../base/LiquidityManagement.sol';contract LiquidityExamples is IERC721Receiver { address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F; address public constant USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48; uint24 public constant poolFee = 3000; INonfungiblePositionManager public immutable nonfungiblePositionManager; /// @notice Represents the deposit of an NFT struct Deposit {  address owner;  uint128 liquidity;  address token0;  address token1; } /// @dev deposits[tokenId] => Deposit mapping(uint256 => Deposit) public deposits; constructor(  INonfungiblePositionManager _nonfungiblePositionManager ) {  nonfungiblePositionManager = _nonfungiblePositionManager; } // Implementing `onERC721Received` so this contract can receive custody of erc721 tokens function onERC721Received(  address operator,  address,  uint256 tokenId,  bytes calldata ) external override returns (bytes4) {  // get position information  _createDeposit(operator, tokenId);  return this.onERC721Received.selector; } function _createDeposit(address owner, uint256 tokenId) internal {  (, , address token0, address token1, , , , uint128 liquidity, , , , ) =   nonfungiblePositionManager.positions(tokenId);  // set the owner and data for position  // operator is msg.sender  deposits[tokenId] = Deposit({owner: owner, liquidity: liquidity, token0: token0, token1: token1}); } /// @notice Calls the mint function defined in periphery, mints the same amount of each token. /// For this example we are providing 1000 DAI and 1000 USDC in liquidity /// @return tokenId The id of the newly minted ERC721 /// @return liquidity The amount of liquidity for the position /// @return amount0 The amount of token0 /// @return amount1 The amount of token1 function mintNewPosition()  external  returns (   uint256 tokenId,   uint128 liquidity,   uint256 amount0,   uint256 amount1  ) {  // For this example, we will provide equal amounts of liquidity in both assets.  // Providing liquidity in both assets means liquidity will be earning fees and is considered in-range.  uint256 amount0ToMint = 1000;  uint256 amount1ToMint = 1000;  // transfer tokens to contract  TransferHelper.safeTransferFrom(DAI, msg.sender, address(this), amount0ToMint);  TransferHelper.safeTransferFrom(USDC, msg.sender, address(this), amount1ToMint);  // Approve the position manager  TransferHelper.safeApprove(DAI, address(nonfungiblePositionManager), amount0ToMint);  TransferHelper.safeApprove(USDC, address(nonfungiblePositionManager), amount1ToMint);  INonfungiblePositionManager.MintParams memory params =   INonfungiblePositionManager.MintParams({    token0: DAI,    token1: USDC,    fee: poolFee,    tickLower: TickMath.MIN_TICK,    tickUpper: TickMath.MAX_TICK,    amount0Desired: amount0ToMint,    amount1Desired: amount1ToMint,    amount0Min: 0,    amount1Min: 0,    recipient: address(this),    deadline: block.timestamp   });  // Note that the pool defined by DAI/USDC and fee tier 0.3% must already be created and initialized in order to mint  (tokenId, liquidity, amount0, amount1) = nonfungiblePositionManager.mint(params);  // Create a deposit  _createDeposit(msg.sender, tokenId);  // Remove allowance and refund in both assets.  if (amount0 < amount0ToMint) {   TransferHelper.safeApprove(DAI, address(nonfungiblePositionManager), 0);   uint256 refund0 = amount0ToMint - amount0;   TransferHelper.safeTransfer(DAI, msg.sender, refund0);  }  if (amount1 < amount1ToMint) {   TransferHelper.safeApprove(USDC, address(nonfungiblePositionManager), 0);   uint256 refund1 = amount1ToMint - amount1;   TransferHelper.safeTransfer(USDC, msg.sender, refund1);  } } /// @notice Collects the fees associated with provided liquidity /// @dev The contract must hold the erc721 token before it can collect fees /// @param tokenId The id of the erc721 token /// @return amount0 The amount of fees collected in token0 /// @return amount1 The amount of fees collected in token1 function collectAllFees(uint256 tokenId) external returns (uint256 amount0, uint256 amount1) {  // Caller must own the ERC721 position, meaning it must be a deposit  // set amount0Max and amount1Max to uint256.max to collect all fees  // alternatively can set recipient to msg.sender and avoid another transaction in `sendToOwner`  INonfungiblePositionManager.CollectParams memory params =   INonfungiblePositionManager.CollectParams({    tokenId: tokenId,    recipient: address(this),    amount0Max: type(uint128).max,    amount1Max: type(uint128).max   });  (amount0, amount1) = nonfungiblePositionManager.collect(params);  // send collected feed back to owner  _sendToOwner(tokenId, amount0, amount1); } /// @notice A function that decreases the current liquidity by half. An example to show how to call the `decreaseLiquidity` function defined in periphery. /// @param tokenId The id of the erc721 token /// @return amount0 The amount received back in token0 /// @return amount1 The amount returned back in token1 function decreaseLiquidityInHalf(uint256 tokenId) external returns (uint256 amount0, uint256 amount1) {  // caller must be the owner of the NFT  require(msg.sender == deposits[tokenId].owner, 'Not the owner');  // get liquidity data for tokenId  uint128 liquidity = deposits[tokenId].liquidity;  uint128 halfLiquidity = liquidity / 2;  // amount0Min and amount1Min are price slippage checks  // if the amount received after burning is not greater than these minimums, transaction will fail  INonfungiblePositionManager.DecreaseLiquidityParams memory params =   INonfungiblePositionManager.DecreaseLiquidityParams({    tokenId: tokenId,    liquidity: halfLiquidity,    amount0Min: 0,    amount1Min: 0,    deadline: block.timestamp   });  (amount0, amount1) = nonfungiblePositionManager.decreaseLiquidity(params);  //send liquidity back to owner  _sendToOwner(tokenId, amount0, amount1); } /// @notice Increases liquidity in the current range /// @dev Pool must be initialized already to add liquidity /// @param tokenId The id of the erc721 token /// @param amount0 The amount to add of token0 /// @param amount1 The amount to add of token1 function increaseLiquidityCurrentRange(  uint256 tokenId,  uint256 amountAdd0,  uint256 amountAdd1 )  external  returns (   uint128 liquidity,   uint256 amount0,   uint256 amount1  ) {  TransferHelper.safeTransferFrom(deposits[tokenId].token0, msg.sender, address(this), amountAdd0);  TransferHelper.safeTransferFrom(deposits[tokenId].token1, msg.sender, address(this), amountAdd1);  TransferHelper.safeApprove(deposits[tokenId].token0, address(nonfungiblePositionManager), amountAdd0);  TransferHelper.safeApprove(deposits[tokenId].token1, address(nonfungiblePositionManager), amountAdd1);  INonfungiblePositionManager.IncreaseLiquidityParams memory params = INonfungiblePositionManager.IncreaseLiquidityParams({   tokenId: tokenId,   amount0Desired: amountAdd0,   amount1Desired: amountAdd1,   amount0Min: 0,   amount1Min: 0,   deadline: block.timestamp  });  (liquidity, amount0, amount1) = nonfungiblePositionManager.increaseLiquidity(params); } /// @notice Transfers funds to owner of NFT /// @param tokenId The id of the erc721 /// @param amount0 The amount of token0 /// @param amount1 The amount of token1 function _sendToOwner(  uint256 tokenId,  uint256 amount0,  uint256 amount1 ) internal {  // get owner of contract  address owner = deposits[tokenId].owner;  address token0 = deposits[tokenId].token0;  address token1 = deposits[tokenId].token1;  // send collected fees to owner  TransferHelper.safeTransfer(token0, owner, amount0);  TransferHelper.safeTransfer(token1, owner, amount1); } /// @notice Transfers the NFT to the owner /// @param tokenId The id of the erc721 function retrieveNFT(uint256 tokenId) external {  // must be the owner of the NFT  require(msg.sender == deposits[tokenId].owner, 'Not the owner');  // transfer ownership to original owner  nonfungiblePositionManager.safeTransferFrom(address(this), msg.sender, tokenId);  //remove information related to tokenId  delete deposits[tokenId]; }}CopyEdit this pageHelpful?PreviousIncrease LiquidityNextOverviewDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
346,p.org concepts governance overview,"p.org concepts governance overview.    Overview | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchWhat Is Uniswap?The Uniswap ProtocolProtocol ConceptsGovernanceOverviewProcessBeginners Guide to VotingGlossaryAdversarial CircumstancesChangelogResearchResourcesGlossaryüè†GovernanceOverviewHelpful?On this pageOverviewCode‚ÄãgovernanceDocumentation‚ÄãFor reference material on the Uniswap Governance system please see Governance Reference.UNI Address‚ÄãUNI is deployed at 0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984 on the Ethereum mainnet, and the Ropsten, Rinkeby, G√∂rli, and Kovan testnets. It was built from commit ab22c08.ABI‚Äãimport Uni from '@uniswap/governance/build/Uni.json'Copyhttps://unpkg.com/@uniswap/governance@1.0.2/build/Uni.jsonTimelock‚ÄãTimelock is deployed at 0x1a9C8182C09F50C8318d769245beA52c32BE35BC on the Ethereum mainnet, and the Ropsten, Rinkeby, G√∂rli, and Kovan testnets. It was built from commit ab22c08.ABI‚Äãimport Timelock from '@uniswap/governance/build/Timelock.json'Copyhttps://unpkg.com/@uniswap/governance@1.0.2/build/Timelock.jsonGovernorAlpha (Deprecated)‚ÄãGovernorAlpha is deployed at 0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F on the Ethereum mainnet, and the Ropsten, Rinkeby, G√∂rli, and Kovan testnets. It was built from commit ab22c08.ABI‚ÄãThe GovernorAlpha ABI is viewable on Etherscan, as well as via an npm package.https://unpkg.com/@uniswap/governance@1.0.2/build/GovernorAlpha.jsonimport GovernorAlpha from '@uniswap/governance/build/GovernorAlpha.json'CopyGovernorAlpha v2 (Deprecated)‚ÄãGovernerAlpha v2 is deployed at 0xC4e172459f1E7939D522503B81AFAaC1014CE6F6 on the Ethereum mainnet.ABI‚ÄãThe GovernerAlpha v2 ABI is viewable on EtherscanGovernorBravo (Current)‚ÄãGovernorBravo is deployed at 0x408ED6354d4973f66138C91495F2f2FCbd8724C3 on the Ethereum mainnet.ABI‚ÄãThe Governor Bravo ABI can be found on Etherscan.Miscellaneous Addresses‚ÄãThe following addresses only exist on the Ethereum mainnet.The UNI merkle distributor address is 0x090D4613473dEE047c3f2706764f49E0821D256e.The staking rewards factory address is 0x3032Ab3Fa8C01d786D29dAdE018d7f2017918e12.The four staking rewards addresses are:0x6c3e4cb2e96b01f4b866965a91ed4437839a121a0x7fba4b8dc5e7616e59622806932dbea72537a56b0xa1484c3aa22a66c62b77e0ae78e15258bd0cb7110xca35e32e7926b96a9988f61d510e038108d8068eCopyThe four year-long vesting contract addresses are:0x4750c43867ef5f89869132eccf19b9b6c4286e1a0xe3953d9d317b834592ab58ab2c7a6ad22b54075d0x4b4e140d1f131fdad6fb59c13af796fd194e41350x3d30b1ab88d487b0f3061f40de76845bec3f1e94CopyThe feeToSetterVester address is 0x18e433c7Bf8A2E1d0197CE5d8f9AFAda1A771360.The feeTo address is 0xDAF819c2437a82f9e01f6586207ebF961a7f0970.Helpful?PreviousToken Integration IssuesNextProcessCodeDocumentationUNI AddressABITimelockABIGovernorAlpha (Deprecated)ABIGovernorAlpha v2 (Deprecated)ABIGovernorBravo (Current)ABIMiscellaneous AddressesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
347,p.org sdk v3 reference classes Trade,"p.org sdk v3 reference classes Trade.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTradeHelpful?On this pageTrade@uniswap/v3-sdk / Exports / TradeClass: Trade<TInput, TOutput, TTradeType>Represents a trade executed against a set of routes where some percentage of the input is split across each route.Each route has its own set of pools. Pools can not be re-used across routes.Does not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and when it is executed.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessors‚ÄãexecutionPriceinputAmountoutputAmountpriceImpactrouteMethods‚ÄãmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Trade<TInput, TOutput, TTradeType>(__namedParameters)Construct a trade by passing in the pre-computed property valuesType parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyTTradeTypeextends TradeTypeParameters‚ÄãNameType__namedParametersObject__namedParameters.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]__namedParameters.tradeTypeTTradeTypeDefined in‚Äãentities/trade.ts:397Properties‚Äã_executionPrice‚Äã‚Ä¢ Private _executionPrice: undefined | Price<TInput, TOutput>The cached result of the computed execution priceDefined in‚Äãentities/trade.ts:143_inputAmount‚Äã‚Ä¢ Private _inputAmount: undefined | CurrencyAmount<TInput>The cached result of the input amount computationDefined in‚Äãentities/trade.ts:97_outputAmount‚Äã‚Ä¢ Private _outputAmount: undefined | CurrencyAmount<TOutput>The cached result of the output amount computationDefined in‚Äãentities/trade.ts:120_priceImpact‚Äã‚Ä¢ Private _priceImpact: undefined | PercentThe cached result of the price impact computationDefined in‚Äãentities/trade.ts:164swaps‚Äã‚Ä¢ Readonly swaps: { inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]The swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.Defined in‚Äãentities/trade.ts:82tradeType‚Äã‚Ä¢ Readonly tradeType: TTradeTypeThe type of the trade, either exact in or exact out.Defined in‚Äãentities/trade.ts:91Accessors‚ÄãexecutionPrice‚Äã‚Ä¢ get executionPrice(): Price<TInput, TOutput>The price expressed in terms of output amount/input amount.Returns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/trade.ts:148inputAmount‚Äã‚Ä¢ get inputAmount(): CurrencyAmount<TInput>The input amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TInput>Defined in‚Äãentities/trade.ts:102outputAmount‚Äã‚Ä¢ get outputAmount(): CurrencyAmount<TOutput>The output amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TOutput>Defined in‚Äãentities/trade.ts:125priceImpact‚Äã‚Ä¢ get priceImpact(): PercentReturns the percent difference between the route's mid price and the price impactReturns‚ÄãPercentDefined in‚Äãentities/trade.ts:169route‚Äã‚Ä¢ get route(): Route<TInput, TOutput>DeprecatedDeprecated in favor of 'swaps' property. If the trade consists of multiple routes this will return an error.When the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.Returns‚ÄãRoute<TInput, TOutput>Defined in‚Äãentities/trade.ts:73Methods‚ÄãmaximumAmountIn‚Äã‚ñ∏ maximumAmountIn(slippageTolerance, amountIn?): CurrencyAmount<TInput>Get the maximum amount in that can be spent via this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountInCurrencyAmount<TInput>-Returns‚ÄãCurrencyAmount<TInput>The amount inDefined in‚Äãentities/trade.ts:456minimumAmountOut‚Äã‚ñ∏ minimumAmountOut(slippageTolerance, amountOut?): CurrencyAmount<TOutput>Get the minimum amount that must be received from this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountOutCurrencyAmount<TOutput>-Returns‚ÄãCurrencyAmount<TOutput>The amount outDefined in‚Äãentities/trade.ts:438worstExecutionPrice‚Äã‚ñ∏ worstExecutionPrice(slippageTolerance): Price<TInput, TOutput>Return the execution price after accounting for slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentthe allowed tolerated slippageReturns‚ÄãPrice<TInput, TOutput>The execution priceDefined in‚Äãentities/trade.ts:471bestTradeExactIn‚Äã‚ñ∏ Static bestTradeExactIn<TInput, TOutput>(pools, currencyAmountIn, currencyOut, __namedParameters?, currentPools?, nextAmountIn?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_INPUT>[]>Given a list of pools, and a fixed amount in, returns the top maxNumResults trades that go from an input token amount to an output token, making at most maxHops hops. Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyAmountInCurrencyAmount<TInput>undefinedused in recursion; the original value of the currencyAmountIn parametercurrencyOutTOutputundefinedthe desired currency out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountInCurrencyAmount<Currency>currencyAmountInexact amount of input currency to spendbestTradesTrade<TInput, TOutput, EXACT_INPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>[]>The exact in tradeDefined in‚Äãentities/trade.ts:495bestTradeExactOut‚Äã‚ñ∏ Static bestTradeExactOut<TInput, TOutput>(pools, currencyIn, currencyAmountOut, __namedParameters?, currentPools?, nextAmountOut?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>similar to the above method but instead targets a fixed output amount given a list of pools, and a fixed amount out, returns the top maxNumResults trades that go from an input token to an output token amount, making at most maxHops hops note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyInTInputundefinedthe currency to spendcurrencyAmountOutCurrencyAmount<TOutput>undefinedthe desired currency amount out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountOutCurrencyAmount<Currency>currencyAmountOutthe exact amount of currency outbestTradesTrade<TInput, TOutput, EXACT_OUTPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>The exact out tradeDefined in‚Äãentities/trade.ts:576createUncheckedTrade‚Äã‚ñ∏ Static createUncheckedTrade<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.inputAmountCurrencyAmount<TInput>-constructorArguments.outputAmountCurrencyAmount<TOutput>-constructorArguments.routeRoute<TInput, TOutput>-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:346createUncheckedTradeWithMultipleRoutes‚Äã‚ñ∏ Static createUncheckedTradeWithMultipleRoutes<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:377exactIn‚Äã‚ñ∏ Static exactIn<TInput, TOutput>(route, amountIn): Promise<Trade<TInput, TOutput, EXACT_INPUT>>Constructs an exact in trade with the given amount in and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact in tradeamountInCurrencyAmount<TInput>The amount being passed inReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>>The exact in tradeDefined in‚Äãentities/trade.ts:194exactOut‚Äã‚ñ∏ Static exactOut<TInput, TOutput>(route, amountOut): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>>Constructs an exact out trade with the given amount out and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact out tradeamountOutCurrencyAmount<TOutput>The amount returned by the tradeReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>>The exact out tradeDefined in‚Äãentities/trade.ts:209fromRoute‚Äã‚ñ∏ Static fromRoute<TInput, TOutput, TTradeType>(route, amount, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade by simulating swaps through the given routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>route to swap throughamountTTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>the amount specified, either input or output, depending on tradeTypetradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The routeDefined in‚Äãentities/trade.ts:226fromRoutes‚Äã‚ñ∏ Static fromRoutes<TInput, TOutput, TTradeType>(routes, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade from routes by simulating swapsType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionroutes{ amount: TTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]the routes to swap through and how much of the amount should be routed through eachtradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The tradeDefined in‚Äãentities/trade.ts:276Helpful?PreviousTickMathNextFeeAmountType parametersTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessorsexecutionPriceinputAmountoutputAmountpriceImpactrouteMethodsmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
348,p.org sdk v3 reference classes TickLibrary,"p.org sdk v3 reference classes TickLibrary.    TickLibrary | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickLibraryHelpful?On this pageTickLibrary@uniswap/v3-sdk / Exports / TickLibraryClass: TickLibraryTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãgetFeeGrowthInsideConstructors‚Äãconstructor‚Äã‚Ä¢ Private new TickLibrary()Cannot be constructed.Defined in‚Äãutils/tickLibrary.ts:25Methods‚ÄãgetFeeGrowthInside‚Äã‚ñ∏ Static getFeeGrowthInside(feeGrowthOutsideLower, feeGrowthOutsideUpper, tickLower, tickUpper, tickCurrent, feeGrowthGlobal0X128, feeGrowthGlobal1X128): default[]Parameters‚ÄãNameTypefeeGrowthOutsideLowerFeeGrowthOutsidefeeGrowthOutsideUpperFeeGrowthOutsidetickLowernumbertickUppernumbertickCurrentnumberfeeGrowthGlobal0X128defaultfeeGrowthGlobal1X128defaultReturns‚Äãdefault[]Defined in‚Äãutils/tickLibrary.ts:27Helpful?PreviousTickNextTickListTable of contentsConstructorsMethodsConstructorsconstructorMethodsgetFeeGrowthInsideDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
349,p.org sdk v3 reference classes Position#pool,"p.org sdk v3 reference classes Position#pool.    Position | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPositionHelpful?On this pagePosition@uniswap/v3-sdk / Exports / PositionClass: PositionRepresents a position on a Uniswap V3 PoolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessors‚Äãamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethods‚ÄãburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsConstructors‚Äãconstructor‚Äã‚Ä¢ new Position(__namedParameters)Constructs a position for a given pool with the given liquidityParameters‚ÄãNameType__namedParametersPositionConstructorArgsDefined in‚Äãentities/position.ts:40Properties‚Äã_mintAmounts‚Äã‚Ä¢ Private _mintAmounts: null | Readonly<{ amount0: default ; amount1: default }> = nullDefined in‚Äãentities/position.ts:31_token0Amount‚Äã‚Ä¢ Private _token0Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:29_token1Amount‚Äã‚Ä¢ Private _token1Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:30liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/position.ts:26pool‚Äã‚Ä¢ Readonly pool: PoolDefined in‚Äãentities/position.ts:23tickLower‚Äã‚Ä¢ Readonly tickLower: numberDefined in‚Äãentities/position.ts:24tickUpper‚Äã‚Ä¢ Readonly tickUpper: numberDefined in‚Äãentities/position.ts:25Accessors‚Äãamount0‚Äã‚Ä¢ get amount0(): CurrencyAmount<Token>Returns the amount of token0 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:68amount1‚Äã‚Ä¢ get amount1(): CurrencyAmount<Token>Returns the amount of token1 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:100mintAmounts‚Äã‚Ä¢ get mintAmounts(): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at the current price for the poolReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>Defined in‚Äãentities/position.ts:258token0PriceLower‚Äã‚Ä¢ get token0PriceLower(): Price<Token, Token>Returns the price of token0 at the lower tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:54token0PriceUpper‚Äã‚Ä¢ get token0PriceUpper(): Price<Token, Token>Returns the price of token0 at the upper tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:61Methods‚ÄãburnAmountsWithSlippage‚Äã‚ñ∏ burnAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercenttolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:213mintAmountsWithSlippage‚Äã‚ñ∏ mintAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to safely mint the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentTolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:157ratiosAfterSlippage‚Äã‚ñ∏ Private ratiosAfterSlippage(slippageTolerance): ObjectReturns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentageParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe amount by which the price can 'slip' before the transaction will revertReturns‚ÄãObjectThe sqrt ratios after slippageNameTypesqrtRatioX96LowerdefaultsqrtRatioX96UpperdefaultDefined in‚Äãentities/position.ts:134fromAmount0‚Äã‚ñ∏ Static fromAmount0(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited amount of token1Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:354fromAmount1‚Äã‚ñ∏ Static fromAmount1(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited amount of token0Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumberReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:378fromAmounts‚Äã‚ñ∏ Static fromAmounts(__namedParameters): PositionComputes the maximum amount of liquidity received for a given amount of token0, token1, and the prices at the tick boundaries.Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe amount of liquidity for the positionDefined in‚Äãentities/position.ts:312Helpful?PreviousPoolNextPositionLibraryTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessorsamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethodsburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
350,p.org contracts v2 concepts advanced topics security,"p.org contracts v2 concepts advanced topics security.    Security | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsFeesPricingUnderstanding ReturnsSecurityMathResearchGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolConceptsAdvanced TopicsSecurityHelpful?Audit & Formal VerificationBetween January 8 and April 30, a team of six engineers reviewed and formally verified crucial components of the smart contracts for Uniswap V2.Their past work includes smart contract development on and formal verification of multi-collateral DAI.The scope of work includes:Formal verification of the core smart contractsCode review of core smart contractsNumerical error analysisCode review of periphery smart contracts (during ongoing development)The report also has a ""Design Comments"" section that we highly recommend for gaining a deep technical understanding of some of the choices made in Uniswap V2.Read the reportBug BountyUniswap has an open and ongoing bug bounty program.Considerations when building on UniswapWhen integrating Uniswap V2 into another on-chain system, particular care must be taken to avoid security vulnerabilities, avenues for manipulations, and the potential loss of funds.As a preliminary note: smart contract integrations can happen at two levels: directly with Pair contracts, or through the Router. Direct interactions offer maximal flexibility but require the most work to get right. Mediated interactions offer more limited capabilities but stronger safety guarantees.There are two primary categories of risk associated with Uniswap V2. The first involves so-called ""static"" errors. These can include sending too many tokens to a pair during a swap (or requesting too few tokens back) or allowing transactions to linger in the mempool long enough for the sender's expectations about prices to no longer be accurate.One may address these errors with fairly straightforward logic checks. Executing these logic checks is the primary purpose of routers. Those who interact directly with pairs must perform these checks themselves (with the help of the Library).""Dynamic"" risk, the second category, involves runtime pricing. Because Ethereum transactions occur in an adversarial environment, naively written smart contracts can, and will, be exploited for profit. For example, suppose a smart contract checks the asset ratio in a Uniswap pool at runtime and trades against it, assuming that the ratio represents the ""fair"" or ""market"" price of these assets. In that case, it is highly vulnerable to manipulation. A malicious actor could, e.g., trivially insert transactions before and after the naive transaction (a so-called ""sandwich"" attack), causing the smart contract to trade at a radically worse price, profit from this at the trader's expense, and then return the contracts to their original state, all at a low cost. (One important caveat is that these types of attacks are mitigated by trading in highly liquid pools, or at low values.)The best way to protect against these attacks is to introduce a price oracle. An oracle is any device that returns desired information, in this case, a pair's spot price. The best ""oracle"" is simply a traders' off-chain observation of the prevailing price, which can be passed into the trade as a safety check. This strategy is best suited to retail trading venues where users initiate transactions on their own behalf. However, it is often the case that a trusted price observation is not available (e.g., in multi-step, programmatic interactions involving Uniswap). Without a price oracle, these interactions will be forced to trade at whatever the (potentially manipulated) rate on Uniswap is. For details on the Uniswap V2 approach to oracles, see Oracles.Edit this pageHelpful?PreviousUnderstanding ReturnsNextMathDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
351,p.org sdk v2 guides pricing,"p.org sdk v2 guides pricing.    Pricing | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKOverviewGuidesSDK Quick startFetching DataPricingTradingPair AddressesTechnical ReferenceGetting StartedTokenPairRouteTradeFractionsFetcherOther ExportsV1 SDKüè†V2 SDKGuidesPricingHelpful?On this pagePricingLooking for a quickstart?Let's talk pricing. This guide will focus on the two most important Uniswap prices: the mid price and the execution price.Mid PriceThe mid price, in the context of Uniswap, is the price that reflects the ratio of reserves in one or more pairs. There are three ways we can think about this price. Perhaps most simply, it defines the relative value of one token in terms of the other. It also represents the price at which you could theoretically trade an infinitesimal amount (Œµ) of one token for the other. Finally, it can be interpreted as the current market-clearing or fair value price of the assets.Let's consider the mid price for DAI-WETH (that is, the amount of DAI per 1 WETH).Direct‚ÄãThe simplest way to get the DAI-WETH mid price is to observe the pair directly:import { ChainId, Token, WETH, Fetcher, Route } from '@uniswap/sdk'const DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', 18)// note that you may want/need to handle this async code differently,// for example if top-level await is not an optionconst pair = await Fetcher.fetchPairData(DAI, WETH[DAI.chainId])const route = new Route([pair], WETH[DAI.chainId])console.log(route.midPrice.toSignificant(6)) // 201.306console.log(route.midPrice.invert().toSignificant(6)) // 0.00496756CopyYou may be wondering why we have to construct a route to get the mid price, as opposed to simply getting it from the pair (which, after all, includes all the necessary data). The reason is simple: a route forces us to be opinionated about the direction of trading. Routes consist of one or more pairs, and an input token (which fully defines a trading path). In this case, we passed WETH as the input token, meaning we're interested in a WETH -> DAI trade.Now we understand that the mid price is going to be defined in terms of DAI/WETH. Not to worry though, if we need the WETH/DAI price, we can easily invert.Finally, you may have noticed that we're formatting the price to 6 significant digits. This is because internally, prices are stored as exact-precision fractions, which can be converted to other representations on demand. For a full list of options, see Price.Indirect‚ÄãFor the sake of example, let's imagine a direct pair between DAI and WETH doesn't exist. In order to get a DAI-WETH mid price we'll need to pick a valid route. Imagine both DAI and WETH have pairs with a third token, USDC. In that case, we can calculate an indirect mid price through the USDC pairs:import { ChainId, Token, WETH, Fetcher, Route } from '@uniswap/sdk'const USDC = new Token(ChainId.MAINNET, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', 6)const DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', 18)// note that you may want/need to handle this async code differently,// for example if top-level await is not an optionconst USDCWETHPair = await Fetcher.fetchPairData(USDC, WETH[ChainId.MAINNET])const DAIUSDCPair = await Fetcher.fetchPairData(DAI, USDC)const route = new Route([USDCWETHPair, DAIUSDCPair], WETH[ChainId.MAINNET])console.log(route.midPrice.toSignificant(6)) // 202.081console.log(route.midPrice.invert().toSignificant(6)) // 0.00494851CopyExecution PriceMid prices are great representations of the current state of a route, but what about trades? It turns out that it makes sense to define another price, the execution price of a trade, as the ratio of assets sent/received.Imagine we're interested in trading 1 WETH for DAI:import { ChainId, Token, WETH, Fetcher, Trade, Route, TokenAmount, TradeType } from '@uniswap/sdk'const DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', 18)// note that you may want/need to handle this async code differently,// for example if top-level await is not an optionconst pair = await Fetcher.fetchPairData(DAI, WETH[DAI.chainId])const route = new Route([pair], WETH[DAI.chainId])const trade = new Trade(route, new TokenAmount(WETH[DAI.chainId], '1000000000000000000'), TradeType.EXACT_INPUT)console.log(trade.executionPrice.toSignificant(6))console.log(trade.nextMidPrice.toSignificant(6))CopyNotice that we're constructing a trade of 1 WETH for as much DAI as possible, given the current reserves of the direct pair. The execution price represents the average DAI/WETH price for this trade. Of course, the reserves of any pair can change every block, which would affect the execution price.Also notice that we're able to access the next mid price, if the trade were to complete successfully before the reserves changed.Helpful?PreviousFetching DataNextTradingDirectIndirectDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
352,p.org sdk core reference classes Percent#constructor,"p.org sdk core reference classes Percent#constructor.    Percent | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPercentHelpful?On this pagePercent@uniswap/sdk-core / Exports / PercentClass: PercentHierarchy‚ÄãFraction‚Ü≥ PercentTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatorisPercentnumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Percent(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshInherited from‚ÄãFraction.constructorDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26isPercent‚Äã‚Ä¢ Readonly isPercent: trueThis boolean prevents a fraction from being interpreted as a PercentDefined in‚Äãentities/fractions/percent.ts:19numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.addDefined in‚Äãentities/fractions/percent.ts:21divide‚Äã‚ñ∏ divide(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/percent.ts:33equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/percent.ts:29subtract‚Äã‚ñ∏ subtract(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/percent.ts:25toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber2format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/percent.ts:41toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber5format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/percent.ts:37Helpful?PreviousNativeCurrencyNextPriceHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatorisPercentnumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
353,p.org sdk core reference classes Price#quote,"p.org sdk core reference classes Price#quote.    Price | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPriceHelpful?On this pagePrice@uniswap/sdk-core / Exports / PriceClass: Price<TBase, TQuote>Type parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyHierarchy‚ÄãFraction‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessors‚ÄãadjustedForDecimalsasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Price<TBase, TQuote>(...args)Construct a price, either with the base and quote currency amount, or theType parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyParameters‚ÄãNameType...args[TBase, TQuote, BigintIsh, BigintIsh] | [{ baseAmount: CurrencyAmount<TBase> ; quoteAmount: CurrencyAmount<TQuote> }]Overrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/price.ts:18Properties‚ÄãbaseCurrency‚Äã‚Ä¢ Readonly baseCurrency: TBaseDefined in‚Äãentities/fractions/price.ts:10denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25quoteCurrency‚Äã‚Ä¢ Readonly quoteCurrency: TQuoteDefined in‚Äãentities/fractions/price.ts:11scalar‚Äã‚Ä¢ Readonly scalar: FractionDefined in‚Äãentities/fractions/price.ts:12Accessors‚ÄãadjustedForDecimals‚Äã‚Ä¢ Private get adjustedForDecimals(): FractionGet the value scaled by decimals for formattingReturns‚ÄãFractionDefined in‚Äãentities/fractions/price.ts:77asFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.addDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.divideDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): Price<TQuote, TBase>Flip the price, switching the base and quote currencyReturns‚ÄãPrice<TQuote, TBase>Overrides‚ÄãFraction.invertDefined in‚Äãentities/fractions/price.ts:49lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply<TOtherQuote>(other): Price<TBase, TOtherQuote>Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currencyType parameters‚ÄãNameTypeTOtherQuoteextends CurrencyParameters‚ÄãNameTypeDescriptionotherPrice<TQuote, TOtherQuote>the other priceReturns‚ÄãPrice<TBase, TOtherQuote>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/price.ts:57quote‚Äã‚ñ∏ quote(currencyAmount): CurrencyAmount<TQuote>Return the amount of quote currency corresponding to a given amount of the base currencyParameters‚ÄãNameTypeDescriptioncurrencyAmountCurrencyAmount<TBase>the amount of base currency to quote against the priceReturns‚ÄãCurrencyAmount<TQuote>Defined in‚Äãentities/fractions/price.ts:67subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.subtractDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber4format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/price.ts:85toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/price.ts:81Helpful?PreviousPercentNextTokenType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessorsadjustedForDecimalsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
354,p.org sdk v3 reference classes Trade#tradetype,"p.org sdk v3 reference classes Trade#tradetype.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTradeHelpful?On this pageTrade@uniswap/v3-sdk / Exports / TradeClass: Trade<TInput, TOutput, TTradeType>Represents a trade executed against a set of routes where some percentage of the input is split across each route.Each route has its own set of pools. Pools can not be re-used across routes.Does not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and when it is executed.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessors‚ÄãexecutionPriceinputAmountoutputAmountpriceImpactrouteMethods‚ÄãmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Trade<TInput, TOutput, TTradeType>(__namedParameters)Construct a trade by passing in the pre-computed property valuesType parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyTTradeTypeextends TradeTypeParameters‚ÄãNameType__namedParametersObject__namedParameters.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]__namedParameters.tradeTypeTTradeTypeDefined in‚Äãentities/trade.ts:397Properties‚Äã_executionPrice‚Äã‚Ä¢ Private _executionPrice: undefined | Price<TInput, TOutput>The cached result of the computed execution priceDefined in‚Äãentities/trade.ts:143_inputAmount‚Äã‚Ä¢ Private _inputAmount: undefined | CurrencyAmount<TInput>The cached result of the input amount computationDefined in‚Äãentities/trade.ts:97_outputAmount‚Äã‚Ä¢ Private _outputAmount: undefined | CurrencyAmount<TOutput>The cached result of the output amount computationDefined in‚Äãentities/trade.ts:120_priceImpact‚Äã‚Ä¢ Private _priceImpact: undefined | PercentThe cached result of the price impact computationDefined in‚Äãentities/trade.ts:164swaps‚Äã‚Ä¢ Readonly swaps: { inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]The swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.Defined in‚Äãentities/trade.ts:82tradeType‚Äã‚Ä¢ Readonly tradeType: TTradeTypeThe type of the trade, either exact in or exact out.Defined in‚Äãentities/trade.ts:91Accessors‚ÄãexecutionPrice‚Äã‚Ä¢ get executionPrice(): Price<TInput, TOutput>The price expressed in terms of output amount/input amount.Returns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/trade.ts:148inputAmount‚Äã‚Ä¢ get inputAmount(): CurrencyAmount<TInput>The input amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TInput>Defined in‚Äãentities/trade.ts:102outputAmount‚Äã‚Ä¢ get outputAmount(): CurrencyAmount<TOutput>The output amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TOutput>Defined in‚Äãentities/trade.ts:125priceImpact‚Äã‚Ä¢ get priceImpact(): PercentReturns the percent difference between the route's mid price and the price impactReturns‚ÄãPercentDefined in‚Äãentities/trade.ts:169route‚Äã‚Ä¢ get route(): Route<TInput, TOutput>DeprecatedDeprecated in favor of 'swaps' property. If the trade consists of multiple routes this will return an error.When the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.Returns‚ÄãRoute<TInput, TOutput>Defined in‚Äãentities/trade.ts:73Methods‚ÄãmaximumAmountIn‚Äã‚ñ∏ maximumAmountIn(slippageTolerance, amountIn?): CurrencyAmount<TInput>Get the maximum amount in that can be spent via this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountInCurrencyAmount<TInput>-Returns‚ÄãCurrencyAmount<TInput>The amount inDefined in‚Äãentities/trade.ts:456minimumAmountOut‚Äã‚ñ∏ minimumAmountOut(slippageTolerance, amountOut?): CurrencyAmount<TOutput>Get the minimum amount that must be received from this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountOutCurrencyAmount<TOutput>-Returns‚ÄãCurrencyAmount<TOutput>The amount outDefined in‚Äãentities/trade.ts:438worstExecutionPrice‚Äã‚ñ∏ worstExecutionPrice(slippageTolerance): Price<TInput, TOutput>Return the execution price after accounting for slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentthe allowed tolerated slippageReturns‚ÄãPrice<TInput, TOutput>The execution priceDefined in‚Äãentities/trade.ts:471bestTradeExactIn‚Äã‚ñ∏ Static bestTradeExactIn<TInput, TOutput>(pools, currencyAmountIn, currencyOut, __namedParameters?, currentPools?, nextAmountIn?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_INPUT>[]>Given a list of pools, and a fixed amount in, returns the top maxNumResults trades that go from an input token amount to an output token, making at most maxHops hops. Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyAmountInCurrencyAmount<TInput>undefinedused in recursion; the original value of the currencyAmountIn parametercurrencyOutTOutputundefinedthe desired currency out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountInCurrencyAmount<Currency>currencyAmountInexact amount of input currency to spendbestTradesTrade<TInput, TOutput, EXACT_INPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>[]>The exact in tradeDefined in‚Äãentities/trade.ts:495bestTradeExactOut‚Äã‚ñ∏ Static bestTradeExactOut<TInput, TOutput>(pools, currencyIn, currencyAmountOut, __namedParameters?, currentPools?, nextAmountOut?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>similar to the above method but instead targets a fixed output amount given a list of pools, and a fixed amount out, returns the top maxNumResults trades that go from an input token to an output token amount, making at most maxHops hops note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyInTInputundefinedthe currency to spendcurrencyAmountOutCurrencyAmount<TOutput>undefinedthe desired currency amount out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountOutCurrencyAmount<Currency>currencyAmountOutthe exact amount of currency outbestTradesTrade<TInput, TOutput, EXACT_OUTPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>The exact out tradeDefined in‚Äãentities/trade.ts:576createUncheckedTrade‚Äã‚ñ∏ Static createUncheckedTrade<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.inputAmountCurrencyAmount<TInput>-constructorArguments.outputAmountCurrencyAmount<TOutput>-constructorArguments.routeRoute<TInput, TOutput>-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:346createUncheckedTradeWithMultipleRoutes‚Äã‚ñ∏ Static createUncheckedTradeWithMultipleRoutes<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:377exactIn‚Äã‚ñ∏ Static exactIn<TInput, TOutput>(route, amountIn): Promise<Trade<TInput, TOutput, EXACT_INPUT>>Constructs an exact in trade with the given amount in and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact in tradeamountInCurrencyAmount<TInput>The amount being passed inReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>>The exact in tradeDefined in‚Äãentities/trade.ts:194exactOut‚Äã‚ñ∏ Static exactOut<TInput, TOutput>(route, amountOut): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>>Constructs an exact out trade with the given amount out and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact out tradeamountOutCurrencyAmount<TOutput>The amount returned by the tradeReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>>The exact out tradeDefined in‚Äãentities/trade.ts:209fromRoute‚Äã‚ñ∏ Static fromRoute<TInput, TOutput, TTradeType>(route, amount, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade by simulating swaps through the given routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>route to swap throughamountTTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>the amount specified, either input or output, depending on tradeTypetradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The routeDefined in‚Äãentities/trade.ts:226fromRoutes‚Äã‚ñ∏ Static fromRoutes<TInput, TOutput, TTradeType>(routes, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade from routes by simulating swapsType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionroutes{ amount: TTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]the routes to swap through and how much of the amount should be routed through eachtradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The tradeDefined in‚Äãentities/trade.ts:276Helpful?PreviousTickMathNextFeeAmountType parametersTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessorsexecutionPriceinputAmountoutputAmountpriceImpactrouteMethodsmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
355,p.org sdk v3 reference classes Trade#executionprice,"p.org sdk v3 reference classes Trade#executionprice.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTradeHelpful?On this pageTrade@uniswap/v3-sdk / Exports / TradeClass: Trade<TInput, TOutput, TTradeType>Represents a trade executed against a set of routes where some percentage of the input is split across each route.Each route has its own set of pools. Pools can not be re-used across routes.Does not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and when it is executed.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessors‚ÄãexecutionPriceinputAmountoutputAmountpriceImpactrouteMethods‚ÄãmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Trade<TInput, TOutput, TTradeType>(__namedParameters)Construct a trade by passing in the pre-computed property valuesType parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyTTradeTypeextends TradeTypeParameters‚ÄãNameType__namedParametersObject__namedParameters.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]__namedParameters.tradeTypeTTradeTypeDefined in‚Äãentities/trade.ts:397Properties‚Äã_executionPrice‚Äã‚Ä¢ Private _executionPrice: undefined | Price<TInput, TOutput>The cached result of the computed execution priceDefined in‚Äãentities/trade.ts:143_inputAmount‚Äã‚Ä¢ Private _inputAmount: undefined | CurrencyAmount<TInput>The cached result of the input amount computationDefined in‚Äãentities/trade.ts:97_outputAmount‚Äã‚Ä¢ Private _outputAmount: undefined | CurrencyAmount<TOutput>The cached result of the output amount computationDefined in‚Äãentities/trade.ts:120_priceImpact‚Äã‚Ä¢ Private _priceImpact: undefined | PercentThe cached result of the price impact computationDefined in‚Äãentities/trade.ts:164swaps‚Äã‚Ä¢ Readonly swaps: { inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]The swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.Defined in‚Äãentities/trade.ts:82tradeType‚Äã‚Ä¢ Readonly tradeType: TTradeTypeThe type of the trade, either exact in or exact out.Defined in‚Äãentities/trade.ts:91Accessors‚ÄãexecutionPrice‚Äã‚Ä¢ get executionPrice(): Price<TInput, TOutput>The price expressed in terms of output amount/input amount.Returns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/trade.ts:148inputAmount‚Äã‚Ä¢ get inputAmount(): CurrencyAmount<TInput>The input amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TInput>Defined in‚Äãentities/trade.ts:102outputAmount‚Äã‚Ä¢ get outputAmount(): CurrencyAmount<TOutput>The output amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TOutput>Defined in‚Äãentities/trade.ts:125priceImpact‚Äã‚Ä¢ get priceImpact(): PercentReturns the percent difference between the route's mid price and the price impactReturns‚ÄãPercentDefined in‚Äãentities/trade.ts:169route‚Äã‚Ä¢ get route(): Route<TInput, TOutput>DeprecatedDeprecated in favor of 'swaps' property. If the trade consists of multiple routes this will return an error.When the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.Returns‚ÄãRoute<TInput, TOutput>Defined in‚Äãentities/trade.ts:73Methods‚ÄãmaximumAmountIn‚Äã‚ñ∏ maximumAmountIn(slippageTolerance, amountIn?): CurrencyAmount<TInput>Get the maximum amount in that can be spent via this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountInCurrencyAmount<TInput>-Returns‚ÄãCurrencyAmount<TInput>The amount inDefined in‚Äãentities/trade.ts:456minimumAmountOut‚Äã‚ñ∏ minimumAmountOut(slippageTolerance, amountOut?): CurrencyAmount<TOutput>Get the minimum amount that must be received from this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountOutCurrencyAmount<TOutput>-Returns‚ÄãCurrencyAmount<TOutput>The amount outDefined in‚Äãentities/trade.ts:438worstExecutionPrice‚Äã‚ñ∏ worstExecutionPrice(slippageTolerance): Price<TInput, TOutput>Return the execution price after accounting for slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentthe allowed tolerated slippageReturns‚ÄãPrice<TInput, TOutput>The execution priceDefined in‚Äãentities/trade.ts:471bestTradeExactIn‚Äã‚ñ∏ Static bestTradeExactIn<TInput, TOutput>(pools, currencyAmountIn, currencyOut, __namedParameters?, currentPools?, nextAmountIn?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_INPUT>[]>Given a list of pools, and a fixed amount in, returns the top maxNumResults trades that go from an input token amount to an output token, making at most maxHops hops. Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyAmountInCurrencyAmount<TInput>undefinedused in recursion; the original value of the currencyAmountIn parametercurrencyOutTOutputundefinedthe desired currency out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountInCurrencyAmount<Currency>currencyAmountInexact amount of input currency to spendbestTradesTrade<TInput, TOutput, EXACT_INPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>[]>The exact in tradeDefined in‚Äãentities/trade.ts:495bestTradeExactOut‚Äã‚ñ∏ Static bestTradeExactOut<TInput, TOutput>(pools, currencyIn, currencyAmountOut, __namedParameters?, currentPools?, nextAmountOut?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>similar to the above method but instead targets a fixed output amount given a list of pools, and a fixed amount out, returns the top maxNumResults trades that go from an input token to an output token amount, making at most maxHops hops note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyInTInputundefinedthe currency to spendcurrencyAmountOutCurrencyAmount<TOutput>undefinedthe desired currency amount out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountOutCurrencyAmount<Currency>currencyAmountOutthe exact amount of currency outbestTradesTrade<TInput, TOutput, EXACT_OUTPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>The exact out tradeDefined in‚Äãentities/trade.ts:576createUncheckedTrade‚Äã‚ñ∏ Static createUncheckedTrade<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.inputAmountCurrencyAmount<TInput>-constructorArguments.outputAmountCurrencyAmount<TOutput>-constructorArguments.routeRoute<TInput, TOutput>-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:346createUncheckedTradeWithMultipleRoutes‚Äã‚ñ∏ Static createUncheckedTradeWithMultipleRoutes<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:377exactIn‚Äã‚ñ∏ Static exactIn<TInput, TOutput>(route, amountIn): Promise<Trade<TInput, TOutput, EXACT_INPUT>>Constructs an exact in trade with the given amount in and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact in tradeamountInCurrencyAmount<TInput>The amount being passed inReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>>The exact in tradeDefined in‚Äãentities/trade.ts:194exactOut‚Äã‚ñ∏ Static exactOut<TInput, TOutput>(route, amountOut): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>>Constructs an exact out trade with the given amount out and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact out tradeamountOutCurrencyAmount<TOutput>The amount returned by the tradeReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>>The exact out tradeDefined in‚Äãentities/trade.ts:209fromRoute‚Äã‚ñ∏ Static fromRoute<TInput, TOutput, TTradeType>(route, amount, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade by simulating swaps through the given routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>route to swap throughamountTTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>the amount specified, either input or output, depending on tradeTypetradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The routeDefined in‚Äãentities/trade.ts:226fromRoutes‚Äã‚ñ∏ Static fromRoutes<TInput, TOutput, TTradeType>(routes, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade from routes by simulating swapsType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionroutes{ amount: TTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]the routes to swap through and how much of the amount should be routed through eachtradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The tradeDefined in‚Äãentities/trade.ts:276Helpful?PreviousTickMathNextFeeAmountType parametersTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessorsexecutionPriceinputAmountoutputAmountpriceImpactrouteMethodsmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
356,p.org contracts v3 reference periphery NonfungiblePositionManager,"p.org contracts v3 reference periphery NonfungiblePositionManager.    NonfungiblePositionManager | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryNonfungiblePositionManagerHelpful?On this pageNonfungiblePositionManagerWraps Uniswap V3 positions in the ERC721 non-fungible token interfaceFunctions‚Äãconstructor‚Äã function constructor( ) publicCopypositions‚Äã function positions( uint256 tokenId ) external view returns (uint96 nonce, address operator, address token0, address token1, uint24 fee, int24 tickLower, int24 tickUpper, uint128 liquidity, uint256 feeGrowthInside0LastX128, uint256 feeGrowthInside1LastX128, uint128 tokensOwed0, uint128 tokensOwed1)CopyReturns the position information associated with a given token ID.Throws if the token ID is not valid.Parameters:‚ÄãNameTypeDescriptiontokenIduint256The ID of the token that represents the positionReturn Values:‚ÄãNameTypeDescriptionnonceuint96The nonce for permitsoperatoraddressThe address that is approved for spendingtoken0addressThe address of the token0 for a specific pooltoken1addressThe address of the token1 for a specific poolfeeuint24The fee associated with the pooltickLowerint24The lower end of the tick range for the positiontickUpperint24The higher end of the tick range for the positionliquidityuint128The liquidity of the positionfeeGrowthInside0LastX128uint256The fee growth of token0 as of the last action on the individual positionfeeGrowthInside1LastX128uint256The fee growth of token1 as of the last action on the individual positiontokensOwed0uint128The uncollected amount of token0 owed to the position as of the last computationtokensOwed1uint128The uncollected amount of token1 owed to the position as of the last computationmint‚Äã function mint( struct INonfungiblePositionManager.MintParams params ) external returns (uint256 tokenId, uint128 liquidity, uint256 amount0, uint256 amount1)CopyCreates a new position wrapped in a NFTCall this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.Parameters:‚ÄãNameTypeDescriptionparamsstruct INonfungiblePositionManager.MintParamsThe params necessary to mint a position, encoded as MintParams in calldataReturn Values:‚ÄãNameTypeDescriptiontokenIduint256The ID of the token that represents the minted positionliquidityuint128The amount of liquidity for this positionamount0uint256The amount of token0amount1uint256The amount of token1tokenURI‚Äã function tokenURI( uint256 tokenId ) public view returns (string)CopyReturns a URI describing a particular token IDParameters:‚ÄãNameTypeDescriptiontokenIduint256The ID of the token that represents the minted positionReturn Values:‚ÄãA base64 string with the URI data.baseURI‚Äã function baseURI( ) public returns (string)CopyincreaseLiquidity‚Äã function increaseLiquidity( struct INonfungiblePositionManager.IncreaseLiquidityParams params ) external returns (uint128 liquidity, uint256 amount0, uint256 amount1)CopyIncreases the amount of liquidity in a position, with tokens paid by the msg.senderParameters:‚ÄãNameTypeDescriptionparamsstruct INonfungiblePositionManager.IncreaseLiquidityParamstokenId The ID of the token for which liquidity is being increased,Return Values:‚ÄãNameTypeDescriptionliquidityuint128The new liquidity amount as a result of the increaseamount0uint256The amount of token0 to achieve resulting liquidityamount1uint256The amount of token1 to achieve resulting liquiditydecreaseLiquidity‚Äã function decreaseLiquidity( struct INonfungiblePositionManager.DecreaseLiquidityParams params ) external returns (uint256 amount0, uint256 amount1)CopyDecreases the amount of liquidity in a position and accounts it to the positionParameters:‚ÄãNameTypeDescriptionparamsstruct INonfungiblePositionManager.DecreaseLiquidityParamstokenId The ID of the token for which liquidity is being decreased,Return Values:‚ÄãNameTypeDescriptionamount0uint256The amount of token0 accounted to the position's tokens owedamount1uint256The amount of token1 accounted to the position's tokens owedcollect‚Äã function collect( struct INonfungiblePositionManager.CollectParams params ) external returns (uint256 amount0, uint256 amount1)CopyCollects up to a maximum amount of fees owed to a specific position to the recipientParameters:‚ÄãNameTypeDescriptionparamsstruct INonfungiblePositionManager.CollectParamstokenId The ID of the NFT for which tokens are being collected,recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collectReturn Values:‚ÄãNameTypeDescriptionamount0uint256The amount of fees collected in token0amount1uint256The amount of fees collected in token1burn‚Äã function burn( uint256 tokenId ) externalCopyBurns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first.Parameters:‚ÄãNameTypeDescriptiontokenIduint256The ID of the token that is being burned_getAndIncrementNonce‚Äã function _getAndIncrementNonce( ) internal returns (uint256)CopygetApproved‚Äã function getApproved( ) public view returns (address)CopyReturns the account approved for tokenId token. Requirements:tokenId must exist._approve‚Äã function _approve( ) internalCopyOverrides _approve to use the operator in the position, which is packed with the position permit nonceEdit this pageHelpful?PreviousTickLensTestNextNonfungibleTokenPositionDescriptorFunctionsconstructorpositionsminttokenURIbaseURIincreaseLiquiditydecreaseLiquiditycollectburn_getAndIncrementNoncegetApproved_approveDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
357,p.org contracts v3 guides liquidity mining overview,"p.org contracts v3 guides liquidity mining overview.    Overview | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningOverviewImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolGuidesLiquidity MiningOverviewHelpful?On this pageOverviewIntroduction‚ÄãAs a DeFi project, token creator, or other interested party, you may want to incentivize in-range liquidity provision on a Uniswap V3 pool. This guide describes one particular incentivization scheme at a high level, as implemented in uniswap-v3-staker.The Setting‚ÄãLet's start by defining some terms. We refer to programs which incentivize liquidity as Incentives; they're characterized by the following parameters:rewardToken: Perhaps the most important parameter, would-be incentivizers must pick the ERC20 token which they would like to distribute as a reward for providing liquidity.pool: The address of the Uniswap V3 pool in which liquidity must be provided.startTime: The UNIX timestamp at which rewards start to be distributed.endTime: The UNIX timestamp at which rewards start to decay.refundee: The address which has the right to reclaim any leftover rewards after the Incentive has concluded.Finally, every Incentive has an associated reward, the total amount of rewardTokens that are allocated to be distributed over the lifecycle of the program.Reward Math‚ÄãNow that we have an idea of what an Incentive looks like, let's explore how rewards are actually allocated to participants. The next section will touch on the participation mechanics, so for now let's abstract this away and just focus on the high-level design.Recall that Incentive creators pick a reward amount and a program duration. This directly corresponds to picking an amount of rewardTokens to distribute per second; let's call this the reward rate. So, for every second between startTime and endTime, a constant amount of tokens are distributed proportionally among all in-range liquidity at that second. Crucially, this counts all liquidity, not just liquidity that opts in to participating in the program. So, incentive creators should pick a reward rate that they deem worthwhile to distribute across (potentially) all in-range LPs for the duration of the program.Staking‚ÄãSo, how do users participate in these programs? Note that this section requires a basic understanding of how Uniswap V3 position NFTs workThe first action a user must take in order to begin participating in an Incentive is to deposit their position NFT into the canonical staking contract address, effectively temporarily giving custody over their NFT to this contract. This is necessary because, as we'll see later on, the staking contract needs to be able to guarantee that liquidity cannot be removed from NFTs participating in the program.Once deposited, a user may then stake their NFT into any number of active Incentives for the Uniswap V3 pool their NFT is tied to (note that this can happen atomically with an initial deposit). Staked NFTs then immediately start to earn rewards, according to the algorithm outlined above. Users may periodically claim accrued rewardTokens while the program is ongoing, or wait to claim until the program has concluded to minimize overhead.Program Conclusion‚ÄãThere are two conditions that must be met for a program to be considered concluded:block.timestamp >= endTime: In other words, the program's duration must have expired. However, this doesn't mark the official end of the program, as some users may still be participating right up unti this endTime boundary and beyond, to maximize their rewards. This leads directly to the second condition.All NFTs must be unstaked: A program can conclude only when every NFT which participated in it is unstaked. To ensure this is always possible, after the endTime of a program anyone may unstake any NFT (though of course they may not claim outstanding rewardTokens due to the NFT owner). This ensures that even if all users do not unstake themselves, someone can unstake them manually so that the program can end.It's important that most or all programs fully conclude, primarily so that the refundee can reclaim any unallocated rewards. What are the conditions under which unallocated rewards will remain? Well, recall that the reward rate is the same across all in-range liquidity. However, only program participants may actually claim accrued tokens, so it's likely that all programs will end up with a balance of rewardTokens that cannot be claimed. So, refundees will typically be incentivized to bring programs to an official conclusion. This slightly cumbersome design is a consequence of the difficulty of consistently allocating rewards proportional to Uniswap V3 liquidity.A final note: stakers who remain in the program after endTime may actually see their rewards marginally augmented or (more likely) gradually diluted. The magnitude of these changes depend on stakers' share of the total active liquidity, the time spend staked after endTime, and the sequence of unstaking. In the worst case, rewards decay proportionally to the duration. For example, at 2x the duration, ¬Ω of rewards could remain, at 3x, ‚Öì could remain, etc. While somewhat complex, this behavior can largely be ignored from a game-theoretic standpoint. Stakers should simply attempt to unstake and claim rewards as soon as possible after endTime, an outcome that is likely in any case, as refundees will be eager to reclaim leftover rewards, and mass unstake stragglers.Edit this pageHelpful?PreviousThe Full ContractNextGetting StartedIntroductionThe SettingReward MathStakingProgram ConclusionDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
358,p.org sdk v3 reference classes PositionLibrary#constructor,"p.org sdk v3 reference classes PositionLibrary#constructor.    PositionLibrary | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPositionLibraryHelpful?On this pagePositionLibrary@uniswap/v3-sdk / Exports / PositionLibraryClass: PositionLibraryTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãgetTokensOwedConstructors‚Äãconstructor‚Äã‚Ä¢ Private new PositionLibrary()Cannot be constructed.Defined in‚Äãutils/position.ts:10Methods‚ÄãgetTokensOwed‚Äã‚ñ∏ Static getTokensOwed(feeGrowthInside0LastX128, feeGrowthInside1LastX128, liquidity, feeGrowthInside0X128, feeGrowthInside1X128): default[]Parameters‚ÄãNameTypefeeGrowthInside0LastX128defaultfeeGrowthInside1LastX128defaultliquiditydefaultfeeGrowthInside0X128defaultfeeGrowthInside1X128defaultReturns‚Äãdefault[]Defined in‚Äãutils/position.ts:13Helpful?PreviousPositionNextRouteTable of contentsConstructorsMethodsConstructorsconstructorMethodsgetTokensOwedDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
359,p.org sdk core reference enums SupportedChainId#kovan,p.org sdk core reference enums SupportedChainId#kovan.    SupportedChainId | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesenumsRoundingSupportedChainIdTradeTypeV2 SDKV1 SDKüè†Core SDKTechnical ReferenceenumsSupportedChainIdHelpful?On this pageSupportedChainId@uniswap/sdk-core / Exports / SupportedChainIdEnumeration: SupportedChainIdTable of contents‚ÄãEnumeration Members‚ÄãARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENEnumeration Members‚ÄãARBITRUM_ONE‚Äã‚Ä¢ ARBITRUM_ONE = 42161Defined in‚Äãconstants.ts:10ARBITRUM_RINKEBY‚Äã‚Ä¢ ARBITRUM_RINKEBY = 421611Defined in‚Äãconstants.ts:11CELO‚Äã‚Ä¢ CELO = 42220Defined in‚Äãconstants.ts:19CELO_ALFAJORES‚Äã‚Ä¢ CELO_ALFAJORES = 44787Defined in‚Äãconstants.ts:20GOERLI‚Äã‚Ä¢ GOERLI = 5Defined in‚Äãconstants.ts:7KOVAN‚Äã‚Ä¢ KOVAN = 42Defined in‚Äãconstants.ts:8MAINNET‚Äã‚Ä¢ MAINNET = 1Defined in‚Äãconstants.ts:4OPTIMISM‚Äã‚Ä¢ OPTIMISM = 10Defined in‚Äãconstants.ts:13OPTIMISM_GOERLI‚Äã‚Ä¢ OPTIMISM_GOERLI = 420Defined in‚Äãconstants.ts:14POLYGON‚Äã‚Ä¢ POLYGON = 137Defined in‚Äãconstants.ts:16POLYGON_MUMBAI‚Äã‚Ä¢ POLYGON_MUMBAI = 80001Defined in‚Äãconstants.ts:17RINKEBY‚Äã‚Ä¢ RINKEBY = 4Defined in‚Äãconstants.ts:6ROPSTEN‚Äã‚Ä¢ ROPSTEN = 3Defined in‚Äãconstants.ts:5Helpful?PreviousRoundingNextTradeTypeTable of contentsEnumeration MembersEnumeration MembersARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
360,p.org sdk core reference classes CurrencyAmount#tofixed,"p.org sdk core reference classes CurrencyAmount#tofixed.    CurrencyAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesCurrencyAmountHelpful?On this pageCurrencyAmount@uniswap/sdk-core / Exports / CurrencyAmountClass: CurrencyAmount<T>Type parameters‚ÄãNameTypeTextends CurrencyHierarchy‚ÄãFraction‚Ü≥ CurrencyAmountTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãcurrencydecimalScaledenominatornumeratorAccessors‚ÄãasFractionquotientremainderwrappedMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new CurrencyAmount<T>(currency, numerator, denominator?)Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypecurrencyTnumeratorBigintIshdenominator?BigintIshOverrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/currencyAmount.ts:40Properties‚Äãcurrency‚Äã‚Ä¢ Readonly currency: TDefined in‚Äãentities/fractions/currencyAmount.ts:14decimalScale‚Äã‚Ä¢ Readonly decimalScale: defaultDefined in‚Äãentities/fractions/currencyAmount.ts:15denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47wrapped‚Äã‚Ä¢ get wrapped(): CurrencyAmount<Token>Returns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/fractions/currencyAmount.ts:91Methods‚Äãadd‚Äã‚ñ∏ add(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.addDefined in‚Äãentities/fractions/currencyAmount.ts:47divide‚Äã‚ñ∏ divide(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/currencyAmount.ts:64equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/currencyAmount.ts:59subtract‚Äã‚ñ∏ subtract(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/currencyAmount.ts:53toExact‚Äã‚ñ∏ toExact(format?): stringParameters‚ÄãNameTypeformatobjectReturns‚ÄãstringDefined in‚Äãentities/fractions/currencyAmount.ts:86toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformat?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/currencyAmount.ts:77toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/currencyAmount.ts:69fromFractionalAmount‚Äã‚ñ∏ Static fromFractionalAmount<T>(currency, numerator, denominator): CurrencyAmount<T>Construct a currency amount with a denominator that is not equal to 1Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currencynumeratorBigintIshthe numerator of the fractional token amountdenominatorBigintIshthe denominator of the fractional token amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:32fromRawAmount‚Äã‚ñ∏ Static fromRawAmount<T>(currency, rawAmount): CurrencyAmount<T>Returns a new currency amount instance from the unitless amount of token, i.e. the raw amountType parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currency in the amountrawAmountBigintIshthe raw token or ether amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:22Helpful?PreviousOverviewNextEtherType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiescurrencydecimalScaledenominatornumeratorAccessorsasFractionquotientremainderwrappedMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
361,p.org contracts v3 guides governance liscense modifications,"p.org contracts v3 guides governance liscense modifications.    License Modifications | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsLicense ModificationsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolGuidesGovernance ProposalsLicense ModificationsHelpful?On this pageLicense ModificationsLicensing‚ÄãPlease note that Uniswap V3 is under BUSL license until the Change Date, currently 2023-04-01. Exceptions to the license may be specified by Uniswap Governance via Additional Use Grants, which can, for example, allow V3 to be deployed on new chains. Please follow the Uniswap Governance process to request a DAO vote for exceptions to the license, or to move up the Change Date.License changes must be enacted via the ENS domain uniswap.eth, which is controlled by Uniswap Governance. This means (among other things) that Governance has the power to associate arbitrary text with any subdomain of the form X.uniswap.eth. Modifications of the Change Date should be specified at v3-core-license-date.uniswap.eth, and Additional Use Grants should be specified at v3-core-license-grants.uniswap.eth. The process for associating text with a subdomain is detailed below: ENS Subdomain Details & Process If the subdomain does not already exist which can be checked here, the setSubnodeRecord function of the ENS registry should be called with the following arguments:node: namehash('uniswap.eth') (0xa2a03459171c76bff45817330c10ef9f8af07011a33005b73b50189bbc7e7132)label: keccak256('v3-core-license-date') (0xee55740591b0fd5d7a28a6edc49567f6ff3febbe942ec0e2fa49ee536595085b) or keccak256('v3-core-license-grants') (0x15ff9b5bd7642701a10e5ea8fb29c957ffda4854cd028e9f6218506e6b509af2)owner: 0x1a9C8182C09F50C8318d769245beA52c32BE35BC, the Uniswap Governance Timelockresolver: 0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41, the public ENS resolver.ttl: 0Then, the setText function of the public resolver should be called with the following arguments:node: namehash('v3-core-license-date.uniswap.eth') (0x0505ec7822d61b4cfb294f137d1a7f0ceedf162f555a4bf2f4be58a07cf266c5) or namehash('v3-core-license-grants.uniswap.eth') (0xa35d592ec6e5289a387cba1d5f82be794f495bd5a361a1fb314687c6aefea1f4)key: A suitable label, such as notice.value: The text of the change. Note that text may already be associated with the subdomain in question. If it does, it can be reviewed at the following URLs for either v3-core-license-date or v3-core-license-grants, and appended to as desired.Note: setContentHash may also be used to associate text with a subdomain, but setText is presented above for simplicity.These contract function calls should then be encoded into a governance proposal, and approved by Uniswap Governance.Proposals‚ÄãProposals are submitted via GovernorBravoDelegator @ 0x408ED6354d4973f66138C91495F2f2FCbd8724C3, a proxy contract currently pointing to the implementation at 0x53a328F4086d7C0F1Fa19e594c9b842125263026. NPM packages for consuming the governance contract ABIs, and details on previous versions, are available here Governor Bravo #propose Parameters /** * @notice Function used to propose a new proposal. Sender must have delegates above the proposal threshold * @param targets Target addresses for proposal calls * @param values Eth values for proposal calls * @param signatures Function signatures for proposal calls * @param calldatas Calldatas for proposal calls * @param description String description of the proposal * @return Proposal id of new proposal */function propose( address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas, string memory description) public returns (uint)CopyPopulating Proposal Calldata‚ÄãBelow is an example of using a scripting environment to generate a proposal. This is for educational purposes only - that example assumes access to a private key with a sufficient amount of delegated UNI to submit a proposal, which is an insecure practice. There are several ways to generate a proposal transaction and submit it to Ethereum; this example should only be used for reference and not in production. Populating `Propose` Calldata import { Contract, ethers } from 'ethers'import { namehash } from '@ethersproject/hash'import { keccak256 } from '@ethersproject/keccak256'import { Interface } from '@ethersproject/abi'// note: contract ABIs should be imported via etherscanimport { GOVERNOR_BRAVO_ABI, ENS_REGISTRY_ABI, ENS_PUBLIC_RESOLVER_ABI } from './utils'const GOVERNOR_BRAVO_ADDRESS: string = '0x408ED6354d4973f66138C91495F2f2FCbd8724C3'const ENS_REGISTRY_ADDRESS: string = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'const PUBLIC_ENS_RESOLVER_ADDRESS: string = '0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41'const UNISWAP_GOVERNANCE_TIMELOCK_ADDRESS: string = '0x1a9C8182C09F50C8318d769245beA52c32BE35BC'const provider = new ethers.providers.JsonRpcProvider('YOUR_RPC_URL_HERE')const signer = provider.getSigner('YOUR_SIGNER_ADDRESS_HERE')// note: setting the subnode record should only take place if the subdomain does not already existconst ensRegistryInterface = new Interface(ENS_REGISTRY_ABI)const setSubnodeRecordCalldata = ensRegistryInterface.encodeFunctionData('setSubnodeRecord', [ // node: The parent node namehash('uniswap.eth'), // label: The hash of the label specifying the subnode keccak256('v3-core-license-grants'), // owner: The address of the new owner UNISWAP_GOVERNANCE_TIMELOCK_ADDRESS, // resolver: The address of the resolver PUBLIC_ENS_RESOLVER_ADDRESS, // ttl: The TTL, i.e., time to live, in seconds 0,])const ensPublicResolverInterface = new Interface(ENS_PUBLIC_RESOLVER_ABI)const setTextCalldata = ensPublicResolverInterface.encodeFunctionData('setText', [ // node: The node to update namehash('v3-core-license-grants.uniswap.eth'), // key: The key to set '[your-projects-additional-use-grant-title]', // value: The text data value to set '[your-additional-use-grant-description]',])// Create a new local instance of the governorBravo contract// Note that in production the abi should be gathered via etherscanconst governorBravo = new Contract(GOVERNOR_BRAVO_ADDRESS, GOVERNOR_BRAVO_ABI, provider)// the ordered list of target addresses for calls to be madeconst targets = [ENS_REGISTRY_ADDRESS, PUBLIC_ENS_RESOLVER_ADDRESS]// The ordered list of values to be passed to the calls to be made. i.e., the amount of// ETH values to be transferred within the transaction. as this example does not include// the transferring of any ETH, this list is empty.const values = [0, 0]// The ordered list of function signatures to be called. The signatures arguments// are optional, if not provided, the function signature will be inferred from the calldataconst signatures = ['', '']// The ordered list of calldata to be passed to each call in the proposal. The calldata// in this example takes the place of the function signature arguments.const calldatas = [setSubnodeRecordCalldata, setTextCalldata]// the description of the proposal.const description = '# TITLE ## SECTION_EXPLANATION'async function main() { try { const txResponse: ethers.providers.TransactionResponse = await governorBravo  .connect(signer)  .propose(targets, values, signatures, calldatas, description) console.log(`Proposal transaction sent: ${txResponse.hash}`) await txResponse.wait(1) console.log(  `Proposal has been mined at blocknumber: ${txResponse.blockNumber}, transaction hash: ${txResponse.hash}` ) } catch (error) { console.error(error) }}main().then(() => console.log('done'))CopyHelpful Links‚ÄãGovernor Bravo ProxyGovernor Bravo DelegateENS Subnode Record Update DetailsEdit this pageHelpful?PreviousThe Final ContractNextOverviewLicensingProposalsPopulating Proposal CalldataHelpful LinksDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
362,p.org sdk v3 reference enums FeeAmount,"p.org sdk v3 reference enums FeeAmount.    FeeAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsFeeAmountinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceenumsFeeAmountHelpful?On this pageFeeAmount@uniswap/v3-sdk / Exports / FeeAmountEnumeration: FeeAmountThe default factory enabled fee amounts, denominated in hundredths of bips.Table of contents‚ÄãEnumeration Members‚ÄãHIGHLOWLOWESTMEDIUMEnumeration Members‚ÄãHIGH‚Äã‚Ä¢ HIGH = 10000Defined in‚Äãconstants.ts:14LOW‚Äã‚Ä¢ LOW = 500Defined in‚Äãconstants.ts:12LOWEST‚Äã‚Ä¢ LOWEST = 100Defined in‚Äãconstants.ts:11MEDIUM‚Äã‚Ä¢ MEDIUM = 3000Defined in‚Äãconstants.ts:13Helpful?PreviousTradeNextAllowedPermitArgumentsTable of contentsEnumeration MembersEnumeration MembersHIGHLOWLOWESTMEDIUMDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
363,p.org contracts v3 reference periphery interfaces IERC721Permit,"p.org contracts v3 reference periphery interfaces IERC721Permit.    IERC721Permit | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesIERC20MetadataIERC721PermitIMulticallINonfungiblePositionManagerINonfungibleTokenPositionDescriptorIPeripheryImmutableStateIPeripheryPaymentsIPeripheryPaymentsWithFeeIPoolInitializerIQuoterIQuoterV2ISelfPermitISwapRouterITickLensIV3MigratorexternalLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryInterfacesIERC721PermitHelpful?On this pageIERC721PermitExtension to ERC721 that includes a permit function for signature based approvalsFunctions‚ÄãPERMIT_TYPEHASH‚Äã function PERMIT_TYPEHASH( ) external returns (bytes32)CopyThe permit typehash used in the permit signatureReturn Values:‚ÄãTypeDescriptionbytes32typehash for the permitDOMAIN_SEPARATOR‚Äã function DOMAIN_SEPARATOR( ) external returns (bytes32)CopyThe domain separator used in the permit signatureReturn Values:‚ÄãNameTypeDescriptionThedomain seperator used in encoding of permit signaturepermit‚Äã function permit( address spender, uint256 tokenId, uint256 deadline, uint8 v, bytes32 r, bytes32 s ) externalCopyApprove of a specific token ID for spending by spender via signatureParameters:‚ÄãNameTypeDescriptionspenderaddressThe account that is being approvedtokenIduint256The ID of the token that is being approved for spendingdeadlineuint256The deadline timestamp by which the call must be mined for the approve to workvuint8Must produce valid secp256k1 signature from the holder along with r and srbytes32Must produce valid secp256k1 signature from the holder along with v and ssbytes32Must produce valid secp256k1 signature from the holder along with r and vEdit this pageHelpful?PreviousIERC20MetadataNextIMulticallFunctionsPERMIT_TYPEHASHDOMAIN_SEPARATORpermitDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
364,p.org contracts v3 reference periphery test TestERC20,p.org contracts v3 reference periphery test TestERC20.    TestERC20 | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerTestBase64TestLiquidityAmountsTestMockTimeNonfungiblePositionManagerMockTimeSwapRouterNFTDescriptorTestPathTestPeripheryImmutableStateTestPoolAddressTestSelfPermitTestTestCallbackValidationTestERC20TestERC20MetadataTestERC20PermitAllowedTestMulticallTestPositionNFTOwnerTestUniswapV3CalleeTickLensTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryTestTestERC20Helpful?On this pageTestERC20Functions‚Äãconstructor‚Äã function constructor( ) publicCopyEdit this pageHelpful?PreviousTestCallbackValidationNextTestERC20MetadataFunctionsconstructorDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
365,p.org sdk swap widget guides getting started#customizing width,"p.org sdk swap widget guides getting started#customizing width.    Getting Started with the Swap Widget | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap WidgetOverviewGuidesGetting StartedExample ThemesTechnical Referenceweb3-reactCore SDKV2 SDKV1 SDKüè†Swap WidgetGuidesGetting StartedHelpful?On this pageGetting Started with the Swap WidgetThis guide walks you through the steps to embed the swap widget in your website in 2 minutes ‚Äî whether your site is already a decentralized application (dApp) or not. With the swap widget, your users can trade ERC-20 tokens on the Uniswap Protocol without leaving your site!Here‚Äôs a live preview of the swap widget.Example use cases include:Building a custom frontend for the Uniswap ProtocolSwapping assets in a DeFi applicationAcquiring a token to participate in your web3 community (e.g. FWB or a gaming token)Converting to the required currency for an NFT purchase (e.g. WETH)You can make the widget feel like a native part of your app by customizing the colors, font, and token list to match your app theme. This guide will teach you how.Installing the Widgets Library‚ÄãTo get started, install the widgets library using npm or Yarn. If you don‚Äôt already use it, you‚Äôll need to install react-redux as well.npmYarnnpm install --save @uniswap/widgets react-reduxCopyyarn add @uniswap/widgets react-reduxCopyAdding the Swap Widget to Your App‚ÄãNext, embed the React component in your application.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'function App() { <div className=""Uniswap""> <SwapWidget /> </div>}CopyThat‚Äôs it! You should now see a fully functional swap widget on your site. The widget is self-contained and gracefully handles all interactions with the Uniswap Protocol. It leverages the Auto Router to compute the best price across all Uniswap v2 and v3 pools.See a full implementation of the swap widget in the /cra and /nextjs branches of the widgets-demo repo.Create React App V4All code snippets will work seamlessly if you use Next.js or Create React App V5. However, if you‚Äôre using Create React App V4, you‚Äôll need to use the following import statements instead:import { SwapWidget } from '@uniswap/widgets/dist/index.js'import '@uniswap/widgets/dist/fonts.css'CopyRecommended ParametersThe swap widget is a React component that can be easily imported into any React project. It's designed to work out-of-the-box, with no required parameters or web3 integration necessary. Trading is supported on all networks where the Uniswap Protocol is deployed.Although the widget will work out-of-the-box with no parameters, we highly recommend integrators provide JSON-RPC endpoints, like from Infura or Alchemy. Existing dApps can also provide their existing web3 provider to integrate the widget seamlessly into their dApp.Additional optional parameters are available to customize the appearance and performance of the swap widget to fit your unique use case.Web3 Provider‚ÄãThe swap widget uses a web3 provider prop to allow users to connect their wallets, fetch balances, and submit transactions through the user‚Äôs connected wallet.If your app does not maintain its own web3 provider, you can omit the provider prop. The widget will use built-in wallet connection functionality (for WalletConnect and MetaMask), making it easy for you to integrate web3 in your app!If you already have a web3 provider, you can pass your provider object directly into the provider prop. Both ethers and web3.js provider objects are compatible with the widget, as is any EIP-1193 provider. You can directly use the providers returned from web3-react or wagmi (both are ethers providers). If it is not connected to a wallet, it will still be used to read data from the chain, but the widget will still prompt the user to ""Connect wallet"".Be sure to use the wallet-connected providerWhen using wagmi@v0.11, useProvider() will return the fallback provider, not the wallet-connected provider. You should instead pass useSigner<JsonRpcSigner>().data?.provider to reflect the user's connected wallet.If you maintain a web3 provider on your app, you should also consider intercepting the swap widget's wallet connection flow. Do so by passing a handler returning false to the onConnectWalletClick prop, which is triggered when the widget's ""Connect wallet"" button is clicked. Check out libraries such as web3-react, BlockNative‚Äôs Onboard, or Aragon‚Äôs useWallet() to build your own flow. To hide the swap widget's wallet connection flow entirely, pass true to the hideConnectionUI prop.The widget will match the network currently selected by the passed provider. If the user switches networks in your app or in their connected wallet, that change will propagate to the widget as well. If the user connects to a network that is not supported by the swap widget, the widget will gracefully disable itself.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'// We recommend you pass a web3 provider.import { provider } from './your/provider'// We recommend you pass your own JSON-RPC endpoints.const jsonRpcUrlMap = { 1: ['https://mainnet.infura.io/v3/<YOUR_INFURA_PROJECT_ID>'], 3: ['https://ropsten.infura.io/v3/<YOUR_INFURA_PROJECT_ID>']}function App() { <div className=""Uniswap""> <SwapWidget provider={provider} jsonRpcUrlMap={jsonRpcUrlMap} /> </div>}CopyJSON-RPC Endpoints‚ÄãJSON-RPC endpoints are used to read data when no provider is connected. We strongly recommend you pass either a Web3 Provider to the provider prop, or JSON-RPC endpoint URLs to the jsonRpcUrlMap prop.The widget will use these endpoints to fetch on-chain data and submit transactions for signature. If the user connects a MetaMask wallet, the widget will use the JSON-RPC provided by MetaMask when possible. (See a list of all chains supported on widget.) If you don‚Äôt yet have JSON-RPC endpoints, you can easily create them with services like Infura or Alchemy.If you choose not to provide a jsonRpcUrlMap prop or are missing endpoints for some chains, the widget uses free public JSON-RPC endpoints to still allow users to interact with the widget and fetch price quotes. However, these public endpoints are NOT recommended for production environment usage, are severely rate-limited, and aren't necessarily as reliable. When possible, we'd recommend providing your own endpoints!Customizing the Swap WidgetYou can set optional parameters to tailor the appearance and functionality of the swap widget to fit your dApp.Customizing the Width‚ÄãThe swap widget has a fixed height of 360px and a default width of 360px. You cannot modify the height of the widget. You can modify the width up to a minimum width of 300px.You can customize the width by passing a number (of pixels) or a valid CSS width to the width prop of the widget.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'function App() { <div className=""Uniswap""> <SwapWidget  width={360} // Custom width in pixels /> </div>}CopyFor example:width={360} sets the width to 360 pixelswidth=""100%"" sets the width to dynamically fill 100% of the parent containerwidth=""20em"" sets the width to 20 * 16 = 320 pixels because 16px is the base font-size of the widgetThe recommended and default width is 360 pixels.Customizing the Theme‚ÄãYou can customize the colors, font, and border radius of the swap widget to match the look and feel of your dApp. You can also toggle between light and dark modes. This section explains how to customize each attribute of the widget with your own theme.All attributes below are color codes, except fontFamily (string), borderRadius (number between 0 and 1), and tokenColorExtraction(boolean). The next two sections show code examples using these attributes.Check out examples of the swap widget, and the Figma file if you want to mock it up first!Overriding Attributes‚ÄãYou can override specific attributes of the widget by creating a Theme object and defining the properties you wish to override. Any properties left undefined will fallback to the default theme. For example, here is a simple Theme that removes the border radius and sets a custom font family.import { Theme, SwapWidget } from '@uniswap/widgets'// Define a custom theme to override default attributesconst theme: Theme = { borderRadius: 0, fontFamily: '""Helvetica""',}function App() { <div className=""Uniswap""> <SwapWidget theme={theme} /> </div>}CopyPlease note that the borderRadius attribute is a multiplier from 0 to 1 of how much radius to apply. Since the widget uses different values of border radius (e.g. internal edges have tighter radii than external edges), borderRadius will apply your multiplier value on all instances so that the border radii still look proportionally correct.Importing FontsThe swap widget fonts must be imported explicitly with import '@uniswap/widgets/fonts.css'. However, if you‚Äôre overriding the swap widget fonts with your own, or with a default font such as Helvetica in the example above, you can remove this import statement.Enabling Token Color Extraction‚ÄãBy default, the background color of the output module will be set by the¬†module¬†attribute. You can optionally enable color extraction to flood the output module with the color of the selected output token. In the above example, DAI is the output token so the output module is flooded with DAI yellow.To enable color extraction, set the tokenColorExtraction property to true in your Theme object.import { Theme, SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'const enableColorExtractionTheme: Theme = { tokenColorExtraction: true, // Enable color extraction of the output token}function App() { <div className=""Uniswap""> <SwapWidget theme={enableColorExtractionTheme} /> </div>}CopyToggling Light and Dark Mode‚ÄãThe swap widget provides a default light theme and dark theme as a starting point. You can import each one and extend it to create your own theme. If your app can toggle between light and dark mode, you can propagate that state down to the widget by following the example below.import { darkTheme, lightTheme, Theme, SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'let darkMode = true // Dynamically toggle dark mode on and offfunction App() { <div className=""Uniswap""> <SwapWidget theme={darkMode ? darkTheme : lightTheme} /> </div>}CopyMatching System Preference for Light and Dark Mode‚ÄãYou can match the user‚Äôs system preference for light/dark mode by using the useSystemTheme hook. This will return the default widget light or dark theme according to the user‚Äôs system configuration. You can extend this base theme with further customizations, as you will see in the next section.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'function useSystemTheme() { // Access}function App() { const theme = useSystemTheme() // Get a theme that matches the user system preference <div className=""Uniswap""> <SwapWidget theme={theme} /> </div>}CopyExtending Themes‚ÄãYou can extend any theme with custom attributes. The below example extends the base light and dark themes with custom colors.import { darkTheme, lightTheme, Theme, SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'const myLightTheme: Theme = { ...lightTheme, // Extend the lightTheme accent: '#FF007A', primary: '#000000', secondary: '#565A69',}const myDarkTheme: Theme = { ...darkTheme, // Extend the darkTheme accent: '#2172E5', primary: '#FFFFFF', secondary: '#888D9B',}let darkMode = truefunction App() { <div className=""Uniswap""> <SwapWidget theme={darkMode ? myDarkTheme : myLightTheme} /> </div>}CopyCustomizing the Token Lists‚ÄãBy default, the widget will use the Uniswap Labs default token list in the selector.Customizing the Default Token List‚ÄãIf you want to offer a different set of tokens in the widget, you can provide a custom tokenList parameter. You can browse popular token lists to find one that suits your needs and then pass the URL as a parameter.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'const CMC_TOKEN_LIST = 'https://api.coinmarketcap.com/data-api/v3/uniswap/all.json'function App() { <div className=""Uniswap""> <SwapWidget  tokenList={CMC_TOKEN_LIST} // Use the CoinMarketCap token list /> </div>}CopyAlternatively, you can create your own token list. There are two ways to provide your own token list for the widget.The first option is to create a full token list, host it at your own URI, and pass the URI as a parameter as in the above example. This option is recommended if you want to use the same token list in multiple places throughout your application or community.The second and easiest option is to construct a custom token list inline as an array of tokens. The schema is equivalent to the tokens array from the tokenlist JSON schema. This option lets you skip deployment, hosting, and versioning of a full URI token list. Here is an example of an inline token list containing only the DAI, USDT, and USDC tokens (in addition to ETH which is always available, regardless of token list).import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'// You can also pass a token list as JSON, as long as it matches the schemaconst MY_TOKEN_LIST = [ { ""name"": ""Dai Stablecoin"", ""address"": ""0x6B175474E89094C44Da98b954EedeAC495271d0F"", ""symbol"": ""DAI"", ""decimals"": 18, ""chainId"": 1, ""logoURI"": ""https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x6B175474E89094C44Da98b954EedeAC495271d0F/logo.png"" }, { ""name"": ""Tether USD"", ""address"": ""0xdAC17F958D2ee523a2206206994597C13D831ec7"", ""symbol"": ""USDT"", ""decimals"": 6, ""chainId"": 1, ""logoURI"": ""https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png"" }, { ""name"": ""USD Coin"", ""address"": ""0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"", ""symbol"": ""USDC"", ""decimals"": 6, ""chainId"": 1, ""logoURI"": ""https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/logo.png"" },]function App() { <div className=""Uniswap""> <SwapWidget tokenList={MY_TOKEN_LIST} /> </div>}CopyPlease note that the swap widget only enforces metadata validation on remotely hosted token lists, not on token list data passed as a literal value to the widget like in this example.If you want to add Layer 2 tokens to the token list, you can add an extension field. See this GitHub issue for details.Customizing the Default Input and Output Tokens‚ÄãYou can set the defaultInputTokenAddress, defaultInputAmount, defaultOutputTokenAddress, and defaultOutputAmount to pre-populate the input and output token fields respectively. This is useful when the widget appears in a context where you know which tokens the user is evaluating to trade. For example, if the widget appears on a page that displays the WBTC price chart, it would be helpful to pre-select WBTC as the output token in the widget.If your page does not need any particular defaults, then the recommended default input token is the native asset of the active network (e.g. ETH) and no default output token is recommended. Since ETH does not have an address, you can pass 'NATIVE' as the parameter to set it as the default input or output token.The following example sets the default input to 2 ETH and the default output token to WBTC.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'// Default token list from Uniswapconst UNISWAP_TOKEN_LIST = 'https://gateway.ipfs.io/ipns/tokens.uniswap.org'// Use the native token of the connected chain as the default input tokenconst NATIVE = 'NATIVE' // Special address for native token// WBTC as the default output tokenconst WBTC = '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599'function App() { <div className=""Uniswap""> <SwapWidget  tokenList={UNISWAP_TOKEN_LIST}  defaultInputTokenAddress={NATIVE}  defaultInputAmount={2}  defaultOutputTokenAddress={WBTC} /> </div>}CopyUnderstanding the Swap Widget States‚ÄãThe widget has two main connectivity states depending on if the user has connected a wallet.Before wallet connection, the widget will use the JSON-RPC endpoint to fetch token price data and provide trade quotes, but submitting transactions will be disabled.After wallet connection, the widget will be fully functional. The user will be able to fetch trade quotes and submit swap transactions using the JSON-RPC endpoint and web3 provider from their connected wallet.Questions?Join the Discord channel to ask questions and get support from the Uniswap community.Helpful?PreviousOverviewNextExample ThemesInstalling the Widgets LibraryAdding the Swap Widget to Your AppWeb3 ProviderJSON-RPC EndpointsCustomizing the WidthCustomizing the ThemeOverriding AttributesEnabling Token Color ExtractionToggling Light and Dark ModeMatching System Preference for Light and Dark ModeExtending ThemesCustomizing the Token ListsCustomizing the Default Token ListCustomizing the Default Input and Output TokensUnderstanding the Swap Widget StatesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
366,p.org sdk v3 reference classes Position#ticklower,"p.org sdk v3 reference classes Position#ticklower.    Position | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPositionHelpful?On this pagePosition@uniswap/v3-sdk / Exports / PositionClass: PositionRepresents a position on a Uniswap V3 PoolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessors‚Äãamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethods‚ÄãburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsConstructors‚Äãconstructor‚Äã‚Ä¢ new Position(__namedParameters)Constructs a position for a given pool with the given liquidityParameters‚ÄãNameType__namedParametersPositionConstructorArgsDefined in‚Äãentities/position.ts:40Properties‚Äã_mintAmounts‚Äã‚Ä¢ Private _mintAmounts: null | Readonly<{ amount0: default ; amount1: default }> = nullDefined in‚Äãentities/position.ts:31_token0Amount‚Äã‚Ä¢ Private _token0Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:29_token1Amount‚Äã‚Ä¢ Private _token1Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:30liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/position.ts:26pool‚Äã‚Ä¢ Readonly pool: PoolDefined in‚Äãentities/position.ts:23tickLower‚Äã‚Ä¢ Readonly tickLower: numberDefined in‚Äãentities/position.ts:24tickUpper‚Äã‚Ä¢ Readonly tickUpper: numberDefined in‚Äãentities/position.ts:25Accessors‚Äãamount0‚Äã‚Ä¢ get amount0(): CurrencyAmount<Token>Returns the amount of token0 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:68amount1‚Äã‚Ä¢ get amount1(): CurrencyAmount<Token>Returns the amount of token1 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:100mintAmounts‚Äã‚Ä¢ get mintAmounts(): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at the current price for the poolReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>Defined in‚Äãentities/position.ts:258token0PriceLower‚Äã‚Ä¢ get token0PriceLower(): Price<Token, Token>Returns the price of token0 at the lower tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:54token0PriceUpper‚Äã‚Ä¢ get token0PriceUpper(): Price<Token, Token>Returns the price of token0 at the upper tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:61Methods‚ÄãburnAmountsWithSlippage‚Äã‚ñ∏ burnAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercenttolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:213mintAmountsWithSlippage‚Äã‚ñ∏ mintAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to safely mint the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentTolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:157ratiosAfterSlippage‚Äã‚ñ∏ Private ratiosAfterSlippage(slippageTolerance): ObjectReturns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentageParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe amount by which the price can 'slip' before the transaction will revertReturns‚ÄãObjectThe sqrt ratios after slippageNameTypesqrtRatioX96LowerdefaultsqrtRatioX96UpperdefaultDefined in‚Äãentities/position.ts:134fromAmount0‚Äã‚ñ∏ Static fromAmount0(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited amount of token1Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:354fromAmount1‚Äã‚ñ∏ Static fromAmount1(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited amount of token0Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumberReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:378fromAmounts‚Äã‚ñ∏ Static fromAmounts(__namedParameters): PositionComputes the maximum amount of liquidity received for a given amount of token0, token1, and the prices at the tick boundaries.Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe amount of liquidity for the positionDefined in‚Äãentities/position.ts:312Helpful?PreviousPoolNextPositionLibraryTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessorsamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethodsburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
367,p.org contracts v3 reference periphery interfaces IPeripheryPaymentsWithFee,"p.org contracts v3 reference periphery interfaces IPeripheryPaymentsWithFee.    IPeripheryPaymentsWithFee | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesIERC20MetadataIERC721PermitIMulticallINonfungiblePositionManagerINonfungibleTokenPositionDescriptorIPeripheryImmutableStateIPeripheryPaymentsIPeripheryPaymentsWithFeeIPoolInitializerIQuoterIQuoterV2ISelfPermitISwapRouterITickLensIV3MigratorexternalLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryInterfacesIPeripheryPaymentsWithFeeHelpful?On this pageIPeripheryPaymentsWithFeeFunctions to ease deposits and withdrawals of ETHFunctions‚ÄãunwrapWETH9WithFee‚Äã function unwrapWETH9WithFee( ) externalCopyUnwraps the contract's WETH9 balance and sends it to recipient as ETH, with a percentage between 0 (exclusive), and 1 (inclusive) going to feeRecipientThe amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.sweepTokenWithFee‚Äã function sweepTokenWithFee( ) externalCopyTransfers the full amount of a token held by this contract to recipient, with a percentage between 0 (exclusive) and 1 (inclusive) going to feeRecipientThe amountMinimum parameter prevents malicious contracts from stealing the token from usersEdit this pageHelpful?PreviousIPeripheryPaymentsNextIPoolInitializerFunctionsunwrapWETH9WithFeesweepTokenWithFeeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
368,p.org sdk v3 reference classes Pool#getoutputamount,"p.org sdk v3 reference classes Pool#getoutputamount.    Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPoolHelpful?On this pagePool@uniswap/v3-sdk / Exports / PoolClass: PoolRepresents a V3 poolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1Accessors‚ÄãchainIdtickSpacingtoken0Pricetoken1PriceMethods‚ÄãgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressConstructors‚Äãconstructor‚Äã‚Ä¢ new Pool(tokenA, tokenB, fee, sqrtRatioX96, liquidity, tickCurrent, ticks?)Construct a poolParameters‚ÄãNameTypeDefault valueDescriptiontokenATokenundefinedOne of the tokens in the pooltokenBTokenundefinedThe other token in the poolfeeFeeAmountundefinedThe fee in hundredths of a bips of the input amount of every swap that is collected by the poolsqrtRatioX96BigintIshundefinedThe sqrt of the current ratio of amounts of token1 to token0liquidityBigintIshundefinedThe current value of in range liquiditytickCurrentnumberundefinedThe current tick of the poolticksTickDataProvider | (Tick | TickConstructorArgs)[]NO_TICK_DATA_PROVIDER_DEFAULTThe current state of the pool ticks or a data provider that can return tick dataDefined in‚Äãentities/pool.ts:70Properties‚Äã_token0Price‚Äã‚Ä¢ Private Optional _token0Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:41_token1Price‚Äã‚Ä¢ Private Optional _token1Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:42fee‚Äã‚Ä¢ Readonly fee: FeeAmountDefined in‚Äãentities/pool.ts:35liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/pool.ts:37sqrtRatioX96‚Äã‚Ä¢ Readonly sqrtRatioX96: defaultDefined in‚Äãentities/pool.ts:36tickCurrent‚Äã‚Ä¢ Readonly tickCurrent: numberDefined in‚Äãentities/pool.ts:38tickDataProvider‚Äã‚Ä¢ Readonly tickDataProvider: TickDataProviderDefined in‚Äãentities/pool.ts:39token0‚Äã‚Ä¢ Readonly token0: TokenDefined in‚Äãentities/pool.ts:33token1‚Äã‚Ä¢ Readonly token1: TokenDefined in‚Äãentities/pool.ts:34Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns the chain ID of the tokens in the pool.Returns‚ÄãnumberDefined in‚Äãentities/pool.ts:149tickSpacing‚Äã‚Ä¢ get tickSpacing(): numberReturns‚ÄãnumberDefined in‚Äãentities/pool.ts:317token0Price‚Äã‚Ä¢ get token0Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:109token1Price‚Äã‚Ä¢ get token1Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:124Methods‚ÄãgetInputAmount‚Äã‚ñ∏ getInputAmount(outputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given a desired output amount of a token, return the computed input amount and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptionoutputAmountCurrencyAmount<Token>the output amount for which to quote the input amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The input amount and the pool with updated stateDefined in‚Äãentities/pool.ts:185getOutputAmount‚Äã‚ñ∏ getOutputAmount(inputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given an input amount of a token, return the computed output amount, and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptioninputAmountCurrencyAmount<Token>The input amount for which to quote the output amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limitReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The output amount and the pool with updated stateDefined in‚Äãentities/pool.ts:159involvesToken‚Äã‚ñ∏ involvesToken(token): booleanReturns true if the token is either token0 or token1Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to checkReturns‚ÄãbooleanTrue if token is either token0 or tokenDefined in‚Äãentities/pool.ts:102priceOf‚Äã‚ñ∏ priceOf(token): Price<Token, Token>Return the price of the given token in terms of the other token in the pool.Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to return price ofReturns‚ÄãPrice<Token, Token>The price of the given token, in terms of the other.Defined in‚Äãentities/pool.ts:141swap‚Äã‚ñ∏ Private swap(zeroForOne, amountSpecified, sqrtPriceLimitX96?): Promise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>Executes a swapParameters‚ÄãNameTypeDescriptionzeroForOnebooleanWhether the amount in is token0 or token1amountSpecifieddefaultThe amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>amountCalculatedsqrtRatioX96liquiditytickCurrentDefined in‚Äãentities/pool.ts:215getAddress‚Äã‚ñ∏ Static getAddress(tokenA, tokenB, fee, initCodeHashManualOverride?, factoryAddressOverride?): stringParameters‚ÄãNameTypetokenATokentokenBTokenfeeFeeAmountinitCodeHashManualOverride?stringfactoryAddressOverride?stringReturns‚ÄãstringDefined in‚Äãentities/pool.ts:44Helpful?PreviousPaymentsNextPositionTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1AccessorschainIdtickSpacingtoken0Pricetoken1PriceMethodsgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
369,p.org sdk core reference classes Price#tosignificant,"p.org sdk core reference classes Price#tosignificant.    Price | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPriceHelpful?On this pagePrice@uniswap/sdk-core / Exports / PriceClass: Price<TBase, TQuote>Type parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyHierarchy‚ÄãFraction‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessors‚ÄãadjustedForDecimalsasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Price<TBase, TQuote>(...args)Construct a price, either with the base and quote currency amount, or theType parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyParameters‚ÄãNameType...args[TBase, TQuote, BigintIsh, BigintIsh] | [{ baseAmount: CurrencyAmount<TBase> ; quoteAmount: CurrencyAmount<TQuote> }]Overrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/price.ts:18Properties‚ÄãbaseCurrency‚Äã‚Ä¢ Readonly baseCurrency: TBaseDefined in‚Äãentities/fractions/price.ts:10denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25quoteCurrency‚Äã‚Ä¢ Readonly quoteCurrency: TQuoteDefined in‚Äãentities/fractions/price.ts:11scalar‚Äã‚Ä¢ Readonly scalar: FractionDefined in‚Äãentities/fractions/price.ts:12Accessors‚ÄãadjustedForDecimals‚Äã‚Ä¢ Private get adjustedForDecimals(): FractionGet the value scaled by decimals for formattingReturns‚ÄãFractionDefined in‚Äãentities/fractions/price.ts:77asFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.addDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.divideDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): Price<TQuote, TBase>Flip the price, switching the base and quote currencyReturns‚ÄãPrice<TQuote, TBase>Overrides‚ÄãFraction.invertDefined in‚Äãentities/fractions/price.ts:49lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply<TOtherQuote>(other): Price<TBase, TOtherQuote>Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currencyType parameters‚ÄãNameTypeTOtherQuoteextends CurrencyParameters‚ÄãNameTypeDescriptionotherPrice<TQuote, TOtherQuote>the other priceReturns‚ÄãPrice<TBase, TOtherQuote>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/price.ts:57quote‚Äã‚ñ∏ quote(currencyAmount): CurrencyAmount<TQuote>Return the amount of quote currency corresponding to a given amount of the base currencyParameters‚ÄãNameTypeDescriptioncurrencyAmountCurrencyAmount<TBase>the amount of base currency to quote against the priceReturns‚ÄãCurrencyAmount<TQuote>Defined in‚Äãentities/fractions/price.ts:67subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.subtractDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber4format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/price.ts:85toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/price.ts:81Helpful?PreviousPercentNextTokenType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessorsadjustedForDecimalsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
370,p.org sdk core reference classes Price#asfraction,"p.org sdk core reference classes Price#asfraction.    Price | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPriceHelpful?On this pagePrice@uniswap/sdk-core / Exports / PriceClass: Price<TBase, TQuote>Type parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyHierarchy‚ÄãFraction‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessors‚ÄãadjustedForDecimalsasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Price<TBase, TQuote>(...args)Construct a price, either with the base and quote currency amount, or theType parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyParameters‚ÄãNameType...args[TBase, TQuote, BigintIsh, BigintIsh] | [{ baseAmount: CurrencyAmount<TBase> ; quoteAmount: CurrencyAmount<TQuote> }]Overrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/price.ts:18Properties‚ÄãbaseCurrency‚Äã‚Ä¢ Readonly baseCurrency: TBaseDefined in‚Äãentities/fractions/price.ts:10denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25quoteCurrency‚Äã‚Ä¢ Readonly quoteCurrency: TQuoteDefined in‚Äãentities/fractions/price.ts:11scalar‚Äã‚Ä¢ Readonly scalar: FractionDefined in‚Äãentities/fractions/price.ts:12Accessors‚ÄãadjustedForDecimals‚Äã‚Ä¢ Private get adjustedForDecimals(): FractionGet the value scaled by decimals for formattingReturns‚ÄãFractionDefined in‚Äãentities/fractions/price.ts:77asFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.addDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.divideDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): Price<TQuote, TBase>Flip the price, switching the base and quote currencyReturns‚ÄãPrice<TQuote, TBase>Overrides‚ÄãFraction.invertDefined in‚Äãentities/fractions/price.ts:49lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply<TOtherQuote>(other): Price<TBase, TOtherQuote>Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currencyType parameters‚ÄãNameTypeTOtherQuoteextends CurrencyParameters‚ÄãNameTypeDescriptionotherPrice<TQuote, TOtherQuote>the other priceReturns‚ÄãPrice<TBase, TOtherQuote>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/price.ts:57quote‚Äã‚ñ∏ quote(currencyAmount): CurrencyAmount<TQuote>Return the amount of quote currency corresponding to a given amount of the base currencyParameters‚ÄãNameTypeDescriptioncurrencyAmountCurrencyAmount<TBase>the amount of base currency to quote against the priceReturns‚ÄãCurrencyAmount<TQuote>Defined in‚Äãentities/fractions/price.ts:67subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.subtractDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber4format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/price.ts:85toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/price.ts:81Helpful?PreviousPercentNextTokenType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessorsadjustedForDecimalsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
371,p.org sdk v3 reference interfaces SafeTransferOptions#data,p.org sdk v3 reference interfaces SafeTransferOptions#data.    SafeTransferOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesSafeTransferOptionsHelpful?On this pageSafeTransferOptions@uniswap/v3-sdk / Exports / SafeTransferOptionsInterface: SafeTransferOptionsTable of contents‚ÄãProperties‚ÄãdatarecipientsendertokenIdProperties‚Äãdata‚Äã‚Ä¢ Optional data: stringThe optional parameter that passes data to the onERC721Received call for the stakerDefined in‚ÄãnonfungiblePositionManager.ts:97recipient‚Äã‚Ä¢ recipient: stringThe account that should receive the NFT.Defined in‚ÄãnonfungiblePositionManager.ts:88sender‚Äã‚Ä¢ sender: stringThe account sending the NFT.Defined in‚ÄãnonfungiblePositionManager.ts:83tokenId‚Äã‚Ä¢ tokenId: BigintIshThe id of the token being sent.Defined in‚ÄãnonfungiblePositionManager.ts:93Helpful?PreviousRemoveLiquidityOptionsNextStandardPermitArgumentsTable of contentsPropertiesPropertiesdatarecipientsendertokenIdDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
372,p.org sdk core reference classes CurrencyAmount#subtract,"p.org sdk core reference classes CurrencyAmount#subtract.    CurrencyAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesCurrencyAmountHelpful?On this pageCurrencyAmount@uniswap/sdk-core / Exports / CurrencyAmountClass: CurrencyAmount<T>Type parameters‚ÄãNameTypeTextends CurrencyHierarchy‚ÄãFraction‚Ü≥ CurrencyAmountTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãcurrencydecimalScaledenominatornumeratorAccessors‚ÄãasFractionquotientremainderwrappedMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new CurrencyAmount<T>(currency, numerator, denominator?)Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypecurrencyTnumeratorBigintIshdenominator?BigintIshOverrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/currencyAmount.ts:40Properties‚Äãcurrency‚Äã‚Ä¢ Readonly currency: TDefined in‚Äãentities/fractions/currencyAmount.ts:14decimalScale‚Äã‚Ä¢ Readonly decimalScale: defaultDefined in‚Äãentities/fractions/currencyAmount.ts:15denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47wrapped‚Äã‚Ä¢ get wrapped(): CurrencyAmount<Token>Returns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/fractions/currencyAmount.ts:91Methods‚Äãadd‚Äã‚ñ∏ add(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.addDefined in‚Äãentities/fractions/currencyAmount.ts:47divide‚Äã‚ñ∏ divide(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/currencyAmount.ts:64equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/currencyAmount.ts:59subtract‚Äã‚ñ∏ subtract(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/currencyAmount.ts:53toExact‚Äã‚ñ∏ toExact(format?): stringParameters‚ÄãNameTypeformatobjectReturns‚ÄãstringDefined in‚Äãentities/fractions/currencyAmount.ts:86toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformat?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/currencyAmount.ts:77toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/currencyAmount.ts:69fromFractionalAmount‚Äã‚ñ∏ Static fromFractionalAmount<T>(currency, numerator, denominator): CurrencyAmount<T>Construct a currency amount with a denominator that is not equal to 1Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currencynumeratorBigintIshthe numerator of the fractional token amountdenominatorBigintIshthe denominator of the fractional token amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:32fromRawAmount‚Äã‚ñ∏ Static fromRawAmount<T>(currency, rawAmount): CurrencyAmount<T>Returns a new currency amount instance from the unitless amount of token, i.e. the raw amountType parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currency in the amountrawAmountBigintIshthe raw token or ether amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:22Helpful?PreviousOverviewNextEtherType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiescurrencydecimalScaledenominatornumeratorAccessorsasFractionquotientremainderwrappedMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
373,p.org contracts universal router technical reference#sudoswap,"p.org contracts universal router technical reference#sudoswap.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
374,p.org sdk v3 reference classes SqrtPriceMath#getnextsqrtpricefromamount0roundingup,"p.org sdk v3 reference classes SqrtPriceMath#getnextsqrtpricefromamount0roundingup.    SqrtPriceMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesSqrtPriceMathHelpful?On this pageSqrtPriceMath@uniswap/v3-sdk / Exports / SqrtPriceMathClass: SqrtPriceMathTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãgetAmount0DeltagetAmount1DeltagetNextSqrtPriceFromAmount0RoundingUpgetNextSqrtPriceFromAmount1RoundingDowngetNextSqrtPriceFromInputgetNextSqrtPriceFromOutputConstructors‚Äãconstructor‚Äã‚Ä¢ Private new SqrtPriceMath()Cannot be constructed.Defined in‚Äãutils/sqrtPriceMath.ts:23Methods‚ÄãgetAmount0Delta‚Äã‚ñ∏ Static getAmount0Delta(sqrtRatioAX96, sqrtRatioBX96, liquidity, roundUp): defaultParameters‚ÄãNameTypesqrtRatioAX96defaultsqrtRatioBX96defaultliquiditydefaultroundUpbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:25getAmount1Delta‚Äã‚ñ∏ Static getAmount1Delta(sqrtRatioAX96, sqrtRatioBX96, liquidity, roundUp): defaultParameters‚ÄãNameTypesqrtRatioAX96defaultsqrtRatioBX96defaultliquiditydefaultroundUpbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:38getNextSqrtPriceFromAmount0RoundingUp‚Äã‚ñ∏ Static Private getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96, liquidity, amount, add): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountdefaultaddbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:71getNextSqrtPriceFromAmount1RoundingDown‚Äã‚ñ∏ Static Private getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96, liquidity, amount, add): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountdefaultaddbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:100getNextSqrtPriceFromInput‚Äã‚ñ∏ Static getNextSqrtPriceFromInput(sqrtPX96, liquidity, amountIn, zeroForOne): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountIndefaultzeroForOnebooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:48getNextSqrtPriceFromOutput‚Äã‚ñ∏ Static getNextSqrtPriceFromOutput(sqrtPX96, liquidity, amountOut, zeroForOne): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountOutdefaultzeroForOnebooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:57Helpful?PreviousSelfPermitNextStakerTable of contentsConstructorsMethodsConstructorsconstructorMethodsgetAmount0DeltagetAmount1DeltagetNextSqrtPriceFromAmount0RoundingUpgetNextSqrtPriceFromAmount1RoundingDowngetNextSqrtPriceFromInputgetNextSqrtPriceFromOutputDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
375,p.org sdk v3 reference classes SwapQuoter#quotecallparameters,"p.org sdk v3 reference classes SwapQuoter#quotecallparameters.    SwapQuoter | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesSwapQuoterHelpful?On this pageSwapQuoter@uniswap/v3-sdk / Exports / SwapQuoterClass: SwapQuoterRepresents the Uniswap V3 QuoterV1 contract with a method for returning the formatted calldata needed to call the quoter contract.Table of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãV1INTERFACEV2INTERFACEMethods‚ÄãquoteCallParametersConstructors‚Äãconstructor‚Äã‚Ä¢ new SwapQuoter()Properties‚ÄãV1INTERFACE‚Äã‚ñ™ Static V1INTERFACE: InterfaceDefined in‚Äãquoter.ts:37V2INTERFACE‚Äã‚ñ™ Static V2INTERFACE: InterfaceDefined in‚Äãquoter.ts:38Methods‚ÄãquoteCallParameters‚Äã‚ñ∏ Static quoteCallParameters<TInput, TOutput>(route, amount, tradeType, options?): MethodParametersProduces the on-chain method name of the appropriate function within QuoterV2, and the relevant hex encoded parameters.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The swap route, a list of pools through which a swap can occuramountCurrencyAmount<TInput | TOutput>The amount of the quote, either an amount in, or an amount outtradeTypeTradeTypeThe trade type, either exact input or exact outputoptionsQuoteOptionsThe optional params including price limit and Quoter contract switchReturns‚ÄãMethodParametersThe formatted calldataDefined in‚Äãquoter.ts:51Helpful?PreviousSwapMathNextSwapRouterTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesV1INTERFACEV2INTERFACEMethodsquoteCallParametersDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
376,p.org sdk core reference classes Price#tofixed,"p.org sdk core reference classes Price#tofixed.    Price | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPriceHelpful?On this pagePrice@uniswap/sdk-core / Exports / PriceClass: Price<TBase, TQuote>Type parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyHierarchy‚ÄãFraction‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessors‚ÄãadjustedForDecimalsasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Price<TBase, TQuote>(...args)Construct a price, either with the base and quote currency amount, or theType parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyParameters‚ÄãNameType...args[TBase, TQuote, BigintIsh, BigintIsh] | [{ baseAmount: CurrencyAmount<TBase> ; quoteAmount: CurrencyAmount<TQuote> }]Overrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/price.ts:18Properties‚ÄãbaseCurrency‚Äã‚Ä¢ Readonly baseCurrency: TBaseDefined in‚Äãentities/fractions/price.ts:10denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25quoteCurrency‚Äã‚Ä¢ Readonly quoteCurrency: TQuoteDefined in‚Äãentities/fractions/price.ts:11scalar‚Äã‚Ä¢ Readonly scalar: FractionDefined in‚Äãentities/fractions/price.ts:12Accessors‚ÄãadjustedForDecimals‚Äã‚Ä¢ Private get adjustedForDecimals(): FractionGet the value scaled by decimals for formattingReturns‚ÄãFractionDefined in‚Äãentities/fractions/price.ts:77asFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.addDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.divideDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): Price<TQuote, TBase>Flip the price, switching the base and quote currencyReturns‚ÄãPrice<TQuote, TBase>Overrides‚ÄãFraction.invertDefined in‚Äãentities/fractions/price.ts:49lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply<TOtherQuote>(other): Price<TBase, TOtherQuote>Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currencyType parameters‚ÄãNameTypeTOtherQuoteextends CurrencyParameters‚ÄãNameTypeDescriptionotherPrice<TQuote, TOtherQuote>the other priceReturns‚ÄãPrice<TBase, TOtherQuote>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/price.ts:57quote‚Äã‚ñ∏ quote(currencyAmount): CurrencyAmount<TQuote>Return the amount of quote currency corresponding to a given amount of the base currencyParameters‚ÄãNameTypeDescriptioncurrencyAmountCurrencyAmount<TBase>the amount of base currency to quote against the priceReturns‚ÄãCurrencyAmount<TQuote>Defined in‚Äãentities/fractions/price.ts:67subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.subtractDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber4format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/price.ts:85toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/price.ts:81Helpful?PreviousPercentNextTokenType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessorsadjustedForDecimalsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
377,p.org sdk v3 reference classes SqrtPriceMath#getnextsqrtpricefromamount1roundingdown,"p.org sdk v3 reference classes SqrtPriceMath#getnextsqrtpricefromamount1roundingdown.    SqrtPriceMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesSqrtPriceMathHelpful?On this pageSqrtPriceMath@uniswap/v3-sdk / Exports / SqrtPriceMathClass: SqrtPriceMathTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãgetAmount0DeltagetAmount1DeltagetNextSqrtPriceFromAmount0RoundingUpgetNextSqrtPriceFromAmount1RoundingDowngetNextSqrtPriceFromInputgetNextSqrtPriceFromOutputConstructors‚Äãconstructor‚Äã‚Ä¢ Private new SqrtPriceMath()Cannot be constructed.Defined in‚Äãutils/sqrtPriceMath.ts:23Methods‚ÄãgetAmount0Delta‚Äã‚ñ∏ Static getAmount0Delta(sqrtRatioAX96, sqrtRatioBX96, liquidity, roundUp): defaultParameters‚ÄãNameTypesqrtRatioAX96defaultsqrtRatioBX96defaultliquiditydefaultroundUpbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:25getAmount1Delta‚Äã‚ñ∏ Static getAmount1Delta(sqrtRatioAX96, sqrtRatioBX96, liquidity, roundUp): defaultParameters‚ÄãNameTypesqrtRatioAX96defaultsqrtRatioBX96defaultliquiditydefaultroundUpbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:38getNextSqrtPriceFromAmount0RoundingUp‚Äã‚ñ∏ Static Private getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96, liquidity, amount, add): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountdefaultaddbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:71getNextSqrtPriceFromAmount1RoundingDown‚Äã‚ñ∏ Static Private getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96, liquidity, amount, add): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountdefaultaddbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:100getNextSqrtPriceFromInput‚Äã‚ñ∏ Static getNextSqrtPriceFromInput(sqrtPX96, liquidity, amountIn, zeroForOne): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountIndefaultzeroForOnebooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:48getNextSqrtPriceFromOutput‚Äã‚ñ∏ Static getNextSqrtPriceFromOutput(sqrtPX96, liquidity, amountOut, zeroForOne): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountOutdefaultzeroForOnebooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:57Helpful?PreviousSelfPermitNextStakerTable of contentsConstructorsMethodsConstructorsconstructorMethodsgetAmount0DeltagetAmount1DeltagetNextSqrtPriceFromAmount0RoundingUpgetNextSqrtPriceFromAmount1RoundingDowngetNextSqrtPriceFromInputgetNextSqrtPriceFromOutputDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
378,p.org sdk v3 guides background#abis,"p.org sdk v3 guides background#abis.    Background | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKGuidesBackgroundHelpful?On this pageBackgroundBefore integrating with Uniswap, it may be helpful for newcomers to review the following background information on some important developer web3 concepts, the structure of our examples, and SDK concepts.infoAlready familiar with web3 development and/or the basics of our SDK and want to get right to the code? Start with our first guide, Getting a Quote!Providers‚ÄãCommunication with the blockchain is typically done through a provider and local models of smart contracts and their ABIs.To achieve this, our examples use the ethers.js library. To instantiate a provider you will need a data source. Our examples offer two options:JSON RPC URL: If you are working directly with the Ethereum mainnet or a local fork, products such as infura offer JSON RPC URLs for a wide variety of chains and testnets. For our examples, we'll only be using the Ethereum mainnet.Wallet Extension: If you are connecting to a wallet browser extension, these wallets embed a source directly into the Javascript window object as window.ethereum. This object surfaces information about the user's wallets and provides the ability to communicate with the connected chain. Importantly for our examples, it can be used with ethers.js to construct a provider.Uniswap's Runnable Examples‚ÄãEach guide is accompanied and driven by runnable examples using React to provide a basic UI for interacting with the example. Each examples provides relevant options such as running against a local blockchain or connecting to the Ethereum mainnet directly. You also have the option of using a wallet extension which can be connected to either environment.Inputs and environment settings are configured in each example's config.ts and allows for simple setup and configuration.Developing and Testing‚ÄãTo test your code, we recommend utilizing a local fork of the Ethereum mainnet. To help facilitate easy testing, each example includes a quickstart for running the local chain with a test wallet. To further test, we also recommend using a wallet extension and connecting to the local chain. Finally, each example can be run against the Ethereum mainnet if desired. Full development instructs can be found in the README.md of each code example.Utility Libraries‚ÄãEach example is concentrated into a single file within the libs/ folder of the example, with the entry points noted in each guide and README.To allow the guides to focus on the SDK's core functionality, additional basic building blocks can be found in each example's libs folder. The exported functionality from these files is intended to be the minimum needed for each example and not a complete library for production usage. These also include storing core constants such as definitions for tokens, ABI's, and blockchain addresses that can distract from the core concepts. Below are summaries of the helping libraries you will encounter.Provider Utilities‚Äãprovider.ts wraps the basics of ethers.js and connecting to wallet extensions into an abstracted view of a provider, a wallet address, and the ability to send transactions. It also helps abstract the configured environment you wish to run against in your example without making code changes outside of your configuration.Wallet Utilities‚Äãwallet.ts offers the ability to query a wallet (whether connected via an extension or defined in code/config) for its balances and other essential information.Pool Information‚Äãpool.ts contains the basic querying of pool information when not essential / core to the relevant guideDisplay Utilities‚Äãconversion.ts provides display and light math wrappers to help show human readable prices when dealing with currency amounts (typically stored as raw numbers and the decimal placement separate for precision reasons) in the form of two functions: fromReadableAmount and toReadableAmountNotable SDK Structures and Concepts‚ÄãWhen working with the SDK it can be helpful to understand some of the design choices and why they are needed. Below you can find a few important concepts.ABI's‚ÄãTo allow others to interact with a smart contract, each contract exposes an ABI (Application Binary Interface). As these are defined on the blockchain, we must ensure the correct definitions are provided to our Javascript functions. ABI's are provided from various SDK's and imported in as needed. Some examples will define an ABI directly as needed.CurrencyAmount and JSBI‚ÄãCryptocurrency applications often work with very small fractions of tokens. As a result, high precision is very important. To ensure precision is upheld, the CurrencyAmount class helps store exact values as fractions and utilizes JSBI for compatibility across the web. To display these amounts nicely to users, additional work is sometimes required.Currency‚ÄãThe Currency class can represent both native currency (ETH) and an ERC20 Token. Currencies vary in their relative value, so the Token class allows your application to define the number of decimals needed for each currency along with the currency's address, symbol, and name.Helpful?PreviousOverviewNextGetting a QuoteProvidersUniswap's Runnable ExamplesDeveloping and TestingUtility LibrariesNotable SDK Structures and ConceptsABI'sCurrencyAmount and JSBICurrencyDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
379,p.org sdk v3 reference interfaces IncentiveKey#refundee,p.org sdk v3 reference interfaces IncentiveKey#refundee.    IncentiveKey | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesIncentiveKeyHelpful?On this pageIncentiveKey@uniswap/v3-sdk / Exports / IncentiveKeyInterface: IncentiveKeyRepresents a unique staking program.Table of contents‚ÄãProperties‚ÄãendTimepoolrefundeerewardTokenstartTimeProperties‚ÄãendTime‚Äã‚Ä¢ endTime: BigintIshThe time that the incentive program ends.Defined in‚Äãstaker.ts:28pool‚Äã‚Ä¢ pool: PoolThe pool that the staked positions must provide in.Defined in‚Äãstaker.ts:20refundee‚Äã‚Ä¢ refundee: stringThe address which receives any remaining reward tokens at endTime.Defined in‚Äãstaker.ts:32rewardToken‚Äã‚Ä¢ rewardToken: TokenThe token rewarded for participating in the staking program.Defined in‚Äãstaker.ts:16startTime‚Äã‚Ä¢ startTime: BigintIshThe time when the incentive program begins.Defined in‚Äãstaker.ts:24Helpful?PreviousFeeOptionsNextIncreaseSpecificOptionsTable of contentsPropertiesPropertiesendTimepoolrefundeerewardTokenstartTimeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
380,p.org sdk v3 reference classes Trade#route,"p.org sdk v3 reference classes Trade#route.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTradeHelpful?On this pageTrade@uniswap/v3-sdk / Exports / TradeClass: Trade<TInput, TOutput, TTradeType>Represents a trade executed against a set of routes where some percentage of the input is split across each route.Each route has its own set of pools. Pools can not be re-used across routes.Does not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and when it is executed.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessors‚ÄãexecutionPriceinputAmountoutputAmountpriceImpactrouteMethods‚ÄãmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Trade<TInput, TOutput, TTradeType>(__namedParameters)Construct a trade by passing in the pre-computed property valuesType parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyTTradeTypeextends TradeTypeParameters‚ÄãNameType__namedParametersObject__namedParameters.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]__namedParameters.tradeTypeTTradeTypeDefined in‚Äãentities/trade.ts:397Properties‚Äã_executionPrice‚Äã‚Ä¢ Private _executionPrice: undefined | Price<TInput, TOutput>The cached result of the computed execution priceDefined in‚Äãentities/trade.ts:143_inputAmount‚Äã‚Ä¢ Private _inputAmount: undefined | CurrencyAmount<TInput>The cached result of the input amount computationDefined in‚Äãentities/trade.ts:97_outputAmount‚Äã‚Ä¢ Private _outputAmount: undefined | CurrencyAmount<TOutput>The cached result of the output amount computationDefined in‚Äãentities/trade.ts:120_priceImpact‚Äã‚Ä¢ Private _priceImpact: undefined | PercentThe cached result of the price impact computationDefined in‚Äãentities/trade.ts:164swaps‚Äã‚Ä¢ Readonly swaps: { inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]The swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.Defined in‚Äãentities/trade.ts:82tradeType‚Äã‚Ä¢ Readonly tradeType: TTradeTypeThe type of the trade, either exact in or exact out.Defined in‚Äãentities/trade.ts:91Accessors‚ÄãexecutionPrice‚Äã‚Ä¢ get executionPrice(): Price<TInput, TOutput>The price expressed in terms of output amount/input amount.Returns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/trade.ts:148inputAmount‚Äã‚Ä¢ get inputAmount(): CurrencyAmount<TInput>The input amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TInput>Defined in‚Äãentities/trade.ts:102outputAmount‚Äã‚Ä¢ get outputAmount(): CurrencyAmount<TOutput>The output amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TOutput>Defined in‚Äãentities/trade.ts:125priceImpact‚Äã‚Ä¢ get priceImpact(): PercentReturns the percent difference between the route's mid price and the price impactReturns‚ÄãPercentDefined in‚Äãentities/trade.ts:169route‚Äã‚Ä¢ get route(): Route<TInput, TOutput>DeprecatedDeprecated in favor of 'swaps' property. If the trade consists of multiple routes this will return an error.When the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.Returns‚ÄãRoute<TInput, TOutput>Defined in‚Äãentities/trade.ts:73Methods‚ÄãmaximumAmountIn‚Äã‚ñ∏ maximumAmountIn(slippageTolerance, amountIn?): CurrencyAmount<TInput>Get the maximum amount in that can be spent via this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountInCurrencyAmount<TInput>-Returns‚ÄãCurrencyAmount<TInput>The amount inDefined in‚Äãentities/trade.ts:456minimumAmountOut‚Äã‚ñ∏ minimumAmountOut(slippageTolerance, amountOut?): CurrencyAmount<TOutput>Get the minimum amount that must be received from this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountOutCurrencyAmount<TOutput>-Returns‚ÄãCurrencyAmount<TOutput>The amount outDefined in‚Äãentities/trade.ts:438worstExecutionPrice‚Äã‚ñ∏ worstExecutionPrice(slippageTolerance): Price<TInput, TOutput>Return the execution price after accounting for slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentthe allowed tolerated slippageReturns‚ÄãPrice<TInput, TOutput>The execution priceDefined in‚Äãentities/trade.ts:471bestTradeExactIn‚Äã‚ñ∏ Static bestTradeExactIn<TInput, TOutput>(pools, currencyAmountIn, currencyOut, __namedParameters?, currentPools?, nextAmountIn?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_INPUT>[]>Given a list of pools, and a fixed amount in, returns the top maxNumResults trades that go from an input token amount to an output token, making at most maxHops hops. Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyAmountInCurrencyAmount<TInput>undefinedused in recursion; the original value of the currencyAmountIn parametercurrencyOutTOutputundefinedthe desired currency out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountInCurrencyAmount<Currency>currencyAmountInexact amount of input currency to spendbestTradesTrade<TInput, TOutput, EXACT_INPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>[]>The exact in tradeDefined in‚Äãentities/trade.ts:495bestTradeExactOut‚Äã‚ñ∏ Static bestTradeExactOut<TInput, TOutput>(pools, currencyIn, currencyAmountOut, __namedParameters?, currentPools?, nextAmountOut?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>similar to the above method but instead targets a fixed output amount given a list of pools, and a fixed amount out, returns the top maxNumResults trades that go from an input token to an output token amount, making at most maxHops hops note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyInTInputundefinedthe currency to spendcurrencyAmountOutCurrencyAmount<TOutput>undefinedthe desired currency amount out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountOutCurrencyAmount<Currency>currencyAmountOutthe exact amount of currency outbestTradesTrade<TInput, TOutput, EXACT_OUTPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>The exact out tradeDefined in‚Äãentities/trade.ts:576createUncheckedTrade‚Äã‚ñ∏ Static createUncheckedTrade<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.inputAmountCurrencyAmount<TInput>-constructorArguments.outputAmountCurrencyAmount<TOutput>-constructorArguments.routeRoute<TInput, TOutput>-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:346createUncheckedTradeWithMultipleRoutes‚Äã‚ñ∏ Static createUncheckedTradeWithMultipleRoutes<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:377exactIn‚Äã‚ñ∏ Static exactIn<TInput, TOutput>(route, amountIn): Promise<Trade<TInput, TOutput, EXACT_INPUT>>Constructs an exact in trade with the given amount in and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact in tradeamountInCurrencyAmount<TInput>The amount being passed inReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>>The exact in tradeDefined in‚Äãentities/trade.ts:194exactOut‚Äã‚ñ∏ Static exactOut<TInput, TOutput>(route, amountOut): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>>Constructs an exact out trade with the given amount out and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact out tradeamountOutCurrencyAmount<TOutput>The amount returned by the tradeReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>>The exact out tradeDefined in‚Äãentities/trade.ts:209fromRoute‚Äã‚ñ∏ Static fromRoute<TInput, TOutput, TTradeType>(route, amount, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade by simulating swaps through the given routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>route to swap throughamountTTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>the amount specified, either input or output, depending on tradeTypetradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The routeDefined in‚Äãentities/trade.ts:226fromRoutes‚Äã‚ñ∏ Static fromRoutes<TInput, TOutput, TTradeType>(routes, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade from routes by simulating swapsType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionroutes{ amount: TTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]the routes to swap through and how much of the amount should be routed through eachtradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The tradeDefined in‚Äãentities/trade.ts:276Helpful?PreviousTickMathNextFeeAmountType parametersTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessorsexecutionPriceinputAmountoutputAmountpriceImpactrouteMethodsmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
381,p.org sdk core reference classes Price,"p.org sdk core reference classes Price.    Price | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPriceHelpful?On this pagePrice@uniswap/sdk-core / Exports / PriceClass: Price<TBase, TQuote>Type parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyHierarchy‚ÄãFraction‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessors‚ÄãadjustedForDecimalsasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Price<TBase, TQuote>(...args)Construct a price, either with the base and quote currency amount, or theType parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyParameters‚ÄãNameType...args[TBase, TQuote, BigintIsh, BigintIsh] | [{ baseAmount: CurrencyAmount<TBase> ; quoteAmount: CurrencyAmount<TQuote> }]Overrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/price.ts:18Properties‚ÄãbaseCurrency‚Äã‚Ä¢ Readonly baseCurrency: TBaseDefined in‚Äãentities/fractions/price.ts:10denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25quoteCurrency‚Äã‚Ä¢ Readonly quoteCurrency: TQuoteDefined in‚Äãentities/fractions/price.ts:11scalar‚Äã‚Ä¢ Readonly scalar: FractionDefined in‚Äãentities/fractions/price.ts:12Accessors‚ÄãadjustedForDecimals‚Äã‚Ä¢ Private get adjustedForDecimals(): FractionGet the value scaled by decimals for formattingReturns‚ÄãFractionDefined in‚Äãentities/fractions/price.ts:77asFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.addDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.divideDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): Price<TQuote, TBase>Flip the price, switching the base and quote currencyReturns‚ÄãPrice<TQuote, TBase>Overrides‚ÄãFraction.invertDefined in‚Äãentities/fractions/price.ts:49lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply<TOtherQuote>(other): Price<TBase, TOtherQuote>Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currencyType parameters‚ÄãNameTypeTOtherQuoteextends CurrencyParameters‚ÄãNameTypeDescriptionotherPrice<TQuote, TOtherQuote>the other priceReturns‚ÄãPrice<TBase, TOtherQuote>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/price.ts:57quote‚Äã‚ñ∏ quote(currencyAmount): CurrencyAmount<TQuote>Return the amount of quote currency corresponding to a given amount of the base currencyParameters‚ÄãNameTypeDescriptioncurrencyAmountCurrencyAmount<TBase>the amount of base currency to quote against the priceReturns‚ÄãCurrencyAmount<TQuote>Defined in‚Äãentities/fractions/price.ts:67subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.subtractDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber4format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/price.ts:85toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/price.ts:81Helpful?PreviousPercentNextTokenType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessorsadjustedForDecimalsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
382,p.org sdk web3 react guides 01 setting up.md,p.org sdk web3 react guides 01 setting up.md. 
383,p.org sdk v3 reference modules.md#computepooladdress,p.org sdk v3 reference modules.md#computepooladdress. 
384,p.org contracts v3 reference periphery base ERC721Permit,"p.org contracts v3 reference periphery base ERC721Permit.    ERC721Permit | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseBlockTimestampERC721PermitLiquidityManagementMulticallPeripheryImmutableStatePeripheryPaymentsPeripheryPaymentsWithFeePoolInitializerSelfPermitInterfacesLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryBaseERC721PermitHelpful?On this pageERC721PermitNonfungible tokens that support an approve via signature, i.e. permitFunctions‚Äã_getAndIncrementNonce‚Äã function _getAndIncrementNonce( uint256 tokenId ) internal virtual returns (uint256)CopyGets the current nonce for a token ID and then increments it, returning the original valueconstructor‚Äã function constructor( string memory name_, string memory symbol_, string memory version_ ) internalCopyComputes the nameHash and versionHashDOMAIN_SEPARATOR‚Äã function DOMAIN_SEPARATOR( ) public view override returns (bytes32)CopyThe domain separator used in the permit signatureReturn Values:‚ÄãTypeDescriptionbytes32domain seperator used in encoding of permit signaturepermit‚Äã function permit( address spender, uint256 tokenId, uint256 deadline, uint8 v, bytes32 r, bytes32 s ) externalCopyApprove of a specific token ID for spending by spender via signatureParameters:‚ÄãNameTypeDescriptionspenderaddressThe account that is being approvedtokenIduint256The ID of the token that is being approved for spendingdeadlineuint256The deadline timestamp by which the call must be mined for the approve to workvuint8Must produce valid secp256k1 signature from the holder along with r and srbytes32Must produce valid secp256k1 signature from the holder along with v and ssbytes32Must produce valid secp256k1 signature from the holder along with r and vEdit this pageHelpful?PreviousBlockTimestampNextLiquidityManagementFunctions_getAndIncrementNonceconstructorDOMAIN_SEPARATORpermitDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
385,p.org sdk v3 reference classes Position,"p.org sdk v3 reference classes Position.    Position | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPositionHelpful?On this pagePosition@uniswap/v3-sdk / Exports / PositionClass: PositionRepresents a position on a Uniswap V3 PoolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessors‚Äãamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethods‚ÄãburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsConstructors‚Äãconstructor‚Äã‚Ä¢ new Position(__namedParameters)Constructs a position for a given pool with the given liquidityParameters‚ÄãNameType__namedParametersPositionConstructorArgsDefined in‚Äãentities/position.ts:40Properties‚Äã_mintAmounts‚Äã‚Ä¢ Private _mintAmounts: null | Readonly<{ amount0: default ; amount1: default }> = nullDefined in‚Äãentities/position.ts:31_token0Amount‚Äã‚Ä¢ Private _token0Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:29_token1Amount‚Äã‚Ä¢ Private _token1Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:30liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/position.ts:26pool‚Äã‚Ä¢ Readonly pool: PoolDefined in‚Äãentities/position.ts:23tickLower‚Äã‚Ä¢ Readonly tickLower: numberDefined in‚Äãentities/position.ts:24tickUpper‚Äã‚Ä¢ Readonly tickUpper: numberDefined in‚Äãentities/position.ts:25Accessors‚Äãamount0‚Äã‚Ä¢ get amount0(): CurrencyAmount<Token>Returns the amount of token0 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:68amount1‚Äã‚Ä¢ get amount1(): CurrencyAmount<Token>Returns the amount of token1 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:100mintAmounts‚Äã‚Ä¢ get mintAmounts(): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at the current price for the poolReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>Defined in‚Äãentities/position.ts:258token0PriceLower‚Äã‚Ä¢ get token0PriceLower(): Price<Token, Token>Returns the price of token0 at the lower tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:54token0PriceUpper‚Äã‚Ä¢ get token0PriceUpper(): Price<Token, Token>Returns the price of token0 at the upper tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:61Methods‚ÄãburnAmountsWithSlippage‚Äã‚ñ∏ burnAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercenttolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:213mintAmountsWithSlippage‚Äã‚ñ∏ mintAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to safely mint the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentTolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:157ratiosAfterSlippage‚Äã‚ñ∏ Private ratiosAfterSlippage(slippageTolerance): ObjectReturns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentageParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe amount by which the price can 'slip' before the transaction will revertReturns‚ÄãObjectThe sqrt ratios after slippageNameTypesqrtRatioX96LowerdefaultsqrtRatioX96UpperdefaultDefined in‚Äãentities/position.ts:134fromAmount0‚Äã‚ñ∏ Static fromAmount0(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited amount of token1Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:354fromAmount1‚Äã‚ñ∏ Static fromAmount1(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited amount of token0Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumberReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:378fromAmounts‚Äã‚ñ∏ Static fromAmounts(__namedParameters): PositionComputes the maximum amount of liquidity received for a given amount of token0, token1, and the prices at the tick boundaries.Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe amount of liquidity for the positionDefined in‚Äãentities/position.ts:312Helpful?PreviousPoolNextPositionLibraryTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessorsamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethodsburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
386,p.org contracts v3 reference core libraries SqrtPriceMath,"p.org contracts v3 reference core libraries SqrtPriceMath.    SqrtPriceMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesLibrariesBitMathFixedPoint128FixedPoint96FullMathLiquidityMathLowGasSafeMathOraclePositionSafeCastSecondsOutsideSqrtPriceMathSwapMathTickTickBitmapTickMathTransferHelperUnsafeMathGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreLibrariesSqrtPriceMathHelpful?On this pageSqrtPriceMathContains the math that uses square root of price as a Q64.96 and liquidity to compute deltasFunctions‚ÄãgetNextSqrtPriceFromAmount0RoundingUp‚Äã function getNextSqrtPriceFromAmount0RoundingUp( uint160 sqrtPX96, uint128 liquidity, uint256 amount, bool add ) internal pure returns (uint160)CopyGets the next sqrt price given a delta of token0Always rounds up, because in the exact output case (increasing price) we need to move the price at least far enough to get the desired output amount, and in the exact input case (decreasing price) we need to move the price less in order to not send too much output. The most precise formula for this is liquidity * sqrtPX96 / (liquidity +- amount * sqrtPX96), if this is impossible because of overflow, we calculate liquidity / (liquidity / sqrtPX96 +- amount).Parameters:‚ÄãNameTypeDescriptionsqrtPX96uint160The starting price, i.e. before accounting for the token0 deltaliquidityuint128The amount of usable liquidityamountuint256How much of token0 to add or remove from virtual reservesaddboolWhether to add or remove the amount of token0Return Values:‚ÄãTypeDescriptionuint160price after adding or removing amount, depending on addgetNextSqrtPriceFromAmount1RoundingDown‚Äã function getNextSqrtPriceFromAmount1RoundingDown( uint160 sqrtPX96, uint128 liquidity, uint256 amount, bool add ) internal pure returns (uint160)CopyGets the next sqrt price given a delta of token1Always rounds down, because in the exact output case (decreasing price) we need to move the price at least far enough to get the desired output amount, and in the exact input case (increasing price) we need to move the price less in order to not send too much output. The formula we compute is within <1 wei of the lossless version: sqrtPX96 +- amount / liquidityParameters:‚ÄãNameTypeDescriptionsqrtPX96uint160The starting price, i.e., before accounting for the token1 deltaliquidityuint128The amount of usable liquidityamountuint256How much of token1 to add, or remove, from virtual reservesaddboolWhether to add, or remove, the amount of token1Return Values:‚ÄãTypeDescriptionuint160price after adding or removing amountgetNextSqrtPriceFromInput‚Äã function getNextSqrtPriceFromInput( uint160 sqrtPX96, uint128 liquidity, uint256 amountIn, bool zeroForOne ) internal pure returns (uint160 sqrtQX96)CopyGets the next sqrt price given an input amount of token0 or token1Throws if price or liquidity are 0, or if the next price is out of boundsParameters:‚ÄãNameTypeDescriptionsqrtPX96uint160The starting price, i.e., before accounting for the input amountliquidityuint128The amount of usable liquidityamountInuint256How much of token0, or token1, is being swapped inzeroForOneboolWhether the amount in is token0 or token1Return Values:‚ÄãNameTypeDescriptionsqrtQX96uint160The price after adding the input amount to token0 or token1getNextSqrtPriceFromOutput‚Äã function getNextSqrtPriceFromOutput( uint160 sqrtPX96, uint128 liquidity, uint256 amountOut, bool zeroForOne ) internal pure returns (uint160 sqrtQX96)CopyGets the next sqrt price given an output amount of token0 or token1Throws if price or liquidity are 0 or the next price is out of boundsParameters:‚ÄãNameTypeDescriptionsqrtPX96uint160The starting price before accounting for the output amountliquidityuint128The amount of usable liquidityamountOutuint256How much of token0, or token1, is being swapped outzeroForOneboolWhether the amount out is token0 or token1Return Values:‚ÄãNameTypeDescriptionsqrtQX96uint160The price after removing the output amount of token0 or token1getAmount0Delta‚Äã function getAmount0Delta( uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, uint128 liquidity, bool roundUp ) internal pure returns (uint256 amount0)CopyGets the amount0 delta between two pricesCalculates liquidity / sqrt(lower) - liquidity / sqrt(upper), i.e. liquidity * (sqrt(upper) - sqrt(lower)) / (sqrt(upper) * sqrt(lower))Parameters:‚ÄãNameTypeDescriptionsqrtRatioAX96uint160A sqrt pricesqrtRatioBX96uint160Another sqrt priceliquidityuint128The amount of usable liquidityroundUpboolWhether to round the amount up or downReturn Values:‚ÄãNameTypeDescriptionamount0uint256Amount of token0 required to cover a position of size liquidity between the two passed pricesgetAmount1Delta‚Äã function getAmount1Delta( uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, uint128 liquidity, bool roundUp ) internal pure returns (uint256 amount1)CopyGets the amount1 delta between two pricesCalculates liquidity * (sqrt(upper) - sqrt(lower))Parameters:‚ÄãNameTypeDescriptionsqrtRatioAX96uint160A sqrt pricesqrtRatioBX96uint160Another sqrt priceliquidityuint128The amount of usable liquidityroundUpboolWhether to round the amount up, or downReturn Values:‚ÄãNameTypeDescriptionamount1uint256Amount of token1 required to cover a position of size liquidity between the two passed pricesgetAmount0Delta‚Äã function getAmount0Delta( uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, int128 liquidity ) internal pure returns (int256 amount0)CopyHelper that gets signed token0 deltaParameters:‚ÄãNameTypeDescriptionsqrtRatioAX96uint160A sqrt pricesqrtRatioBX96uint160Another sqrt priceliquidityint128The change in liquidity for which to compute the amount0 deltaReturn Values:‚ÄãNameTypeDescriptionamount0int256Amount of token0 corresponding to the passed liquidityDelta between the two pricesgetAmount1Delta‚Äã function getAmount1Delta( uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, int128 liquidity ) internal pure returns (int256 amount1)CopyHelper that gets signed token1 deltaParameters:‚ÄãNameTypeDescriptionsqrtRatioAX96uint160A sqrt pricesqrtRatioBX96uint160Another sqrt priceliquidityint128The change in liquidity for which to compute the amount1 deltaReturn Values:‚ÄãNameTypeDescriptionamount1int256Amount of token1 corresponding to the passed liquidityDelta between the two pricesEdit this pageHelpful?PreviousSecondsOutsideNextSwapMathFunctionsgetNextSqrtPriceFromAmount0RoundingUpgetNextSqrtPriceFromAmount1RoundingDowngetNextSqrtPriceFromInputgetNextSqrtPriceFromOutputgetAmount0DeltagetAmount1DeltagetAmount0DeltagetAmount1DeltaDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
387,p.org sdk core reference classes Fraction#denominator,"p.org sdk core reference classes Fraction#denominator.    Fraction | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesFractionHelpful?On this pageFraction@uniswap/sdk-core / Exports / FractionClass: FractionHierarchy‚ÄãFraction‚Ü≥ CurrencyAmount‚Ü≥ Percent‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatornumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionConstructors‚Äãconstructor‚Äã‚Ä¢ new Fraction(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:107subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:138toSignificant‚Äã‚ñ∏ toSignificant(significantDigits, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:123tryParseFraction‚Äã‚ñ∏ Static Private tryParseFraction(fractionish): FractionParameters‚ÄãNameTypefractionishBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:33Helpful?PreviousEtherNextNativeCurrencyHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatornumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
388,p.org sdk core reference README.md,p.org sdk core reference README.md. 
389,p.org sdk v3 reference classes Staker#withdrawtoken,"p.org sdk v3 reference classes Staker#withdrawtoken.    Staker | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesStakerHelpful?On this pageStaker@uniswap/v3-sdk / Exports / StakerClass: StakerTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINCENTIVE_KEY_ABIINTERFACEMethods‚Äã_encodeIncentiveKeycollectRewardsencodeClaimencodeDepositwithdrawTokenConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new Staker()Defined in‚Äãstaker.ts:72Properties‚ÄãINCENTIVE_KEY_ABI‚Äã‚ñ™ Static Private INCENTIVE_KEY_ABI: string = 'tuple(address rewardToken, address pool, uint256 startTime, uint256 endTime, address refundee)'Defined in‚Äãstaker.ts:73INTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚Äãstaker.ts:70Methods‚Äã_encodeIncentiveKey‚Äã‚ñ∏ Static Private _encodeIncentiveKey(incentiveKey): ObjectParameters‚ÄãNameTypeDescriptionincentiveKeyIncentiveKeyAn IncentiveKey which represents a unique staking program.Returns‚ÄãObjectAn encoded IncentiveKey to be read by ethersDefined in‚Äãstaker.ts:194collectRewards‚Äã‚ñ∏ Static collectRewards(incentiveKeys, options): MethodParametersNote: A tokenId can be staked in many programs but to claim rewards and continue the program you must unstake, claim, and then restake.Parameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]An IncentiveKey or array of IncentiveKeys that tokenId is staked in. Input an array of IncentiveKeys to claim rewards for each program.optionsClaimOptionsClaimOptions to specify tokenId, recipient, and amount wanting to collect. Note that you can only specify one amount and one recipient across the various programs if you are collecting from multiple programs at once.Returns‚ÄãMethodParametersDefined in‚Äãstaker.ts:107encodeClaim‚Äã‚ñ∏ Static Private encodeClaim(incentiveKey, options): string[]To claim rewards, must unstake and then claim.Parameters‚ÄãNameTypeDescriptionincentiveKeyIncentiveKeyThe unique identifier of a staking program.optionsClaimOptionsOptions for producing the calldata to claim. Can't claim unless you unstake.Returns‚Äãstring[]The calldatas for 'unstakeToken' and 'claimReward'.Defined in‚Äãstaker.ts:82encodeDeposit‚Äã‚ñ∏ Static encodeDeposit(incentiveKeys): stringParameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]A single IncentiveKey or array of IncentiveKeys to be encoded and used in the data parameter in safeTransferFromReturns‚ÄãstringAn IncentiveKey as a stringDefined in‚Äãstaker.ts:173withdrawToken‚Äã‚ñ∏ Static withdrawToken(incentiveKeys, withdrawOptions): MethodParametersParameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]A list of incentiveKeys to unstake from. Should include all incentiveKeys (unique staking programs) that options.tokenId is staked in.withdrawOptionsFullWithdrawOptionsOptions for producing claim calldata and withdraw calldata. Can't withdraw without unstaking all programs for tokenId.Returns‚ÄãMethodParametersCalldata for unstaking, claiming, and withdrawing.Defined in‚Äãstaker.ts:136Helpful?PreviousSqrtPriceMathNextSwapMathTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINCENTIVE_KEY_ABIINTERFACEMethods_encodeIncentiveKeycollectRewardsencodeClaimencodeDepositwithdrawTokenDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
390,p.org contracts universal router technical reference#permit2 permit batch,"p.org contracts universal router technical reference#permit2 permit batch.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
391,p.org contracts v2 guides smart contract integration trading from a smart contract,"p.org contracts v2 guides smart contract integration trading from a smart contract.    Implement a Swap | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationSmart Contract Quick startImplement a SwapProviding LiquidityBuilding an OracleFlash SwapsPair AddressesSupporting meta transactionsTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolGuidesSmart Contract IntegrationImplement a SwapHelpful?On this pageImplement a SwapWhen trading from a smart contract, the most important thing to keep in mind is that access to an external price source is required. Without this, trades can be frontrun for considerable loss.Read safety considerations for more.Using the RouterThe easiest way to safely swap tokens is to use the router, which provides a variety of methods to safely swap to and from different assets. You'll notice that there is a function for each permutation of swapping to/from an exact amount of ETH/tokens.First you must use an external price source to calculate the safety parameters for the function you'd like to call. This is either a minimum amount received when selling an exact input or the maximum amount you are willing to pay when a buying an exact output amountIt is also important to ensure that your contract controls enough ETH/tokens to make the swap, and has granted approval to the router to withdraw this many tokens.Check out the Pricing page for a more in depth discussion on getting prices.ExampleImagine you want to swap 50 DAI for as much ETH as possible from your smart contract.transferFrom‚ÄãBefore swapping, our smart contracts needs to be in control of 50 DAI. The easiest way to accomplish this is by calling transferFrom on DAI with the owner set to msg.sender:uint amountIn = 50 * 10 ** DAI.decimals();require(DAI.transferFrom(msg.sender, address(this), amountIn), 'transferFrom failed.');Copyapprove‚ÄãNow that our contract owns 50 DAI, we need to approve to the router to withdraw this DAI:require(DAI.approve(address(UniswapV2Router02), amountIn), 'approve failed.');CopyswapExactTokensForETH‚ÄãNow we're ready to swap:// amountOutMin must be retrieved from an oracle of some kindaddress[] memory path = new address[](2);path[0] = address(DAI);path[1] = UniswapV2Router02.WETH();UniswapV2Router02.swapExactTokensForETH(amountIn, amountOutMin, path, msg.sender, block.timestamp);CopySafety ConsiderationsBecause Ethereum transactions occur in an adversarial environment, smart contracts that do not perform safety checks can be exploited for profit. If a smart contract assumes that the current price on Uniswap is a ""fair"" price without performing safety checks, it is vulnerable to manipulation. A bad actor could e.g. easily insert transactions before and after the swap (a ""sandwich"" attack) causing the smart contract to trade at a much worse price, profit from this at the trader's expense, and then return the contracts to their original state. (One important caveat is that these types of attacks are mitigated by trading in extremely liquid pools, and/or at low values.)The best way to protect against these attacks is to use an external price feed or ""price oracle"". The best ""oracle"" is simply traders' off-chain observation of the current price, which can be passed into the trade as a safety check. This strategy is best for situations where users initiate trades on their own behalf.However, when an off-chain price can't be used, an on-chain oracle should be used instead. Determining the best oracle for a given situation is a not part of this guide, but for more details on the Uniswap V2 approach to oracles, see Oracles.Edit this pageHelpful?PreviousSmart Contract Quick startNextProviding LiquiditytransferFromapproveswapExactTokensForETHDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
392,p.org contracts universal router technical reference#cryptopunks,"p.org contracts universal router technical reference#cryptopunks.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
393,p.org concepts protocol fees,"p.org concepts protocol fees.    Fees | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchWhat Is Uniswap?The Uniswap ProtocolProtocol ConceptsConcentrated LiquidityFeesOracleRange OrdersSwapsToken Integration IssuesGovernanceResearchResourcesGlossaryüè†Protocol ConceptsFeesHelpful?On this pageFeesSwap Fees‚ÄãSwap fees are distributed pro-rata to all in-range1 liquidity at the time of the swap. If the spot price moves out of a position‚Äôs range, the given liquidity is no longer active and does not generate any fees. If the spot price reverses and reenters the position‚Äôs range, the position‚Äôs liquidity becomes active again and will generate fees.Swap fees are not automatically reinvested as they were in previous versions of Uniswap. Instead, they are collected separately from the pool and must be manually redeemed when the owner wishes to collect their fees.Pool Fees Tiers‚ÄãUniswap v3 introduces multiple pools for each token pair, each with a different swapping fee. Liquidity providers may initially create pools at three fee levels: 0.05%, 0.30%, and 1%. More fee levels may be added by UNI governance, e.g. the 0.01% fee level added by this governance proposal in November 2021, as executed here.Breaking pairs into separate pools was previously untenable due to the issue of liquidity fragmentation. Any incentive alignments achieved by more fee optionality invariably resulted in a net loss to traders, due to lower pairwise liquidity and the resulting increase in price impact upon swapping.The introduction of concentrated liquidity decouples total liquidity from price impact. With price impact concerns out of the way, breaking pairs into multiple pools becomes a feasible approach to improving the functionality of a pool for assets previously underserved by the 0.30% swap fee.Finding The Right Pool Fee‚ÄãWe anticipate that certain types of assets will gravitate towards specific fee tiers, based on where the incentives for both swappers and liquidity providers come nearest to alignment.We expect low volatility assets (stable coins) will likely congregate in the lowest fee tier, as the price risk for liquidity providers holding these assets is very low, and those swapping will be motivated to pursue an execution price closest to 1:1 as they can get.Similarly, we anticipate more exotic assets, or those traded rarely, will naturally gravitate towards a higher fee - as liquidity providers will be motivated to offset the cost risk of holding these assets for the duration of their position.Protocol Fees‚ÄãUniswap v3 has a protocol fee that can be turned on by UNI governance. Compared to v2, UNI governance has more flexibility in choosing the fraction of swap fees that go to the protocol. For details regarding the protocol fee, see the whitepaper.In-range liquidity refers to the liquidity contained in any positions which span both sides of the spot price.‚Ü©Helpful?PreviousConcentrated LiquidityNextOracleSwap FeesPool Fees TiersFinding The Right Pool FeeProtocol FeesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
394,p.org sdk v3 reference interfaces NFTPermitOptions#v,p.org sdk v3 reference interfaces NFTPermitOptions#v.    NFTPermitOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesNFTPermitOptionsHelpful?On this pageNFTPermitOptions@uniswap/v3-sdk / Exports / NFTPermitOptionsInterface: NFTPermitOptionsTable of contents‚ÄãProperties‚ÄãdeadlinersspendervProperties‚Äãdeadline‚Äã‚Ä¢ deadline: BigintIshDefined in‚ÄãnonfungiblePositionManager.ts:131r‚Äã‚Ä¢ r: stringDefined in‚ÄãnonfungiblePositionManager.ts:129s‚Äã‚Ä¢ s: stringDefined in‚ÄãnonfungiblePositionManager.ts:130spender‚Äã‚Ä¢ spender: stringDefined in‚ÄãnonfungiblePositionManager.ts:132v‚Äã‚Ä¢ v: 0 | 1 | 27 | 28Defined in‚ÄãnonfungiblePositionManager.ts:128Helpful?PreviousMintSpecificOptionsNextQuoteOptionsTable of contentsPropertiesPropertiesdeadlinersspendervDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
395,p.org contracts v3 guides providing liquidity setting up,"p.org contracts v3 guides providing liquidity setting up.    Set Up Your Contract | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquiditySet Up Your ContractMint a New PositionCollecting FeesDecrease LiquidityIncrease LiquidityThe Full ContractLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolGuidesProviding LiquiditySet Up Your ContractHelpful?On this pageSet Up Your ContractSetting up the Contract‚ÄãThis guide is an example of a custodial contract Uniswap V3 positions, which allows interaction with the Uniswap V3 Periphery by minting a position, adding liquidity to a position, decreasing liquidity, and collecting fees.First, declare the solidity version used to compile the contract and abicoder v2 to allow arbitrary nested arrays and structs to be encoded and decoded in calldata, a feature we use when transacting with a pool.// SPDX-License-Identifier: GPL-2.0-or-laterpragma solidity =0.7.6;pragma abicoder v2;CopyImport the contracts needed from the npm package installation.import '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol';import '@uniswap/v3-core/contracts/libraries/TickMath.sol';import '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol';import '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';import '@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol';import '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';import '@uniswap/v3-periphery/contracts/base/LiquidityManagement.sol';CopyCreate a contract called LiquidityExamples and inherit both IERC721Receiver and LiquidityManagement.We've chosen to hardcode the token contract addresses and pool fee tiers for our example. In production, you would likely use an input parameter for this, allowing you to change the pools and tokens you are interacting with on a per transaction basis.contract LiquidityExamples is IERC721Receiver { address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F; address public constant USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48; uint24 public constant poolFee = 3000;CopyDeclare an immutable public variable nonfungiblePositionManager of type INonfungiblePositionManager. INonfungiblePositionManager public immutable nonfungiblePositionManager;CopyAllowing ERC721 Interactions‚ÄãEvery NFT is identified by a unique uint256 ID inside the ERC-721 smart contract, declared as the tokenIdTo allow deposits of ERC721 expressions of liquidity, create a struct called Deposit, a mapping of uint256 to the Deposit struct, then declare that mapping as a public variable deposits. struct Deposit {  address owner;  uint128 liquidity;  address token0;  address token1; } mapping(uint256 => Deposit) public deposits;CopyThe Constructor‚ÄãDeclare the constructor here, which is executed once when the contract is deployed. Our constructor hard codes the address of the nonfungible position manager interface, V3 router, and the periphery immutable state constructor, which requires the factory and the address of weth9 (the ERC-20 wrapper for ether). constructor(  INonfungiblePositionManager _nonfungiblePositionManager,  address _factory,  address _WETH9 ) PeripheryImmutableState(_factory, _WETH9) {  nonfungiblePositionManager = _nonfungiblePositionManager; }CopyAllowing custody of ERC721 tokens‚ÄãTo allow the contract to custody ERC721 tokens, implement the onERC721Received function within the inherited IERC721Receiver.sol contract.The from identifier may be omitted because it is not used. function onERC721Received(  address operator,  address,  uint256 tokenId,  bytes calldata ) external override returns (bytes4) {  // get position information  _createDeposit(operator, tokenId);  return this.onERC721Received.selector; }CopyCreating a Deposit‚ÄãTo add a Deposit instance to the deposits mapping, create an internal function called _createDeposit that destructures the positions struct returned by positions in nonfungiblePositionManager.sol. Pass the relevant variables token0 token1 and liquidity to the deposits mapping. function _createDeposit(address owner, uint256 tokenId) internal {  (, , address token0, address token1, , , , uint128 liquidity, , , , ) =   nonfungiblePositionManager.positions(tokenId);  // set the owner and data for position  // operator is msg.sender  deposits[tokenId] = Deposit({owner: owner, liquidity: liquidity, token0: token0, token1: token1}); }CopyThe Full Contract Setup‚Äã// SPDX-License-Identifier: GPL-2.0-or-laterpragma solidity =0.7.6;pragma abicoder v2;import '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol';import '@uniswap/v3-core/contracts/libraries/TickMath.sol';import '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol';import '../libraries/TransferHelper.sol';import '../interfaces/INonfungiblePositionManager.sol';import '../base/LiquidityManagement.sol';contract LiquidityExamples is IERC721Receiver { address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F; address public constant USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48; uint24 public constant poolFee = 3000; INonfungiblePositionManager public immutable nonfungiblePositionManager; /// @notice Represents the deposit of an NFT struct Deposit {  address owner;  uint128 liquidity;  address token0;  address token1; } /// @dev deposits[tokenId] => Deposit mapping(uint256 => Deposit) public deposits; constructor(  INonfungiblePositionManager _nonfungiblePositionManager ) {  nonfungiblePositionManager = _nonfungiblePositionManager; } // Implementing `onERC721Received` so this contract can receive custody of erc721 tokens function onERC721Received(  address operator,  address,  uint256 tokenId,  bytes calldata ) external override returns (bytes4) {  // get position information  _createDeposit(operator, tokenId);  return this.onERC721Received.selector; } function _createDeposit(address owner, uint256 tokenId) internal {  (, , address token0, address token1, , , , uint128 liquidity, , , , ) =   nonfungiblePositionManager.positions(tokenId);  // set the owner and data for position  // operator is msg.sender  deposits[tokenId] = Deposit({owner: owner, liquidity: liquidity, token0: token0, token1: token1}); }}CopyEdit this pageHelpful?PreviousMultihop SwapsNextMint a New PositionSetting up the ContractAllowing ERC721 InteractionsThe ConstructorAllowing custody of ERC721 tokensCreating a DepositThe Full Contract SetupDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
396,p.org contracts v3 reference periphery test TestPositionNFTOwner,p.org contracts v3 reference periphery test TestPositionNFTOwner.    TestPositionNFTOwner | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerTestBase64TestLiquidityAmountsTestMockTimeNonfungiblePositionManagerMockTimeSwapRouterNFTDescriptorTestPathTestPeripheryImmutableStateTestPoolAddressTestSelfPermitTestTestCallbackValidationTestERC20TestERC20MetadataTestERC20PermitAllowedTestMulticallTestPositionNFTOwnerTestUniswapV3CalleeTickLensTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryTestTestPositionNFTOwnerHelpful?On this pageTestPositionNFTOwnerFunctions‚ÄãsetOwner‚Äã function setOwner( ) externalCopyisValidSignature‚Äã function isValidSignature( ) external returns (bytes4 magicValue)CopyEdit this pageHelpful?PreviousTestMulticallNextTestUniswapV3CalleeFunctionssetOwnerisValidSignatureDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
397,p.org contracts v2 reference smart contracts pair#minimum liquidity,"p.org contracts v2 reference smart contracts pair#minimum liquidity.    Pair | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsPairHelpful?On this pagePairThis documentation covers Uniswap-specific functionality. For ERC-20 functionality, see Pair (ERC-20).CodeUniswapV2Pair.solAddressSee Pair Addresses.EventsMint‚Äãevent Mint(address indexed sender, uint amount0, uint amount1);CopyEmitted each time liquidity tokens are created via mint.Burn‚Äãevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);CopyEmitted each time liquidity tokens are destroyed via burn.Swap‚Äãevent Swap( address indexed sender, uint amount0In, uint amount1In, uint amount0Out, uint amount1Out, address indexed to);CopyEmitted each time a swap occurs via swap.Sync‚Äãevent Sync(uint112 reserve0, uint112 reserve1);CopyEmitted each time reserves are updated via mint, burn, swap, or sync.Read-Only FunctionsMINIMUM_LIQUIDITY‚Äãfunction MINIMUM_LIQUIDITY() external pure returns (uint);CopyReturns 1000 for all pairs. See Minimum Liquidity.factory‚Äãfunction factory() external view returns (address);CopyReturns the factory address.token0‚Äãfunction token0() external view returns (address);CopyReturns the address of the pair token with the lower sort order.token1‚Äãfunction token1() external view returns (address);CopyReturns the address of the pair token with the higher sort order.getReserves‚Äãfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);CopyReturns the reserves of token0 and token1 used to price trades and distribute liquidity. See Pricing. Also returns the block.timestamp (mod 2**32) of the last block during which an interaction occured for the pair.price0CumulativeLast‚Äãfunction price0CumulativeLast() external view returns (uint);CopySee Oracles.price1CumulativeLast‚Äãfunction price1CumulativeLast() external view returns (uint);CopySee Oracles.kLast‚Äãfunction kLast() external view returns (uint);CopyReturns the product of the reserves as of the most recent liquidity event. See Protocol Charge Calculation.State-Changing Functionsmint‚Äãfunction mint(address to) external returns (uint liquidity);CopyCreates pool tokens.Emits Mint, Sync, Transfer.burn‚Äãfunction burn(address to) external returns (uint amount0, uint amount1);CopyDestroys pool tokens.Emits Burn, Sync, Transfer.swap‚Äãfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;CopySwaps tokens. For regular swaps, data.length must be 0. Also see Flash Swaps.Emits Swap, Sync.skim‚Äãfunction skim(address to) external;CopySee the whitepaper.sync‚Äãfunction sync() external;CopySee the whitepaper.Emits Sync.Interfaceimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol';Copypragma solidity >=0.5.0;interface IUniswapV2Pair { event Approval(address indexed owner, address indexed spender, uint value); event Transfer(address indexed from, address indexed to, uint value); function name() external pure returns (string memory); function symbol() external pure returns (string memory); function decimals() external pure returns (uint8); function totalSupply() external view returns (uint); function balanceOf(address owner) external view returns (uint); function allowance(address owner, address spender) external view returns (uint); function approve(address spender, uint value) external returns (bool); function transfer(address to, uint value) external returns (bool); function transferFrom(address from, address to, uint value) external returns (bool); function DOMAIN_SEPARATOR() external view returns (bytes32); function PERMIT_TYPEHASH() external pure returns (bytes32); function nonces(address owner) external view returns (uint); function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external; event Mint(address indexed sender, uint amount0, uint amount1); event Burn(address indexed sender, uint amount0, uint amount1, address indexed to); event Swap(  address indexed sender,  uint amount0In,  uint amount1In,  uint amount0Out,  uint amount1Out,  address indexed to ); event Sync(uint112 reserve0, uint112 reserve1); function MINIMUM_LIQUIDITY() external pure returns (uint); function factory() external view returns (address); function token0() external view returns (address); function token1() external view returns (address); function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast); function price0CumulativeLast() external view returns (uint); function price1CumulativeLast() external view returns (uint); function kLast() external view returns (uint); function mint(address to) external returns (uint liquidity); function burn(address to) external returns (uint amount0, uint amount1); function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external; function skim(address to) external; function sync() external;}CopyABIimport IUniswapV2Pair from '@uniswap/v2-core/build/IUniswapV2Pair.json'Copyhttps://unpkg.com/@uniswap/v2-core@1.0.0/build/IUniswapV2Pair.jsonEdit this pageHelpful?PreviousFactoryNextPair (ERC-20)MintBurnSwapSyncMINIMUM_LIQUIDITYfactorytoken0token1getReservesprice0CumulativeLastprice1CumulativeLastkLastmintburnswapskimsyncDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
398,p.org sdk v3 reference classes Staker#interface,"p.org sdk v3 reference classes Staker#interface.    Staker | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesStakerHelpful?On this pageStaker@uniswap/v3-sdk / Exports / StakerClass: StakerTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINCENTIVE_KEY_ABIINTERFACEMethods‚Äã_encodeIncentiveKeycollectRewardsencodeClaimencodeDepositwithdrawTokenConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new Staker()Defined in‚Äãstaker.ts:72Properties‚ÄãINCENTIVE_KEY_ABI‚Äã‚ñ™ Static Private INCENTIVE_KEY_ABI: string = 'tuple(address rewardToken, address pool, uint256 startTime, uint256 endTime, address refundee)'Defined in‚Äãstaker.ts:73INTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚Äãstaker.ts:70Methods‚Äã_encodeIncentiveKey‚Äã‚ñ∏ Static Private _encodeIncentiveKey(incentiveKey): ObjectParameters‚ÄãNameTypeDescriptionincentiveKeyIncentiveKeyAn IncentiveKey which represents a unique staking program.Returns‚ÄãObjectAn encoded IncentiveKey to be read by ethersDefined in‚Äãstaker.ts:194collectRewards‚Äã‚ñ∏ Static collectRewards(incentiveKeys, options): MethodParametersNote: A tokenId can be staked in many programs but to claim rewards and continue the program you must unstake, claim, and then restake.Parameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]An IncentiveKey or array of IncentiveKeys that tokenId is staked in. Input an array of IncentiveKeys to claim rewards for each program.optionsClaimOptionsClaimOptions to specify tokenId, recipient, and amount wanting to collect. Note that you can only specify one amount and one recipient across the various programs if you are collecting from multiple programs at once.Returns‚ÄãMethodParametersDefined in‚Äãstaker.ts:107encodeClaim‚Äã‚ñ∏ Static Private encodeClaim(incentiveKey, options): string[]To claim rewards, must unstake and then claim.Parameters‚ÄãNameTypeDescriptionincentiveKeyIncentiveKeyThe unique identifier of a staking program.optionsClaimOptionsOptions for producing the calldata to claim. Can't claim unless you unstake.Returns‚Äãstring[]The calldatas for 'unstakeToken' and 'claimReward'.Defined in‚Äãstaker.ts:82encodeDeposit‚Äã‚ñ∏ Static encodeDeposit(incentiveKeys): stringParameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]A single IncentiveKey or array of IncentiveKeys to be encoded and used in the data parameter in safeTransferFromReturns‚ÄãstringAn IncentiveKey as a stringDefined in‚Äãstaker.ts:173withdrawToken‚Äã‚ñ∏ Static withdrawToken(incentiveKeys, withdrawOptions): MethodParametersParameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]A list of incentiveKeys to unstake from. Should include all incentiveKeys (unique staking programs) that options.tokenId is staked in.withdrawOptionsFullWithdrawOptionsOptions for producing claim calldata and withdraw calldata. Can't withdraw without unstaking all programs for tokenId.Returns‚ÄãMethodParametersCalldata for unstaking, claiming, and withdrawing.Defined in‚Äãstaker.ts:136Helpful?PreviousSqrtPriceMathNextSwapMathTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINCENTIVE_KEY_ABIINTERFACEMethods_encodeIncentiveKeycollectRewardsencodeClaimencodeDepositwithdrawTokenDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
399,p.org contracts v3 reference periphery test TestUniswapV3Callee,p.org contracts v3 reference periphery test TestUniswapV3Callee.    TestUniswapV3Callee | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerTestBase64TestLiquidityAmountsTestMockTimeNonfungiblePositionManagerMockTimeSwapRouterNFTDescriptorTestPathTestPeripheryImmutableStateTestPoolAddressTestSelfPermitTestTestCallbackValidationTestERC20TestERC20MetadataTestERC20PermitAllowedTestMulticallTestPositionNFTOwnerTestUniswapV3CalleeTickLensTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryTestTestUniswapV3CalleeHelpful?On this pageTestUniswapV3CalleeFunctions‚ÄãswapExact0For1‚Äã function swapExact0For1( ) externalCopyswap0ForExact1‚Äã function swap0ForExact1( ) externalCopyswapExact1For0‚Äã function swapExact1For0( ) externalCopyswap1ForExact0‚Äã function swap1ForExact0( ) externalCopyuniswapV3SwapCallback‚Äã function uniswapV3SwapCallback( ) externalCopyEdit this pageHelpful?PreviousTestPositionNFTOwnerNextTickLensTestFunctionsswapExact0For1swap0ForExact1swapExact1For0swap1ForExact0uniswapV3SwapCallbackDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
400,p.org contracts v3 reference periphery base PoolInitializer,"p.org contracts v3 reference periphery base PoolInitializer.    PoolInitializer | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseBlockTimestampERC721PermitLiquidityManagementMulticallPeripheryImmutableStatePeripheryPaymentsPeripheryPaymentsWithFeePoolInitializerSelfPermitInterfacesLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryBasePoolInitializerHelpful?On this pagePoolInitializerFunctions‚ÄãcreateAndInitializePoolIfNecessary‚Äã function createAndInitializePoolIfNecessary( address token0, address token1, uint24 fee, uint160 sqrtPriceX96 ) external returns (address pool)CopyCreates a new pool if it does not exist, then initializes if not initializedThis method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a poolParameters:‚ÄãNameTypeDescriptiontoken0addressThe contract address of token0 of the pooltoken1addressThe contract address of token1 of the poolfeeuint24The fee amount of the v3 pool for the specified token pairsqrtPriceX96uint160The initial square root price of the pool as a Q64.96 valueReturn Values:‚ÄãNameTypeDescriptionpooladdressReturns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessaryEdit this pageHelpful?PreviousPeripheryPaymentsWithFeeNextSelfPermitFunctionscreateAndInitializePoolIfNecessaryDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
401,p.org sdk core reference enums SupportedChainId#goerli,p.org sdk core reference enums SupportedChainId#goerli.    SupportedChainId | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesenumsRoundingSupportedChainIdTradeTypeV2 SDKV1 SDKüè†Core SDKTechnical ReferenceenumsSupportedChainIdHelpful?On this pageSupportedChainId@uniswap/sdk-core / Exports / SupportedChainIdEnumeration: SupportedChainIdTable of contents‚ÄãEnumeration Members‚ÄãARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENEnumeration Members‚ÄãARBITRUM_ONE‚Äã‚Ä¢ ARBITRUM_ONE = 42161Defined in‚Äãconstants.ts:10ARBITRUM_RINKEBY‚Äã‚Ä¢ ARBITRUM_RINKEBY = 421611Defined in‚Äãconstants.ts:11CELO‚Äã‚Ä¢ CELO = 42220Defined in‚Äãconstants.ts:19CELO_ALFAJORES‚Äã‚Ä¢ CELO_ALFAJORES = 44787Defined in‚Äãconstants.ts:20GOERLI‚Äã‚Ä¢ GOERLI = 5Defined in‚Äãconstants.ts:7KOVAN‚Äã‚Ä¢ KOVAN = 42Defined in‚Äãconstants.ts:8MAINNET‚Äã‚Ä¢ MAINNET = 1Defined in‚Äãconstants.ts:4OPTIMISM‚Äã‚Ä¢ OPTIMISM = 10Defined in‚Äãconstants.ts:13OPTIMISM_GOERLI‚Äã‚Ä¢ OPTIMISM_GOERLI = 420Defined in‚Äãconstants.ts:14POLYGON‚Äã‚Ä¢ POLYGON = 137Defined in‚Äãconstants.ts:16POLYGON_MUMBAI‚Äã‚Ä¢ POLYGON_MUMBAI = 80001Defined in‚Äãconstants.ts:17RINKEBY‚Äã‚Ä¢ RINKEBY = 4Defined in‚Äãconstants.ts:6ROPSTEN‚Äã‚Ä¢ ROPSTEN = 3Defined in‚Äãconstants.ts:5Helpful?PreviousRoundingNextTradeTypeTable of contentsEnumeration MembersEnumeration MembersARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
402,p.org sdk v3 reference interfaces IncentiveKey#pool,p.org sdk v3 reference interfaces IncentiveKey#pool.    IncentiveKey | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesIncentiveKeyHelpful?On this pageIncentiveKey@uniswap/v3-sdk / Exports / IncentiveKeyInterface: IncentiveKeyRepresents a unique staking program.Table of contents‚ÄãProperties‚ÄãendTimepoolrefundeerewardTokenstartTimeProperties‚ÄãendTime‚Äã‚Ä¢ endTime: BigintIshThe time that the incentive program ends.Defined in‚Äãstaker.ts:28pool‚Äã‚Ä¢ pool: PoolThe pool that the staked positions must provide in.Defined in‚Äãstaker.ts:20refundee‚Äã‚Ä¢ refundee: stringThe address which receives any remaining reward tokens at endTime.Defined in‚Äãstaker.ts:32rewardToken‚Äã‚Ä¢ rewardToken: TokenThe token rewarded for participating in the staking program.Defined in‚Äãstaker.ts:16startTime‚Äã‚Ä¢ startTime: BigintIshThe time when the incentive program begins.Defined in‚Äãstaker.ts:24Helpful?PreviousFeeOptionsNextIncreaseSpecificOptionsTable of contentsPropertiesPropertiesendTimepoolrefundeerewardTokenstartTimeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
403,p.org contracts v3 reference core UniswapV3Factory,"p.org contracts v3 reference core UniswapV3Factory.    UniswapV3Factory | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesLibrariesGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreUniswapV3FactoryHelpful?On this pageUniswapV3FactoryDeploys Uniswap V3 pools and manages ownership and control over pool protocol feesFunctions‚ÄãcreatePool‚Äã function createPool( address tokenA, address tokenB, uint24 fee ) external returns (address pool)CopyCreates a pool for the given two tokens and feetokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.Parameters:‚ÄãNameTypeDescriptiontokenAaddressOne of the two tokens in the desired pooltokenBaddressThe other of the two tokens in the desired poolfeeuint24The desired fee for the poolReturn Values:‚ÄãNameTypeDescriptionpooladdressThe address of the newly created poolsetOwner‚Äã function setOwner( address _owner ) externalCopyUpdates the owner of the factoryMust be called by the current ownerParameters:‚ÄãNameTypeDescription_owneraddressThe new owner of the factoryenableFeeAmount‚Äã function enableFeeAmount( uint24 fee, int24 tickSpacing ) publicCopyEnables a fee amount with the given tickSpacingFee amounts may never be removed once enabledParameters:‚ÄãNameTypeDescriptionfeeuint24The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)tickSpacingint24The spacing between ticks to be enforced for all pools created with the given fee amountEdit this pageHelpful?PreviousOverviewNextUniswapV3PoolFunctionscreatePoolsetOwnerenableFeeAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
404,p.org contracts v3 reference core libraries Oracle,"p.org contracts v3 reference core libraries Oracle.    Oracle | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesLibrariesBitMathFixedPoint128FixedPoint96FullMathLiquidityMathLowGasSafeMathOraclePositionSafeCastSecondsOutsideSqrtPriceMathSwapMathTickTickBitmapTickMathTransferHelperUnsafeMathGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreLibrariesOracleHelpful?On this pageOracleProvides price and liquidity data useful for a wide variety of system designsInstances of stored oracle data, ""observations"", are collected in the oracle array Every pool is initialized with an oracle array length of 1. Anyone can pay the SSTOREs to increase the maximum length of the oracle array. New slots will be added when the array is fully populated. Observations are overwritten when the full length of the oracle array is populated. The most recent observation is available, independent of the length of the oracle array, by passing 0 to observe()Functions‚Äãinitialize‚Äã function initialize( struct Oracle.Observation[65535] self, uint32 time ) internal returns (uint16 cardinality, uint16 cardinalityNext)CopyInitialize the oracle array by writing the first slot. Called once for the lifecycle of the observations arrayParameters:‚ÄãNameTypeDescriptionselfstruct Oracle.Observation[65535]The stored oracle arraytimeuint32The time of the oracle initialization, via block.timestamp truncated to uint32Return Values:‚ÄãNameTypeDescriptioncardinalityuint16The number of populated elements in the oracle arraycardinalityNextuint16The new length of the oracle array, independent of populationwrite‚Äã function write( struct Oracle.Observation[65535] self, uint16 index, uint32 blockTimestamp, int24 tick, uint128 liquidity, uint16 cardinality, uint16 cardinalityNext ) internal returns (uint16 indexUpdated, uint16 cardinalityUpdated)CopyWrites an oracle observation to the arrayWritable at most once per block. Index represents the most recently written element. cardinality and index must be tracked externally. If the index is at the end of the allowable array length (according to cardinality), and the next cardinality is greater than the current one, cardinality may be increased. This restriction is created to preserve ordering.Parameters:‚ÄãNameTypeDescriptionselfstruct Oracle.Observation[65535]The stored oracle arrayindexuint16The location of the most recently updated observationblockTimestampuint32The timestamp of the new observationtickint24The active tick at the time of the new observationliquidityuint128The total in-range liquidity at the time of the new observationcardinalityuint16The number of populated elements in the oracle arraycardinalityNextuint16The new length of the oracle array, independent of populationReturn Values:‚ÄãNameTypeDescriptionindexUpdateduint16The new index of the most recently written element in the oracle arraycardinalityUpdateduint16The new cardinality of the oracle arraygrow‚Äã function grow( struct Oracle.Observation[65535] self, uint16 current, uint16 next ) internal returns (uint16)CopyPrepares the oracle array to store up to next observationsParameters:‚ÄãNameTypeDescriptionselfstruct Oracle.Observation[65535]The stored oracle arraycurrentuint16The current next cardinality of the oracle arraynextuint16The proposed next cardinality which will be populated in the oracle arrayReturn Values:‚ÄãNameTypeDescriptionnextuint16The next cardinality which will be populated in the oracle arrayobserve‚Äã function observe( struct Oracle.Observation[65535] self, uint32 time, uint32[] secondsAgos, int24 tick, uint16 index, uint128 liquidity, uint16 cardinality ) internal view returns (int56[] tickCumulatives, uint160[] liquidityCumulatives)CopyReturns the accumulator values as of each time seconds ago from the given time in the array of secondsAgosReverts if secondsAgos > oldest observationParameters:‚ÄãNameTypeDescriptionselfstruct Oracle.Observation[65535]The stored oracle arraytimeuint32The current block.timestampsecondsAgosuint32[]Each amount of time to look back, in seconds, at which point to return an observationtickint24The current tickindexuint16The location of a given observation within the oracle arrayliquidityuint128The current in-range pool liquiditycardinalityuint16The number of populated elements in the oracle arrayReturn Values:‚ÄãNameTypeDescriptiontickCumulativesint56[]The tick * time elapsed since the pool was first initialized, as of each secondsAgoliquidityCumulativesuint160[]The liquidity * time elapsed since the pool was first initialized, as of each secondsAgoEdit this pageHelpful?PreviousLowGasSafeMathNextPositionFunctionsinitializewritegrowobserveDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
405,p.org sdk v3 reference classes Position#mintamountswithslippage,"p.org sdk v3 reference classes Position#mintamountswithslippage.    Position | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPositionHelpful?On this pagePosition@uniswap/v3-sdk / Exports / PositionClass: PositionRepresents a position on a Uniswap V3 PoolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessors‚Äãamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethods‚ÄãburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsConstructors‚Äãconstructor‚Äã‚Ä¢ new Position(__namedParameters)Constructs a position for a given pool with the given liquidityParameters‚ÄãNameType__namedParametersPositionConstructorArgsDefined in‚Äãentities/position.ts:40Properties‚Äã_mintAmounts‚Äã‚Ä¢ Private _mintAmounts: null | Readonly<{ amount0: default ; amount1: default }> = nullDefined in‚Äãentities/position.ts:31_token0Amount‚Äã‚Ä¢ Private _token0Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:29_token1Amount‚Äã‚Ä¢ Private _token1Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:30liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/position.ts:26pool‚Äã‚Ä¢ Readonly pool: PoolDefined in‚Äãentities/position.ts:23tickLower‚Äã‚Ä¢ Readonly tickLower: numberDefined in‚Äãentities/position.ts:24tickUpper‚Äã‚Ä¢ Readonly tickUpper: numberDefined in‚Äãentities/position.ts:25Accessors‚Äãamount0‚Äã‚Ä¢ get amount0(): CurrencyAmount<Token>Returns the amount of token0 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:68amount1‚Äã‚Ä¢ get amount1(): CurrencyAmount<Token>Returns the amount of token1 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:100mintAmounts‚Äã‚Ä¢ get mintAmounts(): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at the current price for the poolReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>Defined in‚Äãentities/position.ts:258token0PriceLower‚Äã‚Ä¢ get token0PriceLower(): Price<Token, Token>Returns the price of token0 at the lower tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:54token0PriceUpper‚Äã‚Ä¢ get token0PriceUpper(): Price<Token, Token>Returns the price of token0 at the upper tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:61Methods‚ÄãburnAmountsWithSlippage‚Äã‚ñ∏ burnAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercenttolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:213mintAmountsWithSlippage‚Äã‚ñ∏ mintAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to safely mint the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentTolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:157ratiosAfterSlippage‚Äã‚ñ∏ Private ratiosAfterSlippage(slippageTolerance): ObjectReturns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentageParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe amount by which the price can 'slip' before the transaction will revertReturns‚ÄãObjectThe sqrt ratios after slippageNameTypesqrtRatioX96LowerdefaultsqrtRatioX96UpperdefaultDefined in‚Äãentities/position.ts:134fromAmount0‚Äã‚ñ∏ Static fromAmount0(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited amount of token1Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:354fromAmount1‚Äã‚ñ∏ Static fromAmount1(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited amount of token0Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumberReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:378fromAmounts‚Äã‚ñ∏ Static fromAmounts(__namedParameters): PositionComputes the maximum amount of liquidity received for a given amount of token0, token1, and the prices at the tick boundaries.Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe amount of liquidity for the positionDefined in‚Äãentities/position.ts:312Helpful?PreviousPoolNextPositionLibraryTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessorsamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethodsburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
406,p.org sdk core reference classes Fraction#constructor,"p.org sdk core reference classes Fraction#constructor.    Fraction | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesFractionHelpful?On this pageFraction@uniswap/sdk-core / Exports / FractionClass: FractionHierarchy‚ÄãFraction‚Ü≥ CurrencyAmount‚Ü≥ Percent‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatornumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionConstructors‚Äãconstructor‚Äã‚Ä¢ new Fraction(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:107subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:138toSignificant‚Äã‚ñ∏ toSignificant(significantDigits, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:123tryParseFraction‚Äã‚ñ∏ Static Private tryParseFraction(fractionish): FractionParameters‚ÄãNameTypefractionishBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:33Helpful?PreviousEtherNextNativeCurrencyHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatornumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
407,p.org sdk v3 reference classes Trade#fromroutes,"p.org sdk v3 reference classes Trade#fromroutes.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTradeHelpful?On this pageTrade@uniswap/v3-sdk / Exports / TradeClass: Trade<TInput, TOutput, TTradeType>Represents a trade executed against a set of routes where some percentage of the input is split across each route.Each route has its own set of pools. Pools can not be re-used across routes.Does not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and when it is executed.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessors‚ÄãexecutionPriceinputAmountoutputAmountpriceImpactrouteMethods‚ÄãmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Trade<TInput, TOutput, TTradeType>(__namedParameters)Construct a trade by passing in the pre-computed property valuesType parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyTTradeTypeextends TradeTypeParameters‚ÄãNameType__namedParametersObject__namedParameters.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]__namedParameters.tradeTypeTTradeTypeDefined in‚Äãentities/trade.ts:397Properties‚Äã_executionPrice‚Äã‚Ä¢ Private _executionPrice: undefined | Price<TInput, TOutput>The cached result of the computed execution priceDefined in‚Äãentities/trade.ts:143_inputAmount‚Äã‚Ä¢ Private _inputAmount: undefined | CurrencyAmount<TInput>The cached result of the input amount computationDefined in‚Äãentities/trade.ts:97_outputAmount‚Äã‚Ä¢ Private _outputAmount: undefined | CurrencyAmount<TOutput>The cached result of the output amount computationDefined in‚Äãentities/trade.ts:120_priceImpact‚Äã‚Ä¢ Private _priceImpact: undefined | PercentThe cached result of the price impact computationDefined in‚Äãentities/trade.ts:164swaps‚Äã‚Ä¢ Readonly swaps: { inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]The swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.Defined in‚Äãentities/trade.ts:82tradeType‚Äã‚Ä¢ Readonly tradeType: TTradeTypeThe type of the trade, either exact in or exact out.Defined in‚Äãentities/trade.ts:91Accessors‚ÄãexecutionPrice‚Äã‚Ä¢ get executionPrice(): Price<TInput, TOutput>The price expressed in terms of output amount/input amount.Returns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/trade.ts:148inputAmount‚Äã‚Ä¢ get inputAmount(): CurrencyAmount<TInput>The input amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TInput>Defined in‚Äãentities/trade.ts:102outputAmount‚Äã‚Ä¢ get outputAmount(): CurrencyAmount<TOutput>The output amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TOutput>Defined in‚Äãentities/trade.ts:125priceImpact‚Äã‚Ä¢ get priceImpact(): PercentReturns the percent difference between the route's mid price and the price impactReturns‚ÄãPercentDefined in‚Äãentities/trade.ts:169route‚Äã‚Ä¢ get route(): Route<TInput, TOutput>DeprecatedDeprecated in favor of 'swaps' property. If the trade consists of multiple routes this will return an error.When the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.Returns‚ÄãRoute<TInput, TOutput>Defined in‚Äãentities/trade.ts:73Methods‚ÄãmaximumAmountIn‚Äã‚ñ∏ maximumAmountIn(slippageTolerance, amountIn?): CurrencyAmount<TInput>Get the maximum amount in that can be spent via this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountInCurrencyAmount<TInput>-Returns‚ÄãCurrencyAmount<TInput>The amount inDefined in‚Äãentities/trade.ts:456minimumAmountOut‚Äã‚ñ∏ minimumAmountOut(slippageTolerance, amountOut?): CurrencyAmount<TOutput>Get the minimum amount that must be received from this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountOutCurrencyAmount<TOutput>-Returns‚ÄãCurrencyAmount<TOutput>The amount outDefined in‚Äãentities/trade.ts:438worstExecutionPrice‚Äã‚ñ∏ worstExecutionPrice(slippageTolerance): Price<TInput, TOutput>Return the execution price after accounting for slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentthe allowed tolerated slippageReturns‚ÄãPrice<TInput, TOutput>The execution priceDefined in‚Äãentities/trade.ts:471bestTradeExactIn‚Äã‚ñ∏ Static bestTradeExactIn<TInput, TOutput>(pools, currencyAmountIn, currencyOut, __namedParameters?, currentPools?, nextAmountIn?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_INPUT>[]>Given a list of pools, and a fixed amount in, returns the top maxNumResults trades that go from an input token amount to an output token, making at most maxHops hops. Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyAmountInCurrencyAmount<TInput>undefinedused in recursion; the original value of the currencyAmountIn parametercurrencyOutTOutputundefinedthe desired currency out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountInCurrencyAmount<Currency>currencyAmountInexact amount of input currency to spendbestTradesTrade<TInput, TOutput, EXACT_INPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>[]>The exact in tradeDefined in‚Äãentities/trade.ts:495bestTradeExactOut‚Äã‚ñ∏ Static bestTradeExactOut<TInput, TOutput>(pools, currencyIn, currencyAmountOut, __namedParameters?, currentPools?, nextAmountOut?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>similar to the above method but instead targets a fixed output amount given a list of pools, and a fixed amount out, returns the top maxNumResults trades that go from an input token to an output token amount, making at most maxHops hops note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyInTInputundefinedthe currency to spendcurrencyAmountOutCurrencyAmount<TOutput>undefinedthe desired currency amount out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountOutCurrencyAmount<Currency>currencyAmountOutthe exact amount of currency outbestTradesTrade<TInput, TOutput, EXACT_OUTPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>The exact out tradeDefined in‚Äãentities/trade.ts:576createUncheckedTrade‚Äã‚ñ∏ Static createUncheckedTrade<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.inputAmountCurrencyAmount<TInput>-constructorArguments.outputAmountCurrencyAmount<TOutput>-constructorArguments.routeRoute<TInput, TOutput>-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:346createUncheckedTradeWithMultipleRoutes‚Äã‚ñ∏ Static createUncheckedTradeWithMultipleRoutes<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:377exactIn‚Äã‚ñ∏ Static exactIn<TInput, TOutput>(route, amountIn): Promise<Trade<TInput, TOutput, EXACT_INPUT>>Constructs an exact in trade with the given amount in and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact in tradeamountInCurrencyAmount<TInput>The amount being passed inReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>>The exact in tradeDefined in‚Äãentities/trade.ts:194exactOut‚Äã‚ñ∏ Static exactOut<TInput, TOutput>(route, amountOut): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>>Constructs an exact out trade with the given amount out and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact out tradeamountOutCurrencyAmount<TOutput>The amount returned by the tradeReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>>The exact out tradeDefined in‚Äãentities/trade.ts:209fromRoute‚Äã‚ñ∏ Static fromRoute<TInput, TOutput, TTradeType>(route, amount, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade by simulating swaps through the given routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>route to swap throughamountTTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>the amount specified, either input or output, depending on tradeTypetradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The routeDefined in‚Äãentities/trade.ts:226fromRoutes‚Äã‚ñ∏ Static fromRoutes<TInput, TOutput, TTradeType>(routes, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade from routes by simulating swapsType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionroutes{ amount: TTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]the routes to swap through and how much of the amount should be routed through eachtradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The tradeDefined in‚Äãentities/trade.ts:276Helpful?PreviousTickMathNextFeeAmountType parametersTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessorsexecutionPriceinputAmountoutputAmountpriceImpactrouteMethodsmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
408,p.org sdk web3 react guides (https:  www.npmjs.com package @web3 react core),p.org sdk web3 react guides (https:  www.npmjs.com package @web3 react core). 
409,p.org contracts v3 reference periphery test PeripheryImmutableStateTest,p.org contracts v3 reference periphery test PeripheryImmutableStateTest.    PeripheryImmutableStateTest | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerTestBase64TestLiquidityAmountsTestMockTimeNonfungiblePositionManagerMockTimeSwapRouterNFTDescriptorTestPathTestPeripheryImmutableStateTestPoolAddressTestSelfPermitTestTestCallbackValidationTestERC20TestERC20MetadataTestERC20PermitAllowedTestMulticallTestPositionNFTOwnerTestUniswapV3CalleeTickLensTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryTestPeripheryImmutableStateTestHelpful?On this pagePeripheryImmutableStateTestFunctions‚Äãconstructor‚Äã function constructor( ) publicCopyEdit this pageHelpful?PreviousPathTestNextPoolAddressTestFunctionsconstructorDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
410,p.org sdk core reference enums SupportedChainId#arbitrum one,p.org sdk core reference enums SupportedChainId#arbitrum one.    SupportedChainId | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesenumsRoundingSupportedChainIdTradeTypeV2 SDKV1 SDKüè†Core SDKTechnical ReferenceenumsSupportedChainIdHelpful?On this pageSupportedChainId@uniswap/sdk-core / Exports / SupportedChainIdEnumeration: SupportedChainIdTable of contents‚ÄãEnumeration Members‚ÄãARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENEnumeration Members‚ÄãARBITRUM_ONE‚Äã‚Ä¢ ARBITRUM_ONE = 42161Defined in‚Äãconstants.ts:10ARBITRUM_RINKEBY‚Äã‚Ä¢ ARBITRUM_RINKEBY = 421611Defined in‚Äãconstants.ts:11CELO‚Äã‚Ä¢ CELO = 42220Defined in‚Äãconstants.ts:19CELO_ALFAJORES‚Äã‚Ä¢ CELO_ALFAJORES = 44787Defined in‚Äãconstants.ts:20GOERLI‚Äã‚Ä¢ GOERLI = 5Defined in‚Äãconstants.ts:7KOVAN‚Äã‚Ä¢ KOVAN = 42Defined in‚Äãconstants.ts:8MAINNET‚Äã‚Ä¢ MAINNET = 1Defined in‚Äãconstants.ts:4OPTIMISM‚Äã‚Ä¢ OPTIMISM = 10Defined in‚Äãconstants.ts:13OPTIMISM_GOERLI‚Äã‚Ä¢ OPTIMISM_GOERLI = 420Defined in‚Äãconstants.ts:14POLYGON‚Äã‚Ä¢ POLYGON = 137Defined in‚Äãconstants.ts:16POLYGON_MUMBAI‚Äã‚Ä¢ POLYGON_MUMBAI = 80001Defined in‚Äãconstants.ts:17RINKEBY‚Äã‚Ä¢ RINKEBY = 4Defined in‚Äãconstants.ts:6ROPSTEN‚Äã‚Ä¢ ROPSTEN = 3Defined in‚Äãconstants.ts:5Helpful?PreviousRoundingNextTradeTypeTable of contentsEnumeration MembersEnumeration MembersARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
411,p.org sdk swap widget guides getting started#json rpc endpoint,"p.org sdk swap widget guides getting started#json rpc endpoint.    Getting Started with the Swap Widget | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap WidgetOverviewGuidesGetting StartedExample ThemesTechnical Referenceweb3-reactCore SDKV2 SDKV1 SDKüè†Swap WidgetGuidesGetting StartedHelpful?On this pageGetting Started with the Swap WidgetThis guide walks you through the steps to embed the swap widget in your website in 2 minutes ‚Äî whether your site is already a decentralized application (dApp) or not. With the swap widget, your users can trade ERC-20 tokens on the Uniswap Protocol without leaving your site!Here‚Äôs a live preview of the swap widget.Example use cases include:Building a custom frontend for the Uniswap ProtocolSwapping assets in a DeFi applicationAcquiring a token to participate in your web3 community (e.g. FWB or a gaming token)Converting to the required currency for an NFT purchase (e.g. WETH)You can make the widget feel like a native part of your app by customizing the colors, font, and token list to match your app theme. This guide will teach you how.Installing the Widgets Library‚ÄãTo get started, install the widgets library using npm or Yarn. If you don‚Äôt already use it, you‚Äôll need to install react-redux as well.npmYarnnpm install --save @uniswap/widgets react-reduxCopyyarn add @uniswap/widgets react-reduxCopyAdding the Swap Widget to Your App‚ÄãNext, embed the React component in your application.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'function App() { <div className=""Uniswap""> <SwapWidget /> </div>}CopyThat‚Äôs it! You should now see a fully functional swap widget on your site. The widget is self-contained and gracefully handles all interactions with the Uniswap Protocol. It leverages the Auto Router to compute the best price across all Uniswap v2 and v3 pools.See a full implementation of the swap widget in the /cra and /nextjs branches of the widgets-demo repo.Create React App V4All code snippets will work seamlessly if you use Next.js or Create React App V5. However, if you‚Äôre using Create React App V4, you‚Äôll need to use the following import statements instead:import { SwapWidget } from '@uniswap/widgets/dist/index.js'import '@uniswap/widgets/dist/fonts.css'CopyRecommended ParametersThe swap widget is a React component that can be easily imported into any React project. It's designed to work out-of-the-box, with no required parameters or web3 integration necessary. Trading is supported on all networks where the Uniswap Protocol is deployed.Although the widget will work out-of-the-box with no parameters, we highly recommend integrators provide JSON-RPC endpoints, like from Infura or Alchemy. Existing dApps can also provide their existing web3 provider to integrate the widget seamlessly into their dApp.Additional optional parameters are available to customize the appearance and performance of the swap widget to fit your unique use case.Web3 Provider‚ÄãThe swap widget uses a web3 provider prop to allow users to connect their wallets, fetch balances, and submit transactions through the user‚Äôs connected wallet.If your app does not maintain its own web3 provider, you can omit the provider prop. The widget will use built-in wallet connection functionality (for WalletConnect and MetaMask), making it easy for you to integrate web3 in your app!If you already have a web3 provider, you can pass your provider object directly into the provider prop. Both ethers and web3.js provider objects are compatible with the widget, as is any EIP-1193 provider. You can directly use the providers returned from web3-react or wagmi (both are ethers providers). If it is not connected to a wallet, it will still be used to read data from the chain, but the widget will still prompt the user to ""Connect wallet"".Be sure to use the wallet-connected providerWhen using wagmi@v0.11, useProvider() will return the fallback provider, not the wallet-connected provider. You should instead pass useSigner<JsonRpcSigner>().data?.provider to reflect the user's connected wallet.If you maintain a web3 provider on your app, you should also consider intercepting the swap widget's wallet connection flow. Do so by passing a handler returning false to the onConnectWalletClick prop, which is triggered when the widget's ""Connect wallet"" button is clicked. Check out libraries such as web3-react, BlockNative‚Äôs Onboard, or Aragon‚Äôs useWallet() to build your own flow. To hide the swap widget's wallet connection flow entirely, pass true to the hideConnectionUI prop.The widget will match the network currently selected by the passed provider. If the user switches networks in your app or in their connected wallet, that change will propagate to the widget as well. If the user connects to a network that is not supported by the swap widget, the widget will gracefully disable itself.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'// We recommend you pass a web3 provider.import { provider } from './your/provider'// We recommend you pass your own JSON-RPC endpoints.const jsonRpcUrlMap = { 1: ['https://mainnet.infura.io/v3/<YOUR_INFURA_PROJECT_ID>'], 3: ['https://ropsten.infura.io/v3/<YOUR_INFURA_PROJECT_ID>']}function App() { <div className=""Uniswap""> <SwapWidget provider={provider} jsonRpcUrlMap={jsonRpcUrlMap} /> </div>}CopyJSON-RPC Endpoints‚ÄãJSON-RPC endpoints are used to read data when no provider is connected. We strongly recommend you pass either a Web3 Provider to the provider prop, or JSON-RPC endpoint URLs to the jsonRpcUrlMap prop.The widget will use these endpoints to fetch on-chain data and submit transactions for signature. If the user connects a MetaMask wallet, the widget will use the JSON-RPC provided by MetaMask when possible. (See a list of all chains supported on widget.) If you don‚Äôt yet have JSON-RPC endpoints, you can easily create them with services like Infura or Alchemy.If you choose not to provide a jsonRpcUrlMap prop or are missing endpoints for some chains, the widget uses free public JSON-RPC endpoints to still allow users to interact with the widget and fetch price quotes. However, these public endpoints are NOT recommended for production environment usage, are severely rate-limited, and aren't necessarily as reliable. When possible, we'd recommend providing your own endpoints!Customizing the Swap WidgetYou can set optional parameters to tailor the appearance and functionality of the swap widget to fit your dApp.Customizing the Width‚ÄãThe swap widget has a fixed height of 360px and a default width of 360px. You cannot modify the height of the widget. You can modify the width up to a minimum width of 300px.You can customize the width by passing a number (of pixels) or a valid CSS width to the width prop of the widget.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'function App() { <div className=""Uniswap""> <SwapWidget  width={360} // Custom width in pixels /> </div>}CopyFor example:width={360} sets the width to 360 pixelswidth=""100%"" sets the width to dynamically fill 100% of the parent containerwidth=""20em"" sets the width to 20 * 16 = 320 pixels because 16px is the base font-size of the widgetThe recommended and default width is 360 pixels.Customizing the Theme‚ÄãYou can customize the colors, font, and border radius of the swap widget to match the look and feel of your dApp. You can also toggle between light and dark modes. This section explains how to customize each attribute of the widget with your own theme.All attributes below are color codes, except fontFamily (string), borderRadius (number between 0 and 1), and tokenColorExtraction(boolean). The next two sections show code examples using these attributes.Check out examples of the swap widget, and the Figma file if you want to mock it up first!Overriding Attributes‚ÄãYou can override specific attributes of the widget by creating a Theme object and defining the properties you wish to override. Any properties left undefined will fallback to the default theme. For example, here is a simple Theme that removes the border radius and sets a custom font family.import { Theme, SwapWidget } from '@uniswap/widgets'// Define a custom theme to override default attributesconst theme: Theme = { borderRadius: 0, fontFamily: '""Helvetica""',}function App() { <div className=""Uniswap""> <SwapWidget theme={theme} /> </div>}CopyPlease note that the borderRadius attribute is a multiplier from 0 to 1 of how much radius to apply. Since the widget uses different values of border radius (e.g. internal edges have tighter radii than external edges), borderRadius will apply your multiplier value on all instances so that the border radii still look proportionally correct.Importing FontsThe swap widget fonts must be imported explicitly with import '@uniswap/widgets/fonts.css'. However, if you‚Äôre overriding the swap widget fonts with your own, or with a default font such as Helvetica in the example above, you can remove this import statement.Enabling Token Color Extraction‚ÄãBy default, the background color of the output module will be set by the¬†module¬†attribute. You can optionally enable color extraction to flood the output module with the color of the selected output token. In the above example, DAI is the output token so the output module is flooded with DAI yellow.To enable color extraction, set the tokenColorExtraction property to true in your Theme object.import { Theme, SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'const enableColorExtractionTheme: Theme = { tokenColorExtraction: true, // Enable color extraction of the output token}function App() { <div className=""Uniswap""> <SwapWidget theme={enableColorExtractionTheme} /> </div>}CopyToggling Light and Dark Mode‚ÄãThe swap widget provides a default light theme and dark theme as a starting point. You can import each one and extend it to create your own theme. If your app can toggle between light and dark mode, you can propagate that state down to the widget by following the example below.import { darkTheme, lightTheme, Theme, SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'let darkMode = true // Dynamically toggle dark mode on and offfunction App() { <div className=""Uniswap""> <SwapWidget theme={darkMode ? darkTheme : lightTheme} /> </div>}CopyMatching System Preference for Light and Dark Mode‚ÄãYou can match the user‚Äôs system preference for light/dark mode by using the useSystemTheme hook. This will return the default widget light or dark theme according to the user‚Äôs system configuration. You can extend this base theme with further customizations, as you will see in the next section.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'function useSystemTheme() { // Access}function App() { const theme = useSystemTheme() // Get a theme that matches the user system preference <div className=""Uniswap""> <SwapWidget theme={theme} /> </div>}CopyExtending Themes‚ÄãYou can extend any theme with custom attributes. The below example extends the base light and dark themes with custom colors.import { darkTheme, lightTheme, Theme, SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'const myLightTheme: Theme = { ...lightTheme, // Extend the lightTheme accent: '#FF007A', primary: '#000000', secondary: '#565A69',}const myDarkTheme: Theme = { ...darkTheme, // Extend the darkTheme accent: '#2172E5', primary: '#FFFFFF', secondary: '#888D9B',}let darkMode = truefunction App() { <div className=""Uniswap""> <SwapWidget theme={darkMode ? myDarkTheme : myLightTheme} /> </div>}CopyCustomizing the Token Lists‚ÄãBy default, the widget will use the Uniswap Labs default token list in the selector.Customizing the Default Token List‚ÄãIf you want to offer a different set of tokens in the widget, you can provide a custom tokenList parameter. You can browse popular token lists to find one that suits your needs and then pass the URL as a parameter.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'const CMC_TOKEN_LIST = 'https://api.coinmarketcap.com/data-api/v3/uniswap/all.json'function App() { <div className=""Uniswap""> <SwapWidget  tokenList={CMC_TOKEN_LIST} // Use the CoinMarketCap token list /> </div>}CopyAlternatively, you can create your own token list. There are two ways to provide your own token list for the widget.The first option is to create a full token list, host it at your own URI, and pass the URI as a parameter as in the above example. This option is recommended if you want to use the same token list in multiple places throughout your application or community.The second and easiest option is to construct a custom token list inline as an array of tokens. The schema is equivalent to the tokens array from the tokenlist JSON schema. This option lets you skip deployment, hosting, and versioning of a full URI token list. Here is an example of an inline token list containing only the DAI, USDT, and USDC tokens (in addition to ETH which is always available, regardless of token list).import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'// You can also pass a token list as JSON, as long as it matches the schemaconst MY_TOKEN_LIST = [ { ""name"": ""Dai Stablecoin"", ""address"": ""0x6B175474E89094C44Da98b954EedeAC495271d0F"", ""symbol"": ""DAI"", ""decimals"": 18, ""chainId"": 1, ""logoURI"": ""https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x6B175474E89094C44Da98b954EedeAC495271d0F/logo.png"" }, { ""name"": ""Tether USD"", ""address"": ""0xdAC17F958D2ee523a2206206994597C13D831ec7"", ""symbol"": ""USDT"", ""decimals"": 6, ""chainId"": 1, ""logoURI"": ""https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png"" }, { ""name"": ""USD Coin"", ""address"": ""0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"", ""symbol"": ""USDC"", ""decimals"": 6, ""chainId"": 1, ""logoURI"": ""https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/logo.png"" },]function App() { <div className=""Uniswap""> <SwapWidget tokenList={MY_TOKEN_LIST} /> </div>}CopyPlease note that the swap widget only enforces metadata validation on remotely hosted token lists, not on token list data passed as a literal value to the widget like in this example.If you want to add Layer 2 tokens to the token list, you can add an extension field. See this GitHub issue for details.Customizing the Default Input and Output Tokens‚ÄãYou can set the defaultInputTokenAddress, defaultInputAmount, defaultOutputTokenAddress, and defaultOutputAmount to pre-populate the input and output token fields respectively. This is useful when the widget appears in a context where you know which tokens the user is evaluating to trade. For example, if the widget appears on a page that displays the WBTC price chart, it would be helpful to pre-select WBTC as the output token in the widget.If your page does not need any particular defaults, then the recommended default input token is the native asset of the active network (e.g. ETH) and no default output token is recommended. Since ETH does not have an address, you can pass 'NATIVE' as the parameter to set it as the default input or output token.The following example sets the default input to 2 ETH and the default output token to WBTC.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'// Default token list from Uniswapconst UNISWAP_TOKEN_LIST = 'https://gateway.ipfs.io/ipns/tokens.uniswap.org'// Use the native token of the connected chain as the default input tokenconst NATIVE = 'NATIVE' // Special address for native token// WBTC as the default output tokenconst WBTC = '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599'function App() { <div className=""Uniswap""> <SwapWidget  tokenList={UNISWAP_TOKEN_LIST}  defaultInputTokenAddress={NATIVE}  defaultInputAmount={2}  defaultOutputTokenAddress={WBTC} /> </div>}CopyUnderstanding the Swap Widget States‚ÄãThe widget has two main connectivity states depending on if the user has connected a wallet.Before wallet connection, the widget will use the JSON-RPC endpoint to fetch token price data and provide trade quotes, but submitting transactions will be disabled.After wallet connection, the widget will be fully functional. The user will be able to fetch trade quotes and submit swap transactions using the JSON-RPC endpoint and web3 provider from their connected wallet.Questions?Join the Discord channel to ask questions and get support from the Uniswap community.Helpful?PreviousOverviewNextExample ThemesInstalling the Widgets LibraryAdding the Swap Widget to Your AppWeb3 ProviderJSON-RPC EndpointsCustomizing the WidthCustomizing the ThemeOverriding AttributesEnabling Token Color ExtractionToggling Light and Dark ModeMatching System Preference for Light and Dark ModeExtending ThemesCustomizing the Token ListsCustomizing the Default Token ListCustomizing the Default Input and Output TokensUnderstanding the Swap Widget StatesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
412,p.org sdk swap widget guides getting started#web3 provider,"p.org sdk swap widget guides getting started#web3 provider.    Getting Started with the Swap Widget | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap WidgetOverviewGuidesGetting StartedExample ThemesTechnical Referenceweb3-reactCore SDKV2 SDKV1 SDKüè†Swap WidgetGuidesGetting StartedHelpful?On this pageGetting Started with the Swap WidgetThis guide walks you through the steps to embed the swap widget in your website in 2 minutes ‚Äî whether your site is already a decentralized application (dApp) or not. With the swap widget, your users can trade ERC-20 tokens on the Uniswap Protocol without leaving your site!Here‚Äôs a live preview of the swap widget.Example use cases include:Building a custom frontend for the Uniswap ProtocolSwapping assets in a DeFi applicationAcquiring a token to participate in your web3 community (e.g. FWB or a gaming token)Converting to the required currency for an NFT purchase (e.g. WETH)You can make the widget feel like a native part of your app by customizing the colors, font, and token list to match your app theme. This guide will teach you how.Installing the Widgets Library‚ÄãTo get started, install the widgets library using npm or Yarn. If you don‚Äôt already use it, you‚Äôll need to install react-redux as well.npmYarnnpm install --save @uniswap/widgets react-reduxCopyyarn add @uniswap/widgets react-reduxCopyAdding the Swap Widget to Your App‚ÄãNext, embed the React component in your application.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'function App() { <div className=""Uniswap""> <SwapWidget /> </div>}CopyThat‚Äôs it! You should now see a fully functional swap widget on your site. The widget is self-contained and gracefully handles all interactions with the Uniswap Protocol. It leverages the Auto Router to compute the best price across all Uniswap v2 and v3 pools.See a full implementation of the swap widget in the /cra and /nextjs branches of the widgets-demo repo.Create React App V4All code snippets will work seamlessly if you use Next.js or Create React App V5. However, if you‚Äôre using Create React App V4, you‚Äôll need to use the following import statements instead:import { SwapWidget } from '@uniswap/widgets/dist/index.js'import '@uniswap/widgets/dist/fonts.css'CopyRecommended ParametersThe swap widget is a React component that can be easily imported into any React project. It's designed to work out-of-the-box, with no required parameters or web3 integration necessary. Trading is supported on all networks where the Uniswap Protocol is deployed.Although the widget will work out-of-the-box with no parameters, we highly recommend integrators provide JSON-RPC endpoints, like from Infura or Alchemy. Existing dApps can also provide their existing web3 provider to integrate the widget seamlessly into their dApp.Additional optional parameters are available to customize the appearance and performance of the swap widget to fit your unique use case.Web3 Provider‚ÄãThe swap widget uses a web3 provider prop to allow users to connect their wallets, fetch balances, and submit transactions through the user‚Äôs connected wallet.If your app does not maintain its own web3 provider, you can omit the provider prop. The widget will use built-in wallet connection functionality (for WalletConnect and MetaMask), making it easy for you to integrate web3 in your app!If you already have a web3 provider, you can pass your provider object directly into the provider prop. Both ethers and web3.js provider objects are compatible with the widget, as is any EIP-1193 provider. You can directly use the providers returned from web3-react or wagmi (both are ethers providers). If it is not connected to a wallet, it will still be used to read data from the chain, but the widget will still prompt the user to ""Connect wallet"".Be sure to use the wallet-connected providerWhen using wagmi@v0.11, useProvider() will return the fallback provider, not the wallet-connected provider. You should instead pass useSigner<JsonRpcSigner>().data?.provider to reflect the user's connected wallet.If you maintain a web3 provider on your app, you should also consider intercepting the swap widget's wallet connection flow. Do so by passing a handler returning false to the onConnectWalletClick prop, which is triggered when the widget's ""Connect wallet"" button is clicked. Check out libraries such as web3-react, BlockNative‚Äôs Onboard, or Aragon‚Äôs useWallet() to build your own flow. To hide the swap widget's wallet connection flow entirely, pass true to the hideConnectionUI prop.The widget will match the network currently selected by the passed provider. If the user switches networks in your app or in their connected wallet, that change will propagate to the widget as well. If the user connects to a network that is not supported by the swap widget, the widget will gracefully disable itself.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'// We recommend you pass a web3 provider.import { provider } from './your/provider'// We recommend you pass your own JSON-RPC endpoints.const jsonRpcUrlMap = { 1: ['https://mainnet.infura.io/v3/<YOUR_INFURA_PROJECT_ID>'], 3: ['https://ropsten.infura.io/v3/<YOUR_INFURA_PROJECT_ID>']}function App() { <div className=""Uniswap""> <SwapWidget provider={provider} jsonRpcUrlMap={jsonRpcUrlMap} /> </div>}CopyJSON-RPC Endpoints‚ÄãJSON-RPC endpoints are used to read data when no provider is connected. We strongly recommend you pass either a Web3 Provider to the provider prop, or JSON-RPC endpoint URLs to the jsonRpcUrlMap prop.The widget will use these endpoints to fetch on-chain data and submit transactions for signature. If the user connects a MetaMask wallet, the widget will use the JSON-RPC provided by MetaMask when possible. (See a list of all chains supported on widget.) If you don‚Äôt yet have JSON-RPC endpoints, you can easily create them with services like Infura or Alchemy.If you choose not to provide a jsonRpcUrlMap prop or are missing endpoints for some chains, the widget uses free public JSON-RPC endpoints to still allow users to interact with the widget and fetch price quotes. However, these public endpoints are NOT recommended for production environment usage, are severely rate-limited, and aren't necessarily as reliable. When possible, we'd recommend providing your own endpoints!Customizing the Swap WidgetYou can set optional parameters to tailor the appearance and functionality of the swap widget to fit your dApp.Customizing the Width‚ÄãThe swap widget has a fixed height of 360px and a default width of 360px. You cannot modify the height of the widget. You can modify the width up to a minimum width of 300px.You can customize the width by passing a number (of pixels) or a valid CSS width to the width prop of the widget.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'function App() { <div className=""Uniswap""> <SwapWidget  width={360} // Custom width in pixels /> </div>}CopyFor example:width={360} sets the width to 360 pixelswidth=""100%"" sets the width to dynamically fill 100% of the parent containerwidth=""20em"" sets the width to 20 * 16 = 320 pixels because 16px is the base font-size of the widgetThe recommended and default width is 360 pixels.Customizing the Theme‚ÄãYou can customize the colors, font, and border radius of the swap widget to match the look and feel of your dApp. You can also toggle between light and dark modes. This section explains how to customize each attribute of the widget with your own theme.All attributes below are color codes, except fontFamily (string), borderRadius (number between 0 and 1), and tokenColorExtraction(boolean). The next two sections show code examples using these attributes.Check out examples of the swap widget, and the Figma file if you want to mock it up first!Overriding Attributes‚ÄãYou can override specific attributes of the widget by creating a Theme object and defining the properties you wish to override. Any properties left undefined will fallback to the default theme. For example, here is a simple Theme that removes the border radius and sets a custom font family.import { Theme, SwapWidget } from '@uniswap/widgets'// Define a custom theme to override default attributesconst theme: Theme = { borderRadius: 0, fontFamily: '""Helvetica""',}function App() { <div className=""Uniswap""> <SwapWidget theme={theme} /> </div>}CopyPlease note that the borderRadius attribute is a multiplier from 0 to 1 of how much radius to apply. Since the widget uses different values of border radius (e.g. internal edges have tighter radii than external edges), borderRadius will apply your multiplier value on all instances so that the border radii still look proportionally correct.Importing FontsThe swap widget fonts must be imported explicitly with import '@uniswap/widgets/fonts.css'. However, if you‚Äôre overriding the swap widget fonts with your own, or with a default font such as Helvetica in the example above, you can remove this import statement.Enabling Token Color Extraction‚ÄãBy default, the background color of the output module will be set by the¬†module¬†attribute. You can optionally enable color extraction to flood the output module with the color of the selected output token. In the above example, DAI is the output token so the output module is flooded with DAI yellow.To enable color extraction, set the tokenColorExtraction property to true in your Theme object.import { Theme, SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'const enableColorExtractionTheme: Theme = { tokenColorExtraction: true, // Enable color extraction of the output token}function App() { <div className=""Uniswap""> <SwapWidget theme={enableColorExtractionTheme} /> </div>}CopyToggling Light and Dark Mode‚ÄãThe swap widget provides a default light theme and dark theme as a starting point. You can import each one and extend it to create your own theme. If your app can toggle between light and dark mode, you can propagate that state down to the widget by following the example below.import { darkTheme, lightTheme, Theme, SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'let darkMode = true // Dynamically toggle dark mode on and offfunction App() { <div className=""Uniswap""> <SwapWidget theme={darkMode ? darkTheme : lightTheme} /> </div>}CopyMatching System Preference for Light and Dark Mode‚ÄãYou can match the user‚Äôs system preference for light/dark mode by using the useSystemTheme hook. This will return the default widget light or dark theme according to the user‚Äôs system configuration. You can extend this base theme with further customizations, as you will see in the next section.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'function useSystemTheme() { // Access}function App() { const theme = useSystemTheme() // Get a theme that matches the user system preference <div className=""Uniswap""> <SwapWidget theme={theme} /> </div>}CopyExtending Themes‚ÄãYou can extend any theme with custom attributes. The below example extends the base light and dark themes with custom colors.import { darkTheme, lightTheme, Theme, SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'const myLightTheme: Theme = { ...lightTheme, // Extend the lightTheme accent: '#FF007A', primary: '#000000', secondary: '#565A69',}const myDarkTheme: Theme = { ...darkTheme, // Extend the darkTheme accent: '#2172E5', primary: '#FFFFFF', secondary: '#888D9B',}let darkMode = truefunction App() { <div className=""Uniswap""> <SwapWidget theme={darkMode ? myDarkTheme : myLightTheme} /> </div>}CopyCustomizing the Token Lists‚ÄãBy default, the widget will use the Uniswap Labs default token list in the selector.Customizing the Default Token List‚ÄãIf you want to offer a different set of tokens in the widget, you can provide a custom tokenList parameter. You can browse popular token lists to find one that suits your needs and then pass the URL as a parameter.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'const CMC_TOKEN_LIST = 'https://api.coinmarketcap.com/data-api/v3/uniswap/all.json'function App() { <div className=""Uniswap""> <SwapWidget  tokenList={CMC_TOKEN_LIST} // Use the CoinMarketCap token list /> </div>}CopyAlternatively, you can create your own token list. There are two ways to provide your own token list for the widget.The first option is to create a full token list, host it at your own URI, and pass the URI as a parameter as in the above example. This option is recommended if you want to use the same token list in multiple places throughout your application or community.The second and easiest option is to construct a custom token list inline as an array of tokens. The schema is equivalent to the tokens array from the tokenlist JSON schema. This option lets you skip deployment, hosting, and versioning of a full URI token list. Here is an example of an inline token list containing only the DAI, USDT, and USDC tokens (in addition to ETH which is always available, regardless of token list).import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'// You can also pass a token list as JSON, as long as it matches the schemaconst MY_TOKEN_LIST = [ { ""name"": ""Dai Stablecoin"", ""address"": ""0x6B175474E89094C44Da98b954EedeAC495271d0F"", ""symbol"": ""DAI"", ""decimals"": 18, ""chainId"": 1, ""logoURI"": ""https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x6B175474E89094C44Da98b954EedeAC495271d0F/logo.png"" }, { ""name"": ""Tether USD"", ""address"": ""0xdAC17F958D2ee523a2206206994597C13D831ec7"", ""symbol"": ""USDT"", ""decimals"": 6, ""chainId"": 1, ""logoURI"": ""https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png"" }, { ""name"": ""USD Coin"", ""address"": ""0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"", ""symbol"": ""USDC"", ""decimals"": 6, ""chainId"": 1, ""logoURI"": ""https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/logo.png"" },]function App() { <div className=""Uniswap""> <SwapWidget tokenList={MY_TOKEN_LIST} /> </div>}CopyPlease note that the swap widget only enforces metadata validation on remotely hosted token lists, not on token list data passed as a literal value to the widget like in this example.If you want to add Layer 2 tokens to the token list, you can add an extension field. See this GitHub issue for details.Customizing the Default Input and Output Tokens‚ÄãYou can set the defaultInputTokenAddress, defaultInputAmount, defaultOutputTokenAddress, and defaultOutputAmount to pre-populate the input and output token fields respectively. This is useful when the widget appears in a context where you know which tokens the user is evaluating to trade. For example, if the widget appears on a page that displays the WBTC price chart, it would be helpful to pre-select WBTC as the output token in the widget.If your page does not need any particular defaults, then the recommended default input token is the native asset of the active network (e.g. ETH) and no default output token is recommended. Since ETH does not have an address, you can pass 'NATIVE' as the parameter to set it as the default input or output token.The following example sets the default input to 2 ETH and the default output token to WBTC.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'// Default token list from Uniswapconst UNISWAP_TOKEN_LIST = 'https://gateway.ipfs.io/ipns/tokens.uniswap.org'// Use the native token of the connected chain as the default input tokenconst NATIVE = 'NATIVE' // Special address for native token// WBTC as the default output tokenconst WBTC = '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599'function App() { <div className=""Uniswap""> <SwapWidget  tokenList={UNISWAP_TOKEN_LIST}  defaultInputTokenAddress={NATIVE}  defaultInputAmount={2}  defaultOutputTokenAddress={WBTC} /> </div>}CopyUnderstanding the Swap Widget States‚ÄãThe widget has two main connectivity states depending on if the user has connected a wallet.Before wallet connection, the widget will use the JSON-RPC endpoint to fetch token price data and provide trade quotes, but submitting transactions will be disabled.After wallet connection, the widget will be fully functional. The user will be able to fetch trade quotes and submit swap transactions using the JSON-RPC endpoint and web3 provider from their connected wallet.Questions?Join the Discord channel to ask questions and get support from the Uniswap community.Helpful?PreviousOverviewNextExample ThemesInstalling the Widgets LibraryAdding the Swap Widget to Your AppWeb3 ProviderJSON-RPC EndpointsCustomizing the WidthCustomizing the ThemeOverriding AttributesEnabling Token Color ExtractionToggling Light and Dark ModeMatching System Preference for Light and Dark ModeExtending ThemesCustomizing the Token ListsCustomizing the Default Token ListCustomizing the Default Input and Output TokensUnderstanding the Swap Widget StatesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
413,p.org sdk core reference classes Percent#subtract,"p.org sdk core reference classes Percent#subtract.    Percent | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPercentHelpful?On this pagePercent@uniswap/sdk-core / Exports / PercentClass: PercentHierarchy‚ÄãFraction‚Ü≥ PercentTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatorisPercentnumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Percent(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshInherited from‚ÄãFraction.constructorDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26isPercent‚Äã‚Ä¢ Readonly isPercent: trueThis boolean prevents a fraction from being interpreted as a PercentDefined in‚Äãentities/fractions/percent.ts:19numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.addDefined in‚Äãentities/fractions/percent.ts:21divide‚Äã‚ñ∏ divide(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/percent.ts:33equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/percent.ts:29subtract‚Äã‚ñ∏ subtract(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/percent.ts:25toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber2format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/percent.ts:41toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber5format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/percent.ts:37Helpful?PreviousNativeCurrencyNextPriceHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatorisPercentnumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
414,p.org sdk v3 reference interfaces StandardPermitArguments#s,p.org sdk v3 reference interfaces StandardPermitArguments#s.    StandardPermitArguments | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesStandardPermitArgumentsHelpful?On this pageStandardPermitArguments@uniswap/v3-sdk / Exports / StandardPermitArgumentsInterface: StandardPermitArgumentsTable of contents‚ÄãProperties‚ÄãamountdeadlinersvProperties‚Äãamount‚Äã‚Ä¢ amount: BigintIshDefined in‚ÄãselfPermit.ts:10deadline‚Äã‚Ä¢ deadline: BigintIshDefined in‚ÄãselfPermit.ts:11r‚Äã‚Ä¢ r: stringDefined in‚ÄãselfPermit.ts:8s‚Äã‚Ä¢ s: stringDefined in‚ÄãselfPermit.ts:9v‚Äã‚Ä¢ v: 0 | 1 | 27 | 28Defined in‚ÄãselfPermit.ts:7Helpful?PreviousSafeTransferOptionsNextSwapOptionsTable of contentsPropertiesPropertiesamountdeadlinersvDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
415,p.org sdk core reference classes CurrencyAmount#divide,"p.org sdk core reference classes CurrencyAmount#divide.    CurrencyAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesCurrencyAmountHelpful?On this pageCurrencyAmount@uniswap/sdk-core / Exports / CurrencyAmountClass: CurrencyAmount<T>Type parameters‚ÄãNameTypeTextends CurrencyHierarchy‚ÄãFraction‚Ü≥ CurrencyAmountTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãcurrencydecimalScaledenominatornumeratorAccessors‚ÄãasFractionquotientremainderwrappedMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new CurrencyAmount<T>(currency, numerator, denominator?)Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypecurrencyTnumeratorBigintIshdenominator?BigintIshOverrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/currencyAmount.ts:40Properties‚Äãcurrency‚Äã‚Ä¢ Readonly currency: TDefined in‚Äãentities/fractions/currencyAmount.ts:14decimalScale‚Äã‚Ä¢ Readonly decimalScale: defaultDefined in‚Äãentities/fractions/currencyAmount.ts:15denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47wrapped‚Äã‚Ä¢ get wrapped(): CurrencyAmount<Token>Returns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/fractions/currencyAmount.ts:91Methods‚Äãadd‚Äã‚ñ∏ add(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.addDefined in‚Äãentities/fractions/currencyAmount.ts:47divide‚Äã‚ñ∏ divide(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/currencyAmount.ts:64equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/currencyAmount.ts:59subtract‚Äã‚ñ∏ subtract(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/currencyAmount.ts:53toExact‚Äã‚ñ∏ toExact(format?): stringParameters‚ÄãNameTypeformatobjectReturns‚ÄãstringDefined in‚Äãentities/fractions/currencyAmount.ts:86toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformat?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/currencyAmount.ts:77toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/currencyAmount.ts:69fromFractionalAmount‚Äã‚ñ∏ Static fromFractionalAmount<T>(currency, numerator, denominator): CurrencyAmount<T>Construct a currency amount with a denominator that is not equal to 1Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currencynumeratorBigintIshthe numerator of the fractional token amountdenominatorBigintIshthe denominator of the fractional token amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:32fromRawAmount‚Äã‚ñ∏ Static fromRawAmount<T>(currency, rawAmount): CurrencyAmount<T>Returns a new currency amount instance from the unitless amount of token, i.e. the raw amountType parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currency in the amountrawAmountBigintIshthe raw token or ether amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:22Helpful?PreviousOverviewNextEtherType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiescurrencydecimalScaledenominatornumeratorAccessorsasFractionquotientremainderwrappedMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
416,p.org sdk v3 reference classes Trade# outputamount,"p.org sdk v3 reference classes Trade# outputamount.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTradeHelpful?On this pageTrade@uniswap/v3-sdk / Exports / TradeClass: Trade<TInput, TOutput, TTradeType>Represents a trade executed against a set of routes where some percentage of the input is split across each route.Each route has its own set of pools. Pools can not be re-used across routes.Does not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and when it is executed.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessors‚ÄãexecutionPriceinputAmountoutputAmountpriceImpactrouteMethods‚ÄãmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Trade<TInput, TOutput, TTradeType>(__namedParameters)Construct a trade by passing in the pre-computed property valuesType parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyTTradeTypeextends TradeTypeParameters‚ÄãNameType__namedParametersObject__namedParameters.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]__namedParameters.tradeTypeTTradeTypeDefined in‚Äãentities/trade.ts:397Properties‚Äã_executionPrice‚Äã‚Ä¢ Private _executionPrice: undefined | Price<TInput, TOutput>The cached result of the computed execution priceDefined in‚Äãentities/trade.ts:143_inputAmount‚Äã‚Ä¢ Private _inputAmount: undefined | CurrencyAmount<TInput>The cached result of the input amount computationDefined in‚Äãentities/trade.ts:97_outputAmount‚Äã‚Ä¢ Private _outputAmount: undefined | CurrencyAmount<TOutput>The cached result of the output amount computationDefined in‚Äãentities/trade.ts:120_priceImpact‚Äã‚Ä¢ Private _priceImpact: undefined | PercentThe cached result of the price impact computationDefined in‚Äãentities/trade.ts:164swaps‚Äã‚Ä¢ Readonly swaps: { inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]The swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.Defined in‚Äãentities/trade.ts:82tradeType‚Äã‚Ä¢ Readonly tradeType: TTradeTypeThe type of the trade, either exact in or exact out.Defined in‚Äãentities/trade.ts:91Accessors‚ÄãexecutionPrice‚Äã‚Ä¢ get executionPrice(): Price<TInput, TOutput>The price expressed in terms of output amount/input amount.Returns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/trade.ts:148inputAmount‚Äã‚Ä¢ get inputAmount(): CurrencyAmount<TInput>The input amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TInput>Defined in‚Äãentities/trade.ts:102outputAmount‚Äã‚Ä¢ get outputAmount(): CurrencyAmount<TOutput>The output amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TOutput>Defined in‚Äãentities/trade.ts:125priceImpact‚Äã‚Ä¢ get priceImpact(): PercentReturns the percent difference between the route's mid price and the price impactReturns‚ÄãPercentDefined in‚Äãentities/trade.ts:169route‚Äã‚Ä¢ get route(): Route<TInput, TOutput>DeprecatedDeprecated in favor of 'swaps' property. If the trade consists of multiple routes this will return an error.When the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.Returns‚ÄãRoute<TInput, TOutput>Defined in‚Äãentities/trade.ts:73Methods‚ÄãmaximumAmountIn‚Äã‚ñ∏ maximumAmountIn(slippageTolerance, amountIn?): CurrencyAmount<TInput>Get the maximum amount in that can be spent via this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountInCurrencyAmount<TInput>-Returns‚ÄãCurrencyAmount<TInput>The amount inDefined in‚Äãentities/trade.ts:456minimumAmountOut‚Äã‚ñ∏ minimumAmountOut(slippageTolerance, amountOut?): CurrencyAmount<TOutput>Get the minimum amount that must be received from this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountOutCurrencyAmount<TOutput>-Returns‚ÄãCurrencyAmount<TOutput>The amount outDefined in‚Äãentities/trade.ts:438worstExecutionPrice‚Äã‚ñ∏ worstExecutionPrice(slippageTolerance): Price<TInput, TOutput>Return the execution price after accounting for slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentthe allowed tolerated slippageReturns‚ÄãPrice<TInput, TOutput>The execution priceDefined in‚Äãentities/trade.ts:471bestTradeExactIn‚Äã‚ñ∏ Static bestTradeExactIn<TInput, TOutput>(pools, currencyAmountIn, currencyOut, __namedParameters?, currentPools?, nextAmountIn?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_INPUT>[]>Given a list of pools, and a fixed amount in, returns the top maxNumResults trades that go from an input token amount to an output token, making at most maxHops hops. Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyAmountInCurrencyAmount<TInput>undefinedused in recursion; the original value of the currencyAmountIn parametercurrencyOutTOutputundefinedthe desired currency out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountInCurrencyAmount<Currency>currencyAmountInexact amount of input currency to spendbestTradesTrade<TInput, TOutput, EXACT_INPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>[]>The exact in tradeDefined in‚Äãentities/trade.ts:495bestTradeExactOut‚Äã‚ñ∏ Static bestTradeExactOut<TInput, TOutput>(pools, currencyIn, currencyAmountOut, __namedParameters?, currentPools?, nextAmountOut?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>similar to the above method but instead targets a fixed output amount given a list of pools, and a fixed amount out, returns the top maxNumResults trades that go from an input token to an output token amount, making at most maxHops hops note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyInTInputundefinedthe currency to spendcurrencyAmountOutCurrencyAmount<TOutput>undefinedthe desired currency amount out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountOutCurrencyAmount<Currency>currencyAmountOutthe exact amount of currency outbestTradesTrade<TInput, TOutput, EXACT_OUTPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>The exact out tradeDefined in‚Äãentities/trade.ts:576createUncheckedTrade‚Äã‚ñ∏ Static createUncheckedTrade<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.inputAmountCurrencyAmount<TInput>-constructorArguments.outputAmountCurrencyAmount<TOutput>-constructorArguments.routeRoute<TInput, TOutput>-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:346createUncheckedTradeWithMultipleRoutes‚Äã‚ñ∏ Static createUncheckedTradeWithMultipleRoutes<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:377exactIn‚Äã‚ñ∏ Static exactIn<TInput, TOutput>(route, amountIn): Promise<Trade<TInput, TOutput, EXACT_INPUT>>Constructs an exact in trade with the given amount in and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact in tradeamountInCurrencyAmount<TInput>The amount being passed inReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>>The exact in tradeDefined in‚Äãentities/trade.ts:194exactOut‚Äã‚ñ∏ Static exactOut<TInput, TOutput>(route, amountOut): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>>Constructs an exact out trade with the given amount out and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact out tradeamountOutCurrencyAmount<TOutput>The amount returned by the tradeReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>>The exact out tradeDefined in‚Äãentities/trade.ts:209fromRoute‚Äã‚ñ∏ Static fromRoute<TInput, TOutput, TTradeType>(route, amount, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade by simulating swaps through the given routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>route to swap throughamountTTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>the amount specified, either input or output, depending on tradeTypetradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The routeDefined in‚Äãentities/trade.ts:226fromRoutes‚Äã‚ñ∏ Static fromRoutes<TInput, TOutput, TTradeType>(routes, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade from routes by simulating swapsType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionroutes{ amount: TTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]the routes to swap through and how much of the amount should be routed through eachtradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The tradeDefined in‚Äãentities/trade.ts:276Helpful?PreviousTickMathNextFeeAmountType parametersTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessorsexecutionPriceinputAmountoutputAmountpriceImpactrouteMethodsmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
417,p.org sdk v3 reference classes SwapQuoter#v2interface,"p.org sdk v3 reference classes SwapQuoter#v2interface.    SwapQuoter | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesSwapQuoterHelpful?On this pageSwapQuoter@uniswap/v3-sdk / Exports / SwapQuoterClass: SwapQuoterRepresents the Uniswap V3 QuoterV1 contract with a method for returning the formatted calldata needed to call the quoter contract.Table of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãV1INTERFACEV2INTERFACEMethods‚ÄãquoteCallParametersConstructors‚Äãconstructor‚Äã‚Ä¢ new SwapQuoter()Properties‚ÄãV1INTERFACE‚Äã‚ñ™ Static V1INTERFACE: InterfaceDefined in‚Äãquoter.ts:37V2INTERFACE‚Äã‚ñ™ Static V2INTERFACE: InterfaceDefined in‚Äãquoter.ts:38Methods‚ÄãquoteCallParameters‚Äã‚ñ∏ Static quoteCallParameters<TInput, TOutput>(route, amount, tradeType, options?): MethodParametersProduces the on-chain method name of the appropriate function within QuoterV2, and the relevant hex encoded parameters.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The swap route, a list of pools through which a swap can occuramountCurrencyAmount<TInput | TOutput>The amount of the quote, either an amount in, or an amount outtradeTypeTradeTypeThe trade type, either exact input or exact outputoptionsQuoteOptionsThe optional params including price limit and Quoter contract switchReturns‚ÄãMethodParametersThe formatted calldataDefined in‚Äãquoter.ts:51Helpful?PreviousSwapMathNextSwapRouterTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesV1INTERFACEV2INTERFACEMethodsquoteCallParametersDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
418,p.org sdk core reference classes Price#remainder,"p.org sdk core reference classes Price#remainder.    Price | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPriceHelpful?On this pagePrice@uniswap/sdk-core / Exports / PriceClass: Price<TBase, TQuote>Type parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyHierarchy‚ÄãFraction‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessors‚ÄãadjustedForDecimalsasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Price<TBase, TQuote>(...args)Construct a price, either with the base and quote currency amount, or theType parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyParameters‚ÄãNameType...args[TBase, TQuote, BigintIsh, BigintIsh] | [{ baseAmount: CurrencyAmount<TBase> ; quoteAmount: CurrencyAmount<TQuote> }]Overrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/price.ts:18Properties‚ÄãbaseCurrency‚Äã‚Ä¢ Readonly baseCurrency: TBaseDefined in‚Äãentities/fractions/price.ts:10denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25quoteCurrency‚Äã‚Ä¢ Readonly quoteCurrency: TQuoteDefined in‚Äãentities/fractions/price.ts:11scalar‚Äã‚Ä¢ Readonly scalar: FractionDefined in‚Äãentities/fractions/price.ts:12Accessors‚ÄãadjustedForDecimals‚Äã‚Ä¢ Private get adjustedForDecimals(): FractionGet the value scaled by decimals for formattingReturns‚ÄãFractionDefined in‚Äãentities/fractions/price.ts:77asFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.addDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.divideDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): Price<TQuote, TBase>Flip the price, switching the base and quote currencyReturns‚ÄãPrice<TQuote, TBase>Overrides‚ÄãFraction.invertDefined in‚Äãentities/fractions/price.ts:49lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply<TOtherQuote>(other): Price<TBase, TOtherQuote>Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currencyType parameters‚ÄãNameTypeTOtherQuoteextends CurrencyParameters‚ÄãNameTypeDescriptionotherPrice<TQuote, TOtherQuote>the other priceReturns‚ÄãPrice<TBase, TOtherQuote>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/price.ts:57quote‚Äã‚ñ∏ quote(currencyAmount): CurrencyAmount<TQuote>Return the amount of quote currency corresponding to a given amount of the base currencyParameters‚ÄãNameTypeDescriptioncurrencyAmountCurrencyAmount<TBase>the amount of base currency to quote against the priceReturns‚ÄãCurrencyAmount<TQuote>Defined in‚Äãentities/fractions/price.ts:67subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.subtractDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber4format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/price.ts:85toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/price.ts:81Helpful?PreviousPercentNextTokenType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessorsadjustedForDecimalsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
419,p.org sdk v3 reference classes NonfungiblePositionManager#collectcallparameters,"p.org sdk v3 reference classes NonfungiblePositionManager#collectcallparameters.    NonfungiblePositionManager | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesNonfungiblePositionManagerHelpful?On this pageNonfungiblePositionManager@uniswap/v3-sdk / Exports / NonfungiblePositionManagerClass: NonfungiblePositionManagerTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãaddCallParameterscollectCallParameterscreateCallParametersencodeCollectencodeCreateremoveCallParameterssafeTransferFromParametersConstructors‚Äãconstructor‚Äã‚Ä¢ Private new NonfungiblePositionManager()Cannot be constructed.Defined in‚ÄãnonfungiblePositionManager.ts:181Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚ÄãnonfungiblePositionManager.ts:176Methods‚ÄãaddCallParameters‚Äã‚ñ∏ Static addCallParameters(position, options): MethodParametersParameters‚ÄãNameTypepositionPositionoptionsAddLiquidityOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:199collectCallParameters‚Äã‚ñ∏ Static collectCallParameters(options): MethodParametersParameters‚ÄãNameTypeoptionsCollectOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:326createCallParameters‚Äã‚ñ∏ Static createCallParameters(pool): MethodParametersParameters‚ÄãNameTypepoolPoolReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:192encodeCollect‚Äã‚ñ∏ Static Private encodeCollect(options): string[]Parameters‚ÄãNameTypeoptionsCollectOptionsReturns‚Äãstring[]Defined in‚ÄãnonfungiblePositionManager.ts:286encodeCreate‚Äã‚ñ∏ Static Private encodeCreate(pool): stringParameters‚ÄãNameTypepoolPoolReturns‚ÄãstringDefined in‚ÄãnonfungiblePositionManager.ts:183removeCallParameters‚Äã‚ñ∏ Static removeCallParameters(position, options): MethodParametersProduces the calldata for completely or partially exiting a positionParameters‚ÄãNameTypeDescriptionpositionPositionThe position to exitoptionsRemoveLiquidityOptionsAdditional information necessary for generating the calldataReturns‚ÄãMethodParametersThe call parametersDefined in‚ÄãnonfungiblePositionManager.ts:341safeTransferFromParameters‚Äã‚ñ∏ Static safeTransferFromParameters(options): MethodParametersParameters‚ÄãNameTypeoptionsSafeTransferOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:416Helpful?PreviousNoTickDataProviderNextPaymentsTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsaddCallParameterscollectCallParameterscreateCallParametersencodeCollectencodeCreateremoveCallParameterssafeTransferFromParametersDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
420,p.org sdk v3 reference interfaces FeeOptions#recipient,p.org sdk v3 reference interfaces FeeOptions#recipient.    FeeOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesFeeOptionsHelpful?On this pageFeeOptions@uniswap/v3-sdk / Exports / FeeOptionsInterface: FeeOptionsTable of contents‚ÄãProperties‚ÄãfeerecipientProperties‚Äãfee‚Äã‚Ä¢ fee: PercentThe percent of the output that will be taken as a fee.Defined in‚Äãpayments.ts:11recipient‚Äã‚Ä¢ recipient: stringThe recipient of the fee.Defined in‚Äãpayments.ts:16Helpful?PreviousCommonAddLiquidityOptionsNextIncentiveKeyTable of contentsPropertiesPropertiesfeerecipientDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
421,p.org contracts v3 reference periphery libraries TransferHelper,"p.org contracts v3 reference periphery libraries TransferHelper.    TransferHelper | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesBase64BytesLibCallbackValidationChainIdHexStringsLiquidityAmountsNFTDescriptorNFTSVGOracleLibraryPathPoolAddressPoolTicksCounterPositionKeyTokenRatioSortOrderTransferHelperWeightedOracleLibraryStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryLibrariesTransferHelperHelpful?On this pageTransferHelperFunctions‚ÄãsafeTransferFrom‚Äã function safeTransferFrom( address token, address from, address to, uint256 value ) internalCopyTransfers tokens from the targeted address to the given destination Errors with 'STF' if transfer failsParameters:‚ÄãNameTypeDescriptiontokenaddressThe contract address of the token to be transferredfromaddressThe originating address from which the tokens will be transferredtoaddressThe destination address of the transfervalueuint256The amount to be transferredsafeTransfer‚Äã function safeTransfer( address token, address to, uint256 value ) internalCopyTransfers tokens from msg.sender to a recipientErrors with ST if transfer failsParameters:‚ÄãNameTypeDescriptiontokenaddressThe contract address of the token which will be transferredtoaddressThe recipient of the transfervalueuint256The value of the transfersafeApprove‚Äã function safeApprove( address token, address to, uint256 value ) internalCopyApproves the stipulated contract to spend the given allowance in the given tokenErrors with 'SA' if transfer failsParameters:‚ÄãNameTypeDescriptiontokenaddressThe contract address of the token to be approvedtoaddressThe target of the approvalvalueuint256The amount of the given token the target will be allowed to spendsafeTransferETH‚Äã function safeTransferETH( address to, uint256 value ) internalCopyTransfers ETH to the recipient addressFails with STEParameters:‚ÄãNameTypeDescriptiontoaddressThe destination of the transfervalueuint256The value to be transferredEdit this pageHelpful?PreviousTokenRatioSortOrderNextWeightedOracleLibraryFunctionssafeTransferFromsafeTransfersafeApprovesafeTransferETHDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
422,p.org sdk v1 reference computation,"p.org sdk v1 reference computation.    Computation | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKOverviewGuidesGetting StartedTechnical ReferenceDataComputationFormatOrchestrationTransactConstantsTypesüè†V1 SDKTechnical ReferenceComputationHelpful?On this pagegetMarketDetailsThis function computes market details for the passed reserves data. Markets are defined as ETH<>ERC20, ERC20<>ETH, or ERC20<>ERC20 pairs, where the first currency is the input and the second is the output. Reserves must be specified for both the input and output currency.In the case of ETH, undefined should be passed as the reserves data. getTokenReserves formatted ERC20 reserves, or the requisite data can be fetched manually and passed in.Rates are calculated to 18 decimal places of precision.Function Signature‚Äãexport function getMarketDetails( optionalReservesInput: OptionalReserves, optionalReservesOutput: OptionalReserves): MarketDetailsCopyInput Parameters‚ÄãParameterTypeDescriptionoptionalReservesInputOptionalReservesReserves data for the input currency.optionalReservesOutputOptionalReservesReserves data for the output currency.Example Usage‚Äãconst reserves: ChainIdOrProvider = await getTokenReserves(tokenAddress)const marketDetails: MarketDetails = getMarketDetails(undefined, reserves) // ETH<>ERC20/*{ // market type tradeType: 'ETH_TO_TOKEN', // dummy ETH reserves inputReserves: { token: {  chainId: 1,  address: 'ETH',  decimals: 18 } }, // normalized token reserves outputReserves: <NormalizedReserves>, // market rate calculated to 18 decimals of precision marketRate: { rate: <BigNumber>,  // x output / 1 input rateInverted: <BigNumber> // x input / 1 output }}*/CopygetTradeDetailsThis function computes trade details for the passed market data.-This function throws an error if the passed _tradeAmount is greater than the amount of ETH/tokens in the relevant Uniswap exchange.Trade amounts must be passed in non-decimal form (where e.g. 1 ETH is represented as 1000000000000000000 wei).Function Signature‚Äãexport function getTradeDetails( tradeExact: TRADE_EXACT, _tradeAmount: BigNumberish, marketDetails: MarketDetails): TradeDetailsCopyInput Parameters‚ÄãParameterTypeDescriptiontradeExactTRADE_EXACTWhether either the input or the output currency is the exact amount._tradeAmountBigNumberishThe amount to buy/sell (of the output/input currency, depending on tradeExact)marketDetailsMarketDetailsMarket details.Example Usage‚Äãconst _purchaseAmount: BigNumber = new BigNumber('2.5')const _decimals: number = 18const tradeAmount: BigNumber = _purchaseAmount.multipliedBy(10 ** _decimals)const marketDetails: MarketDetails = getMarketDetails(undefined, reserves) // ETH<>ERC20// buy exactly 2.5 of an 18 decimal ERC20 with ETHconst tradeDetails: TradeDetails = getTradeDetails(TRADE_EXACT.OUTPUT, tradeAmount, marketDetails)/*{ marketDetailsPre: <MarketDetails>, marketDetailsPost: <MarketDetails>, tradeType: 'ETH_TO_TOKEN', tradeExact: 'OUTPUT', inputAmount: { token: <Token>, amount: <BigNumber> }, outputAmount: { token: <Token>, amount: <BigNumber> }, // execution rate calculated to 18 decimals of precision executionRate: { rate: <BigNumber>   // x output / 1 input rateInverted: <BigNumber> // x input / 1 output }, // slippage between the pre- and post-trade market rates, in basis points, calculated to 18 decimals of precision marketRateSlippage: <BigNumber>, // slippage between the execution and pre-trade market rate, in basis points, calculated to 18 decimals of precision executionRateSlippage: <BigNumber>}*/CopyHelpful?PreviousDataNextFormatFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
423,p.org sdk v3 reference classes Route#pools,"p.org sdk v3 reference classes Route#pools.    Route | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesRouteHelpful?On this pageRoute@uniswap/v3-sdk / Exports / RouteClass: Route<TInput, TOutput>Represents a list of pools through which a swap can occurType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input tokenTOutputextends CurrencyThe output tokenTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_midPriceinputoutputpoolstokenPathAccessors‚ÄãchainIdmidPriceConstructors‚Äãconstructor‚Äã‚Ä¢ new Route<TInput, TOutput>(pools, input, output)Creates an instance of route.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDescriptionpoolsPool[]An array of Pool objects, ordered by the route the swap will takeinputTInputThe input tokenoutputTOutputThe output tokenDefined in‚Äãentities/route.ts:25Properties‚Äã_midPrice‚Äã‚Ä¢ Private _midPrice: null | Price<TInput, TOutput> = nullDefined in‚Äãentities/route.ts:17input‚Äã‚Ä¢ Readonly input: TInputDefined in‚Äãentities/route.ts:14output‚Äã‚Ä¢ Readonly output: TOutputDefined in‚Äãentities/route.ts:15pools‚Äã‚Ä¢ Readonly pools: Pool[]Defined in‚Äãentities/route.ts:12tokenPath‚Äã‚Ä¢ Readonly tokenPath: Token[]Defined in‚Äãentities/route.ts:13Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns‚ÄãnumberDefined in‚Äãentities/route.ts:54midPrice‚Äã‚Ä¢ get midPrice(): Price<TInput, TOutput>Returns the mid price of the routeReturns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/route.ts:61Helpful?PreviousPositionLibraryNextSelfPermitType parametersTable of contentsConstructorsPropertiesAccessorsConstructorsconstructorProperties_midPriceinputoutputpoolstokenPathAccessorschainIdmidPriceDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
424,p.org contracts v3 reference periphery NonfungibleTokenPositionDescriptor,"p.org contracts v3 reference periphery NonfungibleTokenPositionDescriptor.    NonfungibleTokenPositionDescriptor | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryNonfungibleTokenPositionDescriptorHelpful?On this pageNonfungibleTokenPositionDescriptorProduces a string containing the data URI for a JSON metadata stringFunctions‚Äãconstructor‚Äã function constructor( ) publicCopytokenURI‚Äã function tokenURI( contract INonfungiblePositionManager positionManager, uint256 tokenId ) external returns (string)CopyProduces the URI describing a particular token ID for a position managerNote this URI may be a data: URI with the JSON contents directly inlinedParameters:‚ÄãNameTypeDescriptionpositionManagercontract INonfungiblePositionManagerThe position manager for which to describe the tokentokenIduint256The ID of the token for which to produce a description, which may not be validReturn Values:‚ÄãNameTypeDescriptionThecontract INonfungiblePositionManagerURI of the ERC721-compliant metadataflipRatio‚Äã function flipRatio( ) public returns (bool)CopytokenRatioPriority‚Äã function tokenRatioPriority( ) public returns (int256)CopyEdit this pageHelpful?PreviousNonfungiblePositionManagerNextSwapRouterFunctionsconstructortokenURIflipRatiotokenRatioPriorityDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
425,p.org sdk v3 reference interfaces CommonAddLiquidityOptions#token1permit,"p.org sdk v3 reference interfaces CommonAddLiquidityOptions#token1permit.    CommonAddLiquidityOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesCommonAddLiquidityOptionsHelpful?On this pageCommonAddLiquidityOptions@uniswap/v3-sdk / Exports / CommonAddLiquidityOptionsInterface: CommonAddLiquidityOptionsOptions for producing the calldata to add liquidity.Table of contents‚ÄãProperties‚ÄãdeadlineslippageTolerancetoken0Permittoken1PermituseNativeProperties‚Äãdeadline‚Äã‚Ä¢ deadline: BigintIshWhen the transaction expires, in epoch seconds.Defined in‚ÄãnonfungiblePositionManager.ts:56slippageTolerance‚Äã‚Ä¢ slippageTolerance: PercentHow much the pool price is allowed to move.Defined in‚ÄãnonfungiblePositionManager.ts:51token0Permit‚Äã‚Ä¢ Optional token0Permit: PermitOptionsThe optional permit parameters for spending token0Defined in‚ÄãnonfungiblePositionManager.ts:66token1Permit‚Äã‚Ä¢ Optional token1Permit: PermitOptionsThe optional permit parameters for spending token1Defined in‚ÄãnonfungiblePositionManager.ts:71useNative‚Äã‚Ä¢ Optional useNative: NativeCurrencyWhether to spend ether. If true, one of the pool tokens must be WETH, by default falseDefined in‚ÄãnonfungiblePositionManager.ts:61Helpful?PreviousCollectOptionsNextFeeOptionsTable of contentsPropertiesPropertiesdeadlineslippageTolerancetoken0Permittoken1PermituseNativeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
426,p.org concepts protocol integration issues,"p.org concepts protocol integration issues.    Token Integration Issues | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchWhat Is Uniswap?The Uniswap ProtocolProtocol ConceptsConcentrated LiquidityFeesOracleRange OrdersSwapsToken Integration IssuesGovernanceResearchResourcesGlossaryüè†Protocol ConceptsToken Integration IssuesHelpful?On this pageToken Integration IssuesFee-on-transfer and rebasing tokens will not function correctly on v3.Fee-on-transfer Tokens‚ÄãFee-on-transfer tokens will not function with our router contracts. As a workaround, the token creators may create a token wrapper or a customized router. We will not be making a router that supports fee-on-transfer tokens in the future.Rebasing Tokens‚ÄãRebasing tokens will succeed in pool creation and swapping, but liquidity providers will bear the loss of a negative rebase when their position becomes active, with no way to recover the loss.Helpful?PreviousSwapsNextOverviewFee-on-transfer TokensRebasing TokensDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
427,p.org sdk v3 reference classes SwapQuoter,"p.org sdk v3 reference classes SwapQuoter.    SwapQuoter | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesSwapQuoterHelpful?On this pageSwapQuoter@uniswap/v3-sdk / Exports / SwapQuoterClass: SwapQuoterRepresents the Uniswap V3 QuoterV1 contract with a method for returning the formatted calldata needed to call the quoter contract.Table of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãV1INTERFACEV2INTERFACEMethods‚ÄãquoteCallParametersConstructors‚Äãconstructor‚Äã‚Ä¢ new SwapQuoter()Properties‚ÄãV1INTERFACE‚Äã‚ñ™ Static V1INTERFACE: InterfaceDefined in‚Äãquoter.ts:37V2INTERFACE‚Äã‚ñ™ Static V2INTERFACE: InterfaceDefined in‚Äãquoter.ts:38Methods‚ÄãquoteCallParameters‚Äã‚ñ∏ Static quoteCallParameters<TInput, TOutput>(route, amount, tradeType, options?): MethodParametersProduces the on-chain method name of the appropriate function within QuoterV2, and the relevant hex encoded parameters.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The swap route, a list of pools through which a swap can occuramountCurrencyAmount<TInput | TOutput>The amount of the quote, either an amount in, or an amount outtradeTypeTradeTypeThe trade type, either exact input or exact outputoptionsQuoteOptionsThe optional params including price limit and Quoter contract switchReturns‚ÄãMethodParametersThe formatted calldataDefined in‚Äãquoter.ts:51Helpful?PreviousSwapMathNextSwapRouterTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesV1INTERFACEV2INTERFACEMethodsquoteCallParametersDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
428,p.org sdk v3 reference interfaces AllowedPermitArguments#v,p.org sdk v3 reference interfaces AllowedPermitArguments#v.    AllowedPermitArguments | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesAllowedPermitArgumentsHelpful?On this pageAllowedPermitArguments@uniswap/v3-sdk / Exports / AllowedPermitArgumentsInterface: AllowedPermitArgumentsTable of contents‚ÄãProperties‚ÄãexpirynoncersvProperties‚Äãexpiry‚Äã‚Ä¢ expiry: BigintIshDefined in‚ÄãselfPermit.ts:19nonce‚Äã‚Ä¢ nonce: BigintIshDefined in‚ÄãselfPermit.ts:18r‚Äã‚Ä¢ r: stringDefined in‚ÄãselfPermit.ts:16s‚Äã‚Ä¢ s: stringDefined in‚ÄãselfPermit.ts:17v‚Äã‚Ä¢ v: 0 | 1 | 27 | 28Defined in‚ÄãselfPermit.ts:15Helpful?PreviousFeeAmountNextBestTradeOptionsTable of contentsPropertiesPropertiesexpirynoncersvDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
429,p.org contracts v3 reference periphery lens Quoter,"p.org contracts v3 reference periphery lens Quoter.    Quoter | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensQuoterQuoterV2TickLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryLensQuoterHelpful?On this pageQuoterAllows getting the expected amount out or amount in for a given swap without executing the swapThese functions are not gas efficient and should not be called on chain. Instead, optimistically execute the swap and check the amounts in the callback.Functions‚Äãconstructor‚Äã function constructor( ) publicCopyuniswapV3SwapCallback‚Äã function uniswapV3SwapCallback( int256 amount0Delta, int256 amount1Delta, bytes data ) externalCopyCalled to msg.sender after executing a swap via IUniswapV3Pool#swap.In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.Parameters:‚ÄãNameTypeDescriptionamount0Deltaint256The amount of token0 that was sent (negative) or must be received (positive) by the pool bythe end of the swap. If positive, the callback must send that amount of token0 to the pool. |amount1Delta | int256 | The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool. |data | bytes | Any data passed through by the caller via the IUniswapV3PoolActions#swap callquoteExactInputSingle‚Äã function quoteExactInputSingle( address tokenIn, address tokenOut, uint24 fee, uint256 amountIn, uint160 sqrtPriceLimitX96 ) public returns (uint256 amountOut)CopyReturns the amount out received for a given exact input but for a swap of a single poolParameters:‚ÄãNameTypeDescriptiontokenInaddressThe token being swapped intokenOutaddressThe token being swapped outfeeuint24The fee of the token pool to consider for the pairamountInuint256The desired input amountsqrtPriceLimitX96uint160The price limit of the pool that cannot be exceeded by the swapReturn Values:‚ÄãNameTypeDescriptionamountOutuint256The amount of tokenOut that would be receivedquoteExactInput‚Äã function quoteExactInput( bytes path, uint256 amountIn ) external returns (uint256 amountOut)CopyReturns the amount out received for a given exact input swap without executing the swapParameters:‚ÄãNameTypeDescriptionpathbytesThe path of the swap, i.e. each token pair and the pool feeamountInuint256The amount of the first token to swapReturn Values:‚ÄãNameTypeDescriptionamountOutuint256The amount of the last token that would be receivedquoteExactOutputSingle‚Äã function quoteExactOutputSingle( address tokenIn, address tokenOut, uint24 fee, uint256 amountOut, uint160 sqrtPriceLimitX96 ) public returns (uint256 amountIn)CopyReturns the amount in required to receive the given exact output amount but for a swap of a single poolParameters:‚ÄãNameTypeDescriptiontokenInaddressThe token being swapped intokenOutaddressThe token being swapped outfeeuint24The fee of the token pool to consider for the pairamountOutuint256The desired output amountsqrtPriceLimitX96uint160The price limit of the pool that cannot be exceeded by the swapReturn Values:‚ÄãNameTypeDescriptionamountInuint256The amount required as the input for the swap in order to receive amountOutquoteExactOutput‚Äã function quoteExactOutput( bytes path, uint256 amountOut ) external returns (uint256 amountIn)CopyReturns the amount in required for a given exact output swap without executing the swapParameters:‚ÄãNameTypeDescriptionpathbytesThe path of the swap, i.e. each token pair and the pool feeamountOutuint256The amount of the last token to receiveReturn Values:‚ÄãNameTypeDescriptionamountInuint256The amount of first token required to be paidEdit this pageHelpful?PreviousIWETH9NextQuoterV2FunctionsconstructoruniswapV3SwapCallbackquoteExactInputSinglequoteExactInputquoteExactOutputSinglequoteExactOutputDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
430,p.org sdk v3 reference interfaces WithdrawOptions,p.org sdk v3 reference interfaces WithdrawOptions.    WithdrawOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesWithdrawOptionsHelpful?On this pageWithdrawOptions@uniswap/v3-sdk / Exports / WithdrawOptionsInterface: WithdrawOptionsOptions to specify when withdrawing a position.Table of contents‚ÄãProperties‚ÄãdataownerProperties‚Äãdata‚Äã‚Ä¢ Optional data: stringSet when withdrawing. data is passed to safeTransferFrom when transferring the position from contract back to owner.Defined in‚Äãstaker.ts:66owner‚Äã‚Ä¢ owner: stringSet when withdrawing. The position will be sent to owner on withdraw.Defined in‚Äãstaker.ts:61Helpful?PreviousTickDataProviderNextOverviewTable of contentsPropertiesPropertiesdataownerDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
431,p.org sdk v3 reference interfaces ClaimOptions,p.org sdk v3 reference interfaces ClaimOptions.    ClaimOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesClaimOptionsHelpful?On this pageClaimOptions@uniswap/v3-sdk / Exports / ClaimOptionsInterface: ClaimOptionsOptions to specify when claiming rewards.Table of contents‚ÄãProperties‚ÄãamountrecipienttokenIdProperties‚Äãamount‚Äã‚Ä¢ Optional amount: BigintIshThe amount of rewardToken to claim. 0 claims all.Defined in‚Äãstaker.ts:52recipient‚Äã‚Ä¢ recipient: stringAddress to send rewards to.Defined in‚Äãstaker.ts:47tokenId‚Äã‚Ä¢ tokenId: BigintIshThe id of the NFTDefined in‚Äãstaker.ts:42Helpful?PreviousBestTradeOptionsNextCollectOptionsTable of contentsPropertiesPropertiesamountrecipienttokenIdDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
432,p.org contracts v3 reference periphery interfaces IQuoterV2,"p.org contracts v3 reference periphery interfaces IQuoterV2.    IQuoterV2 | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesIERC20MetadataIERC721PermitIMulticallINonfungiblePositionManagerINonfungibleTokenPositionDescriptorIPeripheryImmutableStateIPeripheryPaymentsIPeripheryPaymentsWithFeeIPoolInitializerIQuoterIQuoterV2ISelfPermitISwapRouterITickLensIV3MigratorexternalLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryInterfacesIQuoterV2Helpful?On this pageIQuoterV2Supports quoting the calculated amounts from exact input or exact output swaps. For each pool also tells you the number of initialized ticks crossed and the sqrt price of the pool after the swap.These functions are not marked view because they rely on calling non-view functions and reverting to compute the result. They are also not gas efficient and should not be called on-chain.Functions‚ÄãquoteExactInput‚Äã function quoteExactInput( bytes path, uint256 amountIn ) external returns (uint256 amountOut, uint160[] sqrtPriceX96AfterList, uint32[] initializedTicksCrossedList, uint256 gasEstimate)CopyReturns the amount out received for a given exact input swap without executing the swapParameters:‚ÄãNameTypeDescriptionpathbytesThe path of the swap, i.e. each token pair and the pool feeamountInuint256The amount of the first token to swapReturn Values:‚ÄãNameTypeDescriptionamountOutbytesThe amount of the last token that would be receivedsqrtPriceX96AfterListuint256List of the sqrt price after the swap for each pool in the pathinitializedTicksCrossedListList of the initialized ticks that the swap crossed for each pool in the pathgasEstimateThe estimate of the gas that the swap consumesquoteExactInputSingle‚Äã function quoteExactInputSingle( struct IQuoterV2.QuoteExactInputSingleParams params ) external returns (uint256 amountOut, uint160 sqrtPriceX96After, uint32 initializedTicksCrossed, uint256 gasEstimate)CopyReturns the amount out received for a given exact input but for a swap of a single poolParameters:‚ÄãNameTypeDescriptionparamsstruct IQuoterV2.QuoteExactInputSingleParamsThe params for the quote, encoded as QuoteExactInputSingleParamstokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountIn The desired input amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swapReturn Values:‚ÄãNameTypeDescriptionamountOutstruct IQuoterV2.QuoteExactInputSingleParamsThe amount of tokenOut that would be receivedsqrtPriceX96AfterThe sqrt price of the pool after the swapinitializedTicksCrossedThe number of initialized ticks that the swap crossedgasEstimateThe estimate of the gas that the swap consumesquoteExactOutput‚Äã function quoteExactOutput( bytes path, uint256 amountOut ) external returns (uint256 amountIn, uint160[] sqrtPriceX96AfterList, uint32[] initializedTicksCrossedList, uint256 gasEstimate)CopyReturns the amount in required for a given exact output swap without executing the swapParameters:‚ÄãNameTypeDescriptionpathbytesThe path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse orderamountOutuint256The amount of the last token to receiveReturn Values:‚ÄãNameTypeDescriptionamountInbytesThe amount of first token required to be paidsqrtPriceX96AfterListuint256List of the sqrt price after the swap for each pool in the pathinitializedTicksCrossedListList of the initialized ticks that the swap crossed for each pool in the pathgasEstimateThe estimate of the gas that the swap consumesquoteExactOutputSingle‚Äã function quoteExactOutputSingle( struct IQuoterV2.QuoteExactOutputSingleParams params ) external returns (uint256 amountIn, uint160 sqrtPriceX96After, uint32 initializedTicksCrossed, uint256 gasEstimate)CopyReturns the amount in required to receive the given exact output amount but for a swap of a single poolParameters:‚ÄãNameTypeDescriptionparamsstruct IQuoterV2.QuoteExactOutputSingleParamsThe params for the quote, encoded as QuoteExactOutputSingleParamstokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountOut The desired output amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swapReturn Values:‚ÄãNameTypeDescriptionamountInstruct IQuoterV2.QuoteExactOutputSingleParamsThe amount required as the input for the swap in order to receive amountOutsqrtPriceX96AfterThe sqrt price of the pool after the swapinitializedTicksCrossedThe number of initialized ticks that the swap crossedgasEstimateThe estimate of the gas that the swap consumesEdit this pageHelpful?PreviousIQuoterNextISelfPermitFunctionsquoteExactInputquoteExactInputSinglequoteExactOutputquoteExactOutputSingleDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
433,p.org sdk core reference classes CurrencyAmount#constructor,"p.org sdk core reference classes CurrencyAmount#constructor.    CurrencyAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesCurrencyAmountHelpful?On this pageCurrencyAmount@uniswap/sdk-core / Exports / CurrencyAmountClass: CurrencyAmount<T>Type parameters‚ÄãNameTypeTextends CurrencyHierarchy‚ÄãFraction‚Ü≥ CurrencyAmountTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãcurrencydecimalScaledenominatornumeratorAccessors‚ÄãasFractionquotientremainderwrappedMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new CurrencyAmount<T>(currency, numerator, denominator?)Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypecurrencyTnumeratorBigintIshdenominator?BigintIshOverrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/currencyAmount.ts:40Properties‚Äãcurrency‚Äã‚Ä¢ Readonly currency: TDefined in‚Äãentities/fractions/currencyAmount.ts:14decimalScale‚Äã‚Ä¢ Readonly decimalScale: defaultDefined in‚Äãentities/fractions/currencyAmount.ts:15denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47wrapped‚Äã‚Ä¢ get wrapped(): CurrencyAmount<Token>Returns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/fractions/currencyAmount.ts:91Methods‚Äãadd‚Äã‚ñ∏ add(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.addDefined in‚Äãentities/fractions/currencyAmount.ts:47divide‚Äã‚ñ∏ divide(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/currencyAmount.ts:64equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/currencyAmount.ts:59subtract‚Äã‚ñ∏ subtract(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/currencyAmount.ts:53toExact‚Äã‚ñ∏ toExact(format?): stringParameters‚ÄãNameTypeformatobjectReturns‚ÄãstringDefined in‚Äãentities/fractions/currencyAmount.ts:86toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformat?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/currencyAmount.ts:77toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/currencyAmount.ts:69fromFractionalAmount‚Äã‚ñ∏ Static fromFractionalAmount<T>(currency, numerator, denominator): CurrencyAmount<T>Construct a currency amount with a denominator that is not equal to 1Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currencynumeratorBigintIshthe numerator of the fractional token amountdenominatorBigintIshthe denominator of the fractional token amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:32fromRawAmount‚Äã‚ñ∏ Static fromRawAmount<T>(currency, rawAmount): CurrencyAmount<T>Returns a new currency amount instance from the unitless amount of token, i.e. the raw amountType parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currency in the amountrawAmountBigintIshthe raw token or ether amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:22Helpful?PreviousOverviewNextEtherType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiescurrencydecimalScaledenominatornumeratorAccessorsasFractionquotientremainderwrappedMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
434,p.org ,"p.org .    Uniswap Docs | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearch Welcome to Uniswap DocsSearchWhat is UniswapLearn about the core concepts of the Uniswap Protocol, Swaps, Pools, Concentrated Liquidity and more.Integrate with UniswapLearn how to integrate with Uniswap by building a dApp through guided examples.The Uniswap smart contractsLearn about the architecture of the Uniswap Protocol smart contracts through guided examples.Integrate your dAppExplore these guided tutorials to get started integrating with Uniswap in your dApp.Fetch token pricesFetch the price of tokens in a specific PoolCreate a TradeFetch a Quote for a Trade and execute the TradeRoute tradesUse Routing to get optimized prices for your TradesProvide liquidityContribute to a Pool's liquidity by using tokens to earn feesUI ComponentIntegrate with the Swap Widget, a React component that works out of the box Integrate your smart contractsExplore these guided tutorials to get started integrating with Uniswap in your smart contracts.Setup your environmentPrepare your local environment by installing the required dependenciesImplement a SwapStart swapping from a smart contract in SolidityProvide LiquidityProvide liquidity from a smart contract in SolidityMine LiquidityStart Mining liquidity from a smart contract in SolidityImplement Flash SwapsImplement Flash Swaps from a smart contract in SolidityDeveloper Linksuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addresseswidgetsDiscordJoin our Developer Community.ForumDiscuss governance and more.GitHubView all Uniswap repositories.Uniswap Grants ProgramUniswap Governance offers grant funding for people who are building apps, tools, and activities for Uniswap Protocol users, builders, and community members. DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
435,p.org sdk v3 reference README.md,p.org sdk v3 reference README.md. 
436,p.org sdk v3 reference classes Pool#tickcurrent,"p.org sdk v3 reference classes Pool#tickcurrent.    Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPoolHelpful?On this pagePool@uniswap/v3-sdk / Exports / PoolClass: PoolRepresents a V3 poolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1Accessors‚ÄãchainIdtickSpacingtoken0Pricetoken1PriceMethods‚ÄãgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressConstructors‚Äãconstructor‚Äã‚Ä¢ new Pool(tokenA, tokenB, fee, sqrtRatioX96, liquidity, tickCurrent, ticks?)Construct a poolParameters‚ÄãNameTypeDefault valueDescriptiontokenATokenundefinedOne of the tokens in the pooltokenBTokenundefinedThe other token in the poolfeeFeeAmountundefinedThe fee in hundredths of a bips of the input amount of every swap that is collected by the poolsqrtRatioX96BigintIshundefinedThe sqrt of the current ratio of amounts of token1 to token0liquidityBigintIshundefinedThe current value of in range liquiditytickCurrentnumberundefinedThe current tick of the poolticksTickDataProvider | (Tick | TickConstructorArgs)[]NO_TICK_DATA_PROVIDER_DEFAULTThe current state of the pool ticks or a data provider that can return tick dataDefined in‚Äãentities/pool.ts:70Properties‚Äã_token0Price‚Äã‚Ä¢ Private Optional _token0Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:41_token1Price‚Äã‚Ä¢ Private Optional _token1Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:42fee‚Äã‚Ä¢ Readonly fee: FeeAmountDefined in‚Äãentities/pool.ts:35liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/pool.ts:37sqrtRatioX96‚Äã‚Ä¢ Readonly sqrtRatioX96: defaultDefined in‚Äãentities/pool.ts:36tickCurrent‚Äã‚Ä¢ Readonly tickCurrent: numberDefined in‚Äãentities/pool.ts:38tickDataProvider‚Äã‚Ä¢ Readonly tickDataProvider: TickDataProviderDefined in‚Äãentities/pool.ts:39token0‚Äã‚Ä¢ Readonly token0: TokenDefined in‚Äãentities/pool.ts:33token1‚Äã‚Ä¢ Readonly token1: TokenDefined in‚Äãentities/pool.ts:34Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns the chain ID of the tokens in the pool.Returns‚ÄãnumberDefined in‚Äãentities/pool.ts:149tickSpacing‚Äã‚Ä¢ get tickSpacing(): numberReturns‚ÄãnumberDefined in‚Äãentities/pool.ts:317token0Price‚Äã‚Ä¢ get token0Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:109token1Price‚Äã‚Ä¢ get token1Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:124Methods‚ÄãgetInputAmount‚Äã‚ñ∏ getInputAmount(outputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given a desired output amount of a token, return the computed input amount and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptionoutputAmountCurrencyAmount<Token>the output amount for which to quote the input amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The input amount and the pool with updated stateDefined in‚Äãentities/pool.ts:185getOutputAmount‚Äã‚ñ∏ getOutputAmount(inputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given an input amount of a token, return the computed output amount, and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptioninputAmountCurrencyAmount<Token>The input amount for which to quote the output amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limitReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The output amount and the pool with updated stateDefined in‚Äãentities/pool.ts:159involvesToken‚Äã‚ñ∏ involvesToken(token): booleanReturns true if the token is either token0 or token1Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to checkReturns‚ÄãbooleanTrue if token is either token0 or tokenDefined in‚Äãentities/pool.ts:102priceOf‚Äã‚ñ∏ priceOf(token): Price<Token, Token>Return the price of the given token in terms of the other token in the pool.Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to return price ofReturns‚ÄãPrice<Token, Token>The price of the given token, in terms of the other.Defined in‚Äãentities/pool.ts:141swap‚Äã‚ñ∏ Private swap(zeroForOne, amountSpecified, sqrtPriceLimitX96?): Promise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>Executes a swapParameters‚ÄãNameTypeDescriptionzeroForOnebooleanWhether the amount in is token0 or token1amountSpecifieddefaultThe amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>amountCalculatedsqrtRatioX96liquiditytickCurrentDefined in‚Äãentities/pool.ts:215getAddress‚Äã‚ñ∏ Static getAddress(tokenA, tokenB, fee, initCodeHashManualOverride?, factoryAddressOverride?): stringParameters‚ÄãNameTypetokenATokentokenBTokenfeeFeeAmountinitCodeHashManualOverride?stringfactoryAddressOverride?stringReturns‚ÄãstringDefined in‚Äãentities/pool.ts:44Helpful?PreviousPaymentsNextPositionTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1AccessorschainIdtickSpacingtoken0Pricetoken1PriceMethodsgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
437,p.org sdk v2 reference token,"p.org sdk v2 reference token.    Token | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKOverviewGuidesSDK Quick startFetching DataPricingTradingPair AddressesTechnical ReferenceGetting StartedTokenPairRouteTradeFractionsFetcherOther ExportsV1 SDKüè†V2 SDKTechnical ReferenceTokenHelpful?On this pageTokenconstructor(chainId: ChainId, address: string, decimals: number, symbol?: string, name?: string)CopyThe Token entity represents an ERC-20 token at a specific address on a specific chain.Exampleimport { ChainId, Token } from '@uniswap/sdk'const token = new Token(ChainId.MAINNET, '0xc0FFee0000000000000000000000000000000000', 18, 'HOT', 'Caffeine')CopyPropertieschainId‚ÄãchainId: ChainIdCopySee ChainIdaddress‚Äãaddress: stringCopydecimals‚Äãdecimals: numberCopysymbol‚Äãsymbol?: stringCopyname‚Äãname?: stringCopyMethodsequals‚Äãequals(other: Token): booleanCopyChecks if the current instance is equal to another (has an identical chainId and address).sortsBefore‚ÄãsortsBefore(other: Token): booleanCopyChecks if the current instance sorts before another, by address.Helpful?PreviousGetting StartedNextPairchainIdaddressdecimalssymbolnameequalssortsBeforeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
438,p.org sdk v3 reference modules.md#issorted,p.org sdk v3 reference modules.md#issorted. 
439,p.org sdk core reference modules.md#currency,p.org sdk core reference modules.md#currency. 
440,p.org sdk v2 reference getting started,"p.org sdk v2 reference getting started.    Getting Started | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKOverviewGuidesSDK Quick startFetching DataPricingTradingPair AddressesTechnical ReferenceGetting StartedTokenPairRouteTradeFractionsFetcherOther ExportsV1 SDKüè†V2 SDKTechnical ReferenceGetting StartedHelpful?On this pageGetting StartedThe pages that follow contain technical reference information on the Uniswap SDK. Looking for a quick start instead? You may also want to jump into a guide, which offers a friendlier introduction to the SDK!The SDK is written in TypeScript, has a robust test suite, performs arbitrary precision arithmetic, and supports rounding to significant digits or fixed decimal places. The principal exports of the SDK are entities: classes that contain initialization and validation checks, necessary data fields, and helper functions.An important concept in the SDK is fractions. Because Solidity performs integer math, care must be taken in non-EVM environments to faithfully replicate the actual computation carried out on-chain. The first concern here is to ensure that an overflow-safe integer implementation is used. Ideally, the SDK would be able to use native BigInts. However, until support becomes more widespread, JSBI objects are used instead, with the idea that once BigInts proliferate, this dependency can be compiled away. The second concern is precision loss due to, for example, chained price ratio calculations. To address this issue, all math operations are performed as fraction operations, ensuring arbitrary precision up until the point that values are rounded for display purposes, or truncated to fit inside a fixed bit width.The SDK works for all chains on which the factory is deployed.Code‚ÄãThe source code is available on GitHub.Dependencies‚ÄãThe SDK declares its dependencies as peer dependencies. This is for two reasons:prevent installation of unused dependencies (e.g. @ethersproject/providers and @ethersproject/contracts, only used in Fetcher)prevent duplicate @ethersproject dependencies with conflicting versionsHowever, this means you must install these dependencies alongside the SDK, if you do not already have them installed.Helpful?PreviousPair AddressesNextTokenCodeDependenciesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
441,p.org concepts uniswap protocol,"p.org concepts uniswap protocol.    The Uniswap Protocol | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchWhat Is Uniswap?The Uniswap ProtocolProtocol ConceptsGovernanceResearchResourcesGlossaryüè†The Uniswap ProtocolHelpful?On this pageThe Uniswap ProtocolIntroduction‚ÄãThe Uniswap protocol is a peer-to-peer1 system designed for exchanging cryptocurrencies (ERC-20 Tokens) on the Ethereum blockchain. The protocol is implemented as a set of persistent, non-upgradable smart contracts; designed to prioritize censorship resistance, security, self-custody, and to function without any trusted intermediaries who may selectively restrict access.There are currently three versions of the Uniswap protocol. V1 and V2 are open source and licensed under GPL. V3 is open source with slight modifications, which are viewable here. Each version of Uniswap, once deployed, will function in perpetuity, with 100% uptime, provided the continued existence of the Ethereum blockchain.How does the Uniswap protocol compare to a typical market?‚ÄãTo understand how the Uniswap protocol differs from a traditional exchange, it is helpful to first look at two subjects: how the Automated Market Maker design deviates from traditional central limit order book-based exchanges, and how permissionless systems depart from conventional permissioned systems.Order Book VS AMM‚ÄãMost publicly accessible markets use a central limit order book style of exchange, where buyers and sellers create orders organized by price level that are progressively filled as demand shifts. Anyone who has traded stocks through brokerage firms will be familiar with an order book system.The Uniswap protocol takes a different approach, using an Automated Market Maker (AMM), sometimes referred to as a Constant Function Market Maker, in place of an order book.At a very high level, an AMM replaces the buy and sell orders in an order book market with a liquidity pool of two assets, both valued relative to each other. As one asset is traded for the other, the relative prices of the two assets shift, and a new market rate for both is determined. In this dynamic, a buyer or seller trades directly with the pool, rather than with specific orders left by other parties. The advantages and disadvantages of Automated Market Makers versus their traditional order book counterparts are under active research by a growing number of parties. We have collected some notable examples on our research page.Permissionless Systems‚ÄãThe second departure from traditional markets is the permissionless and immutable design of the Uniswap protocol. These design decisions were inspired by Ethereum's core tenets, and our commitment to the ideals of permissionless access and immutability as indispensable components of a future in which anyone in the world can access financial services without fear of discrimination or counter-party risk.Permissionless design means that the protocol's services are entirely open for public use, with no ability to selectively restrict who can or cannot use them. Anyone can swap, provide liquidity, or create new markets at will. This is a departure from traditional financial services, which typically restrict access based on geography, wealth status, and age.The protocol is also immutable, in other words not upgradeable. No party is able to pause the contracts, reverse trade execution, or otherwise change the behavior of the protocol in any way. It is worth noting that Uniswap Governance has the right (but no obligation) to divert a percentage of swap fees on any pool to a specified address. However, this capability is known to all participants in advance, and to prevent abuse, the percentage is constrained between 10% and 25%.Where can I find more information‚ÄãFor research into the economics of AMMs, game theory, or optimization research, check out our research page.For new features implemented in V3 that expand and refine the AMM design, see the V3 Concepts page.Ethereum protocols are sometimes referred to as peer-to-contract systems as well. These are similar to a peer-to-peer systems, but with immutable, persistent programs known as smart contracts taking the place of a peer.‚Ü©Helpful?PreviousWhat Is Uniswap?NextConcentrated LiquidityIntroductionHow does the Uniswap protocol compare to a typical market?Order Book VS AMMPermissionless SystemsWhere can I find more informationDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
442,p.org contracts v3 reference periphery staker libraries IncentiveId,p.org contracts v3 reference periphery staker libraries IncentiveId.    IncentiveId | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerUniswap V3 Staker DesignUniswap V3 Staker ContractInterfacesLibrariesIncentiveIdNFTPositionInfoRewardMathTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryStakerLibrariesIncentiveIdHelpful?On this pageIncentiveIdFunctions‚Äãcompute‚Äã function compute( struct IUniswapV3Staker.IncentiveKey key ) internal pure returns (bytes32 incentiveId)CopyCalculate the key for a staking incentiveParameters:‚ÄãNameTypeDescriptionkeystruct IUniswapV3Staker.IncentiveKeyThe components used to compute the incentive identifierReturn Values:‚ÄãNameTypeDescriptionincentiveIdbytes32The identifier for the incentiveEdit this pageHelpful?PreviousIUniswapV3StakerNextNFTPositionInfoFunctionscomputeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
443,p.org concepts governance changelog,"p.org concepts governance changelog.    Changelog | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchWhat Is Uniswap?The Uniswap ProtocolProtocol ConceptsGovernanceOverviewProcessBeginners Guide to VotingGlossaryAdversarial CircumstancesChangelogResearchResourcesGlossaryüè†GovernanceChangelogHelpful?ChangelogDateAbstractTransactionSybil ReferenceJune 12, 2021Reduce the UNI proposal submission threshold to 2.5MEtherscanhttps://sybil.org/#/proposals/uniswap/4August 26, 2021Upgrade Governance Contract to Compound's Governor BravoEtherscanhttps://sybil.org/#/proposals/uniswap/8Helpful?PreviousAdversarial CircumstancesNextResearchDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
444,p.org sdk v3 reference classes NonfungiblePositionManager#interface,"p.org sdk v3 reference classes NonfungiblePositionManager#interface.    NonfungiblePositionManager | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesNonfungiblePositionManagerHelpful?On this pageNonfungiblePositionManager@uniswap/v3-sdk / Exports / NonfungiblePositionManagerClass: NonfungiblePositionManagerTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãaddCallParameterscollectCallParameterscreateCallParametersencodeCollectencodeCreateremoveCallParameterssafeTransferFromParametersConstructors‚Äãconstructor‚Äã‚Ä¢ Private new NonfungiblePositionManager()Cannot be constructed.Defined in‚ÄãnonfungiblePositionManager.ts:181Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚ÄãnonfungiblePositionManager.ts:176Methods‚ÄãaddCallParameters‚Äã‚ñ∏ Static addCallParameters(position, options): MethodParametersParameters‚ÄãNameTypepositionPositionoptionsAddLiquidityOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:199collectCallParameters‚Äã‚ñ∏ Static collectCallParameters(options): MethodParametersParameters‚ÄãNameTypeoptionsCollectOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:326createCallParameters‚Äã‚ñ∏ Static createCallParameters(pool): MethodParametersParameters‚ÄãNameTypepoolPoolReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:192encodeCollect‚Äã‚ñ∏ Static Private encodeCollect(options): string[]Parameters‚ÄãNameTypeoptionsCollectOptionsReturns‚Äãstring[]Defined in‚ÄãnonfungiblePositionManager.ts:286encodeCreate‚Äã‚ñ∏ Static Private encodeCreate(pool): stringParameters‚ÄãNameTypepoolPoolReturns‚ÄãstringDefined in‚ÄãnonfungiblePositionManager.ts:183removeCallParameters‚Äã‚ñ∏ Static removeCallParameters(position, options): MethodParametersProduces the calldata for completely or partially exiting a positionParameters‚ÄãNameTypeDescriptionpositionPositionThe position to exitoptionsRemoveLiquidityOptionsAdditional information necessary for generating the calldataReturns‚ÄãMethodParametersThe call parametersDefined in‚ÄãnonfungiblePositionManager.ts:341safeTransferFromParameters‚Äã‚ñ∏ Static safeTransferFromParameters(options): MethodParametersParameters‚ÄãNameTypeoptionsSafeTransferOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:416Helpful?PreviousNoTickDataProviderNextPaymentsTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsaddCallParameterscollectCallParameterscreateCallParametersencodeCollectencodeCreateremoveCallParameterssafeTransferFromParametersDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
445,p.org concepts protocol concentrated liquidity,"p.org concepts protocol concentrated liquidity.    Concentrated Liquidity | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchWhat Is Uniswap?The Uniswap ProtocolProtocol ConceptsConcentrated LiquidityFeesOracleRange OrdersSwapsToken Integration IssuesGovernanceResearchResourcesGlossaryüè†Protocol ConceptsConcentrated LiquidityHelpful?On this pageConcentrated LiquidityYour browser does not support the video tag.Introduction‚ÄãThe defining idea of Uniswap v3 is concentrated liquidity: liquidity that is allocated within a custom price range. In earlier versions, liquidity was distributed uniformly along the price curve between 0 and infinity.The previously uniform distribution allowed trading across the entire price interval (0, ‚àû) without any loss of liquidity. However, in many pools, the majority of the liquidity was never used.Consider stablecoin pairs, where the relative price of the two assets stays relatively constant. The liquidity outside the typical price range of a stablecoin pair is rarely touched. For example, the v2 DAI/USDC pair utilizes ~0.50% of the total available capital for trading between $0.99 and $1.01, the price range in which LPs would expect to see the most volume - and consequently earn the most fees.With v3, liquidity providers may concentrate their capital to smaller price intervals than (0, ‚àû). In a stablecoin/stablecoin pair, for example, an LP may choose to allocate capital solely to the 0.99 - 1.01 range. As a result, traders are offered deeper liquidity around the mid-price, and LPs earn more trading fees with their capital. We call liquidity concentrated to a finite interval a position. LPs may have many different positions per pool, creating individualized price curves that reflect the preferences of each LP.Active Liquidity‚ÄãAs the price of an asset rises or falls, it may exit the price bounds that LPs have set in a position. When the price exits a position's interval, the position's liquidity is no longer active and no longer earns fees.As price moves in one direction, LPs gain more of the one asset as swappers demand the other, until their entire liquidity consists of only one asset. (In v2, we don't typically see this behavior because LPs rarely reach the upper or lower bound of the price of two assets, i.e., 0 and ‚àû). If the price ever reenters the interval, the liquidity becomes active again, and in-range LPs begin earning fees once more.Importantly, LPs are free to create as many positions as they see fit, each with its own price interval. Concentrated liquidity serves as a mechanism to let the market decide what a sensible distribution of liquidity is, as rational LPs are incentivize to concentrate their liquidity while ensuring that their liquidity remains active.Ticks‚ÄãTo achieve concentrated liquidity, the once continuous spectrum of price space has been partitioned with ticks.Ticks are the boundaries between discrete areas in price space. Ticks are spaced such that an increase or decrease of 1 tick represents a 0.01% increase or decrease in price at any point in price space.Ticks function as boundaries for liquidity positions. When a position is created, the provider must choose the lower and upper tick that will represent their position's borders.As the spot price changes during swapping, the pool contract will continuously exchange the outbound asset for the inbound, progressively using all the liquidity available within the current tick interval1 until the next tick is reached. At this point, the contract switches to a new tick and activates any dormant liquidity within a position that has a boundary at the newly active tick.While each pool has the same number of underlying ticks, in practice only a portion of them are able to serve as active ticks. Due to the nature of the v3 smart contracts, tick spacing is directly correlated to the swap fee. Lower fee tiers allow closer potentially active ticks, and higher fees allow a relatively wider spacing of potential active ticks.While inactive ticks have no impact on transaction cost during swaps, crossing an active tick does increase the cost of the transaction in which it is crossed, as the tick crossing will activate the liquidity within any new positions using the given tick as a border.In areas where capital efficiency is paramount, such as stable coin pairs, narrower tick spacing increases the granularity of liquidity provisioning and will likely lower price impact when swapping - the result being significantly improved prices for stable coin swaps.For more information on fee levels and their correlation to tick spacing, see the whitepaper.Tick interval refers to the area of price space between two nearest active ticks‚Ü©Helpful?PreviousThe Uniswap ProtocolNextFeesIntroductionActive LiquidityTicksDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
446,p.org sdk v3 reference classes Route#output,"p.org sdk v3 reference classes Route#output.    Route | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesRouteHelpful?On this pageRoute@uniswap/v3-sdk / Exports / RouteClass: Route<TInput, TOutput>Represents a list of pools through which a swap can occurType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input tokenTOutputextends CurrencyThe output tokenTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_midPriceinputoutputpoolstokenPathAccessors‚ÄãchainIdmidPriceConstructors‚Äãconstructor‚Äã‚Ä¢ new Route<TInput, TOutput>(pools, input, output)Creates an instance of route.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDescriptionpoolsPool[]An array of Pool objects, ordered by the route the swap will takeinputTInputThe input tokenoutputTOutputThe output tokenDefined in‚Äãentities/route.ts:25Properties‚Äã_midPrice‚Äã‚Ä¢ Private _midPrice: null | Price<TInput, TOutput> = nullDefined in‚Äãentities/route.ts:17input‚Äã‚Ä¢ Readonly input: TInputDefined in‚Äãentities/route.ts:14output‚Äã‚Ä¢ Readonly output: TOutputDefined in‚Äãentities/route.ts:15pools‚Äã‚Ä¢ Readonly pools: Pool[]Defined in‚Äãentities/route.ts:12tokenPath‚Äã‚Ä¢ Readonly tokenPath: Token[]Defined in‚Äãentities/route.ts:13Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns‚ÄãnumberDefined in‚Äãentities/route.ts:54midPrice‚Äã‚Ä¢ get midPrice(): Price<TInput, TOutput>Returns the mid price of the routeReturns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/route.ts:61Helpful?PreviousPositionLibraryNextSelfPermitType parametersTable of contentsConstructorsPropertiesAccessorsConstructorsconstructorProperties_midPriceinputoutputpoolstokenPathAccessorschainIdmidPriceDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
447,p.org contracts v2 reference smart contracts library#getamountsout,"p.org contracts v2 reference smart contracts library#getamountsout.    Library | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsLibraryHelpful?On this pageLibraryCode‚ÄãUniswapV2Library.solInternal FunctionssortTokens‚Äãfunction sortTokens(address tokenA, address tokenB) internal pure returns (address token0, address token1);CopySorts token addresses.pairFor‚Äãfunction pairFor(address factory, address tokenA, address tokenB) internal pure returns (address pair);CopyCalculates the address for a pair without making any external calls via the v2 SDK.getReserves‚Äãfunction getReserves(address factory, address tokenA, address tokenB) internal view returns (uint reserveA, uint reserveB);CopyCalls getReserves on the pair for the passed tokens, and returns the results sorted in the order that the parameters were passed in.quote‚Äãfunction quote(uint amountA, uint reserveA, uint reserveB) internal pure returns (uint amountB);CopyGiven some asset amount and reserves, returns an amount of the other asset representing equivalent value.Useful for calculating optimal token amounts before calling mint.getAmountOut‚Äãfunction getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) internal pure returns (uint amountOut);CopyGiven an input asset amount, returns the maximum output amount of the other asset (accounting for fees) given reserves.Used in getAmountsOut.getAmountIn‚Äãfunction getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) internal pure returns (uint amountIn);CopyReturns the minimum input asset amount required to buy the given output asset amount (accounting for fees) given reserves.Used in getAmountsIn.getAmountsOut‚Äãfunction getAmountsOut(uint amountIn, address[] memory path) internal view returns (uint[] memory amounts);CopyGiven an input asset amount and an array of token addresses, calculates all subsequent maximum output token amounts by calling getReserves for each pair of token addresses in the path in turn, and using these to call getAmountOut.Useful for calculating optimal token amounts before calling swap.getAmountsIn‚Äãfunction getAmountsIn(address factory, uint amountOut, address[] memory path) internal view returns (uint[] memory amounts);CopyGiven an output asset amount and an array of token addresses, calculates all preceding minimum input token amounts by calling getReserves for each pair of token addresses in the path in turn, and using these to call getAmountIn.Useful for calculating optimal token amounts before calling swap.Edit this pageHelpful?PreviousPair (ERC-20)NextRouter01CodesortTokenspairForgetReservesquotegetAmountOutgetAmountIngetAmountsOutgetAmountsInDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
448,p.org sdk core reference classes Token#sortsbefore,"p.org sdk core reference classes Token#sortsbefore.    Token | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesTokenHelpful?On this pageToken@uniswap/sdk-core / Exports / TokenClass: TokenRepresents an ERC20 token with a unique address and some metadata.Hierarchy‚ÄãBaseCurrency‚Ü≥ TokenTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãaddresschainIddecimalsisNativeisTokennamesymbolAccessors‚ÄãwrappedMethods‚ÄãequalssortsBeforeConstructors‚Äãconstructor‚Äã‚Ä¢ new Token(chainId, address, decimals, symbol?, name?, bypassChecksum?)Parameters‚ÄãNameTypeDescriptionchainIdnumberBaseCurrency#chainIdaddressstringThe contract address on the chain on which this token livesdecimalsnumberBaseCurrency#decimalssymbol?stringBaseCurrency#symbolname?stringBaseCurrency#namebypassChecksum?booleanIf true it only checks for length === 42, startsWith 0x and contains only hex charactersOverrides‚ÄãBaseCurrency.constructorDefined in‚Äãentities/token.ts:27Properties‚Äãaddress‚Äã‚Ä¢ Readonly address: stringThe contract address on the chain on which this token livesDefined in‚Äãentities/token.ts:16chainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãBaseCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãBaseCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: falseOverrides‚ÄãBaseCurrency.isNativeDefined in‚Äãentities/token.ts:10isToken‚Äã‚Ä¢ Readonly isToken: trueOverrides‚ÄãBaseCurrency.isTokenDefined in‚Äãentities/token.ts:11name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãBaseCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãBaseCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29Accessors‚Äãwrapped‚Äã‚Ä¢ get wrapped(): TokenReturn this token, which does not need to be wrappedReturns‚ÄãTokenOverrides‚ÄãBaseCurrency.wrappedDefined in‚Äãentities/token.ts:66Methods‚Äãequals‚Äã‚ñ∏ equals(other): booleanReturns true if the two tokens are equivalent, i.e. have the same chainId and address.Parameters‚ÄãNameTypeDescriptionotherCurrencyother token to compareReturns‚ÄãbooleanOverrides‚ÄãBaseCurrency.equalsDefined in‚Äãentities/token.ts:47sortsBefore‚Äã‚ñ∏ sortsBefore(other): booleanReturns true if the address of this token sorts before the address of the other tokenThrowsif the tokens have the same addressThrowsif the tokens are on different chainsParameters‚ÄãNameTypeDescriptionotherTokenother token to compareReturns‚ÄãbooleanDefined in‚Äãentities/token.ts:57Helpful?PreviousPriceNextRoundingHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesaddresschainIddecimalsisNativeisTokennamesymbolAccessorswrappedMethodsequalssortsBeforeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
449,p.org sdk core reference enums SupportedChainId#rinkeby,p.org sdk core reference enums SupportedChainId#rinkeby.    SupportedChainId | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesenumsRoundingSupportedChainIdTradeTypeV2 SDKV1 SDKüè†Core SDKTechnical ReferenceenumsSupportedChainIdHelpful?On this pageSupportedChainId@uniswap/sdk-core / Exports / SupportedChainIdEnumeration: SupportedChainIdTable of contents‚ÄãEnumeration Members‚ÄãARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENEnumeration Members‚ÄãARBITRUM_ONE‚Äã‚Ä¢ ARBITRUM_ONE = 42161Defined in‚Äãconstants.ts:10ARBITRUM_RINKEBY‚Äã‚Ä¢ ARBITRUM_RINKEBY = 421611Defined in‚Äãconstants.ts:11CELO‚Äã‚Ä¢ CELO = 42220Defined in‚Äãconstants.ts:19CELO_ALFAJORES‚Äã‚Ä¢ CELO_ALFAJORES = 44787Defined in‚Äãconstants.ts:20GOERLI‚Äã‚Ä¢ GOERLI = 5Defined in‚Äãconstants.ts:7KOVAN‚Äã‚Ä¢ KOVAN = 42Defined in‚Äãconstants.ts:8MAINNET‚Äã‚Ä¢ MAINNET = 1Defined in‚Äãconstants.ts:4OPTIMISM‚Äã‚Ä¢ OPTIMISM = 10Defined in‚Äãconstants.ts:13OPTIMISM_GOERLI‚Äã‚Ä¢ OPTIMISM_GOERLI = 420Defined in‚Äãconstants.ts:14POLYGON‚Äã‚Ä¢ POLYGON = 137Defined in‚Äãconstants.ts:16POLYGON_MUMBAI‚Äã‚Ä¢ POLYGON_MUMBAI = 80001Defined in‚Äãconstants.ts:17RINKEBY‚Äã‚Ä¢ RINKEBY = 4Defined in‚Äãconstants.ts:6ROPSTEN‚Äã‚Ä¢ ROPSTEN = 3Defined in‚Äãconstants.ts:5Helpful?PreviousRoundingNextTradeTypeTable of contentsEnumeration MembersEnumeration MembersARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
450,p.org sdk v3 reference classes Position# token1amount,"p.org sdk v3 reference classes Position# token1amount.    Position | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPositionHelpful?On this pagePosition@uniswap/v3-sdk / Exports / PositionClass: PositionRepresents a position on a Uniswap V3 PoolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessors‚Äãamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethods‚ÄãburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsConstructors‚Äãconstructor‚Äã‚Ä¢ new Position(__namedParameters)Constructs a position for a given pool with the given liquidityParameters‚ÄãNameType__namedParametersPositionConstructorArgsDefined in‚Äãentities/position.ts:40Properties‚Äã_mintAmounts‚Äã‚Ä¢ Private _mintAmounts: null | Readonly<{ amount0: default ; amount1: default }> = nullDefined in‚Äãentities/position.ts:31_token0Amount‚Äã‚Ä¢ Private _token0Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:29_token1Amount‚Äã‚Ä¢ Private _token1Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:30liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/position.ts:26pool‚Äã‚Ä¢ Readonly pool: PoolDefined in‚Äãentities/position.ts:23tickLower‚Äã‚Ä¢ Readonly tickLower: numberDefined in‚Äãentities/position.ts:24tickUpper‚Äã‚Ä¢ Readonly tickUpper: numberDefined in‚Äãentities/position.ts:25Accessors‚Äãamount0‚Äã‚Ä¢ get amount0(): CurrencyAmount<Token>Returns the amount of token0 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:68amount1‚Äã‚Ä¢ get amount1(): CurrencyAmount<Token>Returns the amount of token1 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:100mintAmounts‚Äã‚Ä¢ get mintAmounts(): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at the current price for the poolReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>Defined in‚Äãentities/position.ts:258token0PriceLower‚Äã‚Ä¢ get token0PriceLower(): Price<Token, Token>Returns the price of token0 at the lower tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:54token0PriceUpper‚Äã‚Ä¢ get token0PriceUpper(): Price<Token, Token>Returns the price of token0 at the upper tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:61Methods‚ÄãburnAmountsWithSlippage‚Äã‚ñ∏ burnAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercenttolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:213mintAmountsWithSlippage‚Äã‚ñ∏ mintAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to safely mint the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentTolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:157ratiosAfterSlippage‚Äã‚ñ∏ Private ratiosAfterSlippage(slippageTolerance): ObjectReturns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentageParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe amount by which the price can 'slip' before the transaction will revertReturns‚ÄãObjectThe sqrt ratios after slippageNameTypesqrtRatioX96LowerdefaultsqrtRatioX96UpperdefaultDefined in‚Äãentities/position.ts:134fromAmount0‚Äã‚ñ∏ Static fromAmount0(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited amount of token1Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:354fromAmount1‚Äã‚ñ∏ Static fromAmount1(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited amount of token0Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumberReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:378fromAmounts‚Äã‚ñ∏ Static fromAmounts(__namedParameters): PositionComputes the maximum amount of liquidity received for a given amount of token0, token1, and the prices at the tick boundaries.Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe amount of liquidity for the positionDefined in‚Äãentities/position.ts:312Helpful?PreviousPoolNextPositionLibraryTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessorsamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethodsburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
451,p.org sdk v3 reference classes Pool#getinputamount,"p.org sdk v3 reference classes Pool#getinputamount.    Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPoolHelpful?On this pagePool@uniswap/v3-sdk / Exports / PoolClass: PoolRepresents a V3 poolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1Accessors‚ÄãchainIdtickSpacingtoken0Pricetoken1PriceMethods‚ÄãgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressConstructors‚Äãconstructor‚Äã‚Ä¢ new Pool(tokenA, tokenB, fee, sqrtRatioX96, liquidity, tickCurrent, ticks?)Construct a poolParameters‚ÄãNameTypeDefault valueDescriptiontokenATokenundefinedOne of the tokens in the pooltokenBTokenundefinedThe other token in the poolfeeFeeAmountundefinedThe fee in hundredths of a bips of the input amount of every swap that is collected by the poolsqrtRatioX96BigintIshundefinedThe sqrt of the current ratio of amounts of token1 to token0liquidityBigintIshundefinedThe current value of in range liquiditytickCurrentnumberundefinedThe current tick of the poolticksTickDataProvider | (Tick | TickConstructorArgs)[]NO_TICK_DATA_PROVIDER_DEFAULTThe current state of the pool ticks or a data provider that can return tick dataDefined in‚Äãentities/pool.ts:70Properties‚Äã_token0Price‚Äã‚Ä¢ Private Optional _token0Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:41_token1Price‚Äã‚Ä¢ Private Optional _token1Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:42fee‚Äã‚Ä¢ Readonly fee: FeeAmountDefined in‚Äãentities/pool.ts:35liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/pool.ts:37sqrtRatioX96‚Äã‚Ä¢ Readonly sqrtRatioX96: defaultDefined in‚Äãentities/pool.ts:36tickCurrent‚Äã‚Ä¢ Readonly tickCurrent: numberDefined in‚Äãentities/pool.ts:38tickDataProvider‚Äã‚Ä¢ Readonly tickDataProvider: TickDataProviderDefined in‚Äãentities/pool.ts:39token0‚Äã‚Ä¢ Readonly token0: TokenDefined in‚Äãentities/pool.ts:33token1‚Äã‚Ä¢ Readonly token1: TokenDefined in‚Äãentities/pool.ts:34Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns the chain ID of the tokens in the pool.Returns‚ÄãnumberDefined in‚Äãentities/pool.ts:149tickSpacing‚Äã‚Ä¢ get tickSpacing(): numberReturns‚ÄãnumberDefined in‚Äãentities/pool.ts:317token0Price‚Äã‚Ä¢ get token0Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:109token1Price‚Äã‚Ä¢ get token1Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:124Methods‚ÄãgetInputAmount‚Äã‚ñ∏ getInputAmount(outputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given a desired output amount of a token, return the computed input amount and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptionoutputAmountCurrencyAmount<Token>the output amount for which to quote the input amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The input amount and the pool with updated stateDefined in‚Äãentities/pool.ts:185getOutputAmount‚Äã‚ñ∏ getOutputAmount(inputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given an input amount of a token, return the computed output amount, and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptioninputAmountCurrencyAmount<Token>The input amount for which to quote the output amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limitReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The output amount and the pool with updated stateDefined in‚Äãentities/pool.ts:159involvesToken‚Äã‚ñ∏ involvesToken(token): booleanReturns true if the token is either token0 or token1Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to checkReturns‚ÄãbooleanTrue if token is either token0 or tokenDefined in‚Äãentities/pool.ts:102priceOf‚Äã‚ñ∏ priceOf(token): Price<Token, Token>Return the price of the given token in terms of the other token in the pool.Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to return price ofReturns‚ÄãPrice<Token, Token>The price of the given token, in terms of the other.Defined in‚Äãentities/pool.ts:141swap‚Äã‚ñ∏ Private swap(zeroForOne, amountSpecified, sqrtPriceLimitX96?): Promise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>Executes a swapParameters‚ÄãNameTypeDescriptionzeroForOnebooleanWhether the amount in is token0 or token1amountSpecifieddefaultThe amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>amountCalculatedsqrtRatioX96liquiditytickCurrentDefined in‚Äãentities/pool.ts:215getAddress‚Äã‚ñ∏ Static getAddress(tokenA, tokenB, fee, initCodeHashManualOverride?, factoryAddressOverride?): stringParameters‚ÄãNameTypetokenATokentokenBTokenfeeFeeAmountinitCodeHashManualOverride?stringfactoryAddressOverride?stringReturns‚ÄãstringDefined in‚Äãentities/pool.ts:44Helpful?PreviousPaymentsNextPositionTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1AccessorschainIdtickSpacingtoken0Pricetoken1PriceMethodsgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
452,p.org concepts glossary,"p.org concepts glossary.    Glossary | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchWhat Is Uniswap?The Uniswap ProtocolProtocol ConceptsGovernanceResearchResourcesGlossaryüè†GlossaryHelpful?On this pageGlossaryAutomated Market Maker‚ÄãAn automated market maker is a smart contract on Ethereum that holds liquidity reserves. Users can trade against these reserves at prices determined by a fixed formula. Anyone may contribute liquidity to these smart contracts, earning pro-rata trading fees in return.Asset‚ÄãWhile a digital asset can take many forms, the Uniswap Protocol supports ERC-20 token pairs, and represents a position in the form of an NFT (ERC-721).Concentrated Liquidity‚ÄãLiquidity that is allocated within a determined price range.Constant Product Formula‚ÄãThe automated market making algorithm used by Uniswap. In v1 and v2, this was x*y=k.Core‚ÄãSmart contracts that are considered foundational, and are essential for Uniswap to exist. Upgrading to a new version of core would require deploying an entirely new set of smart contracts on Ethereum and would be considered a new version of the Uniswap Protocol.ERC20‚ÄãERC20 tokens are fungible tokens on Ethereum. Uniswap supports all standard ERC20 implementations.Factory‚ÄãA smart contract that deploys a unique smart contract for any ERC20/ERC20 trading pair.Flash Swap‚ÄãA trade that uses the tokens purchased before paying for them.Invariant‚ÄãThe ‚Äúk‚Äù value in the constant product formula X*Y=KLiquidity Provider / ""LP""‚ÄãA liquidity provider is someone who deposits ERC20 tokens into a given liquidity pool. Liquidity providers take on price risk and are compensated with trading fees.Liquidity‚ÄãDigital assets that are stored in a Uniswap pool contract, and are able to be traded against by traders.Mid Price‚ÄãThe price between the available buy and sell prices. In Uniswap V1 and V2, this is the ratio of the two ERC20 token reserves. In V3, this is the ratio of the two ERC20 token reserves available within the current active tick.Observation‚ÄãAn instance of historical price and liquidity data of a given pair.Pair‚ÄãA smart contract deployed from a Uniswap V1 or V2 factory contract that enables trading between two ERC20 tokens. Pair contracts are now called Pools in V3.Periphery‚ÄãExternal smart contracts that are useful, but not required for Uniswap to exist. New periphery contracts can always be deployed without migrating liquidity.Pool‚ÄãA contract deployed by the V3 factory that pairs two ERC-20 assets. Different pools may have different fees despite containing the same token pair. Pools were previously called Pairs before the introduction of multiple fee options.Position‚ÄãAn instance of liquidity defined by upper and lower tick. And the amount of liquidity contained therein.Price Impact‚ÄãThe difference between the mid-price and the execution price of a trade.Protocol Fees‚ÄãFees that are rewarded to the protocol itself, rather than to liquidity providers.Range‚ÄãAny interval between two ticks of any distance.Range Order‚ÄãAn approximation of a limit order, in which a single asset is provided as liquidity across a specified range, and is continuously swapped to the destination address as the spot price crosses the range.Reserves‚ÄãThe liquidity available within a pair. This was more commonly referenced before concentrated liquidity was introduced.Slippage‚ÄãThe amount the price moves in a trading pair between when a transaction is submitted and when it is executed.Spot Price‚ÄãThe current price of a token relative to another within a given pair.Swap Fees‚ÄãThe fees collected upon swapping which are rewarded to liquidity providers.Tick Interval‚ÄãThe price space between two nearest ticks.Tick‚ÄãThe boundaries between discrete areas in price space.Helpful?PreviousResourcesAutomated Market MakerAssetConcentrated LiquidityConstant Product FormulaCoreERC20FactoryFlash SwapInvariantLiquidity Provider / ""LP""LiquidityMid PriceObservationPairPeripheryPoolPositionPrice ImpactProtocol FeesRangeRange OrderReservesSlippageSpot PriceSwap FeesTick IntervalTickDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
453,p.org contracts v3 reference periphery staker interfaces IUniswapV3Staker,"p.org contracts v3 reference periphery staker interfaces IUniswapV3Staker.    IUniswapV3Staker | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerUniswap V3 Staker DesignUniswap V3 Staker ContractInterfacesIUniswapV3StakerLibrariesTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryStakerInterfacesIUniswapV3StakerHelpful?On this pageIUniswapV3StakerAllows staking nonfungible liquidity tokens in exchange for reward tokensFunctions‚Äãfactory‚Äã function factory( ) external view returns (contract IUniswapV3Factory)CopyThe Uniswap V3 FactorynonfungiblePositionManager‚Äã function nonfungiblePositionManager( ) external view returns (contract INonfungiblePositionManager)CopyThe nonfungible position manager with which this staking contract is compatiblemaxIncentiveDuration‚Äã function maxIncentiveDuration( ) external view returns (uint256)CopyThe max duration of an incentive in secondsmaxIncentiveStartLeadTime‚Äã function maxIncentiveStartLeadTime( ) external view returns (uint256)CopyThe max amount of seconds into the future the incentive startTime can be setincentives‚Äã function incentives( bytes32 incentiveId ) external view returns (uint256 totalRewardUnclaimed, uint160 totalSecondsClaimedX128, uint96 numberOfStakes)CopyRepresents a staking incentiveParameters:‚ÄãNameTypeDescriptionincentiveIdbytes32The ID of the incentive computed from its parametersReturn Values:‚ÄãNameTypeDescriptiontotalRewardUnclaimeduint256The amount of reward token not yet claimed by userstotalSecondsClaimedX128uint160Total liquidity-seconds claimed, represented as a UQ32.128numberOfStakesuint96The count of deposits that are currently staked for the incentivedeposits‚Äã function deposits( ) external view returns (address owner, uint48 numberOfStakes, int24 tickLower, int24 tickUpper)CopyReturns information about a deposited NFTReturn Values:‚ÄãNameTypeDescriptionowneraddressThe owner of the deposited NFTnumberOfStakesuint48Counter of how many incentives for which the liquidity is stakedtickLowerint24The lower tick of the rangetickUpperint24The upper tick of the rangestakes‚Äã function stakes( uint256 tokenId, bytes32 incentiveId ) external view returns (uint160 secondsPerLiquidityInsideInitialX128, uint128 liquidity)CopyReturns information about a staked liquidity NFTParameters:‚ÄãNameTypeDescriptiontokenIduint256The ID of the staked tokenincentiveIdbytes32The ID of the incentive for which the token is stakedReturn Values:‚ÄãNameTypeDescriptionsecondsPerLiquidityInsideInitialX128uint160secondsPerLiquidity represented as a UQ32.128liquidityuint128The amount of liquidity in the NFT as of the last time the rewards were computedrewards‚Äã function rewards( contract IERC20Minimal rewardToken, address owner ) external view returns (uint256 rewardsOwed)CopyReturns amounts of reward tokens owed to a given address according to the last time all stakes were updatedParameters:‚ÄãNameTypeDescriptionrewardTokencontract IERC20MinimalThe token for which to check rewardsowneraddressThe owner for which the rewards owed are checkedReturn Values:‚ÄãNameTypeDescriptionrewardsOweduint256The amount of the reward token claimable by the ownercreateIncentive‚Äã function createIncentive( struct IUniswapV3Staker.IncentiveKey key, uint256 reward ) externalCopyCreates a new liquidity mining incentive programParameters:‚ÄãNameTypeDescriptionkeystruct IUniswapV3Staker.IncentiveKeyDetails of the incentive to createrewarduint256The amount of reward tokens to be distributedendIncentive‚Äã function endIncentive( struct IUniswapV3Staker.IncentiveKey key ) external returns (uint256 refund)CopyEnds an incentive after the incentive end time has passed and all stakes have been withdrawnParameters:‚ÄãNameTypeDescriptionkeystruct IUniswapV3Staker.IncentiveKeyDetails of the incentive to endReturn Values:‚ÄãNameTypeDescriptionrefunduint256The remaining reward tokens when the incentive is endedtransferDeposit‚Äã function transferDeposit( uint256 tokenId, address to ) externalCopyTransfers ownership of a deposit from the sender to the given recipientParameters:‚ÄãNameTypeDescriptiontokenIduint256The ID of the token (and the deposit) to transfertoaddressThe new owner of the depositwithdrawToken‚Äã function withdrawToken( uint256 tokenId, address to, bytes data ) externalCopyWithdraws a Uniswap V3 LP token tokenId from this contract to the recipient toParameters:‚ÄãNameTypeDescriptiontokenIduint256The unique identifier of an Uniswap V3 LP tokentoaddressThe address where the LP token will be sentdatabytesAn optional data array that will be passed along to the to address via the NFT safeTransferFromstakeToken‚Äã function stakeToken( struct IUniswapV3Staker.IncentiveKey key, uint256 tokenId ) externalCopyStakes a Uniswap V3 LP tokenParameters:‚ÄãNameTypeDescriptionkeystruct IUniswapV3Staker.IncentiveKeyThe key of the incentive for which to stake the NFTtokenIduint256The ID of the token to stakeunstakeToken‚Äã function unstakeToken( struct IUniswapV3Staker.IncentiveKey key, uint256 tokenId ) externalCopyUnstakes a Uniswap V3 LP tokenParameters:‚ÄãNameTypeDescriptionkeystruct IUniswapV3Staker.IncentiveKeyThe key of the incentive for which to unstake the NFTtokenIduint256The ID of the token to unstakeclaimReward‚Äã function claimReward( contract IERC20Minimal rewardToken, address to, uint256 amountRequested ) external returns (uint256 reward)CopyTransfers amountRequested of accrued rewardToken rewards from the contract to the recipient toParameters:‚ÄãNameTypeDescriptionrewardTokencontract IERC20MinimalThe token being distributed as a rewardtoaddressThe address where claimed rewards will be sent toamountRequesteduint256The amount of reward tokens to claim. Claims entire reward amount if set to 0.Return Values:‚ÄãNameTypeDescriptionrewarduint256The amount of reward tokens claimedgetRewardInfo‚Äã function getRewardInfo( struct IUniswapV3Staker.IncentiveKey key, uint256 tokenId ) external returns (uint256 reward, uint160 secondsInsideX128)CopyCalculates the reward amount that will be received for the given stakeParameters:‚ÄãNameTypeDescriptionkeystruct IUniswapV3Staker.IncentiveKeyThe key of the incentivetokenIduint256The ID of the tokenReturn Values:‚ÄãNameTypeDescriptionrewarduint256The reward accrued to the NFT for the given incentive thus farsecondsInsideX128uint160The seconds inside the tick rangeEvents‚ÄãIncentiveCreated‚Äã event IncentiveCreated( contract IERC20Minimal rewardToken, contract IUniswapV3Pool pool, uint256 startTime, uint256 endTime, address refundee, uint256 reward )CopyEvent emitted when a liquidity mining incentive has been createdParameters:‚ÄãNameTypeDescriptionrewardTokencontract IERC20MinimalThe token being distributed as a rewardpoolcontract IUniswapV3PoolThe Uniswap V3 poolstartTimeuint256The time when the incentive program beginsendTimeuint256The time when rewards stop accruingrefundeeaddressThe address which receives any remaining reward tokens after the end timerewarduint256The amount of reward tokens to be distributedIncentiveEnded‚Äã event IncentiveEnded( bytes32 incentiveId, uint256 refund )CopyEvent that can be emitted when a liquidity mining incentive has endedParameters:‚ÄãNameTypeDescriptionincentiveIdbytes32The incentive which is endingrefunduint256The amount of reward tokens refundedDepositTransferred‚Äã event DepositTransferred( uint256 tokenId, address oldOwner, address newOwner )CopyEmitted when ownership of a deposit changesParameters:‚ÄãNameTypeDescriptiontokenIduint256The ID of the deposit (and token) that is being transferredoldOwneraddressThe owner before the deposit was transferrednewOwneraddressThe owner after the deposit was transferredTokenStaked‚Äã event TokenStaked( uint256 tokenId, bytes32 liquidity, uint128 incentiveId )CopyEvent emitted when a Uniswap V3 LP token has been stakedParameters:‚ÄãNameTypeDescriptiontokenIduint256The unique identifier of an Uniswap V3 LP tokenliquiditybytes32The amount of liquidity stakedincentiveIduint128The incentive in which the token is stakingTokenUnstaked‚Äã event TokenUnstaked( uint256 tokenId, bytes32 incentiveId )CopyEvent emitted when a Uniswap V3 LP token has been unstakedParameters:‚ÄãNameTypeDescriptiontokenIduint256The unique identifier of an Uniswap V3 LP tokenincentiveIdbytes32The incentive in which the token is stakingRewardClaimed‚Äã event RewardClaimed( address to, uint256 reward )CopyEvent emitted when a reward token has been claimedParameters:‚ÄãNameTypeDescriptiontoaddressThe address where claimed rewards were sent torewarduint256The amount of reward tokens claimedEdit this pageHelpful?PreviousUniswap V3 Staker ContractNextIncentiveIdFunctionsfactorynonfungiblePositionManagermaxIncentiveDurationmaxIncentiveStartLeadTimeincentivesdepositsstakesrewardscreateIncentiveendIncentivetransferDepositwithdrawTokenstakeTokenunstakeTokenclaimRewardgetRewardInfoEventsIncentiveCreatedIncentiveEndedDepositTransferredTokenStakedTokenUnstakedRewardClaimedDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
454,p.org contracts v3 reference periphery test TestERC20Metadata,p.org contracts v3 reference periphery test TestERC20Metadata.    TestERC20Metadata | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerTestBase64TestLiquidityAmountsTestMockTimeNonfungiblePositionManagerMockTimeSwapRouterNFTDescriptorTestPathTestPeripheryImmutableStateTestPoolAddressTestSelfPermitTestTestCallbackValidationTestERC20TestERC20MetadataTestERC20PermitAllowedTestMulticallTestPositionNFTOwnerTestUniswapV3CalleeTickLensTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryTestTestERC20MetadataHelpful?On this pageTestERC20MetadataFunctions‚Äãconstructor‚Äã function constructor( ) publicCopyEdit this pageHelpful?PreviousTestERC20NextTestERC20PermitAllowedFunctionsconstructorDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
455,p.org sdk v3 reference modules.md#nearestusabletick,p.org sdk v3 reference modules.md#nearestusabletick. 
456,p.org sdk v3 reference classes Trade#minimumamountout,"p.org sdk v3 reference classes Trade#minimumamountout.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTradeHelpful?On this pageTrade@uniswap/v3-sdk / Exports / TradeClass: Trade<TInput, TOutput, TTradeType>Represents a trade executed against a set of routes where some percentage of the input is split across each route.Each route has its own set of pools. Pools can not be re-used across routes.Does not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and when it is executed.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessors‚ÄãexecutionPriceinputAmountoutputAmountpriceImpactrouteMethods‚ÄãmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Trade<TInput, TOutput, TTradeType>(__namedParameters)Construct a trade by passing in the pre-computed property valuesType parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyTTradeTypeextends TradeTypeParameters‚ÄãNameType__namedParametersObject__namedParameters.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]__namedParameters.tradeTypeTTradeTypeDefined in‚Äãentities/trade.ts:397Properties‚Äã_executionPrice‚Äã‚Ä¢ Private _executionPrice: undefined | Price<TInput, TOutput>The cached result of the computed execution priceDefined in‚Äãentities/trade.ts:143_inputAmount‚Äã‚Ä¢ Private _inputAmount: undefined | CurrencyAmount<TInput>The cached result of the input amount computationDefined in‚Äãentities/trade.ts:97_outputAmount‚Äã‚Ä¢ Private _outputAmount: undefined | CurrencyAmount<TOutput>The cached result of the output amount computationDefined in‚Äãentities/trade.ts:120_priceImpact‚Äã‚Ä¢ Private _priceImpact: undefined | PercentThe cached result of the price impact computationDefined in‚Äãentities/trade.ts:164swaps‚Äã‚Ä¢ Readonly swaps: { inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]The swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.Defined in‚Äãentities/trade.ts:82tradeType‚Äã‚Ä¢ Readonly tradeType: TTradeTypeThe type of the trade, either exact in or exact out.Defined in‚Äãentities/trade.ts:91Accessors‚ÄãexecutionPrice‚Äã‚Ä¢ get executionPrice(): Price<TInput, TOutput>The price expressed in terms of output amount/input amount.Returns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/trade.ts:148inputAmount‚Äã‚Ä¢ get inputAmount(): CurrencyAmount<TInput>The input amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TInput>Defined in‚Äãentities/trade.ts:102outputAmount‚Äã‚Ä¢ get outputAmount(): CurrencyAmount<TOutput>The output amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TOutput>Defined in‚Äãentities/trade.ts:125priceImpact‚Äã‚Ä¢ get priceImpact(): PercentReturns the percent difference between the route's mid price and the price impactReturns‚ÄãPercentDefined in‚Äãentities/trade.ts:169route‚Äã‚Ä¢ get route(): Route<TInput, TOutput>DeprecatedDeprecated in favor of 'swaps' property. If the trade consists of multiple routes this will return an error.When the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.Returns‚ÄãRoute<TInput, TOutput>Defined in‚Äãentities/trade.ts:73Methods‚ÄãmaximumAmountIn‚Äã‚ñ∏ maximumAmountIn(slippageTolerance, amountIn?): CurrencyAmount<TInput>Get the maximum amount in that can be spent via this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountInCurrencyAmount<TInput>-Returns‚ÄãCurrencyAmount<TInput>The amount inDefined in‚Äãentities/trade.ts:456minimumAmountOut‚Äã‚ñ∏ minimumAmountOut(slippageTolerance, amountOut?): CurrencyAmount<TOutput>Get the minimum amount that must be received from this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountOutCurrencyAmount<TOutput>-Returns‚ÄãCurrencyAmount<TOutput>The amount outDefined in‚Äãentities/trade.ts:438worstExecutionPrice‚Äã‚ñ∏ worstExecutionPrice(slippageTolerance): Price<TInput, TOutput>Return the execution price after accounting for slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentthe allowed tolerated slippageReturns‚ÄãPrice<TInput, TOutput>The execution priceDefined in‚Äãentities/trade.ts:471bestTradeExactIn‚Äã‚ñ∏ Static bestTradeExactIn<TInput, TOutput>(pools, currencyAmountIn, currencyOut, __namedParameters?, currentPools?, nextAmountIn?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_INPUT>[]>Given a list of pools, and a fixed amount in, returns the top maxNumResults trades that go from an input token amount to an output token, making at most maxHops hops. Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyAmountInCurrencyAmount<TInput>undefinedused in recursion; the original value of the currencyAmountIn parametercurrencyOutTOutputundefinedthe desired currency out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountInCurrencyAmount<Currency>currencyAmountInexact amount of input currency to spendbestTradesTrade<TInput, TOutput, EXACT_INPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>[]>The exact in tradeDefined in‚Äãentities/trade.ts:495bestTradeExactOut‚Äã‚ñ∏ Static bestTradeExactOut<TInput, TOutput>(pools, currencyIn, currencyAmountOut, __namedParameters?, currentPools?, nextAmountOut?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>similar to the above method but instead targets a fixed output amount given a list of pools, and a fixed amount out, returns the top maxNumResults trades that go from an input token to an output token amount, making at most maxHops hops note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyInTInputundefinedthe currency to spendcurrencyAmountOutCurrencyAmount<TOutput>undefinedthe desired currency amount out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountOutCurrencyAmount<Currency>currencyAmountOutthe exact amount of currency outbestTradesTrade<TInput, TOutput, EXACT_OUTPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>The exact out tradeDefined in‚Äãentities/trade.ts:576createUncheckedTrade‚Äã‚ñ∏ Static createUncheckedTrade<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.inputAmountCurrencyAmount<TInput>-constructorArguments.outputAmountCurrencyAmount<TOutput>-constructorArguments.routeRoute<TInput, TOutput>-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:346createUncheckedTradeWithMultipleRoutes‚Äã‚ñ∏ Static createUncheckedTradeWithMultipleRoutes<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:377exactIn‚Äã‚ñ∏ Static exactIn<TInput, TOutput>(route, amountIn): Promise<Trade<TInput, TOutput, EXACT_INPUT>>Constructs an exact in trade with the given amount in and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact in tradeamountInCurrencyAmount<TInput>The amount being passed inReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>>The exact in tradeDefined in‚Äãentities/trade.ts:194exactOut‚Äã‚ñ∏ Static exactOut<TInput, TOutput>(route, amountOut): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>>Constructs an exact out trade with the given amount out and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact out tradeamountOutCurrencyAmount<TOutput>The amount returned by the tradeReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>>The exact out tradeDefined in‚Äãentities/trade.ts:209fromRoute‚Äã‚ñ∏ Static fromRoute<TInput, TOutput, TTradeType>(route, amount, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade by simulating swaps through the given routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>route to swap throughamountTTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>the amount specified, either input or output, depending on tradeTypetradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The routeDefined in‚Äãentities/trade.ts:226fromRoutes‚Äã‚ñ∏ Static fromRoutes<TInput, TOutput, TTradeType>(routes, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade from routes by simulating swapsType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionroutes{ amount: TTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]the routes to swap through and how much of the amount should be routed through eachtradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The tradeDefined in‚Äãentities/trade.ts:276Helpful?PreviousTickMathNextFeeAmountType parametersTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessorsexecutionPriceinputAmountoutputAmountpriceImpactrouteMethodsmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
457,p.org sdk v3 reference classes SwapQuoter#constructor,"p.org sdk v3 reference classes SwapQuoter#constructor.    SwapQuoter | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesSwapQuoterHelpful?On this pageSwapQuoter@uniswap/v3-sdk / Exports / SwapQuoterClass: SwapQuoterRepresents the Uniswap V3 QuoterV1 contract with a method for returning the formatted calldata needed to call the quoter contract.Table of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãV1INTERFACEV2INTERFACEMethods‚ÄãquoteCallParametersConstructors‚Äãconstructor‚Äã‚Ä¢ new SwapQuoter()Properties‚ÄãV1INTERFACE‚Äã‚ñ™ Static V1INTERFACE: InterfaceDefined in‚Äãquoter.ts:37V2INTERFACE‚Äã‚ñ™ Static V2INTERFACE: InterfaceDefined in‚Äãquoter.ts:38Methods‚ÄãquoteCallParameters‚Äã‚ñ∏ Static quoteCallParameters<TInput, TOutput>(route, amount, tradeType, options?): MethodParametersProduces the on-chain method name of the appropriate function within QuoterV2, and the relevant hex encoded parameters.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The swap route, a list of pools through which a swap can occuramountCurrencyAmount<TInput | TOutput>The amount of the quote, either an amount in, or an amount outtradeTypeTradeTypeThe trade type, either exact input or exact outputoptionsQuoteOptionsThe optional params including price limit and Quoter contract switchReturns‚ÄãMethodParametersThe formatted calldataDefined in‚Äãquoter.ts:51Helpful?PreviousSwapMathNextSwapRouterTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesV1INTERFACEV2INTERFACEMethodsquoteCallParametersDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
458,p.org sdk 1.0.0 reference format,p.org sdk 1.0.0 reference format. 
459,p.org sdk v3 reference classes Pool#token0price,"p.org sdk v3 reference classes Pool#token0price.    Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPoolHelpful?On this pagePool@uniswap/v3-sdk / Exports / PoolClass: PoolRepresents a V3 poolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1Accessors‚ÄãchainIdtickSpacingtoken0Pricetoken1PriceMethods‚ÄãgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressConstructors‚Äãconstructor‚Äã‚Ä¢ new Pool(tokenA, tokenB, fee, sqrtRatioX96, liquidity, tickCurrent, ticks?)Construct a poolParameters‚ÄãNameTypeDefault valueDescriptiontokenATokenundefinedOne of the tokens in the pooltokenBTokenundefinedThe other token in the poolfeeFeeAmountundefinedThe fee in hundredths of a bips of the input amount of every swap that is collected by the poolsqrtRatioX96BigintIshundefinedThe sqrt of the current ratio of amounts of token1 to token0liquidityBigintIshundefinedThe current value of in range liquiditytickCurrentnumberundefinedThe current tick of the poolticksTickDataProvider | (Tick | TickConstructorArgs)[]NO_TICK_DATA_PROVIDER_DEFAULTThe current state of the pool ticks or a data provider that can return tick dataDefined in‚Äãentities/pool.ts:70Properties‚Äã_token0Price‚Äã‚Ä¢ Private Optional _token0Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:41_token1Price‚Äã‚Ä¢ Private Optional _token1Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:42fee‚Äã‚Ä¢ Readonly fee: FeeAmountDefined in‚Äãentities/pool.ts:35liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/pool.ts:37sqrtRatioX96‚Äã‚Ä¢ Readonly sqrtRatioX96: defaultDefined in‚Äãentities/pool.ts:36tickCurrent‚Äã‚Ä¢ Readonly tickCurrent: numberDefined in‚Äãentities/pool.ts:38tickDataProvider‚Äã‚Ä¢ Readonly tickDataProvider: TickDataProviderDefined in‚Äãentities/pool.ts:39token0‚Äã‚Ä¢ Readonly token0: TokenDefined in‚Äãentities/pool.ts:33token1‚Äã‚Ä¢ Readonly token1: TokenDefined in‚Äãentities/pool.ts:34Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns the chain ID of the tokens in the pool.Returns‚ÄãnumberDefined in‚Äãentities/pool.ts:149tickSpacing‚Äã‚Ä¢ get tickSpacing(): numberReturns‚ÄãnumberDefined in‚Äãentities/pool.ts:317token0Price‚Äã‚Ä¢ get token0Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:109token1Price‚Äã‚Ä¢ get token1Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:124Methods‚ÄãgetInputAmount‚Äã‚ñ∏ getInputAmount(outputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given a desired output amount of a token, return the computed input amount and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptionoutputAmountCurrencyAmount<Token>the output amount for which to quote the input amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The input amount and the pool with updated stateDefined in‚Äãentities/pool.ts:185getOutputAmount‚Äã‚ñ∏ getOutputAmount(inputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given an input amount of a token, return the computed output amount, and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptioninputAmountCurrencyAmount<Token>The input amount for which to quote the output amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limitReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The output amount and the pool with updated stateDefined in‚Äãentities/pool.ts:159involvesToken‚Äã‚ñ∏ involvesToken(token): booleanReturns true if the token is either token0 or token1Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to checkReturns‚ÄãbooleanTrue if token is either token0 or tokenDefined in‚Äãentities/pool.ts:102priceOf‚Äã‚ñ∏ priceOf(token): Price<Token, Token>Return the price of the given token in terms of the other token in the pool.Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to return price ofReturns‚ÄãPrice<Token, Token>The price of the given token, in terms of the other.Defined in‚Äãentities/pool.ts:141swap‚Äã‚ñ∏ Private swap(zeroForOne, amountSpecified, sqrtPriceLimitX96?): Promise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>Executes a swapParameters‚ÄãNameTypeDescriptionzeroForOnebooleanWhether the amount in is token0 or token1amountSpecifieddefaultThe amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>amountCalculatedsqrtRatioX96liquiditytickCurrentDefined in‚Äãentities/pool.ts:215getAddress‚Äã‚ñ∏ Static getAddress(tokenA, tokenB, fee, initCodeHashManualOverride?, factoryAddressOverride?): stringParameters‚ÄãNameTypetokenATokentokenBTokenfeeFeeAmountinitCodeHashManualOverride?stringfactoryAddressOverride?stringReturns‚ÄãstringDefined in‚Äãentities/pool.ts:44Helpful?PreviousPaymentsNextPositionTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1AccessorschainIdtickSpacingtoken0Pricetoken1PriceMethodsgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
460,p.org sdk v3 reference classes Pool#token1price,"p.org sdk v3 reference classes Pool#token1price.    Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPoolHelpful?On this pagePool@uniswap/v3-sdk / Exports / PoolClass: PoolRepresents a V3 poolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1Accessors‚ÄãchainIdtickSpacingtoken0Pricetoken1PriceMethods‚ÄãgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressConstructors‚Äãconstructor‚Äã‚Ä¢ new Pool(tokenA, tokenB, fee, sqrtRatioX96, liquidity, tickCurrent, ticks?)Construct a poolParameters‚ÄãNameTypeDefault valueDescriptiontokenATokenundefinedOne of the tokens in the pooltokenBTokenundefinedThe other token in the poolfeeFeeAmountundefinedThe fee in hundredths of a bips of the input amount of every swap that is collected by the poolsqrtRatioX96BigintIshundefinedThe sqrt of the current ratio of amounts of token1 to token0liquidityBigintIshundefinedThe current value of in range liquiditytickCurrentnumberundefinedThe current tick of the poolticksTickDataProvider | (Tick | TickConstructorArgs)[]NO_TICK_DATA_PROVIDER_DEFAULTThe current state of the pool ticks or a data provider that can return tick dataDefined in‚Äãentities/pool.ts:70Properties‚Äã_token0Price‚Äã‚Ä¢ Private Optional _token0Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:41_token1Price‚Äã‚Ä¢ Private Optional _token1Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:42fee‚Äã‚Ä¢ Readonly fee: FeeAmountDefined in‚Äãentities/pool.ts:35liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/pool.ts:37sqrtRatioX96‚Äã‚Ä¢ Readonly sqrtRatioX96: defaultDefined in‚Äãentities/pool.ts:36tickCurrent‚Äã‚Ä¢ Readonly tickCurrent: numberDefined in‚Äãentities/pool.ts:38tickDataProvider‚Äã‚Ä¢ Readonly tickDataProvider: TickDataProviderDefined in‚Äãentities/pool.ts:39token0‚Äã‚Ä¢ Readonly token0: TokenDefined in‚Äãentities/pool.ts:33token1‚Äã‚Ä¢ Readonly token1: TokenDefined in‚Äãentities/pool.ts:34Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns the chain ID of the tokens in the pool.Returns‚ÄãnumberDefined in‚Äãentities/pool.ts:149tickSpacing‚Äã‚Ä¢ get tickSpacing(): numberReturns‚ÄãnumberDefined in‚Äãentities/pool.ts:317token0Price‚Äã‚Ä¢ get token0Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:109token1Price‚Äã‚Ä¢ get token1Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:124Methods‚ÄãgetInputAmount‚Äã‚ñ∏ getInputAmount(outputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given a desired output amount of a token, return the computed input amount and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptionoutputAmountCurrencyAmount<Token>the output amount for which to quote the input amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The input amount and the pool with updated stateDefined in‚Äãentities/pool.ts:185getOutputAmount‚Äã‚ñ∏ getOutputAmount(inputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given an input amount of a token, return the computed output amount, and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptioninputAmountCurrencyAmount<Token>The input amount for which to quote the output amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limitReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The output amount and the pool with updated stateDefined in‚Äãentities/pool.ts:159involvesToken‚Äã‚ñ∏ involvesToken(token): booleanReturns true if the token is either token0 or token1Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to checkReturns‚ÄãbooleanTrue if token is either token0 or tokenDefined in‚Äãentities/pool.ts:102priceOf‚Äã‚ñ∏ priceOf(token): Price<Token, Token>Return the price of the given token in terms of the other token in the pool.Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to return price ofReturns‚ÄãPrice<Token, Token>The price of the given token, in terms of the other.Defined in‚Äãentities/pool.ts:141swap‚Äã‚ñ∏ Private swap(zeroForOne, amountSpecified, sqrtPriceLimitX96?): Promise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>Executes a swapParameters‚ÄãNameTypeDescriptionzeroForOnebooleanWhether the amount in is token0 or token1amountSpecifieddefaultThe amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>amountCalculatedsqrtRatioX96liquiditytickCurrentDefined in‚Äãentities/pool.ts:215getAddress‚Äã‚ñ∏ Static getAddress(tokenA, tokenB, fee, initCodeHashManualOverride?, factoryAddressOverride?): stringParameters‚ÄãNameTypetokenATokentokenBTokenfeeFeeAmountinitCodeHashManualOverride?stringfactoryAddressOverride?stringReturns‚ÄãstringDefined in‚Äãentities/pool.ts:44Helpful?PreviousPaymentsNextPositionTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1AccessorschainIdtickSpacingtoken0Pricetoken1PriceMethodsgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
461,p.org sdk v3 reference interfaces StandardPermitArguments#r,p.org sdk v3 reference interfaces StandardPermitArguments#r.    StandardPermitArguments | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesStandardPermitArgumentsHelpful?On this pageStandardPermitArguments@uniswap/v3-sdk / Exports / StandardPermitArgumentsInterface: StandardPermitArgumentsTable of contents‚ÄãProperties‚ÄãamountdeadlinersvProperties‚Äãamount‚Äã‚Ä¢ amount: BigintIshDefined in‚ÄãselfPermit.ts:10deadline‚Äã‚Ä¢ deadline: BigintIshDefined in‚ÄãselfPermit.ts:11r‚Äã‚Ä¢ r: stringDefined in‚ÄãselfPermit.ts:8s‚Äã‚Ä¢ s: stringDefined in‚ÄãselfPermit.ts:9v‚Äã‚Ä¢ v: 0 | 1 | 27 | 28Defined in‚ÄãselfPermit.ts:7Helpful?PreviousSafeTransferOptionsNextSwapOptionsTable of contentsPropertiesPropertiesamountdeadlinersvDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
462,p.org contracts v3 guides providing liquidity increase liquidity,"p.org contracts v3 guides providing liquidity increase liquidity.    Increase Liquidity | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquiditySet Up Your ContractMint a New PositionCollecting FeesDecrease LiquidityIncrease LiquidityThe Full ContractLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolGuidesProviding LiquidityIncrease LiquidityHelpful?On this pageIncrease LiquidityIncrease Liquidity Within The Current Range‚ÄãMake sure to go through the first guide before continuing to this sectionThis example assumes the contract already has custody of the NFT.We cannot change the boundaries of a given liquidity position using the Uniswap v3 protocol; increaseLiquidity can only increase the liquidity of a position.In production, amount0Min and amount1Min should be adjusted to create slippage protections. /// @notice Increases liquidity in the current range /// @dev Pool must be initialized already to add liquidity /// @param tokenId The id of the erc721 token /// @param amount0 The amount to add of token0 /// @param amount1 The amount to add of token1 function increaseLiquidityCurrentRange(  uint256 tokenId,  uint256 amountAdd0,  uint256 amountAdd1 )  external  returns (   uint128 liquidity,   uint256 amount0,   uint256 amount1  ) {  INonfungiblePositionManager.IncreaseLiquidityParams memory params =   INonfungiblePositionManager.IncreaseLiquidityParams({    tokenId: tokenId,    amount0Desired: amountAdd0,    amount1Desired: amountAdd1,    amount0Min: 0,    amount1Min: 0,    deadline: block.timestamp   });  (liquidity, amount0, amount1) = nonfungiblePositionManager.increaseLiquidity(params); }CopyEdit this pageHelpful?PreviousDecrease LiquidityNextThe Full ContractIncrease Liquidity Within The Current RangeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
463,p.org contracts v3 reference deployments,"p.org contracts v3 reference deployments.    Deployment Addresses | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceDeployment AddressesHelpful?Uniswap Contract DeploymentsThe latest version of @uniswap/v3-core, @uniswap/v3-periphery, @uniswap/swap-router-contracts, and @uniswap/v3-staker are deployed at the addresses listed below. Integrators should no longer assume that they are deployed to the same addresses across chains and be extremely careful to confirm mappings below.ContractMainnet, Polygon, Optimism, Arbitrum, Testnets AddressCelo AddressUniswapV3Factory0x1F98431c8aD98523631AE4a59f267346ea31F9840xAfE208a311B21f13EF87E33A90049fC17A7acDEcMulticall20x5BA1e12693Dc8F9c48aAD8770482f4739bEeD6960x633987602DE5C4F337e3DbF265303A1080324204ProxyAdmin0xB753548F6E010e7e680BA186F9Ca1BdAB2E90cf20xc1b262Dd7643D4B7cA9e51631bBd900a564BF49ATickLens0xbfd8137f7d1516D3ea5cA83523914859ec47F5730x5f115D9113F88e0a0Db1b5033D90D4a9690AcD3DQuoter0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB60x82825d0554fA07f7FC52Ab63c961F330fdEFa8E8SwapRouter0xE592427A0AEce92De3Edee1F18E0157C058615640x5615CDAb10dc425a742d643d949a7F474C01abc4NFTDescriptor0x42B24A95702b9986e82d421cC3568932790A48Ec0xa9Fd765d85938D278cb0b108DbE4BF7186831186NonfungibleTokenPositionDescriptor0x91ae842A5Ffd8d12023116943e72A606179294f30x644023b316bB65175C347DE903B60a756F6dd554TransparentUpgradeableProxy0xEe6A57eC80ea46401049E92587E52f5Ec1c247850x505B43c452AA4443e0a6B84bb37771494633Fde9NonfungiblePositionManager0xC36442b4a4522E871399CD717aBDD847Ab11FE880x3d79EdAaBC0EaB6F08ED885C05Fc0B014290D95AV3Migrator0xA5644E29708357803b5A882D272c41cC0dF92B340x3cFd4d48EDfDCC53D3f173F596f621064614C582QuoterV20x61fFE014bA17989E743c5F6cB21bF9697530B21e0x82825d0554fA07f7FC52Ab63c961F330fdEFa8E8SwapRouter020x68b3465833fb72A70ecDF485E0e4C7bD8665Fc450x5615CDAb10dc425a742d643d949a7F474C01abc4Permit20x000000000022d473030f116ddee9f6b43ac78ba30x000000000022d473030f116ddee9f6b43ac78ba3The new UniversalRouter has been deployed to the following addresses on the following chains:ContractMainnet AddressOptimism AddressArbitrum AddressPolygon AddressSee other chain addresses hereUniversalRouter0xEf1c6E67703c7BD7107eed8303Fbe6EC2554BF6B0xb555edF5dcF85f42cEeF1f3630a52A108E55A6540x4C60051384bd2d3C01bfc845Cf5F4b44bcbE9de50x4C60051384bd2d3C01bfc845Cf5F4b44bcbE9de5Other addressesThese addresses are final and were deployed from these npm package versions:@uniswap/v3-core@1.0.0@uniswap/v3-periphery@1.0.0@uniswap/swap-router-contracts@1.1.0@uniswap/v3-staker@1.0.2Uniswap Pool DeploymentsEvery Uniswap pool is a unique instance of the UniswapV3Pool contract and is deployed at its own unique address. The contract source code of the pool will be auto-verified on etherscan. For example, here is the ETH/USDC 0.3% pool on Ethereum mainnet.You can look up the address of an existing pool on Uniswap Info or by calling the getPool function on the UniswapV3Factory contract.getPool(""0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"", ""0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"", 3000)CopyWrapped Native Token AddressesThe Uniswap Protocol supports trading of ERC20 tokens. In order to swap a native asset like ETH (or MATIC on Polygon), the Uniswap protocol wraps these assets in an ERC20 wrapped native token contract. The protocol uses the following WETH9 addresses on Ethereum and WMATIC addresses on Polygon.NetworkChainIdWrapped Native TokenAddressEthereum1WETH0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2Ropsten3WETH0xc778417E063141139Fce010982780140Aa0cD5AbRinkeby4WETH0xc778417E063141139Fce010982780140Aa0cD5AbGoerli5WETH0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6Kovan42WETH0xd0A1E359811322d97991E03f863a0C30C2cF029COptimism10WETH0x4200000000000000000000000000000000000006Optimistic Kovan69WETH0x4200000000000000000000000000000000000006Arbitrum One42161WETH0x82aF49447D8a07e3bd95BD0d56f35241523fBab1Arbitrum Rinkeby421611WETH0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681Polygon137WMATIC0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270Polygon Mumbai80001WMATIC0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889Edit this pageHelpful?PreviousV3MigratorNextError CodesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
464,p.org sdk core reference overview,"p.org sdk core reference overview.    Overview | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceOverviewHelpful?On this pageOverviewTable of contents‚ÄãEnumerations‚ÄãRoundingSupportedChainIdTradeTypeClasses‚ÄãCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenType Aliases‚ÄãBigintIshCurrencyVariables‚ÄãMaxUint256WETH9Functions‚ÄãcomputePriceImpactsortedInsertsqrtvalidateAndParseAddressType Aliases‚ÄãBigintIsh‚Äã∆¨ BigintIsh: JSBI | string | numberDefined in‚Äãconstants.ts:24Currency‚Äã∆¨ Currency: NativeCurrency | TokenDefined in‚Äãentities/currency.ts:4Variables‚ÄãMaxUint256‚Äã‚Ä¢ Const MaxUint256: defaultDefined in‚Äãconstants.ts:37WETH9‚Äã‚Ä¢ Const WETH9: ObjectKnown WETH9 implementation addresses, used in our implementation of Ether#wrappedIndex signature‚Äã‚ñ™ [chainId: number]: TokenDefined in‚Äãentities/weth9.ts:6Functions‚ÄãcomputePriceImpact‚Äã‚ñ∏ computePriceImpact<TBase, TQuote>(midPrice, inputAmount, outputAmount): PercentReturns the percent difference between the mid price and the execution price, i.e. price impact.Type parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyParameters‚ÄãNameTypeDescriptionmidPricePrice<TBase, TQuote>mid price before the tradeinputAmountCurrencyAmount<TBase>the input amount of the tradeoutputAmountCurrencyAmount<TQuote>the output amount of the tradeReturns‚ÄãPercentDefined in‚Äãutils/computePriceImpact.ts:9sortedInsert‚Äã‚ñ∏ sortedInsert<T>(items, add, maxSize, comparator): T | nullType parameters‚ÄãNameTParameters‚ÄãNameTypeitemsT[]addTmaxSizenumbercomparator(a: T, b: T) => numberReturns‚ÄãT | nullDefined in‚Äãutils/sortedInsert.ts:5sqrt‚Äã‚ñ∏ sqrt(value): JSBIComputes floor(sqrt(value))Parameters‚ÄãNameTypeDescriptionvaluedefaultthe value for which to compute the square root, rounded downReturns‚ÄãJSBIDefined in‚Äãutils/sqrt.ts:14validateAndParseAddress‚Äã‚ñ∏ validateAndParseAddress(address): stringValidates an address and returns the parsed (checksummed) version of that addressParameters‚ÄãNameTypeDescriptionaddressstringthe unchecksummed hex addressReturns‚ÄãstringDefined in‚Äãutils/validateAndParseAddress.ts:7Helpful?PreviousOverviewNextCurrencyAmountTable of contentsEnumerationsClassesType AliasesVariablesFunctionsType AliasesBigintIshCurrencyVariablesMaxUint256WETH9FunctionscomputePriceImpactsortedInsertsqrtvalidateAndParseAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
465,p.org sdk core reference classes CurrencyAmount#denominator,"p.org sdk core reference classes CurrencyAmount#denominator.    CurrencyAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesCurrencyAmountHelpful?On this pageCurrencyAmount@uniswap/sdk-core / Exports / CurrencyAmountClass: CurrencyAmount<T>Type parameters‚ÄãNameTypeTextends CurrencyHierarchy‚ÄãFraction‚Ü≥ CurrencyAmountTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãcurrencydecimalScaledenominatornumeratorAccessors‚ÄãasFractionquotientremainderwrappedMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new CurrencyAmount<T>(currency, numerator, denominator?)Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypecurrencyTnumeratorBigintIshdenominator?BigintIshOverrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/currencyAmount.ts:40Properties‚Äãcurrency‚Äã‚Ä¢ Readonly currency: TDefined in‚Äãentities/fractions/currencyAmount.ts:14decimalScale‚Äã‚Ä¢ Readonly decimalScale: defaultDefined in‚Äãentities/fractions/currencyAmount.ts:15denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47wrapped‚Äã‚Ä¢ get wrapped(): CurrencyAmount<Token>Returns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/fractions/currencyAmount.ts:91Methods‚Äãadd‚Äã‚ñ∏ add(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.addDefined in‚Äãentities/fractions/currencyAmount.ts:47divide‚Äã‚ñ∏ divide(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/currencyAmount.ts:64equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/currencyAmount.ts:59subtract‚Äã‚ñ∏ subtract(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/currencyAmount.ts:53toExact‚Äã‚ñ∏ toExact(format?): stringParameters‚ÄãNameTypeformatobjectReturns‚ÄãstringDefined in‚Äãentities/fractions/currencyAmount.ts:86toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformat?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/currencyAmount.ts:77toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/currencyAmount.ts:69fromFractionalAmount‚Äã‚ñ∏ Static fromFractionalAmount<T>(currency, numerator, denominator): CurrencyAmount<T>Construct a currency amount with a denominator that is not equal to 1Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currencynumeratorBigintIshthe numerator of the fractional token amountdenominatorBigintIshthe denominator of the fractional token amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:32fromRawAmount‚Äã‚ñ∏ Static fromRawAmount<T>(currency, rawAmount): CurrencyAmount<T>Returns a new currency amount instance from the unitless amount of token, i.e. the raw amountType parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currency in the amountrawAmountBigintIshthe raw token or ether amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:22Helpful?PreviousOverviewNextEtherType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiescurrencydecimalScaledenominatornumeratorAccessorsasFractionquotientremainderwrappedMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
466,p.org sdk v3 reference classes Trade#swaps,"p.org sdk v3 reference classes Trade#swaps.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTradeHelpful?On this pageTrade@uniswap/v3-sdk / Exports / TradeClass: Trade<TInput, TOutput, TTradeType>Represents a trade executed against a set of routes where some percentage of the input is split across each route.Each route has its own set of pools. Pools can not be re-used across routes.Does not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and when it is executed.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessors‚ÄãexecutionPriceinputAmountoutputAmountpriceImpactrouteMethods‚ÄãmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Trade<TInput, TOutput, TTradeType>(__namedParameters)Construct a trade by passing in the pre-computed property valuesType parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyTTradeTypeextends TradeTypeParameters‚ÄãNameType__namedParametersObject__namedParameters.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]__namedParameters.tradeTypeTTradeTypeDefined in‚Äãentities/trade.ts:397Properties‚Äã_executionPrice‚Äã‚Ä¢ Private _executionPrice: undefined | Price<TInput, TOutput>The cached result of the computed execution priceDefined in‚Äãentities/trade.ts:143_inputAmount‚Äã‚Ä¢ Private _inputAmount: undefined | CurrencyAmount<TInput>The cached result of the input amount computationDefined in‚Äãentities/trade.ts:97_outputAmount‚Äã‚Ä¢ Private _outputAmount: undefined | CurrencyAmount<TOutput>The cached result of the output amount computationDefined in‚Äãentities/trade.ts:120_priceImpact‚Äã‚Ä¢ Private _priceImpact: undefined | PercentThe cached result of the price impact computationDefined in‚Äãentities/trade.ts:164swaps‚Äã‚Ä¢ Readonly swaps: { inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]The swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.Defined in‚Äãentities/trade.ts:82tradeType‚Äã‚Ä¢ Readonly tradeType: TTradeTypeThe type of the trade, either exact in or exact out.Defined in‚Äãentities/trade.ts:91Accessors‚ÄãexecutionPrice‚Äã‚Ä¢ get executionPrice(): Price<TInput, TOutput>The price expressed in terms of output amount/input amount.Returns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/trade.ts:148inputAmount‚Äã‚Ä¢ get inputAmount(): CurrencyAmount<TInput>The input amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TInput>Defined in‚Äãentities/trade.ts:102outputAmount‚Äã‚Ä¢ get outputAmount(): CurrencyAmount<TOutput>The output amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TOutput>Defined in‚Äãentities/trade.ts:125priceImpact‚Äã‚Ä¢ get priceImpact(): PercentReturns the percent difference between the route's mid price and the price impactReturns‚ÄãPercentDefined in‚Äãentities/trade.ts:169route‚Äã‚Ä¢ get route(): Route<TInput, TOutput>DeprecatedDeprecated in favor of 'swaps' property. If the trade consists of multiple routes this will return an error.When the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.Returns‚ÄãRoute<TInput, TOutput>Defined in‚Äãentities/trade.ts:73Methods‚ÄãmaximumAmountIn‚Äã‚ñ∏ maximumAmountIn(slippageTolerance, amountIn?): CurrencyAmount<TInput>Get the maximum amount in that can be spent via this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountInCurrencyAmount<TInput>-Returns‚ÄãCurrencyAmount<TInput>The amount inDefined in‚Äãentities/trade.ts:456minimumAmountOut‚Äã‚ñ∏ minimumAmountOut(slippageTolerance, amountOut?): CurrencyAmount<TOutput>Get the minimum amount that must be received from this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountOutCurrencyAmount<TOutput>-Returns‚ÄãCurrencyAmount<TOutput>The amount outDefined in‚Äãentities/trade.ts:438worstExecutionPrice‚Äã‚ñ∏ worstExecutionPrice(slippageTolerance): Price<TInput, TOutput>Return the execution price after accounting for slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentthe allowed tolerated slippageReturns‚ÄãPrice<TInput, TOutput>The execution priceDefined in‚Äãentities/trade.ts:471bestTradeExactIn‚Äã‚ñ∏ Static bestTradeExactIn<TInput, TOutput>(pools, currencyAmountIn, currencyOut, __namedParameters?, currentPools?, nextAmountIn?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_INPUT>[]>Given a list of pools, and a fixed amount in, returns the top maxNumResults trades that go from an input token amount to an output token, making at most maxHops hops. Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyAmountInCurrencyAmount<TInput>undefinedused in recursion; the original value of the currencyAmountIn parametercurrencyOutTOutputundefinedthe desired currency out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountInCurrencyAmount<Currency>currencyAmountInexact amount of input currency to spendbestTradesTrade<TInput, TOutput, EXACT_INPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>[]>The exact in tradeDefined in‚Äãentities/trade.ts:495bestTradeExactOut‚Äã‚ñ∏ Static bestTradeExactOut<TInput, TOutput>(pools, currencyIn, currencyAmountOut, __namedParameters?, currentPools?, nextAmountOut?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>similar to the above method but instead targets a fixed output amount given a list of pools, and a fixed amount out, returns the top maxNumResults trades that go from an input token to an output token amount, making at most maxHops hops note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyInTInputundefinedthe currency to spendcurrencyAmountOutCurrencyAmount<TOutput>undefinedthe desired currency amount out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountOutCurrencyAmount<Currency>currencyAmountOutthe exact amount of currency outbestTradesTrade<TInput, TOutput, EXACT_OUTPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>The exact out tradeDefined in‚Äãentities/trade.ts:576createUncheckedTrade‚Äã‚ñ∏ Static createUncheckedTrade<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.inputAmountCurrencyAmount<TInput>-constructorArguments.outputAmountCurrencyAmount<TOutput>-constructorArguments.routeRoute<TInput, TOutput>-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:346createUncheckedTradeWithMultipleRoutes‚Äã‚ñ∏ Static createUncheckedTradeWithMultipleRoutes<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:377exactIn‚Äã‚ñ∏ Static exactIn<TInput, TOutput>(route, amountIn): Promise<Trade<TInput, TOutput, EXACT_INPUT>>Constructs an exact in trade with the given amount in and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact in tradeamountInCurrencyAmount<TInput>The amount being passed inReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>>The exact in tradeDefined in‚Äãentities/trade.ts:194exactOut‚Äã‚ñ∏ Static exactOut<TInput, TOutput>(route, amountOut): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>>Constructs an exact out trade with the given amount out and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact out tradeamountOutCurrencyAmount<TOutput>The amount returned by the tradeReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>>The exact out tradeDefined in‚Äãentities/trade.ts:209fromRoute‚Äã‚ñ∏ Static fromRoute<TInput, TOutput, TTradeType>(route, amount, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade by simulating swaps through the given routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>route to swap throughamountTTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>the amount specified, either input or output, depending on tradeTypetradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The routeDefined in‚Äãentities/trade.ts:226fromRoutes‚Äã‚ñ∏ Static fromRoutes<TInput, TOutput, TTradeType>(routes, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade from routes by simulating swapsType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionroutes{ amount: TTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]the routes to swap through and how much of the amount should be routed through eachtradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The tradeDefined in‚Äãentities/trade.ts:276Helpful?PreviousTickMathNextFeeAmountType parametersTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessorsexecutionPriceinputAmountoutputAmountpriceImpactrouteMethodsmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
467,p.org sdk v3 reference classes Pool#priceof,"p.org sdk v3 reference classes Pool#priceof.    Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPoolHelpful?On this pagePool@uniswap/v3-sdk / Exports / PoolClass: PoolRepresents a V3 poolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1Accessors‚ÄãchainIdtickSpacingtoken0Pricetoken1PriceMethods‚ÄãgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressConstructors‚Äãconstructor‚Äã‚Ä¢ new Pool(tokenA, tokenB, fee, sqrtRatioX96, liquidity, tickCurrent, ticks?)Construct a poolParameters‚ÄãNameTypeDefault valueDescriptiontokenATokenundefinedOne of the tokens in the pooltokenBTokenundefinedThe other token in the poolfeeFeeAmountundefinedThe fee in hundredths of a bips of the input amount of every swap that is collected by the poolsqrtRatioX96BigintIshundefinedThe sqrt of the current ratio of amounts of token1 to token0liquidityBigintIshundefinedThe current value of in range liquiditytickCurrentnumberundefinedThe current tick of the poolticksTickDataProvider | (Tick | TickConstructorArgs)[]NO_TICK_DATA_PROVIDER_DEFAULTThe current state of the pool ticks or a data provider that can return tick dataDefined in‚Äãentities/pool.ts:70Properties‚Äã_token0Price‚Äã‚Ä¢ Private Optional _token0Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:41_token1Price‚Äã‚Ä¢ Private Optional _token1Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:42fee‚Äã‚Ä¢ Readonly fee: FeeAmountDefined in‚Äãentities/pool.ts:35liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/pool.ts:37sqrtRatioX96‚Äã‚Ä¢ Readonly sqrtRatioX96: defaultDefined in‚Äãentities/pool.ts:36tickCurrent‚Äã‚Ä¢ Readonly tickCurrent: numberDefined in‚Äãentities/pool.ts:38tickDataProvider‚Äã‚Ä¢ Readonly tickDataProvider: TickDataProviderDefined in‚Äãentities/pool.ts:39token0‚Äã‚Ä¢ Readonly token0: TokenDefined in‚Äãentities/pool.ts:33token1‚Äã‚Ä¢ Readonly token1: TokenDefined in‚Äãentities/pool.ts:34Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns the chain ID of the tokens in the pool.Returns‚ÄãnumberDefined in‚Äãentities/pool.ts:149tickSpacing‚Äã‚Ä¢ get tickSpacing(): numberReturns‚ÄãnumberDefined in‚Äãentities/pool.ts:317token0Price‚Äã‚Ä¢ get token0Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:109token1Price‚Äã‚Ä¢ get token1Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:124Methods‚ÄãgetInputAmount‚Äã‚ñ∏ getInputAmount(outputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given a desired output amount of a token, return the computed input amount and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptionoutputAmountCurrencyAmount<Token>the output amount for which to quote the input amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The input amount and the pool with updated stateDefined in‚Äãentities/pool.ts:185getOutputAmount‚Äã‚ñ∏ getOutputAmount(inputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given an input amount of a token, return the computed output amount, and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptioninputAmountCurrencyAmount<Token>The input amount for which to quote the output amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limitReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The output amount and the pool with updated stateDefined in‚Äãentities/pool.ts:159involvesToken‚Äã‚ñ∏ involvesToken(token): booleanReturns true if the token is either token0 or token1Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to checkReturns‚ÄãbooleanTrue if token is either token0 or tokenDefined in‚Äãentities/pool.ts:102priceOf‚Äã‚ñ∏ priceOf(token): Price<Token, Token>Return the price of the given token in terms of the other token in the pool.Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to return price ofReturns‚ÄãPrice<Token, Token>The price of the given token, in terms of the other.Defined in‚Äãentities/pool.ts:141swap‚Äã‚ñ∏ Private swap(zeroForOne, amountSpecified, sqrtPriceLimitX96?): Promise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>Executes a swapParameters‚ÄãNameTypeDescriptionzeroForOnebooleanWhether the amount in is token0 or token1amountSpecifieddefaultThe amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>amountCalculatedsqrtRatioX96liquiditytickCurrentDefined in‚Äãentities/pool.ts:215getAddress‚Äã‚ñ∏ Static getAddress(tokenA, tokenB, fee, initCodeHashManualOverride?, factoryAddressOverride?): stringParameters‚ÄãNameTypetokenATokentokenBTokenfeeFeeAmountinitCodeHashManualOverride?stringfactoryAddressOverride?stringReturns‚ÄãstringDefined in‚Äãentities/pool.ts:44Helpful?PreviousPaymentsNextPositionTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1AccessorschainIdtickSpacingtoken0Pricetoken1PriceMethodsgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
468,p.org sdk v3 reference interfaces IncreaseSpecificOptions#tokenid,p.org sdk v3 reference interfaces IncreaseSpecificOptions#tokenid.    IncreaseSpecificOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesIncreaseSpecificOptionsHelpful?On this pageIncreaseSpecificOptions@uniswap/v3-sdk / Exports / IncreaseSpecificOptionsInterface: IncreaseSpecificOptionsTable of contents‚ÄãProperties‚ÄãtokenIdProperties‚ÄãtokenId‚Äã‚Ä¢ tokenId: BigintIshIndicates the ID of the position to increase liquidity for.Defined in‚ÄãnonfungiblePositionManager.ts:41Helpful?PreviousIncentiveKeyNextMethodParametersTable of contentsPropertiesPropertiestokenIdDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
469,p.org contracts v3 reference core interfaces IUniswapV3Factory#getpool,"p.org contracts v3 reference core interfaces IUniswapV3Factory#getpool.    IUniswapV3Factory | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesIERC20MinimalIUniswapV3FactoryIUniswapV3PoolIUniswapV3PoolDeployercallbackPoolLibrariesGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreInterfacesIUniswapV3FactoryHelpful?On this pageIUniswapV3FactoryThe Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol feesFunctions‚Äãowner‚Äã function owner( ) external view returns (address)CopyReturns the current owner of the factoryCan be changed by the current owner via setOwnerReturn Values:‚ÄãTypeDescriptionaddressaddress of the factory ownerfeeAmountTickSpacing‚Äã function feeAmountTickSpacing( uint24 fee ) external view returns (int24)CopyReturns the tick spacing for a given fee amount, if enabled, or 0 if not enabledA fee amount can never be removed, so this value should be hard coded or cached in the calling contextParameters:‚ÄãNameTypeDescriptionfeeuint24The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled feeReturn Values:‚ÄãTypeDescriptionint24tick spacinggetPool‚Äã function getPool( address tokenA, address tokenB, uint24 fee ) external view returns (address pool)CopyReturns the pool address for a given pair of tokens and a fee, or address 0 if it does not existtokenA and tokenB may be passed in either token0/token1 or token1/token0 orderParameters:‚ÄãNameTypeDescriptiontokenAaddressThe contract address of either token0 or token1tokenBaddressThe contract address of the other tokenfeeuint24The fee collected upon every swap in the pool, denominated in hundredths of a bipReturn Values:‚ÄãNameTypeDescriptionpooladdressThe pool addresscreatePool‚Äã function createPool( address tokenA, address tokenB, uint24 fee ) external returns (address pool)CopyCreates a pool for the given two tokens and feetokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.Parameters:‚ÄãNameTypeDescriptiontokenAaddressOne of the two tokens in the desired pooltokenBaddressThe other of the two tokens in the desired poolfeeuint24The desired fee for the poolReturn Values:‚ÄãNameTypeDescriptionpooladdressThe address of the newly created poolsetOwner‚Äã function setOwner( address _owner ) externalCopyUpdates the owner of the factoryMust be called by the current ownerParameters:‚ÄãNameTypeDescription_owneraddressThe new owner of the factoryenableFeeAmount‚Äã function enableFeeAmount( uint24 fee, int24 tickSpacing ) externalCopyEnables a fee amount with the given tickSpacingFee amounts may never be removed once enabledParameters:‚ÄãNameTypeDescriptionfeeuint24The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)tickSpacingint24The spacing between ticks to be enforced for all pools created with the given fee amountEvents‚ÄãOwnerChanged‚Äã event OwnerChanged( address oldOwner, address newOwner )CopyEmitted when the owner of the factory is changedParameters:‚ÄãNameTypeDescriptionoldOwneraddressThe owner before the owner was changednewOwneraddressThe owner after the owner was changedPoolCreated‚Äã event PoolCreated( address token0, address token1, uint24 fee, int24 tickSpacing, address pool )CopyEmitted when a pool is createdParameters:‚ÄãNameTypeDescriptiontoken0addressThe first token of the pool by address sort ordertoken1addressThe second token of the pool by address sort orderfeeuint24The fee collected upon every swap in the pool, denominated in hundredths of a biptickSpacingint24The minimum number of ticks between initialized tickspooladdressThe address of the created poolFeeAmountEnabled‚Äã event FeeAmountEnabled( uint24 fee, int24 tickSpacing )CopyEmitted when a new fee amount is enabled for pool creation via the factoryParameters:‚ÄãNameTypeDescriptionfeeuint24The enabled fee, denominated in hundredths of a biptickSpacingint24The minimum number of ticks between initialized ticks for pools created with the given feeEdit this pageHelpful?PreviousIERC20MinimalNextIUniswapV3PoolFunctionsownerfeeAmountTickSpacinggetPoolcreatePoolsetOwnerenableFeeAmountEventsOwnerChangedPoolCreatedFeeAmountEnabledDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
470,p.org api subgraph guides examples,"p.org api subgraph guides examples.    Query Examples | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchSubgraphOverviewGuidesQuery Examplesüè†SubgraphGuidesQuery ExamplesHelpful?On this pageSubgraph Query ExamplesThis doc will teach you how to query Uniswap V3 analytics by writing GraphQL queries on the subgraph. You can fetch data points like :collected fees for a positioncurrent liquidity of a poolvolume on a certain dayand much more. Below are some example queries. To run a query copy and paste it into the v3 explorer to get fresh data.Global Data‚ÄãGlobal data refers to data points about the Uniswap v3 protocol as a whole. Some examples of global data points are total value locked in the protocol, total pools deployed, or total transaction counts. Thus, to query global data you must pass in the Uniswap V3 Factory address 0x1F98431c8aD98523631AE4a59f267346ea31F984 and select the desired fields. Reference the full factory schema to see all possible fields.Current Global Data‚ÄãAn example querying total pool count, transaction count, and total volume in USD and ETH:{ factory(id: ""0x1F98431c8aD98523631AE4a59f267346ea31F984"" ) { poolCount txCount totalVolumeUSD totalVolumeETH }}CopyHistorical Global Data‚ÄãYou can also query historical data by specifying a block number.{ factory(id: ""0x1F98431c8aD98523631AE4a59f267346ea31F984"", block: {number: 13380584}){ poolCount txCount totalVolumeUSD totalVolumeETH }}CopyPool Data‚ÄãTo get data about a certain pool, pass in the pool address. Reference the full pool schema and adjust the query fields to retrieve the data points you want.General Pool Query‚ÄãThe query below returns the feeTier, spot price, and liquidity for the ETH-USDC pool.{ pool(id: ""0x8ad599c3a0ff1de082011efddc58f1908eb6e6d8"") { tick token0 {  symbol  id  decimals } token1 {  symbol  id  decimals } feeTier sqrtPrice liquidity }}CopyAll Possible Pools‚ÄãThe maxiumum items you can query at once is 1000. Thus to get all possible pools, you can interate using the skip variable. To get pools beyond the first 1000 you can also set the skip as shown below.Skipping First 1000 Pools‚ÄãThis query sets the skip value and returns the first 10 responses after the first 1000.{ pools(first:10, skip:1000){ id token0 {  id  symbol } token1 {  id  symbol } }}CopyCreating a Skip Variable‚ÄãThis next query sets a skip variable. In your language and environment of choice you can then iterate through a loop, query to get 1000 pools each time, and continually adjust skip by 1000 until all pool responses are returned.Check out this example from our interface for poolDayData that does something similar.Note: This query will not work in the graph explorer and more resembles the structure of a query you'd pass to some graphql middleware like Apollo.query pools( $skip: Int!) { pools(  first: 1000  skip: $skip  orderDirection: asc ) {  id  sqrtPrice  token0 {  id  }  token1 {  id  } } }CopyMost Liquid Pools‚ÄãRetrieve the top 1000 most liquid pools. You can use this similar set up to orderBy other variables like number of swaps or volume.{ pools(first: 1000, orderBy: liquidity, orderDirection: desc) { id }}CopyPool Daily Aggregated‚ÄãThis query returns daily aggregated data for the first 10 days since the given timestamp for the UNI-ETH pool.{ poolDayDatas(first: 10, orderBy: date, where: { pool: ""0x1d42064fc4beb5f8aaf85f4617ae8b3b5b8bd801"", date_gt: 1633642435 } ) { date liquidity sqrtPrice token0Price token1Price volumeToken0 volumeToken1 }}CopySwap Data‚ÄãGeneral Swap Data‚ÄãTo query data about a particular swap, input the transaction hash + ""#"" + the index in the swaps the transaction array.R This is the reference for the full swap schema.This query fetches data about the sender, receiver, amounts, transaction data, and timestamp for a particular swap.{ swap(id: ""0x000007e1111cbd97f74cfc6eea2879a5b02020f26960ac06f4af0f9395372b64#66785"") { sender recipient amount0 amount1 transaction {  id  blockNumber  gasUsed  gasPrice } timestamp token0 {  id  symbol } token1 {  id  symbol } } }CopyRecent Swaps Within a Pool‚ÄãYou can set the where field to filter swap data by pool address. This example fetches data about multiple swaps for the USDC-USDT pool, ordered by timestamp.{swaps(orderBy: timestamp, orderDirection: desc, where: { pool: ""0x7858e59e0c01ea06df3af3d20ac7b0003275d4bf"" }) { pool { token0 {  id  symbol } token1 {  id  symbol } } sender recipient amount0 amount1 }}CopyToken Data‚ÄãInput the the token contract address to fetch token data. Any token that exists in at least one Uniswap V3 pool can be queried. The output will aggregate data across all v3 pools that include the token.General Token Data‚ÄãThis queries the decimals, symbol, name, pool count, and volume in USD for the UNI token. Reference the full token schema for all possible fields you can query.{ token(id:""0x1f9840a85d5af5bf1d1762f925bdaddc4201f984"") { symbol name decimals volumeUSD poolCount }}CopyToken Daily Aggregated‚ÄãYou can fetch aggregate data about a specific token over a 24-hour period. This query gets 10-days of the 24-hour volume data for the UNI token ordered from oldest to newest.{ tokenDayDatas(first: 10, where: {token: ""0x1f9840a85d5af5bf1d1762f925bdaddc4201f984""}, orderBy: date, orderDirection: asc) { date token {  id  symbol } volumeUSD }}CopyAll Tokens‚ÄãSimilar to retrieving all pools, you can fetch all tokens by using skip. Note: This query will not work in the graph sandbox and more resembles the structure of a query you'd pass to some graphql middleware like Apollo.query tokens($skip: Int!) { tokens(first: 1000, skip: $skip) { id symbol name }}CopyPosition Data‚ÄãGeneral Position Data‚ÄãTo get data about a specific position, input the NFT tokenId. This queries the collected fees for token0 and token1 and current liquidity for the position with tokedId 3. Reference the full position schema to see all fields.{ position(id:3) { id collectedFeesToken0 collectedFeesToken1 liquidity token0 {  id  symbol } token1 {  id  symbol } }}CopyContribute‚ÄãThere are many more queries you can do with the Uniswap v3 subgraph including data related to ticks, mints, positions, and burns. Once again you can reference the full schema here. If you'd like to suggest more example queries to showcase, feel free to drop some suggestions in discord under #dev-chat or contribute your own queries by submitting a pull request to the docs repo.Helpful?PreviousOverviewGlobal DataCurrent Global DataHistorical Global DataPool DataGeneral Pool QueryAll Possible PoolsSkipping First 1000 PoolsCreating a Skip VariableMost Liquid PoolsPool Daily AggregatedSwap DataGeneral Swap DataRecent Swaps Within a PoolToken DataGeneral Token DataToken Daily AggregatedAll TokensPosition DataGeneral Position DataContributeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
471,p.org sdk v3 reference interfaces RemoveLiquidityOptions#deadline,"p.org sdk v3 reference interfaces RemoveLiquidityOptions#deadline.    RemoveLiquidityOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesRemoveLiquidityOptionsHelpful?On this pageRemoveLiquidityOptions@uniswap/v3-sdk / Exports / RemoveLiquidityOptionsInterface: RemoveLiquidityOptionsOptions for producing the calldata to exit a position.Table of contents‚ÄãProperties‚ÄãburnTokencollectOptionsdeadlineliquidityPercentagepermitslippageTolerancetokenIdProperties‚ÄãburnToken‚Äã‚Ä¢ Optional burnToken: booleanWhether the NFT should be burned if the entire position is being exited, by default false.Defined in‚ÄãnonfungiblePositionManager.ts:162collectOptions‚Äã‚Ä¢ collectOptions: Omit<CollectOptions, ""tokenId"">Parameters to be passed on to collectDefined in‚ÄãnonfungiblePositionManager.ts:172deadline‚Äã‚Ä¢ deadline: BigintIshWhen the transaction expires, in epoch seconds.Defined in‚ÄãnonfungiblePositionManager.ts:157liquidityPercentage‚Äã‚Ä¢ liquidityPercentage: PercentThe percentage of position liquidity to exit.Defined in‚ÄãnonfungiblePositionManager.ts:147permit‚Äã‚Ä¢ Optional permit: NFTPermitOptionsThe optional permit of the token ID being exited, in case the exit transaction is being sent by an account that does not own the NFTDefined in‚ÄãnonfungiblePositionManager.ts:167slippageTolerance‚Äã‚Ä¢ slippageTolerance: PercentHow much the pool price is allowed to move.Defined in‚ÄãnonfungiblePositionManager.ts:152tokenId‚Äã‚Ä¢ tokenId: BigintIshThe ID of the token to exitDefined in‚ÄãnonfungiblePositionManager.ts:142Helpful?PreviousQuoteOptionsNextSafeTransferOptionsTable of contentsPropertiesPropertiesburnTokencollectOptionsdeadlineliquidityPercentagepermitslippageTolerancetokenIdDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
472,p.org sdk v3 reference interfaces QuoteOptions,p.org sdk v3 reference interfaces QuoteOptions.    QuoteOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesQuoteOptionsHelpful?On this pageQuoteOptions@uniswap/v3-sdk / Exports / QuoteOptionsInterface: QuoteOptionsOptional arguments to send to the quoter.Table of contents‚ÄãProperties‚ÄãsqrtPriceLimitX96useQuoterV2Properties‚ÄãsqrtPriceLimitX96‚Äã‚Ä¢ Optional sqrtPriceLimitX96: BigintIshThe optional price limit for the trade.Defined in‚Äãquoter.ts:17useQuoterV2‚Äã‚Ä¢ Optional useQuoterV2: booleanThe optional quoter interface to useDefined in‚Äãquoter.ts:22Helpful?PreviousNFTPermitOptionsNextRemoveLiquidityOptionsTable of contentsPropertiesPropertiessqrtPriceLimitX96useQuoterV2DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
473,p.org contracts v3 reference core interfaces IUniswapV3Factory,"p.org contracts v3 reference core interfaces IUniswapV3Factory.    IUniswapV3Factory | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesIERC20MinimalIUniswapV3FactoryIUniswapV3PoolIUniswapV3PoolDeployercallbackPoolLibrariesGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreInterfacesIUniswapV3FactoryHelpful?On this pageIUniswapV3FactoryThe Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol feesFunctions‚Äãowner‚Äã function owner( ) external view returns (address)CopyReturns the current owner of the factoryCan be changed by the current owner via setOwnerReturn Values:‚ÄãTypeDescriptionaddressaddress of the factory ownerfeeAmountTickSpacing‚Äã function feeAmountTickSpacing( uint24 fee ) external view returns (int24)CopyReturns the tick spacing for a given fee amount, if enabled, or 0 if not enabledA fee amount can never be removed, so this value should be hard coded or cached in the calling contextParameters:‚ÄãNameTypeDescriptionfeeuint24The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled feeReturn Values:‚ÄãTypeDescriptionint24tick spacinggetPool‚Äã function getPool( address tokenA, address tokenB, uint24 fee ) external view returns (address pool)CopyReturns the pool address for a given pair of tokens and a fee, or address 0 if it does not existtokenA and tokenB may be passed in either token0/token1 or token1/token0 orderParameters:‚ÄãNameTypeDescriptiontokenAaddressThe contract address of either token0 or token1tokenBaddressThe contract address of the other tokenfeeuint24The fee collected upon every swap in the pool, denominated in hundredths of a bipReturn Values:‚ÄãNameTypeDescriptionpooladdressThe pool addresscreatePool‚Äã function createPool( address tokenA, address tokenB, uint24 fee ) external returns (address pool)CopyCreates a pool for the given two tokens and feetokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.Parameters:‚ÄãNameTypeDescriptiontokenAaddressOne of the two tokens in the desired pooltokenBaddressThe other of the two tokens in the desired poolfeeuint24The desired fee for the poolReturn Values:‚ÄãNameTypeDescriptionpooladdressThe address of the newly created poolsetOwner‚Äã function setOwner( address _owner ) externalCopyUpdates the owner of the factoryMust be called by the current ownerParameters:‚ÄãNameTypeDescription_owneraddressThe new owner of the factoryenableFeeAmount‚Äã function enableFeeAmount( uint24 fee, int24 tickSpacing ) externalCopyEnables a fee amount with the given tickSpacingFee amounts may never be removed once enabledParameters:‚ÄãNameTypeDescriptionfeeuint24The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)tickSpacingint24The spacing between ticks to be enforced for all pools created with the given fee amountEvents‚ÄãOwnerChanged‚Äã event OwnerChanged( address oldOwner, address newOwner )CopyEmitted when the owner of the factory is changedParameters:‚ÄãNameTypeDescriptionoldOwneraddressThe owner before the owner was changednewOwneraddressThe owner after the owner was changedPoolCreated‚Äã event PoolCreated( address token0, address token1, uint24 fee, int24 tickSpacing, address pool )CopyEmitted when a pool is createdParameters:‚ÄãNameTypeDescriptiontoken0addressThe first token of the pool by address sort ordertoken1addressThe second token of the pool by address sort orderfeeuint24The fee collected upon every swap in the pool, denominated in hundredths of a biptickSpacingint24The minimum number of ticks between initialized tickspooladdressThe address of the created poolFeeAmountEnabled‚Äã event FeeAmountEnabled( uint24 fee, int24 tickSpacing )CopyEmitted when a new fee amount is enabled for pool creation via the factoryParameters:‚ÄãNameTypeDescriptionfeeuint24The enabled fee, denominated in hundredths of a biptickSpacingint24The minimum number of ticks between initialized ticks for pools created with the given feeEdit this pageHelpful?PreviousIERC20MinimalNextIUniswapV3PoolFunctionsownerfeeAmountTickSpacinggetPoolcreatePoolsetOwnerenableFeeAmountEventsOwnerChangedPoolCreatedFeeAmountEnabledDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
474,p.org concepts protocol oracle,"p.org concepts protocol oracle.    Oracle | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchWhat Is Uniswap?The Uniswap ProtocolProtocol ConceptsConcentrated LiquidityFeesOracleRange OrdersSwapsToken Integration IssuesGovernanceResearchResourcesGlossaryüè†Protocol ConceptsOracleHelpful?On this pageOraclenoteUnfamiliar with the concept of an oracle? Check out the Ethereum Foundation's oracle overview first.All Uniswap v3 pools can serve as oracles, offering access to historical price and liquidity data. This capability unlocks a wide range of on-chain use cases.Historical data is stored as an array of observations. At first, each pool tracks only a single observation, overwriting it as blocks elapse. This limits how far into the past users may access data. However, any party willing to pay the transaction fees may increase the number of tracked observations (up to a maximum of 65535), expanding the period of data availability to ~9 days or more.Storing price and liquidity history directly in the pool contract substantially reduces the potential for logical errors on the part of the calling contract, and reduces integration costs by eliminating the need to store historical values. Additionally, the v3 oracle's considerable maximum length makes oracle price manipulation significantly more difficult, as the calling contract may cheaply construct a time-weighted average over any arbitrary range inside of (or fully encompassing) the length of the oracle array.Observations‚ÄãObservations take the following form:struct Observation { // the block timestamp of the observation uint32 blockTimestamp; // the tick accumulator, i.e. tick * time elapsed since the pool was first initialized int56 tickCumulative; // the seconds per liquidity, i.e. seconds elapsed / max(1, liquidity) since the pool was first initialized uint160 secondsPerLiquidityCumulativeX128; // whether or not the observation is initialized bool initialized;}CopyObservations may be retrieved via the observations method on v3 pools. However, this is not the recommended way to consume oracle data. Instead, prefer observe:function observe(uint32[] calldata secondsAgos) external view returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);CopyEach time observe is called, the caller must specify an array containing any number of seconds ago, denoting the times to return observations from. Note that each of the given times must be more recent (or as old as) the oldest stored observation. Note: if the times don't correspond exactly to a block in which an observation was written, a counterfactual observation will be constructed, removing the need for the caller to interpolate manually. This is one of the primary reasons to use observe over observations.Note that because the oracle is only updated at most once every block, calling observe with a secondsAgo value of 0 will return the most recently written observation, which can only be as recent as the beginning of the current block (or older).Tick Accumulator‚ÄãThe tick accumulator stores the cumulative sum of the active tick at the time of the observation. The tick accumulator value increases monotonically and grows by the value of the current tick - per second.To derive the arithmetic mean tick over an interval, the caller needs to retrieve two observations, one after the other, take the delta of the two values, and divide by the time elapsed between them. Calculating a TWAP from the tick accumulator is also covered in the whitepaper. Note that using an arithmetic mean tick to derive a price corresponds to a geometric mean price.See OracleLibrary for an example of how to use the tick accumulator.Liquidity Accumulator‚ÄãThe liquidity accumulator stores the value of seconds / in-range liquidity at the time of the observation. The liquidity accumulator value increases monotonically and grows by the value of seconds / in-range liquidity - per second.To derive the harmonic mean liquidity over an interval, the caller needs to retrieve two observations, one after the other, take the delta of the two values, then divide the time elapsed by this value. Calculating TWAL is addressed in finer detail in the whitepaper.noteThe in-range liquidity accumulator should be used with care. Because the current tick and the current in-range liquidity can be entirely uncorrelated, there are scenarios in which taking the arithmetic mean tick and the harmonic mean liquidity over the same interval in a pool can inaccurately characterize this pool relative to another. For example, if the current tick on pool A is 0 for 5 seconds, and 100 for 5 seconds, the tick accumulator will be 50. If over this same interval, the in-range liquidity was 5000 and 50, the harmonic mean liquidity will be ~99. Compare this to pool B (composed of the same assets) where the tick was 50 and the in-range liquidity was ~99 for 10 seconds. The accumulator values will be identical, but the underlying behavior is of course quite different.Deriving Price From A Tick‚ÄãWhen we use ""active tick"" or otherwise to refer to the current tick of a pool, we mean the lower tick boundary that is closest to the current price.When a pool is created, each token is assigned to either token0 or token1 based on the contract address of the tokens in the pair. Whether or not a token is token0 or token1 is meaningless; it is only used to maintain a fixed assignment for the purpose of relative valuation and general logic in the pool contract.Deriving an asset price from the current tick is achievable due to the fixed expression across the pool contract of token0 in terms of token1.An example of finding the price of WETH in a WETH / USDC pool, where WETH is token0 and USDC is token1:You have an oracle reading that shows a return of tickCumulative as [70_000, 1_070_000], with an elapsed time between the observations of 10 seconds.We can derive the average tick over this interval by taking the difference in accumulator values (1_070_000 - 70_000 = 1_000_000), and dividing by the time elapsed (1_000_000 / 10 = 100_000).With a tick reading of 100_000, we can find the value of token1 (USDC) in terms of token0 (WETH) by using the current tick as i in the formula p(i) = 1.0001**i (see 6.1 in the whitepaper).1.0001**100_000 ‚âÖ 22015.5 USDC / WETHTicks are signed integers and can be expressed as a negative number, so for any circumstances where token0 is of a lower value than token1, a negative tick value will be returned by tickCumulative and a relative value of < 0 will be returned by a calculation of token0 in terms of token1.Oracles Integrations on Layer 2 Rollups‚ÄãOptimism‚ÄãOn Optimism, every transaction is confirmed as an individual block. The block.timestamp of these blocks, however, reflect the block.timestamp of the last L1 block ingested by the Sequencer. For this reason, Uniswap pools on Optimism are not suitable for providing oracle prices, as this high-latency block.timestamp update process makes the oracle much less costly to manipulate. In the future, it's possible that the Optimism block.timestamp will have much higher granularity (with a small trust assumption in the Sequencer), or that forced inclusion transactions will improve oracle security. For more information on these potential upcoming changes, please see the Optimistic Specs repo. For the time being, usage of the oracle feature on Optimism should be avoided.Helpful?PreviousFeesNextRange OrdersObservationsTick AccumulatorLiquidity AccumulatorDeriving Price From A TickOracles Integrations on Layer 2 RollupsOptimismDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
475,p.org sdk v3 reference classes SwapRouter,"p.org sdk v3 reference classes SwapRouter.    SwapRouter | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesSwapRouterHelpful?On this pageSwapRouter@uniswap/v3-sdk / Exports / SwapRouterClass: SwapRouterRepresents the Uniswap V3 SwapRouter, and has static methods for helping execute trades.Table of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãswapCallParametersConstructors‚Äãconstructor‚Äã‚Ä¢ Private new SwapRouter()Cannot be constructed.Defined in‚ÄãswapRouter.ts:57Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚ÄãswapRouter.ts:52Methods‚ÄãswapCallParameters‚Äã‚ñ∏ Static swapCallParameters(trades, options): MethodParametersProduces the on-chain method name to call and the hex encoded parameters to pass as arguments for a given trade.Parameters‚ÄãNameTypeDescriptiontradesTrade<Currency, Currency, TradeType> | Trade<Currency, Currency, TradeType>[]-optionsSwapOptionsoptions for the call parametersReturns‚ÄãMethodParametersDefined in‚ÄãswapRouter.ts:64Helpful?PreviousSwapQuoterNextTickTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsswapCallParametersDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
476,p.org sdk v3 reference classes NonfungiblePositionManager#removecallparameters,"p.org sdk v3 reference classes NonfungiblePositionManager#removecallparameters.    NonfungiblePositionManager | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesNonfungiblePositionManagerHelpful?On this pageNonfungiblePositionManager@uniswap/v3-sdk / Exports / NonfungiblePositionManagerClass: NonfungiblePositionManagerTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãaddCallParameterscollectCallParameterscreateCallParametersencodeCollectencodeCreateremoveCallParameterssafeTransferFromParametersConstructors‚Äãconstructor‚Äã‚Ä¢ Private new NonfungiblePositionManager()Cannot be constructed.Defined in‚ÄãnonfungiblePositionManager.ts:181Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚ÄãnonfungiblePositionManager.ts:176Methods‚ÄãaddCallParameters‚Äã‚ñ∏ Static addCallParameters(position, options): MethodParametersParameters‚ÄãNameTypepositionPositionoptionsAddLiquidityOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:199collectCallParameters‚Äã‚ñ∏ Static collectCallParameters(options): MethodParametersParameters‚ÄãNameTypeoptionsCollectOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:326createCallParameters‚Äã‚ñ∏ Static createCallParameters(pool): MethodParametersParameters‚ÄãNameTypepoolPoolReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:192encodeCollect‚Äã‚ñ∏ Static Private encodeCollect(options): string[]Parameters‚ÄãNameTypeoptionsCollectOptionsReturns‚Äãstring[]Defined in‚ÄãnonfungiblePositionManager.ts:286encodeCreate‚Äã‚ñ∏ Static Private encodeCreate(pool): stringParameters‚ÄãNameTypepoolPoolReturns‚ÄãstringDefined in‚ÄãnonfungiblePositionManager.ts:183removeCallParameters‚Äã‚ñ∏ Static removeCallParameters(position, options): MethodParametersProduces the calldata for completely or partially exiting a positionParameters‚ÄãNameTypeDescriptionpositionPositionThe position to exitoptionsRemoveLiquidityOptionsAdditional information necessary for generating the calldataReturns‚ÄãMethodParametersThe call parametersDefined in‚ÄãnonfungiblePositionManager.ts:341safeTransferFromParameters‚Äã‚ñ∏ Static safeTransferFromParameters(options): MethodParametersParameters‚ÄãNameTypeoptionsSafeTransferOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:416Helpful?PreviousNoTickDataProviderNextPaymentsTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsaddCallParameterscollectCallParameterscreateCallParametersencodeCollectencodeCreateremoveCallParameterssafeTransferFromParametersDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
477,p.org sdk v3 reference interfaces StandardPermitArguments#v,p.org sdk v3 reference interfaces StandardPermitArguments#v.    StandardPermitArguments | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesStandardPermitArgumentsHelpful?On this pageStandardPermitArguments@uniswap/v3-sdk / Exports / StandardPermitArgumentsInterface: StandardPermitArgumentsTable of contents‚ÄãProperties‚ÄãamountdeadlinersvProperties‚Äãamount‚Äã‚Ä¢ amount: BigintIshDefined in‚ÄãselfPermit.ts:10deadline‚Äã‚Ä¢ deadline: BigintIshDefined in‚ÄãselfPermit.ts:11r‚Äã‚Ä¢ r: stringDefined in‚ÄãselfPermit.ts:8s‚Äã‚Ä¢ s: stringDefined in‚ÄãselfPermit.ts:9v‚Äã‚Ä¢ v: 0 | 1 | 27 | 28Defined in‚ÄãselfPermit.ts:7Helpful?PreviousSafeTransferOptionsNextSwapOptionsTable of contentsPropertiesPropertiesamountdeadlinersvDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
478,p.org sdk v3 reference interfaces MintSpecificOptions#recipient,p.org sdk v3 reference interfaces MintSpecificOptions#recipient.    MintSpecificOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesMintSpecificOptionsHelpful?On this pageMintSpecificOptions@uniswap/v3-sdk / Exports / MintSpecificOptionsInterface: MintSpecificOptionsTable of contents‚ÄãProperties‚ÄãcreatePoolrecipientProperties‚ÄãcreatePool‚Äã‚Ä¢ Optional createPool: booleanCreates pool if not initialized before mint.Defined in‚ÄãnonfungiblePositionManager.ts:34recipient‚Äã‚Ä¢ recipient: stringThe account that should receive the minted NFT.Defined in‚ÄãnonfungiblePositionManager.ts:29Helpful?PreviousMethodParametersNextNFTPermitOptionsTable of contentsPropertiesPropertiescreatePoolrecipientDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
479,p.org sdk v3 reference classes Multicall,p.org sdk v3 reference classes Multicall.    Multicall | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesMulticallHelpful?On this pageMulticall@uniswap/v3-sdk / Exports / MulticallClass: MulticallTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãencodeMulticallConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Multicall()Cannot be constructed.Defined in‚Äãmulticall.ts:10Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚Äãmulticall.ts:5Methods‚ÄãencodeMulticall‚Äã‚ñ∏ Static encodeMulticall(calldatas): stringParameters‚ÄãNameTypecalldatasstring | string[]Returns‚ÄãstringDefined in‚Äãmulticall.ts:12Helpful?PreviousLiquidityMathNextNoTickDataProviderTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsencodeMulticallDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
480,p.org sdk v3 reference classes TickList#nextinitializedtickwithinoneword,"p.org sdk v3 reference classes TickList#nextinitializedtickwithinoneword.    TickList | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickListHelpful?On this pageTickList@uniswap/v3-sdk / Exports / TickListClass: TickListUtility methods for interacting with sorted lists of ticksTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãbinarySearchgetTickisAtOrAboveLargestisBelowSmallestnextInitializedTicknextInitializedTickWithinOneWordvalidateListConstructors‚Äãconstructor‚Äã‚Ä¢ Private new TickList()Cannot be constructedDefined in‚Äãutils/tickList.ts:18Methods‚ÄãbinarySearch‚Äã‚ñ∏ Static Private binarySearch(ticks, tick): numberFinds the largest tick in the list of ticks that is less than or equal to tickParameters‚ÄãNameTypeDescriptionticksreadonly Tick[]list of ticksticknumbertick to find the largest tick that is less than or equal to tickReturns‚ÄãnumberDefined in‚Äãutils/tickList.ts:62getTick‚Äã‚ñ∏ Static getTick(ticks, index): TickParameters‚ÄãNameTypeticksreadonly Tick[]indexnumberReturns‚ÄãTickDefined in‚Äãutils/tickList.ts:50isAtOrAboveLargest‚Äã‚ñ∏ Static isAtOrAboveLargest(ticks, tick): booleanParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberReturns‚ÄãbooleanDefined in‚Äãutils/tickList.ts:45isBelowSmallest‚Äã‚ñ∏ Static isBelowSmallest(ticks, tick): booleanParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberReturns‚ÄãbooleanDefined in‚Äãutils/tickList.ts:40nextInitializedTick‚Äã‚ñ∏ Static nextInitializedTick(ticks, tick, lte): TickParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberltebooleanReturns‚ÄãTickDefined in‚Äãutils/tickList.ts:83nextInitializedTickWithinOneWord‚Äã‚ñ∏ Static nextInitializedTickWithinOneWord(ticks, tick, lte, tickSpacing): [number, boolean]Parameters‚ÄãNameTypeticksreadonly Tick[]ticknumberltebooleantickSpacingnumberReturns‚Äã[number, boolean]Defined in‚Äãutils/tickList.ts:101validateList‚Äã‚ñ∏ Static validateList(ticks, tickSpacing): voidParameters‚ÄãNameTypeticksTick[]tickSpacingnumberReturns‚ÄãvoidDefined in‚Äãutils/tickList.ts:20Helpful?PreviousTickLibraryNextTickListDataProviderTable of contentsConstructorsMethodsConstructorsconstructorMethodsbinarySearchgetTickisAtOrAboveLargestisBelowSmallestnextInitializedTicknextInitializedTickWithinOneWordvalidateListDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
481,p.org sdk web3 react overview,"p.org sdk web3 react overview.    Overview | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactOverviewGuidesConnecting to WalletsSupported ConnectorsSwitching ChainsCore SDKV2 SDKV1 SDKüè†web3-reactOverviewHelpful?On this pageweb3-reactWelcome to web3-react!web3-react provides abstractions to assist you with connecting your dApp to web3 connectors and exposes methods to interact with those connections. It currently supports connecting to the following wallets:NetworkInjected wallets (eg MetaMask)Gnosis safeCoinbase walletWalletConnect walletTo begin, we recommend looking at our guides which include runnable examples and walkthroughs of core usages. These guides will help you better understand how to use web3-react and integrate it into your application.infoThis guide uses web3-react version 8, which is a beta version.Installation‚Äãweb3-react consists of many packages, each providing different functionalities. The core package exposes the methods used to interact with web3 connectors, the types package declares useful types, while the others are installed to enable interactions with different connectors.To interact with web3-react we recommend installing though npm:npm install --save @web3-react/coreCopyor yarn:yarn add @web3-react/coreCopyDeveloper Links‚Äãweb3-react on Github Helpful?PreviousAPI V1 Reference (Deprecated)NextConnecting to WalletsInstallationDeveloper LinksDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
482,p.org sdk core reference classes Price#denominator,"p.org sdk core reference classes Price#denominator.    Price | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPriceHelpful?On this pagePrice@uniswap/sdk-core / Exports / PriceClass: Price<TBase, TQuote>Type parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyHierarchy‚ÄãFraction‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessors‚ÄãadjustedForDecimalsasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Price<TBase, TQuote>(...args)Construct a price, either with the base and quote currency amount, or theType parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyParameters‚ÄãNameType...args[TBase, TQuote, BigintIsh, BigintIsh] | [{ baseAmount: CurrencyAmount<TBase> ; quoteAmount: CurrencyAmount<TQuote> }]Overrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/price.ts:18Properties‚ÄãbaseCurrency‚Äã‚Ä¢ Readonly baseCurrency: TBaseDefined in‚Äãentities/fractions/price.ts:10denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25quoteCurrency‚Äã‚Ä¢ Readonly quoteCurrency: TQuoteDefined in‚Äãentities/fractions/price.ts:11scalar‚Äã‚Ä¢ Readonly scalar: FractionDefined in‚Äãentities/fractions/price.ts:12Accessors‚ÄãadjustedForDecimals‚Äã‚Ä¢ Private get adjustedForDecimals(): FractionGet the value scaled by decimals for formattingReturns‚ÄãFractionDefined in‚Äãentities/fractions/price.ts:77asFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.addDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.divideDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): Price<TQuote, TBase>Flip the price, switching the base and quote currencyReturns‚ÄãPrice<TQuote, TBase>Overrides‚ÄãFraction.invertDefined in‚Äãentities/fractions/price.ts:49lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply<TOtherQuote>(other): Price<TBase, TOtherQuote>Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currencyType parameters‚ÄãNameTypeTOtherQuoteextends CurrencyParameters‚ÄãNameTypeDescriptionotherPrice<TQuote, TOtherQuote>the other priceReturns‚ÄãPrice<TBase, TOtherQuote>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/price.ts:57quote‚Äã‚ñ∏ quote(currencyAmount): CurrencyAmount<TQuote>Return the amount of quote currency corresponding to a given amount of the base currencyParameters‚ÄãNameTypeDescriptioncurrencyAmountCurrencyAmount<TBase>the amount of base currency to quote against the priceReturns‚ÄãCurrencyAmount<TQuote>Defined in‚Äãentities/fractions/price.ts:67subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.subtractDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber4format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/price.ts:85toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/price.ts:81Helpful?PreviousPercentNextTokenType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessorsadjustedForDecimalsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
483,p.org concepts protocol swaps,"p.org concepts protocol swaps.    Swaps | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchWhat Is Uniswap?The Uniswap ProtocolProtocol ConceptsConcentrated LiquidityFeesOracleRange OrdersSwapsToken Integration IssuesGovernanceResearchResourcesGlossaryüè†Protocol ConceptsSwapsHelpful?On this pageSwapsIntroduction‚ÄãSwaps are the most common way of interacting with the Uniswap protocol. For end-users, swapping is straightforward: a user selects an ERC-20 token that they own and a token they would like to trade it for. Executing a swap sells the currently owned tokens for the proportional1 amount of the tokens desired, minus the swap fee, which is awarded to liquidity providers2. Swapping with the Uniswap protocol is a permissionless process.note: Using web interfaces (websites) to swap via the Uniswap protocol can introduce additional permission structures, and may result in different execution behavior compared to using the Uniswap protocol directly. To learn more about the differences between the protocol and a web interface, see What is Uniswap.Swaps using the Uniswap protocol are different from traditional order book trades in that they are not executed against discrete orders on a first-in-first-out basis ‚Äî rather, swaps execute against a passive pool of liquidity, with liquidity providers earning fees proportional to their capital committedPrice Impact‚ÄãIn a traditional order-book market, a sizeable market-buy order may deplete the available liquidity of a prior limit-sell and continue to execute against a subsequent limit-sell order at a higher price. The result is the final execution price of the order is somewhere in between the two limit-sell prices against which the order was filled.Price impact affects the execution price of a swap similarly but is a result of a different dynamic. When using an automated market maker, the relative value of one asset in terms of the other continuously shifts during the execution of a swap, leaving the final execution price somewhere between where the relative price started - and ended.This dynamic affects every swap using the Uniswap protocol, as it is an inextricable part of AMM design.As the amount of liquidity available at different price points can vary, the price impact for a given swap size will change relative to the amount of liquidity available at any given point in price space. The greater the liquidity available at a given price, the lower the price impact for a given swap size. The lesser the liquidity available, the higher the price impact.Approximate3 price impact is anticipated in real-time via the Uniswap interface, and warnings appear if unusually high price impact will occur during a swap. Anyone executing a swap will have the ability to assess the circumstances of price impact when needed.Slippage‚ÄãThe other relevant detail to consider when approaching swaps with the Uniswap protocol is slippage. Slippage is the term we use to describe alterations to a given price that could occur while a submitted transaction is pending.When transactions are submitted to Ethereum, their order of execution is established by the amount of ""gas"" offered as a fee for executing each transaction. The higher the fee offered, the faster the transaction is executed. The transactions with a lower gas fee will remain pending for an indeterminate amount of time. During this time, the price environment in which the transaction will eventually be executed will change, as other swaps will be taking place.Slippage tolerances establish a margin of change acceptable to the user beyond price impact. As long as the execution price is within the slippage range, e.g., %1, the transaction will be executed. If the execution price ends up outside of the accepted slippage range, the transaction will fail, and the swap will not occur.A comparable situation in a traditional market would be a market-buy order executed after a delay. One can know the expected price of a market-buy order when submitted, but much can change in the time between submission and execution.Safety Checks‚ÄãPrice impact and slippage can both change while a transaction is pending, which is why we have built numerous safety checks into the Uniswap protocol to protect end-users from drastic changes in the execution environment of their swap. Some of the most commonly encountered safety checks:Expired : A transaction error that occurs if a swap is pending longer than a predetermined deadline. The deadline is a point in time after which the swap will be canceled to protect against unusually long pending periods and the changes in price that typically accompany the passage of time.INSUFFICIENT_OUTPUT_AMOUNT : When a user submits a swap, the Uniswap interface will send an estimate of how much of the purchased token the user should expect to receive. If the anticipated output amount of a swap does not match the estimate within a certain margin of error (the slippage tolerance), the swap will be canceled. This attempts to protect the user from any drastic and unfavorable price changes while their transaction is pending.Proportional in this instance takes into account many factors, including the relative price of one token in terms of the other, slippage, price impact, and other factors related to the open and adversarial nature of Ethereum.‚Ü©For information about liquidity provision, see the liquidity user guide‚Ü©The Uniswap interface informs the user about the circumstances of their swap, but it is not guaranteed.‚Ü©Helpful?PreviousRange OrdersNextToken Integration IssuesIntroductionPrice ImpactSlippageSafety ChecksDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
484,p.org sdk v3 reference interfaces RemoveLiquidityOptions,"p.org sdk v3 reference interfaces RemoveLiquidityOptions.    RemoveLiquidityOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesRemoveLiquidityOptionsHelpful?On this pageRemoveLiquidityOptions@uniswap/v3-sdk / Exports / RemoveLiquidityOptionsInterface: RemoveLiquidityOptionsOptions for producing the calldata to exit a position.Table of contents‚ÄãProperties‚ÄãburnTokencollectOptionsdeadlineliquidityPercentagepermitslippageTolerancetokenIdProperties‚ÄãburnToken‚Äã‚Ä¢ Optional burnToken: booleanWhether the NFT should be burned if the entire position is being exited, by default false.Defined in‚ÄãnonfungiblePositionManager.ts:162collectOptions‚Äã‚Ä¢ collectOptions: Omit<CollectOptions, ""tokenId"">Parameters to be passed on to collectDefined in‚ÄãnonfungiblePositionManager.ts:172deadline‚Äã‚Ä¢ deadline: BigintIshWhen the transaction expires, in epoch seconds.Defined in‚ÄãnonfungiblePositionManager.ts:157liquidityPercentage‚Äã‚Ä¢ liquidityPercentage: PercentThe percentage of position liquidity to exit.Defined in‚ÄãnonfungiblePositionManager.ts:147permit‚Äã‚Ä¢ Optional permit: NFTPermitOptionsThe optional permit of the token ID being exited, in case the exit transaction is being sent by an account that does not own the NFTDefined in‚ÄãnonfungiblePositionManager.ts:167slippageTolerance‚Äã‚Ä¢ slippageTolerance: PercentHow much the pool price is allowed to move.Defined in‚ÄãnonfungiblePositionManager.ts:152tokenId‚Äã‚Ä¢ tokenId: BigintIshThe ID of the token to exitDefined in‚ÄãnonfungiblePositionManager.ts:142Helpful?PreviousQuoteOptionsNextSafeTransferOptionsTable of contentsPropertiesPropertiesburnTokencollectOptionsdeadlineliquidityPercentagepermitslippageTolerancetokenIdDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
485,p.org sdk v3 reference interfaces CommonAddLiquidityOptions#slippagetolerance,"p.org sdk v3 reference interfaces CommonAddLiquidityOptions#slippagetolerance.    CommonAddLiquidityOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesCommonAddLiquidityOptionsHelpful?On this pageCommonAddLiquidityOptions@uniswap/v3-sdk / Exports / CommonAddLiquidityOptionsInterface: CommonAddLiquidityOptionsOptions for producing the calldata to add liquidity.Table of contents‚ÄãProperties‚ÄãdeadlineslippageTolerancetoken0Permittoken1PermituseNativeProperties‚Äãdeadline‚Äã‚Ä¢ deadline: BigintIshWhen the transaction expires, in epoch seconds.Defined in‚ÄãnonfungiblePositionManager.ts:56slippageTolerance‚Äã‚Ä¢ slippageTolerance: PercentHow much the pool price is allowed to move.Defined in‚ÄãnonfungiblePositionManager.ts:51token0Permit‚Äã‚Ä¢ Optional token0Permit: PermitOptionsThe optional permit parameters for spending token0Defined in‚ÄãnonfungiblePositionManager.ts:66token1Permit‚Äã‚Ä¢ Optional token1Permit: PermitOptionsThe optional permit parameters for spending token1Defined in‚ÄãnonfungiblePositionManager.ts:71useNative‚Äã‚Ä¢ Optional useNative: NativeCurrencyWhether to spend ether. If true, one of the pool tokens must be WETH, by default falseDefined in‚ÄãnonfungiblePositionManager.ts:61Helpful?PreviousCollectOptionsNextFeeOptionsTable of contentsPropertiesPropertiesdeadlineslippageTolerancetoken0Permittoken1PermituseNativeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
486,p.org contracts v3 reference core UniswapV3Pool#increaseobservationcardinalitynext,"p.org contracts v3 reference core UniswapV3Pool#increaseobservationcardinalitynext.    UniswapV3Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesLibrariesGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreUniswapV3PoolHelpful?On this pageUniswapV3PoolFunctions‚Äã_blockTimestamp‚Äã function _blockTimestamp( ) internal view virtual returns (uint32)CopyReturns the block timestamp truncated to 32 bits, i.e. mod 2**32. This method is overridden in tests.snapshotCumulativesInside‚Äã function snapshotCumulativesInside( int24 tickLower, int24 tickUpper ) external view override noDelegateCall returns (int56 tickCumulativeInside, uint160 secondsPerLiquidityInsideX128, uint32 secondsInside)CopyReturns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick rangeSnapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.Parameters:‚ÄãNameTypeDescriptiontickLowerint24The lower tick of the rangetickUpperint24The upper tick of the rangeReturn Values:‚ÄãNameTypeDescriptiontickCumulativeInsideint56The snapshot of the tick accumulator for the rangesecondsPerLiquidityInsideX128uint160The snapshot of seconds per liquidity for the rangesecondsInsideuint32The snapshot of seconds per liquidity for the rangeobserve‚Äã function observe( uint32[] secondsAgos ) external view override noDelegateCall returns (int56[] tickCumulatives, uint160[] secondsPerLiquidityCumulativeX128s)CopyReturns the cumulative tick and liquidity as of each timestamp secondsAgo from the current block timestampTo get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0]. The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.Parameters:‚ÄãNameTypeDescriptionsecondsAgosuint32[]From how long ago each cumulative tick and liquidity value should be returnedReturn Values:‚ÄãNameTypeDescriptiontickCumulativesint56[]Cumulative tick values as of each secondsAgos from the current block timestampsecondsPerLiquidityCumulativeX128suint160[]Cumulative seconds per liquidity-in-range value as of each secondsAgos from the current blocktimestampincreaseObservationCardinalityNext‚Äã function increaseObservationCardinalityNext( uint16 observationCardinalityNext ) external override lock noDelegateCallCopyIncrease the maximum number of price and liquidity observations that this pool will storeThis method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.Parameters:‚ÄãNameTypeDescriptionobservationCardinalityNextuint16The desired minimum number of observations for the pool to storeinitialize‚Äã function initialize( uint160 sqrtPriceX96 ) external overrideCopySets the initial price for the poolnot locked because it initializes unlockedParameters:‚ÄãNameTypeDescriptionsqrtPriceX96uint160the initial sqrt price of the pool as a Q64.96mint‚Äã function mint( address recipient, int24 tickLower, int24 tickUpper, uint128 amount, bytes data ) external override lock returns (uint256 amount0, uint256 amount1)CopyAdds liquidity for the given recipient/tickLower/tickUpper positionnoDelegateCall is applied indirectly via _modifyPositionParameters:‚ÄãNameTypeDescriptionrecipientaddressThe address for which the liquidity will be createdtickLowerint24The lower tick of the position in which to add liquiditytickUpperint24The upper tick of the position in which to add liquidityamountuint128The amount of liquidity to mintdatabytesAny data that should be passed through to the callbackReturn Values:‚ÄãNameTypeDescriptionamount0uint256The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callbackamount1uint256The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callbackcollect‚Äã function collect( address recipient, int24 tickLower, int24 tickUpper, uint128 amount0Requested, uint128 amount1Requested ) external override lock returns (uint128 amount0, uint128 amount1)CopyCollects tokens owed to a positionDoes not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.Parameters:‚ÄãNameTypeDescriptionrecipientaddressThe address which should receive the fees collectedtickLowerint24The lower tick of the position for which to collect feestickUpperint24The upper tick of the position for which to collect feesamount0Requesteduint128How much token0 should be withdrawn from the fees owedamount1Requesteduint128How much token1 should be withdrawn from the fees owedReturn Values:‚ÄãNameTypeDescriptionamount0uint128The amount of fees collected in token0amount1uint128The amount of fees collected in token1burn‚Äã function burn( int24 tickLower, int24 tickUpper, uint128 amount ) external override lock returns (uint256 amount0, uint256 amount1)CopyBurn liquidity from the sender and account tokens owed for the liquidity to the positionnoDelegateCall is applied indirectly via _modifyPositionParameters:‚ÄãNameTypeDescriptiontickLowerint24The lower tick of the position for which to burn liquiditytickUpperint24The upper tick of the position for which to burn liquidityamountuint128How much liquidity to burnReturn Values:‚ÄãNameTypeDescriptionamount0uint256The amount of token0 sent to the recipientamount1uint256The amount of token1 sent to the recipientswap‚Äã function swap( address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data ) external override noDelegateCall returns (int256 amount0, int256 amount1)CopySwap token0 for token1, or token1 for token0The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallbackParameters:‚ÄãNameTypeDescriptionrecipientaddressThe address to receive the output of the swapzeroForOneboolThe direction of the swap, true for token0 to token1, false for token1 to token0amountSpecifiedint256The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96uint160The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapdatabytesAny data to be passed through to the callbackReturn Values:‚ÄãNameTypeDescriptionamount0int256The delta of the balance of token0 of the pool, exact when negative, minimum when positiveamount1int256The delta of the balance of token1 of the pool, exact when negative, minimum when positiveflash‚Äã function flash( address recipient, uint256 amount0, uint256 amount1, bytes data ) external override lock noDelegateCallCopyReceive token0 and/or token1 and pay it back, plus a fee, in the callbackThe caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callbackParameters:‚ÄãNameTypeDescriptionrecipientaddressThe address which will receive the token0 and token1 amountsamount0uint256The amount of token0 to sendamount1uint256The amount of token1 to senddatabytesAny data to be passed through to the callbacksetFeeProtocol‚Äã function setFeeProtocol( uint8 feeProtocol0, uint8 feeProtocol1 ) external override lock onlyFactoryOwnerCopySet the denominator of the protocol's % share of the feesParameters:‚ÄãNameTypeDescriptionfeeProtocol0uint8new protocol fee for token0 of the poolfeeProtocol1uint8new protocol fee for token1 of the poolcollectProtocol‚Äã function collectProtocol( address recipient, uint128 amount0Requested, uint128 amount1Requested ) external override lock onlyFactoryOwner returns (uint128 amount0, uint128 amount1)CopyCollect the protocol fee accrued to the poolParameters:‚ÄãNameTypeDescriptionrecipientaddressThe address to which collected protocol fees should be sentamount0Requesteduint128The maximum amount of token0 to send, can be 0 to collect fees in only token1amount1Requesteduint128The maximum amount of token1 to send, can be 0 to collect fees in only token0Return Values:‚ÄãNameTypeDescriptionamount0uint128The protocol fee collected in token0amount1uint128The protocol fee collected in token1Edit this pageHelpful?PreviousUniswapV3FactoryNextUniswapV3PoolDeployerFunctions_blockTimestampsnapshotCumulativesInsideobserveincreaseObservationCardinalityNextinitializemintcollectburnswapflashsetFeeProtocolcollectProtocolDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
487,p.org contracts v2 guides smart contract integration quick start,"p.org contracts v2 guides smart contract integration quick start.    Smart Contract Quick start | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationSmart Contract Quick startImplement a SwapProviding LiquidityBuilding an OracleFlash SwapsPair AddressesSupporting meta transactionsTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolGuidesSmart Contract IntegrationSmart Contract Quick startHelpful?On this pageSmart Contract Quick startDeveloping smart contracts for Ethereum involves a bevy of off-chain tools used for producing and testing bytecode that runs on the Ethereum Virtual Machine (EVM). Some tools also include workflows for deploying this bytecode to the Ethereum network and testnets. There are many options for these tools. This guide walks you through writing and testing a simple smart contract that interacts with the Uniswap Protocol using one specific set of tools (truffle + npm + mocha).Requirements‚ÄãTo follow this guide, you must have the following installed:nodejs >= v12.x & npm >= 6.xBootstrapping a project‚ÄãYou can start from scratch, but it's easier to use a tool like truffle to bootstrap an empty project. Create an empty directory and run npx truffle init inside that directory to unbox the default Truffle box.mkdir democd demonpx truffle initCopySetting up npm‚ÄãIn order to reference the Uniswap V2 contracts, you should use the npm artifacts we deploy containing the core and periphery smart contracts and interfaces. To add npm dependencies, we first initialize the npm package. We can run npm init in the same directory to create a package.json file. You can accept all the defaults and change it later.npm initCopyAdding dependencies‚ÄãNow that we have an npm package, we can add our dependencies. Let's add both the @uniswap/v2-core and @uniswap/v2-periphery packages.npm i --save @uniswap/v2-corenpm i --save @uniswap/v2-peripheryCopyIf you check the node_modules/@uniswap directory, you can now find the Uniswap V2 contracts.moody@MacBook-Pro ~/I/u/demo> ls node_modules/@uniswap/v2-core/contractsUniswapV2ERC20.sol UniswapV2Pair.sol  libraries/UniswapV2Factory.sol interfaces/   test/moody@MacBook-Pro ~/I/u/demo> ls node_modules/@uniswap/v2-periphery/contracts/UniswapV2Migrator.sol examples/    test/UniswapV2Router01.sol interfaces/UniswapV2Router02.sol libraries/CopyThese packages include both the smart contract source code and the build artifacts.Writing our contract‚ÄãWe can now get started writing our example contract. For writing Solidity, we recommend IntelliJ or VSCode with a solidity plugin, but you can use any text editor. Let's write a contract that returns the value of some amount of liquidity shares for a given token pair. First create a couple of files:mkdir contracts/interfacestouch contracts/interfaces/ILiquidityValueCalculator.soltouch contracts/LiquidityValueCalculator.solCopyThis will be the interface of the contract we implement. Put it in contracts/interfaces/ILiquidityValueCalculator.sol.pragma solidity ^0.6.6;interface ILiquidityValueCalculator { function computeLiquidityShareValue(uint liquidity, address tokenA, address tokenB) external returns (uint tokenAAmount, uint tokenBAmount);}CopyNow let's start with the constructor. You need to know where the UniswapV2Factory is deployed in order to compute the address of the pair and look up the total supply of liquidity shares, plus the amounts for the reserves. We can store this as an address passed to the constructor.The factory address is constant on mainnet and all testnets, so it may be tempting to make this value a constant in your contract, but since we need to unit test the contract it should be an argument. You can use solidity immutables to save on gas when accessing this variable.pragma solidity ^0.6.6;import './interfaces/ILiquidityValueCalculator.sol';contract LiquidityValueCalculator is ILiquidityValueCalculator { address public factory; constructor(address factory_) public {  factory = factory_; }}CopyNow we need to be able to look up the total supply of liquidity for a pair, and its token balances. Let's put this in a separate function. To implement it, we must:Look up the pair addressGet the reserves of the pairGet the total supply of the pair liquiditySort the reserves in the order of tokenA, tokenBThe UniswapV2Library has some helpful methods for this.pragma solidity ^0.6.6;import './interfaces/ILiquidityValueCalculator.sol';import '@uniswap/v2-periphery/contracts/libraries/UniswapV2Library.sol';import '@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol';contract LiquidityValueCalculator is ILiquidityValueCalculator { function pairInfo(address tokenA, address tokenB) internal view returns (uint reserveA, uint reserveB, uint totalSupply) {  IUniswapV2Pair pair = IUniswapV2Pair(UniswapV2Library.pairFor(factory, tokenA, tokenB));  totalSupply = pair.totalSupply();  (uint reserves0, uint reserves1,) = pair.getReserves();  (reserveA, reserveB) = tokenA == pair.token0() ? (reserves0, reserves1) : (reserves1, reserves0); }}CopyFinally we just need to compute the share value. We will leave that as an exercise to the reader.pragma solidity ^0.6.6;import './interfaces/ILiquidityValueCalculator.sol';import '@uniswap/v2-periphery/contracts/libraries/UniswapV2Library.sol';import '@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol';contract LiquidityValueCalculator is ILiquidityValueCalculator { address public factory; constructor(address factory_) public {  factory = factory_; } function pairInfo(address tokenA, address tokenB) internal view returns (uint reserveA, uint reserveB, uint totalSupply) {  IUniswapV2Pair pair = IUniswapV2Pair(UniswapV2Library.pairFor(factory, tokenA, tokenB));  totalSupply = pair.totalSupply();  (uint reserves0, uint reserves1,) = pair.getReserves();  (reserveA, reserveB) = tokenA == pair.token0() ? (reserves0, reserves1) : (reserves1, reserves0); } function computeLiquidityShareValue(uint liquidity, address tokenA, address tokenB) external override returns (uint tokenAAmount, uint tokenBAmount) {  revert('TODO'); }}CopyWriting tests‚ÄãIn order to test your contract, you need to:Bring up a testnetDeploy the UniswapV2FactoryDeploy at least 2 ERC20 tokens for a pairCreate a pair for the factoryDeploy your LiquidityValueCalculator contractCall LiquidityValueCalculator#computeLiquidityShareValueVerify the result with an assertion#1 is handled for you automatically by the truffle test command.Note you should only deploy the precompiled Uniswap contracts in the build directories for unit tests. This is because solidity appends a metadata hash to compiled contract artifacts which includes the hash of the contract source code path, and compilations on other machines will not result in the exact same bytecode. This is problematic because in Uniswap V2 we use the hash of the bytecode in the v2-periphery UniswapV2Library, to compute the pair address.To get the bytecode for deploying UniswapV2Factory, you can import the file via:const UniswapV2FactoryBytecode = require('@uniswap/v2-core/build/UniswapV2Factory.json').bytecodeCopyWe recommend using a standard ERC20 from @openzeppelin/contracts for deploying an ERC20.You can read more about deploying contracts and writing tests using Truffle here.Compiling and deploying the contract‚ÄãLearn more about compiling and deploying contracts using Truffle here and here respectively.WIP‚ÄãThis guide is a WIP. Please contribute to this guide with the edit button below!Edit this pageHelpful?PreviousIframe IntegrationNextImplement a SwapRequirementsBootstrapping a projectSetting up npmAdding dependenciesWriting our contractWriting testsCompiling and deploying the contractWIPDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
488,p.org sdk v3 reference interfaces AllowedPermitArguments#s,p.org sdk v3 reference interfaces AllowedPermitArguments#s.    AllowedPermitArguments | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesAllowedPermitArgumentsHelpful?On this pageAllowedPermitArguments@uniswap/v3-sdk / Exports / AllowedPermitArgumentsInterface: AllowedPermitArgumentsTable of contents‚ÄãProperties‚ÄãexpirynoncersvProperties‚Äãexpiry‚Äã‚Ä¢ expiry: BigintIshDefined in‚ÄãselfPermit.ts:19nonce‚Äã‚Ä¢ nonce: BigintIshDefined in‚ÄãselfPermit.ts:18r‚Äã‚Ä¢ r: stringDefined in‚ÄãselfPermit.ts:16s‚Äã‚Ä¢ s: stringDefined in‚ÄãselfPermit.ts:17v‚Äã‚Ä¢ v: 0 | 1 | 27 | 28Defined in‚ÄãselfPermit.ts:15Helpful?PreviousFeeAmountNextBestTradeOptionsTable of contentsPropertiesPropertiesexpirynoncersvDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
489,p.org contracts v3 reference core libraries SecondsOutside,"p.org contracts v3 reference core libraries SecondsOutside.    SecondsOutside | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesLibrariesBitMathFixedPoint128FixedPoint96FullMathLiquidityMathLowGasSafeMathOraclePositionSafeCastSecondsOutsideSqrtPriceMathSwapMathTickTickBitmapTickMathTransferHelperUnsafeMathGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreLibrariesSecondsOutsideHelpful?On this pageSecondsOutsideContains methods for working with a mapping from tick to 32 bit timestamp values, specifically seconds spent outside the tick.The mapping uses int24 for keys since ticks are represented as int24 and there are 8 (2^3) values per word. Note ""seconds outside"" is always a relative measurement, only consistent for as long as a the lower tick and upper tick have gross liquidity greater than 0.Functions‚Äãinitialize‚Äã function initialize( mapping(int24 => uint256) self, int24 tick, int24 tickCurrent, int24 tickSpacing, uint32 time ) internalCopyCalled the first time a tick is used to set the seconds outside value. Assumes the tick is not initialized.Parameters:‚ÄãNameTypeDescriptionselfmapping(int24 => uint256)the packed mapping of tick to seconds outsidetickint24the tick to be initializedtickCurrentint24the current ticktickSpacingint24the spacing between usable tickstimeuint32the current timestampclear‚Äã function clear( mapping(int24 => uint256) self, int24 tick, int24 tickSpacing ) internalCopyCalled when a tick is no longer used, to clear the seconds outside value of the tickParameters:‚ÄãNameTypeDescriptionselfmapping(int24 => uint256)the packed mapping of tick to seconds outsidetickint24the tick to be clearedtickSpacingint24the spacing between usable tickscross‚Äã function cross( mapping(int24 => uint256) self, int24 tick, int24 tickSpacing, uint32 time ) internalCopyCalled when an initialized tick is crossed to update the seconds outside for that tick. Must be called every time an initialized tick is crossedParameters:‚ÄãNameTypeDescriptionselfmapping(int24 => uint256)the packed mapping of tick to seconds outsidetickint24the tick to be crossedtickSpacingint24the spacing between usable tickstimeuint32the current block timestamp truncated to 32 bitsget‚Äã function get( mapping(int24 => uint256) self, int24 tick, int24 tickSpacing ) internal view returns (uint32)CopyGet the seconds outside for an initialized tick. Should be called only on initialized ticks.Parameters:‚ÄãNameTypeDescriptionselfmapping(int24 => uint256)the packed mapping of tick to seconds outsidetickint24the tick to get the seconds outside value fortickSpacingint24the spacing between usable ticksReturn Values:‚ÄãTypeDescriptionuint32seconds outside value for that ticksecondsInside‚Äã function secondsInside( mapping(int24 => uint256) self, int24 tickLower, int24 tickUpper, int24 tickCurrent, int24 tickSpacing ) internal view returns (uint32)CopyGet the seconds inside a tick range, assuming both tickLower and tickUpper are initializedParameters:‚ÄãNameTypeDescriptionselfmapping(int24 => uint256)the packed mapping of tick to seconds outsidetickLowerint24the lower tick for which to get seconds insidetickUpperint24the upper tick for which to get seconds insidetickCurrentint24the current ticktickSpacingint24the spacing between usable ticksReturn Values:‚ÄãNameTypeDescriptionauint32relative seconds inside value that can be snapshotted and compared to a later snapshot to computetime spent between tickLower and tickUpper, i.e. time that a position's liquidity was in use.Edit this pageHelpful?PreviousSafeCastNextSqrtPriceMathFunctionsinitializeclearcrossgetsecondsInsideDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
490,p.org CONTRIBUTING.md,p.org CONTRIBUTING.md. 
491,p.org sdk core reference enums Rounding#round down,p.org sdk core reference enums Rounding#round down.    Rounding | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesenumsRoundingSupportedChainIdTradeTypeV2 SDKV1 SDKüè†Core SDKTechnical ReferenceenumsRoundingHelpful?On this pageRounding@uniswap/sdk-core / Exports / RoundingEnumeration: RoundingTable of contents‚ÄãEnumeration Members‚ÄãROUND_DOWNROUND_HALF_UPROUND_UPEnumeration Members‚ÄãROUND_DOWN‚Äã‚Ä¢ ROUND_DOWN = 0Defined in‚Äãconstants.ts:32ROUND_HALF_UP‚Äã‚Ä¢ ROUND_HALF_UP = 1Defined in‚Äãconstants.ts:33ROUND_UP‚Äã‚Ä¢ ROUND_UP = 2Defined in‚Äãconstants.ts:34Helpful?PreviousTokenNextSupportedChainIdTable of contentsEnumeration MembersEnumeration MembersROUND_DOWNROUND_HALF_UPROUND_UPDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
492,p.org sdk v3 reference classes SelfPermit#interface,"p.org sdk v3 reference classes SelfPermit#interface.    SelfPermit | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesSelfPermitHelpful?On this pageSelfPermit@uniswap/v3-sdk / Exports / SelfPermitClass: SelfPermitTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãencodePermitConstructors‚Äãconstructor‚Äã‚Ä¢ Private new SelfPermit()Cannot be constructed.Defined in‚ÄãselfPermit.ts:34Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚ÄãselfPermit.ts:29Methods‚ÄãencodePermit‚Äã‚ñ∏ Static encodePermit(token, options): stringParameters‚ÄãNameTypetokenTokenoptionsPermitOptionsReturns‚ÄãstringDefined in‚ÄãselfPermit.ts:36Helpful?PreviousRouteNextSqrtPriceMathTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsencodePermitDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
493,p.org sdk v3 reference classes Pool#token0,"p.org sdk v3 reference classes Pool#token0.    Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPoolHelpful?On this pagePool@uniswap/v3-sdk / Exports / PoolClass: PoolRepresents a V3 poolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1Accessors‚ÄãchainIdtickSpacingtoken0Pricetoken1PriceMethods‚ÄãgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressConstructors‚Äãconstructor‚Äã‚Ä¢ new Pool(tokenA, tokenB, fee, sqrtRatioX96, liquidity, tickCurrent, ticks?)Construct a poolParameters‚ÄãNameTypeDefault valueDescriptiontokenATokenundefinedOne of the tokens in the pooltokenBTokenundefinedThe other token in the poolfeeFeeAmountundefinedThe fee in hundredths of a bips of the input amount of every swap that is collected by the poolsqrtRatioX96BigintIshundefinedThe sqrt of the current ratio of amounts of token1 to token0liquidityBigintIshundefinedThe current value of in range liquiditytickCurrentnumberundefinedThe current tick of the poolticksTickDataProvider | (Tick | TickConstructorArgs)[]NO_TICK_DATA_PROVIDER_DEFAULTThe current state of the pool ticks or a data provider that can return tick dataDefined in‚Äãentities/pool.ts:70Properties‚Äã_token0Price‚Äã‚Ä¢ Private Optional _token0Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:41_token1Price‚Äã‚Ä¢ Private Optional _token1Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:42fee‚Äã‚Ä¢ Readonly fee: FeeAmountDefined in‚Äãentities/pool.ts:35liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/pool.ts:37sqrtRatioX96‚Äã‚Ä¢ Readonly sqrtRatioX96: defaultDefined in‚Äãentities/pool.ts:36tickCurrent‚Äã‚Ä¢ Readonly tickCurrent: numberDefined in‚Äãentities/pool.ts:38tickDataProvider‚Äã‚Ä¢ Readonly tickDataProvider: TickDataProviderDefined in‚Äãentities/pool.ts:39token0‚Äã‚Ä¢ Readonly token0: TokenDefined in‚Äãentities/pool.ts:33token1‚Äã‚Ä¢ Readonly token1: TokenDefined in‚Äãentities/pool.ts:34Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns the chain ID of the tokens in the pool.Returns‚ÄãnumberDefined in‚Äãentities/pool.ts:149tickSpacing‚Äã‚Ä¢ get tickSpacing(): numberReturns‚ÄãnumberDefined in‚Äãentities/pool.ts:317token0Price‚Äã‚Ä¢ get token0Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:109token1Price‚Äã‚Ä¢ get token1Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:124Methods‚ÄãgetInputAmount‚Äã‚ñ∏ getInputAmount(outputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given a desired output amount of a token, return the computed input amount and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptionoutputAmountCurrencyAmount<Token>the output amount for which to quote the input amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The input amount and the pool with updated stateDefined in‚Äãentities/pool.ts:185getOutputAmount‚Äã‚ñ∏ getOutputAmount(inputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given an input amount of a token, return the computed output amount, and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptioninputAmountCurrencyAmount<Token>The input amount for which to quote the output amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limitReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The output amount and the pool with updated stateDefined in‚Äãentities/pool.ts:159involvesToken‚Äã‚ñ∏ involvesToken(token): booleanReturns true if the token is either token0 or token1Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to checkReturns‚ÄãbooleanTrue if token is either token0 or tokenDefined in‚Äãentities/pool.ts:102priceOf‚Äã‚ñ∏ priceOf(token): Price<Token, Token>Return the price of the given token in terms of the other token in the pool.Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to return price ofReturns‚ÄãPrice<Token, Token>The price of the given token, in terms of the other.Defined in‚Äãentities/pool.ts:141swap‚Äã‚ñ∏ Private swap(zeroForOne, amountSpecified, sqrtPriceLimitX96?): Promise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>Executes a swapParameters‚ÄãNameTypeDescriptionzeroForOnebooleanWhether the amount in is token0 or token1amountSpecifieddefaultThe amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>amountCalculatedsqrtRatioX96liquiditytickCurrentDefined in‚Äãentities/pool.ts:215getAddress‚Äã‚ñ∏ Static getAddress(tokenA, tokenB, fee, initCodeHashManualOverride?, factoryAddressOverride?): stringParameters‚ÄãNameTypetokenATokentokenBTokenfeeFeeAmountinitCodeHashManualOverride?stringfactoryAddressOverride?stringReturns‚ÄãstringDefined in‚Äãentities/pool.ts:44Helpful?PreviousPaymentsNextPositionTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1AccessorschainIdtickSpacingtoken0Pricetoken1PriceMethodsgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
494,p.org contracts v1 guides pool liquidity,"p.org contracts v1 guides pool liquidity.    Pool Liquidity | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 ProtocolOverviewGuidesConnect to UniswapPool LiquidityTrade TokensCustom LinkingIframe IntegrationToken ListingTechnical ReferenceFactoryExchangeInterfacesüè†V1 ProtocolGuidesPool LiquidityHelpful?On this pageFormalized ModelUniswap liquidity pools are autonomous and use the Constant Product Market Maker (x * y = k). This model was formalized and the smart contract implementation passed a lightweight formal verification.Formalized SpecificationLightweight VerificationCreate Exchange‚ÄãThe createExchange function is used to deploy exchange contracts for ERC20 tokens that do not yet have one.factory.methods.createExchange(tokenAddress).send()CopyOnce an exchange is created the address can be retrieved with getExchange.Exchange Reserves‚ÄãEach exchange contract holds a liquidity reserve of ETH and its associated ERC20 token.ETH Reserve‚ÄãThe ETH reserve associated with an ERC20 token exchange is the ETH balance of the exchange smart contract.const ethReserve = web3.eth.getBalance(exchangeAddress)CopyERC20 Reserve‚ÄãThe ERC20 reserve associated with an ERC20 token exchange is the ERC20 balance of the exchange smart contract.const tokenReserve = tokenContract.methods.balanceOf(exchangeAddress)CopyAdd Liquidity‚ÄãAnyone who wants can join a Uniswap liquidity pool by calling the addLiquidity function.exchange.methods.addLiquidity(min_liquidity, max_tokens, deadline).send({ value: ethAmount })CopyAdding liquidity requires depositing an equivalent value of ETH and ERC20 tokens into the ERC20 token's associated exchange contract.The first liquidity provider to join a pool sets the initial exchange rate by depositing what they believe to be an equivalent value of ETH and ERC20 tokens. If this ratio is off, arbitrage traders will bring the prices to equilibrium at the expense of the initial liquidity provider.All future liquidity providers deposit ETH and ERC20's using the exchange rate at the moment of their deposit. If the exchange rate is bad there is a profitable arbitrage opportunity that will correct the price.Parameters‚ÄãThe ethAmount sent to addLiquidity is the exact amount of ETH that will be deposited into the liquidity reserves. It should be 50% of the total value a liquidity provider wishes to deposit into the reserves.Since liquidity providers must deposit at the current exchange rate, the Uniswap smart contracts use ethAmount to determine the amount of ERC20 tokens that must be deposited. This token amount is the remaining 50% of total value a liquidity provider wishes to deposit. Since exchange rate can change between when a transaction is signed and when it is executed on Ethereum, max_tokens is used to bound the amount this rate can fluctuate. For the first liquidity provider, max_tokens is the exact amount of tokens deposited.Liquidity tokens are minted to track the relative proportion of total reserves that each liquidity provider has contributed. min_liquidity is used in combination with max_tokens and ethAmount to bound the rate at which liquidity tokens are minted. For the first liquidity provider, min_liquidity does not do anything and can be set to 0.Transaction deadline is used to set a time after which a transaction can no longer be executed. This limits the ""free option"" problem, where Ethereum miners can hold signed transactions and execute them based off market movements.Remove Liquidity‚ÄãLiquidity providers use the removeLiquidity function to withdraw their portion of the reserves.exchange.methods.removeLiquidity(amount, min_eth, min_tokens, deadline).send()CopyLiquidity is withdrawn at the same ratio as the reserves at the time of withdrawal. If the exchange rate is bad there is a profitable arbitrage opportunity that will correct the price.Parameters‚Äãamount specifies the number of liquidity tokens that will be burned. Dividing this amount by the total liquidity token supply gives the percentage of both the ETH and ER20 reserves the provider is withdrawing.Since exchange rate can change between when a transaction is signed and when it is executed on Ethereum, min_eth and min_tokens are used to bound the amount this rate can fluctuate.Same as in addLiquidity, deadline is used to set a time after which a transaction can no longer be executed.Edit this pageHelpful?PreviousConnect to UniswapNextTrade TokensCreate ExchangeExchange ReservesETH ReserveERC20 ReserveAdd LiquidityParametersRemove LiquidityParametersDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
495,p.org sdk v3 reference classes Pool#token1,"p.org sdk v3 reference classes Pool#token1.    Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPoolHelpful?On this pagePool@uniswap/v3-sdk / Exports / PoolClass: PoolRepresents a V3 poolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1Accessors‚ÄãchainIdtickSpacingtoken0Pricetoken1PriceMethods‚ÄãgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressConstructors‚Äãconstructor‚Äã‚Ä¢ new Pool(tokenA, tokenB, fee, sqrtRatioX96, liquidity, tickCurrent, ticks?)Construct a poolParameters‚ÄãNameTypeDefault valueDescriptiontokenATokenundefinedOne of the tokens in the pooltokenBTokenundefinedThe other token in the poolfeeFeeAmountundefinedThe fee in hundredths of a bips of the input amount of every swap that is collected by the poolsqrtRatioX96BigintIshundefinedThe sqrt of the current ratio of amounts of token1 to token0liquidityBigintIshundefinedThe current value of in range liquiditytickCurrentnumberundefinedThe current tick of the poolticksTickDataProvider | (Tick | TickConstructorArgs)[]NO_TICK_DATA_PROVIDER_DEFAULTThe current state of the pool ticks or a data provider that can return tick dataDefined in‚Äãentities/pool.ts:70Properties‚Äã_token0Price‚Äã‚Ä¢ Private Optional _token0Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:41_token1Price‚Äã‚Ä¢ Private Optional _token1Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:42fee‚Äã‚Ä¢ Readonly fee: FeeAmountDefined in‚Äãentities/pool.ts:35liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/pool.ts:37sqrtRatioX96‚Äã‚Ä¢ Readonly sqrtRatioX96: defaultDefined in‚Äãentities/pool.ts:36tickCurrent‚Äã‚Ä¢ Readonly tickCurrent: numberDefined in‚Äãentities/pool.ts:38tickDataProvider‚Äã‚Ä¢ Readonly tickDataProvider: TickDataProviderDefined in‚Äãentities/pool.ts:39token0‚Äã‚Ä¢ Readonly token0: TokenDefined in‚Äãentities/pool.ts:33token1‚Äã‚Ä¢ Readonly token1: TokenDefined in‚Äãentities/pool.ts:34Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns the chain ID of the tokens in the pool.Returns‚ÄãnumberDefined in‚Äãentities/pool.ts:149tickSpacing‚Äã‚Ä¢ get tickSpacing(): numberReturns‚ÄãnumberDefined in‚Äãentities/pool.ts:317token0Price‚Äã‚Ä¢ get token0Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:109token1Price‚Äã‚Ä¢ get token1Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:124Methods‚ÄãgetInputAmount‚Äã‚ñ∏ getInputAmount(outputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given a desired output amount of a token, return the computed input amount and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptionoutputAmountCurrencyAmount<Token>the output amount for which to quote the input amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The input amount and the pool with updated stateDefined in‚Äãentities/pool.ts:185getOutputAmount‚Äã‚ñ∏ getOutputAmount(inputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given an input amount of a token, return the computed output amount, and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptioninputAmountCurrencyAmount<Token>The input amount for which to quote the output amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limitReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The output amount and the pool with updated stateDefined in‚Äãentities/pool.ts:159involvesToken‚Äã‚ñ∏ involvesToken(token): booleanReturns true if the token is either token0 or token1Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to checkReturns‚ÄãbooleanTrue if token is either token0 or tokenDefined in‚Äãentities/pool.ts:102priceOf‚Äã‚ñ∏ priceOf(token): Price<Token, Token>Return the price of the given token in terms of the other token in the pool.Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to return price ofReturns‚ÄãPrice<Token, Token>The price of the given token, in terms of the other.Defined in‚Äãentities/pool.ts:141swap‚Äã‚ñ∏ Private swap(zeroForOne, amountSpecified, sqrtPriceLimitX96?): Promise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>Executes a swapParameters‚ÄãNameTypeDescriptionzeroForOnebooleanWhether the amount in is token0 or token1amountSpecifieddefaultThe amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>amountCalculatedsqrtRatioX96liquiditytickCurrentDefined in‚Äãentities/pool.ts:215getAddress‚Äã‚ñ∏ Static getAddress(tokenA, tokenB, fee, initCodeHashManualOverride?, factoryAddressOverride?): stringParameters‚ÄãNameTypetokenATokentokenBTokenfeeFeeAmountinitCodeHashManualOverride?stringfactoryAddressOverride?stringReturns‚ÄãstringDefined in‚Äãentities/pool.ts:44Helpful?PreviousPaymentsNextPositionTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1AccessorschainIdtickSpacingtoken0Pricetoken1PriceMethodsgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
496,p.org contracts v3 reference core interfaces callback IUniswapV3MintCallback,"p.org contracts v3 reference core interfaces callback IUniswapV3MintCallback.    IUniswapV3MintCallback | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesIERC20MinimalIUniswapV3FactoryIUniswapV3PoolIUniswapV3PoolDeployercallbackIUniswapV3FlashCallbackIUniswapV3MintCallbackIUniswapV3SwapCallbackPoolLibrariesGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreInterfacescallbackIUniswapV3MintCallbackHelpful?On this pageIUniswapV3MintCallbackAny contract that calls IUniswapV3PoolActions#mint must implement this interfaceFunctions‚ÄãuniswapV3MintCallback‚Äã function uniswapV3MintCallback( uint256 amount0Owed, uint256 amount1Owed, bytes data ) externalCopyCalled to msg.sender after minting liquidity to a position from IUniswapV3Pool#mint.In the implementation you must pay the pool tokens owed for the minted liquidity. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.Parameters:‚ÄãNameTypeDescriptionamount0Oweduint256The amount of token0 due to the pool for the minted liquidityamount1Oweduint256The amount of token1 due to the pool for the minted liquiditydatabytesAny data passed through by the caller via the IUniswapV3PoolActions#mint callEdit this pageHelpful?PreviousIUniswapV3FlashCallbackNextIUniswapV3SwapCallbackFunctionsuniswapV3MintCallbackDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
497,p.org sdk v3 reference modules.md#maxliquidityforamounts,p.org sdk v3 reference modules.md#maxliquidityforamounts. 
498,p.org sdk v3 reference classes NoTickDataProvider#nextinitializedtickwithinoneword,"p.org sdk v3 reference classes NoTickDataProvider#nextinitializedtickwithinoneword.    NoTickDataProvider | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesNoTickDataProviderHelpful?On this pageNoTickDataProvider@uniswap/v3-sdk / Exports / NoTickDataProviderClass: NoTickDataProviderThis tick data provider does not know how to fetch any tick data. It throws whenever it is required. Useful if you do not need to load tick data for your use case.Implements‚ÄãTickDataProviderTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãERROR_MESSAGEMethods‚ÄãgetTicknextInitializedTickWithinOneWordConstructors‚Äãconstructor‚Äã‚Ä¢ new NoTickDataProvider()Properties‚ÄãERROR_MESSAGE‚Äã‚ñ™ Static Private ERROR_MESSAGE: string = 'No tick data provider was given'Defined in‚Äãentities/tickDataProvider.ts:27Methods‚ÄãgetTick‚Äã‚ñ∏ getTick(_tick): Promise<{ liquidityNet: BigintIsh }>Return information corresponding to a specific tickParameters‚ÄãNameTypeDescription_ticknumberthe tick to loadReturns‚ÄãPromise<{ liquidityNet: BigintIsh }>Implementation of‚ÄãTickDataProvider.getTickDefined in‚Äãentities/tickDataProvider.ts:28nextInitializedTickWithinOneWord‚Äã‚ñ∏ nextInitializedTickWithinOneWord(_tick, _lte, _tickSpacing): Promise<[number, boolean]>Return the next tick that is initialized within a single wordParameters‚ÄãNameTypeDescription_ticknumberThe current tick_ltebooleanWhether the next tick should be lte the current tick_tickSpacingnumberThe tick spacing of the poolReturns‚ÄãPromise<[number, boolean]>Implementation of‚ÄãTickDataProvider.nextInitializedTickWithinOneWordDefined in‚Äãentities/tickDataProvider.ts:32Helpful?PreviousMulticallNextNonfungiblePositionManagerImplementsTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesERROR_MESSAGEMethodsgetTicknextInitializedTickWithinOneWordDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
499,p.org contracts v2 concepts protocol overview glossary,"p.org contracts v2 concepts protocol overview glossary.    Glossary | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewHow Uniswap worksEcosystem ParticipantsSmart contractsGlossaryCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolConceptsProtocol OverviewGlossaryHelpful?On this pageGlossaryAutomated market maker‚ÄãAn automated market maker is a smart contract on Ethereum that holds on-chain liquidity reserves. Users can trade against these reserves at prices set by an automated market making formula.Constant product formula‚ÄãThe automated market making algorithm used by Uniswap. See x*y=k.ERC20‚ÄãERC20 tokens are fungible tokens on Ethereum. Uniswap supports all standard ERC20 implementations.Factory‚ÄãA smart contract that deploys a unique smart contract for any ERC20/ERC20 trading pair.Pair‚ÄãA smart contract deployed from the Uniswap V2 Factory that enables trading between two ERC20 tokens.Pool‚ÄãLiquidity within a pair is pooled across all liquidity providers.Liquidity provider / LP‚ÄãA liquidity provider is someone who deposits an equivalent value of two ERC20 tokens into the liquidity pool within a pair. Liquidity providers take on price risk and are compensated with fees.Mid price‚ÄãThe price between what users can buy and sell tokens at a given moment. In Uniswap this is the ratio of the two ERC20 token reserves.Price impact‚ÄãThe difference between the mid-price and the execution price of a trade.Slippage‚ÄãThe amount the price moves in a trading pair between when a transaction is submitted and when it is executed.Core‚ÄãSmart contracts that are essential for Uniswap to exist. Upgrading to a new version of core would require a liquidity migration.Periphery‚ÄãExternal smart contracts that are useful, but not required for Uniswap to exist. New periphery contracts can always be deployed without migrating liquidity.Flash swap‚ÄãA trade that uses the tokens being purchased before paying for them.x * y = k‚ÄãThe constant product formula.Invariant‚ÄãThe ""k"" value in the constant product formulaEdit this pageHelpful?PreviousSmart contractsNextSwapsAutomated market makerConstant product formulaERC20FactoryPairPoolLiquidity provider / LPMid pricePrice impactSlippageCorePeripheryFlash swapx * y = kInvariantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
500,p.org sdk core reference enums Rounding#round up,p.org sdk core reference enums Rounding#round up.    Rounding | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesenumsRoundingSupportedChainIdTradeTypeV2 SDKV1 SDKüè†Core SDKTechnical ReferenceenumsRoundingHelpful?On this pageRounding@uniswap/sdk-core / Exports / RoundingEnumeration: RoundingTable of contents‚ÄãEnumeration Members‚ÄãROUND_DOWNROUND_HALF_UPROUND_UPEnumeration Members‚ÄãROUND_DOWN‚Äã‚Ä¢ ROUND_DOWN = 0Defined in‚Äãconstants.ts:32ROUND_HALF_UP‚Äã‚Ä¢ ROUND_HALF_UP = 1Defined in‚Äãconstants.ts:33ROUND_UP‚Äã‚Ä¢ ROUND_UP = 2Defined in‚Äãconstants.ts:34Helpful?PreviousTokenNextSupportedChainIdTable of contentsEnumeration MembersEnumeration MembersROUND_DOWNROUND_HALF_UPROUND_UPDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
501,p.org contracts universal router technical reference#unwrap eth,"p.org contracts universal router technical reference#unwrap eth.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
502,p.org sdk v3 reference interfaces FeeOptions#fee,p.org sdk v3 reference interfaces FeeOptions#fee.    FeeOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesFeeOptionsHelpful?On this pageFeeOptions@uniswap/v3-sdk / Exports / FeeOptionsInterface: FeeOptionsTable of contents‚ÄãProperties‚ÄãfeerecipientProperties‚Äãfee‚Äã‚Ä¢ fee: PercentThe percent of the output that will be taken as a fee.Defined in‚Äãpayments.ts:11recipient‚Äã‚Ä¢ recipient: stringThe recipient of the fee.Defined in‚Äãpayments.ts:16Helpful?PreviousCommonAddLiquidityOptionsNextIncentiveKeyTable of contentsPropertiesPropertiesfeerecipientDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
503,p.org sdk v2 guides getting pair addresses,"p.org sdk v2 guides getting pair addresses.    Pair Addresses | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKOverviewGuidesSDK Quick startFetching DataPricingTradingPair AddressesTechnical ReferenceGetting StartedTokenPairRouteTradeFractionsFetcherOther ExportsV1 SDKüè†V2 SDKGuidesPair AddressesHelpful?On this pagegetPairThe most obvious way to get the address for a pair is to call getPair on the factory. If the pair exists, this function will return its address, else address(0) (0x0000000000000000000000000000000000000000).The ""canonical"" way to determine whether or not a pair exists.Requires an on-chain lookup.CREATE2Thanks to some fancy footwork in the factory, we can also compute pair addresses without any on-chain lookups because of CREATE2. The following values are required for this technique:addressThe factory addresssaltkeccak256(abi.encodePacked(token0, token1))keccak256(init_code)0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845ftoken0 must be strictly less than token1 by sort order.Can be computed offline.Requires the ability to perform keccak256.Examples‚ÄãTypeScript‚ÄãThis example makes use of the Uniswap SDK. In reality, the SDK computes pair addresses behind the scenes, obviating the need to compute them manually like this.import { FACTORY_ADDRESS, INIT_CODE_HASH } from '@uniswap/sdk'import { pack, keccak256 } from '@ethersproject/solidity'import { getCreate2Address } from '@ethersproject/address'const token0 = '0xCAFE000000000000000000000000000000000000' // change me!const token1 = '0xF00D000000000000000000000000000000000000' // change me!const pair = getCreate2Address( FACTORY_ADDRESS, keccak256(['bytes'], [pack(['address', 'address'], [token0, token1])]), INIT_CODE_HASH)CopyHelpful?PreviousTradingNextGetting StartedExamplesTypeScriptDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
504,p.org sdk core reference modules.md#sortedinsert,p.org sdk core reference modules.md#sortedinsert. 
505,p.org sdk v3 reference interfaces AllowedPermitArguments#r,p.org sdk v3 reference interfaces AllowedPermitArguments#r.    AllowedPermitArguments | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesAllowedPermitArgumentsHelpful?On this pageAllowedPermitArguments@uniswap/v3-sdk / Exports / AllowedPermitArgumentsInterface: AllowedPermitArgumentsTable of contents‚ÄãProperties‚ÄãexpirynoncersvProperties‚Äãexpiry‚Äã‚Ä¢ expiry: BigintIshDefined in‚ÄãselfPermit.ts:19nonce‚Äã‚Ä¢ nonce: BigintIshDefined in‚ÄãselfPermit.ts:18r‚Äã‚Ä¢ r: stringDefined in‚ÄãselfPermit.ts:16s‚Äã‚Ä¢ s: stringDefined in‚ÄãselfPermit.ts:17v‚Äã‚Ä¢ v: 0 | 1 | 27 | 28Defined in‚ÄãselfPermit.ts:15Helpful?PreviousFeeAmountNextBestTradeOptionsTable of contentsPropertiesPropertiesexpirynoncersvDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
506,p.org sdk core reference classes Price#adjustedfordecimals,"p.org sdk core reference classes Price#adjustedfordecimals.    Price | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPriceHelpful?On this pagePrice@uniswap/sdk-core / Exports / PriceClass: Price<TBase, TQuote>Type parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyHierarchy‚ÄãFraction‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessors‚ÄãadjustedForDecimalsasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Price<TBase, TQuote>(...args)Construct a price, either with the base and quote currency amount, or theType parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyParameters‚ÄãNameType...args[TBase, TQuote, BigintIsh, BigintIsh] | [{ baseAmount: CurrencyAmount<TBase> ; quoteAmount: CurrencyAmount<TQuote> }]Overrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/price.ts:18Properties‚ÄãbaseCurrency‚Äã‚Ä¢ Readonly baseCurrency: TBaseDefined in‚Äãentities/fractions/price.ts:10denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25quoteCurrency‚Äã‚Ä¢ Readonly quoteCurrency: TQuoteDefined in‚Äãentities/fractions/price.ts:11scalar‚Äã‚Ä¢ Readonly scalar: FractionDefined in‚Äãentities/fractions/price.ts:12Accessors‚ÄãadjustedForDecimals‚Äã‚Ä¢ Private get adjustedForDecimals(): FractionGet the value scaled by decimals for formattingReturns‚ÄãFractionDefined in‚Äãentities/fractions/price.ts:77asFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.addDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.divideDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): Price<TQuote, TBase>Flip the price, switching the base and quote currencyReturns‚ÄãPrice<TQuote, TBase>Overrides‚ÄãFraction.invertDefined in‚Äãentities/fractions/price.ts:49lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply<TOtherQuote>(other): Price<TBase, TOtherQuote>Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currencyType parameters‚ÄãNameTypeTOtherQuoteextends CurrencyParameters‚ÄãNameTypeDescriptionotherPrice<TQuote, TOtherQuote>the other priceReturns‚ÄãPrice<TBase, TOtherQuote>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/price.ts:57quote‚Äã‚ñ∏ quote(currencyAmount): CurrencyAmount<TQuote>Return the amount of quote currency corresponding to a given amount of the base currencyParameters‚ÄãNameTypeDescriptioncurrencyAmountCurrencyAmount<TBase>the amount of base currency to quote against the priceReturns‚ÄãCurrencyAmount<TQuote>Defined in‚Äãentities/fractions/price.ts:67subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.subtractDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber4format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/price.ts:85toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/price.ts:81Helpful?PreviousPercentNextTokenType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessorsadjustedForDecimalsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
507,p.org sdk v3 reference interfaces SwapOptions#deadline,"p.org sdk v3 reference interfaces SwapOptions#deadline.    SwapOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesSwapOptionsHelpful?On this pageSwapOptions@uniswap/v3-sdk / Exports / SwapOptionsInterface: SwapOptionsOptions for producing the arguments to send calls to the router.Table of contents‚ÄãProperties‚ÄãdeadlinefeeinputTokenPermitrecipientslippageTolerancesqrtPriceLimitX96Properties‚Äãdeadline‚Äã‚Ä¢ deadline: BigintIshWhen the transaction expires, in epoch seconds.Defined in‚ÄãswapRouter.ts:30fee‚Äã‚Ä¢ Optional fee: FeeOptionsOptional information for taking a fee on output.Defined in‚ÄãswapRouter.ts:45inputTokenPermit‚Äã‚Ä¢ Optional inputTokenPermit: PermitOptionsThe optional permit parameters for spending the input.Defined in‚ÄãswapRouter.ts:35recipient‚Äã‚Ä¢ recipient: stringThe account that should receive the output.Defined in‚ÄãswapRouter.ts:25slippageTolerance‚Äã‚Ä¢ slippageTolerance: PercentHow much the execution price is allowed to move unfavorably from the trade execution price.Defined in‚ÄãswapRouter.ts:20sqrtPriceLimitX96‚Äã‚Ä¢ Optional sqrtPriceLimitX96: BigintIshThe optional price limit for the trade.Defined in‚ÄãswapRouter.ts:40Helpful?PreviousStandardPermitArgumentsNextTickConstructorArgsTable of contentsPropertiesPropertiesdeadlinefeeinputTokenPermitrecipientslippageTolerancesqrtPriceLimitX96DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
508,p.org concepts resources,p.org concepts resources.    Resources | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchWhat Is Uniswap?The Uniswap ProtocolProtocol ConceptsGovernanceResearchResourcesGlossaryüè†ResourcesHelpful?ResourcesThis page will be periodically updated with helpful resources for calculations and software design as they are made available.Uniswap V2 VisualizationUniswap V3 VisualizationUniswap V3 (Multiple Positions) VisualizationV2 / V3 CalculationsHelpful?PreviousResearchNextGlossaryDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
509,p.org contracts v1 guides custom linking,"p.org contracts v1 guides custom linking.    Custom Linking | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 ProtocolOverviewGuidesConnect to UniswapPool LiquidityTrade TokensCustom LinkingIframe IntegrationToken ListingTechnical ReferenceFactoryExchangeInterfacesüè†V1 ProtocolGuidesCustom LinkingHelpful?On this pageQuery ParametersThe Uniswap front-end supports URL query parameters to allow for custom linking to the Uniswap exchange. Users and developers can use these query parameters to link to the Uniswap exchange with custom prefilled settings.Each Page has specific available URL parameters that can be set. Global parameters can be used on all pages.A parameter used on an incorrect page will have no effect on exchange settings. Parameters not set with a URL parameter will be set to standard exchange defaults.Global‚ÄãParameterTypeDescriptionthemeStringSets them to dark or light mode.Theme Options‚ÄãTheme can be set as light or dark.Example Usage‚Äãhttps://app.uniswap.org/#/swap?theme=dark&use=v1Swap Page‚ÄãParameterTypeDescriptioninputCurrencyaddressInput currency that will be swapped for output currency.outputCurrencyaddress or ETHOutput currency that input currency will be swapped for.slippagenumberMax slippage to be used during transaction (in bips)exactAmountnumberThe custom token amount to buy or sell.exactFieldstringThe field to set custom token amount for. Must be input or output.Defaults‚ÄãETH defaults as the input currency. When a different token is selected for either input or output ETH will default as the opposite selected currency.Constraints‚ÄãAddresses must be valid ERC20 addresses. Slippage and amount values must be valid numbers accepted by the exchange (or error will prevent from swapping). Slippage can 0, or within the range 10->9999 bips (which converts to 0%, 0.01%->99%)When selecting ETH as the output currency a user must also choose an inputCurrency that is not ETH (to prevent ETH being populated in both fields)Setting Amounts‚ÄãTwo parameters, exactField and exactAmount can be used to set specific token amounts to be sold or bought. Both fields must be set in the URL or there will be no effect on the settings.Example Usage‚Äãhttps://app.uniswap.org/#/swap?exactField=input&exactAmount=10&inputCurrency=0x0F5D2fB29fb7d3CFeE444a200298f468908cC942?use=v1Send Page‚ÄãThe send page has the same options available as the Swap page, plus one additional paramter, recipient.ParameterTypeDescriptionrecipientaddressAddress of the recipient of a send transaction.Example Usage‚Äãhttps://app.uniswap.org/#/send?recipient=0x74Aa01d162E6dC6A657caC857418C403D48E2D77?use=v1Pool Page‚ÄãThe Pool page is made up of 3 subroutes: add-liquidity, remove-liquidity, create-exchange.Add Liquidity‚ÄãParameterTypeDescriptionethAmountnumberAmount of ETH to deposit into the pool.tokenaddressERC20 address of the pool to add liquidity to.tokenAmountnumberAmount of the selected token to deposit into the pool.Example Usage‚Äãhttps://app.uniswap.org/#/add-liquidity?ethAmount=2.34&token=0x42456D7084eacF4083f1140d3229471bbA2949A8&tokenAmount=300?use=v1Remove Liquidity‚ÄãParameterTypeDescriptionpoolTokenAddressaddressPool to withdraw liquidity from. (Must be an ERC20 address with an existing exchange)poolTokenAmountnumberAmount of pool token to be withdrawn from liquidity pool.Example Usage‚Äãhttps://app.uniswap.org/#/remove-liquidity?poolTokenAmount=1.23&use=v1Create Exchange‚ÄãParameterTypeDescriptiontokenAddressaddressERC20 token to create the exchange for. Must be valid ERC20 token for which there is no existing exchange.Example Usage‚Äãhttps://app.uniswap.org/#/swap?use=v1&create-exchange?tokenAddress=0x0F5D2fB29fb7d3CFeE444a200298f468908cC942Custom Routes‚ÄãCustom token routes can still be used in combination with URL paramters. URL paramters are higher in the settings hierarchy than custom routes.An example using custom token route and URL paramters.https://app.uniswap.org/#/swap/0x0F5D2fB29fb7d3CFeE444a200298f468908cC942?exactField=input&exactAmount=10&use=v1Edit this pageHelpful?PreviousTrade TokensNextIframe IntegrationGlobalTheme OptionsExample UsageSwap PageDefaultsConstraintsSetting AmountsExample UsageSend PageExample UsagePool PageAdd LiquidityExample UsageRemove LiquidityExample UsageCreate ExchangeExample UsageCustom RoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
510,p.org sdk swap widget overview,"p.org sdk swap widget overview.    Overview | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap WidgetOverviewGuidesTechnical Referenceweb3-reactCore SDKV2 SDKV1 SDKüè†Swap WidgetOverviewHelpful?The Uniswap Swap WidgetWelcome to the Uniswap Swap Widget. To begin, we recommend looking at the Guides and for deeper reference see the Swap Widget Github repo.Alpha softwareThe latest version of the Swap Widget is in production in the Uniswap Interface, but it is considered Alpha software and may contain bugs or change significantly between patch versions. If you have questions about how to use the SDK, please reach out in the #dev-chat channel of our Discord. Pull requests are welcome!Uniswap Swap WidgetSwap Widget Github RepoSwap Widget NPM Package Helpful?PreviousWithdrawOptionsNextGetting StartedDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
511,p.org sdk v3 reference classes Pool,"p.org sdk v3 reference classes Pool.    Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPoolHelpful?On this pagePool@uniswap/v3-sdk / Exports / PoolClass: PoolRepresents a V3 poolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1Accessors‚ÄãchainIdtickSpacingtoken0Pricetoken1PriceMethods‚ÄãgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressConstructors‚Äãconstructor‚Äã‚Ä¢ new Pool(tokenA, tokenB, fee, sqrtRatioX96, liquidity, tickCurrent, ticks?)Construct a poolParameters‚ÄãNameTypeDefault valueDescriptiontokenATokenundefinedOne of the tokens in the pooltokenBTokenundefinedThe other token in the poolfeeFeeAmountundefinedThe fee in hundredths of a bips of the input amount of every swap that is collected by the poolsqrtRatioX96BigintIshundefinedThe sqrt of the current ratio of amounts of token1 to token0liquidityBigintIshundefinedThe current value of in range liquiditytickCurrentnumberundefinedThe current tick of the poolticksTickDataProvider | (Tick | TickConstructorArgs)[]NO_TICK_DATA_PROVIDER_DEFAULTThe current state of the pool ticks or a data provider that can return tick dataDefined in‚Äãentities/pool.ts:70Properties‚Äã_token0Price‚Äã‚Ä¢ Private Optional _token0Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:41_token1Price‚Äã‚Ä¢ Private Optional _token1Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:42fee‚Äã‚Ä¢ Readonly fee: FeeAmountDefined in‚Äãentities/pool.ts:35liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/pool.ts:37sqrtRatioX96‚Äã‚Ä¢ Readonly sqrtRatioX96: defaultDefined in‚Äãentities/pool.ts:36tickCurrent‚Äã‚Ä¢ Readonly tickCurrent: numberDefined in‚Äãentities/pool.ts:38tickDataProvider‚Äã‚Ä¢ Readonly tickDataProvider: TickDataProviderDefined in‚Äãentities/pool.ts:39token0‚Äã‚Ä¢ Readonly token0: TokenDefined in‚Äãentities/pool.ts:33token1‚Äã‚Ä¢ Readonly token1: TokenDefined in‚Äãentities/pool.ts:34Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns the chain ID of the tokens in the pool.Returns‚ÄãnumberDefined in‚Äãentities/pool.ts:149tickSpacing‚Äã‚Ä¢ get tickSpacing(): numberReturns‚ÄãnumberDefined in‚Äãentities/pool.ts:317token0Price‚Äã‚Ä¢ get token0Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:109token1Price‚Äã‚Ä¢ get token1Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:124Methods‚ÄãgetInputAmount‚Äã‚ñ∏ getInputAmount(outputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given a desired output amount of a token, return the computed input amount and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptionoutputAmountCurrencyAmount<Token>the output amount for which to quote the input amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The input amount and the pool with updated stateDefined in‚Äãentities/pool.ts:185getOutputAmount‚Äã‚ñ∏ getOutputAmount(inputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given an input amount of a token, return the computed output amount, and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptioninputAmountCurrencyAmount<Token>The input amount for which to quote the output amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limitReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The output amount and the pool with updated stateDefined in‚Äãentities/pool.ts:159involvesToken‚Äã‚ñ∏ involvesToken(token): booleanReturns true if the token is either token0 or token1Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to checkReturns‚ÄãbooleanTrue if token is either token0 or tokenDefined in‚Äãentities/pool.ts:102priceOf‚Äã‚ñ∏ priceOf(token): Price<Token, Token>Return the price of the given token in terms of the other token in the pool.Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to return price ofReturns‚ÄãPrice<Token, Token>The price of the given token, in terms of the other.Defined in‚Äãentities/pool.ts:141swap‚Äã‚ñ∏ Private swap(zeroForOne, amountSpecified, sqrtPriceLimitX96?): Promise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>Executes a swapParameters‚ÄãNameTypeDescriptionzeroForOnebooleanWhether the amount in is token0 or token1amountSpecifieddefaultThe amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>amountCalculatedsqrtRatioX96liquiditytickCurrentDefined in‚Äãentities/pool.ts:215getAddress‚Äã‚ñ∏ Static getAddress(tokenA, tokenB, fee, initCodeHashManualOverride?, factoryAddressOverride?): stringParameters‚ÄãNameTypetokenATokentokenBTokenfeeFeeAmountinitCodeHashManualOverride?stringfactoryAddressOverride?stringReturns‚ÄãstringDefined in‚Äãentities/pool.ts:44Helpful?PreviousPaymentsNextPositionTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1AccessorschainIdtickSpacingtoken0Pricetoken1PriceMethodsgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
512,p.org contracts v3 reference core libraries FixedPoint128,"p.org contracts v3 reference core libraries FixedPoint128.    FixedPoint128 | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesLibrariesBitMathFixedPoint128FixedPoint96FullMathLiquidityMathLowGasSafeMathOraclePositionSafeCastSecondsOutsideSqrtPriceMathSwapMathTickTickBitmapTickMathTransferHelperUnsafeMathGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreLibrariesFixedPoint128Helpful?FixedPoint128A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)Edit this pageHelpful?PreviousBitMathNextFixedPoint96DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
513,p.org sdk core reference classes Price#constructor,"p.org sdk core reference classes Price#constructor.    Price | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPriceHelpful?On this pagePrice@uniswap/sdk-core / Exports / PriceClass: Price<TBase, TQuote>Type parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyHierarchy‚ÄãFraction‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessors‚ÄãadjustedForDecimalsasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Price<TBase, TQuote>(...args)Construct a price, either with the base and quote currency amount, or theType parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyParameters‚ÄãNameType...args[TBase, TQuote, BigintIsh, BigintIsh] | [{ baseAmount: CurrencyAmount<TBase> ; quoteAmount: CurrencyAmount<TQuote> }]Overrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/price.ts:18Properties‚ÄãbaseCurrency‚Äã‚Ä¢ Readonly baseCurrency: TBaseDefined in‚Äãentities/fractions/price.ts:10denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25quoteCurrency‚Äã‚Ä¢ Readonly quoteCurrency: TQuoteDefined in‚Äãentities/fractions/price.ts:11scalar‚Äã‚Ä¢ Readonly scalar: FractionDefined in‚Äãentities/fractions/price.ts:12Accessors‚ÄãadjustedForDecimals‚Äã‚Ä¢ Private get adjustedForDecimals(): FractionGet the value scaled by decimals for formattingReturns‚ÄãFractionDefined in‚Äãentities/fractions/price.ts:77asFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.addDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.divideDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): Price<TQuote, TBase>Flip the price, switching the base and quote currencyReturns‚ÄãPrice<TQuote, TBase>Overrides‚ÄãFraction.invertDefined in‚Äãentities/fractions/price.ts:49lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply<TOtherQuote>(other): Price<TBase, TOtherQuote>Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currencyType parameters‚ÄãNameTypeTOtherQuoteextends CurrencyParameters‚ÄãNameTypeDescriptionotherPrice<TQuote, TOtherQuote>the other priceReturns‚ÄãPrice<TBase, TOtherQuote>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/price.ts:57quote‚Äã‚ñ∏ quote(currencyAmount): CurrencyAmount<TQuote>Return the amount of quote currency corresponding to a given amount of the base currencyParameters‚ÄãNameTypeDescriptioncurrencyAmountCurrencyAmount<TBase>the amount of base currency to quote against the priceReturns‚ÄãCurrencyAmount<TQuote>Defined in‚Äãentities/fractions/price.ts:67subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.subtractDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber4format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/price.ts:85toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/price.ts:81Helpful?PreviousPercentNextTokenType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessorsadjustedForDecimalsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
514,p.org sdk v3 reference interfaces TickDataProvider#nextinitializedtickwithinoneword,"p.org sdk v3 reference interfaces TickDataProvider#nextinitializedtickwithinoneword.    TickDataProvider | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesTickDataProviderHelpful?On this pageTickDataProvider@uniswap/v3-sdk / Exports / TickDataProviderInterface: TickDataProviderProvides information about ticksImplemented by‚ÄãNoTickDataProviderTickListDataProviderTable of contents‚ÄãMethods‚ÄãgetTicknextInitializedTickWithinOneWordMethods‚ÄãgetTick‚Äã‚ñ∏ getTick(tick): Promise<{ liquidityNet: BigintIsh }>Return information corresponding to a specific tickParameters‚ÄãNameTypeDescriptionticknumberthe tick to loadReturns‚ÄãPromise<{ liquidityNet: BigintIsh }>Defined in‚Äãentities/tickDataProvider.ts:11nextInitializedTickWithinOneWord‚Äã‚ñ∏ nextInitializedTickWithinOneWord(tick, lte, tickSpacing): Promise<[number, boolean]>Return the next tick that is initialized within a single wordParameters‚ÄãNameTypeDescriptionticknumberThe current tickltebooleanWhether the next tick should be lte the current ticktickSpacingnumberThe tick spacing of the poolReturns‚ÄãPromise<[number, boolean]>Defined in‚Äãentities/tickDataProvider.ts:19Helpful?PreviousTickConstructorArgsNextWithdrawOptionsImplemented byTable of contentsMethodsMethodsgetTicknextInitializedTickWithinOneWordDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
515,p.org contracts v3 reference core libraries LowGasSafeMath,"p.org contracts v3 reference core libraries LowGasSafeMath.    LowGasSafeMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesLibrariesBitMathFixedPoint128FixedPoint96FullMathLiquidityMathLowGasSafeMathOraclePositionSafeCastSecondsOutsideSqrtPriceMathSwapMathTickTickBitmapTickMathTransferHelperUnsafeMathGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreLibrariesLowGasSafeMathHelpful?On this pageLowGasSafeMathContains methods for doing math operations that revert on overflow or underflow for minimal gas costFunctions‚Äãadd‚Äã function add( uint256 x, uint256 y ) internal pure returns (uint256 z)CopyReturns x + y, reverts if sum overflows uint256Parameters:‚ÄãNameTypeDescriptionxuint256The augendyuint256The addendReturn Values:‚ÄãNameTypeDescriptionzuint256The sum of x and ysub‚Äã function sub( uint256 x, uint256 y ) internal pure returns (uint256 z)CopyReturns x - y, reverts if underflowsParameters:‚ÄãNameTypeDescriptionxuint256The minuendyuint256The subtrahendReturn Values:‚ÄãNameTypeDescriptionzuint256The difference of x and ymul‚Äã function mul( uint256 x, uint256 y ) internal pure returns (uint256 z)CopyReturns x * y, reverts if overflowsParameters:‚ÄãNameTypeDescriptionxuint256The multiplicandyuint256The multiplierReturn Values:‚ÄãNameTypeDescriptionzuint256The product of x and yadd‚Äã function add( int256 x, int256 y ) internal pure returns (int256 z)CopyReturns x + y, reverts if overflows or underflowsParameters:‚ÄãNameTypeDescriptionxint256The augendyint256The addendReturn Values:‚ÄãNameTypeDescriptionzint256The sum of x and ysub‚Äã function sub( int256 x, int256 y ) internal pure returns (int256 z)CopyReturns x - y, reverts if overflows or underflowsParameters:‚ÄãNameTypeDescriptionxint256The minuendyint256The subtrahendReturn Values:‚ÄãNameTypeDescriptionzint256The difference of x and yEdit this pageHelpful?PreviousLiquidityMathNextOracleFunctionsaddsubmuladdsubDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
516,p.org sdk core reference classes CurrencyAmount#fromrawamount,"p.org sdk core reference classes CurrencyAmount#fromrawamount.    CurrencyAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesCurrencyAmountHelpful?On this pageCurrencyAmount@uniswap/sdk-core / Exports / CurrencyAmountClass: CurrencyAmount<T>Type parameters‚ÄãNameTypeTextends CurrencyHierarchy‚ÄãFraction‚Ü≥ CurrencyAmountTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãcurrencydecimalScaledenominatornumeratorAccessors‚ÄãasFractionquotientremainderwrappedMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new CurrencyAmount<T>(currency, numerator, denominator?)Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypecurrencyTnumeratorBigintIshdenominator?BigintIshOverrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/currencyAmount.ts:40Properties‚Äãcurrency‚Äã‚Ä¢ Readonly currency: TDefined in‚Äãentities/fractions/currencyAmount.ts:14decimalScale‚Äã‚Ä¢ Readonly decimalScale: defaultDefined in‚Äãentities/fractions/currencyAmount.ts:15denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47wrapped‚Äã‚Ä¢ get wrapped(): CurrencyAmount<Token>Returns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/fractions/currencyAmount.ts:91Methods‚Äãadd‚Äã‚ñ∏ add(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.addDefined in‚Äãentities/fractions/currencyAmount.ts:47divide‚Äã‚ñ∏ divide(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/currencyAmount.ts:64equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/currencyAmount.ts:59subtract‚Äã‚ñ∏ subtract(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/currencyAmount.ts:53toExact‚Äã‚ñ∏ toExact(format?): stringParameters‚ÄãNameTypeformatobjectReturns‚ÄãstringDefined in‚Äãentities/fractions/currencyAmount.ts:86toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformat?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/currencyAmount.ts:77toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/currencyAmount.ts:69fromFractionalAmount‚Äã‚ñ∏ Static fromFractionalAmount<T>(currency, numerator, denominator): CurrencyAmount<T>Construct a currency amount with a denominator that is not equal to 1Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currencynumeratorBigintIshthe numerator of the fractional token amountdenominatorBigintIshthe denominator of the fractional token amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:32fromRawAmount‚Äã‚ñ∏ Static fromRawAmount<T>(currency, rawAmount): CurrencyAmount<T>Returns a new currency amount instance from the unitless amount of token, i.e. the raw amountType parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currency in the amountrawAmountBigintIshthe raw token or ether amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:22Helpful?PreviousOverviewNextEtherType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiescurrencydecimalScaledenominatornumeratorAccessorsasFractionquotientremainderwrappedMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
517,p.org sdk v3 reference classes TickList#validatelist,"p.org sdk v3 reference classes TickList#validatelist.    TickList | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickListHelpful?On this pageTickList@uniswap/v3-sdk / Exports / TickListClass: TickListUtility methods for interacting with sorted lists of ticksTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãbinarySearchgetTickisAtOrAboveLargestisBelowSmallestnextInitializedTicknextInitializedTickWithinOneWordvalidateListConstructors‚Äãconstructor‚Äã‚Ä¢ Private new TickList()Cannot be constructedDefined in‚Äãutils/tickList.ts:18Methods‚ÄãbinarySearch‚Äã‚ñ∏ Static Private binarySearch(ticks, tick): numberFinds the largest tick in the list of ticks that is less than or equal to tickParameters‚ÄãNameTypeDescriptionticksreadonly Tick[]list of ticksticknumbertick to find the largest tick that is less than or equal to tickReturns‚ÄãnumberDefined in‚Äãutils/tickList.ts:62getTick‚Äã‚ñ∏ Static getTick(ticks, index): TickParameters‚ÄãNameTypeticksreadonly Tick[]indexnumberReturns‚ÄãTickDefined in‚Äãutils/tickList.ts:50isAtOrAboveLargest‚Äã‚ñ∏ Static isAtOrAboveLargest(ticks, tick): booleanParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberReturns‚ÄãbooleanDefined in‚Äãutils/tickList.ts:45isBelowSmallest‚Äã‚ñ∏ Static isBelowSmallest(ticks, tick): booleanParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberReturns‚ÄãbooleanDefined in‚Äãutils/tickList.ts:40nextInitializedTick‚Äã‚ñ∏ Static nextInitializedTick(ticks, tick, lte): TickParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberltebooleanReturns‚ÄãTickDefined in‚Äãutils/tickList.ts:83nextInitializedTickWithinOneWord‚Äã‚ñ∏ Static nextInitializedTickWithinOneWord(ticks, tick, lte, tickSpacing): [number, boolean]Parameters‚ÄãNameTypeticksreadonly Tick[]ticknumberltebooleantickSpacingnumberReturns‚Äã[number, boolean]Defined in‚Äãutils/tickList.ts:101validateList‚Äã‚ñ∏ Static validateList(ticks, tickSpacing): voidParameters‚ÄãNameTypeticksTick[]tickSpacingnumberReturns‚ÄãvoidDefined in‚Äãutils/tickList.ts:20Helpful?PreviousTickLibraryNextTickListDataProviderTable of contentsConstructorsMethodsConstructorsconstructorMethodsbinarySearchgetTickisAtOrAboveLargestisBelowSmallestnextInitializedTicknextInitializedTickWithinOneWordvalidateListDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
518,p.org contracts v2 guides smart contract integration getting pair addresses,"p.org contracts v2 guides smart contract integration getting pair addresses.    Pair Addresses | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationSmart Contract Quick startImplement a SwapProviding LiquidityBuilding an OracleFlash SwapsPair AddressesSupporting meta transactionsTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolGuidesSmart Contract IntegrationPair AddressesHelpful?On this pagegetPairThe most obvious way to get the address for a pair is to call getPair on the factory. If the pair exists, this function will return its address, else address(0) (0x0000000000000000000000000000000000000000).The ""canonical"" way to determine whether or not a pair exists.Requires an on-chain lookup.CREATE2Thanks to some fancy footwork in the factory, we can also compute pair addresses without any on-chain lookups because of CREATE2. The following values are required for this technique:addressThe factory addresssaltkeccak256(abi.encodePacked(token0, token1))keccak256(init_code)0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845ftoken0 must be strictly less than token1 by sort order.Can be computed offline.Requires the ability to perform keccak256.Examples‚ÄãSolidity‚Äãaddress factory = 0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f;address token0 = 0xCAFE000000000000000000000000000000000000; // change me!address token1 = 0xF00D000000000000000000000000000000000000; // change me!address pair = address(uint(keccak256(abi.encodePacked( hex'ff', factory, keccak256(abi.encodePacked(token0, token1)), hex'96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f'))));CopyEdit this pageHelpful?PreviousFlash SwapsNextSupporting meta transactionsExamplesSolidityDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
519,p.org sdk v3 reference classes Staker,"p.org sdk v3 reference classes Staker.    Staker | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesStakerHelpful?On this pageStaker@uniswap/v3-sdk / Exports / StakerClass: StakerTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINCENTIVE_KEY_ABIINTERFACEMethods‚Äã_encodeIncentiveKeycollectRewardsencodeClaimencodeDepositwithdrawTokenConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new Staker()Defined in‚Äãstaker.ts:72Properties‚ÄãINCENTIVE_KEY_ABI‚Äã‚ñ™ Static Private INCENTIVE_KEY_ABI: string = 'tuple(address rewardToken, address pool, uint256 startTime, uint256 endTime, address refundee)'Defined in‚Äãstaker.ts:73INTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚Äãstaker.ts:70Methods‚Äã_encodeIncentiveKey‚Äã‚ñ∏ Static Private _encodeIncentiveKey(incentiveKey): ObjectParameters‚ÄãNameTypeDescriptionincentiveKeyIncentiveKeyAn IncentiveKey which represents a unique staking program.Returns‚ÄãObjectAn encoded IncentiveKey to be read by ethersDefined in‚Äãstaker.ts:194collectRewards‚Äã‚ñ∏ Static collectRewards(incentiveKeys, options): MethodParametersNote: A tokenId can be staked in many programs but to claim rewards and continue the program you must unstake, claim, and then restake.Parameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]An IncentiveKey or array of IncentiveKeys that tokenId is staked in. Input an array of IncentiveKeys to claim rewards for each program.optionsClaimOptionsClaimOptions to specify tokenId, recipient, and amount wanting to collect. Note that you can only specify one amount and one recipient across the various programs if you are collecting from multiple programs at once.Returns‚ÄãMethodParametersDefined in‚Äãstaker.ts:107encodeClaim‚Äã‚ñ∏ Static Private encodeClaim(incentiveKey, options): string[]To claim rewards, must unstake and then claim.Parameters‚ÄãNameTypeDescriptionincentiveKeyIncentiveKeyThe unique identifier of a staking program.optionsClaimOptionsOptions for producing the calldata to claim. Can't claim unless you unstake.Returns‚Äãstring[]The calldatas for 'unstakeToken' and 'claimReward'.Defined in‚Äãstaker.ts:82encodeDeposit‚Äã‚ñ∏ Static encodeDeposit(incentiveKeys): stringParameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]A single IncentiveKey or array of IncentiveKeys to be encoded and used in the data parameter in safeTransferFromReturns‚ÄãstringAn IncentiveKey as a stringDefined in‚Äãstaker.ts:173withdrawToken‚Äã‚ñ∏ Static withdrawToken(incentiveKeys, withdrawOptions): MethodParametersParameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]A list of incentiveKeys to unstake from. Should include all incentiveKeys (unique staking programs) that options.tokenId is staked in.withdrawOptionsFullWithdrawOptionsOptions for producing claim calldata and withdraw calldata. Can't withdraw without unstaking all programs for tokenId.Returns‚ÄãMethodParametersCalldata for unstaking, claiming, and withdrawing.Defined in‚Äãstaker.ts:136Helpful?PreviousSqrtPriceMathNextSwapMathTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINCENTIVE_KEY_ABIINTERFACEMethods_encodeIncentiveKeycollectRewardsencodeClaimencodeDepositwithdrawTokenDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
520,p.org sdk v3 reference modules.md,p.org sdk v3 reference modules.md. 
521,p.org sdk v3 reference interfaces MethodParameters,p.org sdk v3 reference interfaces MethodParameters.    MethodParameters | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesMethodParametersHelpful?On this pageMethodParameters@uniswap/v3-sdk / Exports / MethodParametersInterface: MethodParametersGenerated method parameters for executing a call.Table of contents‚ÄãProperties‚ÄãcalldatavalueProperties‚Äãcalldata‚Äã‚Ä¢ calldata: stringThe hex encoded calldata to perform the given operationDefined in‚Äãutils/calldata.ts:11value‚Äã‚Ä¢ value: stringThe amount of ether (wei) to send in hex.Defined in‚Äãutils/calldata.ts:15Helpful?PreviousIncreaseSpecificOptionsNextMintSpecificOptionsTable of contentsPropertiesPropertiescalldatavalueDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
522,p.org contracts v3 reference periphery staker libraries NFTPositionInfo,"p.org contracts v3 reference periphery staker libraries NFTPositionInfo.    NFTPositionInfo | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerUniswap V3 Staker DesignUniswap V3 Staker ContractInterfacesLibrariesIncentiveIdNFTPositionInfoRewardMathTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryStakerLibrariesNFTPositionInfoHelpful?On this pageNFTPositionInfoEncapsulates the logic for getting info about a NFT token IDFunctions‚ÄãgetPositionInfo‚Äã function getPositionInfo( contract IUniswapV3Factory factory, contract INonfungiblePositionManager nonfungiblePositionManager, uint256 tokenId ) internal view returns (contract IUniswapV3Pool pool, int24 tickLower, int24 tickUpper, uint128 liquidity)CopyParameters:‚ÄãNameTypeDescriptionfactorycontract IUniswapV3FactoryThe address of the Uniswap V3 Factory used in computing the pool addressnonfungiblePositionManagercontract INonfungiblePositionManagerThe address of the nonfungible position manager to querytokenIduint256The unique identifier of an Uniswap V3 LP tokenReturn Values:‚ÄãNameTypeDescriptionpoolIUniswapV3PoolThe address of the Uniswap V3 pooltickLowerint24The lower tick of the Uniswap V3 positiontickUpperint24The upper tick of the Uniswap V3 positionliquidityuint128The amount of liquidity stakedEdit this pageHelpful?PreviousIncentiveIdNextRewardMathFunctionsgetPositionInfoDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
523,p.org sdk v3 reference interfaces AllowedPermitArguments#expiry,p.org sdk v3 reference interfaces AllowedPermitArguments#expiry.    AllowedPermitArguments | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesAllowedPermitArgumentsHelpful?On this pageAllowedPermitArguments@uniswap/v3-sdk / Exports / AllowedPermitArgumentsInterface: AllowedPermitArgumentsTable of contents‚ÄãProperties‚ÄãexpirynoncersvProperties‚Äãexpiry‚Äã‚Ä¢ expiry: BigintIshDefined in‚ÄãselfPermit.ts:19nonce‚Äã‚Ä¢ nonce: BigintIshDefined in‚ÄãselfPermit.ts:18r‚Äã‚Ä¢ r: stringDefined in‚ÄãselfPermit.ts:16s‚Äã‚Ä¢ s: stringDefined in‚ÄãselfPermit.ts:17v‚Äã‚Ä¢ v: 0 | 1 | 27 | 28Defined in‚ÄãselfPermit.ts:15Helpful?PreviousFeeAmountNextBestTradeOptionsTable of contentsPropertiesPropertiesexpirynoncersvDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
524,p.org sdk v3 reference interfaces IncentiveKey#endtime,p.org sdk v3 reference interfaces IncentiveKey#endtime.    IncentiveKey | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesIncentiveKeyHelpful?On this pageIncentiveKey@uniswap/v3-sdk / Exports / IncentiveKeyInterface: IncentiveKeyRepresents a unique staking program.Table of contents‚ÄãProperties‚ÄãendTimepoolrefundeerewardTokenstartTimeProperties‚ÄãendTime‚Äã‚Ä¢ endTime: BigintIshThe time that the incentive program ends.Defined in‚Äãstaker.ts:28pool‚Äã‚Ä¢ pool: PoolThe pool that the staked positions must provide in.Defined in‚Äãstaker.ts:20refundee‚Äã‚Ä¢ refundee: stringThe address which receives any remaining reward tokens at endTime.Defined in‚Äãstaker.ts:32rewardToken‚Äã‚Ä¢ rewardToken: TokenThe token rewarded for participating in the staking program.Defined in‚Äãstaker.ts:16startTime‚Äã‚Ä¢ startTime: BigintIshThe time when the incentive program begins.Defined in‚Äãstaker.ts:24Helpful?PreviousFeeOptionsNextIncreaseSpecificOptionsTable of contentsPropertiesPropertiesendTimepoolrefundeerewardTokenstartTimeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
525,p.org sdk core reference classes Ether#onchain,"p.org sdk core reference classes Ether#onchain.    Ether | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesEtherHelpful?On this pageEther@uniswap/sdk-core / Exports / EtherClass: EtherEther is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnetsHierarchy‚ÄãNativeCurrency‚Ü≥ EtherTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãchainIddecimalsisNativeisTokennamesymbol_etherCacheAccessors‚ÄãwrappedMethods‚ÄãequalsonChainConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new Ether(chainId)Parameters‚ÄãNameTypechainIdnumberOverrides‚ÄãNativeCurrency.constructorDefined in‚Äãentities/ether.ts:11Properties‚ÄãchainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãNativeCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãNativeCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: trueInherited from‚ÄãNativeCurrency.isNativeDefined in‚Äãentities/nativeCurrency.ts:7isToken‚Äã‚Ä¢ Readonly isToken: falseInherited from‚ÄãNativeCurrency.isTokenDefined in‚Äãentities/nativeCurrency.ts:8name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãNativeCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãNativeCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29_etherCache‚Äã‚ñ™ Static Private _etherCache: Object = {}Index signature‚Äã‚ñ™ [chainId: number]: EtherDefined in‚Äãentities/ether.ts:21Accessors‚Äãwrapped‚Äã‚Ä¢ get wrapped(): TokenReturn the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to be used in UniswapReturns‚ÄãTokenOverrides‚ÄãNativeCurrency.wrappedDefined in‚Äãentities/ether.ts:15Methods‚Äãequals‚Äã‚ñ∏ equals(other): booleanReturns whether this currency is functionally equivalent to the other currencyParameters‚ÄãNameTypeDescriptionotherCurrencythe other currencyReturns‚ÄãbooleanOverrides‚ÄãNativeCurrency.equalsDefined in‚Äãentities/ether.ts:27onChain‚Äã‚ñ∏ Static onChain(chainId): EtherParameters‚ÄãNameTypechainIdnumberReturns‚ÄãEtherDefined in‚Äãentities/ether.ts:23Helpful?PreviousCurrencyAmountNextFractionHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertieschainIddecimalsisNativeisTokennamesymbol_etherCacheAccessorswrappedMethodsequalsonChainDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
526,p.org sdk v3 guides liquidity minting,"p.org sdk v3 guides liquidity minting.    Minting a Position | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityMinting a PositionAdding & Removing LiquidityCollecting FeesSwapping and Adding LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKGuidesPooling LiquidityMinting a PositionHelpful?On this pageMinting a PositionIntroduction‚ÄãThis guide will cover how to create (or mint) a liquidity position on the Uniswap V3 protocol. It is based on the minting a position code example, found in the Uniswap code examples repository. To run this example, check out the examples's README and follow the setup instructions.infoIf you need a briefer on the SDK and to learn more about how these guides connect to the examples repository, please visit our background page!In the Uniswap V3 protocol, liquidity positions are represented using non-fungible tokens. In this guide we will use the NonfungiblePositionManager class to help us mint a liquidity position for the USDC - DAI pair. The inputs to our guide are the two tokens that we are pooling for, the amount of each token we are pooling for and the Pool fee.The guide will cover:Giving approval to transfer our tokensCreating an instance of a PoolCalculating our Position from our input tokensConfiguring and executing our minting transactionAt the end of the guide, given the inputs above, we should be able to mint a liquidity position with the press of a button and view the position on the UI of the web application.For this guide, the following Uniswap packages are used:@uniswap/v3-sdk@uniswap/sdk-core@uniswap/smart-order-routerThe core code of this guide can be found in mintPosition()Giving approval to transfer our tokens‚ÄãThe first step is to give approval to the protocol's NonfungiblePositionManager to transfer our tokens:Approving our tokens for transferringloading...CopyView on GithubThe logic to achieve that is wrapped in the getTokenTransferApprovals function. In short, since both USDC and DAI are ERC20 tokens, we setup a reference to their smart contracts and call the approve function:Setting up an ERC20 contract reference and approvingloading...CopyView on GithubCreating an instance of a Pool‚ÄãHaving approved the transfer of our tokens, we now need to get data about the pool for which we will provide liquidity, in order to instantiate a Pool class.To start, we compute our Pool's address by using a helper function and passing in the unique identifiers of a Pool - the two tokens and the Pool fee. The fee input parameter represents the swap fee that is distributed to all in range liquidity at the time of the swap:Computing the Pool's addressloading...CopyView on GithubThen, we get the Pool's data by creating a reference to the Pool's smart contract and accessing its methods:Setting up a Pool contract reference and fetching current state dataloading...CopyView on GithubHaving collected the required data, we can now create an instance of the Pool class:Fetching pool data and creating an instance of the Pool classloading...CopyView on GithubCalculating our Position from our input tokens‚ÄãHaving created the instance of the Pool class, we can now use that to create an instance of a Position class, which represents the price range for a specific pool that LPs choose to provide in:Create a Position representation instanceloading...CopyView on GithubWe use the fromAmounts static function of the Position class to create an instance of it, which uses the following parameters:The tickLower and tickUpper parameters specify the price range at which to provide liquidity. This example calls nearestUsableTick to get the current useable tick and adjust the lower parameter to be below it by two tickSpacing and the upper to be above it by two tickSpacing. This guarantees that the provided liquidity is ""in range"", meaning it will be earning fees upon minting this positionamount0 and amount1 define the maximum amount of currency the liquidity position can use. In this example, we supply these from our configuration parameters.Given those parameters, fromAmounts will attempt to calculate the maximum amount of liquidity we can supply.Configuring and executing our minting transaction‚ÄãThe Position instance is then passed as input to the NonfungiblePositionManager's addCallParameters function. The function also requires an AddLiquidityOptions object as its second parameter. This is either of type MintOptions for minting a new position or IncreaseOptions for adding liquidity to an existing position. For this example, we're using a MintOptions to create our position.Getting the transaction calldata and parametersloading...CopyView on GithubThe function returns the calldata as well as the value required to execute the transaction:Submitting the Position NFT minting transactionloading...CopyView on GithubThe effect of the transaction is to mint a new Position NFT. We should see a new position with liquidity in our list of positions.Next Steps‚ÄãOnce you have minted a position, our next guide (Adding and Removing Liquidity) will demonstrate how you can add and remove liquidity from that minted position!Helpful?PreviousRouting a SwapNextAdding & Removing LiquidityIntroductionGiving approval to transfer our tokensCreating an instance of a PoolCalculating our Position from our input tokensConfiguring and executing our minting transactionNext StepsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
527,p.org contracts v3 reference core libraries Position,"p.org contracts v3 reference core libraries Position.    Position | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesLibrariesBitMathFixedPoint128FixedPoint96FullMathLiquidityMathLowGasSafeMathOraclePositionSafeCastSecondsOutsideSqrtPriceMathSwapMathTickTickBitmapTickMathTransferHelperUnsafeMathGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreLibrariesPositionHelpful?On this pagePositionPositions represent an owner address' liquidity between a lower and upper tick boundaryPositions store additional state for tracking fees owed to the positionFunctions‚Äãget‚Äã function get( mapping(bytes32 => struct Position.Info) self, address owner, int24 tickLower, int24 tickUpper ) internal view returns (struct Position.Info position)CopyReturns the Info struct of a position, given an owner and position boundariesParameters:‚ÄãNameTypeDescriptionselfmapping(bytes32 => struct Position.Info)The mapping containing all user positionsowneraddressThe address of the position ownertickLowerint24The lower tick boundary of the positiontickUpperint24The upper tick boundary of the positionReturn Values:‚ÄãNameTypeDescriptionpositionstruct Position.InfoThe position info struct of the given owners' positionupdate‚Äã function update( struct Position.Info self, int128 liquidityDelta, uint256 feeGrowthInside0X128, uint256 feeGrowthInside1X128 ) internalCopyCredits accumulated fees to a user's positionParameters:‚ÄãNameTypeDescriptionselfstruct Position.InfoThe mapping containing all user positionsliquidityDeltaint128The change in pool liquidity as a result of the position updatefeeGrowthInside0X128uint256The all-time fee growth in token0, per unit of liquidity, inside the position's tick boundariesfeeGrowthInside1X128uint256The all-time fee growth in token1, per unit of liquidity, inside the position's tick boundariesEdit this pageHelpful?PreviousOracleNextSafeCastFunctionsgetupdateDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
528,p.org contracts v2 concepts core concepts flash swaps,"p.org contracts v2 concepts core concepts flash swaps.    Flash Swaps | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsSwapsPoolsFlash SwapsOraclesAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolConceptsCore ConceptsFlash SwapsHelpful?On this pageFlash SwapsUniswap flash swaps¬†allow you to withdraw up to the full reserves of any ERC20 token on Uniswap and execute arbitrary logic at no upfront cost, provided that by the end of the transaction you either:pay for the withdrawn ERC20 tokens with the corresponding pair tokensreturn the withdrawn ERC20 tokens along with a small feeFlash swaps are incredibly useful because they obviate upfront capital requirements and unnecessary order-of-operations constraints¬†for multi-step transactions involving Uniswap.ExamplesCapital Free Arbitrage‚ÄãOne particularly interesting use case for flash swaps is capital-free¬†arbitrage. It's well-known that an integral part of Uniswap's design is to create incentives for arbitrageurs to trade the Uniswap price to a ""fair"" market price. While game-theoretically sound, this strategy is accessible only to those with sufficient capital to take advantage of arbitrage opportunities. Flash swaps remove this barrier entirely, effectively democratizing arbitrage.Imagine a scenario where the cost of buying 1 ETH on Uniswap is 200 DAI (which is calculated by calling getAmountIn with 1 ETH specified as an exact output), and on Oasis (or any other trading venue), 1 ETH buys 220 DAI. To anyone with 200 DAI available, this situation represents a risk-free profit of 20 DAI. Unfortunately, you may not have 200 DAI lying around. With flash swaps, however, this risk-free profit is available for anyone to take as long as they're able to pay gas fees.Withdrawing ETH from Uniswap‚ÄãThe first step is to optimistically withdraw 1 ETH from Uniswap via a flash swap. This will serve as the capital that we use to execute our arbitrage. Note that in this scenario, we're assuming that:1 ETH is the pre-calculated profit-maximizing tradeThe price has not changed on Uniswap or Oasis since our calculationIt may be the case that we'd like to calculate the profit-maximizing trade on-chain at the moment of execution, which is robust to price movements. This can be somewhat complex, depending on the strategy being executed. However, one common strategy is trading as profitably as possible against a fixed external price. (This price may be e.g., the average execution price of one or more orders on Oasis.) If the Uniswap market price is far enough above or below this external price, the following example contains code that calculates the amount to trade over Uniswap for maximum profit: ExampleSwapToPrice.sol.Trade at External Venue‚ÄãOnce we've obtained our temporary capital of 1 ETH from Uniswap, we now can trade this for 220 DAI on Oasis. Once we've received the DAI, we need to pay Uniswap back. We've mentioned that the amount required to cover 1 ETH is 200 DAI, calculated via getAmountIn. So, after sending 200 of the DAI back to the Uniswap pair, you're left with 20 DAI of profit!Instant Leverage‚ÄãFlash swaps can be used to improve the efficiency of levering up using lending protocols and Uniswap.Consider Maker in its simplest form: a system which accepts ETH as collateral and allows DAI to be minted against it while ensuring that the value of the ETH never drops below 150% of the value of the DAI.Say we use this system to deposit a principal amount of 3 ETH, and mint the maximum amount of DAI. At a price of 1 ETH / 200 DAI, we receive 400 DAI. In theory, we could lever this position up by selling the DAI for more ETH, depositing this ETH, minting the maximum amount of DAI (which would be less this time), and repeating until we've reached our desired leverage level.It's quite simple to use Uniswap as a liquidity source for the DAI-to-ETH component of this process. However, looping through protocols in this way isn't particularly elegant, and can be gas-intensive.Luckily, flash swaps enable us to withdraw the full ETH amount upfront. If we wanted 2x leverage against our 3 ETH principal, we could simply request 3 ETH in a flash swap and deposit 6 ETH into Maker. This gives us the ability to mint 800 DAI. If we mint as much as we need to cover our flash swap (say 605), the remainder serves as a safety margin against price movements.Developer resourcesTo see how to integrate a flash swap in your smart contract read Using Flash Swaps.Edit this pageHelpful?PreviousPoolsNextOraclesCapital Free ArbitrageWithdrawing ETH from UniswapTrade at External VenueInstant LeverageDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
529,p.org sdk core reference classes Ether#name,"p.org sdk core reference classes Ether#name.    Ether | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesEtherHelpful?On this pageEther@uniswap/sdk-core / Exports / EtherClass: EtherEther is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnetsHierarchy‚ÄãNativeCurrency‚Ü≥ EtherTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãchainIddecimalsisNativeisTokennamesymbol_etherCacheAccessors‚ÄãwrappedMethods‚ÄãequalsonChainConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new Ether(chainId)Parameters‚ÄãNameTypechainIdnumberOverrides‚ÄãNativeCurrency.constructorDefined in‚Äãentities/ether.ts:11Properties‚ÄãchainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãNativeCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãNativeCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: trueInherited from‚ÄãNativeCurrency.isNativeDefined in‚Äãentities/nativeCurrency.ts:7isToken‚Äã‚Ä¢ Readonly isToken: falseInherited from‚ÄãNativeCurrency.isTokenDefined in‚Äãentities/nativeCurrency.ts:8name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãNativeCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãNativeCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29_etherCache‚Äã‚ñ™ Static Private _etherCache: Object = {}Index signature‚Äã‚ñ™ [chainId: number]: EtherDefined in‚Äãentities/ether.ts:21Accessors‚Äãwrapped‚Äã‚Ä¢ get wrapped(): TokenReturn the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to be used in UniswapReturns‚ÄãTokenOverrides‚ÄãNativeCurrency.wrappedDefined in‚Äãentities/ether.ts:15Methods‚Äãequals‚Äã‚ñ∏ equals(other): booleanReturns whether this currency is functionally equivalent to the other currencyParameters‚ÄãNameTypeDescriptionotherCurrencythe other currencyReturns‚ÄãbooleanOverrides‚ÄãNativeCurrency.equalsDefined in‚Äãentities/ether.ts:27onChain‚Äã‚ñ∏ Static onChain(chainId): EtherParameters‚ÄãNameTypechainIdnumberReturns‚ÄãEtherDefined in‚Äãentities/ether.ts:23Helpful?PreviousCurrencyAmountNextFractionHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertieschainIddecimalsisNativeisTokennamesymbol_etherCacheAccessorswrappedMethodsequalsonChainDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
530,p.org sdk core reference classes NativeCurrency#name,"p.org sdk core reference classes NativeCurrency#name.    NativeCurrency | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesNativeCurrencyHelpful?On this pageNativeCurrency@uniswap/sdk-core / Exports / NativeCurrencyClass: NativeCurrencyRepresents the native currency of the chain on which it resides, e.g.Hierarchy‚ÄãBaseCurrency‚Ü≥ NativeCurrency‚Ü≥‚Ü≥ EtherTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãchainIddecimalsisNativeisTokennamesymbolAccessors‚ÄãwrappedMethods‚ÄãequalsConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new NativeCurrency(chainId, decimals, symbol?, name?)Constructs an instance of the base class BaseCurrency.Parameters‚ÄãNameTypeDescriptionchainIdnumberthe chain ID on which this currency residesdecimalsnumberdecimals of the currencysymbol?stringsymbol of the currencyname?stringof the currencyInherited from‚ÄãBaseCurrency.constructorDefined in‚Äãentities/baseCurrency.ts:42Properties‚ÄãchainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãBaseCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãBaseCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: trueOverrides‚ÄãBaseCurrency.isNativeDefined in‚Äãentities/nativeCurrency.ts:7isToken‚Äã‚Ä¢ Readonly isToken: falseOverrides‚ÄãBaseCurrency.isTokenDefined in‚Äãentities/nativeCurrency.ts:8name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãBaseCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãBaseCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29Accessors‚Äãwrapped‚Äã‚Ä¢ Abstract get wrapped(): TokenReturn the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to be used in UniswapReturns‚ÄãTokenInherited from‚ÄãBaseCurrency.wrappedDefined in‚Äãentities/baseCurrency.ts:62Methods‚Äãequals‚Äã‚ñ∏ Abstract equals(other): booleanReturns whether this currency is functionally equivalent to the other currencyParameters‚ÄãNameTypeDescriptionotherCurrencythe other currencyReturns‚ÄãbooleanInherited from‚ÄãBaseCurrency.equalsDefined in‚Äãentities/baseCurrency.ts:56Helpful?PreviousFractionNextPercentHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertieschainIddecimalsisNativeisTokennamesymbolAccessorswrappedMethodsequalsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
531,p.org contracts v2 reference smart contracts router 02#weth,"p.org contracts v2 reference smart contracts router 02#weth.    Router02 | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsRouter02Helpful?On this pageRouter02Because routers are stateless and do not hold token balances, they can be replaced safely and trustlessly, if necessary. This may happen if more efficient smart contract patterns are discovered, or if additional functionality is desired. For this reason, routers have release numbers, starting at 01. This is currently recommended release, 02.CodeUniswapV2Router02.solAddressUniswapV2Router02 is deployed at 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D on the Ethereum mainnet, and the Ropsten, Rinkeby, G√∂rli, and Kovan testnets. It was built from commit 6961711.Read-Only Functionsfactory‚Äãfunction factory() external pure returns (address);CopyReturns factory address.WETH‚Äãfunction WETH() external pure returns (address);CopyReturns the canonical WETH address on the Ethereum mainnet, or the Ropsten, Rinkeby, G√∂rli, or Kovan testnets.quote‚ÄãSee quote.getAmountOut‚ÄãSee getAmountOut.getAmountIn‚ÄãSee getAmountIn.getAmountsOut‚Äãfunction getAmountsOut(uint amountIn, address[] memory path) public view returns (uint[] memory amounts);CopySee getAmountsOut.getAmountsIn‚Äãfunction getAmountsIn(uint amountOut, address[] memory path) public view returns (uint[] memory amounts);CopySee getAmountsIn.State-Changing FunctionsaddLiquidity‚Äãfunction addLiquidity( address tokenA, address tokenB, uint amountADesired, uint amountBDesired, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB, uint liquidity);CopyAdds liquidity to an ERC-20‚áÑERC-20 pool.To cover all possible scenarios, msg.sender should have already given the router an allowance of at least amountADesired/amountBDesired on tokenA/tokenB.Always adds assets at the ideal ratio, according to the price when the transaction is executed.If a pool for the passed tokens does not exists, one is created automatically, and exactly amountADesired/amountBDesired tokens are added.NameTypetokenAaddressA pool token.tokenBaddressA pool token.amountADesireduintThe amount of tokenA to add as liquidity if the B/A price is <= amountBDesired/amountADesired (A depreciates).amountBDesireduintThe amount of tokenB to add as liquidity if the A/B price is <= amountADesired/amountBDesired (B depreciates).amountAMinuintBounds the extent to which the B/A price can go up before the transaction reverts. Must be <= amountADesired.amountBMinuintBounds the extent to which the A/B price can go up before the transaction reverts. Must be <= amountBDesired.toaddressRecipient of the liquidity tokens.deadlineuintUnix timestamp after which the transaction will revert.amountAuintThe amount of tokenA sent to the pool.amountBuintThe amount of tokenB sent to the pool.liquidityuintThe amount of liquidity tokens minted.addLiquidityETH‚Äãfunction addLiquidityETH( address token, uint amountTokenDesired, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external payable returns (uint amountToken, uint amountETH, uint liquidity);CopyAdds liquidity to an ERC-20‚áÑWETH pool with ETH.To cover all possible scenarios, msg.sender should have already given the router an allowance of at least amountTokenDesired on token.Always adds assets at the ideal ratio, according to the price when the transaction is executed.msg.value is treated as a amountETHDesired.Leftover ETH, if any, is returned to msg.sender.If a pool for the passed token and WETH does not exists, one is created automatically, and exactly amountTokenDesired/msg.value tokens are added.NameTypetokenaddressA pool token.amountTokenDesireduintThe amount of token to add as liquidity if the WETH/token price is <= msg.value/amountTokenDesired (token depreciates).msg.value (amountETHDesired)uintThe amount of ETH to add as liquidity if the token/WETH price is <= amountTokenDesired/msg.value (WETH depreciates).amountTokenMinuintBounds the extent to which the WETH/token price can go up before the transaction reverts. Must be <= amountTokenDesired.amountETHMinuintBounds the extent to which the token/WETH price can go up before the transaction reverts. Must be <= msg.value.toaddressRecipient of the liquidity tokens.deadlineuintUnix timestamp after which the transaction will revert.amountTokenuintThe amount of token sent to the pool.amountETHuintThe amount of ETH converted to WETH and sent to the pool.liquidityuintThe amount of liquidity tokens minted.removeLiquidity‚Äãfunction removeLiquidity( address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB);CopyRemoves liquidity from an ERC-20‚áÑERC-20 pool.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenAaddressA pool token.tokenBaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountAMinuintThe minimum amount of tokenA that must be received for the transaction not to revert.amountBMinuintThe minimum amount of tokenB that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountAuintThe amount of tokenA received.amountBuintThe amount of tokenB received.removeLiquidityETH‚Äãfunction removeLiquidityETH( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external returns (uint amountToken, uint amountETH);CopyRemoves liquidity from an ERC-20‚áÑWETH pool and receive ETH.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountTokenuintThe amount of token received.amountETHuintThe amount of ETH received.removeLiquidityWithPermit‚Äãfunction removeLiquidityWithPermit( address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountA, uint amountB);CopyRemoves liquidity from an ERC-20‚áÑERC-20 pool without pre-approval, thanks to permit.NameTypetokenAaddressA pool token.tokenBaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountAMinuintThe minimum amount of tokenA that must be received for the transaction not to revert.amountBMinuintThe minimum amount of tokenB that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountAuintThe amount of tokenA received.amountBuintThe amount of tokenB received.removeLiquidityETHWithPermit‚Äãfunction removeLiquidityETHWithPermit( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountToken, uint amountETH);CopyRemoves liquidity from an ERC-20‚áÑWETTH pool and receive ETH without pre-approval, thanks to permit.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountTokenuintThe amount of token received.amountETHuintThe amount of ETH received.removeLiquidityETHSupportingFeeOnTransferTokens‚Äãfunction removeLiquidityETHSupportingFeeOnTransferTokens( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external returns (uint amountETH);CopyIdentical to removeLiquidityETH, but succeeds for tokens that take a fee on transfer.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountETHuintThe amount of ETH received.removeLiquidityETHWithPermitSupportingFeeOnTransferTokens‚Äãfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountETH);CopyIdentical to removeLiquidityETHWithPermit, but succeeds for tokens that take a fee on transfer.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountETHuintThe amount of ETH received.swapExactTokensForTokens‚Äãfunction swapExactTokensForTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopySwaps an exact amount of input tokens for as many output tokens as possible, along the route determined by the path. The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountIn on the input token.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapTokensForExactTokens‚Äãfunction swapTokensForExactTokens( uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopyReceive an exact amount of output tokens for as few input tokens as possible, along the route determined by the path. The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate tokens to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountInMax on the input token.NameTypeamountOutuintThe amount of output tokens to receive.amountInMaxuintThe maximum amount of input tokens that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactETHForTokens‚Äãfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts);CopySwaps an exact amount of ETH for as many output tokens as possible, along the route determined by the path. The first element of path must be WETH, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).NameTypemsg.value (amountIn)uintThe amount of ETH to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapTokensForExactETH‚Äãfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopyReceive an exact amount of ETH for as few input tokens as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountInMax on the input token.If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountOutuintThe amount of ETH to receive.amountInMaxuintThe maximum amount of input tokens that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of ETH.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactTokensForETH‚Äãfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopySwaps an exact amount of tokens for as much ETH as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the ETH.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapETHForExactTokens‚Äãfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts);CopyReceive an exact amount of tokens for as little ETH as possible, along the route determined by the path. The first element of path must be WETH, the last is the output token and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).Leftover ETH, if any, is returned to msg.sender.NameTypeamountOutuintThe amount of tokens to receive.msg.value (amountInMax)uintThe maximum amount of ETH that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactTokensForTokensSupportingFeeOnTransferTokens‚Äãfunction swapExactTokensForTokensSupportingFeeOnTransferTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external;CopyIdentical to swapExactTokensForTokens, but succeeds for tokens that take a fee on transfer.msg.sender should have already given the router an allowance of at least amountIn on the input token.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.swapExactETHForTokensSupportingFeeOnTransferTokens‚Äãfunction swapExactETHForTokensSupportingFeeOnTransferTokens( uint amountOutMin, address[] calldata path, address to, uint deadline) external payable;CopyIdentical to swapExactETHForTokens, but succeeds for tokens that take a fee on transfer.NameTypemsg.value (amountIn)uintThe amount of ETH to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.swapExactTokensForETHSupportingFeeOnTransferTokens‚Äãfunction swapExactTokensForETHSupportingFeeOnTransferTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external;CopyIdentical to swapExactTokensForETH, but succeeds for tokens that take a fee on transfer.If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the ETH.deadlineuintUnix timestamp after which the transaction will revert.Interfaceimport '@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol';Copypragma solidity >=0.6.2;interface IUniswapV2Router01 { function factory() external pure returns (address); function WETH() external pure returns (address); function addLiquidity(  address tokenA,  address tokenB,  uint amountADesired,  uint amountBDesired,  uint amountAMin,  uint amountBMin,  address to,  uint deadline ) external returns (uint amountA, uint amountB, uint liquidity); function addLiquidityETH(  address token,  uint amountTokenDesired,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external payable returns (uint amountToken, uint amountETH, uint liquidity); function removeLiquidity(  address tokenA,  address tokenB,  uint liquidity,  uint amountAMin,  uint amountBMin,  address to,  uint deadline ) external returns (uint amountA, uint amountB); function removeLiquidityETH(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external returns (uint amountToken, uint amountETH); function removeLiquidityWithPermit(  address tokenA,  address tokenB,  uint liquidity,  uint amountAMin,  uint amountBMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountA, uint amountB); function removeLiquidityETHWithPermit(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountToken, uint amountETH); function swapExactTokensForTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external returns (uint[] memory amounts); function swapTokensForExactTokens(  uint amountOut,  uint amountInMax,  address[] calldata path,  address to,  uint deadline ) external returns (uint[] memory amounts); function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)  external  payable  returns (uint[] memory amounts); function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)  external  returns (uint[] memory amounts); function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)  external  returns (uint[] memory amounts); function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)  external  payable  returns (uint[] memory amounts); function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB); function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut); function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn); function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts); function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);}interface IUniswapV2Router02 is IUniswapV2Router01 { function removeLiquidityETHSupportingFeeOnTransferTokens(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external returns (uint amountETH); function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountETH); function swapExactTokensForTokensSupportingFeeOnTransferTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external; function swapExactETHForTokensSupportingFeeOnTransferTokens(  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external payable; function swapExactTokensForETHSupportingFeeOnTransferTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external;}CopyABIimport IUniswapV2Router02 from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'Copyhttps://unpkg.com/@uniswap/v2-periphery@1.1.0-beta.0/build/IUniswapV2Router02.jsonEdit this pageHelpful?PreviousRouter01NextCommon ErrorsfactoryWETHquotegetAmountOutgetAmountIngetAmountsOutgetAmountsInaddLiquidityaddLiquidityETHremoveLiquidityremoveLiquidityETHremoveLiquidityWithPermitremoveLiquidityETHWithPermitremoveLiquidityETHSupportingFeeOnTransferTokensremoveLiquidityETHWithPermitSupportingFeeOnTransferTokensswapExactTokensForTokensswapTokensForExactTokensswapExactETHForTokensswapTokensForExactETHswapExactTokensForETHswapETHForExactTokensswapExactTokensForTokensSupportingFeeOnTransferTokensswapExactETHForTokensSupportingFeeOnTransferTokensswapExactTokensForETHSupportingFeeOnTransferTokensDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
532,p.org sdk v3 reference interfaces QuoteOptions#sqrtpricelimitx96,p.org sdk v3 reference interfaces QuoteOptions#sqrtpricelimitx96.    QuoteOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesQuoteOptionsHelpful?On this pageQuoteOptions@uniswap/v3-sdk / Exports / QuoteOptionsInterface: QuoteOptionsOptional arguments to send to the quoter.Table of contents‚ÄãProperties‚ÄãsqrtPriceLimitX96useQuoterV2Properties‚ÄãsqrtPriceLimitX96‚Äã‚Ä¢ Optional sqrtPriceLimitX96: BigintIshThe optional price limit for the trade.Defined in‚Äãquoter.ts:17useQuoterV2‚Äã‚Ä¢ Optional useQuoterV2: booleanThe optional quoter interface to useDefined in‚Äãquoter.ts:22Helpful?PreviousNFTPermitOptionsNextRemoveLiquidityOptionsTable of contentsPropertiesPropertiessqrtPriceLimitX96useQuoterV2DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
533,p.org sdk v3 reference classes Trade# priceimpact,"p.org sdk v3 reference classes Trade# priceimpact.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTradeHelpful?On this pageTrade@uniswap/v3-sdk / Exports / TradeClass: Trade<TInput, TOutput, TTradeType>Represents a trade executed against a set of routes where some percentage of the input is split across each route.Each route has its own set of pools. Pools can not be re-used across routes.Does not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and when it is executed.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessors‚ÄãexecutionPriceinputAmountoutputAmountpriceImpactrouteMethods‚ÄãmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Trade<TInput, TOutput, TTradeType>(__namedParameters)Construct a trade by passing in the pre-computed property valuesType parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyTTradeTypeextends TradeTypeParameters‚ÄãNameType__namedParametersObject__namedParameters.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]__namedParameters.tradeTypeTTradeTypeDefined in‚Äãentities/trade.ts:397Properties‚Äã_executionPrice‚Äã‚Ä¢ Private _executionPrice: undefined | Price<TInput, TOutput>The cached result of the computed execution priceDefined in‚Äãentities/trade.ts:143_inputAmount‚Äã‚Ä¢ Private _inputAmount: undefined | CurrencyAmount<TInput>The cached result of the input amount computationDefined in‚Äãentities/trade.ts:97_outputAmount‚Äã‚Ä¢ Private _outputAmount: undefined | CurrencyAmount<TOutput>The cached result of the output amount computationDefined in‚Äãentities/trade.ts:120_priceImpact‚Äã‚Ä¢ Private _priceImpact: undefined | PercentThe cached result of the price impact computationDefined in‚Äãentities/trade.ts:164swaps‚Äã‚Ä¢ Readonly swaps: { inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]The swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.Defined in‚Äãentities/trade.ts:82tradeType‚Äã‚Ä¢ Readonly tradeType: TTradeTypeThe type of the trade, either exact in or exact out.Defined in‚Äãentities/trade.ts:91Accessors‚ÄãexecutionPrice‚Äã‚Ä¢ get executionPrice(): Price<TInput, TOutput>The price expressed in terms of output amount/input amount.Returns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/trade.ts:148inputAmount‚Äã‚Ä¢ get inputAmount(): CurrencyAmount<TInput>The input amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TInput>Defined in‚Äãentities/trade.ts:102outputAmount‚Äã‚Ä¢ get outputAmount(): CurrencyAmount<TOutput>The output amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TOutput>Defined in‚Äãentities/trade.ts:125priceImpact‚Äã‚Ä¢ get priceImpact(): PercentReturns the percent difference between the route's mid price and the price impactReturns‚ÄãPercentDefined in‚Äãentities/trade.ts:169route‚Äã‚Ä¢ get route(): Route<TInput, TOutput>DeprecatedDeprecated in favor of 'swaps' property. If the trade consists of multiple routes this will return an error.When the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.Returns‚ÄãRoute<TInput, TOutput>Defined in‚Äãentities/trade.ts:73Methods‚ÄãmaximumAmountIn‚Äã‚ñ∏ maximumAmountIn(slippageTolerance, amountIn?): CurrencyAmount<TInput>Get the maximum amount in that can be spent via this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountInCurrencyAmount<TInput>-Returns‚ÄãCurrencyAmount<TInput>The amount inDefined in‚Äãentities/trade.ts:456minimumAmountOut‚Äã‚ñ∏ minimumAmountOut(slippageTolerance, amountOut?): CurrencyAmount<TOutput>Get the minimum amount that must be received from this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountOutCurrencyAmount<TOutput>-Returns‚ÄãCurrencyAmount<TOutput>The amount outDefined in‚Äãentities/trade.ts:438worstExecutionPrice‚Äã‚ñ∏ worstExecutionPrice(slippageTolerance): Price<TInput, TOutput>Return the execution price after accounting for slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentthe allowed tolerated slippageReturns‚ÄãPrice<TInput, TOutput>The execution priceDefined in‚Äãentities/trade.ts:471bestTradeExactIn‚Äã‚ñ∏ Static bestTradeExactIn<TInput, TOutput>(pools, currencyAmountIn, currencyOut, __namedParameters?, currentPools?, nextAmountIn?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_INPUT>[]>Given a list of pools, and a fixed amount in, returns the top maxNumResults trades that go from an input token amount to an output token, making at most maxHops hops. Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyAmountInCurrencyAmount<TInput>undefinedused in recursion; the original value of the currencyAmountIn parametercurrencyOutTOutputundefinedthe desired currency out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountInCurrencyAmount<Currency>currencyAmountInexact amount of input currency to spendbestTradesTrade<TInput, TOutput, EXACT_INPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>[]>The exact in tradeDefined in‚Äãentities/trade.ts:495bestTradeExactOut‚Äã‚ñ∏ Static bestTradeExactOut<TInput, TOutput>(pools, currencyIn, currencyAmountOut, __namedParameters?, currentPools?, nextAmountOut?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>similar to the above method but instead targets a fixed output amount given a list of pools, and a fixed amount out, returns the top maxNumResults trades that go from an input token to an output token amount, making at most maxHops hops note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyInTInputundefinedthe currency to spendcurrencyAmountOutCurrencyAmount<TOutput>undefinedthe desired currency amount out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountOutCurrencyAmount<Currency>currencyAmountOutthe exact amount of currency outbestTradesTrade<TInput, TOutput, EXACT_OUTPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>The exact out tradeDefined in‚Äãentities/trade.ts:576createUncheckedTrade‚Äã‚ñ∏ Static createUncheckedTrade<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.inputAmountCurrencyAmount<TInput>-constructorArguments.outputAmountCurrencyAmount<TOutput>-constructorArguments.routeRoute<TInput, TOutput>-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:346createUncheckedTradeWithMultipleRoutes‚Äã‚ñ∏ Static createUncheckedTradeWithMultipleRoutes<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:377exactIn‚Äã‚ñ∏ Static exactIn<TInput, TOutput>(route, amountIn): Promise<Trade<TInput, TOutput, EXACT_INPUT>>Constructs an exact in trade with the given amount in and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact in tradeamountInCurrencyAmount<TInput>The amount being passed inReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>>The exact in tradeDefined in‚Äãentities/trade.ts:194exactOut‚Äã‚ñ∏ Static exactOut<TInput, TOutput>(route, amountOut): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>>Constructs an exact out trade with the given amount out and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact out tradeamountOutCurrencyAmount<TOutput>The amount returned by the tradeReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>>The exact out tradeDefined in‚Äãentities/trade.ts:209fromRoute‚Äã‚ñ∏ Static fromRoute<TInput, TOutput, TTradeType>(route, amount, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade by simulating swaps through the given routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>route to swap throughamountTTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>the amount specified, either input or output, depending on tradeTypetradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The routeDefined in‚Äãentities/trade.ts:226fromRoutes‚Äã‚ñ∏ Static fromRoutes<TInput, TOutput, TTradeType>(routes, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade from routes by simulating swapsType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionroutes{ amount: TTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]the routes to swap through and how much of the amount should be routed through eachtradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The tradeDefined in‚Äãentities/trade.ts:276Helpful?PreviousTickMathNextFeeAmountType parametersTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessorsexecutionPriceinputAmountoutputAmountpriceImpactrouteMethodsmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
534,p.org contracts universal router technical reference#permit2 transfer from,"p.org contracts universal router technical reference#permit2 transfer from.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
535,p.org sdk core reference classes Token#symbol,"p.org sdk core reference classes Token#symbol.    Token | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesTokenHelpful?On this pageToken@uniswap/sdk-core / Exports / TokenClass: TokenRepresents an ERC20 token with a unique address and some metadata.Hierarchy‚ÄãBaseCurrency‚Ü≥ TokenTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãaddresschainIddecimalsisNativeisTokennamesymbolAccessors‚ÄãwrappedMethods‚ÄãequalssortsBeforeConstructors‚Äãconstructor‚Äã‚Ä¢ new Token(chainId, address, decimals, symbol?, name?, bypassChecksum?)Parameters‚ÄãNameTypeDescriptionchainIdnumberBaseCurrency#chainIdaddressstringThe contract address on the chain on which this token livesdecimalsnumberBaseCurrency#decimalssymbol?stringBaseCurrency#symbolname?stringBaseCurrency#namebypassChecksum?booleanIf true it only checks for length === 42, startsWith 0x and contains only hex charactersOverrides‚ÄãBaseCurrency.constructorDefined in‚Äãentities/token.ts:27Properties‚Äãaddress‚Äã‚Ä¢ Readonly address: stringThe contract address on the chain on which this token livesDefined in‚Äãentities/token.ts:16chainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãBaseCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãBaseCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: falseOverrides‚ÄãBaseCurrency.isNativeDefined in‚Äãentities/token.ts:10isToken‚Äã‚Ä¢ Readonly isToken: trueOverrides‚ÄãBaseCurrency.isTokenDefined in‚Äãentities/token.ts:11name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãBaseCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãBaseCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29Accessors‚Äãwrapped‚Äã‚Ä¢ get wrapped(): TokenReturn this token, which does not need to be wrappedReturns‚ÄãTokenOverrides‚ÄãBaseCurrency.wrappedDefined in‚Äãentities/token.ts:66Methods‚Äãequals‚Äã‚ñ∏ equals(other): booleanReturns true if the two tokens are equivalent, i.e. have the same chainId and address.Parameters‚ÄãNameTypeDescriptionotherCurrencyother token to compareReturns‚ÄãbooleanOverrides‚ÄãBaseCurrency.equalsDefined in‚Äãentities/token.ts:47sortsBefore‚Äã‚ñ∏ sortsBefore(other): booleanReturns true if the address of this token sorts before the address of the other tokenThrowsif the tokens have the same addressThrowsif the tokens are on different chainsParameters‚ÄãNameTypeDescriptionotherTokenother token to compareReturns‚ÄãbooleanDefined in‚Äãentities/token.ts:57Helpful?PreviousPriceNextRoundingHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesaddresschainIddecimalsisNativeisTokennamesymbolAccessorswrappedMethodsequalssortsBeforeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
536,p.org sdk v3 reference classes Trade#besttradeexactout,"p.org sdk v3 reference classes Trade#besttradeexactout.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTradeHelpful?On this pageTrade@uniswap/v3-sdk / Exports / TradeClass: Trade<TInput, TOutput, TTradeType>Represents a trade executed against a set of routes where some percentage of the input is split across each route.Each route has its own set of pools. Pools can not be re-used across routes.Does not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and when it is executed.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessors‚ÄãexecutionPriceinputAmountoutputAmountpriceImpactrouteMethods‚ÄãmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Trade<TInput, TOutput, TTradeType>(__namedParameters)Construct a trade by passing in the pre-computed property valuesType parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyTTradeTypeextends TradeTypeParameters‚ÄãNameType__namedParametersObject__namedParameters.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]__namedParameters.tradeTypeTTradeTypeDefined in‚Äãentities/trade.ts:397Properties‚Äã_executionPrice‚Äã‚Ä¢ Private _executionPrice: undefined | Price<TInput, TOutput>The cached result of the computed execution priceDefined in‚Äãentities/trade.ts:143_inputAmount‚Äã‚Ä¢ Private _inputAmount: undefined | CurrencyAmount<TInput>The cached result of the input amount computationDefined in‚Äãentities/trade.ts:97_outputAmount‚Äã‚Ä¢ Private _outputAmount: undefined | CurrencyAmount<TOutput>The cached result of the output amount computationDefined in‚Äãentities/trade.ts:120_priceImpact‚Äã‚Ä¢ Private _priceImpact: undefined | PercentThe cached result of the price impact computationDefined in‚Äãentities/trade.ts:164swaps‚Äã‚Ä¢ Readonly swaps: { inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]The swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.Defined in‚Äãentities/trade.ts:82tradeType‚Äã‚Ä¢ Readonly tradeType: TTradeTypeThe type of the trade, either exact in or exact out.Defined in‚Äãentities/trade.ts:91Accessors‚ÄãexecutionPrice‚Äã‚Ä¢ get executionPrice(): Price<TInput, TOutput>The price expressed in terms of output amount/input amount.Returns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/trade.ts:148inputAmount‚Äã‚Ä¢ get inputAmount(): CurrencyAmount<TInput>The input amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TInput>Defined in‚Äãentities/trade.ts:102outputAmount‚Äã‚Ä¢ get outputAmount(): CurrencyAmount<TOutput>The output amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TOutput>Defined in‚Äãentities/trade.ts:125priceImpact‚Äã‚Ä¢ get priceImpact(): PercentReturns the percent difference between the route's mid price and the price impactReturns‚ÄãPercentDefined in‚Äãentities/trade.ts:169route‚Äã‚Ä¢ get route(): Route<TInput, TOutput>DeprecatedDeprecated in favor of 'swaps' property. If the trade consists of multiple routes this will return an error.When the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.Returns‚ÄãRoute<TInput, TOutput>Defined in‚Äãentities/trade.ts:73Methods‚ÄãmaximumAmountIn‚Äã‚ñ∏ maximumAmountIn(slippageTolerance, amountIn?): CurrencyAmount<TInput>Get the maximum amount in that can be spent via this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountInCurrencyAmount<TInput>-Returns‚ÄãCurrencyAmount<TInput>The amount inDefined in‚Äãentities/trade.ts:456minimumAmountOut‚Äã‚ñ∏ minimumAmountOut(slippageTolerance, amountOut?): CurrencyAmount<TOutput>Get the minimum amount that must be received from this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountOutCurrencyAmount<TOutput>-Returns‚ÄãCurrencyAmount<TOutput>The amount outDefined in‚Äãentities/trade.ts:438worstExecutionPrice‚Äã‚ñ∏ worstExecutionPrice(slippageTolerance): Price<TInput, TOutput>Return the execution price after accounting for slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentthe allowed tolerated slippageReturns‚ÄãPrice<TInput, TOutput>The execution priceDefined in‚Äãentities/trade.ts:471bestTradeExactIn‚Äã‚ñ∏ Static bestTradeExactIn<TInput, TOutput>(pools, currencyAmountIn, currencyOut, __namedParameters?, currentPools?, nextAmountIn?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_INPUT>[]>Given a list of pools, and a fixed amount in, returns the top maxNumResults trades that go from an input token amount to an output token, making at most maxHops hops. Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyAmountInCurrencyAmount<TInput>undefinedused in recursion; the original value of the currencyAmountIn parametercurrencyOutTOutputundefinedthe desired currency out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountInCurrencyAmount<Currency>currencyAmountInexact amount of input currency to spendbestTradesTrade<TInput, TOutput, EXACT_INPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>[]>The exact in tradeDefined in‚Äãentities/trade.ts:495bestTradeExactOut‚Äã‚ñ∏ Static bestTradeExactOut<TInput, TOutput>(pools, currencyIn, currencyAmountOut, __namedParameters?, currentPools?, nextAmountOut?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>similar to the above method but instead targets a fixed output amount given a list of pools, and a fixed amount out, returns the top maxNumResults trades that go from an input token to an output token amount, making at most maxHops hops note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyInTInputundefinedthe currency to spendcurrencyAmountOutCurrencyAmount<TOutput>undefinedthe desired currency amount out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountOutCurrencyAmount<Currency>currencyAmountOutthe exact amount of currency outbestTradesTrade<TInput, TOutput, EXACT_OUTPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>The exact out tradeDefined in‚Äãentities/trade.ts:576createUncheckedTrade‚Äã‚ñ∏ Static createUncheckedTrade<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.inputAmountCurrencyAmount<TInput>-constructorArguments.outputAmountCurrencyAmount<TOutput>-constructorArguments.routeRoute<TInput, TOutput>-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:346createUncheckedTradeWithMultipleRoutes‚Äã‚ñ∏ Static createUncheckedTradeWithMultipleRoutes<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:377exactIn‚Äã‚ñ∏ Static exactIn<TInput, TOutput>(route, amountIn): Promise<Trade<TInput, TOutput, EXACT_INPUT>>Constructs an exact in trade with the given amount in and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact in tradeamountInCurrencyAmount<TInput>The amount being passed inReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>>The exact in tradeDefined in‚Äãentities/trade.ts:194exactOut‚Äã‚ñ∏ Static exactOut<TInput, TOutput>(route, amountOut): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>>Constructs an exact out trade with the given amount out and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact out tradeamountOutCurrencyAmount<TOutput>The amount returned by the tradeReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>>The exact out tradeDefined in‚Äãentities/trade.ts:209fromRoute‚Äã‚ñ∏ Static fromRoute<TInput, TOutput, TTradeType>(route, amount, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade by simulating swaps through the given routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>route to swap throughamountTTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>the amount specified, either input or output, depending on tradeTypetradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The routeDefined in‚Äãentities/trade.ts:226fromRoutes‚Äã‚ñ∏ Static fromRoutes<TInput, TOutput, TTradeType>(routes, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade from routes by simulating swapsType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionroutes{ amount: TTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]the routes to swap through and how much of the amount should be routed through eachtradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The tradeDefined in‚Äãentities/trade.ts:276Helpful?PreviousTickMathNextFeeAmountType parametersTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessorsexecutionPriceinputAmountoutputAmountpriceImpactrouteMethodsmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
537,p.org contracts v3 reference overview,"p.org contracts v3 reference overview.    Overview | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceOverviewHelpful?On this pageOverviewUniswap V3 is a binary smart contract system comprised of many libraries, which together make the Core and Periphery.Core contracts provide fundamental safety guarantees for all parties interacting with Uniswap. They define the logic of pool generation, the pools themselves, and the interactions involving the respective assets therein.Periphery contracts interact with one or more Core contracts but are not part of the core. They are designed to provide methods of interacting with the core that increase clarity and user safety.External calls will primarily call the periphery interfaces. Externally available functions are all viewable in the reference documentation. Internal functions are viewable on the Uniswap V3 Github repo.Core‚ÄãCore Source CodeThe core consists of a single factory, a pool deployer, and the many pools the factory will create.A significant amount of care and attention has been given to gas optimization in the core contracts. The result is a substantial reduction in gas costs for all protocol interactions compared to V2, at the cost of a reduction in code clarity.Factory‚ÄãFactory ReferenceThe factory defines the logic for generating pools. A pool is defined by two tokens, which make up the asset pair, and a fee. There can be multiple pools of the same asset pair, distinguished only by their swap fee.Pools‚ÄãPool Reference.Pools primarily serve as automated market makers for the paired assets. Additionally, they expose price oracle data and may be used as an asset source for flash transactions.Periphery‚ÄãThe periphery is a constellation of smart contracts designed to support domain-specific interactions with the core. As the Uniswap protocol is a permissionless system, the contracts described below have no special privileges and are only a small subset of possible periphery-like contracts.SwapRouter‚ÄãSwap Router ReferenceSwap Router InterfaceThe swap router supports all the basic requirements of a front-end offering trading. It natively supports single trades (x to y) and multihop trades (e.g. x to y to z).Nonfungible Position Manager‚ÄãNonfungible Position Manager ReferenceNonfungible Position Manager InterfaceThe position manager handles the logic transactions involving the creation, adjustment, or exiting of positions.Oracle‚ÄãOracle ReferenceThe oracle provides price and liquidity data useful for a wide variety of system designs, and is available in every deployed pool.Periphery Libraries‚ÄãPeriphery LibrariesThe libraries provide a variety of helper functions developers may need, like calculating pool addresses, safe transfer functions, and more.Edit this pageHelpful?PreviousLicense ModificationsNextUniswapV3FactoryCoreFactoryPoolsPeripherySwapRouterNonfungible Position ManagerOraclePeriphery LibrariesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
538,p.org sdk v1 reference format,"p.org sdk v1 reference format.    Format | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKOverviewGuidesGetting StartedTechnical ReferenceDataComputationFormatOrchestrationTransactConstantsTypesüè†V1 SDKTechnical ReferenceFormatHelpful?On this pageformatSignificantThis function formats values to a specified number of significant digits.Function Signature‚Äãexport function formatSignificant(bigNumberish: BigNumberish, options?: FormatSignificantOptions): stringCopyInput Parameters‚ÄãParameterTypeDescriptionbigNumberishBigNumberishThe value to be formatted.options?FormatSignificantOptionsFormatting options.Example Usage‚Äãconst formatted: string = formatSignificant('123456', { significantDigits: 3 }) // 1.23CopyformatSignificantDecimalsThis function formats token and ethereum values to a specified number of significant digits.Function Signature‚Äãexport function formatSignificantDecimals( bigNumberish: BigNumberish, decimals: number, options?: FormatSignificantOptions): stringCopyInput Parameters‚ÄãParameterTypeDescriptionbigNumberishBigNumberishThe value to be formatted.decimalsnumberThe decimals of the passed value.options?FormatSignificantOptionsFormatting options.Example Usage‚Äãconst formatted: string = formatSignificantDecimals('1234560000000000000', 18, { significantDigits: 3,}) // 1.23CopyformatFixedThis function formats values to a specified number of decimal places.Function Signature‚Äãexport function formatFixed(bigNumberish: BigNumberish, options?: FormatFixedOptions): stringCopyInput Parameters‚ÄãParameterTypeDescriptionbigNumberishBigNumberishThe value to be formatted.options?FormatFixedOptionsFormatting options.Example Usage‚Äãconst formatted: string = formatFixed('1.2345', { decimalPlaces: 2 }) // 1.23CopyformatFixedDecimalsThis function formats token and ethereum values to a specified number of decimal places.Function Signature‚Äãexport function formatFixedDecimals(bigNumberish: BigNumberish, decimals: number, options?: FormatFixedOptions): stringCopyInput Parameters‚ÄãParameterTypeDescriptionbigNumberishBigNumberishThe value to be formatted.decimalsnumberThe decimals of the passed value.options?FormatFixedOptionsFormatting options.Example Usage‚Äãconst formatted: string = formatFixedDecimals('1234560000000000000', 18, { decimalPlaces: 2,}) // 1.23CopyHelpful?PreviousComputationNextOrchestrationFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
539,p.org sdk core reference enums SupportedChainId#arbitrum rinkeby,p.org sdk core reference enums SupportedChainId#arbitrum rinkeby.    SupportedChainId | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesenumsRoundingSupportedChainIdTradeTypeV2 SDKV1 SDKüè†Core SDKTechnical ReferenceenumsSupportedChainIdHelpful?On this pageSupportedChainId@uniswap/sdk-core / Exports / SupportedChainIdEnumeration: SupportedChainIdTable of contents‚ÄãEnumeration Members‚ÄãARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENEnumeration Members‚ÄãARBITRUM_ONE‚Äã‚Ä¢ ARBITRUM_ONE = 42161Defined in‚Äãconstants.ts:10ARBITRUM_RINKEBY‚Äã‚Ä¢ ARBITRUM_RINKEBY = 421611Defined in‚Äãconstants.ts:11CELO‚Äã‚Ä¢ CELO = 42220Defined in‚Äãconstants.ts:19CELO_ALFAJORES‚Äã‚Ä¢ CELO_ALFAJORES = 44787Defined in‚Äãconstants.ts:20GOERLI‚Äã‚Ä¢ GOERLI = 5Defined in‚Äãconstants.ts:7KOVAN‚Äã‚Ä¢ KOVAN = 42Defined in‚Äãconstants.ts:8MAINNET‚Äã‚Ä¢ MAINNET = 1Defined in‚Äãconstants.ts:4OPTIMISM‚Äã‚Ä¢ OPTIMISM = 10Defined in‚Äãconstants.ts:13OPTIMISM_GOERLI‚Äã‚Ä¢ OPTIMISM_GOERLI = 420Defined in‚Äãconstants.ts:14POLYGON‚Äã‚Ä¢ POLYGON = 137Defined in‚Äãconstants.ts:16POLYGON_MUMBAI‚Äã‚Ä¢ POLYGON_MUMBAI = 80001Defined in‚Äãconstants.ts:17RINKEBY‚Äã‚Ä¢ RINKEBY = 4Defined in‚Äãconstants.ts:6ROPSTEN‚Äã‚Ä¢ ROPSTEN = 3Defined in‚Äãconstants.ts:5Helpful?PreviousRoundingNextTradeTypeTable of contentsEnumeration MembersEnumeration MembersARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
540,p.org contracts v3 reference periphery lens QuoterV2,"p.org contracts v3 reference periphery lens QuoterV2.    QuoterV2 | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensQuoterQuoterV2TickLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryLensQuoterV2Helpful?On this pageQuoterV2Allows getting the expected amount out or amount in for a given swap without executing the swapThese functions are not gas efficient and should not be called on chain. Instead, optimistically execute the swap and check the amounts in the callback.Functions‚Äãconstructor‚Äã function constructor( ) publicCopyuniswapV3SwapCallback‚Äã function uniswapV3SwapCallback( int256 amount0Delta, int256 amount1Delta, bytes data ) external view overrideCopyCalled to msg.sender after executing a swap via IUniswapV3Pool#swap.In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.Parameters:‚ÄãNameTypeDescriptionamount0Deltaint256The amount of token0 that was sent (negative) or must be received (positive) by the pool bythe end of the swap. If positive, the callback must send that amount of token0 to the pool. |amount1Delta | int256 | The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool. |data | bytes | Any data passed through by the caller via the IUniswapV3PoolActions#swap callquoteExactInputSingle‚Äã function quoteExactInputSingle( ) public override returns (uint256 amountOut, uint160 sqrtPriceX96After, uint32 initializedTicksCrossed, uint256 gasEstimate)CopyquoteExactInput‚Äã function quoteExactInput( ) public override returns (uint256 amountOut, uint160[] sqrtPriceX96AfterList, uint32[] initializedTicksCrossedList, uint256 gasEstimate)CopyquoteExactOutputSingle‚Äã function quoteExactOutputSingle( ) public override returns (uint256 amountIn, uint160 sqrtPriceX96After, uint32 initializedTicksCrossed, uint256 gasEstimate)CopyquoteExactOutput‚Äã function quoteExactOutput( ) public override returns (uint256 amountIn, uint160[] sqrtPriceX96AfterList, uint32[] initializedTicksCrossedList, uint256 gasEstimate)CopyEdit this pageHelpful?PreviousQuoterNextTickLensFunctionsconstructoruniswapV3SwapCallbackquoteExactInputSinglequoteExactInputquoteExactOutputSinglequoteExactOutputDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
541,p.org sdk core reference classes Fraction#tosignificant,"p.org sdk core reference classes Fraction#tosignificant.    Fraction | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesFractionHelpful?On this pageFraction@uniswap/sdk-core / Exports / FractionClass: FractionHierarchy‚ÄãFraction‚Ü≥ CurrencyAmount‚Ü≥ Percent‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatornumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionConstructors‚Äãconstructor‚Äã‚Ä¢ new Fraction(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:107subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:138toSignificant‚Äã‚ñ∏ toSignificant(significantDigits, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:123tryParseFraction‚Äã‚ñ∏ Static Private tryParseFraction(fractionish): FractionParameters‚ÄãNameTypefractionishBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:33Helpful?PreviousEtherNextNativeCurrencyHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatornumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
542,p.org contracts v3 reference periphery interfaces INonfungiblePositionManager,"p.org contracts v3 reference periphery interfaces INonfungiblePositionManager.    INonfungiblePositionManager | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesIERC20MetadataIERC721PermitIMulticallINonfungiblePositionManagerINonfungibleTokenPositionDescriptorIPeripheryImmutableStateIPeripheryPaymentsIPeripheryPaymentsWithFeeIPoolInitializerIQuoterIQuoterV2ISelfPermitISwapRouterITickLensIV3MigratorexternalLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryInterfacesINonfungiblePositionManagerHelpful?On this pageINonfungiblePositionManagerWraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.Parameter Structs‚ÄãMintParams‚Äã struct MintParams {  address token0;  address token1;  uint24 fee;  int24 tickLower;  int24 tickUpper;  uint256 amount0Desired;  uint256 amount1Desired;  uint256 amount0Min;  uint256 amount1Min;  address recipient;  uint256 deadline; }CopyIncreaseLiquidityParams‚Äã struct IncreaseLiquidityParams {  uint256 tokenId;  uint256 amount0Desired;  uint256 amount1Desired;  uint256 amount0Min;  uint256 amount1Min;  uint256 deadline; }CopyDecreaseLiquidityParams‚Äã struct DecreaseLiquidityParams {  uint256 tokenId;  uint128 liquidity;  uint256 amount0Min;  uint256 amount1Min;  uint256 deadline; }CopyCollectParams‚Äã struct CollectParams {  uint256 tokenId;  address recipient;  uint128 amount0Max;  uint128 amount1Max; }CopyFunctions‚Äãpositions‚Äã function positions( uint256 tokenId ) external view returns (uint96 nonce, address operator, address token0, address token1, uint24 fee, int24 tickLower, int24 tickUpper, uint128 liquidity, uint256 feeGrowthInside0LastX128, uint256 feeGrowthInside1LastX128, uint128 tokensOwed0, uint128 tokensOwed1)CopyReturns the position information associated with a given token ID.Throws if the token ID is not valid.Parameters:‚ÄãNameTypeDescriptiontokenIduint256The ID of the token that represents the positionReturn Values:‚ÄãNameTypeDescriptionnonceuint96The nonce for permitsoperatoraddressThe address that is approved for spendingtoken0addressThe address of the token0 for a specific pooltoken1addressThe address of the token1 for a specific poolfeeuint24The fee associated with the pooltickLowerint24The lower end of the tick range for the positiontickUpperint24The higher end of the tick range for the positionliquidityuint128The liquidity of the positionfeeGrowthInside0LastX128uint256The fee growth of token0 as of the last action on the individual positionfeeGrowthInside1LastX128uint256The fee growth of token1 as of the last action on the individual positiontokensOwed0uint128The uncollected amount of token0 owed to the position as of the last computationtokensOwed1uint128The uncollected amount of token1 owed to the position as of the last computationcreateAndInitializePoolIfNecessary‚Äã function createAndInitializePoolIfNecessary( address tokenA, address tokenB, uint24 fee, uint160 sqrtPriceX96 ) external returns (address pool)CopyCreates a new pool if it does not exist, then initializes if not initializedThis method can be bundled with mint for the first mint of a pool to create, initialize a pool and mint at the same timeParameters:‚ÄãNameTypeDescriptiontokenAaddressThe contract address of either token0 or token1tokenBaddressThe contract address of the other tokenfeeuint24The fee amount of the v3 pool for the specified token pairsqrtPriceX96uint160The initial square root price of the pool as a Q64.96 valueWe use tokenA and tokenB when we are referring to unsorted, or unordered tokensReturn Values:‚ÄãNameTypeDescriptionpooladdressReturns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessarymint‚Äã function mint( struct INonfungiblePositionManager.MintParams params ) external returns (uint256 tokenId, uint128 liquidity, uint256 amount0, uint256 amount1)CopyCreates a new position wrapped in a NFTCall this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.Parameters:‚ÄãNameTypeDescriptionparamsstruct INonfungiblePositionManager.MintParamsThe params necessary to mint a position, encoded as MintParams in calldataReturn Values:‚ÄãNameTypeDescriptiontokenIduint256The ID of the token that represents the minted positionliquidityuint128The amount of liquidity for this positionamount0uint256The amount of token0amount1uint256The amount of token1increaseLiquidity‚Äã function increaseLiquidity( struct INonfungiblePositionManager.IncreaseLiquidityParams params ) external returns (uint128 liquidity, uint256 amount0, uint256 amount1)CopyIncreases the amount of liquidity in a position, with tokens paid by the msg.senderParameters:‚ÄãNameTypeDescriptionparamsstruct INonfungiblePositionManager.IncreaseLiquidityParamstokenId The ID of the token for which liquidity is being increased,Return Values:‚ÄãNameTypeDescriptionliquidityuint128The new liquidity amount as a result of the increaseamount0uint256The amount of token0 to acheive resulting liquidityamount1uint256The amount of token1 to acheive resulting liquiditydecreaseLiquidity‚Äã function decreaseLiquidity( struct INonfungiblePositionManager.DecreaseLiquidityParams params ) external returns (uint256 amount0, uint256 amount1)CopyDecreases the amount of liquidity in a position and accounts it to the positionParameters:‚ÄãNameTypeDescriptionparamsstruct INonfungiblePositionManager.DecreaseLiquidityParamstokenId The ID of the token for which liquidity is being decreasedReturn Values:‚ÄãNameTypeDescriptionamount0uint256The amount of token0 sent to recipientamount1uint256The amount of token1 sent to recipientcollect‚Äã function collect( struct INonfungiblePositionManager.CollectParams params ) external returns (uint256 amount0, uint256 amount1)CopyCollects up to a maximum amount of fees owed to a specific position to the recipientParameters:‚ÄãNameTypeDescriptionparamsstruct INonfungiblePositionManager.CollectParamstokenId The ID of the NFT for which tokens are being collected,Return Values:‚ÄãNameTypeDescriptionamount0uint256The amount of fees collected in token0amount1uint256The amount of fees collected in token1burn‚Äã function burn( uint256 tokenId ) externalCopyBurns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first.Parameters:‚ÄãNameTypeDescriptiontokenIduint256The ID of the token that is being burnedEvents‚ÄãIncreaseLiquidity‚Äã event IncreaseLiquidity( uint256 tokenId, uint128 liquidity, uint256 amount0, uint256 amount1 )CopyEmitted when liquidity is increased for a position NFTAlso emitted when a token is mintedParameters:‚ÄãNameTypeDescriptiontokenIduint256The ID of the token for which liquidity was increasedliquidityuint128The amount by which liquidity for the NFT position was increasedamount0uint256The amount of token0 that was paid for the increase in liquidityamount1uint256The amount of token1 that was paid for the increase in liquidityDecreaseLiquidity‚Äã event DecreaseLiquidity( uint256 tokenId, uint128 liquidity, uint256 amount0, uint256 amount1 )CopyEmitted when liquidity is decreased for a position NFTParameters:‚ÄãNameTypeDescriptiontokenIduint256The ID of the token for which liquidity was decreasedliquidityuint128The amount by which liquidity for the NFT position was decreasedamount0uint256The amount of token0 that was accounted for the decrease in liquidityamount1uint256The amount of token1 that was accounted for the decrease in liquidityCollect‚Äã event Collect( uint256 tokenId, address recipient, uint256 amount0, uint256 amount1 )CopyEmitted when tokens are collected for a position NFTThe amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behaviorParameters:‚ÄãNameTypeDescriptiontokenIduint256The ID of the token for which underlying tokens were collectedrecipientaddressThe address of the account that received the collected tokensamount0uint256The amount of token0 owed to the position that was collectedamount1uint256The amount of token1 owed to the position that was collectedEdit this pageHelpful?PreviousIMulticallNextINonfungibleTokenPositionDescriptorParameter StructsMintParamsIncreaseLiquidityParamsDecreaseLiquidityParamsCollectParamsFunctionspositionscreateAndInitializePoolIfNecessarymintincreaseLiquiditydecreaseLiquiditycollectburnEventsIncreaseLiquidityDecreaseLiquidityCollectDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
543,p.org sdk v3 reference interfaces NFTPermitOptions#r,p.org sdk v3 reference interfaces NFTPermitOptions#r.    NFTPermitOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesNFTPermitOptionsHelpful?On this pageNFTPermitOptions@uniswap/v3-sdk / Exports / NFTPermitOptionsInterface: NFTPermitOptionsTable of contents‚ÄãProperties‚ÄãdeadlinersspendervProperties‚Äãdeadline‚Äã‚Ä¢ deadline: BigintIshDefined in‚ÄãnonfungiblePositionManager.ts:131r‚Äã‚Ä¢ r: stringDefined in‚ÄãnonfungiblePositionManager.ts:129s‚Äã‚Ä¢ s: stringDefined in‚ÄãnonfungiblePositionManager.ts:130spender‚Äã‚Ä¢ spender: stringDefined in‚ÄãnonfungiblePositionManager.ts:132v‚Äã‚Ä¢ v: 0 | 1 | 27 | 28Defined in‚ÄãnonfungiblePositionManager.ts:128Helpful?PreviousMintSpecificOptionsNextQuoteOptionsTable of contentsPropertiesPropertiesdeadlinersspendervDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
544,p.org sdk v3 reference classes Trade#createuncheckedtradewithmultipleroutes,"p.org sdk v3 reference classes Trade#createuncheckedtradewithmultipleroutes.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTradeHelpful?On this pageTrade@uniswap/v3-sdk / Exports / TradeClass: Trade<TInput, TOutput, TTradeType>Represents a trade executed against a set of routes where some percentage of the input is split across each route.Each route has its own set of pools. Pools can not be re-used across routes.Does not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and when it is executed.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessors‚ÄãexecutionPriceinputAmountoutputAmountpriceImpactrouteMethods‚ÄãmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Trade<TInput, TOutput, TTradeType>(__namedParameters)Construct a trade by passing in the pre-computed property valuesType parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyTTradeTypeextends TradeTypeParameters‚ÄãNameType__namedParametersObject__namedParameters.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]__namedParameters.tradeTypeTTradeTypeDefined in‚Äãentities/trade.ts:397Properties‚Äã_executionPrice‚Äã‚Ä¢ Private _executionPrice: undefined | Price<TInput, TOutput>The cached result of the computed execution priceDefined in‚Äãentities/trade.ts:143_inputAmount‚Äã‚Ä¢ Private _inputAmount: undefined | CurrencyAmount<TInput>The cached result of the input amount computationDefined in‚Äãentities/trade.ts:97_outputAmount‚Äã‚Ä¢ Private _outputAmount: undefined | CurrencyAmount<TOutput>The cached result of the output amount computationDefined in‚Äãentities/trade.ts:120_priceImpact‚Äã‚Ä¢ Private _priceImpact: undefined | PercentThe cached result of the price impact computationDefined in‚Äãentities/trade.ts:164swaps‚Äã‚Ä¢ Readonly swaps: { inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]The swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.Defined in‚Äãentities/trade.ts:82tradeType‚Äã‚Ä¢ Readonly tradeType: TTradeTypeThe type of the trade, either exact in or exact out.Defined in‚Äãentities/trade.ts:91Accessors‚ÄãexecutionPrice‚Äã‚Ä¢ get executionPrice(): Price<TInput, TOutput>The price expressed in terms of output amount/input amount.Returns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/trade.ts:148inputAmount‚Äã‚Ä¢ get inputAmount(): CurrencyAmount<TInput>The input amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TInput>Defined in‚Äãentities/trade.ts:102outputAmount‚Äã‚Ä¢ get outputAmount(): CurrencyAmount<TOutput>The output amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TOutput>Defined in‚Äãentities/trade.ts:125priceImpact‚Äã‚Ä¢ get priceImpact(): PercentReturns the percent difference between the route's mid price and the price impactReturns‚ÄãPercentDefined in‚Äãentities/trade.ts:169route‚Äã‚Ä¢ get route(): Route<TInput, TOutput>DeprecatedDeprecated in favor of 'swaps' property. If the trade consists of multiple routes this will return an error.When the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.Returns‚ÄãRoute<TInput, TOutput>Defined in‚Äãentities/trade.ts:73Methods‚ÄãmaximumAmountIn‚Äã‚ñ∏ maximumAmountIn(slippageTolerance, amountIn?): CurrencyAmount<TInput>Get the maximum amount in that can be spent via this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountInCurrencyAmount<TInput>-Returns‚ÄãCurrencyAmount<TInput>The amount inDefined in‚Äãentities/trade.ts:456minimumAmountOut‚Äã‚ñ∏ minimumAmountOut(slippageTolerance, amountOut?): CurrencyAmount<TOutput>Get the minimum amount that must be received from this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountOutCurrencyAmount<TOutput>-Returns‚ÄãCurrencyAmount<TOutput>The amount outDefined in‚Äãentities/trade.ts:438worstExecutionPrice‚Äã‚ñ∏ worstExecutionPrice(slippageTolerance): Price<TInput, TOutput>Return the execution price after accounting for slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentthe allowed tolerated slippageReturns‚ÄãPrice<TInput, TOutput>The execution priceDefined in‚Äãentities/trade.ts:471bestTradeExactIn‚Äã‚ñ∏ Static bestTradeExactIn<TInput, TOutput>(pools, currencyAmountIn, currencyOut, __namedParameters?, currentPools?, nextAmountIn?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_INPUT>[]>Given a list of pools, and a fixed amount in, returns the top maxNumResults trades that go from an input token amount to an output token, making at most maxHops hops. Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyAmountInCurrencyAmount<TInput>undefinedused in recursion; the original value of the currencyAmountIn parametercurrencyOutTOutputundefinedthe desired currency out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountInCurrencyAmount<Currency>currencyAmountInexact amount of input currency to spendbestTradesTrade<TInput, TOutput, EXACT_INPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>[]>The exact in tradeDefined in‚Äãentities/trade.ts:495bestTradeExactOut‚Äã‚ñ∏ Static bestTradeExactOut<TInput, TOutput>(pools, currencyIn, currencyAmountOut, __namedParameters?, currentPools?, nextAmountOut?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>similar to the above method but instead targets a fixed output amount given a list of pools, and a fixed amount out, returns the top maxNumResults trades that go from an input token to an output token amount, making at most maxHops hops note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyInTInputundefinedthe currency to spendcurrencyAmountOutCurrencyAmount<TOutput>undefinedthe desired currency amount out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountOutCurrencyAmount<Currency>currencyAmountOutthe exact amount of currency outbestTradesTrade<TInput, TOutput, EXACT_OUTPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>The exact out tradeDefined in‚Äãentities/trade.ts:576createUncheckedTrade‚Äã‚ñ∏ Static createUncheckedTrade<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.inputAmountCurrencyAmount<TInput>-constructorArguments.outputAmountCurrencyAmount<TOutput>-constructorArguments.routeRoute<TInput, TOutput>-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:346createUncheckedTradeWithMultipleRoutes‚Äã‚ñ∏ Static createUncheckedTradeWithMultipleRoutes<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:377exactIn‚Äã‚ñ∏ Static exactIn<TInput, TOutput>(route, amountIn): Promise<Trade<TInput, TOutput, EXACT_INPUT>>Constructs an exact in trade with the given amount in and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact in tradeamountInCurrencyAmount<TInput>The amount being passed inReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>>The exact in tradeDefined in‚Äãentities/trade.ts:194exactOut‚Äã‚ñ∏ Static exactOut<TInput, TOutput>(route, amountOut): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>>Constructs an exact out trade with the given amount out and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact out tradeamountOutCurrencyAmount<TOutput>The amount returned by the tradeReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>>The exact out tradeDefined in‚Äãentities/trade.ts:209fromRoute‚Äã‚ñ∏ Static fromRoute<TInput, TOutput, TTradeType>(route, amount, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade by simulating swaps through the given routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>route to swap throughamountTTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>the amount specified, either input or output, depending on tradeTypetradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The routeDefined in‚Äãentities/trade.ts:226fromRoutes‚Äã‚ñ∏ Static fromRoutes<TInput, TOutput, TTradeType>(routes, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade from routes by simulating swapsType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionroutes{ amount: TTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]the routes to swap through and how much of the amount should be routed through eachtradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The tradeDefined in‚Äãentities/trade.ts:276Helpful?PreviousTickMathNextFeeAmountType parametersTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessorsexecutionPriceinputAmountoutputAmountpriceImpactrouteMethodsmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
545,p.org sdk core reference classes Fraction#asfraction,"p.org sdk core reference classes Fraction#asfraction.    Fraction | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesFractionHelpful?On this pageFraction@uniswap/sdk-core / Exports / FractionClass: FractionHierarchy‚ÄãFraction‚Ü≥ CurrencyAmount‚Ü≥ Percent‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatornumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionConstructors‚Äãconstructor‚Äã‚Ä¢ new Fraction(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:107subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:138toSignificant‚Äã‚ñ∏ toSignificant(significantDigits, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:123tryParseFraction‚Äã‚ñ∏ Static Private tryParseFraction(fractionish): FractionParameters‚ÄãNameTypefractionishBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:33Helpful?PreviousEtherNextNativeCurrencyHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatornumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
546,p.org contracts v2 reference smart contracts pair#minimum liquidity,"p.org contracts v2 reference smart contracts pair#minimum liquidity.    Pair | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsPairHelpful?On this pagePairThis documentation covers Uniswap-specific functionality. For ERC-20 functionality, see Pair (ERC-20).CodeUniswapV2Pair.solAddressSee Pair Addresses.EventsMint‚Äãevent Mint(address indexed sender, uint amount0, uint amount1);CopyEmitted each time liquidity tokens are created via mint.Burn‚Äãevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);CopyEmitted each time liquidity tokens are destroyed via burn.Swap‚Äãevent Swap( address indexed sender, uint amount0In, uint amount1In, uint amount0Out, uint amount1Out, address indexed to);CopyEmitted each time a swap occurs via swap.Sync‚Äãevent Sync(uint112 reserve0, uint112 reserve1);CopyEmitted each time reserves are updated via mint, burn, swap, or sync.Read-Only FunctionsMINIMUM_LIQUIDITY‚Äãfunction MINIMUM_LIQUIDITY() external pure returns (uint);CopyReturns 1000 for all pairs. See Minimum Liquidity.factory‚Äãfunction factory() external view returns (address);CopyReturns the factory address.token0‚Äãfunction token0() external view returns (address);CopyReturns the address of the pair token with the lower sort order.token1‚Äãfunction token1() external view returns (address);CopyReturns the address of the pair token with the higher sort order.getReserves‚Äãfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);CopyReturns the reserves of token0 and token1 used to price trades and distribute liquidity. See Pricing. Also returns the block.timestamp (mod 2**32) of the last block during which an interaction occured for the pair.price0CumulativeLast‚Äãfunction price0CumulativeLast() external view returns (uint);CopySee Oracles.price1CumulativeLast‚Äãfunction price1CumulativeLast() external view returns (uint);CopySee Oracles.kLast‚Äãfunction kLast() external view returns (uint);CopyReturns the product of the reserves as of the most recent liquidity event. See Protocol Charge Calculation.State-Changing Functionsmint‚Äãfunction mint(address to) external returns (uint liquidity);CopyCreates pool tokens.Emits Mint, Sync, Transfer.burn‚Äãfunction burn(address to) external returns (uint amount0, uint amount1);CopyDestroys pool tokens.Emits Burn, Sync, Transfer.swap‚Äãfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;CopySwaps tokens. For regular swaps, data.length must be 0. Also see Flash Swaps.Emits Swap, Sync.skim‚Äãfunction skim(address to) external;CopySee the whitepaper.sync‚Äãfunction sync() external;CopySee the whitepaper.Emits Sync.Interfaceimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol';Copypragma solidity >=0.5.0;interface IUniswapV2Pair { event Approval(address indexed owner, address indexed spender, uint value); event Transfer(address indexed from, address indexed to, uint value); function name() external pure returns (string memory); function symbol() external pure returns (string memory); function decimals() external pure returns (uint8); function totalSupply() external view returns (uint); function balanceOf(address owner) external view returns (uint); function allowance(address owner, address spender) external view returns (uint); function approve(address spender, uint value) external returns (bool); function transfer(address to, uint value) external returns (bool); function transferFrom(address from, address to, uint value) external returns (bool); function DOMAIN_SEPARATOR() external view returns (bytes32); function PERMIT_TYPEHASH() external pure returns (bytes32); function nonces(address owner) external view returns (uint); function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external; event Mint(address indexed sender, uint amount0, uint amount1); event Burn(address indexed sender, uint amount0, uint amount1, address indexed to); event Swap(  address indexed sender,  uint amount0In,  uint amount1In,  uint amount0Out,  uint amount1Out,  address indexed to ); event Sync(uint112 reserve0, uint112 reserve1); function MINIMUM_LIQUIDITY() external pure returns (uint); function factory() external view returns (address); function token0() external view returns (address); function token1() external view returns (address); function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast); function price0CumulativeLast() external view returns (uint); function price1CumulativeLast() external view returns (uint); function kLast() external view returns (uint); function mint(address to) external returns (uint liquidity); function burn(address to) external returns (uint amount0, uint amount1); function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external; function skim(address to) external; function sync() external;}CopyABIimport IUniswapV2Pair from '@uniswap/v2-core/build/IUniswapV2Pair.json'Copyhttps://unpkg.com/@uniswap/v2-core@1.0.0/build/IUniswapV2Pair.jsonEdit this pageHelpful?PreviousFactoryNextPair (ERC-20)MintBurnSwapSyncMINIMUM_LIQUIDITYfactorytoken0token1getReservesprice0CumulativeLastprice1CumulativeLastkLastmintburnswapskimsyncDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
547,p.org sdk v3 reference interfaces RemoveLiquidityOptions#tokenid,"p.org sdk v3 reference interfaces RemoveLiquidityOptions#tokenid.    RemoveLiquidityOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesRemoveLiquidityOptionsHelpful?On this pageRemoveLiquidityOptions@uniswap/v3-sdk / Exports / RemoveLiquidityOptionsInterface: RemoveLiquidityOptionsOptions for producing the calldata to exit a position.Table of contents‚ÄãProperties‚ÄãburnTokencollectOptionsdeadlineliquidityPercentagepermitslippageTolerancetokenIdProperties‚ÄãburnToken‚Äã‚Ä¢ Optional burnToken: booleanWhether the NFT should be burned if the entire position is being exited, by default false.Defined in‚ÄãnonfungiblePositionManager.ts:162collectOptions‚Äã‚Ä¢ collectOptions: Omit<CollectOptions, ""tokenId"">Parameters to be passed on to collectDefined in‚ÄãnonfungiblePositionManager.ts:172deadline‚Äã‚Ä¢ deadline: BigintIshWhen the transaction expires, in epoch seconds.Defined in‚ÄãnonfungiblePositionManager.ts:157liquidityPercentage‚Äã‚Ä¢ liquidityPercentage: PercentThe percentage of position liquidity to exit.Defined in‚ÄãnonfungiblePositionManager.ts:147permit‚Äã‚Ä¢ Optional permit: NFTPermitOptionsThe optional permit of the token ID being exited, in case the exit transaction is being sent by an account that does not own the NFTDefined in‚ÄãnonfungiblePositionManager.ts:167slippageTolerance‚Äã‚Ä¢ slippageTolerance: PercentHow much the pool price is allowed to move.Defined in‚ÄãnonfungiblePositionManager.ts:152tokenId‚Äã‚Ä¢ tokenId: BigintIshThe ID of the token to exitDefined in‚ÄãnonfungiblePositionManager.ts:142Helpful?PreviousQuoteOptionsNextSafeTransferOptionsTable of contentsPropertiesPropertiesburnTokencollectOptionsdeadlineliquidityPercentagepermitslippageTolerancetokenIdDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
548,p.org contracts v3 reference error codes,"p.org contracts v3 reference error codes.    Error Codes | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceError CodesHelpful?Error CodesLiquidityMath.solLS: Liquidity SubLA: Liquidity AddOracle.solOLD: The target must be chronologically after the oldest observationI: The pool has not been initializedPosition.solNP: Burn cannot be called for a position with 0 liquidityTick.solLO: LiquidityGrossAfter must be less than MaxLiquidityTickMath.solT: The given tick must be less than, or equal to, the maximum tickR: second inequality must be < because the price can never reach the price at the max tickTransferHelper.solTF: Transfer Failed : errors with TF if transfer failsUniswapV3Pool.solLOK: The reentrancy guard. A transaction cannot re-enter the pool mid-swapTLU: The lower tick must be below the upper tickTLM: The lower tick must be greater, or equal to, the minimum tickTUM: The upper tick must be lesser than, or equal to, the maximum tickAI: The pool is already initializedM0: Mint 0, The balance of token0 in the given pool before minting must be less than, or equal to, the balance after mintingM1: Mint 1, The balance of token1 in the given pool before minting must be less than, or equal to, the balance after mintingAS: amountSpecified cannot be zeroSPL: Square root price limitIIA: Insufficient input amount, an insufficient amount of input token was sent during the callbackL: Liquidity in the pool must be greater than zero for a flash to be executedF0: The balance of token0 in the given pool before the flash transaction must be less than, or equal to, the balance of token0 after the flash plus the feeF1: The balance of token1 in the given pool before the flash transaction must be less than, or equal to, the balance of token1 after the flash plus the feeEdit this pageHelpful?PreviousDeployment AddressesNextOverviewDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
549,p.org sdk core reference classes Ether#constructor,"p.org sdk core reference classes Ether#constructor.    Ether | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesEtherHelpful?On this pageEther@uniswap/sdk-core / Exports / EtherClass: EtherEther is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnetsHierarchy‚ÄãNativeCurrency‚Ü≥ EtherTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãchainIddecimalsisNativeisTokennamesymbol_etherCacheAccessors‚ÄãwrappedMethods‚ÄãequalsonChainConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new Ether(chainId)Parameters‚ÄãNameTypechainIdnumberOverrides‚ÄãNativeCurrency.constructorDefined in‚Äãentities/ether.ts:11Properties‚ÄãchainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãNativeCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãNativeCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: trueInherited from‚ÄãNativeCurrency.isNativeDefined in‚Äãentities/nativeCurrency.ts:7isToken‚Äã‚Ä¢ Readonly isToken: falseInherited from‚ÄãNativeCurrency.isTokenDefined in‚Äãentities/nativeCurrency.ts:8name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãNativeCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãNativeCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29_etherCache‚Äã‚ñ™ Static Private _etherCache: Object = {}Index signature‚Äã‚ñ™ [chainId: number]: EtherDefined in‚Äãentities/ether.ts:21Accessors‚Äãwrapped‚Äã‚Ä¢ get wrapped(): TokenReturn the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to be used in UniswapReturns‚ÄãTokenOverrides‚ÄãNativeCurrency.wrappedDefined in‚Äãentities/ether.ts:15Methods‚Äãequals‚Äã‚ñ∏ equals(other): booleanReturns whether this currency is functionally equivalent to the other currencyParameters‚ÄãNameTypeDescriptionotherCurrencythe other currencyReturns‚ÄãbooleanOverrides‚ÄãNativeCurrency.equalsDefined in‚Äãentities/ether.ts:27onChain‚Äã‚ñ∏ Static onChain(chainId): EtherParameters‚ÄãNameTypechainIdnumberReturns‚ÄãEtherDefined in‚Äãentities/ether.ts:23Helpful?PreviousCurrencyAmountNextFractionHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertieschainIddecimalsisNativeisTokennamesymbol_etherCacheAccessorswrappedMethodsequalsonChainDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
550,p.org sdk v3 reference classes Trade# executionprice,"p.org sdk v3 reference classes Trade# executionprice.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTradeHelpful?On this pageTrade@uniswap/v3-sdk / Exports / TradeClass: Trade<TInput, TOutput, TTradeType>Represents a trade executed against a set of routes where some percentage of the input is split across each route.Each route has its own set of pools. Pools can not be re-used across routes.Does not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and when it is executed.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessors‚ÄãexecutionPriceinputAmountoutputAmountpriceImpactrouteMethods‚ÄãmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Trade<TInput, TOutput, TTradeType>(__namedParameters)Construct a trade by passing in the pre-computed property valuesType parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyTTradeTypeextends TradeTypeParameters‚ÄãNameType__namedParametersObject__namedParameters.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]__namedParameters.tradeTypeTTradeTypeDefined in‚Äãentities/trade.ts:397Properties‚Äã_executionPrice‚Äã‚Ä¢ Private _executionPrice: undefined | Price<TInput, TOutput>The cached result of the computed execution priceDefined in‚Äãentities/trade.ts:143_inputAmount‚Äã‚Ä¢ Private _inputAmount: undefined | CurrencyAmount<TInput>The cached result of the input amount computationDefined in‚Äãentities/trade.ts:97_outputAmount‚Äã‚Ä¢ Private _outputAmount: undefined | CurrencyAmount<TOutput>The cached result of the output amount computationDefined in‚Äãentities/trade.ts:120_priceImpact‚Äã‚Ä¢ Private _priceImpact: undefined | PercentThe cached result of the price impact computationDefined in‚Äãentities/trade.ts:164swaps‚Äã‚Ä¢ Readonly swaps: { inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]The swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.Defined in‚Äãentities/trade.ts:82tradeType‚Äã‚Ä¢ Readonly tradeType: TTradeTypeThe type of the trade, either exact in or exact out.Defined in‚Äãentities/trade.ts:91Accessors‚ÄãexecutionPrice‚Äã‚Ä¢ get executionPrice(): Price<TInput, TOutput>The price expressed in terms of output amount/input amount.Returns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/trade.ts:148inputAmount‚Äã‚Ä¢ get inputAmount(): CurrencyAmount<TInput>The input amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TInput>Defined in‚Äãentities/trade.ts:102outputAmount‚Äã‚Ä¢ get outputAmount(): CurrencyAmount<TOutput>The output amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TOutput>Defined in‚Äãentities/trade.ts:125priceImpact‚Äã‚Ä¢ get priceImpact(): PercentReturns the percent difference between the route's mid price and the price impactReturns‚ÄãPercentDefined in‚Äãentities/trade.ts:169route‚Äã‚Ä¢ get route(): Route<TInput, TOutput>DeprecatedDeprecated in favor of 'swaps' property. If the trade consists of multiple routes this will return an error.When the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.Returns‚ÄãRoute<TInput, TOutput>Defined in‚Äãentities/trade.ts:73Methods‚ÄãmaximumAmountIn‚Äã‚ñ∏ maximumAmountIn(slippageTolerance, amountIn?): CurrencyAmount<TInput>Get the maximum amount in that can be spent via this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountInCurrencyAmount<TInput>-Returns‚ÄãCurrencyAmount<TInput>The amount inDefined in‚Äãentities/trade.ts:456minimumAmountOut‚Äã‚ñ∏ minimumAmountOut(slippageTolerance, amountOut?): CurrencyAmount<TOutput>Get the minimum amount that must be received from this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountOutCurrencyAmount<TOutput>-Returns‚ÄãCurrencyAmount<TOutput>The amount outDefined in‚Äãentities/trade.ts:438worstExecutionPrice‚Äã‚ñ∏ worstExecutionPrice(slippageTolerance): Price<TInput, TOutput>Return the execution price after accounting for slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentthe allowed tolerated slippageReturns‚ÄãPrice<TInput, TOutput>The execution priceDefined in‚Äãentities/trade.ts:471bestTradeExactIn‚Äã‚ñ∏ Static bestTradeExactIn<TInput, TOutput>(pools, currencyAmountIn, currencyOut, __namedParameters?, currentPools?, nextAmountIn?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_INPUT>[]>Given a list of pools, and a fixed amount in, returns the top maxNumResults trades that go from an input token amount to an output token, making at most maxHops hops. Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyAmountInCurrencyAmount<TInput>undefinedused in recursion; the original value of the currencyAmountIn parametercurrencyOutTOutputundefinedthe desired currency out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountInCurrencyAmount<Currency>currencyAmountInexact amount of input currency to spendbestTradesTrade<TInput, TOutput, EXACT_INPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>[]>The exact in tradeDefined in‚Äãentities/trade.ts:495bestTradeExactOut‚Äã‚ñ∏ Static bestTradeExactOut<TInput, TOutput>(pools, currencyIn, currencyAmountOut, __namedParameters?, currentPools?, nextAmountOut?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>similar to the above method but instead targets a fixed output amount given a list of pools, and a fixed amount out, returns the top maxNumResults trades that go from an input token to an output token amount, making at most maxHops hops note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyInTInputundefinedthe currency to spendcurrencyAmountOutCurrencyAmount<TOutput>undefinedthe desired currency amount out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountOutCurrencyAmount<Currency>currencyAmountOutthe exact amount of currency outbestTradesTrade<TInput, TOutput, EXACT_OUTPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>The exact out tradeDefined in‚Äãentities/trade.ts:576createUncheckedTrade‚Äã‚ñ∏ Static createUncheckedTrade<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.inputAmountCurrencyAmount<TInput>-constructorArguments.outputAmountCurrencyAmount<TOutput>-constructorArguments.routeRoute<TInput, TOutput>-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:346createUncheckedTradeWithMultipleRoutes‚Äã‚ñ∏ Static createUncheckedTradeWithMultipleRoutes<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:377exactIn‚Äã‚ñ∏ Static exactIn<TInput, TOutput>(route, amountIn): Promise<Trade<TInput, TOutput, EXACT_INPUT>>Constructs an exact in trade with the given amount in and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact in tradeamountInCurrencyAmount<TInput>The amount being passed inReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>>The exact in tradeDefined in‚Äãentities/trade.ts:194exactOut‚Äã‚ñ∏ Static exactOut<TInput, TOutput>(route, amountOut): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>>Constructs an exact out trade with the given amount out and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact out tradeamountOutCurrencyAmount<TOutput>The amount returned by the tradeReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>>The exact out tradeDefined in‚Äãentities/trade.ts:209fromRoute‚Äã‚ñ∏ Static fromRoute<TInput, TOutput, TTradeType>(route, amount, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade by simulating swaps through the given routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>route to swap throughamountTTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>the amount specified, either input or output, depending on tradeTypetradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The routeDefined in‚Äãentities/trade.ts:226fromRoutes‚Äã‚ñ∏ Static fromRoutes<TInput, TOutput, TTradeType>(routes, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade from routes by simulating swapsType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionroutes{ amount: TTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]the routes to swap through and how much of the amount should be routed through eachtradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The tradeDefined in‚Äãentities/trade.ts:276Helpful?PreviousTickMathNextFeeAmountType parametersTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessorsexecutionPriceinputAmountoutputAmountpriceImpactrouteMethodsmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
551,p.org sdk v3 reference interfaces NFTPermitOptions#s,p.org sdk v3 reference interfaces NFTPermitOptions#s.    NFTPermitOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesNFTPermitOptionsHelpful?On this pageNFTPermitOptions@uniswap/v3-sdk / Exports / NFTPermitOptionsInterface: NFTPermitOptionsTable of contents‚ÄãProperties‚ÄãdeadlinersspendervProperties‚Äãdeadline‚Äã‚Ä¢ deadline: BigintIshDefined in‚ÄãnonfungiblePositionManager.ts:131r‚Äã‚Ä¢ r: stringDefined in‚ÄãnonfungiblePositionManager.ts:129s‚Äã‚Ä¢ s: stringDefined in‚ÄãnonfungiblePositionManager.ts:130spender‚Äã‚Ä¢ spender: stringDefined in‚ÄãnonfungiblePositionManager.ts:132v‚Äã‚Ä¢ v: 0 | 1 | 27 | 28Defined in‚ÄãnonfungiblePositionManager.ts:128Helpful?PreviousMintSpecificOptionsNextQuoteOptionsTable of contentsPropertiesPropertiesdeadlinersspendervDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
552,p.org sdk v3 reference classes SwapRouter#swapcallparameters,"p.org sdk v3 reference classes SwapRouter#swapcallparameters.    SwapRouter | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesSwapRouterHelpful?On this pageSwapRouter@uniswap/v3-sdk / Exports / SwapRouterClass: SwapRouterRepresents the Uniswap V3 SwapRouter, and has static methods for helping execute trades.Table of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãswapCallParametersConstructors‚Äãconstructor‚Äã‚Ä¢ Private new SwapRouter()Cannot be constructed.Defined in‚ÄãswapRouter.ts:57Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚ÄãswapRouter.ts:52Methods‚ÄãswapCallParameters‚Äã‚ñ∏ Static swapCallParameters(trades, options): MethodParametersProduces the on-chain method name to call and the hex encoded parameters to pass as arguments for a given trade.Parameters‚ÄãNameTypeDescriptiontradesTrade<Currency, Currency, TradeType> | Trade<Currency, Currency, TradeType>[]-optionsSwapOptionsoptions for the call parametersReturns‚ÄãMethodParametersDefined in‚ÄãswapRouter.ts:64Helpful?PreviousSwapQuoterNextTickTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsswapCallParametersDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
553,p.org sdk v3 reference classes LiquidityMath,"p.org sdk v3 reference classes LiquidityMath.    LiquidityMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesLiquidityMathHelpful?On this pageLiquidityMath@uniswap/v3-sdk / Exports / LiquidityMathClass: LiquidityMathTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãaddDeltaConstructors‚Äãconstructor‚Äã‚Ä¢ Private new LiquidityMath()Cannot be constructed.Defined in‚Äãutils/liquidityMath.ts:8Methods‚ÄãaddDelta‚Äã‚ñ∏ Static addDelta(x, y): defaultParameters‚ÄãNameTypexdefaultydefaultReturns‚ÄãdefaultDefined in‚Äãutils/liquidityMath.ts:10Helpful?PreviousFullMathNextMulticallTable of contentsConstructorsMethodsConstructorsconstructorMethodsaddDeltaDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
554,p.org contracts universal router technical reference#permit2 permit,"p.org contracts universal router technical reference#permit2 permit.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
555,p.org sdk core reference classes Percent#tofixed,"p.org sdk core reference classes Percent#tofixed.    Percent | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPercentHelpful?On this pagePercent@uniswap/sdk-core / Exports / PercentClass: PercentHierarchy‚ÄãFraction‚Ü≥ PercentTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatorisPercentnumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Percent(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshInherited from‚ÄãFraction.constructorDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26isPercent‚Äã‚Ä¢ Readonly isPercent: trueThis boolean prevents a fraction from being interpreted as a PercentDefined in‚Äãentities/fractions/percent.ts:19numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.addDefined in‚Äãentities/fractions/percent.ts:21divide‚Äã‚ñ∏ divide(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/percent.ts:33equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/percent.ts:29subtract‚Äã‚ñ∏ subtract(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/percent.ts:25toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber2format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/percent.ts:41toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber5format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/percent.ts:37Helpful?PreviousNativeCurrencyNextPriceHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatorisPercentnumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
556,p.org sdk v3 reference interfaces QuoteOptions#usequoterv2,p.org sdk v3 reference interfaces QuoteOptions#usequoterv2.    QuoteOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesQuoteOptionsHelpful?On this pageQuoteOptions@uniswap/v3-sdk / Exports / QuoteOptionsInterface: QuoteOptionsOptional arguments to send to the quoter.Table of contents‚ÄãProperties‚ÄãsqrtPriceLimitX96useQuoterV2Properties‚ÄãsqrtPriceLimitX96‚Äã‚Ä¢ Optional sqrtPriceLimitX96: BigintIshThe optional price limit for the trade.Defined in‚Äãquoter.ts:17useQuoterV2‚Äã‚Ä¢ Optional useQuoterV2: booleanThe optional quoter interface to useDefined in‚Äãquoter.ts:22Helpful?PreviousNFTPermitOptionsNextRemoveLiquidityOptionsTable of contentsPropertiesPropertiessqrtPriceLimitX96useQuoterV2DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
557,p.org sdk v3 reference interfaces IncentiveKey#rewardtoken,p.org sdk v3 reference interfaces IncentiveKey#rewardtoken.    IncentiveKey | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesIncentiveKeyHelpful?On this pageIncentiveKey@uniswap/v3-sdk / Exports / IncentiveKeyInterface: IncentiveKeyRepresents a unique staking program.Table of contents‚ÄãProperties‚ÄãendTimepoolrefundeerewardTokenstartTimeProperties‚ÄãendTime‚Äã‚Ä¢ endTime: BigintIshThe time that the incentive program ends.Defined in‚Äãstaker.ts:28pool‚Äã‚Ä¢ pool: PoolThe pool that the staked positions must provide in.Defined in‚Äãstaker.ts:20refundee‚Äã‚Ä¢ refundee: stringThe address which receives any remaining reward tokens at endTime.Defined in‚Äãstaker.ts:32rewardToken‚Äã‚Ä¢ rewardToken: TokenThe token rewarded for participating in the staking program.Defined in‚Äãstaker.ts:16startTime‚Äã‚Ä¢ startTime: BigintIshThe time when the incentive program begins.Defined in‚Äãstaker.ts:24Helpful?PreviousFeeOptionsNextIncreaseSpecificOptionsTable of contentsPropertiesPropertiesendTimepoolrefundeerewardTokenstartTimeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
558,p.org sdk v3 reference classes TickListDataProvider#ticks,"p.org sdk v3 reference classes TickListDataProvider#ticks.    TickListDataProvider | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickListDataProviderHelpful?On this pageTickListDataProvider@uniswap/v3-sdk / Exports / TickListDataProviderClass: TickListDataProviderA data provider for ticks that is backed by an in-memory array of ticks.Implements‚ÄãTickDataProviderTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãticksMethods‚ÄãgetTicknextInitializedTickWithinOneWordConstructors‚Äãconstructor‚Äã‚Ä¢ new TickListDataProvider(ticks, tickSpacing)Parameters‚ÄãNameTypeticks(Tick | TickConstructorArgs)[]tickSpacingnumberDefined in‚Äãentities/tickListDataProvider.ts:12Properties‚Äãticks‚Äã‚Ä¢ Private ticks: readonly Tick[]Defined in‚Äãentities/tickListDataProvider.ts:10Methods‚ÄãgetTick‚Äã‚ñ∏ getTick(tick): Promise<{ liquidityGross: BigintIsh ; liquidityNet: BigintIsh }>Return information corresponding to a specific tickParameters‚ÄãNameTypeDescriptionticknumberthe tick to loadReturns‚ÄãPromise<{ liquidityGross: BigintIsh ; liquidityNet: BigintIsh }>Implementation of‚ÄãTickDataProvider.getTickDefined in‚Äãentities/tickListDataProvider.ts:18nextInitializedTickWithinOneWord‚Äã‚ñ∏ nextInitializedTickWithinOneWord(tick, lte, tickSpacing): Promise<[number, boolean]>Return the next tick that is initialized within a single wordParameters‚ÄãNameTypeDescriptionticknumberThe current tickltebooleanWhether the next tick should be lte the current ticktickSpacingnumberThe tick spacing of the poolReturns‚ÄãPromise<[number, boolean]>Implementation of‚ÄãTickDataProvider.nextInitializedTickWithinOneWordDefined in‚Äãentities/tickListDataProvider.ts:22Helpful?PreviousTickListNextTickMathImplementsTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesticksMethodsgetTicknextInitializedTickWithinOneWordDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
559,p.org sdk v3 reference classes Trade#outputamount,"p.org sdk v3 reference classes Trade#outputamount.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTradeHelpful?On this pageTrade@uniswap/v3-sdk / Exports / TradeClass: Trade<TInput, TOutput, TTradeType>Represents a trade executed against a set of routes where some percentage of the input is split across each route.Each route has its own set of pools. Pools can not be re-used across routes.Does not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and when it is executed.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessors‚ÄãexecutionPriceinputAmountoutputAmountpriceImpactrouteMethods‚ÄãmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Trade<TInput, TOutput, TTradeType>(__namedParameters)Construct a trade by passing in the pre-computed property valuesType parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyTTradeTypeextends TradeTypeParameters‚ÄãNameType__namedParametersObject__namedParameters.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]__namedParameters.tradeTypeTTradeTypeDefined in‚Äãentities/trade.ts:397Properties‚Äã_executionPrice‚Äã‚Ä¢ Private _executionPrice: undefined | Price<TInput, TOutput>The cached result of the computed execution priceDefined in‚Äãentities/trade.ts:143_inputAmount‚Äã‚Ä¢ Private _inputAmount: undefined | CurrencyAmount<TInput>The cached result of the input amount computationDefined in‚Äãentities/trade.ts:97_outputAmount‚Äã‚Ä¢ Private _outputAmount: undefined | CurrencyAmount<TOutput>The cached result of the output amount computationDefined in‚Äãentities/trade.ts:120_priceImpact‚Äã‚Ä¢ Private _priceImpact: undefined | PercentThe cached result of the price impact computationDefined in‚Äãentities/trade.ts:164swaps‚Äã‚Ä¢ Readonly swaps: { inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]The swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.Defined in‚Äãentities/trade.ts:82tradeType‚Äã‚Ä¢ Readonly tradeType: TTradeTypeThe type of the trade, either exact in or exact out.Defined in‚Äãentities/trade.ts:91Accessors‚ÄãexecutionPrice‚Äã‚Ä¢ get executionPrice(): Price<TInput, TOutput>The price expressed in terms of output amount/input amount.Returns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/trade.ts:148inputAmount‚Äã‚Ä¢ get inputAmount(): CurrencyAmount<TInput>The input amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TInput>Defined in‚Äãentities/trade.ts:102outputAmount‚Äã‚Ä¢ get outputAmount(): CurrencyAmount<TOutput>The output amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TOutput>Defined in‚Äãentities/trade.ts:125priceImpact‚Äã‚Ä¢ get priceImpact(): PercentReturns the percent difference between the route's mid price and the price impactReturns‚ÄãPercentDefined in‚Äãentities/trade.ts:169route‚Äã‚Ä¢ get route(): Route<TInput, TOutput>DeprecatedDeprecated in favor of 'swaps' property. If the trade consists of multiple routes this will return an error.When the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.Returns‚ÄãRoute<TInput, TOutput>Defined in‚Äãentities/trade.ts:73Methods‚ÄãmaximumAmountIn‚Äã‚ñ∏ maximumAmountIn(slippageTolerance, amountIn?): CurrencyAmount<TInput>Get the maximum amount in that can be spent via this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountInCurrencyAmount<TInput>-Returns‚ÄãCurrencyAmount<TInput>The amount inDefined in‚Äãentities/trade.ts:456minimumAmountOut‚Äã‚ñ∏ minimumAmountOut(slippageTolerance, amountOut?): CurrencyAmount<TOutput>Get the minimum amount that must be received from this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountOutCurrencyAmount<TOutput>-Returns‚ÄãCurrencyAmount<TOutput>The amount outDefined in‚Äãentities/trade.ts:438worstExecutionPrice‚Äã‚ñ∏ worstExecutionPrice(slippageTolerance): Price<TInput, TOutput>Return the execution price after accounting for slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentthe allowed tolerated slippageReturns‚ÄãPrice<TInput, TOutput>The execution priceDefined in‚Äãentities/trade.ts:471bestTradeExactIn‚Äã‚ñ∏ Static bestTradeExactIn<TInput, TOutput>(pools, currencyAmountIn, currencyOut, __namedParameters?, currentPools?, nextAmountIn?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_INPUT>[]>Given a list of pools, and a fixed amount in, returns the top maxNumResults trades that go from an input token amount to an output token, making at most maxHops hops. Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyAmountInCurrencyAmount<TInput>undefinedused in recursion; the original value of the currencyAmountIn parametercurrencyOutTOutputundefinedthe desired currency out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountInCurrencyAmount<Currency>currencyAmountInexact amount of input currency to spendbestTradesTrade<TInput, TOutput, EXACT_INPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>[]>The exact in tradeDefined in‚Äãentities/trade.ts:495bestTradeExactOut‚Äã‚ñ∏ Static bestTradeExactOut<TInput, TOutput>(pools, currencyIn, currencyAmountOut, __namedParameters?, currentPools?, nextAmountOut?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>similar to the above method but instead targets a fixed output amount given a list of pools, and a fixed amount out, returns the top maxNumResults trades that go from an input token to an output token amount, making at most maxHops hops note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyInTInputundefinedthe currency to spendcurrencyAmountOutCurrencyAmount<TOutput>undefinedthe desired currency amount out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountOutCurrencyAmount<Currency>currencyAmountOutthe exact amount of currency outbestTradesTrade<TInput, TOutput, EXACT_OUTPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>The exact out tradeDefined in‚Äãentities/trade.ts:576createUncheckedTrade‚Äã‚ñ∏ Static createUncheckedTrade<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.inputAmountCurrencyAmount<TInput>-constructorArguments.outputAmountCurrencyAmount<TOutput>-constructorArguments.routeRoute<TInput, TOutput>-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:346createUncheckedTradeWithMultipleRoutes‚Äã‚ñ∏ Static createUncheckedTradeWithMultipleRoutes<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:377exactIn‚Äã‚ñ∏ Static exactIn<TInput, TOutput>(route, amountIn): Promise<Trade<TInput, TOutput, EXACT_INPUT>>Constructs an exact in trade with the given amount in and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact in tradeamountInCurrencyAmount<TInput>The amount being passed inReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>>The exact in tradeDefined in‚Äãentities/trade.ts:194exactOut‚Äã‚ñ∏ Static exactOut<TInput, TOutput>(route, amountOut): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>>Constructs an exact out trade with the given amount out and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact out tradeamountOutCurrencyAmount<TOutput>The amount returned by the tradeReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>>The exact out tradeDefined in‚Äãentities/trade.ts:209fromRoute‚Äã‚ñ∏ Static fromRoute<TInput, TOutput, TTradeType>(route, amount, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade by simulating swaps through the given routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>route to swap throughamountTTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>the amount specified, either input or output, depending on tradeTypetradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The routeDefined in‚Äãentities/trade.ts:226fromRoutes‚Äã‚ñ∏ Static fromRoutes<TInput, TOutput, TTradeType>(routes, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade from routes by simulating swapsType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionroutes{ amount: TTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]the routes to swap through and how much of the amount should be routed through eachtradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The tradeDefined in‚Äãentities/trade.ts:276Helpful?PreviousTickMathNextFeeAmountType parametersTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessorsexecutionPriceinputAmountoutputAmountpriceImpactrouteMethodsmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
560,p.org sdk v3 guides quoting,"p.org sdk v3 guides quoting.    Getting a Quote | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKGuidesGetting a QuoteHelpful?On this pageGetting a QuoteIntroduction‚ÄãThis guide will cover how to get the current quotes for any token pair on the Uniswap protocol. It is based on the Quoting code example, found in the Uniswap code examples repository. To run this example, check out the examples's README and follow the setup instructions.infoIf you need a briefer on the SDK and to learn more about how these guides connect to the examples repository, please visit our background page!In this example we will use quoteExactInputSingle to get a quote for the pair USDC - WETH. The inputs are the token in, the token out, the amount in and the fee.The fee input parameters represents the swap fee that distributed to all in range liquidity at the time of the swap. It is one of the identifiers of a Pool, the others being tokenIn and tokenOut.The guide will cover:Computing the Pool's deployment addressReferencing the Pool contract and fetching metadataReferencing the Quoter contract and getting a quoteAt the end of the guide, we should be able to fetch a quote for the given input token pair and the input token amount with the press of a button on the web application.For this guide, the following Uniswap packages are used:@uniswap/v3-sdk@uniswap/sdk-coreThe core code of this guide can be found in quote.tsComputing the Pool's deployment address‚ÄãTo interact with the USDC - WETH Pool contract, we first need to compute its deployment address. The SDK provides a utility method for that:Computing the Pool's addressloading...CopyView on GithubSince each Uniswap V3 Pool is uniquely identified by 3 characteristics (token in, token out, fee), we use those in combination with the address of the PoolFactory contract to compute the address of the USDC - ETH Pool. These parameters have already been defined in our configuration file:Configuration Parametersloading...CopyView on GithubReferencing the Pool contract and fetching metadata‚ÄãNow that we have the deployment address of the USDC - ETH Pool, we can construct an instance of an ethers Contract to interact with it:Setting up a reference to the Pool contractloading...CopyView on GithubTo construct the Contract we need to provide the address of the contract, its ABI and the provider that will carry out the RPC call for us. We get access to the contract's ABI through the @uniswap/v3-core package, which holds the core smart contracts of the Uniswap V3 protocol:Uniswap V3 Pool smart contract ABIloading...CopyView on GithubHaving constructed our reference to the contract, we can now access its methods through our provider. We use a batch Promise call. This approach queries state data concurrently, rather than sequentially, to avoid out of sync data that may be returned if sequential queries are executed over the span of two blocks:Getting Pool metadata from the Pool smart contractloading...CopyView on GithubThe return values of these methods will become inputs to the quote fetching function.noteIn this example, the metadata we fetch is already present in our inputs. This guide fetches this information first in order to show how to fetch any metadata, which will be expanded on in future guides.Referencing the Quoter contract and getting a quote‚ÄãLike we did for the Pool contract, we need to construct an instance of an ethers Contract for our Quoter contract in order to interact with it:Setting up a reference to the Quoter contractloading...CopyView on GithubWe get access to the contract's ABI through the @uniswap/v3-periphery package, which holds the periphery smart contracts of the Uniswap V3 protocol:Uniswap V3 Quoter smart contract ABIloading...CopyView on GithubWe can now use our Quoter contract to obtain the quote.In an ideal world, the quoter functions would be view functions, which would make them very easy to query on-chain with minimal gas costs. However, the Uniswap V3 Quoter contracts rely on state-changing calls designed to be reverted to return the desired data. This means calling the quoter will be very expensive and should not be called on-chain.To get around this difficulty, we can use the callStatic method provided by the ethers.js Contract instances. This is a useful method that submits a state-changing transaction to an Ethereum node, but asks the node to simulate the state change, rather than to execute it. Our script can then return the result of the simulated state change:Getting Quotes from the Quoter contractloading...CopyView on GithubThe result of the call is the number of output tokens you'd receive for the quoted swap.It should be noted that quoteExactInputSingle is only 1 of 4 different methods that the quoter offers:quoteExactInputSingle - given the amount you want to swap, produces a quote for the amount out for a swap of a single poolquoteExactInput - given the amount you want to swap, produces a quote for the amount out for a swap over multiple poolsquoteExactOutputSingle - given the amount you want to get out, produces a quote for the amount in for a swap over a single poolquoteExactOutput - given the amount you want to get out, produces a quote for the amount in for a swap over multiple poolsNext Steps‚ÄãNow that you're able to make a quote, check out our next guide on trading using this quote!Helpful?PreviousBackgroundNextExecuting a TradeIntroductionComputing the Pool's deployment addressReferencing the Pool contract and fetching metadataReferencing the Quoter contract and getting a quoteNext StepsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
561,p.org sdk v3 reference classes TickListDataProvider#constructor,"p.org sdk v3 reference classes TickListDataProvider#constructor.    TickListDataProvider | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickListDataProviderHelpful?On this pageTickListDataProvider@uniswap/v3-sdk / Exports / TickListDataProviderClass: TickListDataProviderA data provider for ticks that is backed by an in-memory array of ticks.Implements‚ÄãTickDataProviderTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãticksMethods‚ÄãgetTicknextInitializedTickWithinOneWordConstructors‚Äãconstructor‚Äã‚Ä¢ new TickListDataProvider(ticks, tickSpacing)Parameters‚ÄãNameTypeticks(Tick | TickConstructorArgs)[]tickSpacingnumberDefined in‚Äãentities/tickListDataProvider.ts:12Properties‚Äãticks‚Äã‚Ä¢ Private ticks: readonly Tick[]Defined in‚Äãentities/tickListDataProvider.ts:10Methods‚ÄãgetTick‚Äã‚ñ∏ getTick(tick): Promise<{ liquidityGross: BigintIsh ; liquidityNet: BigintIsh }>Return information corresponding to a specific tickParameters‚ÄãNameTypeDescriptionticknumberthe tick to loadReturns‚ÄãPromise<{ liquidityGross: BigintIsh ; liquidityNet: BigintIsh }>Implementation of‚ÄãTickDataProvider.getTickDefined in‚Äãentities/tickListDataProvider.ts:18nextInitializedTickWithinOneWord‚Äã‚ñ∏ nextInitializedTickWithinOneWord(tick, lte, tickSpacing): Promise<[number, boolean]>Return the next tick that is initialized within a single wordParameters‚ÄãNameTypeDescriptionticknumberThe current tickltebooleanWhether the next tick should be lte the current ticktickSpacingnumberThe tick spacing of the poolReturns‚ÄãPromise<[number, boolean]>Implementation of‚ÄãTickDataProvider.nextInitializedTickWithinOneWordDefined in‚Äãentities/tickListDataProvider.ts:22Helpful?PreviousTickListNextTickMathImplementsTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesticksMethodsgetTicknextInitializedTickWithinOneWordDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
562,p.org sdk core reference classes Percent#remainder,"p.org sdk core reference classes Percent#remainder.    Percent | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPercentHelpful?On this pagePercent@uniswap/sdk-core / Exports / PercentClass: PercentHierarchy‚ÄãFraction‚Ü≥ PercentTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatorisPercentnumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Percent(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshInherited from‚ÄãFraction.constructorDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26isPercent‚Äã‚Ä¢ Readonly isPercent: trueThis boolean prevents a fraction from being interpreted as a PercentDefined in‚Äãentities/fractions/percent.ts:19numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.addDefined in‚Äãentities/fractions/percent.ts:21divide‚Äã‚ñ∏ divide(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/percent.ts:33equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/percent.ts:29subtract‚Äã‚ñ∏ subtract(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/percent.ts:25toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber2format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/percent.ts:41toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber5format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/percent.ts:37Helpful?PreviousNativeCurrencyNextPriceHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatorisPercentnumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
563,p.org contracts v1 reference exchange,"p.org contracts v1 reference exchange.    Exchange | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 ProtocolOverviewGuidesConnect to UniswapPool LiquidityTrade TokensCustom LinkingIframe IntegrationToken ListingTechnical ReferenceFactoryExchangeInterfacesüè†V1 ProtocolTechnical ReferenceExchangeHelpful?On this pagesetupParameterDescriptiontoken_addrEthereum address of an ERC20 TokenSmart Contract‚Äã# Can only be called by factory contract during createExchange()setup(token_addr: address):CopyWeb3‚Äã// Can only be called by factory contract during createExchange()exchangeContract.methods.setup((token: String)).send()CopyaddLiquidityParameterTypeDescriptionmsg.valueuint256Amount of ETH addedmin_liquidityuint256Minimum minted liquiditymax_tokensuint256Maximum ERC20 tokens addeddeadlineuint256Transaction deadlineReturnsuint256Amount of liquidity tokens mintedSmart Contract‚Äã@payableaddLiquidity( min_liquidity: uint256, max_tokens: uint256, deadline: uint256): uint256CopyWeb3‚ÄãexchangeContract.methods.addLiquidity(min_liquidity, max_tokens, deadline).send({ value: ethValue })CopyremoveLiquidityParameterTypeDescriptionamountuint256Amount of liquidity burnedmin_ethuint256Minimum ETH removedmin_tokensuint256Minimum ERC20 tokens removeddeadlineuint256Transaction deadlineReturnsuint256Amount of ETH removeduint256Amount of ERC20 tokens removed.Smart Contract‚ÄãremoveLiquidity( amount: uint256; min_eth: uint256, min_tokens: uint256, deadline: uint256): (uint256, uint256)CopyWeb3‚ÄãexchangeContract.methods.removeLiquidity(amount, min_eth, min_tokens, deadline).send()CopydefaultParameterTypeDescriptionmsg.valueuint256Amount of ETH soldSmart Contract‚Äã# Default function in Vyper replaces the ""fallback"" function in Solidity@payable__default__():CopyWeb3‚Äãweb3.eth.sendTransaction({ value: ethAmount })CopyethToTokenSwapInputParameterTypeDescriptionmsg.valueuint256Amount of ETH soldmin_tokensuint256Minimum ERC20 tokens boughtdeadlineuint256Transaction deadlineReturnsuint256Amount of ERC20 tokens boughtSmart Contract‚Äã@payableethToTokenSwapInput( min_tokens: uint256, deadline: uint256): uint256CopyWeb3‚ÄãexchangeContract.methods.ethToTokenSwapInput(min_liquidity, max_tokens, deadline).send({ value: ethValue })CopyethToTokenTransferInputParameterTypeDescriptionmsg.valueuint256Amount of ETH soldmin_tokensuint256Minimum ERC20 tokens boughtdeadlineuint256Transaction deadlinerecipientaddressAddress that receives ERC20 tokensReturnsuint256Amount of ERC20 tokens boughtSmart Contract‚Äã@payableethToTokenTransferInput( min_tokens: uint256, deadline: uint256, recipient: address): uint256CopyWeb3‚ÄãexchangeContract.methods .ethToTokenTransferInput(min_liquidity, max_tokens, deadline, recipient) .send({ value: ethValue })CopyethToTokenSwapOutputParameterTypeDescriptionmsg.valueuint256Maximum ETH soldtokens_boughtuint256Amount of ERC20 tokens boughtdeadlineuint256Transaction deadlineReturnsuint256Amount of ETH soldSmart Contract‚Äã@payableethToTokenSwapOutput( tokens_bought: uint256, deadline: uint256): uint256CopyWeb3‚ÄãexchangeContract.methods.ethToTokenSwapOutput(tokens_bought, deadline).send({ value: ethValue })CopyethToTokenTransferOutputParameterTypeDescriptionmsg.valueuint256Maximum ETH soldtokens_boughtuint256Amount of ERC20 tokens boughtdeadlineuint256Transaction deadlinerecipientaddressAddress that receives ERC20 tokensReturnsuint256Amount of ETH soldSmart Contract‚Äã@payableethToTokenTransferOutput( tokens_bought: uint256, deadline: uint256, recipient: address): uint256CopyWeb3‚ÄãexchangeContract.methods .ethToTokenTransferOutput(tokens_bought, deadline, (recipient: String)) .send({ value: ethValue })CopytokenToEthSwapInputParameterTypeDescriptiontokens_solduint256Amount of ERC20 tokens soldmin_ethuint256Minimum ETH boughtdeadlineuint256Transaction deadlineReturnsuint256Amount of ETH boughtSmart Contract‚ÄãtokenToEthSwapInput( tokens_sold: uint256, min_eth: uint256, deadline: uint256): uint256CopyWeb3‚ÄãexchangeContract.methods.tokenToEthSwapInput(tokens_sold, min_eth, deadline).send()CopytokenToEthTransferInputParameterTypeDescriptiontokens_solduint256Amount of ERC20 tokens soldmin_ethuint256Minimum ETH boughtdeadlineuint256Transaction deadlinerecipientaddressAddress that receives ETHReturnsuint256Amount of ETH boughtSmart Contract‚ÄãtokenToEthTransferInput( tokens_sold: uint256, min_eth: uint256, deadline: uint256, recipient: address): uint256CopyWeb3‚ÄãexchangeContract.methods.tokenToEthTransferInput(tokens_sold, min_eth, deadline, recipient).send()CopytokenToEthSwapOutputParameterTypeDescriptioneth_boughtuint256Amount of ETH boughtmax_tokensuint256Maximum ERC20 tokens solddeadlineuint256Transaction deadlineReturnsuint256Amount of ERC20 tokens soldSmart Contract‚ÄãtokenToEthSwapOutput( eth_bought: uint256, max_tokens: uint256, deadline: uint256): uint256CopyWeb3‚ÄãexchangeContract.methods.tokenToEthSwapOutput(eth_bought, max_tokens, (deadline: Integer)).send()CopytokenToEthTransferOutputParameterTypeDescriptioneth_boughtuint256Amount of ETH boughtmax_tokensuint256Maximum ERC20 tokens solddeadlineuint256Transaction deadlinerecipientaddressAddress that receives ETHReturnsuint256Amount of ERC20 tokens soldSmart Contract‚ÄãtokenToEthTransferOutput( eth_bought: uint256, max_tokens: uint256, deadline: uint256, recipient: address): uint256CopyWeb3‚ÄãexchangeContract.methods .tokenToEthTransferOutput(eth_bought, max_tokens, (deadline: Integer), (recipient: String)) .send()CopytokenToTokenSwapInputParameterTypeDescriptiontokens_solduint256Amount of input ERC20 tokens soldmin_tokens_boughtuint256Minimum output ERC20 tokens boughtmin_eth_boughtuint256Minimum ETH bought as intermediarydeadlineuint256Transaction deadlinetoken_addraddressAddress of output ERC20 tokenReturnsuint256Amount of output ERC20 tokens boughtSmart Contract‚ÄãtokenToTokenSwapInput( tokens_sold: uint256, min_tokens_bought: uint256, min_eth_bought: uint256, deadline: uint256, token_addr: address): uint256CopyWeb3‚ÄãexchangeContract.methods .tokenToTokenSwapInput(tokens_sold, min_tokens_bought, min_eth_bought, deadline, token_addr) .send()CopytokenToTokenTransferInputParameterTypeDescriptiontokens_solduint256Amount of input ERC20 tokens soldmin_tokens_boughtuint256Minimum output ERC20 tokens boughtmin_eth_boughtuint256Minimum ETH bought as intermediarydeadlineuint256Transaction deadlinerecipientaddressAddress that receives output ERC20 tokenstoken_addraddressAddress of output ERC20 tokenReturnsuint256Amount of output ERC20 tokens boughtSmart Contract‚ÄãtokenToTokenTransferInput( tokens_sold: uint256, min_tokens_bought: uint256, min_eth_bought: uint256, deadline: uint256, recipient: address token_addr: address): uint256CopyWeb3‚ÄãexchangeContract.methods .tokenToTokenTransferInput(tokens_sold, min_tokens_bought, min_eth_bought, deadline, recipient, token_addr) .send()CopytokenToTokenSwapOutputParameterTypeDescriptiontokens_boughtuint256Amount of output ERC20 tokens boughtmax_tokens_solduint256Maximum input ERC20 tokens boughtmax_eth_solduint256Maximum ETH bought as intermediarydeadlineuint256Transaction deadlinetoken_addraddressAddress of output ERC20 tokenReturnsuint256Amount of input ERC20 tokens soldSmart Contract‚ÄãtokenToTokenSwapOutput( tokens_bought: uint256, max_tokens_sold: uint256, max_eth_sold: uint256, deadline: uint256, token_addr: address): uint256CopyWeb3‚ÄãexchangeContract.methods .tokenToTokenSwapOutput(tokens_bought, max_tokens_sold, max_eth_sold, deadline, token_addr) .send()CopytokenToTokenTransferOutputParameterTypeDescriptiontokens_boughtuint256Amount of output ERC20 tokens boughtmax_tokens_solduint256Maximum input ERC20 tokens boughtmax_eth_solduint256Maximum ETH bought as intermediarydeadlineuint256Transaction deadlinerecipientaddressAddress that receives output ERC20 tokenstoken_addraddressAddress of output ERC20 tokenReturnsuint256Amount of input ERC20 tokens soldSmart Contract‚ÄãtokenToTokenTransferOutput( tokens_bought: uint256, max_tokens_sold: uint256, max_eth_sold: uint256, deadline: uint256, recipient: address, token_addr: address): uint256CopyWeb3‚ÄãexchangeContract.methods .tokenToTokenTransferOutput(tokens_bought, max_tokens_sold, max_eth_sold, deadline, recipient, token_addr) .send()CopytokenToExchangeSwapInputParameterTypeDescriptiontokens_solduint256Amount of input ERC20 tokens soldmin_tokens_boughtuint256Minimum output ERC20 tokens boughtmin_eth_boughtuint256Minimum ETH bought as intermediarydeadlineuint256Transaction deadlineexchange_addraddressAddress of output ERC20 token exchangeReturnsuint256Amount of output ERC20 tokens boughtSmart Contract‚ÄãtokenToTokenSwapInput( tokens_sold: uint256, min_tokens_bought: uint256, min_eth_bought: uint256, deadline: uint256, exchange_addr: address): uint256CopyWeb3‚ÄãexchangeContract.methods .tokenToTokenSwapInput(tokens_sold, min_tokens_bought, min_eth_bought, deadline, exchange_addr) .send()CopytokenToExchangeTransferInputParameterTypeDescriptiontokens_solduint256Amount of input ERC20 tokens soldmin_tokens_boughtuint256Minimum output ERC20 tokens boughtmin_eth_boughtuint256Minimum ETH bought as intermediarydeadlineuint256Transaction deadlinerecipientaddressAddress that receives output ERC20 tokensexchange_addraddressAddress of output ERC20 token exchangeReturnsuint256Amount of output ERC20 tokens boughtSmart Contract‚ÄãtokenToExchangeTransferInput( tokens_sold: uint256, min_tokens_bought: uint256, min_eth_bought: uint256, deadline: uint256, recipient: address exchange_addr: address): uint256CopyWeb3‚ÄãexchangeContract.methods .tokenToExchangeTransferInput(tokens_sold, min_tokens_bought, min_eth_bought, deadline, recipient, exchange_addr) .send()CopytokenToExchangeSwapOutputParameterTypeDescriptiontokens_boughtuint256Amount of output ERC20 tokens boughtmax_tokens_solduint256Maximum input ERC20 tokens boughtmax_eth_solduint256Maximum ETH bought as intermediarydeadlineuint256Transaction deadlineexchange_addraddressAddress of output ERC20 token exchangeReturnsuint256Amount of input ERC20 tokens soldSmart Contract‚ÄãtokenToExchangeSwapOutput( tokens_bought: uint256, max_tokens_sold: uint256, max_eth_sold: uint256, deadline: uint256, exchange_addr: address): uint256CopyWeb3‚ÄãexchangeContract.methods .tokenToExchangeSwapOutput(tokens_bought, max_tokens_sold, max_eth_sold, deadline, exchange_addr) .send()CopytokenToExchangeTransferOutputParameterTypeDescriptiontokens_boughtuint256Amount of output ERC20 tokens boughtmax_tokens_solduint256Maximum input ERC20 tokens boughtmax_eth_solduint256Maximum ETH bought as intermediarydeadlineuint256Transaction deadlinerecipientaddressAddress that receives output ERC20 tokensexchange_addraddressAddress of output ERC20 token exchangeReturnsuint256Amount of input ERC20 tokens soldSmart Contract‚ÄãtokenToExchangeTransferOutput( tokens_bought: uint256, max_tokens_sold: uint256, max_eth_sold: uint256, deadline: uint256, recipient: address, exchange_addr: address): uint256CopyWeb3‚ÄãexchangeContract.methods .tokenToExchangeTransferOutput(tokens_bought, max_tokens_sold, max_eth_sold, deadline, recipient, exchange_addr) .send()CopygetEthToTokenInputPriceParameterTypeDescriptioneth_solduint256Amount of ETH soldReturnsuint256Amount of ERC20 tokens that can be boughtSmart Contract‚Äã@constantgetEthToTokenInputPrice(eth_sold: uint256): uint256CopyWeb3‚ÄãexchangeContract.methods.getEthToTokenInputPrice(eth_sold).call()CopygetEthToTokenOutputPriceParameterTypeDescriptiontokens_boughtuint256Amount of ERC20 tokens boughtReturnsuint256Amount of ETH that must be soldSmart Contract‚Äã@constantgetEthToTokenOutputPrice(tokens_bought: uint256): uint256CopyWeb3‚ÄãexchangeContract.methods.getEthToTokenOutputPrice(tokens_bought).call()CopygetTokenToEthInputPriceParameterTypeDescriptiontokens_solduint256Amount of ERC20 tokens soldReturnsuint256Amount of ETH that can be boughtSmart Contract‚Äã@constantgetTokenToEthInputPrice(tokens_sold: uint256): uint256CopyWeb3‚ÄãexchangeContract.methods.getTokenToEthInputPrice(tokens_sold).call()CopygetTokenToEthOutputPriceParameterTypeDescriptioneth_boughtuint256Amount of ETH boughtReturnsuint256Amount of ERC20 tokens that must be soldSmart Contract‚Äã@constantgetTokenToEthOutputPrice(eth_bought: uint256): uint256CopyWeb3‚ÄãexchangeContract.methods.getTokenToEthOutputPrice(eth_bought).call()CopytokenAddressReturnsaddressAddress of ERC20 token sold on exchangeSmart Contract‚Äã@constanttokenAddress(): addressCopyWeb3‚ÄãexchangeContract.methods.tokenAddress().call()CopyfactoryAddressReturnsaddressAddress of factory that created exchangeSmart Contract‚Äã@constantfactoryAddress(): addressCopyWeb3‚ÄãexchangeContract.methods.factoryAddress().call()CopynameReturnsbytes32Name of liquidity tokenSmart Contract‚Äã# all exchange contracts have the same name@constantname(): bytes32 // Uniswap V1CopyWeb3‚ÄãexchangeContract.methods.tokenAddress().call()CopysymbolReturnsbytes32Symbol of liquidity tokenSmart Contract‚Äã# all exchange contracts have the same symbol@constantsymbol(): bytes32 // UNI-V1CopyWeb3‚ÄãexchangeContract.methods.tokenAddress().call()CopydecimalsReturnsuint256Decimals of liquidity tokenSmart Contract‚Äã# all exchange contracts have the same decimals@constantdecimals(): uint256 // 18CopyWeb3‚ÄãexchangeContract.methods.decimals().call()CopybalanceOfParameterTypeDescription_owneraddressEthereum addressReturnsuint256Liquidity token balance of addressSmart Contract‚Äã@constantbalanceOf(_owner: address): uint256CopyWeb3‚ÄãexchangeContract.methods.balanceOf(_owner).call()CopytransferParameterTypeDescription_toaddressRecipient address_valueuint256Amount transferredReturnsboolTrue if successful. Reverts or false on failureSmart Contract‚Äãtransfer( _to: address, _value : uint256): boolCopyWeb3‚ÄãexchangeContract.methods.transfer(_to, _value).send()CopytransferFromParameterTypeDescription_fromaddressSender address_toaddressRecipient address_valueuint256Amount transferredReturnsboolTrue if successful. Reverts or false on failureSmart Contract‚ÄãtransferFrom( _from: address, _to: address, _value : uint256): boolCopyWeb3‚ÄãexchangeContract.methods.transferFrom(_from, _to, _value).send()CopyapproveParameterTypeDescription_spenderaddressAddress of approved spender_valueuint256Spender allowanceReturnsboolTrue if successful. Reverts or false on failureSmart Contract‚Äãapprove( _spender: address, _value: uint256): boolCopyWeb3‚ÄãexchangeContract.methods.approve(_spender, _value).send()CopyallowanceParameterTypeDescription_owneraddressAddress of liquidity token owner_spenderuint256Address of approved spenderReturnsuint256Spender allowanceSmart Contract‚Äãallowance( _owner: address, _spender: address): uint256CopyWeb3‚ÄãexchangeContract.methods.allowance(_owner, _spender).call()CopyEdit this pageHelpful?PreviousFactoryNextInterfacesSmart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
564,p.org sdk core reference modules.md#weth9,p.org sdk core reference modules.md#weth9. 
565,p.org sdk v2 guides quick start,"p.org sdk v2 guides quick start.    SDK Quick start | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKOverviewGuidesSDK Quick startFetching DataPricingTradingPair AddressesTechnical ReferenceGetting StartedTokenPairRouteTradeFractionsFetcherOther ExportsV1 SDKüè†V2 SDKGuidesSDK Quick startHelpful?On this pageSDK Quick startThe Uniswap SDK exists to help developers build on top of Uniswap. It's designed to run in any environment that can execute JavaScript (think websites, node scripts, etc.). While simple enough to use in a hackathon project, it's also robust enough to power production applications.InstallationThe easiest way to consume the SDK is via npm. To install it in your project, simply run yarn add @uniswap/sdk (or npm install @uniswap/sdk).UsageTo run code from the SDK in your application, use an import or require statement, depending on which your environment supports. Note that the guides following this page will use ES6 syntax.ES6 (import)‚Äãimport { ChainId } from '@uniswap/sdk'console.log(`The chainId of mainnet is ${ChainId.MAINNET}.`)CopyCommonJS (require)‚Äãconst UNISWAP = require('@uniswap/sdk')console.log(`The chainId of mainnet is ${UNISWAP.ChainId.MAINNET}.`)CopyReferenceComprehensive reference material for the SDK is publicly available on the Uniswap Labs Github.Helpful?PreviousOverviewNextFetching DataES6 (import)CommonJS (require)DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
566,p.org sdk 1.0.0 reference types,p.org sdk 1.0.0 reference types. 
567,p.org sdk v3 reference interfaces StandardPermitArguments,p.org sdk v3 reference interfaces StandardPermitArguments.    StandardPermitArguments | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesStandardPermitArgumentsHelpful?On this pageStandardPermitArguments@uniswap/v3-sdk / Exports / StandardPermitArgumentsInterface: StandardPermitArgumentsTable of contents‚ÄãProperties‚ÄãamountdeadlinersvProperties‚Äãamount‚Äã‚Ä¢ amount: BigintIshDefined in‚ÄãselfPermit.ts:10deadline‚Äã‚Ä¢ deadline: BigintIshDefined in‚ÄãselfPermit.ts:11r‚Äã‚Ä¢ r: stringDefined in‚ÄãselfPermit.ts:8s‚Äã‚Ä¢ s: stringDefined in‚ÄãselfPermit.ts:9v‚Äã‚Ä¢ v: 0 | 1 | 27 | 28Defined in‚ÄãselfPermit.ts:7Helpful?PreviousSafeTransferOptionsNextSwapOptionsTable of contentsPropertiesPropertiesamountdeadlinersvDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
568,p.org contracts universal router technical reference#x2y2 1155,"p.org contracts universal router technical reference#x2y2 1155.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
569,p.org sdk v3 reference classes Payments#constructor,"p.org sdk v3 reference classes Payments#constructor.    Payments | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPaymentsHelpful?On this pagePayments@uniswap/v3-sdk / Exports / PaymentsClass: PaymentsTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãencodeFeeBipsencodeRefundETHencodeSweepTokenencodeUnwrapWETH9Constructors‚Äãconstructor‚Äã‚Ä¢ Private new Payments()Cannot be constructed.Defined in‚Äãpayments.ts:25Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚Äãpayments.ts:20Methods‚ÄãencodeFeeBips‚Äã‚ñ∏ Static Private encodeFeeBips(fee): stringParameters‚ÄãNameTypefeePercentReturns‚ÄãstringDefined in‚Äãpayments.ts:27encodeRefundETH‚Äã‚ñ∏ Static encodeRefundETH(): stringReturns‚ÄãstringDefined in‚Äãpayments.ts:73encodeSweepToken‚Äã‚ñ∏ Static encodeSweepToken(token, amountMinimum, recipient, feeOptions?): stringParameters‚ÄãNameTypetokenTokenamountMinimumdefaultrecipientstringfeeOptions?FeeOptionsReturns‚ÄãstringDefined in‚Äãpayments.ts:49encodeUnwrapWETH9‚Äã‚ñ∏ Static encodeUnwrapWETH9(amountMinimum, recipient, feeOptions?): stringParameters‚ÄãNameTypeamountMinimumdefaultrecipientstringfeeOptions?FeeOptionsReturns‚ÄãstringDefined in‚Äãpayments.ts:31Helpful?PreviousNonfungiblePositionManagerNextPoolTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsencodeFeeBipsencodeRefundETHencodeSweepTokenencodeUnwrapWETH9DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
570,p.org sdk v3 reference interfaces CollectOptions#recipient,"p.org sdk v3 reference interfaces CollectOptions#recipient.    CollectOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesCollectOptionsHelpful?On this pageCollectOptions@uniswap/v3-sdk / Exports / CollectOptionsInterface: CollectOptionsTable of contents‚ÄãProperties‚ÄãexpectedCurrencyOwed0expectedCurrencyOwed1recipienttokenIdProperties‚ÄãexpectedCurrencyOwed0‚Äã‚Ä¢ expectedCurrencyOwed0: CurrencyAmount<Currency>Expected value of tokensOwed0, including as-of-yet-unaccounted-for fees/liquidity value to be burnedDefined in‚ÄãnonfungiblePositionManager.ts:114expectedCurrencyOwed1‚Äã‚Ä¢ expectedCurrencyOwed1: CurrencyAmount<Currency>Expected value of tokensOwed1, including as-of-yet-unaccounted-for fees/liquidity value to be burnedDefined in‚ÄãnonfungiblePositionManager.ts:119recipient‚Äã‚Ä¢ recipient: stringThe account that should receive the tokens.Defined in‚ÄãnonfungiblePositionManager.ts:124tokenId‚Äã‚Ä¢ tokenId: BigintIshIndicates the ID of the position to collect for.Defined in‚ÄãnonfungiblePositionManager.ts:109Helpful?PreviousClaimOptionsNextCommonAddLiquidityOptionsTable of contentsPropertiesPropertiesexpectedCurrencyOwed0expectedCurrencyOwed1recipienttokenIdDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
571,p.org sdk v3 reference classes Trade#besttradeexactin,"p.org sdk v3 reference classes Trade#besttradeexactin.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTradeHelpful?On this pageTrade@uniswap/v3-sdk / Exports / TradeClass: Trade<TInput, TOutput, TTradeType>Represents a trade executed against a set of routes where some percentage of the input is split across each route.Each route has its own set of pools. Pools can not be re-used across routes.Does not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and when it is executed.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessors‚ÄãexecutionPriceinputAmountoutputAmountpriceImpactrouteMethods‚ÄãmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Trade<TInput, TOutput, TTradeType>(__namedParameters)Construct a trade by passing in the pre-computed property valuesType parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyTTradeTypeextends TradeTypeParameters‚ÄãNameType__namedParametersObject__namedParameters.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]__namedParameters.tradeTypeTTradeTypeDefined in‚Äãentities/trade.ts:397Properties‚Äã_executionPrice‚Äã‚Ä¢ Private _executionPrice: undefined | Price<TInput, TOutput>The cached result of the computed execution priceDefined in‚Äãentities/trade.ts:143_inputAmount‚Äã‚Ä¢ Private _inputAmount: undefined | CurrencyAmount<TInput>The cached result of the input amount computationDefined in‚Äãentities/trade.ts:97_outputAmount‚Äã‚Ä¢ Private _outputAmount: undefined | CurrencyAmount<TOutput>The cached result of the output amount computationDefined in‚Äãentities/trade.ts:120_priceImpact‚Äã‚Ä¢ Private _priceImpact: undefined | PercentThe cached result of the price impact computationDefined in‚Äãentities/trade.ts:164swaps‚Äã‚Ä¢ Readonly swaps: { inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]The swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.Defined in‚Äãentities/trade.ts:82tradeType‚Äã‚Ä¢ Readonly tradeType: TTradeTypeThe type of the trade, either exact in or exact out.Defined in‚Äãentities/trade.ts:91Accessors‚ÄãexecutionPrice‚Äã‚Ä¢ get executionPrice(): Price<TInput, TOutput>The price expressed in terms of output amount/input amount.Returns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/trade.ts:148inputAmount‚Äã‚Ä¢ get inputAmount(): CurrencyAmount<TInput>The input amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TInput>Defined in‚Äãentities/trade.ts:102outputAmount‚Äã‚Ä¢ get outputAmount(): CurrencyAmount<TOutput>The output amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TOutput>Defined in‚Äãentities/trade.ts:125priceImpact‚Äã‚Ä¢ get priceImpact(): PercentReturns the percent difference between the route's mid price and the price impactReturns‚ÄãPercentDefined in‚Äãentities/trade.ts:169route‚Äã‚Ä¢ get route(): Route<TInput, TOutput>DeprecatedDeprecated in favor of 'swaps' property. If the trade consists of multiple routes this will return an error.When the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.Returns‚ÄãRoute<TInput, TOutput>Defined in‚Äãentities/trade.ts:73Methods‚ÄãmaximumAmountIn‚Äã‚ñ∏ maximumAmountIn(slippageTolerance, amountIn?): CurrencyAmount<TInput>Get the maximum amount in that can be spent via this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountInCurrencyAmount<TInput>-Returns‚ÄãCurrencyAmount<TInput>The amount inDefined in‚Äãentities/trade.ts:456minimumAmountOut‚Äã‚ñ∏ minimumAmountOut(slippageTolerance, amountOut?): CurrencyAmount<TOutput>Get the minimum amount that must be received from this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountOutCurrencyAmount<TOutput>-Returns‚ÄãCurrencyAmount<TOutput>The amount outDefined in‚Äãentities/trade.ts:438worstExecutionPrice‚Äã‚ñ∏ worstExecutionPrice(slippageTolerance): Price<TInput, TOutput>Return the execution price after accounting for slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentthe allowed tolerated slippageReturns‚ÄãPrice<TInput, TOutput>The execution priceDefined in‚Äãentities/trade.ts:471bestTradeExactIn‚Äã‚ñ∏ Static bestTradeExactIn<TInput, TOutput>(pools, currencyAmountIn, currencyOut, __namedParameters?, currentPools?, nextAmountIn?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_INPUT>[]>Given a list of pools, and a fixed amount in, returns the top maxNumResults trades that go from an input token amount to an output token, making at most maxHops hops. Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyAmountInCurrencyAmount<TInput>undefinedused in recursion; the original value of the currencyAmountIn parametercurrencyOutTOutputundefinedthe desired currency out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountInCurrencyAmount<Currency>currencyAmountInexact amount of input currency to spendbestTradesTrade<TInput, TOutput, EXACT_INPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>[]>The exact in tradeDefined in‚Äãentities/trade.ts:495bestTradeExactOut‚Äã‚ñ∏ Static bestTradeExactOut<TInput, TOutput>(pools, currencyIn, currencyAmountOut, __namedParameters?, currentPools?, nextAmountOut?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>similar to the above method but instead targets a fixed output amount given a list of pools, and a fixed amount out, returns the top maxNumResults trades that go from an input token to an output token amount, making at most maxHops hops note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyInTInputundefinedthe currency to spendcurrencyAmountOutCurrencyAmount<TOutput>undefinedthe desired currency amount out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountOutCurrencyAmount<Currency>currencyAmountOutthe exact amount of currency outbestTradesTrade<TInput, TOutput, EXACT_OUTPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>The exact out tradeDefined in‚Äãentities/trade.ts:576createUncheckedTrade‚Äã‚ñ∏ Static createUncheckedTrade<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.inputAmountCurrencyAmount<TInput>-constructorArguments.outputAmountCurrencyAmount<TOutput>-constructorArguments.routeRoute<TInput, TOutput>-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:346createUncheckedTradeWithMultipleRoutes‚Äã‚ñ∏ Static createUncheckedTradeWithMultipleRoutes<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:377exactIn‚Äã‚ñ∏ Static exactIn<TInput, TOutput>(route, amountIn): Promise<Trade<TInput, TOutput, EXACT_INPUT>>Constructs an exact in trade with the given amount in and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact in tradeamountInCurrencyAmount<TInput>The amount being passed inReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>>The exact in tradeDefined in‚Äãentities/trade.ts:194exactOut‚Äã‚ñ∏ Static exactOut<TInput, TOutput>(route, amountOut): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>>Constructs an exact out trade with the given amount out and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact out tradeamountOutCurrencyAmount<TOutput>The amount returned by the tradeReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>>The exact out tradeDefined in‚Äãentities/trade.ts:209fromRoute‚Äã‚ñ∏ Static fromRoute<TInput, TOutput, TTradeType>(route, amount, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade by simulating swaps through the given routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>route to swap throughamountTTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>the amount specified, either input or output, depending on tradeTypetradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The routeDefined in‚Äãentities/trade.ts:226fromRoutes‚Äã‚ñ∏ Static fromRoutes<TInput, TOutput, TTradeType>(routes, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade from routes by simulating swapsType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionroutes{ amount: TTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]the routes to swap through and how much of the amount should be routed through eachtradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The tradeDefined in‚Äãentities/trade.ts:276Helpful?PreviousTickMathNextFeeAmountType parametersTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessorsexecutionPriceinputAmountoutputAmountpriceImpactrouteMethodsmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
572,p.org whitepaper.pdf,"p.org whitepaper.pdf. %PDF-1.5 %ÔøΩÔøΩÔøΩÔøΩ 39 0 obj << /Linearized 1 /L 316194 /H [ 2619 311 ] /O 43 /E 103160 /N 10 /T 315691 >> endobj                           40 0 obj << /Type /XRef /Length 99 /Filter /FlateDecode /DecodeParms << /Columns 5 /Predictor 12 >> /W [ 1 3 1 ] /Index [ 39 279 ] /Info 37 0 R /Root 41 0 R /Size 318 /Prev 315692    /ID [<997a5ae78837e1a0daa3160ce748e3a1>] >> stream xÔøΩcbd`ÔøΩg`b``8	""9ÔøΩHÔøΩ0i&ÔøΩÔøΩHÔøΩ RÔøΩDÔøΩÔøΩHUÔøΩzÔøΩÔøΩ RÔøΩH2⁄≠ÔøΩSÔøΩ@$7ÔøΩÔøΩÔøΩk`ÔøΩGÔøΩQÔøΩ|ÔøΩyÔøΩÔøΩÔøΩaÔøΩ$ÔøΩdÔøΩ>ÔøΩn%ÔøΩ	 *mÔøΩ endstream endobj                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      41 0 obj << /Names 224 0 R /OpenAction 274 0 R /Outlines 209 0 R /PageMode /UseOutlines /Pages 208 0 R /Type /Catalog >> endobj 42 0 obj << /Filter /FlateDecode /S 162 /O 239 /Length 224 >> stream xÔøΩc```b`ÔøΩf`a`ÔøΩQadÔøΩ0ÔøΩX&00ÔøΩÔøΩdÔøΩ3ÔøΩ2ÔøΩ`ÔøΩ`ÔøΩÔøΩ$ÔøΩÔøΩ¬ñwÔøΩÔøΩÔøΩO”≥ÔøΩ ÔøΩ}ÔøΩ ÔøΩÔøΩ[lxÔøΩ)YÔøΩ“èÔøΩi%ÔøΩÔøΩS^FÔøΩkﬁ∏n+ÔøΩÔøΩjvÔøΩTOÔøΩ%gÔøΩrÔøΩ'ÔøΩÔøΩÔøΩÔøΩ/ÔøΩNÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩXÔøΩ2ÔøΩÔøΩÔøΩÿ≠ ÔøΩ@ÔøΩÔøΩ)ÔøΩ&ÔøΩÔøΩb)ÔøΩÔøΩ0ÔøΩ30ÔøΩ|ÔøΩÔøΩ5iYwÔøΩTÔøΩ-ÔøΩ#ÔøΩ ÔøΩeÔøΩt-ÔøΩÔøΩT&ÔøΩlEÔøΩGnÔøΩÔøΩÔøΩÔøΩcKÔøΩLÔøΩmÔøΩÔøΩ)ÔøΩÔøΩ3ÔøΩzÔøΩÔøΩÔøΩ &JX endstream endobj 43 0 obj << /Annots [ 275 0 R 276 0 R 277 0 R 278 0 R 279 0 R ] /Contents 44 0 R /MediaBox [ 0 0 612 792 ] /Parent 176 0 R /Resources 280 0 R /Type /Page >> endobj 44 0 obj << /Filter /FlateDecode /Length 2478 >> stream xÔøΩ}XKÔøΩÔøΩ6ÔøΩœØhÔøΩeÔøΩ@[ÔøΩÔøΩÔøΩÔøΩe6;ÔøΩÔøΩÔøΩC–É6ÔøΩmÔøΩ6YÔøΩrwÔøΩÔøΩo}UEÔøΩ,xÔøΩ""ÔøΩÔøΩbÔøΩXÔøΩÔøΩGÔøΩÔøΩÔøΩÔøΩÔøΩ/yÔøΩVqÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩCVÔøΩqS6eÔøΩÔøΩiCÔøΩÔøΩ√ØÔøΩÔøΩÔøΩÔøΩÔøΩ«¨ÔøΩÔøΩÔøΩqÔøΩ'YÔøΩÔøΩÔøΩÔøΩÔøΩ~ÔøΩÔøΩÔøΩ=ÔøΩÔøΩÔøΩ""yH”∏YÔøΩ3HYÔøΩIguÔøΩÔøΩÔøΩÔøΩnRÔøΩyÃ™Ë∫≥ÔøΩ&iÔøΩvÔøΩÔøΩ1ÔøΩÔøΩÔøΩ8-ÔøΩÔøΩqSÔøΩÔøΩ~ÔøΩÔøΩÔøΩÔøΩ5)ÔøΩ√ÅÔøΩÔøΩ:.ÔøΩÔøΩa>ÔøΩ_ÔøΩ9ÔøΩÔøΩÔøΩÔøΩŒüÔøΩÔøΩdÔøΩ,^WÔøΩÔøΩqÔøΩ’≠ÔøΩ~\5ÔøΩ:ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ^R;ÔøΩÔøΩÔøΩÔøΩÔøΩuÔøΩUÔøΩÔøΩ÷åÔøΩÔøΩÔøΩÔøΩ\ÔøΩm/;ÔøΩÔøΩÔøΩG3ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩkUÔøΩUÔøΩSZtÔøΩ“ØX∆≤ÔøΩWeÔøΩÔøΩtÔøΩÔøΩDÔøΩ:ÔøΩÔøΩ–èf ÔøΩ;ÔøΩÔøΩÔøΩyp[+ÕûlÔøΩ=ÔøΩ(ÔøΩÔøΩ€∂=ÔøΩÔøΩÔøΩH[ÔøΩ9ÔøΩÀ®ÔøΩc/ÔøΩGw2ÔøΩ1#NÔøΩÔøΩÔøΩqŸïÔøΩÔøΩGÔøΩ&ÔøΩeÔøΩ6ÔøΩ^xh0ÔøΩÔøΩÔøΩiÔøΩGsÔøΩÔøΩ ÔøΩÔøΩ{ÔøΩbr}ÔøΩÔøΩXÔøΩÔøΩÔøΩÔøΩÔøΩ'* ÔøΩ|hlÔøΩÔøΩÔøΩ?ÔøΩ^ÔøΩÔøΩ$zÔøΩ*‹íÔøΩi	 nÔøΩÔøΩ&$ÔøΩÔøΩÔøΩQÔøΩseÔøΩÔøΩ'mÔøΩÔøΩÔøΩmÔøΩ<ÔøΩNFKÔøΩÔøΩsMhÔøΩÔøΩ@ÔøΩqpoÔøΩŒßJ7ÔøΩÔøΩÔøΩÔøΩwÔøΩFÔøΩPÔøΩÔøΩ<YÔøΩ9ÔøΩ:ÔøΩi`T.PÔøΩPÔøΩÔøΩÔøΩ¬üÔøΩ2,QÔøΩÔøΩ,ÔøΩÔøΩcŸãÔøΩÔøΩyÔøΩ_ÔøΩÔøΩÔøΩ@ÔøΩÔøΩÔøΩ ÔøΩWÔøΩÔøΩÔøΩG]nÔøΩÔøΩÔøΩ`ÔøΩmÔøΩÔøΩÔøΩÔøΩÔøΩPÔøΩlZÃü]y/ÔøΩÔøΩn ÔøΩ	ÔøΩÔøΩ ?FÔøΩLGÔøΩP5ÔøΩÔøΩÔøΩAÔøΩ M!ÔøΩUÔøΩHÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩKOÔøΩ_qÔøΩrÔøΩÔøΩÔøΩ@ÔøΩÔøΩÔøΩl]ÔøΩ$ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ-ÔøΩyÔøΩt¬∏d…≤ÔøΩÔøΩÔøΩ{?ÔøΩ ÔøΩ=0<}	ÔøΩÔøΩ8ÔøΩÔøΩ _ÔøΩIR2vÔøΩl;HÔøΩÔøΩpÔøΩf\LÔøΩ2<ÔøΩ9zÔøΩ.ÔøΩp (ÔøΩqjÔøΩwAŸàÔøΩÔøΩ ÔøΩQÔøΩÔøΩ¬ÑÔøΩS2ÔøΩÔøΩÔøΩaÔøΩÔøΩÔøΩÔøΩ⁄´JgÔøΩÔøΩ◊äÔøΩiÔøΩMÔøΩJÔøΩÔøΩ…üÔøΩÔøΩÔøΩÔøΩÔøΩCÔøΩZ$ÔøΩÔøΩ#ÔøΩ ÔøΩWÔøΩÔøΩ~qÔøΩÔøΩ'ÔøΩ_Ã±ÔøΩvKÔøΩÔøΩÔøΩNÔøΩ0ÔøΩ jÔøΩÔøΩ7XÔøΩÔøΩÔøΩKÔøΩÔøΩ ,HÔøΩIÔøΩDÔøΩP/ÔøΩ	 ÉÔøΩ4[U|ÕªÔøΩÔøΩÔøΩÔøΩWyÔøΩ,ÔøΩÔøΩÔøΩAh6ÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÏæí$ÔøΩVIÔøΩÔøΩÔøΩQgÔøΩÔøΩ$ÔøΩMÎ••ÔøΩÔøΩÔøΩ`ÔøΩÔøΩRÔøΩKÔøΩ|7ÔøΩjÔøΩÔøΩÔøΩ$ÔøΩ1ÔøΩ)ÔøΩÔøΩBÔøΩ""⁄Ω^ÔøΩjÔøΩ1WsogÔøΩ!Aƒ∑ÔøΩNÔøΩÔøΩÔøΩÔøΩÔøΩ2ZyÔøΩÔøΩ(ÔøΩÔøΩBÔøΩÔøΩVƒàD_*p+B_/'ÔøΩ%ÔøΩv?ÔøΩÔøΩeÔøΩnÔøΩk{ÔøΩVÔøΩÔøΩÔøΩEÔøΩdÔøΩJÔøΩJÔøΩÔøΩÔøΩg–ö]ÔøΩÔøΩÔøΩÔøΩVtMÔøΩÔøΩCEW""#ZUÔøΩ17 |KÔøΩIhÔøΩÔøΩ!bzo7ÔøΩÔøΩÔøΩA}+ZÔøΩeÔøΩ [ÔøΩS-g◊Æ;ÔøΩ@ÔøΩÔøΩÔøΩÔøΩqÔøΩoEyÔøΩÔøΩeÔøΩÔøΩ?ÔøΩZÔøΩ(ÔøΩ>]ÔøΩœ™ÔøΩh√ÄqÔøΩÔøΩÔøΩÔøΩÔøΩ.9ÔøΩ8 ®ÔøΩÔøΩ5(atÔøΩÔøΩÔøΩoz}7ÔøΩÔøΩÔøΩkÔøΩ MÔøΩ>ÔøΩJÔøΩ&$ÔøΩRyÔøΩ ÔøΩÔøΩMpÔøΩÔøΩ8 ÔøΩ`8bÔøΩkÔøΩÔøΩ“•1ÔøΩ+ÔøΩo%ÔøΩÔøΩ?Gﬁ†ÔøΩW8ÔøΩ ÔøΩÔøΩÔøΩ BÔøΩPCÔøΩÔøΩwÔøΩ;/SÔøΩ <(ÔøΩÔøΩ≈îÔøΩJ(hÔøΩÔøΩxÔøΩÔøΩÔøΩqÔøΩÔøΩÔøΩ(ÔøΩÔøΩKX.ÔøΩ;ÔøΩ)ÔøΩ'ÕìÔøΩQÔøΩÔøΩÔøΩÔøΩISÔøΩrb9iÔøΩvGeÔøΩ+6ÔøΩ$ ÔøΩÔøΩÔøΩÔøΩÔøΩ4NÔøΩÔøΩKÔøΩÔøΩ‘∑ÔøΩHHÔøΩÔøΩDÔøΩFaÔøΩÔøΩ”†^ÔøΩ&ÔøΩr*ÔøΩÔøΩyÔøΩcÔøΩiPÔøΩ«†À±uÔøΩÔøΩiÔøΩVÔøΩÔøΩ}ÔøΩÔøΩy2_ÔøΩ^aÔøΩÔøΩÔøΩgÔøΩ}ÔøΩ8ÔøΩÔøΩKÔøΩÔøΩ^ÔøΩÔøΩ]ÔøΩJLIoÔøΩ^ÔøΩ>ÔøΩÔøΩÔøΩÔøΩNÔøΩOÔøΩZÔøΩ6XÔøΩ-/ÔøΩhÔøΩ\ÔøΩx+x	ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩLÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩÔøΩ7ÔøΩrE""ÔøΩ]$xAÔøΩÔøΩZPÔøΩ1	H*IÔøΩ`J6z%O&ÔøΩlÔøΩTÔøΩÔøΩÔøΩÔøΩÔøΩ	ÔøΩÔøΩrÔøΩÔøΩ»áÔøΩx2ÔøΩCÔøΩÔøΩÔøΩjÔøΩs^ÔøΩÔøΩ ÔøΩ?ÔøΩ'yÔøΩ%JÔøΩ	ÔøΩ9Ogo9N~ÔøΩÔøΩ)tÔøΩ9ÔøΩ?EÔøΩÔøΩÔøΩÔøΩhÔøΩ?ÔøΩ3ÕÖ{CX~ÔøΩÔøΩÔøΩÔøΩAÔøΩÔøΩmÔøΩÿ∑;ÔøΩÔøΩx…ãÔøΩxÔøΩ lÔøΩbÔøΩ~ÿ¨ÔøΩuÔøΩÔøΩÔøΩ$ÔøΩÔøΩ""ÔøΩKÔøΩ–ªÔøΩÔøΩÔøΩÔøΩÔøΩLÔøΩW endstream endobj 45 0 obj << /Filter /FlateDecode /Length1 1448 /Length2 6897 /Length3 0 /Length 7874 >> stream xÔøΩÔøΩw4ÔøΩ]ÔøΩ6—ÇDÔøΩÔøΩFÔøΩeFÔøΩEÔøΩ]3ÔøΩÔøΩwÔøΩÔøΩÔøΩ;ÔøΩE'zÔøΩ zÔøΩÔøΩDÔøΩÔøΩIÔøΩÔøΩÔøΩ>ÔøΩÔøΩÔøΩÔøΩ}ÔøΩ^kÔøΩsÔøΩvÔøΩÔøΩÔøΩÔøΩgÔøΩÔøΩ∆¨ÔøΩÔøΩ#AZAÔøΩÔøΩW>^ÔøΩ8@ASÔøΩH 	ÔøΩÔøΩ@ÔøΩllÔøΩ0W8ÔøΩ/1ÔøΩ(ÔøΩÔøΩDÔøΩÔøΩÔøΩÔøΩ vEÔøΩÔøΩÔøΩh;M$ÔøΩÔøΩÔøΩ	 ÔøΩÔøΩÔøΩÔøΩDÔøΩA  ?$ÔøΩ/C$JÔøΩvÔøΩA ÔøΩÔøΩ 5$ÔøΩBÔøΩÔøΩÔøΩtÔøΩBÔøΩlÔøΩ\ÔøΩÔøΩÔøΩk	ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩpÔøΩvÔøΩ9BQ0k0ÔøΩ	vÔøΩÔøΩ:ÔøΩwÔøΩÔøΩzHkÔøΩÔøΩÔøΩ!8$ÔøΩ\]ÔøΩƒÅ@^ÔøΩÔøΩ/e+ÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩtÔøΩ.PÔøΩ;ÔøΩU0@ÔøΩÔøΩS/@ÔøΩÔøΩÔøΩGÔøΩÔøΩÔøΩqÔøΩ ÔøΩÔøΩ ÔøΩ ÔøΩÔøΩ""\ÔøΩn@oÔøΩSÔøΩ <vÔøΩ""ÔøΩkÔøΩ1ÔøΩÔøΩÔøΩ /ﬂøÔøΩÔøΩÔøΩÔøΩ+ÔøΩÔøΩlmÔøΩtt#ÔøΩ`[ÔøΩ <VÔøΩÔøΩuÔøΩtÔøΩÔøΩÔøΩ_ÔøΩ`ÔøΩÔøΩvÔøΩÔøΩ`+ÔøΩÔøΩÔøΩÔøΩÔøΩ e9 ]ÔøΩ_ÔøΩXÔøΩ`NÔøΩ.ÔøΩ.0ÔøΩÔøΩÔøΩÔøΩ¬†ÔøΩÔøΩÔøΩÔøΩ( ÔøΩWÔøΩ_ÔøΩ)ÔøΩPPkt€ΩÔøΩNÔøΩÔøΩÔøΩ@ÔøΩÔøΩl`ÔøΩÕØ"" nN@ÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩ	ZDÔøΩÔøΩÔøΩ ÔøΩ@""ÔøΩ"" ÔøΩ3 ÔøΩimÔøΩ^ÔøΩÔøΩ	ÔøΩ[ÔøΩÔøΩKÔøΩÔøΩÔøΩÔøΩÔøΩ	ÔøΩÔøΩAÔøΩÔøΩÔøΩ@ÔøΩ/ÔøΩ;ÔøΩÔøΩrÔøΩÔøΩÔøΩÔøΩÔøΩ‚üàÔøΩÔøΩ ÔøΩYÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩÔøΩÔøΩbÔøΩÔøΩÔøΩ>|ÔøΩ` BsÔøΩ ÔøΩÔøΩÔøΩ{eÔøΩÔøΩÔøΩÔøΩ{ÔøΩmÔøΩÔøΩ|ÔøΩJÔøΩÔøΩ54ÔøΩÔøΩTÔøΩoÔøΩÔøΩ<ÔøΩÔøΩÔøΩ#$ ÔøΩÔøΩÔøΩÔøΩƒÑ ""ÔøΩÔøΩ?ÔøΩhÔøΩaÔøΩÔøΩÔøΩWaÔøΩÔøΩÔøΩÔøΩ›¶eÔøΩÔøΩ8ÔøΩNÔøΩ?ci!—¨ÔøΩ8ÔøΩ&ÔøΩHdÔøΩÔøΩÔøΩÔøΩ?SÔøΩÔøΩÔøΩÔøΩÔøΩ·ø¢ÔøΩo$ÔøΩÔÑîÔøΩÔøΩÔøΩÔøΩjÔøΩÔøΩÔøΩÔøΩG vÔøΩÔøΩÔøΩÔøΩ2@ÔøΩÔøΩÔøΩ= ÔøΩHÔøΩ ÔøΩÔøΩÔøΩÔøΩghÔøΩpÔøΩÔøΩT]ÔøΩÔøΩ1ÔøΩCÔøΩÔøΩÔøΩÔøΩDÔøΩÔøΩ2ÔøΩ —ÜÔøΩZÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩPmÔøΩÔøΩ◊•ÔøΩÔøΩÔøΩÔøΩKÔøΩ,kÔøΩÔøΩÔøΩ&ÔøΩo=7ÔøΩÔøΩR	aÔøΩÔøΩÔøΩ0~!a ÔøΩ{ÔøΩÔøΩÔøΩÔøΩ >|ÔøΩIÔøΩ@=S ÔøΩE ]ÔøΩ. tq~ $ÔøΩÔøΩÔøΩy ÔøΩrÔøΩDÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩV#1 ÔøΩÔøΩﬂàÔøΩO DÔøΩDÔøΩqÔøΩ( ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩBÔøΩÔøΩo6ÔøΩKÔøΩÔøΩ}7@ÔøΩÔøΩPkÔøΩÔøΩÔøΩÔøΩDÔøΩÔøΩÔøΩÔøΩÔøΩgÔøΩrt<_FÔøΩ&ŸæÔøΩrÔøΩÔøΩÃ°ÔøΩÔøΩ.ÔøΩÔøΩ^rVe<[BÔøΩ»Ω|ÔøΩMÔøΩÔøΩÔøΩÔøΩq,ÔøΩÔøΩÔøΩÔøΩvs^xKÔøΩNÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ_Z	f«®ÔøΩ?lÔøΩÔøΩÔøΩ1ÔøΩÔøΩÔøΩÔøΩÔøΩnÔøΩÔøΩtÔøΩ}ÔøΩ’åŸ°∆ñÔøΩÔøΩ&JÔøΩÔøΩG~ÔøΩ—´ÔøΩYÔøΩW:?6ÔøΩEgÔøΩJXÔøΩÔøΩtÔøΩ'ÔøΩ ÔøΩ,ÔøΩxÔøΩ-ÔøΩ*sÔøΩÔøΩ>ÔøΩ+ÔøΩÔøΩdÔøΩÔøΩÔøΩSÔøΩ'ÔøΩdÔøΩnÔøΩÔøΩ^pÔøΩÔøΩÔøΩ ÔøΩÔøΩ,ÔøΩ??ÔøΩÔøΩ^,ÔøΩÔøΩwÔøΩeÔøΩ5ÔøΩaÔøΩ:&gÔøΩÔøΩÔøΩÔøΩÔøΩFÔøΩ—ßÔøΩ(N-,ÔøΩ»ÜÔøΩbÔøΩQÔøΩÔøΩÔøΩ,XÔøΩÔøΩ1'YÔøΩÔøΩÔøΩÔøΩ{ÔøΩoOÔøΩJÔøΩÔøΩÔøΩÔøΩÔøΩuVÔøΩÔøΩÔøΩ}ÔøΩÔøΩeÔøΩ”êÔøΩ‘äOÔøΩÔøΩ{ÔøΩOÔøΩ”æÔøΩÔøΩÔøΩ;ÔøΩxOHÔøΩ""ÔøΩPÔøΩÔøΩ’ºÔøΩ∆ÅDÔøΩÔøΩÔøΩ{ÔøΩV ÔøΩL_ÔøΩnÔøΩÔøΩM, ZÔøΩÔøΩ0ÔøΩÔøΩUÔøΩ}ÔøΩ>GÔøΩÔøΩ⁄âÔøΩÔøΩÔøΩÔøΩÔøΩ*JÔøΩ{ÔøΩÔøΩÔøΩWÔøΩEÔøΩP""ÔøΩÔøΩÔøΩÔøΩrÔøΩÔøΩÔøΩtÔøΩ8ÔøΩÔøΩHo5:!ÔøΩÔøΩ÷π{ÔøΩDÔøΩC%ÔøΩÔøΩÔøΩÔøΩÔøΩ⁄ó3FÔøΩÔøΩÔøΩzuÔøΩÔøΩÔøΩÔøΩÔøΩ9$3 ÔøΩÔøΩgoMÔøΩ:iÔøΩEÔøΩÔøΩÔøΩMÔøΩŒövkMÔøΩ8ÔøΩÔøΩÔøΩÔøΩÔøΩ@u–†ÔøΩÔøΩÔøΩV4ÔøΩ5rS@k|ÔøΩUÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ/ÔøΩS*ÔøΩÔøΩ:;# ÔøΩÔøΩÔøΩzÔøΩrÔøΩ=/ÔøΩÔøΩÔøΩÔøΩEÔøΩaÔøΩ,aÔøΩ&ÔøΩQP[ ÔøΩQ-z{ÔøΩ'?_Ïß∑OvRÔøΩe20ÔøΩÔøΩÔøΩÔøΩ){`ÔøΩ»∂ÔøΩVRqUÔøΩÔøΩÔøΩ,ÔøΩÔøΩG&?|ÔøΩÔøΩ◊ÖÔøΩÔøΩÔøΩ2ÔøΩ;ŒÖ(UÔøΩÔøΩÔøΩG$'HoÔøΩ ÔøΩÔøΩ€∑4I<ÔøΩÔøΩÔøΩPÔøΩ;pÔøΩÔøΩtÔøΩ 0ÔøΩ|,ÔøΩKÔøΩÔøΩÔøΩÔøΩÔøΩ`ÔøΩ@ ÔøΩÔøΩ9ÔøΩÔøΩ|2ÔøΩÔøΩkÔøΩ1[<ÔøΩvÔøΩÔøΩ÷óbÔøΩÔøΩNR=$ÔøΩ(ÍûÑhEÔøΩ!ÔøΩÔøΩÔøΩ~1 ≤ÔøΩÔøΩ ÔøΩÔøΩÔøΩaQÔøΩ|\*ÔøΩTYÔøΩÔøΩÔøΩÔøΩ{FÔøΩÔøΩCÔøΩXÔøΩÔøΩz7ÔøΩ<$DÔøΩ/h<*==ÂÆ∞ÔøΩÔøΩq.3cZaLÔøΩ2ÌÉ≥ÔøΩ*ÔøΩUJXnÔøΩÔøΩ|*ÔøΩdxUK‹òÔøΩ»ÑÔøΩ{+ÔøΩ ÔøΩ(ÔøΩCÔøΩÔøΩXÔøΩÔøΩÔøΩÔøΩÔøΩil+ÔøΩ=ÔøΩ;ÔøΩehÔøΩÔøΩÔøΩÔøΩ1ÔøΩ-ÔøΩÔøΩ¬´ÔøΩÔøΩÔøΩf9ÔøΩÔøΩÔøΩÔøΩyÔøΩÔøΩÔøΩÔøΩ:];,b+u<ÔøΩÿú8ÔøΩ""PÔøΩÔøΩÔøΩIRÔøΩj⁄ÜÔøΩqÔøΩbÔøΩÔøΩÔøΩ""ÔøΩxÔøΩÔøΩÔøΩÔøΩ«∑O:ÔøΩ>yÔøΩ_SJi}WÔøΩRÔøΩÔøΩEÔøΩ""ÔøΩÔøΩ}&:gÔøΩ{—†QÔøΩÔøΩ(ÔøΩmÔøΩﬂÅ“æl-ÔøΩ~ÔøΩÔøΩÔøΩ“ô [#ÔøΩÔøΩCqÔøΩE«π5ÔøΩÔøΩ,…âÔøΩÔøΩÔøΩÔøΩÔøΩ&ÔøΩÁ∞ÉÔøΩ#ÔøΩÔøΩÔøΩqÔøΩÔøΩÔøΩÔøΩAÔøΩ""ÔøΩi€§ÔøΩÔøΩP5HÔøΩÔøΩ""‘íq*HÔøΩÔøΩÔøΩÔøΩ{ÔøΩ	lÔøΩJÔøΩ|ÔøΩÔøΩ,@HÔøΩÔøΩ;QÔøΩÔøΩr—®:ÔøΩpe=`ÔøΩÔøΩ êÔøΩOÈëîÔøΩ“∏rÔøΩ[]ÔøΩ`#ÔøΩÔøΩÔøΩÔøΩFÔøΩ-vÔøΩRÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ-uÔøΩNÔøΩj%cÔøΩOlÔøΩZFÔøΩYIoÔøΩÔøΩÔøΩrÔøΩe utÔøΩÔøΩÔøΩÔøΩl7ÔøΩÔøΩaE›ÖÔøΩ‹ä4(rÔøΩÔøΩÔøΩTÔøΩÔøΩÔøΩ'*ÔøΩÔøΩÔøΩOÔøΩÔøΩÔøΩÔøΩyÔøΩFÔøΩ\MÔøΩ«çh{bUt*'ÔøΩÔøΩSPÔøΩ$ÔøΩÔøΩÔøΩÔøΩ“™ÔøΩ	ÔøΩ√¢ÔøΩÔøΩF ÔøΩsÔøΩÔøΩÔøΩC-ÔøΩKEDQÔøΩÔøΩÔøΩlÔøΩdÔøΩÔøΩ>ﬂöÔøΩÔøΩqÔøΩ »îÔøΩdÔøΩÔøΩ=QÔøΩÔøΩ”•ÔøΩoqÔøΩÔøΩQÔøΩL^EÔøΩ8uEpo‡™ΩYÔøΩZD	[F5:%3ÔøΩNÔøΩ LwÔøΩB>ÔøΩlN/ÔøΩÔøΩ^5ÔøΩY@>?ÔøΩÔøΩ(-+ÔøΩuÀú!ieaÔøΩQ>(ÔøΩnÔøΩÔøΩÔøΩadÔøΩbÔøΩÔøΩ&ÔøΩÔøΩÔøΩnÔøΩÔøΩ~X\!Y66ÔøΩO,%ÔøΩWœá^ÔøΩdÔøΩrÔøΩz<ÔøΩ_ÔøΩÔøΩ86ÔøΩÔøΩX?ÔøΩ◊®ÔøΩÎô®ÔøΩaÔøΩBÔøΩ""?]-;ÔøΩÔøΩ}LÔøΩD;ÔøΩZ4ÔøΩÔøΩÔøΩÔøΩ1sÔøΩÔøΩÔøΩÔøΩ93EZÔøΩ2&(ÔøΩÔøΩ|M=MÔøΩwkpBBÔøΩÔøΩÔøΩumÔøΩÔøΩÔøΩÔøΩ .Ÿëc)FÔøΩ=UÔøΩÔøΩ|!ÔøΩÔøΩÔøΩxsÔøΩÔøΩy2;oBÔøΩrÔøΩ/ÔøΩÔøΩÔøΩEcÔøΩÔøΩ2RÔøΩ(ÔøΩ]ÔøΩx0ÔøΩÔøΩ ÔøΩETÔøΩ#ÔøΩh""JÔøΩÔøΩ,ÔøΩ	ÔøΩÔøΩF’¨ÔøΩÔøΩÔøΩ=wÔøΩÔøΩÔøΩM`\ÔøΩÔøΩÔøΩ'ÔøΩDÔøΩsÔøΩ A∆ÆÔøΩ8 ÔøΩ^:rÔøΩ!ÔøΩJÔøΩ,<ÔøΩ`b_ÔøΩtÔøΩa	ÔøΩÔøΩÔøΩÔøΩ”¶ÔøΩ!SÔøΩ'ÔøΩBn%ÔøΩÔøΩÔøΩ^ÔøΩÔøΩ3Z:Óµª	ÔøΩÔøΩ1ÔøΩkÔøΩyÔøΩrÔøΩvIÔøΩÔøΩOÔøΩVÔøΩKÔøΩÔøΩt·∂òC'∆∑ÔøΩb”®ÔøΩÔøΩÔøΩÔøΩ)ÔøΩ5moalÔøΩÔøΩÔøΩW'ÔøΩÔøΩÕéÔøΩÔøΩÔøΩgÔøΩ[ÔøΩÔøΩÔøΩ%ÔøΩÔøΩIÔøΩ^ﬂçÔøΩÔøΩ""ÔøΩÔøΩÔøΩXÔøΩÔøΩÔøΩYÔøΩSÔøΩÔøΩ]ÔøΩ;*ÔøΩÔøΩlÔøΩÔøΩÔøΩÔøΩ”ÅÔøΩÔøΩlMÔøΩÔøΩÔøΩcÔøΩ{ÔøΩÔøΩÔøΩÔøΩÔøΩyÔøΩZte>ÔøΩÔøΩ>KRzÔøΩÔøΩJÔøΩ%6ÔøΩÔøΩKÔøΩe!ÔøΩÔøΩÔøΩÔøΩ1◊ã5CÔøΩÔøΩÔøΩ@ÔøΩÔøΩnoGÔøΩÔøΩ%ÔøΩÔøΩÔøΩdcMÔøΩ)⁄™zÔøΩÔøΩÔøΩOÔøΩÔøΩxÔøΩGmG^ÔøΩKS9EÔøΩ◊∏ÔøΩnÔøΩÔøΩÔøΩe1ÔøΩÔøΩ#(ÔøΩ>ÔøΩÔøΩ)ÔøΩÔøΩM1ÔøΩÔøΩÔøΩaFclÔøΩkÔøΩqtGjÔøΩÔøΩ>S?€úÔøΩcÔøΩ9}ÔøΩdJÔøΩw8ÔøΩƒåÔøΩ’©sÔøΩÔøΩÔøΩlÔøΩÔøΩcÔøΩ8m2G,ÔøΩ=ÔøΩÔøΩiÔøΩh<,kÔøΩÔøΩ¬âÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩPMBÔøΩ5QFÔøΩÔøΩÔøΩÔøΩÔøΩCÔøΩÔøΩÔøΩ=ÔøΩy qn=ÔøΩÔøΩÔøΩXlMÔøΩÔøΩ&=aÔøΩÔøΩm;pÔøΩbÔøΩÔøΩÔøΩ≈ç'ÔøΩRzÔøΩ«•c8ÔøΩÔøΩ`pÔøΩ+ÔøΩe""a/ÔøΩSÔøΩVÔøΩÔøΩ}ÔøΩ7ÔøΩYÔøΩÔøΩ'AlOgQÔøΩf3}ÔøΩÔøΩWNÔøΩ,ÔøΩÔøΩgÔøΩÔøΩÔøΩ”•⁄âOÔøΩÔøΩÔøΩwÔøΩÔøΩlÔøΩ›°{ÔøΩÔøΩ^wŒÑÔøΩ3ÔøΩÔøΩw5ÔøΩ,ÔøΩ#…°|dÔøΩÔøΩÔøΩoÔøΩÔøΩcÔøΩjT@ÔøΩÔøΩÔøΩÔøΩÔøΩjÔøΩÔøΩÔøΩwÔøΩÔøΩ÷∂ŸåÔøΩ_ÔøΩ-{ÔøΩ–àQÔøΩÔøΩ	ÔøΩÔøΩ{EÕá@ÔøΩ/,ÔøΩÔøΩ?^ÔøΩÔøΩÔøΩÔøΩÔøΩlUm ÔøΩe7-›≥ÔøΩ.i<.ÔøΩR_ÔøΩÔøΩÔøΩR)ÔøΩÔøΩÔøΩÔøΩÔøΩ*yÔøΩ3sÔøΩKÔøΩ#ÔøΩ&<ÔøΩ4<lÔøΩBÔøΩÔøΩÔøΩÔøΩÔøΩeOÔøΩÔøΩÔøΩ!ÔøΩ,dHÔøΩÔøΩG&.ELÔøΩ!ÔøΩÔøΩÔøΩﬁÅ:wÿê59q;ÔøΩJÔøΩÔøΩÔøΩÔøΩ?ÔøΩa;ÔøΩQAÔøΩogIjÔøΩEÔøΩÔøΩÔøΩ""xÔøΩ RpÃéÔøΩÔøΩ/ÔøΩIÔøΩsfÔøΩ-nm@ÔøΩ ÔøΩWÔøΩ_ÔøΩuMÔøΩnÔøΩ0>C‘©ÔøΩÔøΩÔøΩhÔøΩÔøΩ=(ÔøΩ“åÔøΩQ~ÔøΩw|ÔøΩn)ÔøΩÔøΩ6ÔøΩÔøΩ+ÔøΩZeÔøΩÔøΩqÔøΩgÔøΩGÔøΩÔøΩvÔøΩKN÷´oÔøΩÔøΩÔøΩK_}ÔøΩVÔøΩ=US;3ÔøΩÕØÔøΩÔøΩOÔøΩÔøΩ9VÔøΩ ÔøΩxÔøΩÔøΩ.Q<ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩL\?ÔøΩÔøΩÔøΩÔøΩÔøΩ!BÔøΩuwÔøΩJu9ÔøΩÔøΩxÔøΩ""/8ÔøΩ⁄∑ÔøΩ“•GÔøΩÔøΩ6ÔøΩ ÔøΩawÔøΩpÔøΩÔøΩÔøΩÔøΩÿßÔøΩzÔøΩuÔøΩqÔøΩÔøΩÔøΩÔøΩ75ÔøΩÔøΩÔøΩÔøΩÔøΩxÔøΩÔøΩ#>tÔøΩÔøΩÔøΩÔøΩy‹çÔøΩÔøΩÔøΩÔøΩ‘∑È¨Ä1ZÔøΩÔøΩT.s{ÔøΩÔøΩ∆èÔøΩuÔøΩÔøΩDÔøΩd""9ÔøΩ>ÔøΩ8$ÔøΩN≈®ÔøΩbÔøΩ4.ÔøΩÔøΩÔøΩÔøΩf[ÔøΩÔøΩcÔøΩ$ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩf^ÔøΩÔøΩ|ÔøΩÔøΩ>’®>ÔøΩÔøΩÔøΩÔøΩomÔøΩÌñ¥ÔøΩC ÔøΩ#.ÔøΩFÔøΩJLÔøΩÔøΩÔøΩoÔøΩÔøΩdÔøΩÔøΩÔøΩ)p53ÔøΩ√°ÔøΩÔøΩÔøΩÔøΩB ÔøΩÔøΩxM9EqÔøΩDÔøΩÔøΩ'WÔøΩOÔøΩÔøΩ+ÔøΩ*HÔøΩ…Ö&ÔøΩUÔøΩ5ÔøΩÔøΩaÔøΩÔøΩoWÔøΩ7UvXÔøΩ}IÔøΩÔøΩÔøΩÔøΩÔøΩ@ÔøΩYﬂäÔøΩÔøΩÔøΩOÔøΩVÔøΩdGÔøΩ=ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩUÕµÔøΩTÔøΩ1ÔøΩ—üÔøΩÔøΩ>58ÔøΩÔøΩÔøΩ'ÔøΩÔøΩ’óÔøΩÔøΩmÔøΩA_ÔøΩ1ÔøΩÔøΩjÔøΩÔøΩ'ÔøΩÔøΩ+ÔøΩ*ÔøΩÔøΩÔøΩ%HTnGÔøΩÔøΩÔøΩWÔøΩcÔøΩQÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩiÔøΩtÔøΩdxÔøΩ3g<|[zÔøΩÔøΩa4ÔøΩVÔøΩeÔøΩ.ÔøΩ &ÔøΩÔøΩ-ÔøΩÔøΩÔøΩÔøΩci%z[ÔøΩÔøΩÔøΩKÔøΩÔøΩ0dÔøΩqÔøΩuÔøΩ7ÔøΩÔøΩÔøΩPÔøΩÔøΩ(?_ÔøΩQÔøΩQÔøΩÔøΩŸâq;ÔøΩ-cÔøΩ!6ÔøΩÔøΩ∆•ÔøΩkÔøΩÔøΩÔøΩ%ÔøΩÔøΩvÔøΩÔøΩÔøΩÔøΩt|PÔøΩÔøΩÔøΩKÔøΩÔøΩ-ÔøΩ3ÔøΩ~*ÔøΩoÔøΩLÔøΩHÔøΩYv»èÔøΩ.:ÔøΩeÔøΩÔøΩ	ÔøΩ_^ÔøΩÔøΩÔøΩÔøΩÔøΩ{NÔøΩMÔøΩ' tÔøΩÔøΩÔøΩDÔøΩÔøΩÔøΩÔøΩjÔøΩÔøΩ|X.ÔøΩÔøΩoÔøΩÂ∫•ÔøΩpÔøΩÔøΩ>6ÔøΩÔøΩÔøΩÔøΩÔøΩTMJ>ÔøΩ=ÔøΩÔøΩÔøΩ`hÔøΩÔøΩ3ÔøΩÔøΩ]BÔøΩÔøΩÔøΩdÔøΩ 3lÔøΩÔøΩÔøΩÔøΩÔøΩ.	_ÔøΩÔøΩ3ÔøΩÔøΩ2ÔøΩÔøΩ<ÔøΩ8ÔøΩ,NÔøΩÔøΩÔøΩ‹ΩÔøΩÔøΩÔøΩ""ÔøΩÔøΩÔøΩwÔøΩÔøΩ1O%ÔøΩ?ÔøΩ],»ªÔøΩÔøΩ%wÔøΩ8ÔøΩÔøΩÔøΩoÔøΩ ÔøΩÔøΩÔøΩIÔøΩXaBzÔøΩIÔøΩÔøΩÔøΩÔøΩ$pÔøΩÔøΩÔøΩdÔøΩjMÔøΩwOÔøΩ…õJÔøΩÔøΩÔøΩ%ÔøΩÔøΩ}ÔøΩ{Yz4(ÔøΩM0ÔøΩ(ÔøΩÔøΩ&=ÔøΩÔøΩÔøΩœ™>:ÔøΩÔøΩÔøΩÔøΩGÔøΩXÔøΩÔøΩu'ÔøΩÔøΩÔøΩÔøΩdÔøΩÔøΩÔøΩÔøΩzÔøΩYÔøΩeÔøΩÔøΩDÔøΩÔøΩÔøΩ]ÔøΩÔøΩI~ 5ÔøΩÔøΩÔøΩqxFÔøΩÔøΩP,ÔøΩLÔøΩÔøΩSÔøΩÔøΩÔøΩÔøΩÔøΩ;ÔøΩÔøΩÔøΩk)ÔøΩ<,ÔøΩE	M4~QÔøΩÔøΩbÔøΩCÔøΩ5ÔøΩYÔøΩHÔøΩHÔøΩÔøΩÔøΩM+ÔøΩÔøΩ4≈§@{ÔøΩﬁóÔøΩÔøΩyÔøΩÔøΩ(EÔøΩÔøΩÕç>ÔøΩ ÔøΩÔøΩÔøΩ«ØÔøΩÔøΩÔøΩSvÔøΩÔøΩiÔøΩÔøΩÔøΩÔøΩQÔøΩnÔøΩeUÔøΩÔøΩ!ÔøΩÔøΩEÔøΩÔøΩzÔøΩCÔøΩÔøΩBÔøΩS7.8q$ÔøΩÔøΩÔøΩÔøΩÔøΩ.HÔøΩ'ÔøΩlÔøΩÔøΩ#[ÔøΩUÔøΩVÔøΩ.(ÔøΩÔøΩÔøΩ;tÔøΩDÔøΩÔøΩpn,ÔøΩUÔøΩ*ÔøΩÔøΩÌúüÔøΩÔøΩGIÔøΩÔøΩ$ÔøΩÔøΩÔøΩÔøΩJZ#>0kSÔøΩCDÔøΩÔøΩÔøΩÔøΩÔøΩ9-{ÔøΩÔøΩÔøΩFÔøΩÔøΩGÔøΩ-ÔøΩg3ÔøΩoÔøΩÔøΩÔøΩÔøΩ&z:GG ÔøΩdÔøΩ÷∫PÔøΩ?ÔøΩÔøΩÔøΩ91p!ÔøΩeÔøΩÔøΩÔøΩK|7ÔøΩ3ÔøΩÔøΩxÔøΩ8TwÔøΩŸªSgÔøΩhtmÔøΩÔøΩFÔøΩÔøΩ ÔøΩri ÔøΩÔøΩuÔøΩVÔøΩÔøΩKÔøΩ'ÔøΩÔøΩpswÔøΩ`ÔøΩpÔøΩ475U^/ÔøΩKuÔøΩG1{D*ÔøΩcw-BÔøΩ…§ÔøΩÔøΩ»≥ÔøΩ_J#ÔøΩÔøΩÔøΩeÔøΩÔøΩÔøΩÔøΩ}ÔøΩÔøΩÔøΩ…ΩÔøΩÔøΩ+9ÔøΩv6ÔøΩÔøΩÔøΩÔøΩÔøΩb3ÔøΩÔøΩ'ÔøΩ&'ÔøΩÔøΩÔøΩÔøΩOÔøΩÔøΩHÔøΩE◊©USÔøΩ=QÔøΩÔøΩm~0ÔøΩ.qÔøΩÔøΩ‹∫ÔøΩÔøΩlÔøΩkÔøΩÔøΩ7""QÔøΩ ÔøΩ+ÔøΩ$<ÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩ{2ÔøΩ2ÔøΩCMÔøΩÔøΩ|ÔøΩÔøΩÔøΩfÔøΩz‘™ÔøΩÔøΩ,ÔøΩÔøΩKÔøΩdTÔøΩÔøΩÔøΩ.ÔøΩBZÔøΩaÔøΩÔøΩ6ÔøΩÔøΩ1≈∂k≈ã»ªvÔøΩÔøΩœòÔøΩ‘©*ÔøΩB*ÔøΩÔøΩ}ÔøΩsÔøΩÔøΩÔøΩFÔøΩÔøΩWÔøΩÔøΩÔøΩÔøΩlÔøΩJÔøΩÔøΩÔøΩbZ0ÔøΩ1)'ÔøΩsÔøΩtilbxÔâæÔøΩLÔøΩÔøΩQÔøΩÔøΩÔøΩeÔøΩÔøΩÔøΩ2‚¨∞ÔøΩ8LÔøΩÔøΩTÔøΩÔøΩÔøΩEÔøΩÔøΩZÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ4IÔøΩfÔøΩ]LxÔøΩÔøΩÔøΩ=ÔøΩÔøΩ'^1D,ÔøΩÔøΩ/ÔøΩ>ÔøΩÔøΩq*ÔøΩÔøΩÔøΩ◊àÔøΩÔøΩ=€á> L1((ÔøΩÔøΩ|^<ÔøΩÔøΩ8ÔøΩuyÔøΩZÔøΩ≈¥ÔøΩÔøΩp+ÔøΩ~ÔøΩ≈ªÔøΩÔøΩi|'ÔøΩÔøΩÔøΩ:t""ÔøΩslÔøΩ\ÔøΩ>ÔøΩÔøΩZCÔøΩÔøΩXÔøΩ9ÔøΩ9ÔøΩÔøΩ4ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩKÔøΩÔøΩ9#ÔøΩH{ÔøΩÔøΩqÔøΩ|[ÔøΩLÔøΩÔøΩ9ÔøΩÔøΩÔøΩ(*ÔøΩÔøΩÔøΩqÔøΩÔøΩÔøΩgÔøΩR8√ÉÔøΩNÔøΩÔøΩB<ÔøΩÔøΩÔøΩcÔøΩÔøΩÔøΩÔøΩÔøΩ=ÔøΩÔøΩ7]ÔøΩ*ÔøΩCv2ÔøΩÔøΩ+ÔøΩjÔøΩ2cÔøΩÔøΩ=ÔøΩqs,uÔøΩÔøΩGÔøΩvÔøΩ7ÔøΩoÔøΩj ÔøΩÔøΩÔøΩpÔøΩYÔøΩÔøΩ8ÔøΩÔøΩMÔøΩy/TÔøΩX≈ÄcÔøΩqÕÑÔøΩÔøΩOLÔøΩGÔøΩÔøΩZÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩyyÔøΩlÔøΩÔøΩ[ÔøΩLrÔøΩÔøΩ9 ÔøΩÔøΩÔøΩÔøΩdJ{8%ÔøΩÔøΩdfÔøΩ4ÔøΩmqBÔøΩÔøΩÔøΩ>ÔøΩÔøΩÔøΩÔøΩfUAÔøΩÔøΩÔøΩbX]ÔøΩÔøΩ:ÔøΩ_ÔøΩ+OSÔøΩ6ÔøΩÔøΩÔøΩÔøΩ\ÔøΩÔøΩ8ÔøΩÔøΩ|oÔøΩÔøΩ""+ÔøΩIÔøΩÔøΩÔøΩÔøΩ]ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩz5ÔøΩÔøΩÔøΩÔøΩ7n-caÔøΩ^ÔøΩ[fcG(-ÔøΩÔøΩpJÈÜ•ÔøΩÔøΩÔøΩÔøΩWGÔøΩWECr“•ÔøΩ	\ÔøΩÔøΩ eGrHÔøΩÔøΩrp.ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ^ÔøΩ.ÔøΩ4IÔøΩ 75ÔøΩ/ÔøΩ`ÔøΩ9]0)ÔøΩÔøΩÔøΩÔøΩÔøΩ.DÔøΩ,ÔøΩkUÔøΩ~ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9EiÔøΩ19ÔøΩ	nÔøΩÔøΩzÔøΩÔøΩ}ÔøΩ:/#~<ÔøΩSÔøΩ»†v“™ÔøΩrÔøΩÔøΩÔøΩ~ÔøΩMÔøΩÔøΩÔøΩ!ÔøΩÔøΩÔøΩ5ÔøΩÔøΩAÔøΩh8ÔøΩuKÿîÔøΩÔøΩÔøΩUp]PÔøΩqÔøΩÔøΩÔøΩ 4$yÔøΩbfÔøΩBh'ÔøΩÔøΩq<ÔøΩB (h }ÔøΩÔøΩBÔøΩÔøΩÔøΩL5cÔøΩÔøΩ5{]ÔøΩÔøΩÔøΩ>6nÔøΩÔøΩÔøΩLÔøΩÔøΩÔøΩÔøΩÔøΩnu`ÔøΩszÔøΩMÔøΩÔøΩTÔøΩ~ÔøΩN(|«ÆÔøΩÔøΩÔøΩÔøΩ‘òÔøΩlÔøΩOÔøΩÔøΩaÔøΩÔøΩÔøΩÔøΩiÔøΩÔøΩÔøΩ_ÔøΩÔøΩÔøΩÔøΩCÔøΩYZApM∆ëÔøΩÔøΩÔøΩÔøΩ84@4ÔøΩÔøΩÔøΩÔøΩÔøΩD&zÔøΩÔøΩÔøΩ|,ÔøΩÔøΩx40X3""ÔøΩ…æÔøΩÔøΩÔøΩÔøΩÔøΩ–®~^ÔøΩPÔøΩyÔøΩÔøΩ3ÔøΩÔøΩ]ÔøΩ ÔøΩPhÔøΩBuz}ÔøΩ3ÔøΩ!ÔøΩŸÆÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩ(ÔøΩ}ÔøΩDBOÔøΩGÔøΩ%ÔøΩÔøΩÔøΩ5ÔøΩÔøΩÔøΩtÔøΩÔøΩ-ÔøΩÔøΩÔøΩ,^ÔøΩÔøΩÔøΩ ÔøΩPft,CÔøΩÔøΩ!ÔøΩ1ÔøΩÔøΩÔøΩÔøΩ1]+ÔøΩÔøΩÔøΩÔøΩ'ÔøΩ2ÔøΩÔøΩWl4ÔøΩy!yÔøΩÔøΩ∆ìÔøΩÔøΩÔøΩlÔøΩ4pÔøΩÔøΩÔøΩ~-e)ÔøΩ{FÔøΩÔøΩÔøΩÔøΩÔøΩ+}ÔøΩÔøΩÔøΩ=€º’ÇoÔøΩÔøΩ/:=:xÔøΩÔøΩ1ÔøΩ=5cV^ÔøΩÔøΩÔøΩs(T\ÔøΩQ3ÔøΩGKÔøΩÔøΩ‘≥ÔøΩÔøΩÔøΩÔøΩÔøΩDÔøΩ;ÔøΩÔøΩ_ÔøΩ(ÔøΩÔøΩÔøΩvÔøΩÔøΩHÔøΩÔøΩÔøΩ&s(QÔøΩ”ìÔøΩÔøΩUÔøΩÔøΩQƒì(ÔøΩÔøΩÔøΩÔøΩN>MSÔøΩ eÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩ8+ÔøΩÔøΩÔøΩg~YbÔøΩÔøΩ1ÔøΩ.w«±aÔøΩÔøΩ/PÔøΩIFÔøΩ‘ÅÔøΩŸ∂ÔøΩÔøΩxÔøΩ)dM/oÔøΩÔøΩÔøΩÔøΩ‰≤ïÔøΩÔøΩP‚êÅÔøΩÔøΩÔøΩÔøΩ	;;ÔøΩÔøΩN:ÔøΩÔøΩÔøΩJÔøΩÔøΩPÔøΩ<ÔøΩUÔøΩcKÔøΩÔøΩﬁÄ<ÔøΩÔøΩÔøΩÏ∂¶FÔøΩnÔøΩ:ÔøΩÔøΩÔøΩ7 ÔøΩtÔøΩÔøΩ5ÔøΩDÔøΩÔøΩtqÔøΩÔøΩFRÔøΩ>?c@ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ3ÔøΩÔøΩÔøΩJÔøΩÔøΩÔøΩ$ eÔøΩMÔøΩÔøΩÔøΩ5ÔøΩÔøΩUÔøΩÔøΩÔøΩ/ÔøΩ §IÔøΩÔøΩÔøΩ[ÔøΩÔøΩ%kL0ÔøΩeÔøΩÔøΩv8f∆è='ÔøΩEÔøΩRÔøΩÔøΩ2-ÔøΩÔøΩj~ÔøΩÔøΩV ÔøΩ&qaÔøΩ.E`ÔøΩÔøΩJ+ÔøΩÔøΩ…âmÔøΩgisÔøΩÔøΩÔøΩd\ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩeÔøΩA!ÔøΩo8Z,|ÔøΩf4ÔøΩrÔøΩÔøΩIÔøΩÔøΩÔøΩgMÔøΩÔøΩEMÔøΩÔøΩx;l3	8ÔøΩQÔøΩpMNÔøΩNÔøΩÔøΩÔøΩC*ÔøΩ €âÔøΩ/\ÔøΩÔøΩÔøΩÔøΩÔøΩHZÔøΩÔøΩ2ÔøΩÔøΩ úÔøΩYÔøΩ!fMÔøΩ?ÔøΩÔøΩÔøΩ4ÔøΩhKÔøΩÔøΩÔøΩ`ÔøΩZÔøΩqGÔøΩÔøΩÔøΩÔøΩÔøΩ]ÔøΩ ªÔøΩÔøΩÔøΩ#KÔøΩÔøΩÔøΩ^F=ÔøΩ['L#] ÔøΩÔøΩW+ÔøΩ7(ÔøΩÔøΩ}ÔøΩÔøΩÔøΩÔøΩ1sÔøΩ9ÔøΩEÕìWÔøΩÔøΩÔøΩdÔøΩÔøΩÔøΩw@.ysÔøΩÔøΩaÔøΩzÔøΩÔøΩN‘§:ÔøΩwIÔøΩ5ÔøΩÔøΩÔøΩÔøΩÔøΩ7ÔøΩ\ÔøΩÔøΩ]vÔøΩÔøΩS19`ÔøΩCÔøΩÔøΩÔøΩÔøΩÔøΩrÔøΩ6ÔøΩKÔøΩ\~ÔøΩÔøΩ;OÔøΩ\QÔøΩ!*ÔøΩÔøΩÔøΩ|·∑ºUÔøΩ=;W3@ÔøΩVÔøΩÔøΩm<`»ÖLÔøΩÔøΩ0ÔøΩÔøΩÔøΩÔøΩÔøΩ$ÔøΩ@ÔøΩÔøΩÔøΩa@VÔøΩÔøΩ^ÔøΩt4uÔøΩÔøΩ*/ÔøΩÔøΩb<ÔøΩ}y ÔøΩÔøΩÔøΩPÔøΩƒ®ÔøΩy$ÔøΩÔøΩÔøΩÔøΩ=)ÔøΩÔøΩwÔøΩkÔøΩÔøΩÔøΩzÔøΩ;ÔøΩÔøΩcUÔøΩÔøΩ""""ÔøΩIXÔøΩ\ÔøΩÔøΩ3ZÔøΩÔøΩizÔøΩiÔøΩÔøΩÔøΩÔøΩ.~ÔøΩxÔøΩÔøΩNY6-,ÔøΩÔøΩÔøΩÔøΩÔøΩaÔøΩÔøΩÔøΩÔøΩvÔøΩÔøΩFnGÔøΩMÔøΩÔøΩdÔøΩÔøΩIÔøΩqShÔøΩÔøΩÔøΩÔøΩ√ÇÔøΩ:Ÿ®ÔøΩHt`ÿÆ?K{ÔøΩ8fOÔøΩÔøΩc@ÔøΩÔøΩ@v&ÔøΩ"" ∆ì]ÔøΩtDÔøΩ”îRÔøΩÔøΩÔøΩRm\!_MÔøΩOÔøΩÔøΩ”çÔøΩfÔøΩÔøΩÏ•çÔøΩv<ÔøΩÔøΩÔøΩÔøΩÔøΩqUnÔøΩÔøΩ/cIÔøΩj_ÔøΩÔøΩ<ÔøΩMÔøΩBtÔøΩ8ÔøΩ`_rQÔøΩÔøΩÔøΩLÔøΩÔøΩNOÔøΩ(ÔøΩÔøΩ?ÔøΩeÔøΩÔøΩÔøΩ:ÔøΩ^yÔøΩJÔøΩÔøΩÔøΩEÔøΩÔøΩÔøΩw5|ÔøΩ5ÔøΩÔøΩÔøΩÔøΩzÔøΩÔøΩ ÔøΩÔøΩN:ÔøΩÔøΩÔøΩxÔøΩusG!ÔøΩ0ÔøΩ(	d2ÔøΩsÔøΩÔøΩz,oÔøΩÔøΩ^ÔøΩyÔøΩFÔøΩ?,ÔøΩdu–§+ÔøΩxÔøΩÔøΩÔøΩÔøΩnOÔøΩÔøΩÔøΩÔøΩ56ÔøΩ>ÔøΩÔøΩÔøΩÔøΩ(ÔøΩÔøΩ0ÔøΩÔøΩ=ÔøΩÔøΩ#k“ÖÔøΩÔøΩcÔøΩÔøΩÔøΩÔøΩb=ÔøΩJÔøΩ*[ÔøΩÔøΩ8%ÔøΩ endstream endobj 46 0 obj << /Filter /FlateDecode /Length1 1810 /Length2 11922 /Length3 0 /Length 13060 >> stream xÔøΩÔøΩÔøΩPÔøΩ[ÔøΩ-ÔøΩwwÔøΩÔøΩÔøΩ5ÔøΩÔøΩgpww	ÔøΩÔøΩÔøΩ 8ÔøΩ\ÔøΩ!@p'ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ~ÔøΩ_uoMÔøΩÃ≥ZÔøΩÔøΩÔøΩÔøΩjrU fqG3ÔøΩÔøΩÔøΩÔøΩ+3;ÔøΩ @RIÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ∆ÅHMÔøΩ	rÔøΩÔøΩmFÔøΩÔøΩÔøΩ]@ÔøΩÔøΩ ÔøΩM]ÔøΩlRÔøΩÔøΩoqJÔøΩ 7; ;'ÔøΩÔøΩGÔøΩÔøΩWÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩ?ÔøΩÔøΩ`ÔøΩÔøΩÔøΩ;ÔøΩÔøΩÔøΩPpt ÔøΩ RK::yÔøΩAV÷ÆoÔøΩÔøΩÔøΩ#ÔøΩŒúÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩg:@ÔøΩÔøΩÔøΩ: ÔøΩL]ÔøΩÔøΩÔøΩo'ÔøΩÔøΩÔøΩ4ÔøΩA@WÔøΩÔøΩÔøΩÔøΩÔøΩvuu`eÔøΩÔøΩÔøΩ`1ÔøΩwaq[ÔøΩÔøΩ3<@ÔøΩÔøΩ uÔøΩÔøΩÔøΩ ÔøΩÔøΩ0@ÔøΩÔøΩÔøΩWg,ÔøΩÔøΩ MkÔøΩÔøΩ_v GKWS0ÔøΩfÔøΩÔøΩ\ÔøΩ2ÔøΩ,ÔøΩ`ÔøΩÔøΩÔøΩ  yEÔøΩÔøΩÔøΩÔøΩ`≈øÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ 9ÔøΩÔøΩljnÔøΩhÔøΩdÔøΩÔøΩrÔøΩXÔøΩÔøΩ EWOW&ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩv.ÔøΩoÔøΩÔøΩÔøΩ ;SÔøΩÔøΩÔøΩ?+7»àÔøΩLÔøΩÔøΩÔøΩ=s0ÔøΩÔøΩ’ÖÔøΩdÔøΩGÔøΩÔøΩ–ºMYÔøΩÔøΩBÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩG}R 0ÔøΩÔøΩmÔøΩ^ÔøΩ›¨ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ`aÔøΩGnNÔøΩZ g7ÔøΩÔøΩÔøΩÔøΩ!o&ÔøΩlV@W 7/? ÔøΩ zÔøΩ[ÔøΩÔøΩAÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ?'G'ÔøΩÔøΩ[@?ÔøΩ%ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩpÔøΩÔøΩ|ÔøΩÔøΩÔøΩoÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÃÄV ÔøΩÔøΩÔøΩÔøΩ@ÀøÔøΩÔøΩÔøΩAÔøΩ }ÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩM^ÔøΩv^ÔøΩÔøΩÔøΩyÔøΩÔøΩÔøΩt5tÔøΩÔøΩÔøΩ?>		GOÔøΩ3'ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩfÔøΩÔøΩ7ÔøΩÔøΩ)ÔøΩÔøΩ*ÔøΩÔøΩIÔøΩwÔøΩtÔøΩÔøΩUÔøΩ€îÔøΩÔøΩ`ÔøΩÔøΩÔøΩÔøΩÔøΩ›†ÔøΩ7ÔøΩÔøΩÔøΩhÔøΩ ÔøΩ4nÔøΩÔøΩÔøΩfÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ?SÔøΩÔøΩÔøΩÔøΩÔøΩMÔøΩÔøΩÔøΩ 7;ÔøΩ?ÔøΩtÔøΩÔøΩ?nS{ÔøΩÔøΩÔøΩÔøΩoÔøΩus}”øÔøΩÔøΩÔøΩ8ÔøΩÔøΩÔøΩÔøΩÔøΩvV	hrÔøΩÔøΩÔøΩ^yW”∑=wÔøΩÔøΩÔøΩÔøΩA.2 OÔøΩÔøΩ*ÔøΩÔøΩÔøΩÔøΩ/ÔøΩÔøΩeÔøΩÔøΩcÔøΩÔøΩ@@UGÔøΩo 3;ÔøΩÔøΩÔøΩmÔøΩÔøΩÔøΩ€õÔøΩÔøΩMÔøΩÔøΩÔøΩoÔøΩÔøΩÔøΩGJ;ÔøΩ;ZÔøΩÔøΩaÔøΩ< S0ÔøΩÔøΩÔøΩÔøΩMHÔøΩÔøΩ ÔøΩÔøΩUÔøΩ zÔøΩÔøΩa +ÔøΩÔøΩÔøΩÔøΩ[ ÔøΩ=?ÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩaÔøΩÔøΩXÔøΩÔøΩÔøΩx9 ÔøΩrÔøΩ ^ ÔøΩÔøΩ?ÔøΩ-RÔøΩ?ÔøΩÔøΩ-RÔøΩ?ÔøΩÔøΩ ÔøΩÔøΩÔøΩzÔøΩ3ÔøΩÔøΩÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ`5ÔøΩÔøΩcÔøΩÔøΩÔøΩÔøΩ VÔøΩ 'ÔøΩÔøΩÔøΩ_ÔøΩÔøΩÔøΩÔøΩ_ÔøΩ/–øÔøΩÔøΩÔøΩ?ÔøΩÔøΩÔøΩÔøΩÔøΩ_ÔøΩÔøΩÔøΩÔøΩ_ÔøΩÔøΩÔøΩ@.ÔøΩ7ÔøΩ&TÔøΩÔøΩÔøΩÔøΩvÔøΩ_ÔøΩÔøΩ0ÔøΩÔøΩÔøΩÔøΩZ|ÔøΩ9VWÔøΩ”ø ÔøΩÔøΩ_ÔøΩ4ÔøΩ ÔøΩ[ÔøΩÔøΩÔøΩ[i^ÔøΩÔøΩoÔøΩyÔøΩSÔøΩÔøΩÔøΩÔøΩÔøΩ‡ø∏ÔøΩKÔøΩn`ÔøΩ€ãÔøΩÔøΩÔøΩ}ÔøΩÔøΩÔøΩÔøΩ?ÔøΩÔøΩ@ÔøΩ'ÔøΩqeÔøΩÔøΩ\0‘¶)ÔøΩÔøΩAÔøΩ»ÉyÔøΩÔøΩÔøΩﬁázfÔøΩpÔøΩÔøΩ#*ÔøΩGÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩk;ÔøΩt7bÔøΩdÔøΩ>«ù-p])j›ø}ÔøΩÔøΩÔøΩÔøΩgÔøΩÔøΩÔøΩÔøΩÔøΩLÔøΩÔøΩ7ÔøΩ 3kÔøΩÔøΩÔøΩ>;ÔøΩjÔøΩBwBÔøΩ)P8ÔøΩÔøΩaÔøΩ{ÔøΩz6W}ÔøΩ_ÔøΩS€ØÔøΩyÔøΩÔøΩT5ÔøΩÔøΩkT>O]hÔøΩÔøΩÔøΩOÔøΩÔøΩLœÄyÔøΩ6s;ÔøΩÔøΩ?ÔøΩJÔøΩÔøΩƒàÔøΩÔøΩ+ÔøΩÔøΩÔøΩGoÔøΩ#ÔøΩaÔøΩ{ÔøΩFÔøΩ√•ÔøΩÔøΩÔøΩ@ÔøΩÔøΩsrÔøΩÔøΩGÔøΩgÔøΩﬁíOEÔøΩx2}ÔøΩwjÔøΩ>ÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩÔøΩÔøΩ=ÔøΩÔøΩ“àÔøΩzZÔøΩÔøΩ ÔøΩ[>&vÔøΩK.ŸæÔøΩ<ÔøΩ+ÔøΩ|MaÔøΩSÔøΩÔøΩÔøΩÔøΩÃÖI%ÔøΩÔøΩbÔøΩÔøΩÃ≠ÔøΩƒø7ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩIÔøΩ!BÔøΩÔøΩc3ÔøΩÔøΩ w	d~3 jdÔøΩÔøΩÔøΩSÔøΩÔøΩQÔøΩÔøΩÔøΩuÔøΩÔøΩ~TiÔøΩÔøΩÔøΩÔøΩmÔøΩÔøΩ&ÔøΩÔøΩÔøΩuMÔøΩÔøΩ5ÔøΩ1ÔøΩÔøΩÔøΩÔøΩHÔøΩÔøΩ;ÔøΩÔøΩkÔøΩl«ëÔøΩÔøΩ){#»è‘≠ÔøΩÔøΩÔøΩ?ÔøΩ>ÔøΩK!1ÔøΩÔøΩ6Áí∏ÔøΩÔøΩwÔøΩÔøΩQ~ÔøΩÔøΩ*ÔøΩÔøΩlUE56lÔøΩ;FÔøΩœÆÔøΩÔøΩ=ÔøΩx9|ÔøΩÔøΩ]ÔøΩUÔøΩ*^_[ÔøΩÔøΩÔøΩQÔøΩ ÔøΩÔøΩÔøΩÔøΩ5ÔøΩ+ÔøΩmK@ÔøΩfƒñBdÔøΩ]xÔøΩ’áÔøΩÔøΩWSÔøΩÔøΩÔøΩÔøΩÔøΩŸÑXÔøΩÔøΩ4$–êÔøΩÔøΩRÔøΩÔøΩÔøΩTÔøΩÔøΩ „πâÔøΩÔøΩ[ÔøΩ_ÔøΩÔøΩw1ÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩFV#ÔøΩÔøΩÔøΩ6ÔøΩ~;ÔøΩ@ÔøΩÔøΩ⁄∞ÔøΩ{ÔøΩ5ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩEÔøΩÔøΩÔøΩÔøΩ	ÔøΩÔøΩÔøΩUo\;ÔøΩÔøΩA·äº6.ÔøΩ9ÔøΩÔøΩih7@ÔøΩ%ÔøΩ ÔøΩÔøΩÔøΩÔøΩ2ÔøΩÔøΩ`ÔøΩZÔøΩ	ÔøΩÔøΩ]ÔøΩÔøΩ8ÔøΩÔøΩO{ÔøΩ	ÔøΩÔøΩÔøΩN;ÔøΩ@|!&ÔøΩ ÔøΩÔøΩÔøΩÔøΩ>ÔøΩÔøΩÔøΩÔøΩ‘òÔøΩG	ÔøΩË´ÜRÔøΩXÔøΩS$ufÔøΩÔøΩÔøΩ& ÔøΩÔøΩe/p	ÔøΩ2RÔøΩr/nÔøΩÔøΩCÔøΩaÔøΩjÔøΩpÔøΩÔøΩÔøΩ;;-IÔøΩÔøΩÔøΩÔøΩÔøΩÕíÔøΩÔøΩÔøΩtMFÔøΩ]hÔøΩ=ÔøΩÔøΩÔøΩYuÔøΩ:ÔøΩRÔøΩ]ÔøΩRÔøΩxÔøΩeÔøΩÔøΩ{hLÔøΩÔøΩ ≠apÔøΩÔøΩlÔøΩÔøΩ;ÔøΩ+lÔøΩÔøΩkJrÔøΩÔøΩoÔøΩ|{ÔøΩjzOÔøΩ«ù'ÔøΩEkÔøΩ(ÔøΩÔøΩÔøΩ'tÔøΩ8–ªgÔøΩÔøΩÔøΩiÔøΩneÔøΩÔøΩ+ÔøΩÔøΩFQÔøΩÔøΩÔøΩY<ÔøΩÔøΩlÔøΩ9ÔøΩÔøΩlÔøΩ=ÔøΩ@&ÔøΩa:ÔøΩÔøΩgQÔøΩÔøΩl.ÔøΩ!ÔøΩÔøΩyÔøΩÔøΩÔøΩFÔøΩ({ÔøΩ!Z,~ÔøΩÔøΩey^ÔøΩ""SÔøΩ=ZÔøΩÔøΩ 2ÔøΩ‚ãâÔøΩÔøΩ∆£iÔøΩuCÔøΩÔøΩ4ÔøΩYÔøΩÔøΩdÔøΩrSÔøΩÔøΩ3ÔøΩÔøΩÔøΩÔøΩ*ÿÑ~ÔøΩ,nÔøΩCÔøΩG∆êÔøΩO 0ÔøΩÔøΩÔøΩÔøΩÔøΩkÔøΩgÔøΩ~ÔøΩÔøΩVÔøΩ{ÔøΩÔøΩÔøΩÔøΩ]ÔøΩÔøΩqÔøΩ…´i#ÔøΩÔøΩÔøΩE,ÔøΩ6ÔøΩ}ngËä§ÔøΩeFÔøΩÔøΩ`ÔøΩÔøΩ1lÔøΩÔøΩÔøΩOVÔøΩÔøΩÔøΩUnEÔøΩ(ÔøΩÔøΩ6ÔøΩÔøΩÔøΩÔøΩ}Õ®ÔøΩÔøΩBÔøΩÔøΩÔøΩÔøΩÔøΩ""—ä~ÔøΩÔøΩ:ÔøΩÔøΩÔøΩÔøΩqJ=ÔøΩPÔøΩ◊∫ÔøΩƒ¢eÔøΩÔøΩÔøΩJÔøΩMcÔøΩÃÆlÔøΩÔøΩÔøΩ8ÔøΩ*ÔøΩ*ÔøΩÔøΩ0YLÔøΩEÔøΩfEÔøΩÔøΩ/ÔøΩA\-ÔøΩ>ÔøΩ qÔøΩÔøΩÔøΩKÔøΩ‹Æ,NiÔøΩfÔøΩÔøΩ KÔøΩÔøΩwÔøΩ0ÔøΩ!ÔøΩÔøΩÔøΩ6ÔøΩÔøΩ zÔøΩNÔøΩRIÔøΩÔøΩÔøΩ4m3l^ÔøΩmÔøΩÔøΩÔøΩÔøΩsDÔøΩÔøΩTÔøΩ+ÔøΩÔøΩ8YÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩAÔøΩHÔøΩÔøΩWÛ©∫çÔøΩÔøΩÔøΩÔøΩvÔøΩ[)<ÔøΩÔøΩY<0ÔøΩ+ÔøΩÔøΩÔøΩIÔøΩÔøΩ6›µÔøΩÔøΩÔøΩÔøΩzT}ÔøΩÔøΩG;PÔøΩœªÔøΩÔøΩsI01ÔøΩizLjpÔøΩÔøΩ]2BÔøΩIÔøΩ'ÔøΩÔøΩ3aÔøΩÔøΩV}}‘ÉÔøΩÔøΩxÔøΩZÔøΩ&ÔøΩ%ÔøΩxmÔøΩÔøΩÔøΩÔøΩ""ÔøΩ28ÔøΩ	ÔøΩÔøΩMÔøΩÔøΩÔøΩ ©ÔøΩ_3ÔøΩxÔøΩÔøΩÔøΩ^!pÔøΩÔøΩËíâ{XÔøΩ!OSd&yÔøΩ÷¥N5ÔøΩ;ÔøΩÔøΩ›ßtÔøΩ¬õDc&1d91ÔøΩH“ÉÔøΩÔøΩZÔøΩÔøΩh:ÔøΩ.ÔøΩÔøΩÔøΩ€ûqO[ÔøΩ@h“Ç#kÔøΩl[ÔøΩ ÔøΩÔøΩÔøΩ=2I;##ÔøΩIÔøΩÔøΩ6fg~ÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩ2ÔøΩÔøΩvÔøΩhÔøΩhpÔøΩ96ÔøΩÔøΩ*ÔøΩnÔøΩÔøΩ-_7\ÔøΩÔøΩÔøΩ*ÔøΩQ9÷îÔøΩvÔøΩtÔøΩU9ÔøΩnÔøΩOÔøΩsÔøΩÔøΩÔøΩ{ZÔøΩ8KL2ƒæSk!ÔøΩÔøΩÔøΩX5—¶d{NQÔøΩÔøΩ!ÔøΩÔøΩÔøΩÔøΩÔøΩijaÔøΩÔøΩÔøΩÔøΩÔøΩ|ÔøΩÏ©°D4{ÔøΩmÔøΩÔøΩÔøΩna ÔøΩbJÔøΩÔøΩn_?ÔøΩPÔøΩÔøΩÔøΩÔøΩ\{ÔøΩrZÔøΩÔøΩÔøΩ YÔøΩÔøΩvÔøΩÔøΩM8""Lvr<#ÔøΩhm]›∏ÔøΩÔøΩlgH.ÔøΩPÔøΩjÔøΩ–™_«éÔøΩÔøΩBÔøΩ;.ÔøΩÔøΩ(U9ÔøΩ)ÔøΩ$0BÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩNÔøΩ‹âÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ@ÔøΩÔøΩsuƒ∑T+ ÔøΩÔøΩJ ÔøΩLÔøΩQUÔøΩ.4ÔøΩÔøΩ ÔøΩ'XÔøΩÔøΩ ´ÔøΩ\	ÔøΩÔøΩMÔøΩÔøΩÔøΩ+tÔøΩ7/ÔøΩÔøΩ+ÔøΩÔøΩ+ÔøΩ5ÔøΩÔøΩ$ÔøΩWKÔøΩ@GÔøΩsÔøΩÔøΩqbÔøΩ◊èÔøΩÔøΩ“ÆZÔøΩÔøΩÔøΩj] $O)|ZÔøΩaÔøΩ :cÔøΩÔøΩfÔøΩ]“µ1ÔøΩmÔøΩÔøΩ7ÔøΩ5[MÔøΩ6ÔøΩÔøΩJ√ºA4nÔøΩefÔøΩ:ÔøΩÔøΩ_ÔøΩ ÔøΩ.0@Ò¢£µÔøΩIdÔøΩÔøΩÔøΩ1iÔøΩÔøΩXÔøΩÔøΩoU,,ÔøΩDÔøΩ#>GÔøΩ]Êà®ÔøΩEÔøΩtÔøΩÔøΩzÔøΩÔøΩOvz;dÔøΩÔøΩEÔøΩÔøΩJV4X:`^ÔøΩÔøΩÔøΩÔøΩÔøΩ«êÔøΩÔøΩÔøΩrkecÔøΩW &ÔøΩv%JÔøΩ*ÔøΩ)ÔøΩQÔøΩrÔøΩÔøΩEC$ÔøΩIÔøΩ!tÔøΩLvÔøΩzÔøΩÔøΩ-√¢4ÔøΩÔøΩ_ÔøΩ%ÔøΩ%ÔøΩÔøΩÔøΩhÔøΩ\'ÔøΩ>ÔøΩÔøΩÔøΩÔøΩÔøΩQ!}dÔøΩkÔøΩÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩD!$/ÔøΩ#J'ÔøΩÔøΩÔøΩh¬êkÔøΩÔøΩ›èH7ÔøΩ?iÔøΩ1""ÔøΩÔøΩÔøΩÔøΩÔøΩse#ÔøΩÔøΩ'ÔøΩ)ÔøΩÔøΩjÔøΩÔøΩKÔøΩ<#|ÔøΩ»çÔøΩÔøΩ>yHÔøΩ.Y6ŒûÔøΩÔøΩÔøΩÔøΩ_s‚∏∏ÔøΩXÔøΩÔøΩ_ÔøΩfÔøΩBÔøΩÔøΩÔøΩÔøΩsÔøΩÔøΩÔøΩÔøΩ1ÔøΩZÔøΩzZA|43ÔøΩÔøΩGƒ®ÔøΩÔøΩ=.—ãÔøΩÔøΩVÔøΩﬁµcÔøΩNÔøΩBÔøΩÔøΩ,=ÔøΩ8UqÔøΩhÔøΩT›≥`ÔøΩ<ÔøΩ…ÇÔøΩW	25; 2ÔøΩÔøΩÔøΩ 6ÔøΩoÔøΩÔøΩ OÔøΩnXÔøΩÔøΩvyÔøΩ0ŸåÔøΩÔøΩQÔøΩb4ÔøΩÔøΩÔøΩ5ÔøΩÔøΩœöÔøΩÔøΩCN9<$W+_ §ÔøΩÔøΩCÔøΩYJÔøΩ5ÔøΩaWÔøΩLÔøΩÔøΩÔøΩÔøΩÔøΩrÔøΩÔøΩJÔøΩi ÔøΩ0ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩMÔøΩNÔøΩÔøΩ⁄ÆÔøΩÔøΩKgÔøΩÔøΩÔøΩ‹∞ÔøΩ{iMlÔøΩÔøΩ-ÔøΩÔøΩÔøΩÔøΩ$ bÔøΩ9!EJÔøΩÔøΩÔøΩÔøΩ""ÔøΩwXÔøΩl\^ÔøΩJ >(FÔøΩi5UÔøΩJÔøΩÔøΩ	ÔøΩÔøΩ8ÔøΩKÔøΩÔøΩ,ÔøΩ6?ŒòÔøΩ.,z“µXÔøΩe»ªwÔøΩÔøΩ0ÔøΩ,*WzT5ÔøΩ gv(IÔøΩ8ÔøΩw}ÔøΩlHÔøΩZ5bgE3>ÔøΩHÔøΩEÔøΩÔøΩfÔøΩmÔøΩ5√†""ÔøΩÔøΩÔøΩÔøΩ“®ÔøΩiÔøΩHÔøΩnÔøΩÔøΩÔøΩÔøΩMdLÔøΩ0O0IÔøΩ$ÔøΩÔøΩ5rLÔøΩÔøΩ8I◊°ÔøΩÔøΩ–≥ÔøΩÔøΩ[;&Y≈©pbÔøΩÔøΩ\“§kÔøΩ`ÔøΩ-;~ÔøΩ)ÔøΩÔøΩÔøΩÔøΩFWÔøΩnÔøΩÔøΩ09ÔøΩ]!ÔøΩÔøΩÔøΩ+uNxÔøΩATÔøΩ)>~ÔøΩÔøΩÔøΩ(⁄†ÔøΩ·àñÔøΩÔøΩ1ÔøΩ ÔøΩ'ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ""FÔøΩ?ÔøΩcxF0Ÿ§ÔøΩF\ÔøΩ∆ûÔøΩÔøΩÔøΩk@ÔøΩÔøΩÔøΩ ÔøΩ YsÔøΩ\>ÔøΩFÔøΩOÔøΩÔøΩÔøΩa$4ÔøΩs”°WÔøΩl@ÔøΩ7ÔøΩÔøΩÔøΩHWÔøΩ [ÔøΩÔøΩÔøΩ/ÔøΩÔøΩÔøΩ~S$ÔøΩ*ÔøΩÔøΩÔøΩ""[ÔøΩÔøΩ:ÔøΩÔøΩÔøΩÔøΩÔøΩ◊©ÔøΩÔøΩÔøΩ-ÔøΩÔøΩ\\ÔøΩÔøΩÔøΩÔøΩÔøΩÏÄûÔøΩ!pÔøΩOÔøΩrÔøΩS ¨ÿ•!ÔøΩr[RoÔøΩÔøΩw4ÔøΩÔøΩÔøΩwÔøΩlÍø¥ÔøΩÔøΩÔøΩ_ÔøΩ3ÔøΩ,ÔøΩÔøΩ5ÔøΩÔøΩ&ÔøΩÔøΩ~+bWÔøΩhÔøΩÔøΩ∆§TÔøΩmÔøΩl=ÔøΩzÔøΩÔøΩ qÔøΩÔøΩc√ô`C|ÔøΩ	SÔøΩÔøΩHzœ´ÔøΩ(EaZÔøΩÔøΩÔøΩr_ÔøΩÔøΩÔøΩXtÔøΩÔøΩuÔøΩvÔøΩOÔøΩÔøΩ.V>OÔøΩ0bÔøΩÔøΩ'zÔøΩADÔøΩPcaS%ÔøΩpÔøΩ„ô∑lÔøΩE8ÔøΩ%ÔøΩÔøΩÔøΩÔøΩoÔøΩ{PÔøΩÔøΩÔøΩÔøΩÔøΩ60PVÔøΩOGÔøΩI<*ÔøΩVÔøΩÔøΩÔøΩLÔøΩ*	ÔøΩ4ÔøΩYQÔøΩ ÔøΩÔøΩÔøΩfÔøΩnÔøΩ	ÔøΩt9 M`ÔøΩÔøΩÔøΩÔøΩhÔøΩÔøΩÿÆIÔøΩvÔøΩÔøΩiiÔøΩÔøΩ ÔøΩ6st|ÔøΩÔøΩ{ldÔøΩÔøΩÈ£ôÔøΩÔøΩMÔøΩ&ÔøΩ+TÔøΩÔøΩkÔøΩÔøΩ7ÔøΩÔøΩHÔøΩp}ÔøΩÔøΩh\ÔøΩbÔøΩ""ÔøΩÔøΩÔøΩYQ:XLGÔøΩx`ÔøΩ9–ÖZÔøΩƒß;ÔøΩ;ÔøΩ›ïÔøΩÔøΩJuÔøΩ@ÔøΩZÔøΩBÔøΩÔøΩl$E@ÔøΩ""ÔøΩÔøΩTJÔøΩÔøΩ3BÏΩÆ’ßÔøΩÔøΩÔøΩ<ÔøΩ[D@ÔøΩÔøΩjÔøΩNÔøΩÔøΩÔøΩHÔøΩ{ÔøΩi@uÔøΩKÔøΩy'n-fÔøΩÔøΩÔøΩÔøΩfqXÔøΩCÔøΩ,>aÔøΩTÔøΩo~ÔøΩ2ÔøΩ3gÔøΩu^~OÔøΩ@»é NÔøΩÔøΩS4yÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩd@EÔøΩWYÔøΩrKÔøΩœä[ÔøΩ‰ÉëÔøΩÔøΩ$ÔøΩgPÔøΩÔøΩÔøΩjÔøΩt iÔøΩÔøΩÔøΩ+ÔøΩÔøΩrÔøΩÔøΩÔøΩ|ÔøΩÔøΩDhjrFT_uV)YyP""ÔøΩ8ÔøΩÔøΩ@ C?ÔøΩ6ÔøΩÔøΩÔøΩÔøΩiM,ÔøΩ1{uÔøΩBÔøΩg0ÔøΩ).ÔøΩÔøΩÔøΩ09ÔøΩÔøΩvÔøΩÔøΩOÔøΩÔøΩhÔøΩÔøΩ8>ÔøΩDÔøΩuÔøΩﬂç_QÔøΩP7ÔøΩÔøΩ[YÔøΩ3?ÔøΩ#ÔøΩÏ±ß,sÔøΩ{%ÔøΩ5ÔøΩ""w-ÔøΩjwÔøΩ‘ó_ÔøΩÔøΩw^ÔøΩ3ÔøΩÔøΩÔøΩQÔøΩ""ÔøΩÔøΩÔøΩw2ÔøΩ>ÔøΩÔøΩÔøΩÔøΩÔøΩ€úÔøΩÔøΩ$ÔøΩÀ∏kÔøΩ »¢ﬁü/ÔøΩÔøΩÔøΩÔøΩÔøΩ›éÔøΩ_ÔøΩGÔøΩc≈ëDE.ÔøΩÔøΩcÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩmÔøΩÔøΩÔøΩÔøΩ;ÔøΩ3ÔøΩÔøΩÔøΩ0ÔøΩNXÔøΩÔøΩÔøΩzÔøΩÔøΩÔøΩSÔøΩUÔøΩ›ÄÔøΩxO""{ÔøΩCÔøΩHÔøΩÔøΩÔøΩÔøΩ6ÔøΩ_ÔøΩl>ÔøΩ‚™Ø÷πÔøΩ8ÔøΩÔøΩÍæ∑ÔøΩÔøΩCÔøΩÔøΩÔøΩÔøΩ'_;'ÔøΩ'ÔøΩ∆ÅÔøΩM‹ÜÔøΩ»õÔøΩÔøΩÔøΩÔøΩÔøΩUÔøΩLÔøΩÔøΩ}ÔøΩ@ÔøΩÔøΩÔøΩÔøΩ	ÔøΩ#ÔøΩÔøΩ@ÔøΩL{@!ÔøΩÔøΩÔøΩiÔøΩÔøΩÔøΩÔøΩ^ÔøΩÔøΩœàÔøΩLÔøΩFÔøΩ-ÔøΩÔøΩÔøΩÔøΩ30ÔøΩÔøΩÔøΩEXÔøΩÔøΩ3S\ÔøΩÔøΩ1'|_ÔøΩOB#∆äÔøΩmÔøΩ^zsÔøΩ<ÔøΩ(ÔøΩm.ÔøΩÔøΩ=ÔøΩ""|5ÔøΩP7hÔøΩ}ÔøΩÔøΩÔøΩ2Î°ºÔøΩÔøΩ,ŸòdÔøΩÔøΩUÔøΩÔøΩÔøΩMÔøΩÔøΩuZÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ*ÔøΩGÔøΩd%ÔøΩ3ÔøΩM…íÔøΩg9ÔøΩÔøΩ'	BJ\ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩT#ÔøΩ	ÔøΩÔøΩÔøΩÔøΩÕÆÔøΩeIH`EÔøΩ8ÔøΩÔøΩÔøΩm<ÔøΩ:zÔøΩ*ÔøΩÔøΩ^P:ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩecÔøΩ	UxFx%""*ÔøΩÔøΩÔøΩ!ÔøΩÔøΩÔøΩdÔøΩc1ÔøΩÔøΩÔøΩÔøΩÔøΩXÔøΩ[ÔøΩÔøΩbÔøΩMD-GyIVRÔøΩqÔøΩÔøΩdÔøΩÔøΩ$ÔøΩ>gÔøΩ6ÔøΩÔøΩ6/7%BÔøΩÔøΩÔøΩÔøΩCÔøΩ\ÔøΩÔøΩoÔøΩÔøΩdÀéÔøΩÔøΩÔøΩNÔøΩ%ÔøΩFq(ÔøΩgÔøΩIÔøΩU#ÔøΩÔøΩuÔøΩ)wfÔøΩ:ÔøΩ=%ÔøΩÔøΩ»áÔøΩ4ÔøΩ`ÔøΩÔøΩ2dPÔøΩÔøΩnQÔøΩÔøΩÔøΩeXAÔøΩ1ÔøΩzÔøΩgWÔøΩÔøΩÔøΩÔøΩÔøΩ.ÔøΩÔøΩÔøΩjÿøÔøΩÔøΩÔøΩbÔøΩÔøΩQXÔøΩÔøΩÔøΩ=ÔøΩﬂØlÔøΩÔøΩÔøΩ}\ÔøΩXM$ÔøΩÔøΩÔøΩPÔøΩÔøΩÔøΩ`ÔøΩ3ÔøΩÔøΩÔøΩBÔøΩXÔøΩÔøΩÔøΩHOÔøΩ3∆¨dÔøΩ/xBÔøΩBÔøΩKÔøΩÔøΩÔøΩY+ÔøΩvÔøΩr$ÔøΩ.ÔøΩÔøΩÔøΩg.@ÔøΩÔøΩÔøΩÔøΩÔøΩwxÔøΩ%ÔøΩ _ÔøΩ*ÔøΩÔøΩ*ÔøΩ3€áÔøΩ\Ã≠nƒñÔøΩÔøΩm-ÔøΩ+$ÔøΩÔøΩ'FÔøΩBÔøΩQPÔøΩ5ÔøΩÔøΩÔøΩÔøΩ0B&GÔøΩÔøΩC@ÔøΩNÔøΩÔøΩmÔøΩÔøΩÔøΩÔøΩyÔøΩJÔøΩÔøΩQÔøΩq-ÔøΩÔøΩÔøΩ ^ÔøΩEWÔøΩÔøΩ√úD)yÔøΩÔøΩ1ÔøΩÔøΩÔøΩuÔøΩnÔøΩÔøΩn_ÔøΩÔøΩÔøΩvSÔøΩÔøΩCÔøΩÔøΩÔøΩ|ÔøΩ7ÔøΩÔøΩÔøΩ 'ÔøΩ\ÔøΩgÔøΩÔøΩÔøΩ}ÔøΩÔøΩÔøΩrÔøΩ5ÔøΩÔøΩuBÔøΩ›èÔøΩ=Í§óÔøΩÔøΩe%#rÔøΩÔøΩ &jÔøΩÔøΩÔøΩeÔøΩXÔøΩ+“†OÔøΩRÔøΩÔøΩ>ÔøΩfÔøΩÔøΩ^)ÔøΩÔøΩÔøΩÔøΩNÔøΩd\ÔøΩÔøΩ;ÔøΩoÔøΩÔøΩÔøΩNÔøΩ5≈äÂò• ÔøΩl7ÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ<ÔøΩ!ÔøΩÔøΩÔøΩÔøΩXÔøΩÔøΩO;{ÔøΩÔøΩÔøΩhMÔøΩÔøΩÔøΩ	*ÔøΩA	ÔøΩ{;ÔøΩvÔøΩ=ÔøΩp€ÖÔøΩ""ÔøΩÔøΩa[ÔøΩd~mbÔøΩÔøΩÔøΩÔøΩM;ÔøΩ0ÔøΩWÔøΩi*ÔøΩa(ÔøΩ.6dÔøΩ.ÔøΩf,ƒ£OÔøΩÔøΩgVJÔøΩzÔøΩÔøΩ;3!6ÔøΩ<54gÔøΩ4ÔøΩÔøΩÔøΩ2ÔøΩÔøΩZÔøΩÔøΩDÔøΩÔøΩÔøΩ~WÔøΩd05ÔøΩÔøΩ8BÔøΩÔøΩ*ÔøΩ æKÔøΩÔøΩÔøΩTSÔøΩÔøΩ ÔøΩxeÔøΩ4ÔøΩvÔøΩÔøΩiÔøΩÔøΩÔøΩ0cÀ°ÔøΩqÔøΩ,m`ÔøΩgUÔøΩ’´oÔøΩy`ÔøΩ9ÔøΩ-ÔøΩaNKTHÔøΩZ>$Ã±m3ÔøΩQDWÔøΩÔøΩÔøΩpBÔøΩ’ÇÔøΩ""DSÔøΩI_ÔøΩ(ÔøΩÔøΩÔøΩ[_9	ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩXÔøΩ|gÔøΩÔøΩ€ôMbÔøΩ6ÔøΩ+yÔøΩÔøΩ}ÔøΩÔøΩÔøΩÔøΩ/ÔøΩtnUÔøΩÔøΩvÔøΩtÔøΩ=+ÔøΩÔøΩÔøΩAVÔøΩÔøΩvÔøΩhÔøΩÔøΩÔøΩ-ÔøΩÔøΩ%ÔøΩ“•ÔøΩ»≤œ∏ÔøΩIiÔøΩdBÔøΩBÔøΩM ±ÔøΩÔøΩŸ£!1jZÔøΩIÔøΩÔøΩ=#lÔøΩuÔøΩFoe#ÔøΩÔøΩBÔøΩa&ÔøΩj!TÔøΩSj4ÔøΩ4GÔøΩ6XËæ∞gÔøΩÔøΩÔøΩ@ÔøΩÔøΩÔøΩ TÔøΩ»™ÔøΩ5ÔøΩJXiÔøΩÔøΩOÔøΩDÔøΩÔøΩ:ÔøΩ÷£8ÔøΩrÔøΩÔøΩ1≈∂;ÔøΩÔøΩÔøΩMÔøΩÔøΩZÔøΩÔøΩ9=eÔøΩ`)""ÔøΩÔøΩÔøΩdÔøΩÔøΩ8ÔøΩ≈ædÔøΩÔøΩÔøΩDÔøΩgcXÔøΩÔøΩÔøΩo=ÔøΩÃâ0¬ÖÔøΩ0ru{-ÔøΩUÔøΩÔøΩÔøΩ…çÔøΩ&ÔøΩpÔøΩÔøΩKÔøΩ—ìzÔøΩPCÔøΩlÔøΩÔøΩ1*5ÔøΩb*ÔøΩÔøΩÔøΩÔøΩŸ∑ÔøΩF][	ÃÉ`AÔøΩawWÔøΩQ$ÔøΩÔ™ç;ÔøΩÔøΩf1aÔøΩÔøΩDqÔøΩOA4ÔøΩÔøΩÔøΩÔøΩÔøΩy€íÔøΩÔøΩÔøΩg @sÔøΩÔøΩTÔøΩÔøΩÔøΩtxÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩC≈çAyÔøΩÔøΩÔøΩÔøΩ<:7ÔøΩUÔøΩx~ÔøΩÔøΩFÔøΩ3_ÔøΩxÔøΩ4ÔøΩEÔøΩÔøΩÔøΩÀ•ÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩ,XÔøΩ1<1ÔøΩÔøΩÔøΩ$ÔøΩÔøΩÔøΩÔøΩ\ÔøΩÔøΩÔøΩEÔøΩ?JÔøΩVpLOŸí-zÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ[ÔøΩÔøΩ~JÔøΩ.ÔøΩH0ÔøΩÔøΩÔøΩÔøΩÔøΩ.ﬁÖHÔøΩÔøΩÔøΩ=ÔøΩÔøΩÔøΩÔøΩÔøΩœá4ÔøΩ^RkÔøΩ]ÔøΩ]ÔøΩÔøΩÔøΩh'WÔøΩ.ZoÔøΩ ÔøΩf$ÔøΩÔøΩWZÔøΩÔøΩll_RG8ÔøΩ|ÔøΩÁ∏ªÔøΩ(ÔøΩÔøΩÔøΩÔøΩÔøΩ7wÔøΩUÔøΩ⁄¨ÔøΩ”†M""rAdÔøΩEÔøΩ6ÔøΩsJhVvÔøΩÔøΩÔøΩN?sÔøΩ/ÔøΩWH ÔøΩ5ÔøΩaÔøΩÔøΩÔøΩÔøΩÔøΩSaÔøΩÔøΩDÔøΩ]JvÔøΩÔøΩÔøΩ›†oÔøΩÔøΩBÔøΩÔøΩiÔøΩ;ÔøΩÔøΩ}iÔøΩÔøΩ$*N)+ÔøΩÈúãÕ≤ÔøΩÔøΩÔøΩ)4ÔøΩ`⁄ÑeÔøΩÔøΩH^ÔøΩÔøΩÔøΩ<<6OÔøΩ/h :N1›ÆÔøΩÔøΩyBZÔøΩ:yÔøΩ+PÔøΩÔøΩQÔøΩÔøΩ$TÔøΩpÔøΩjÔøΩYLÔøΩÔøΩ‘¢ÔøΩTc9-|ÔøΩ'ÔøΩ#|ÔøΩ(zh=APÔøΩ:ÔøΩÔøΩ[8):-ÔøΩÔøΩyÔøΩ4ÔøΩÔøΩÙàΩ¶LÔøΩƒæzÔøΩÔøΩMÔøΩÔøΩÔøΩÔøΩtÔøΩÔøΩOÔøΩ›ªa XÔøΩoÔøΩ”ëB{nÔøΩIÁùΩvTR}ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩrÔøΩÔøΩJÔøΩo}ÔøΩk-W-ÔøΩdÔøΩE""∆≤sÔøΩ*H)ÔøΩprUwÔøΩÔøΩ;8ÔøΩÔøΩcÔøΩÔøΩÔøΩÔøΩÔøΩBw )kxÔøΩÔøΩÔøΩÔøΩ6uOÔøΩ5QÔøΩÔøΩÀ°R ÔøΩVoÔøΩÔøΩ√æÔøΩÔøΩÔøΩ1ÔøΩÔøΩ ÔøΩwÔøΩÔøΩr ÔøΩ<ÔøΩ ÔøΩ}ÔøΩÔøΩBÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩÔøΩÔøΩ/ÔøΩd`ÔøΩ	ﬂöÔøΩÔøΩcÔøΩÔøΩÔøΩÔøΩÔøΩ o-MÔøΩÔøΩs+ÔøΩÔøΩÔøΩ+zÔøΩÔøΩÔøΩÔøΩyÔøΩaÔøΩG<ÔøΩÔøΩ ÔøΩ;)bÔøΩÔøΩ!ÔøΩ4ﬁäÔøΩÔøΩÔøΩ=ÔøΩÔøΩ>ÔøΩ8{ÔøΩœø'ÔøΩÔøΩnÔøΩÔøΩREÔøΩ`fÔøΩÔøΩ?K/ÔøΩ ÔøΩ7ÔøΩÔøΩ*K `ZÔøΩÔøΩÔøΩÔøΩÔøΩ/2ÔøΩhqEÔøΩÔøΩXÔøΩ ÔøΩ	ÔøΩÔøΩ2ÔøΩwÔøΩ9PM~ÔøΩ ÔøΩ~ÔøΩ0ÔøΩ5@ÔøΩÔøΩ*ÔøΩÔøΩ_ÔøΩÕ©&ÔøΩ{ÔøΩÔøΩH[9ÔøΩÔøΩ`RÔøΩ\ÔøΩÔøΩÔøΩ""ÔøΩ3ÔøΩÔøΩ{ÔøΩŸµÔøΩTÔøΩÔøΩÔøΩKÔøΩcd5vÔøΩÔøΩÔøΩ.ÔøΩ-ÔøΩbÔøΩÔøΩ$ÔøΩ0ÔøΩkÔøΩÔøΩÔøΩÔøΩÔøΩ]ÔøΩÔøΩÔøΩÔøΩHÔøΩ qXÔøΩ)ÔøΩ8‹âÔøΩ}MÔøΩ”äoZÔøΩL-ÔøΩÔøΩ4ÔøΩ ÔøΩÔøΩ?XÔøΩ0ÔøΩÔøΩl'ÔøΩÔøΩÔøΩ}@ÔøΩÔøΩÔøΩÔøΩoÔøΩZÔøΩ€òÔøΩ|$ÔøΩÔøΩ5ÔøΩ7 ÔøΩ6 ÔøΩG‹†ÔøΩÔøΩÔøΩXVÔøΩgÔøΩBÔøΩÔøΩ*7$~ÔøΩÔøΩÔøΩ~ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ’çÔøΩÔøΩÔøΩÔøΩƒöÔøΩ^ÔøΩHÔøΩIyÔøΩ ﬂÖmÔøΩDÔøΩWÔøΩR,ÔøΩ^ÔøΩÔøΩcB8ƒô7ÔøΩÔøΩÔøΩ>ÔøΩXÔøΩÔøΩ\sÔøΩ[ÔøΩ$ÔøΩÔøΩÛçìør]8!ÔøΩÔøΩe@ZÔøΩ^{ÔøΩ) ÔøΩ~tÔøΩRÔøΩ-F_ÔøΩÔøΩW,ÔøΩÔøΩ@HÔøΩÔøΩÔøΩ]9e*]p‘îÔøΩ.ﬁºtÔøΩÔøΩAP8ÔøΩSrfÔøΩÔøΩÔøΩÔøΩ*vMÔøΩŒ∞F3 àÔøΩk}6ÔøΩ!ÔøΩÔøΩÔøΩ⁄≥_ÔøΩ\DÔøΩz;ÔøΩ|l9NSÔøΩ""ÔøΩÔøΩx&ÔøΩÔøΩÔøΩÔøΩcÔøΩ*ÔøΩÔøΩ&lz∆∫ÔøΩÔøΩÔøΩ…âÔøΩÔøΩ* ÔøΩ_'ÔøΩJh^{ÔøΩWÔøΩÔøΩ2ÔøΩÔøΩÔøΩHxÔøΩÔøΩMhQÔøΩlÔøΩÔøΩÔøΩfHÔøΩ>dÔøΩWÔøΩR,ËΩÉÔøΩÔøΩ/;ÔøΩ‘ÆaÔøΩÔøΩiÔøΩlÔøΩÔøΩÔøΩÔøΩÔøΩq}rÔøΩzÔøΩztÔøΩJÔøΩÔøΩÔøΩSÔøΩw(ÔøΩY5ÔøΩzoÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩvbÔøΩÔøΩÔøΩyÔøΩÔøΩYÔøΩ)^ÔøΩ14ÔøΩjhÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ^ÔøΩÔøΩHvF/QÔøΩÔøΩLgÔøΩ4ÔøΩÔøΩÔøΩNbÔøΩI*ÔøΩ ÔøΩ	/ÔøΩSEÔøΩÔøΩÔøΩ?FÔøΩÔøΩDhÔøΩÔøΩÔøΩÔøΩzÔøΩÔøΩ0ÔøΩ|aJÔøΩÔøΩ‹çMpÔøΩÔøΩÔøΩÔøΩflÔøΩAÔøΩÔøΩ7ÔøΩÔøΩ%ÔøΩÔøΩ3LVnÔøΩ]8ÔøΩJÔøΩÔøΩÔøΩÔøΩÔøΩn ÔøΩOÔøΩFÔøΩÔøΩ^ÔøΩÔøΩ9ÔøΩJ )66ÔøΩÔøΩÔøΩ1ÔøΩ~ÔøΩÔøΩAÔøΩ	ÔøΩ;ÔøΩ:sÔøΩ9ÔøΩÔøΩ&ZÔøΩÔøΩÔøΩ&ÔøΩ!ÔøΩ.ÔøΩÎ∞ºz}5ÔøΩÔøΩŸäG’≥ÔøΩ-ÔøΩa ÔøΩÔøΩÔøΩÔøΩ^ÔøΩÔøΩÔøΩilﬁ±ÔøΩÔøΩÔøΩSÔøΩÔøΩÔøΩDÔøΩÔøΩÔøΩWs.ÔøΩJÔøΩ:ÔøΩÔøΩÔøΩÔøΩ""_6¬´ÔøΩZÔøΩÔøΩlÔøΩvÔøΩÔøΩaÔøΩÔøΩÔøΩÔøΩ,AÔøΩ)ÔøΩÔøΩ{C)qAÔøΩR| ÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩÔøΩE“∞ÔøΩÔøΩh`–âcÔøΩ!ÔøΩo *ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ◊ÉÔøΩRÔøΩ!ÔøΩÔøΩÔøΩ-aÔøΩÀàOfÔøΩ.DÔøΩ.sIÔøΩÔøΩÔøΩvH]ÔøΩÔøΩ.ÔøΩÔøΩcÔøΩÔøΩ7ÔøΩÔøΩ‹≥tI/ ÔøΩÔøΩBzÔøΩI;ÔøΩÔøΩn?ZCÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩdÔøΩÔøΩYÔøΩÔøΩÔøΩaÔøΩÔøΩ0ÔøΩv~ÔøΩ'xuÔøΩrÔøΩÔøΩe'ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩDÔøΩ!#""OÔøΩU2ÔøΩ<ÔøΩ=|_ÔøΩÔøΩÔøΩÔøΩÔøΩi0ÔøΩ‹≠ÔøΩË´±ÔøΩÔøΩwÔøΩÔøΩÔøΩÔøΩÔøΩtÔøΩÔøΩÔøΩ|ÔøΩhK?9ÔøΩÔøΩ@ÔøΩÔøΩ6ÔøΩNAÔøΩÔøΩÔøΩvÔøΩÔøΩN	ÔøΩsÔøΩ›æÔøΩeÔøΩ#ÔøΩJÔøΩÔøΩ^ÔøΩ≈ØgÔøΩ_j]ÔøΩM4 {ÔøΩÔøΩVugxeÔøΩÔøΩfÔøΩÔøΩÔøΩÔøΩOÔøΩÔøΩÔøΩzÔøΩÔøΩÔøΩ`R?8xdÔøΩ.ÔøΩtÔøΩ#-U^ÔøΩÔøΩ2ÔøΩÔøΩ]?ÔøΩÔøΩÔøΩÔøΩCuSÔøΩ1ÔøΩddÔøΩÔøΩDÔøΩvÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩvÔøΩÔøΩ]ÔøΩÔøΩJxÔøΩe(-ÔøΩy√öaÔøΩÔøΩ{÷≠HÔøΩ#ÔøΩ=uÔøΩdÔøΩ#ÔøΩV1]ÔøΩÔøΩ1ÔøΩÔøΩ<ÔøΩ53FgÔøΩÔøΩ ÔøΩ#=ÔøΩÔøΩÔøΩÔøΩÔøΩÃµÔøΩCÔøΩÔøΩÔøΩÔøΩrÔøΩ&ÔøΩhÔøΩEÔøΩÔøΩÔøΩÔøΩ8ÔøΩiPÔøΩÔøΩÔøΩMÔøΩjÔøΩÔøΩ""ÔøΩ,ÔøΩw?vÔøΩl@KÔøΩÔøΩRÔøΩÔøΩÔøΩpÔøΩ-–ªx0ÔøΩÔøΩÔøΩÔøΩQÔøΩÔøΩ&PÔøΩZÔøΩ‘πkJÔøΩ{pÔøΩÔøΩ~ÔøΩÔøΩDÔøΩÔøΩ&AÔøΩÔøΩTÔøΩÔøΩqÔøΩÔøΩ≈ázÔøΩÔøΩ-ÔøΩ[OÔøΩÿÜÔøΩ6gÃΩ(ÔøΩÔøΩbÔøΩÔøΩOÔøΩÔøΩÔøΩÂá∫zpÔøΩÔøΩ7/ÔøΩsÔøΩ,ÔøΩ„Çπ	ÔøΩÔøΩGfRÔøΩ 5ÔøΩ!<"" _pÔøΩ?ÔøΩT& i«®wÔøΩÔøΩÔøΩF*haÔøΩÔøΩÔøΩÔøΩÔøΩQ[ÔøΩÔøΩpnÔøΩÔøΩÔøΩÔøΩuÔøΩnÔøΩÔøΩ ÔøΩ7ÔøΩÔøΩÔøΩ9ÔøΩÔøΩÔøΩÔøΩ\TÔøΩTÔøΩÔøΩVÔøΩ\N!ÔøΩÔøΩ>ÔøΩA4ÔøΩPÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩUÔøΩÔøΩC`ÔøΩÔøΩUÔøΩ3ÔøΩÔøΩ(=6ÃÄÔøΩcÔøΩMClÔøΩ ÔøΩ uÔøΩÔøΩ›±ÔøΩÔøΩÔøΩÔøΩÔøΩr(""dÔøΩRÔøΩÔøΩÔøΩAp?ÔøΩ<ÔøΩscÔøΩÔøΩ$ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩRuLe6ÔøΩÔøΩ/ÔøΩwÔøΩÔøΩzÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÃÜÔøΩÔøΩ)ÔøΩÔøΩ 7ÔøΩÔøΩÔøΩÔøΩ} ÔøΩj	ÔøΩÔøΩÔøΩjÔøΩ\≈öÔøΩ1ÔøΩ`lÔøΩÔøΩaÔøΩÔøΩÔøΩÔøΩ1ÔøΩiÔøΩÔøΩ%ÔøΩÔøΩ|ÔøΩÔøΩ!3ÔøΩ:ÔøΩÔøΩ'ÔøΩYÔøΩjƒ¢ÔøΩÔøΩÔøΩsLÔøΩA9]ÔøΩÔøΩÔøΩÔøΩhÔøΩ |ÔøΩ⁄à(ÔøΩtÔøΩ ^ÔøΩÔøΩÔøΩ«° *ÔøΩ+)WÔøΩx JÔøΩcÔøΩÔøΩ1Yv‘ÑprÔøΩh&V)}}rÔøΩJÔøΩ=ÔøΩ0aPNÔøΩÔøΩÔøΩ$ÔøΩ|ÔøΩÔøΩqÔøΩÔøΩÔøΩ1ÔøΩÔøΩÔøΩ·™êÔøΩÔøΩGF¬±/ÔøΩÔøΩÔøΩÔøΩmÔøΩÔøΩÔøΩ<4ÔøΩEÔøΩÔøΩLÔøΩqkÔøΩyÔøΩÔøΩzÔøΩÔøΩ|'ÔøΩ ó5lÔøΩ2ÔøΩ=,ÔøΩÔøΩhRÔøΩÔøΩÔøΩÔøΩÔøΩ>=ÔøΩJÔøΩÔøΩÔøΩÔøΩgÔøΩ.ÔøΩq*DoÔøΩÔøΩÔøΩu{ÔøΩCÔøΩugÔøΩ@ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩmÔøΩÔøΩ“îÔøΩÌì®&ÔøΩÔøΩÔøΩO|QÔøΩÔøΩÔøΩMÔøΩ^S¬∏KÔøΩÔøΩÔøΩÔøΩÔøΩ%ÔøΩÔøΩ^ÔøΩÔøΩ÷≥pÔøΩ3ÔøΩToÔøΩÔøΩÔøΩMsYÔøΩÔøΩŒ∫1ÔøΩM¬¥4ÔøΩÔøΩ_ÔøΩÔøΩÔøΩÔøΩ@ÔøΩ&1ÔøΩÔøΩ]zÔøΩ'ÔøΩ]ÔøΩ}ÔøΩÔøΩLeÔøΩÔøΩÔøΩ%ÔøΩÔøΩÔøΩÔøΩÔøΩeEÔøΩ\ÔøΩ“ÖÔøΩÔøΩÔøΩv>ÔøΩ#ÔøΩÔøΩÔøΩÔøΩ|]2!wÔøΩLÔøΩÔøΩÔøΩ%ÔøΩÔøΩKfÔøΩÔøΩ[\w8z'ÔøΩÔøΩ5ÔøΩmÔøΩ[|;R$^%ÔøΩÔøΩz/ÔøΩ+ÔøΩÔøΩf–´ÔøΩ$2ÔøΩKÔøΩÔøΩÔøΩÔøΩxÔøΩÔøΩﬁóÔøΩbÔøΩÔøΩ#k]ZbÔøΩÔøΩWaÔøΩÔøΩgÔøΩÔøΩ√êŒ¥,ÔøΩÔøΩÔøΩ{ÔøΩÔøΩÔøΩÔøΩÔøΩW""ÔøΩ_ÔøΩÔøΩÔøΩ“ªÔøΩ⁄¢f”æÔøΩ/TÔøΩÔøΩÍú´ÔøΩNggÔøΩÔøΩÔøΩÔøΩÔøΩIÔøΩ3ÔøΩ3ÔøΩ%ÔøΩÔøΩÔøΩ1ÔøΩQSy1lfÔøΩ3ÔøΩ6FB9ÔøΩF`ÔøΩorIlÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩ/ÔøΩUz&vÔøΩe3ÔøΩÕ∫5ÔøΩÔøΩ2%dMWxÔøΩV(ÔøΩ\ÔøΩÔøΩÔøΩÔøΩ &mcÔøΩfÔøΩÔøΩ\÷àÔøΩÔøΩÔøΩÔøΩci/jÔøΩ	¬©ÔøΩÔøΩÔøΩ""ÔøΩMÔøΩÔøΩÔøΩÔøΩl’èHÔøΩÔøΩÔøΩ-ÔøΩÔøΩNÔøΩzÔøΩSÔøΩR4ÔøΩ>ÔøΩÔøΩ9&NÔøΩÔøΩ8~ÔøΩ_ÔøΩÔøΩÔøΩÔøΩfÔøΩd""Ÿé9ÔøΩQCÔøΩNnÔøΩ<ÔøΩCÔøΩbÔøΩ>ÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ,hÔøΩÔøΩtP'∆µP;:+ÔøΩzfq}ÔøΩÔøΩÔøΩÔøΩ ÔøΩ1RÔøΩÔøΩj)jÔøΩÔøΩWwkÔøΩ`,ÔøΩMÔøΩÔøΩ/zÔøΩÔøΩ hÔøΩIIÔøΩÔøΩpÔøΩÔøΩ7GK^EÔøΩÔøΩ$ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ$C—ñÔøΩÔøΩÔøΩÔøΩÔøΩs\ÔøΩyuÔøΩHNÔøΩ@ÔøΩ≈çLÔøΩÔøΩ:""ÔøΩÔøΩÔøΩ2ÔøΩÔøΩHÔøΩ7ÔøΩÔøΩÔøΩÔøΩLÔøΩWÔøΩjÔøΩq+YQ9ÔøΩÔøΩ@ÔøΩ3ÔøΩR9UMÔøΩ”∏I6ÔøΩÔøΩÔøΩÔøΩ {ÔøΩRÔøΩÔøΩÔøΩÔøΩPlQÔøΩÔøΩÔøΩfÔøΩÔøΩ]lÔøΩÔøΩÔøΩZFÔøΩXTÔøΩ7sDÔøΩÔøΩÔøΩÔøΩQ%ÔøΩtÔøΩD&ÔøΩÔøΩÔøΩ‹ãÔøΩÔøΩ(EIÔøΩÔøΩÔøΩ8ÔøΩnAÔøΩ9ÔøΩmÔøΩegÔøΩÔøΩHÔøΩÕõÔøΩ4ÔøΩÔøΩÔøΩ0VUÔøΩÔøΩBÔøΩ[{ÔøΩRÔøΩÔøΩMvÔøΩÔøΩÔøΩGx[2ÔøΩÔøΩ<ÔøΩ0}>ÔøΩ5W]xLÔøΩÔøΩ.DÔøΩÔøΩÕúOÔøΩ_ÔøΩÔøΩÔøΩÔøΩ|ÔøΩÔøΩÔøΩÔøΩÔøΩ»¢ÔøΩ=ÔøΩÔøΩÔøΩzÔøΩÔøΩË¢™ÔøΩCfÔøΩ51N@ ÔøΩÔøΩÔøΩ -~ÔøΩvfÔøΩEÔøΩ^mÔøΩÔøΩjÔøΩaÔøΩÔøΩÔøΩ√áÔøΩ!/ÔøΩÔøΩ%ÔøΩ""xÔøΩÔøΩÔøΩÔøΩ(/D*iÔøΩÔøΩ+.nÔøΩﬂçfÔøΩÔøΩÔøΩQÔøΩÔøΩÔøΩgÔøΩOÔøΩ~=ÔøΩÔøΩjÔøΩvÔøΩÔøΩ7k6ÔøΩÔøΩO@ÔøΩ%ÔøΩ%.ÔøΩ+ÔøΩbÔøΩÔøΩ[fÔøΩ ÔøΩKÔøΩJÔøΩÔøΩ C'ÔøΩe9|≈ùUÔøΩÔøΩT0ÔøΩÔøΩÔøΩÔøΩ@ÔøΩQÔøΩÔøΩÔøΩ/ =+ÔøΩÔøΩ ÔøΩÔøΩJb)◊≤ÔøΩÔøΩÔøΩ@r)$ÔøΩÔøΩÔøΩÔøΩqÔøΩ1›èÔøΩÔøΩÔøΩÔøΩLCÔøΩBÔøΩoMKNÔøΩS!ÔøΩ–çÔøΩ:€∏1i=UqÔøΩÔøΩ“∑ÔøΩ!M<ÔøΩÔøΩJÔøΩÔøΩÔøΩwOÔøΩJb~ÔøΩÔøΩw2]s{YÔøΩÔøΩ”ßÔøΩ?QÔøΩuHÔøΩ!=b> tÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩƒâÔøΩ*ÔøΩÔøΩjÔøΩ1ÔøΩÔøΩgÔøΩSÔøΩNÔøΩ;ÔøΩ oÔøΩYÔøΩ$ÔøΩÃñÔøΩÔøΩmQ[Y^ÔøΩÔøΩyÔøΩZjÔøΩ#ÔøΩTÔøΩW<ÔøΩg–π(ÔøΩÔøΩÔøΩtS|ÔøΩWÔøΩa ÔøΩLÔøΩ:ÔøΩÔøΩÔøΩÔøΩÔøΩ^ÔøΩÔøΩÔøΩ‹´ÔøΩwÔøΩÔøΩ.ÔøΩÔøΩ|…ºÔøΩF—Ø ÔøΩadÔøΩÔøΩÔøΩ-/ÔøΩ""\NÔøΩJÔøΩÔøΩÔøΩXÔøΩmss:PuÔøΩ‘¥)gcÔøΩ<>ÔøΩ=tzÔøΩÔøΩÔøΩ+wNÔøΩ≈õmÔøΩrÔøΩ4ÔøΩÔøΩ∆é+gdÔøΩÔøΩÔøΩ>ÔøΩ:FCf-eÔøΩÔøΩXIS}=mŸämÔøΩÔøΩ:-9ÔøΩÔøΩ⁄èÔøΩ.ÔøΩÔøΩÔøΩÔøΩ:ÔøΩaÔøΩTÔøΩÔøΩxÔøΩc@(ÔøΩÔøΩ	ÔøΩ`%9~'ÔøΩÔøΩÔøΩy,lÔøΩÔøΩCI]ÔøΩ~ÔøΩ)ÔøΩÔøΩKÔøΩ)ÔøΩÔøΩÔøΩÔøΩÔøΩm÷îNÔøΩ!ÔøΩÔøΩ“Ø*ÔøΩFÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩrÔøΩxÔøΩÔøΩ(<ÔøΩÔøΩqÔøΩÔøΩs %ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ GÔøΩ iUizÔøΩ<,oÔøΩnIÔøΩÔøΩT+ÔøΩ\ÔøΩ'qÔøΩÔøΩÕëÔøΩ/UÔøΩÔøΩSﬂ≥ÔøΩÔøΩHﬂ¥ÔøΩÔøΩÔøΩÔøΩ:	ÔøΩw3ÔøΩL5tÔøΩGÔøΩÔøΩ*JÔøΩÔøΩJJlÔøΩÔøΩÔøΩ|!x	ÔøΩÔøΩÔøΩ\ÔøΩTuyÔøΩSZ3KÔøΩÔøΩ ÔøΩn$ÔøΩÔøΩÔøΩÔøΩ ÔøΩp#ÔøΩKÔøΩÔøΩ&+ÔøΩÔøΩÔøΩ$ÔøΩmÔøΩÔøΩXÔøΩSÔøΩlÔøΩ{iyÔøΩÔøΩ|NUÔøΩÔøΩÔøΩQÔøΩ}ZÔøΩ?ÔøΩ#ÔøΩÔøΩZ6ÔøΩO?ÔøΩ8ÔøΩWÔøΩ Z|ÔøΩÔøΩÔøΩqÔøΩ	ÔøΩÔøΩH:ÔøΩcdz€™B0|ÔøΩÔøΩQÔøΩÔøΩ-ÔøΩ1ÔøΩzÔøΩ÷±ÔøΩPÔøΩaÔøΩSfÔøΩpÔøΩ\ÔøΩ3ÔøΩLÔøΩÔøΩNÔøΩÔøΩ0ÔøΩ“§l…ÇÔøΩDÔøΩ,ÔøΩYÔøΩfFÔøΩq{ÔøΩÔøΩ\|ÔøΩ ÔøΩfÔøΩ(yQ“ü%ÔøΩ*ÔøΩ'ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ5QÔøΩT–ßÔøΩ8ÔøΩGÔøΩi(!ÔøΩP0ÔøΩ.ÔøΩ3ÔøΩBÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ2ÔøΩ[eÔøΩÔøΩÔøΩÔøΩ}:}PSÔøΩw>ÔøΩÔøΩÔøΩÔøΩÔøΩ;ÔøΩNÔøΩÔøΩÔøΩÔøΩ;ÔøΩ‰∑øÔøΩÔøΩLbÔøΩ0ÔøΩÔøΩQ”õÔøΩÔøΩÔøΩÔøΩ'=3ÔøΩQÔøΩÔøΩMÔøΩpJÔøΩ.ÔøΩÔøΩÔøΩÔøΩNÔøΩBs2ÔøΩ{ÔøΩÔøΩÔøΩÔøΩLu∆õÔøΩ%ÔøΩÔøΩÔøΩÔøΩ1ÔøΩÔøΩÔøΩÔøΩ\ÔøΩÔøΩ/ÔøΩ ÿ™oÔøΩÔøΩÔøΩÔøΩÔøΩ)R$ÔøΩÔøΩÔøΩ—ùÔøΩyÔøΩÔøΩÔøΩÔøΩORDtÔøΩÔøΩ ÔøΩ\ÔøΩmÔøΩÔøΩﬁ≥ÔøΩÔøΩGÔøΩÔøΩQÔøΩ&ÔøΩM%ÔøΩrÔøΩÔøΩq1ÔøΩÔøΩqQ2#ﬂùvfÔøΩ	ÔøΩpÔøΩÔøΩz*$Œπﬂ¥4ÔøΩÔøΩÔøΩÔøΩk`HÔøΩÔøΩgÔøΩÔøΩT-ﬁ±Jœ∑rXÔøΩfÔøΩÔøΩÔøΩ%GÔøΩgÔøΩ◊ÖÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩAbÔøΩÔøΩÔøΩÔøΩX7WÔøΩo%ÔøΩpÔøΩÔøΩÔøΩÔøΩYÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ-ÔøΩ(HﬂÆÔøΩÔøΩ)ÔøΩÔøΩÔøΩ?N}◊ΩÔøΩp6{ÔøΩm*?dÔøΩ<ÔøΩz':HÔøΩT◊¨C!ÔøΩÔøΩFÔøΩ`n{ÔøΩ1wÔøΩÔøΩÔøΩ≈†“ÖIÔøΩ.ÔøΩFu Í∑Ö∆∞ÔøΩ5ÔøΩÔøΩSrILÔøΩÔøΩÔøΩÔøΩÔøΩzÔøΩ‹¢ÔøΩoÔøΩÔøΩÔøΩJÔøΩ-ÔøΩÔøΩSÔøΩ/ÔøΩeÔøΩ€ú5‚àÑ{0ÔøΩnÔøΩuÔøΩMÔøΩ)◊ì÷∫ÔøΩ^ÔøΩÂñãÔøΩ/ÔøΩÔøΩ?jeÔøΩÔøΩÔøΩ:ÔøΩ)ÔøΩ1ÔøΩ*+ÔøΩz2ÔøΩ}%-ÔøΩÔøΩ4AÔøΩÔøΩÔøΩ_ÔøΩÔøΩÔøΩWÔøΩÔøΩ;€æÔøΩÔøΩzÔøΩÔøΩÔøΩÔøΩDzGÔøΩÔøΩ=ÔøΩÔøΩÔøΩqSÔøΩ#ÔøΩÔøΩ%ÔøΩdÔøΩÔøΩ;ÔøΩ QÔøΩT,ÔøΩÔøΩ∆µÔøΩHÔøΩÔøΩÔøΩU}ÔøΩdÔøΩÔøΩ5 ÔøΩFÔøΩsyÔøΩIÔøΩÔøΩ*ÔøΩqnÔøΩÔøΩÔøΩ]=ÔøΩÔøΩEÔøΩn/ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ[OÔøΩ3ÔøΩÔøΩ,“ºÔøΩwr;e|""6ÔøΩÔøΩ	_aÔøΩÔøΩŒ¨ÔøΩTÔøΩÔøΩÔøΩÔøΩ 4ÔøΩ{ÔøΩYjÔøΩÔøΩiCÔøΩÔøΩÔøΩCOÔøΩXKÔøΩÔøΩLÔøΩnÔøΩO4<1ÔøΩÔøΩÔøΩ=ÔøΩBY#ÔøΩÔøΩÔøΩÔøΩÔøΩWÔøΩÕ∂ÔøΩÔøΩÔøΩ|ÔøΩÔøΩk.:ÔøΩÔøΩaxvÔøΩKÃ®ÔøΩÔøΩo}ÔøΩÔøΩÔøΩOL?ÔøΩWÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩvÔøΩiQD´∞ΩÔøΩÔøΩÔøΩÔøΩÔøΩzNAÔøΩyﬂµvÔøΩz*}||ÔøΩGÔøΩPÔøΩdÔøΩÔøΩ_ÔøΩ&ÔøΩÔøΩÔøΩÔøΩÔøΩ_nﬁ´LÔøΩÔøΩ 11ÔøΩÔøΩÔøΩﬂëÔøΩÔøΩÔøΩÔøΩÔøΩdÔøΩÔøΩÔøΩqPÔøΩÔøΩœòÔøΩ%RÔøΩ=iÔøΩÔøΩÔøΩÔøΩ|AÔøΩÔøΩ ÔøΩÔøΩ. vUÔøΩÔøΩÔøΩ!ÔøΩÔøΩ|ÔøΩ∆õDEÔøΩÔøΩ/A:ÔøΩÔøΩ+ÔøΩ>ÔøΩlÔøΩ@ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩUÔøΩ[LÔøΩÔøΩÔøΩoSÔøΩÔøΩ‡¶¨*ÔøΩ$ÔøΩÈ±≤nÔøΩxÔøΩÔøΩ\ÔøΩE+gwÔøΩKÔøΩÔøΩÔøΩ~ÔøΩÔøΩwÔøΩE»ê1ÔøΩÔøΩ ÔøΩ»õ5cÔøΩ_ÔøΩÔøΩ%ÔøΩÔøΩÃÄÔøΩÔøΩN|≈òÔøΩÔøΩÔøΩ{FF7S!(ÔøΩÔøΩuÔøΩ â«∂ÔøΩÔøΩÔøΩÔøΩoÔøΩZRGÔøΩÔøΩÔøΩeŒæ5ÔøΩWÔøΩ>HÔøΩNÔøΩÔøΩÔøΩÔøΩÔøΩ#ÔøΩŸ∏ÔøΩ ÔøΩ1LÔøΩÔøΩuvF%ÔøΩÔøΩsOÔøΩÔøΩÔøΩÔøΩ@AÔøΩRkSÔøΩÔøΩÔøΩDd3ÔøΩ|/ÔøΩ7ÔøΩÔøΩÔøΩ""'ÔøΩÔøΩÔøΩÔøΩÔøΩ=ÔøΩÔøΩÔøΩÔøΩÔøΩeÔøΩ\ÔøΩÔøΩÔøΩ|JMÔøΩÔøΩÔøΩ[{?3ÔøΩÔøΩÔøΩ8 ZVÔøΩÔøΩe	ÔøΩb;ÔøΩ.ÔøΩÔøΩÔøΩ)ÔøΩÔøΩÔøΩÔøΩ,ÔøΩ`ÔøΩÔøΩÔøΩ^z8ÔøΩÔøΩÔøΩ}WÔøΩ ]:ÔøΩÔøΩZD1ÔøΩcÔøΩÔøΩ!ÔøΩÔøΩÔøΩxÔøΩkk8^ÔøΩÔøΩWÔøΩ$ÔøΩ~ÔøΩAƒÜÔøΩ$+.ÔøΩÔøΩÔøΩ=|ÔøΩÔøΩÃ´4#KÿöpÔøΩÔøΩCkÔøΩÔøΩÔøΩy#ÔøΩ$~ÔøΩÔøΩ+xÔøΩoÔøΩ4JUÔøΩZ>zÔøΩÔøΩŒà6'ÔøΩd>ÎõÆ—ÅÔøΩ*9ÔøΩÔøΩmÔøΩÔøΩ.ÔøΩjÔøΩÔøΩ`(ÔøΩhÔøΩ-shÔøΩÔøΩ!CPC@.hWbÔøΩÔøΩÔøΩÔøΩÔøΩEOÔøΩfÔøΩÔøΩd2zÔøΩÔøΩÔøΩTÔøΩÔøΩÔøΩÀ†€óÔøΩb<ÔøΩÔøΩÔøΩuÔøΩ{ÔøΩ(ÔøΩÔøΩ3ÔøΩ8ÔøΩÔøΩS'ErÔøΩhUÔøΩ}WÔøΩ1ÔøΩÂäùÔøΩ8wÔøΩÔøΩÔøΩ#ÔøΩÔøΩÔøΩ ÔøΩ&|\WÔøΩRcÔøΩ«°6ÔøΩhcÔøΩsÔøΩÔøΩ·ΩåbkÔøΩ6x+}s-ÔøΩgÔøΩ%ÔøΩj3 ÔøΩÔøΩÔøΩÔøΩiŸêÔøΩÔøΩ1=ÔøΩMÔøΩ/OÔøΩWÔøΩ?ÔøΩ9hÔøΩs’üÔøΩ4ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ[ÔøΩOsÔøΩÔøΩx2ÔøΩ SzÔøΩÔøΩZÔøΩfÔøΩ>ÔøΩ	ÔøΩo,ÔøΩVÔøΩJÔøΩœÆÔøΩeÔøΩ`Œ•tÔøΩÔøΩÔøΩÔøΩMÔøΩ |}ÔøΩv3D C)ÔøΩz|ÔøΩÔøΩ(%ÔøΩÔøΩ@o*ÔøΩÔøΩ#yÔøΩ4ÔøΩÔøΩÔøΩÔøΩdÔøΩÔøΩoGÔøΩKÔøΩÔøΩv—ΩÔøΩ«ìÀ∑ÔøΩTÔøΩzBÔøΩvÔøΩ3ÿéÔøΩÔøΩmÔøΩcVÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩbfbÔøΩEÔøΩÔøΩÔøΩÔøΩÔøΩvV mÔøΩÔøΩ?ÔøΩÔøΩÔøΩÔøΩÔøΩy(ÔøΩÔøΩUÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩsÔøΩ.ÔøΩÔøΩ7:ÔøΩÔøΩÔøΩÔøΩÔøΩ}bÔøΩ$ÔøΩ9ÔøΩÔøΩÔøΩU$ÔøΩÔøΩfÔøΩZnyÔøΩÔøΩ>ÔøΩ⁄ΩRÔøΩ*ÔøΩÔøΩÔøΩ ÔøΩÔøΩFÔøΩ2ÔøΩ0>ÔøΩÔøΩÔøΩÔøΩ"" UÔøΩÔøΩdÔøΩÔøΩÔøΩ3ÔøΩÔøΩ CÔøΩ ÔøΩÔøΩÔøΩ_0K{.IÔøΩ,~3ÔøΩÔøΩÔøΩp0ÔøΩ, ÔøΩÔøΩqÔøΩwÔøΩnlO ÔøΩÔøΩ«êÔøΩr3ÔøΩ)ÔøΩÔøΩÔøΩ	ÔøΩ[7bÔøΩÀ´>ÔøΩgÔøΩ- 7ÔøΩ”∫€©F ¥ÔøΩÔøΩIÔøΩÔøΩ_—≤XMÔøΩÔøΩJ4+ÔøΩLÔøΩÔøΩÔøΩÔøΩxÔøΩÔøΩÔøΩÔøΩ5ÔøΩÔøΩÀ∂ÔøΩXCJÔøΩÔøΩOkÔøΩÔøΩÔøΩJÔøΩÔøΩHÔøΩÔøΩÔøΩ:ÔøΩ:rVÔøΩ2ÔøΩjÔøΩpBÔøΩÔøΩuÔøΩÔøΩÔøΩÔøΩÔøΩQÔøΩÔøΩÔøΩ@œÜÔøΩÔøΩÔøΩ6ÔøΩÔøΩÔøΩÕáPÔøΩ ÔøΩPÔøΩfÔøΩÔøΩVÔøΩdwÔøΩeÔøΩÔøΩÔøΩ;`A’µÔøΩ~ÔøΩÔøΩÔøΩÔøΩkÔøΩ3ÔøΩÔøΩDÔøΩ`5ÔøΩZÔøΩ@9ÔøΩ5ÔøΩÔøΩÔøΩ%rÔøΩÔøΩÀ©ÔøΩ)ÔøΩÔøΩÔøΩÔøΩÔøΩfK>ÔøΩÔøΩb<@ÔøΩ$2)qÔøΩ[ÔøΩ@5W/,2ÔøΩÔøΩÔøΩÔøΩÔøΩIÔøΩwÔøΩ'U3Ÿ∑|ŒéBÔøΩEwÔøΩ|ÔøΩdÔøΩjÔøΩÔøΩjG O)ÔøΩT?4ÔøΩÔøΩÔøΩmÔøΩÔøΩÔøΩ=ÔøΩPÔøΩ:ÔøΩ)ÔøΩ…£ÔøΩxÔøΩzÔøΩÔøΩ|`dÃ´ÔøΩ_ÔøΩpBÔøΩ&ÔøΩaÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ >t\ÔøΩ endstream endobj 47 0 obj << /Filter /FlateDecode /Length1 1541 /Length2 8282 /Length3 0 /Length 9304 >> stream xÔøΩÔøΩÔøΩP\ÔøΩ.LÔøΩCpÔøΩÔøΩÔøΩ[pwwÔøΩÔøΩÔøΩ%ÔøΩ{ÔøΩÔøΩÔøΩÔøΩÔøΩ;ÔøΩ›ÇK xpÁëúsÔøΩ=ÔøΩÔøΩÔøΩ{ÔøΩÔøΩfÔøΩÔøΩÔøΩ^ÔøΩ{}ÔøΩj(ÔøΩ*ÔøΩ0ÔøΩBÔøΩAÔøΩPÔøΩ#3#ÔøΩ ""ÔøΩÔøΩÔøΩ	 YÔøΩ@JJUÔøΩÔøΩ5ÔøΩo3 ÔøΩ:ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ b2r|ÔøΩÔøΩ9>ÔøΩÔøΩÔøΩÔøΩÔøΩ5ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩXÔøΩ@ÔøΩÔøΩÔøΩ< Q#gÔøΩ)@ÔøΩ ÔøΩÔøΩP(EÔøΩÔøΩnÔøΩ`sÔøΩÔøΩeÔøΩÔøΩ	ÔøΩ6ÔøΩ0sssÔøΩÔøΩ	ŸÄÔøΩÔøΩ&FÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩyE#kÔøΩ ÔøΩrtÔøΩÔøΩÔøΩ,myÔøΩÔøΩ\\\ÔøΩlÔøΩÔøΩÔøΩÔøΩ4ÔøΩ ÔøΩÔøΩ@ÔøΩ ÔøΩwÔøΩ~ÔøΩ7ÔøΩÔøΩU# %@ÔøΩÔøΩÔøΩ]jÔøΩÔøΩbd<ÔøΩÔøΩ& ÔøΩÔøΩsÔøΩÔøΩdx^ÔøΩ""%PÔøΩAÔøΩ""ÔøΩÔøΩEÔøΩÔøΩÔøΩ 3#ÔøΩÔøΩÔøΩÔøΩ;ÔøΩ'ÔøΩÔøΩÔøΩjckqCÔøΩf`k@A\ÔøΩÔøΩÔøΩ’ë`1ÔøΩM4ÔøΩvÔøΩ>ÔøΩ9ÔøΩÔøΩÔøΩÔøΩÔøΩ	vnR=ÔøΩwy&ÔøΩ`[GFÔøΩÔøΩÔøΩÔøΩ~ÔøΩyÔøΩÔøΩTjcÔøΩ8:ÔøΩÔøΩﬁü(ÔøΩdÔøΩÔøΩv7ÔøΩÔøΩNÔøΩ uÔøΩÔøΩÔøΩ ÔøΩÔøΩSÔøΩÔøΩEÔøΩ:ÔøΩ2ÔøΩAÔøΩvN )—ø)ÔøΩ&ÔøΩÔøΩÔøΩÔøΩAÔøΩ v ÔøΩÔøΩÔøΩ ÔøΩ@ÔøΩ&LÔøΩ”´ÔøΩŸÇÔøΩ8ÔøΩÔøΩÔøΩ+ÔøΩtÔøΩÔøΩÔøΩÃûÔøΩ yÔøΩÔøΩ@ÔøΩ/w#gÔøΩÔøΩÔøΩ	ÔøΩÔøΩÔøΩOÔøΩ#ffÔøΩ)ÔøΩÔøΩ`2CPÔøΩÔøΩÔøΩÔøΩ2ÔøΩ?ÔøΩ=ÔøΩÔøΩ|ÔøΩ3 ÔøΩÔøΩÔøΩÔøΩÔøΩﬁ≥ÔøΩLÔøΩkÔøΩÔøΩÔøΩÔøΩÔøΩ/ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ_ÔøΩÔøΩ',uÔøΩ3ÔøΩÔøΩXÿÅ n6v '7ÔøΩÔøΩ(ÔøΩÔøΩÔøΩÔøΩ?ÔøΩR3(ÔøΩÔøΩÔøΩÔøΩ>wÔøΩ_vÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÁíá>ÔøΩÔøΩÔøΩÔøΩÔøΩuÔøΩÔøΩ@ÔøΩÔøΩÔøΩÔøΩgÔøΩÔøΩ	ÔøΩÔøΩÔøΩÔøΩ,ÔøΩ7ÔøΩÔøΩÔøΩƒùÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ?n#ÔøΩÔøΩÔøΩﬂÑgÔøΩ:9>ÔøΩ_ÔøΩ<ÔøΩÔøΩÔøΩjÔøΩÔøΩÔøΩY9ÔøΩ)ÔøΩÔøΩÔøΩÔøΩRÔøΩFÔøΩs 1ÔøΩÔøΩwÔøΩÔøΩ`WÔøΩÔøΩ""ÔøΩÔøΩÔøΩÔøΩ/ÔøΩÔøΩeWÔøΩ=dÔøΩ`HÔøΩ ÔøΩ}ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩ=OÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ?.ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩbÔøΩÔøΩÔøΩ	caÔøΩ ÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩpg~ESÔøΩÔøΩ ÔøΩ!PÔøΩÔøΩÔøΩsyÔøΩ 3ÔøΩ=ÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩ6ÔøΩA\ÔøΩ &ÔøΩ#ÔøΩgÔøΩ—øÔøΩÔøΩÔøΩ@ÔøΩÔøΩÔøΩ\ÔøΩ 3ÔøΩÔøΩ|&CÔøΩY LÔøΩÔøΩÔøΩl &ÔøΩÔøΩÔøΩTÔøΩÔøΩœ•29ÔøΩÔøΩ3ÔøΩÔøΩÔøΩÔøΩÔøΩ `rÔøΩÔøΩÔøΩ&NÔøΩÔøΩÔøΩwÔøΩÔøΩ>ÔøΩÔøΩ_ÔøΩÔøΩÔøΩÔøΩÔøΩLPfÔøΩ&ÔøΩÔøΩU-ÔøΩBD.€£|SÔøΩÔøΩI4ÔøΩÔøΩÔøΩNÔøΩÔøΩÔøΩ4ÔøΩi~ÔøΩÔøΩÔøΩBÔøΩﬂ∫0ÔøΩ6≈®/ÔøΩÔøΩÔøΩkÔøΩÔøΩ>+5ÔøΩyÔøΩÔøΩ(Ol7ÔøΩÃèÔøΩÔøΩÔøΩÔøΩÔøΩUÔøΩÔøΩ 3ÔøΩ ÔøΩÔøΩxÔøΩÔøΩPÔøΩÔøΩÔøΩm|ÔøΩ.MÔøΩeÔøΩƒÖÔøΩÔøΩÔøΩsÔøΩÔøΩ#ÔøΩZÔøΩ[ÔøΩ}8hv[ÔøΩG9ÔøΩÔøΩ}ÔøΩ$CÔøΩZÔøΩÔøΩoÔøΩ4eÔøΩqÔøΩÔøΩ;G$ZÔøΩWÔøΩÔøΩÔøΩ)ÔøΩÃ±'2ÔøΩ:œÉHÔøΩ|wÔøΩ5ÔøΩO73ÔøΩKUY:)ÔøΩ	H`/ÔøΩÔøΩ'ﬁªÔøΩ&HÔøΩœπ~	ÔøΩl`bÔøΩyÔøΩNÔøΩ;EÔøΩÔøΩ~KÔøΩÔøΩÔøΩÔøΩÔøΩn9*”â(zpÔøΩÔøΩÔøΩÔøΩ:ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩxÔøΩH RÔøΩÔøΩ@-	ÔøΩNÔøΩ&%bhÔøΩ7,FÔøΩÔøΩÔøΩ⁄óÔøΩÔøΩ3NÔøΩÔøΩ)x`cÔøΩa`ÔøΩJcÿßÔøΩÔøΩÔøΩÔøΩ(ÔøΩ<ÔøΩÔøΩÔøΩ—ûÔøΩNÔøΩ*ÔøΩyÔøΩm'ÔøΩ9bÔøΩÔøΩÔøΩÔøΩ\ÔøΩÔøΩZXZÔøΩ{ÔøΩÔøΩSÔøΩÔøΩ9YÔøΩÔøΩÔøΩÔøΩ9ÔøΩ0ÔøΩS;$ÔøΩÔøΩ ÔøΩÔøΩ4bGÔøΩÔøΩÔøΩ}ÔøΩÔøΩÔøΩWÔøΩ€∏SÔøΩ/ÔøΩÔøΩ|ÔøΩNÔøΩ57ÔøΩ-ÔøΩgÔøΩ+ÔøΩjÔøΩÔøΩz‚ïßÔøΩÔøΩwÔøΩ$6ÔøΩ^ÃÖ{ÔøΩÔøΩÔøΩ{ÔøΩ5ÔøΩuÔøΩrÔøΩÔøΩ nBÔøΩÔøΩMÔøΩÔøΩÔøΩ6ÔøΩÔøΩKZÔøΩ ÔøΩ…ñUÔøΩÔøΩZ)ÔøΩ[ÔøΩÔøΩÔøΩÔøΩ\ÔøΩ'ZÔøΩÔøΩÔøΩÔøΩÔøΩ)ÔøΩ_ÔøΩHÔøΩÔøΩÔøΩÔøΩ!jUzrÔøΩÔøΩuÔøΩÔøΩÔøΩ{ÔøΩMmÔøΩÔøΩÔøΩUÔøΩg»åÔøΩÔøΩWUÔøΩÔøΩ8nÔøΩÔøΩMoÔøΩÔøΩÔøΩÔøΩa?ÔøΩÔøΩÔøΩÔøΩ>ÔøΩwÔøΩD|ÔøΩÔøΩÔøΩ47]T>zÔøΩÔøΩ√âÔøΩÔøΩO:ÔøΩ7ÔøΩÔøΩz5∆õÔøΩ.!DÔøΩ^ÔøΩr10ÔøΩ.ÔøΩÔøΩÔøΩÔøΩÔøΩdÔøΩÔøΩNÔøΩ`ÔøΩÔøΩÔøΩ/ÔøΩÔøΩyeyKZÔøΩ—¢ÔøΩÔøΩJTrÔøΩyÔøΩgÔøΩyÔøΩÔøΩYÔøΩ#ÔøΩÔøΩÔøΩÔøΩ9ÔøΩÔøΩÔøΩÔøΩ‘ÑÔøΩiCÔøΩAÔøΩÔøΩ-ÔøΩ.ÔøΩÔøΩÔøΩÔøΩu7ÔøΩÔøΩ OÔøΩÔøΩÔøΩÔøΩÔøΩR.YÔøΩÔøΩf>ÔøΩw?ÔøΩ|ÔøΩÔøΩÔøΩ)?$FiÔøΩÔøΩÔøΩÔøΩIUÔøΩÔøΩÔøΩÔøΩp`MÔøΩÔøΩ:ÔøΩÔøΩÔøΩÔøΩ$ÔøΩVÔøΩÔøΩÔøΩ|ÔøΩÔøΩ2ÔøΩY'ÔøΩÔøΩkÔøΩ:?ÔøΩYADÔøΩÔøΩt""*TxÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩ7ÔøΩ#iÔøΩÔøΩÔøΩD,$ÔøΩÔøΩÔøΩz+–ª(ÔøΩ@?ÔøΩE3ÔøΩ;WÔøΩÔøΩXÔøΩÔøΩLÔøΩÔøΩÔøΩÔøΩ|ÔøΩ(oÔøΩﬁ¶~dO>ÔøΩUÔøΩ'ÔøΩjÔøΩÔøΩlÔøΩATÔøΩÔøΩÔøΩ«èÔøΩoÔøΩ[	ÔøΩ72x2ÔøΩ[ÔøΩÔøΩÔøΩ ÔøΩIÔøΩXÔøΩÔøΩ*ﬁã÷≥ÔøΩÔøΩÔøΩpÔøΩÔøΩ3I<Ó®ák’©&ÔøΩÔøΩÔøΩiÔøΩjÔøΩ+'zÔøΩÔøΩ>&FÔøΩÔøΩdÔøΩQ\…†=jÔøΩ/""ÔøΩ,H$ÔøΩÔøΩÔøΩÔøΩzÔøΩJÔøΩWY4	LZ\ÔøΩÔøΩVÔøΩÔøΩyÔøΩa0ÔøΩ3#!ÔøΩzyÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9ÔøΩ–•@CKÔøΩkÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ""-ÔøΩÔøΩÔøΩ<7ÔøΩÔøΩÔøΩ{ÔøΩÔøΩ	+e>ÔøΩEÔøΩ!ÔøΩ ÔøΩ%ÔøΩÔøΩÔøΩTpÔøΩÔøΩRÔøΩÔøΩSHÔøΩbÔøΩLÔøΩÔøΩRÔøΩ'’ôÔøΩÔøΩZ>LÔøΩÔøΩ~!ÔøΩOÔøΩl|gÔøΩCÔøΩdÔøΩÔøΩÔøΩviÔøΩHnÔøΩÔøΩ9ÔøΩRÔøΩÔøΩ7sÔøΩlÔøΩbÔøΩWÔøΩ0QÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ–üZÔøΩ=ÔøΩy–áÔøΩ40ÔøΩPÔøΩÔøΩ‰®ºK‹äÔøΩ’ï2	ÔøΩÔøΩdÈÆÆGÔøΩ!ÔøΩÔøΩjÔøΩ]wÔøΩÔøΩ6mNÔøΩÔøΩFPfH4H5ÔøΩÔøΩz1@b|ÔøΩlIuÔøΩÔøΩ8qÔøΩÔøΩÔøΩsÔøΩ{ÔøΩ!ÔøΩÔøΩcÔøΩcÔøΩÔøΩYÔøΩ0M%ÔøΩ⁄ÑÔøΩÔøΩc5ÔøΩÔøΩÔøΩ}eÔøΩ_bÔøΩÔøΩQ`ÔøΩ.r-ÔøΩpÔøΩUÔøΩHÔøΩ0ÔøΩ2ÔøΩ-ÔøΩEÔøΩ2ÔøΩ^ÔøΩÔøΩÔøΩÔøΩjÔøΩEÔøΩÔøΩÔøΩÂÇáÔøΩhÔøΩJrÔøΩL8ÔøΩÔøΩ!mÔøΩÔøΩIÁ§¢ÔøΩM[FÔøΩ=ÔøΩÔøΩÔøΩÔøΩpÔøΩ1&ÔøΩAUÔøΩ◊úÔøΩÔøΩÔøΩLNÔøΩÔøΩ\ÔøΩ5Y|ÔøΩÔøΩ4ÔøΩÔøΩ+MÔøΩÔøΩWÔøΩÔøΩ”öÔøΩvPÔøΩ*oÔøΩÔøΩn.sÔøΩÃ¶ÔøΩTÔøΩL>ÔøΩÔøΩ;ÔøΩ?ÔøΩfÔøΩÿ°iÔøΩÔøΩÔøΩqmﬂ£WÔøΩÔøΩÔøΩlÔøΩ9ÔøΩnA}QÔøΩ""ÔøΩÔøΩÔøΩ^iÔøΩ4;{IÔøΩÔøΩGXÔøΩh_s	…≤ÔøΩ1jÔøΩOSwÔøΩ5ÔøΩÔøΩŸíÔøΩÔøΩF1BÔøΩÔøΩEÔøΩWÔøΩÔøΩÁ´Ω%ÔøΩ]ÔøΩÔøΩ7ÔøΩÔøΩ~ÔøΩÔøΩÔøΩÔøΩÔøΩ[ÔøΩÍªüÔøΩCsCl }WÔøΩÔøΩY ÔøΩÔøΩ= ÛΩΩΩFÔøΩ(HÔøΩfÔøΩ<ÔøΩÔøΩÔøΩB ,$XfÔøΩÔøΩÔøΩ`59m~ZÔøΩÔøΩÔøΩFÔøΩzÔøΩum.>ÔøΩÔøΩlÔøΩÔøΩÔøΩÚ±ï°ÔøΩ)^ÔøΩ 6ÔøΩ6f FÔøΩ FÔøΩ}ÔøΩÔøΩ.ÔøΩBÔøΩÔøΩ\ÔøΩÔøΩVÔøΩ^–ìÔøΩ\uÔøΩ)ÔøΩÔøΩprk'wÔøΩÔøΩœ°ÔøΩZÔøΩRÔøΩkﬁ§6ÔøΩzÔøΩÔøΩ]ÔøΩÔøΩbÔøΩÔøΩÔøΩ)ÔøΩ(ÔøΩÔøΩ ÔøΩ{ÔøΩmÔøΩÔøΩpjÔøΩÔøΩSÔøΩÔøΩM Ó¨§UÔøΩÔøΩyÔøΩoHÔøΩÔøΩÔøΩÔøΩÔøΩŒòs!ÔøΩÔøΩrGÔøΩÔøΩ>ÔøΩÔøΩ ÔøΩeÔøΩÔøΩÔøΩÔøΩjc\ÔøΩf…£ÔøΩ(À•ÔøΩW+ÔøΩÔøΩÔøΩ;[ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩ(&.ÔøΩÔøΩÔøΩYÔøΩÔøΩŒ™,√úÔøΩÔøΩÔøΩÔøΩÔøΩiÔøΩÔøΩÔøΩZ+iLÔøΩÔøΩ>ÔøΩh ÔøΩ0,ÔøΩ;ÔøΩTYX/ÔøΩ_ÔøΩÔøΩwÔøΩÔøΩP/KÔøΩÔøΩeÔøΩ‰¶¥ÔøΩÔøΩ5|ÔøΩAÔøΩÔøΩsCÔøΩÔøΩÔøΩ !ÔøΩR_,ÔøΩfÔøΩ\ÔøΩW^B}ÔøΩÔøΩ0LÔøΩcrÔøΩ ÔøΩd=}&0ÔøΩ; ÔøΩÔøΩÀ≥hÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩMÔøΩVfÔøΩ◊≠ÔøΩuÔøΩÔøΩO"")ÔøΩ rGÔøΩÔøΩÔøΩÔøΩÔøΩ:ÔøΩÔøΩÔøΩÔøΩÔøΩaÔøΩÔøΩÔøΩÔøΩuÔøΩr.ÔøΩZ~vyqÔøΩd7&PÔøΩÔøΩÔøΩ@KÔøΩ&ÔøΩÔøΩ1√¨ƒíwÔøΩÔøΩzÔøΩdXÔøΩaÔøΩy*T,nÔøΩ«∏'sÔøΩÔøΩ{ ÔøΩ,€é-ÔøΩÔøΩ>ÔøΩJ*ÔøΩÔøΩÔøΩ5ÔøΩ(GÔøΩÔøΩ+EÔøΩÔøΩÔøΩOÔøΩÔøΩISÔøΩÔøΩ:ra!ÔøΩÔøΩÔøΩZÔøΩÔøΩÔøΩm’∑3ÔøΩ5}ÔøΩÔøΩh{ÔøΩÔøΩÔøΩ2ÔøΩ:QÔøΩÔøΩg/ÔøΩiTÔøΩ9`ÔøΩ*ÔøΩrÔøΩ`ÔøΩÔøΩÔøΩÔøΩLÔøΩÔøΩ,ÔøΩÔøΩ9ÔøΩ!GÔøΩvÔøΩÔøΩÔøΩÔøΩÔøΩ3ÔøΩÔøΩÔøΩbZ^i\ÔøΩ/7ÔøΩÔøΩZL|ÔøΩ:ÔøΩW!:mÔøΩÔøΩ„üøÔøΩÔøΩ=,zÔøΩ ÔøΩÔøΩ^ÔøΩQ'iÔøΩÔøΩŒ°ÔøΩÔøΩÔøΩXa;ÔøΩÔøΩÔøΩ ÔøΩFÔøΩIÔøΩÔøΩnÔøΩÔøΩÔøΩÔøΩ('≈Ä<ÔøΩÔøΩÔøΩ3	ÔøΩ{ÔøΩÔøΩbÔøΩÔøΩ[)	;ÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩFkÔøΩÔøΩÔøΩQÔøΩkÔøΩ0ÔøΩhƒÉKÔøΩÔøΩ~ÔøΩÔøΩCPEÔøΩ6ÔøΩÔøΩKnÔøΩ<ÔøΩÔøΩ}HÔøΩÔøΩÔøΩe]ÔøΩÔøΩÔøΩÔøΩ'9ÔøΩ»Ñ V]`o=qÔøΩL8WVÔøΩÔøΩÔøΩ;\ÔøΩOÔøΩyDucÔøΩÔøΩ|ÔøΩ9mÔøΩF=wÔøΩ BÔøΩs ÔøΩÔøΩ_ÔøΩÔøΩ:iÔøΩFÔøΩmÔøΩ;ÔøΩÔøΩtÔøΩB0ÔøΩÔøΩ'ÔøΩ^ÔøΩ(ÔøΩOiÔøΩbÔøΩÔøΩzÔøΩÔøΩNÔøΩt%""ÔøΩÔøΩÔøΩÔøΩ ÔøΩL$ÔøΩK-7ÔøΩÔøΩÔøΩ¬°ÔøΩ6ÔøΩÔøΩ{\BgÔøΩÔøΩEÔøΩr)PÔøΩ$""ÔøΩo}ÔøΩÔøΩ@ÔøΩÔøΩÔøΩHÔøΩ	ÔøΩwÔøΩ#""ÔøΩÔøΩŸÖ≈éÔøΩ‘µJÔøΩÔøΩÔøΩ(ÔøΩÔøΩÔøΩuA+ÔøΩ%gfc7 ÔøΩ)&√¢ÔøΩÔøΩRÔøΩpÔøΩHS9W:L""1WÔøΩÔøΩ oSÔøΩ8ÔøΩÔøΩpvÔøΩÔøΩÔøΩ÷πÔøΩnÔøΩxÔøΩÔøΩÔøΩ!M\o)ÔøΩ;rÔøΩX&√∑_/jÔøΩÔøΩ¬∏IÔøΩk,a(7DbÔøΩMÔøΩcÔøΩ_ÔøΩ\ÔøΩÃ∂mÔøΩÔøΩÔøΩ?ÔøΩÔøΩ,bsTÔøΩÔøΩn]ÔøΩÔøΩrÔøΩ^4ÔøΩÎΩØ&LÔøΩSÔøΩ*ÔøΩÔøΩÔøΩ2]""ÔøΩÔøΩÔøΩÔøΩÔøΩAvFKrÔøΩ+S√•ÔøΩ∆¶#ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩmÔøΩ ÔøΩfÿÜÔøΩ1KÔøΩe ¢ÔøΩ (_zÔøΩÔøΩÔøΩÔøΩFe""@b [ÔøΩ3ÔøΩvcÔøΩÔøΩ;ÔøΩÔøΩrD3ÔøΩlN+ÔøΩGvÔøΩÔøΩÔøΩ~ﬁÑnj9IÔøΩ*SÔøΩ‘ÆÔøΩ%ÔøΩÔøΩÔøΩÔøΩa6ÔøΩ4ÔøΩ~*ÔøΩmÔøΩÔøΩÔøΩÔøΩ]*MÔøΩ6LÔøΩ!](ÔøΩÁÉõÔøΩÔøΩ\oÔøΩ>ÔøΩ-ÔøΩ pÔøΩÔøΩLÔøΩH9ÔøΩ7EÔøΩÔøΩÔøΩÔøΩ?0ÔøΩÔøΩÔøΩjVÔøΩqﬂêÔøΩÔøΩÔøΩÿµ	E ÔøΩ*ÔøΩTdÔøΩÔøΩÔøΩ3 ©aÔøΩÔøΩÔøΩÔøΩV>aA”µ#ÔøΩÔøΩg9ÔøΩeÔøΩsÔøΩ`oÔøΩhÔøΩixÔøΩIÔøΩ2ÔøΩ0]+ÔøΩ)ÔøΩÔøΩÔøΩÔøΩXÔøΩÔøΩÔøΩTaÔøΩ.Z≈é+ÔøΩ3ÔøΩÔøΩZVÔøΩpÔøΩ$TÔøΩÔøΩ3ÔøΩÔøΩÔøΩÔøΩ:ÔøΩ?ÔøΩkÔøΩÔøΩ5*HDÔøΩYÔøΩÔøΩÔøΩÔøΩbÔøΩ;`}^Z7w`ÔøΩÔøΩ	56K”≤ÔøΩjSÔøΩoÔøΩÔøΩ€∫ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩD≈∫ÔøΩÔøΩlÔøΩƒ´ÔøΩ,ÔøΩ%≈ΩeÔøΩUÔøΩÔøΩv	oÔøΩÔøΩz.""ÔøΩfÔøΩÔøΩÔøΩ_ÔøΩC'ÔøΩI7ÔøΩxÔøΩlÔøΩÔøΩ#ÔøΩ'ÔøΩ;ÔøΩ}E{kk ÔøΩÔøΩiÔøΩÔøΩCÔøΩ<ÔøΩe ^ÔøΩ""ÔøΩÔøΩÔøΩÔøΩ%dÔøΩÔøΩdHÔóöGÔøΩ9ÔøΩpÔøΩ?Ê°äÔøΩÔøΩÀ™ÔøΩwx ÀßÔøΩ#*ÔøΩ€£œñ(|wÔøΩu$ÔøΩÔøΩaÔøΩ	ÔøΩÔøΩÔøΩjÔøΩpÔøΩÔøΩ}'‹ã'm~ÔøΩ%ÔøΩ ÔøΩ<ÔøΩÔøΩÔøΩ4wÔøΩÔøΩsÔøΩ/Z_ÔøΩÔøΩÔøΩÔøΩ^ÔøΩ{ÔøΩÔøΩÔøΩ7ÔøΩw	n|ÔøΩÔøΩÔøΩQÔøΩ3ÔøΩÔøΩ⁄üÔøΩ`ÔøΩBÔøΩÔøΩÔøΩÔøΩÔøΩ""ÔøΩÔøΩaÔøΩÔøΩLsÔøΩeÔøΩ+ÔøΩwÔøΩUÔøΩZÔøΩÔøΩÔøΩÔøΩ‘•ÔøΩV@ÔøΩ$ÔøΩDÔøΩÔøΩ«àÔøΩlÔøΩÔøΩ Z>ÔøΩ\>ÔøΩpADÔøΩÔøΩqMÔøΩÔøΩ/ÔøΩIxÔøΩÔøΩÔøΩÔøΩ}r1ÔøΩ-ÔøΩÔøΩÔøΩNÔøΩfÔøΩÔøΩaÔøΩ&ÔøΩOÔøΩÔøΩaÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ó%DÔøΩzÔøΩsÔøΩ8ÔøΩÈ≠ÅrÔøΩÔøΩÔøΩ(ÔøΩÔøΩCÔøΩÔøΩXÔøΩÔøΩsÔøΩIÔøΩÔøΩGoÔøΩÔøΩ^ÔøΩÔøΩÔøΩÔøΩWÔøΩ=ÔøΩ7ÔøΩmdÔøΩÔøΩ*ÔøΩ/≈∫~ÔøΩÔøΩÔøΩÔøΩ_ÔøΩ ÔøΩÔøΩ$ÔøΩ*&}ÔøΩÔøΩÔøΩC]ÔøΩ]-ÔøΩ‘ã3zÔøΩÔøΩ0YÔøΩ5ÔøΩ/ÔøΩ(ÔøΩ1ÔøΩÀµÔøΩÔøΩÔøΩÔøΩÔøΩ›©QÔøΩÔøΩÔøΩ%*ÔøΩ6.ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩg0-jkÔøΩq=ÔøΩnÔøΩ5zÔøΩÔøΩ`XY,ÔøΩ5Ã∫ÔøΩW#VÔøΩBr]»ïÔøΩpÔøΩJVXÔøΩÔøΩÔøΩÔøΩeÔøΩÔøΩÔøΩÔøΩÔøΩY/8t)ÔøΩ|AÔøΩÔøΩÔøΩÔøΩÔøΩ0ÔøΩqmÔøΩÔøΩÔøΩoÔøΩ¬•7Q,ÔøΩ8WkÔøΩZÔøΩoÔøΩ:'9ÔøΩkÔøΩ""ÔøΩ]ÔøΩNlUÔøΩÔøΩWÔøΩ55ﬁãbEfÔøΩÔøΩÔøΩÔøΩ0BÁùµÔøΩzÔøΩ8DÔøΩ6ÔøΩwN2‘àw_ÔøΩE ÔøΩÔøΩTÔøΩÔøΩqÔøΩ»ª~ÔøΩÔøΩÔøΩÔøΩLÔøΩÔøΩlÔøΩÔøΩÔøΩÀ≥bvÔøΩBÔøΩ—ì@W YzÔøΩz ÔøΩ$i ™bÔøΩÔøΩÔøΩ·π•CÔøΩ—®ÔøΩÔøΩÔøΩÔøΩÔøΩc4ÔøΩÔøΩÔøΩeÔøΩwHm qzﬁöÔøΩ9ÔøΩ""ÔøΩÔøΩrÔøΩy.ÔøΩÔøΩÔøΩÔøΩÔøΩpÔøΩÔøΩÔøΩ 'ÔøΩ~ÔøΩÔøΩEÔøΩÔøΩoÔøΩ>ÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩÔøΩIÔøΩc.ÔøΩ«õÔøΩaÔøΩÔøΩÔøΩÔøΩÔøΩ}ÔøΩÔøΩQvbÔøΩÔøΩ&ÔøΩÔøΩ3hÔøΩyÔøΩÔøΩÔøΩ.	""ÔøΩÔøΩÔøΩ C6ÔøΩÔøΩMÔøΩÔøΩﬂû~nÓë£ÿ¨ÔøΩ^,YÔøΩÔøΩÔøΩ'ÔøΩ[ÔøΩÔøΩ3ÔøΩn}ÔøΩÔøΩybÔøΩKhÔøΩ7ÔøΩÔøΩXÔøΩgÔøΩÔøΩ@ÔøΩÔøΩÔøΩUÔøΩC< 9ÔøΩYÔøΩÔøΩ3ÔøΩÔøΩ#ÔøΩÔøΩRÔøΩ}@ÔøΩÔøΩoÔøΩ\√¨:ÔøΩeÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÃåÔøΩ4ÔøΩEI9<ÔøΩÔøΩ?t*ÔøΩÔøΩÔøΩÔøΩ5ÔøΩiÔøΩ*ÔøΩÔøΩ-ÔøΩ;ÔøΩÔøΩÔøΩY;ÔøΩÔøΩÔøΩ!ÔøΩ%heÔøΩ)ÔøΩ≈íÔøΩ9Õû?ÔøΩpÔøΩ*ÔøΩÔøΩÔøΩ4}ÔøΩÔøΩÔøΩÿåÔøΩQÔøΩŸ™9ÔøΩÔøΩi‘†ÔøΩbÔøΩÔøΩ ÔøΩEÔøΩÔøΩÔøΩ+9ÔøΩ$GÔøΩVDoBÔøΩ ÔøΩÔøΩÔøΩ}ÔøΩÔøΩzNÔøΩÔøΩÔøΩÔøΩzÔøΩ<ÔøΩÔøΩ/xÔøΩ€∂ÔøΩÔøΩaÔøΩÔøΩÔøΩÔøΩYÔøΩmBÔøΩxÔøΩÔøΩÔøΩÔøΩbrjÔøΩHA*XÔøΩÔøΩ.ÔøΩ#a“∑ÔøΩÔøΩÔøΩhsÔøΩÃû|ÔøΩÔøΩ6_ÔøΩCÔøΩ0,CkÔøΩ <„†üÔøΩS6ÔøΩGeu/ XÔøΩB}ERÔøΩGÔøΩ›∂ÔøΩÔøΩÔøΩTÔøΩÔøΩ'ÔøΩ}TÔøΩx""rÔøΩÔøΩÔøΩyÔøΩÔøΩcÍëΩÔøΩÔøΩÔøΩUÔøΩÔøΩ9ÔøΩÔøΩÔøΩdt]ÔøΩV<ÔøΩ#ÔøΩ) qÔøΩYÔøΩZÔøΩÔøΩ/ÔøΩÔøΩ/ yÔøΩBRÔøΩ mÔøΩÔøΩÔøΩÔøΩÔøΩlÔøΩÔøΩ.ÔøΩÔøΩPÔøΩÔøΩÔøΩÔøΩÔøΩ7ÔøΩMYÔøΩÔøΩÔøΩÔøΩÔøΩ^{ÔøΩÔøΩ(rÔøΩ8*BGWÔøΩÔøΩ\ÔøΩÔøΩÔøΩÔøΩMÔøΩÔøΩSÔøΩﬂÜ-	ÔøΩ!TÔøΩ?ÔøΩm,ÔøΩÔøΩ?ÔøΩÔøΩÔøΩKpAnkDÔøΩÔøΩ6ÔøΩÔøΩÔøΩrqÔøΩÔøΩÔøΩÔøΩÔøΩ1GSÔøΩÍ´¶N’æÔøΩ4;ÔøΩhQ\ÔøΩR1…íÔøΩ`rÔøΩSÔøΩ„ÑäÔøΩ.ÔøΩBG2ÔøΩ'wHÔøΩ\ÔøΩÔøΩÔøΩ%ÔøΩÔøΩÔøΩ√óuÔøΩÔøΩÔøΩÔøΩQÔøΩeÔøΩ(iÔøΩJÔøΩÔøΩÔøΩ0U›±LÔøΩÔøΩÔøΩ>ÔøΩhÔøΩ;ÔøΩÔøΩÔøΩÔøΩ*:ÔøΩbÔøΩR;Y>ÔøΩÔøΩÔøΩbÔøΩÔøΩÔøΩ»úÔøΩuÔøΩÔøΩÔøΩÔøΩ)YÔøΩÔøΩÔøΩÔøΩ0=\)ÔøΩ‰æ∫ÔøΩÔøΩMÔøΩÔøΩÔøΩ`ÔøΩÔøΩJ,ÔøΩ*ÔøΩÔøΩŸØsOÔøΩjAPÔøΩ—®ÔøΩÔøΩÔøΩÔøΩÔøΩ.ÔøΩÔøΩ^ÔøΩya;ÔøΩÔøΩÔøΩÔøΩxÔøΩÔøΩWvZÔøΩjÔøΩÔøΩ*ÔøΩÔøΩf]wr+ÔøΩtÔøΩWÔøΩ-ÔøΩpÔøΩ/ÔøΩÔøΩ""ÔøΩ$7ÔøΩ\3¬ÅEZÔøΩCÔøΩÔøΩrÔøΩÔøΩJÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ;ÔøΩ~ÔøΩ^H/ÔøΩÔøΩÔøΩÔøΩ ÔøΩ&ÔøΩÔøΩÔøΩÔøΩÔøΩFÔøΩÔøΩSBaÔøΩ|ÔøΩÔøΩhtÔøΩ~3ÔøΩ.ÔøΩ_ÔøΩÔøΩÔøΩ;GnaPÔøΩnÔøΩÔøΩZ4ÔøΩ9ÔøΩ~&?_ÔøΩMsÔøΩÔøΩÔøΩÔøΩ`ZÔøΩMÔøΩÔøΩ-HFS4ZÔøΩŸâVl∆°ÔøΩeÔøΩ ÔøΩRÔøΩ[8ÔøΩ9Fr#E	nDÔøΩÔøΩmeÔøΩÔøΩÔøΩ“ÇBk‘öÔøΩJ/ÔøΩÔøΩÔøΩÔøΩu8_ÔøΩZÔøΩÔøΩÔøΩHÔøΩ?ÔøΩRAsÔøΩÔøΩkÔøΩ[ÔøΩ6ÔøΩÔøΩ:'ÔøΩ$*!g 8@2ÔøΩkÔøΩI3y[ÔøΩ.ÔøΩXÔøΩQ;ÔøΩ""ÔøΩP1\PÔøΩvÔøΩ^] ÔøΩÔøΩÔøΩÔøΩÔøΩb'ÔøΩÔøΩÔøΩÔøΩÔøΩ…ΩjÔøΩÔøΩA#ÔøΩÔøΩÔøΩAÔøΩÔøΩFgÔøΩ4Ref$dÔøΩÔøΩ>ËÉ≤^ÔøΩÔøΩ[IÔøΩCÔøΩÔøΩÔøΩÔøΩÔøΩvÔøΩ68ÔøΩÔøΩÔèüÔøΩÔøΩoƒ¶ÔøΩ.ÔøΩ&HÔøΩg_ÔøΩÔøΩ=ÔøΩÔøΩ∆ñÔøΩ5ÔøΩ tÔøΩÔøΩÔøΩbÔøΩeÔøΩÔøΩO2)ÔøΩÔøΩÔøΩhaÔøΩ<ÔøΩÔøΩ`q+TcCZpiÔøΩÔøΩÔøΩ2ÔøΩÔøΩÔøΩ[ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ)#OEÔøΩ~GÔøΩÔøΩÔøΩÔøΩSQ*ÔøΩ~O\t>u-ÔøΩÔøΩRÔøΩlÔøΩ1ÔøΩIÔøΩ#ÔøΩÔøΩ“•v2ÔøΩÔøΩÔøΩÔøΩZÔøΩJÔøΩL2ÔøΩDbÔøΩÔøΩ—ó ÔøΩ9ÔøΩ.ÔøΩ~ÔøΩp%gÃñÔøΩ)ÔøΩ[rÔøΩ	ÔøΩH*ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ4ÔøΩÔøΩÔøΩo?ÔøΩÔøΩuaÔøΩ„ï¶ÔøΩ{U0RÔøΩÔøΩa)ÔøΩQO:ÔøΩÔøΩÔøΩÔøΩ8!ÔøΩ)&ÔøΩÔøΩ6ÔøΩ◊ø,ÔøΩv""¬ö:VÔøΩÔøΩ07ÔøΩÔøΩZiÔøΩ$ÔøΩÔøΩq ÔøΩ/ÔøΩÔøΩÔøΩÔøΩÔøΩ%ÔøΩÔøΩ+SÔøΩjÔøΩÔøΩ6‰†≤ÔøΩq!\aÔøΩÔøΩÔøΩ$ŒãÔøΩÔøΩ-ÔøΩÔøΩ>ÔøΩÿÆÔøΩ|ÔøΩ dLWrcÔøΩÔøΩÔøΩ}^ÔøΩhÔøΩ#ÔøΩÔøΩCUÔøΩÔøΩSÔøΩÔøΩÔøΩWÔøΩbÔøΩ22|{ÔøΩÔøΩ ÔøΩ&ÔøΩNÔøΩÔøΩ≈≠ÔøΩxÔøΩÔøΩk7+ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ2ÔøΩ”ø|ÔøΩUÔøΩ#ÔøΩz>ÔøΩ ÔøΩ5\,ÔøΩÔøΩW*ÔøΩÔøΩÿïÔøΩÔøΩ -FaÔøΩÔøΩ]ÔøΩXÔøΩxÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩÔøΩ'ÔøΩÔøΩ]ÔøΩNÃ∫ÔøΩBÔøΩÔøΩ«†ÔøΩ'‘àÔøΩÔøΩxGÔøΩ0ÔøΩtIMÔøΩÔøΩÔøΩ }ÔøΩÔøΩ/6a nŒπeU[b'ÔøΩ CÔøΩWzÔøΩ,ÔøΩÔøΩ’Æ4vÔøΩÔøΩ…°ÔøΩÔøΩ›≥ÔøΩIÔøΩÔøΩhÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩEÔøΩÔøΩjÔøΩÔøΩ-ÔøΩCnHÔøΩXÔøΩ/3ÔøΩÔøΩÔøΩZfÔøΩ5r=ÔøΩÔøΩÔøΩ{ÔøΩ<^lcÔøΩ ""ÔøΩÔøΩ7CÔøΩ&ÔøΩG[ÔøΩ^P%ÔøΩhÔøΩW9Œ£ÔøΩÔøΩNÔøΩÔøΩ] ÔøΩaIÔøΩrÔøΩÔøΩC+ÔøΩ^!ÔøΩÔøΩ^<ÔøΩÔøΩﬂØtÔøΩÔøΩÔøΩ`cÔøΩÔøΩÔøΩ+slÔøΩwÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩM<ÔøΩa[ÔøΩG~:A&^ÔøΩ%ÔøΩÔøΩ>ÔøΩFÔøΩÔøΩoÔøΩÔøΩÔøΩcUÔøΩÔøΩ+i)=~fRV∆äJ@ÔøΩÔøΩ‘πÔøΩ'FÔøΩÔøΩÔøΩÔøΩ3\TdÔøΩÔøΩ2ÔøΩÔøΩ_ÔøΩ6ÔøΩÔøΩUÔøΩÔøΩ#iÔøΩY 5?ÔøΩTÔøΩÔøΩJb{VÔøΩ'inÔøΩ0+$uÔøΩ{54ÔøΩ+ÔøΩlÔøΩÔøΩBÔøΩYoÔøΩÔøΩyJÔøΩÔøΩÔøΩÔøΩkÔøΩSÔøΩ9=–ãÔøΩ/ÔøΩ7<ÔøΩd-ÔøΩ-$ÔøΩcÔøΩÔøΩOÀ±ÔøΩÔøΩÔøΩÔøΩM‚¢∏oXÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩJRB?nÔøΩwÔøΩxÔøΩÔøΩÔøΩ}ÔøΩÔøΩdÔøΩHÔøΩÔøΩÔøΩyhÔøΩÔøΩÔøΩÔøΩH3ZÔøΩ{#SÔøΩ_ÔøΩÔøΩYÔøΩ{ÔøΩÔøΩ6L⁄ÜÔøΩÔøΩÔøΩvÔøΩvÔøΩFBÔøΩ7sÔøΩÔøΩsÔøΩ{4ÔøΩÔøΩÔøΩÔøΩÔøΩnKÔøΩm,ÔøΩÔøΩÔøΩ≈êÔøΩÔøΩÔøΩÔøΩ∆ÉSÔøΩÔøΩ/ÔøΩÔøΩÔøΩOÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩUdÔøΩÔøΩÔøΩY`ÔøΩÔøΩEÔøΩƒóÔøΩÔøΩÔøΩÔøΩ:ÔøΩy)	1ÔøΩ{jQÔøΩ;ÔøΩ;.ÔøΩiH~FÔøΩÔøΩÔøΩaÔøΩqÔøΩÔøΩQcÔøΩ.0ÔøΩEÔøΩÔøΩÔøΩXÔøΩÔøΩDKÔøΩnÔøΩsÔøΩÔøΩe+ÔøΩa1ÔøΩjÔøΩÔøΩ5]-ÔøΩ+ÔøΩÔøΩ dÔøΩÔøΩ5ÔøΩQ=ÔøΩÔøΩÔøΩ|ÔøΩÔøΩ$ÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩiÔøΩÔøΩÔøΩÔøΩAJ3ÔøΩÔøΩRÔøΩ0ÔøΩÔøΩuÔøΩzÔøΩr!xÔøΩOOzyÔøΩÔøΩÁ£ÖYÔøΩÔøΩ;SÔøΩvÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩƒÅÔøΩÔøΩÔøΩÔøΩbÔøΩ5.ÔøΩÔøΩQI}ÔøΩÔøΩzlÔøΩLeÔøΩU‘ãÔøΩÔøΩTÔøΩ–ÖJÔøΩÔøΩÔøΩmÔøΩ,Ã¶ÔøΩq_ÔøΩoﬂñ8<ÔøΩjÔøΩMÔøΩŒ±ÔøΩoBÔøΩÔøΩÔøΩUÔøΩÔøΩOÔøΩ?[ÔøΩ?ÔøΩÔøΩgÔøΩ6CF(Ob7IÔøΩÔøΩÔøΩ}ÔøΩFLzFdÔøΩ	ÔøΩtÔøΩÔøΩÔøΩÔøΩWLÔøΩÔøΩÔøΩ€ùÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩQD{/ÔøΩÔøΩ2ÔøΩaÔøΩÔøΩÔøΩHÔøΩÔøΩÔøΩ\vÔøΩdhÔøΩÔøΩÔøΩSÔøΩÔøΩ–øÔøΩÓáΩÔøΩFZÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩ!ŸØÔøΩ0\vÔøΩ	ÔøΩÔøΩX8MeÔøΩ}ÔøΩÔøΩ<ÔøΩ*i é3ÔøΩ-_dÔøΩ-aaÔøΩKÔøΩÔøΩeÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩu5CÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9ÔøΩÔøΩOGÔøΩÔøΩÔøΩÔøΩÔøΩXwœò1ÔøΩ6ÔøΩ|z*ÔøΩ;<ÔøΩ ÔøΩÔøΩÔøΩÔøΩ¬≠ÔøΩ}aÔøΩÔøΩÔøΩSÔøΩÔøΩÔøΩR1ÔøΩuÔøΩÏùªi^ÔøΩ\4VÔøΩÔøΩYdÔøΩÔøΩ8ÔøΩbHtJ9VÔøΩﬂ´ÔøΩ_ÔøΩÔøΩÔøΩÔøΩSÔøΩÔøΩs—¢ÔøΩXÔøΩ3ÔøΩLÔøΩOÔøΩ}ÔøΩ}ÔøΩÔøΩÔøΩÔøΩBÔøΩﬁÅÔøΩd.+ÔøΩhÔøΩÔøΩ:ÔøΩPÔøΩÔøΩXÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ8ÔøΩ%2ÔøΩiÔøΩ^ÔøΩ*aÔøΩR,ÔøΩ8ÔøΩÔøΩfÔøΩsVÔøΩÔøΩvÔøΩÔøΩ>{EÔøΩÔøΩ7C@ÔøΩÔøΩ!ÔøΩÔøΩÔøΩ/ÔøΩÔøΩÔøΩYLÔøΩÔøΩT√π:ÔøΩiÔøΩÔøΩ#ÔøΩÔøΩ:KÔøΩO@q8ÔøΩÔøΩTÔøΩÔøΩÔøΩKÔøΩoÔøΩÔøΩOÔøΩÔøΩyRÔøΩÔøΩpÔøΩÔøΩH{ÔøΩÔøΩÔøΩhC+ÔøΩqÔøΩ /+ÔøΩ7ÔøΩWcuÔøΩÔøΩÔøΩKÔøΩÔøΩÔøΩ[ÔøΩ\ÔøΩcÔøΩRMÔøΩl_zÔøΩÔøΩCÔøΩÔøΩÔøΩ7ÔøΩ.ÔøΩM*EOÔøΩQÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩLÔøΩi ÔøΩpxÔøΩÔøΩ6ÔøΩÔøΩkÔøΩÔøΩ-ÔøΩ;ÔøΩfÔøΩÔøΩÔøΩ6ÔøΩÔøΩ^ÔøΩ\ÔøΩŒòÔøΩ—¥ÔøΩÔøΩ‰∂ªÔøΩÔøΩÔøΩ^d}#}ÔøΩÔøΩLuÔøΩ-DÔøΩtÔøΩW€éaÔøΩ^7ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩ!ÔøΩÔøΩd?ÔøΩ'NÔøΩ3ÔøΩGh'q}wÔøΩÔøΩVÔøΩÔøΩuÔøΩ0ÔøΩWI2ÔøΩ·éØÔøΩ$PaÔøΩÔøΩÔøΩ&ÔøΩDÔøΩÔøΩÔøΩ_ÔøΩÔøΩO◊¶–óÔøΩÔøΩÔøΩÔøΩ{ÔøΩgÔøΩLx?ÔøΩÔøΩÔøΩÔøΩ<ËÅ°ÔøΩvÔøΩÔøΩÔøΩ=ÔøΩ`ÔøΩÔøΩÔøΩ8ÔøΩÔøΩm)W>P?MÔøΩÔøΩlÔøΩvp55ÔøΩcQÔøΩ$ÔøΩŸó(ÔøΩ4ÔøΩ ÔøΩ{mÔøΩÔøΩGÔøΩ‘àÔøΩÔøΩiLN?n¬≤ÔøΩ ÔøΩÔøΩ:O €≥}ÔøΩÔøΩÔøΩÔøΩYÔøΩ*ÔøΩ?ÔøΩÔøΩ%ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩs5‚ëã9ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩyÔøΩMQÔøΩÔøΩ`ÔøΩU?MÔøΩÓú±F\ÔøΩÔøΩn€öE(ÔøΩÔøΩsÔøΩ$ÔøΩÔøΩ0ÔøΩÔøΩÔøΩ<ÔøΩ«èrÔøΩÔøΩÔøΩRÔøΩÔøΩ bÔøΩyÔøΩ“®9OÔøΩÔøΩeÔøΩ6¬®ÔøΩÔøΩmb2iYAO~[ÕºÔøΩeLﬁ≠e-_ ÔøΩÔøΩÔøΩÔøΩVÔøΩ3ÔøΩTBÔøΩÔøΩÔøΩÔøΩÔøΩ:ÔøΩ5ÔøΩzÔøΩSÔøΩ	/ÔøΩ9ÔøΩPw+ÔøΩKÔøΩmÔøΩÔøΩ&ÔøΩ{`6bXoHLÔøΩvg„££MwQÔøΩ1iÔøΩcZ>ÔøΩÔøΩÔøΩRÔøΩÔøΩ¬ú7SÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩÔøΩIÔøΩÔøΩ\ÔøΩÔøΩÔøΩÔøΩÔøΩslU{@ÔøΩ7(&bÔøΩÔøΩ?ÔøΩÔøΩÔøΩ?ec ÔøΩ/5/ÔøΩÔøΩÔøΩÔøΩL<ÔøΩ;'ÔøΩÔøΩÔøΩÔøΩnÔøΩÔøΩÔøΩÔøΩtÔøΩ>›ΩV“∏ÔøΩ7ÔøΩyÔøΩ=&ÔøΩ1ÔøΩ@* ~ÔøΩÔøΩeÔøΩ,ÔøΩÔøΩÔøΩÔøΩymgÔøΩ,7ÔøΩs'RCÔøΩÔøΩXcÃü2cÔøΩ;.ÔøΩs,h ÔøΩÔøΩÔøΩ>ÔøΩ!ÔøΩÔøΩZX:ÔøΩÔøΩECswueDÏçãKÔøΩIÔøΩTÔøΩ;$ÔøΩ$ÔøΩÔøΩÔøΩÔøΩXRÔøΩÔøΩo‹ΩVÔøΩeÔøΩÔøΩÔøΩKÔøΩyÔøΩÔøΩÔøΩ>ÔøΩ+ÔøΩÔøΩÔøΩrÔøΩÔøΩÔøΩÔøΩ_ÔøΩ5ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ=ÔøΩ XÔøΩÔøΩÔøΩÔøΩ?PÔøΩPPÔøΩVÔøΩRÔøΩwÔøΩi	ÔøΩJ'ÔøΩpÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩZÔøΩÔøΩ 9ÔøΩ Ø&ÔøΩZÔøΩ\|>}aÔøΩ vJÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ[nÔøΩÔøΩrÔøΩÔøΩ3ﬁ¨ÔøΩÔøΩÔøΩÔøΩD7ÔøΩCÔøΩ0ÔøΩÔøΩ6iÔøΩu#!OÔøΩÔøΩQÔøΩBZKÔøΩƒçZÔøΩÔøΩÔøΩ1ÔøΩÔøΩYÔøΩÔøΩÔøΩU}ÔøΩCﬂ¢ÔøΩB|IÔøΩ9ÔøΩÔøΩw[ÔøΩ~ÔøΩNnÔøΩÔøΩÔøΩPÃ∂nÔøΩÔøΩÔøΩÔøΩÔøΩt ÔøΩÔøΩQ8IÔøΩÔøΩhÔøΩÔøΩ!ÔøΩ]3ÔøΩÔøΩEÔøΩÔøΩÔøΩ[^≈ãOÔøΩ5ÔøΩÔøΩÔøΩ\”§ÔøΩÔøΩc^^ÔøΩA)>ÔøΩÔøΩ÷∞ÔøΩÔøΩC,r6ÀêÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩGÔøΩ`;ÔøΩÔøΩÔøΩfÔøΩÔøΩFÔøΩ4%ÔøΩ]ÔøΩ6ÔøΩÔøΩÔøΩÔøΩÔøΩL(FBtBI(ÔøΩÔøΩ""ÔøΩmÔøΩÔøΩ`ÔøΩÔøΩÔøΩ|Ôä∂ÔøΩÔøΩ';ÔøΩÔøΩ#ÔøΩm~ÔøΩHBÔøΩ^}ÔøΩa/ÔøΩÔøΩyÔøΩ+F0ÔøΩÔøΩÔøΩÔøΩAbÔøΩ(ÔøΩuyÔøΩ4tÔøΩ""62ÔøΩfWÔøΩÔøΩIÔøΩÔøΩÔøΩÔøΩ`?ÔøΩzÔøΩgÔøΩk}ZÔøΩ]ÔøΩO	j.ÔøΩÔøΩÔøΩ_\I8ÔøΩ–ØÔøΩqÔøΩÔøΩrÔøΩ-GÔøΩ/ÔøΩ1L>ÔøΩÔøΩÔøΩ#ÔøΩÔøΩh""KÔøΩÔøΩk	ÔøΩÔøΩÔøΩrÔøΩÀ≤ÔøΩTÔøΩÔøΩqNÔøΩÔøΩg#ÔøΩPlÔøΩÔøΩ[DOÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩÔøΩR◊ÑÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩÔøΩoÔøΩÔøΩvÔøΩ…ôxÔøΩ3OaÔøΩŒâÔøΩb>ÔøΩÔøΩ]ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩuÔøΩL?ÔøΩÔøΩMÔøΩÔøΩÔøΩ	ÔøΩÔøΩ	pH!ÔøΩÔøΩÔøΩeÔøΩƒìÔøΩkÔøΩ?ÔøΩDDÔøΩÔøΩrÔøΩWe1hÔøΩ)yÔøΩœºÔøΩÔøΩÔøΩmÔøΩÔøΩKÔøΩ=ÔøΩÔøΩÔøΩ YÔøΩ  endstream endobj 48 0 obj << /Filter /FlateDecode /Length1 1980 /Length2 13942 /Length3 0 /Length 15164 >> stream xÔøΩÔøΩÔøΩP\iÔøΩ.ÔøΩÔøΩNÔøΩÔøΩÔøΩ%ÔøΩÔøΩKÔøΩ5ÔøΩÔøΩÔøΩÔøΩ-XÔøΩÔøΩÔøΩÔøΩ$ÔøΩÔøΩ`ÔøΩÔøΩÔøΩÔøΩÔøΩ|ÔøΩÔøΩÔøΩÓ≠ÆÔøΩÔøΩÔøΩÔøΩÔøΩgÔøΩÔøΩÔøΩ»î’òDÔøΩÔøΩÔøΩ@)ÔøΩÔøΩ3+@\AÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ éHEÔøΩrÔøΩÔøΩ%EÔøΩÔøΩ:9ÔøΩÔøΩÔøΩ|ÔøΩ“ã;M\ÔøΩd&.of `{ÔøΩÔøΩÔøΩ-ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ?ÔøΩ`'>ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩN K+ÔøΩÔøΩ,ÔøΩÔøΩÔøΩ5ÔøΩÔøΩÔøΩÔøΩ~`ÔøΩÔøΩ jtÔøΩÔøΩÔøΩL\ÔøΩÔøΩvoÔøΩLlj`3ÔøΩÔøΩÔøΩBÔøΩ XÔøΩÔøΩ8±∞∏ÔøΩÔøΩ3ÔøΩÔøΩ93ÔøΩÔøΩ,ÔøΩÔøΩÔøΩ +ÔøΩ*ÔøΩÔøΩÔøΩ4ÔøΩÔøΩ.@ÔøΩÔøΩÔøΩgcÃàT u+ÔøΩÔøΩ_b5ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ&ÔøΩÔøΩÔøΩÔøΩ\ÔøΩÕÅNÔøΩÔøΩÔøΩ 5yÔøΩÔøΩÔøΩÔøΩ/cÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩpÔøΩÔøΩÔøΩ#ÔøΩÔøΩOg33ÔøΩÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩ`ÔøΩÔøΩÔøΩÔøΩ]<\&ÔøΩÔøΩÔøΩÔøΩ:ÔøΩÔøΩÔøΩMÔøΩL@ÔøΩ&ÔøΩonÔøΩUÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÕú@.ÔøΩÔøΩÔøΩ ÔøΩ?:dÔøΩ#ÔøΩ€ê%ÔøΩÔøΩÔøΩÔøΩvv@{gÔøΩ?ÔøΩ 9ÔøΩﬁ¶ÔøΩÔøΩÔøΩÔøΩÔøΩÿÉÔøΩÔøΩÔøΩÔøΩzÔøΩ Ÿõ[ÔøΩ—ÇÔøΩÔøΩÔøΩÔøΩ=ÔøΩÔøΩ(#ÔøΩÔøΩ7ÔøΩ?2KÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ/; ÔøΩ zÔøΩYÔøΩÔøΩ\ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ[ÔøΩÔøΩÔøΩ`ÔøΩÔøΩ[@_ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ pqrÔøΩzÔøΩ[ÔøΩÔøΩÔøΩÔøΩ `2sÔøΩ-AÔøΩÔøΩÔøΩD-ÔøΩÔøΩo'ÔøΩÔøΩ Ë±æÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩ'ÔøΩ7nÔøΩÔøΩÔøΩm=ÔøΩ1ÔøΩÔøΩpYÔøΩ4UeuÔøΩlÔøΩoÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ`bÔøΩbÔøΩÔøΩrp>ÔøΩ=ÔøΩÔøΩweÔøΩÔøΩ`ÔøΩÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩÿ∑)ÔøΩOÔøΩnÔøΩ9}ÔøΩÔøΩ,ÔøΩc)ÔøΩÔøΩÔøΩÔøΩCp}V.VÔøΩÔøΩ/ÔøΩÔøΩgÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ?ÔøΩÔøΩ_ÔøΩÔøΩÔøΩrÔøΩÔøΩÔøΩSKÔøΩÔøΩÔøΩÔøΩÔøΩ5ÔøΩÔøΩzÔøΩGÔøΩÔøΩWWÔøΩ7ÔøΩ+ÔøΩÔøΩ6ÔøΩÔøΩÔøΩjÔøΩZWÔøΩ9ÔøΩÔøΩÔøΩke\LÔøΩv@ÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩÔøΩÔøΩ@@seÔøΩÔøΩÔøΩÔøΩ_TÔøΩKÔøΩÔøΩ«ÇŸÇÔøΩÔøΩ`gÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩﬁ∂ÔøΩÔøΩÔøΩÔøΩÔøΩp~ÔøΩÔøΩ*ÔøΩÔøΩÔøΩÔøΩwJI{3ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ 0qr2ÔøΩD|;ÔøΩ7ÔøΩÔøΩf{[CsÔøΩ«üÔøΩ0€É]ÔøΩ\ oÔøΩÔøΩ,ÔøΩNÔøΩÔøΩ'ÔøΩ ÔøΩÔøΩÔøΩÔøΩ/ÔøΩEÔøΩoÔøΩÔøΩ""ÔøΩ7ÔøΩaÔøΩÔøΩÔøΩÔøΩ8,ÔøΩÔøΩ . ÔøΩÔøΩﬂàÔøΩ-ÔøΩÔøΩ?ÔøΩÔøΩbÔøΩzÔøΩ`ÔøΩ7ÔøΩ|ÔøΩÔøΩvAÔøΩÔøΩcÔøΩÔøΩXÔøΩÔøΩÔøΩ ,ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ_&oÔøΩYÔøΩﬂäÔøΩÔøΩÔøΩÔøΩÔøΩ [ÔøΩÔøΩÔøΩ«óÔøΩn+OÔøΩÔøΩÔøΩÔøΩÔøΩ7ÔøΩ_ÔøΩÔøΩÔøΩÔøΩnÔøΩÔøΩÔøΩÔøΩ ÔøΩ[ÔøΩÔøΩ ÔøΩÔøΩÔøΩ,ÔøΩÔøΩÔøΩBÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩœ¨ÔøΩÔøΩ]ÔøΩ.@sS[[ÔøΩÔøΩÔøΩÔøΩ ÔøΩmÔøΩÔøΩÔøΩÔøΩhÔøΩ[ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ/ÔøΩ÷£ÔøΩÔøΩ[)ÔøΩÔøΩQÔøΩÔøΩÔøΩÔøΩÔøΩuÔøΩÔøΩÔøΩÔøΩ_ÔøΩmnÔøΩÔøΩo)ÔøΩÔøΩuBoÔøΩÔøΩÔøΩo#ÔøΩÔøΩÔøΩÔøΩ7W/ÔøΩÔøΩ_ÔøΩÔøΩÔøΩÔøΩfÔøΩNNoÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ =ÔøΩfÔøΩÔøΩ`3ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ:QBwÔøΩÔøΩIÔøΩYÔøΩ]ÔøΩ:&ÔøΩeÔøΩÔøΩÔøΩ(pÔøΩtÔøΩÔøΩAÔøΩNÔøΩÔøΩÔøΩ#ÔøΩhk€íÔøΩ7""+ÔøΩÔøΩÔøΩ«≠ÔøΩpÔøΩﬂíUÔøΩ}ÔøΩÔøΩUÔøΩwÔøΩÔøΩÔøΩÔøΩNÔøΩ6#1ÔøΩÔøΩÔøΩÔøΩ<;ÔøΩhÔøΩ@ÔøΩBvÔøΩRÔøΩ;ÔøΩÔøΩ(bﬁªÔøΩK{4TÔøΩÔøΩÔøΩ-ÔøΩÔøΩÔøΩrÀΩÔøΩÔøΩaÔøΩ’àÔøΩ,ÔøΩÔøΩ*0ÕôÔøΩ#ÔøΩua""ÔøΩÔøΩÔøΩ8ÔøΩ@ÔøΩÔøΩÔøΩÔøΩÔøΩ»õz%ÔøΩMd@ÔøΩ=ÔøΩÔøΩ(ÔøΩÔøΩÔøΩbÔøΩ{ÔøΩÔøΩZÔøΩRgwÔøΩ∆ßÔøΩÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ;HÔøΩÔøΩ]ÔøΩ./Y\ÔøΩh(!ÔøΩCfL_cBc>`œ™ÔøΩF€∑ÔøΩ}q_ÔøΩdÔøΩÔøΩOÔøΩÔøΩbÔøΩ$ÔøΩhÔøΩ2r""W¬Æm3ÔøΩÔøΩtÔøΩÔøΩa$>ÔøΩ[oÔøΩÔøΩÏ±∞N'ZÔøΩixÔøΩ KÔøΩÔøΩÔøΩÔøΩ>ÔøΩÔøΩÔøΩ◊çÔøΩQÔøΩW,ÔøΩ~6Q|ÔøΩÔøΩ!#ÔøΩcÔøΩÔøΩÔøΩ_ÔøΩ	ÔøΩYÔøΩÔøΩÔøΩÔøΩÔøΩM|l\ÔøΩhÔøΩÔøΩKlÔøΩÂ™ñÔøΩMÔøΩ÷≠“ìﬂöÔøΩÔøΩÔøΩpÔøΩÔøΩR‰¥ìÔøΩÔøΩ\IÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩlÔøΩc$ÔøΩtÔøΩa—¥ ÔøΩ {gÔøΩiÔøΩNÔøΩZ5ÔøΩNÔøΩKÔøΩÔøΩÔøΩIÔøΩœëNÔøΩjrÔøΩÔøΩÔøΩÔøΩ5<ÔøΩ-_=ÔøΩ ÔøΩt=ÔøΩÔøΩÔøΩ]#TÔøΩÔøΩpÔøΩÔøΩÔøΩ""ÔøΩ:pÔøΩÔøΩXÔøΩd#ÔøΩÔøΩÔøΩÔøΩÔøΩ'I]ÔøΩÔøΩaX""xÔøΩÔøΩÔøΩÔøΩﬁâxÔøΩÔøΩÔøΩ'>%ÔøΩka6t9-uÔøΩOÔøΩFÔøΩ8ÔøΩgÔøΩRÔøΩ4ÔøΩ:0ÔøΩ`%ÔøΩÔøΩÔøΩÔøΩYÔøΩRÔøΩÔøΩÔøΩÔøΩÔøΩ>@ÔøΩÔøΩÔøΩÔøΩÔøΩ^ÔøΩÔøΩÔøΩOÔøΩ ÔøΩEÔøΩyÔøΩ‹é…ôÔøΩÔøΩÔøΩZÔøΩÔøΩÔøΩLÔøΩ 35 ÔøΩÔøΩÔøΩQÔøΩk*{ÔøΩÔøΩÔøΩxÔøΩÔøΩ?&ÔøΩÔøΩÔøΩ+T_aÔøΩrÔøΩIgÔøΩ1ÔøΩÔøΩvoiƒóÔøΩI/qÔøΩ`ÔøΩÔøΩ{%ÔøΩÔøΩÔøΩÔøΩ<ÔøΩÔøΩÔøΩÔøΩUÔøΩÔøΩ›≥ÔøΩ_ÔøΩpÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩqÔøΩ""CID·±≤HX?kÔøΩÔøΩP+ÔøΩgE\&ÔøΩUÔøΩ<ÔøΩÔøΩÔøΩÔøΩSÔøΩqÔøΩÔøΩÔøΩÔøΩ-ÓØÖÔøΩÔøΩxÔøΩÔøΩ Ñh‹äÔøΩ1YÔøΩQÔøΩÔøΩÔøΩ◊í]ÔøΩÔøΩÔøΩ~iÔøΩ\“ÉfÔøΩ_0mÔøΩrÔøΩÔøΩÔøΩ;2∆µÔøΩuÔøΩÔøΩÔøΩ""&HÔøΩfWﬂ§`bÔøΩÔøΩÔøΩ)ÔøΩÔøΩfgJÔøΩ8ÔøΩ}ÔøΩÔøΩEEÔøΩÔ≥ºUDy(3ÔøΩg=ÔøΩFÔøΩ!ÔøΩÔøΩÔøΩW8]LÔøΩÔøΩ`<ÔøΩÔøΩ…∫ÔøΩÔøΩÔøΩ≈êƒªÔøΩ\ÔøΩQÔøΩÔøΩÔøΩÔøΩ$ÔøΩÔøΩÔøΩÔøΩiÔøΩÔøΩf^6ÔøΩ]ÔøΩÔøΩÔøΩÔøΩ?ÔøΩÔøΩ?-ÔøΩ ÔøΩÔøΩnlÔøΩÔøΩÔøΩ.5ÔøΩXÔøΩÔøΩÕÜZ ÔøΩ}ÔøΩOÔøΩÔøΩÔøΩÔøΩMfÔøΩÔøΩK]ÔøΩQÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ2ÔøΩÔøΩÔøΩ#,v ÔøΩJÔøΩ ÔøΩÔøΩd	ÔøΩ0_ÔøΩÔøΩ“∞ÔøΩÔøΩ5ÔøΩÔøΩj?W ÔøΩ*ÊõÅÔøΩgÔøΩ \ÔøΩÔøΩ""!ÔøΩFMÔøΩÔøΩÔøΩÔøΩ\√†VŸÆ”ïÔøΩkÔøΩJ5nÔøΩÔøΩ+ÔøΩa⁄ëÔøΩ(@NÔøΩJ_M∆¢ÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩYÔøΩiÔøΩ2^»âÔøΩx‡™´ÔøΩ,ÔøΩÔøΩ*ÔøΩÔøΩrzÔøΩ^du_H8jÕø{lvm ÔøΩ]kÔøΩÔøΩﬂ≠AxÔøΩB3]ÔøΩ5iÔøΩgÔøΩÔøΩTx^6ÔøΩ^ÔøΩwÔøΩÔøΩÔøΩ*_/ÔøΩÔøΩtŒ£ÔøΩ-ÔøΩ÷ØÔøΩ/<ÔøΩÔøΩÔøΩ%ÔøΩÔøΩÔøΩxÔøΩÔøΩÔøΩ÷ûÔøΩc7ÔøΩÔøΩÔøΩÔøΩÔøΩ.ÔøΩ0ÔøΩÔøΩp[wÔøΩKÔøΩvÔøΩÔøΩ{_ÔøΩÔøΩzd hÔøΩÔøΩÔøΩ…∑1ÔøΩ#ÔøΩ ÔøΩÔøΩaKrÔøΩÔøΩÔøΩÔøΩRÔøΩÔøΩ\ÔøΩ2ÔøΩsÔøΩ<ÔøΩÔøΩÔøΩ‹µ\ÔøΩÈØ•ÔøΩ8YfHÔøΩÔøΩXÔøΩ_ÔøΩÔøΩÔøΩ+v5ÔøΩdF+eÔøΩ3w\ÔøΩz/ÔøΩÔøΩÔøΩÔøΩÔøΩ)ÔøΩÔøΩ|ÔøΩ,ÔøΩ "" ÔøΩOÔøΩÔøΩrÔøΩa0ÔøΩ- ó7ÔøΩ2>ÔøΩÃíÔøΩ!<ÔøΩÔøΩ ¶Î©†]ÔøΩGÔøΩÔøΩR@ÔøΩÔøΩ6ÔøΩ&nÔøΩÔøΩjÔøΩ«≥ÔøΩÔøΩÔøΩÔøΩÔøΩ*ÔøΩÔøΩÔøΩ""Êπ°ﬂøÔøΩÔøΩÔøΩÔøΩd~ÔøΩq\ÔøΩÔøΩ40ÔøΩÔøΩ⁄°ÔøΩCÔøΩÔøΩÔøΩHEÔøΩÕΩD.CÔøΩÔøΩ*ÔøΩaÔøΩ4SjÔøΩÔøΩ{ÔøΩ{ÔøΩÔøΩshÔøΩÔøΩÔøΩnÔøΩÔøΩÔøΩÔøΩÔøΩ]ÔøΩÔøΩg.ÔøΩGC√†‹¨ÔøΩ ÔøΩXÔøΩ/}aÔøΩq1ÔøΩr/VFÔøΩuZskÔøΩ{ÔøΩkÔøΩZGÔøΩL»ØÔøΩyÔøΩÔøΩ6:s>ÔøΩWÔøΩÔøΩÔøΩ2nOÔøΩÔøΩTÔøΩnxeÔøΩÔøΩÔøΩujÔøΩZÔøΩ6ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ.ÔøΩÔøΩÔøΩÔøΩÔøΩRÔøΩÔøΩ/ÔøΩ""ogs# °NOÔøΩÔøΩÔøΩÔøΩIÔøΩ*++ÔøΩ6ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ	ÔøΩncÔøΩya]ÔøΩÿé8ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩhÔøΩÔøΩjÔøΩÔøΩ ÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ#I4XnÔøΩÔøΩ{ÔøΩpÔøΩ6ÔøΩkÔøΩ?ÔøΩÔøΩ_ÔøΩ[(2ÔøΩÔøΩÔøΩ2ÔøΩ7&ÔøΩ+ÔøΩZÔøΩÔøΩEÔøΩtÔøΩ9rUÔøΩC{ÔøΩÔøΩ.ÔøΩEHFHHCEuUÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩjÔøΩÔøΩAÔøΩRÔøΩ	ÔøΩÔøΩ ÔøΩc‚Ω¢ÔøΩÔøΩ2CÔøΩPÔøΩsÔøΩtÔøΩDZÔøΩÔøΩW>ÔøΩÔøΩÔøΩ[8ÔøΩcÔøΩÔøΩ1ÔøΩÔøΩuÔøΩÔøΩ%?ÔøΩk6$ÔøΩÔøΩ&ÔøΩOÔøΩEÔøΩkÔøΩXjÔøΩLx0ÔøΩÔøΩÔøΩﬁåMÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩI7KWÔøΩÔøΩÔøΩBHÔøΩÔøΩt JÔøΩiO…µÔøΩÔøΩAÔøΩTÔøΩÔøΩ)e:CWÔøΩÔøΩÔøΩÔøΩÔøΩÚ∏Æ∞QÔøΩÔøΩcO+m7QÔøΩÔøΩfK|\A#ÔøΩÔøΩÔøΩÔøΩi{ﬂèÔøΩÔøΩ0ÔøΩÔøΩÔøΩÔøΩviÔøΩDG3|ÔøΩÔøΩÂ¨Ñk@|ÔøΩÔøΩÔøΩIÔøΩeÔøΩ%ÔøΩ$ÔøΩ\ÔøΩÔøΩÔøΩ]ÔøΩÔøΩGÔøΩœßÔøΩ]ÔøΩRzÔøΩÔøΩ‘èÔøΩÔøΩÔøΩÔøΩ(LÔøΩÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩÔøΩ)ÔøΩÔøΩÔºéwQlBLmŒâ‹Ñ#dÔøΩ%ÔøΩX7ÔøΩÔøΩ,ÔøΩÔøΩ7ÔøΩ◊ª$;ÔøΩ',ÔøΩIÔøΩ3tÔøΩÔøΩÔøΩÔøΩÔøΩ2ÔøΩÔøΩFK_i(vÔøΩÔøΩÔøΩFvxÔøΩ7-_ÔøΩÔøΩÔøΩÔøΩ6ÔøΩ}ÔøΩÔøΩÔøΩEÔøΩÔøΩÔøΩÔøΩ|ÔøΩ∆©ÔøΩ!o$ÔøΩ/wÔøΩ·ïºW√£∆òÔøΩÔøΩÔøΩÔøΩÔøΩ8 ÔøΩ8ÔøΩÔøΩÔøΩÔøΩÔøΩN7""xÔøΩEÔøΩpÛö•ò&OÔøΩj÷àÔøΩÔøΩKÔøΩG 7/ÔøΩÔøΩÔøΩTÔøΩÔøΩÔøΩ~ÔøΩ-ÔøΩsÔøΩMqh?yÔøΩ6ÔøΩÔøΩÔøΩ3ÕΩwÔøΩ)7 g$JÔøΩÔøΩÔøΩuÔøΩ◊ëÔøΩÔøΩÔøΩ ÔøΩ‘ÅÔøΩsTÔøΩÔøΩ~ÔøΩÃóÔøΩCÔøΩ/ErÔøΩÔøΩÔøΩÔøΩÔøΩ3rrÔøΩÔøΩ ÔøΩNwNÔøΩÔøΩÔøΩÔøΩ4ÔøΩÔøΩ?rÔøΩjÔøΩn8ÔøΩÔøΩÔøΩ:`@ÔøΩÔøΩÔøΩ¬∏ÔøΩÔøΩVÔøΩÔøΩ(ÔøΩLÔøΩÔøΩHUÔøΩk&ÔøΩÔøΩÔøΩBÔøΩN+aÔøΩÔøΩÔøΩ+ÔøΩ&YÔøΩÔøΩ(XÔøΩXÔøΩ›åÔøΩÔøΩC?5ÔøΩÔøΩÔøΩÔøΩÔøΩ⁄ØDÔøΩ_ÔøΩÔøΩNÔøΩ}dv<ÔøΩKÔøΩ[2	Ep^EÔøΩb3YÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩqÔøΩÔøΩÔøΩ(ÔøΩ—ÇÔøΩrÔøΩsÔøΩÔøΩÔøΩtbÔøΩ] ÔøΩ;3YÔøΩcÔøΩÔøΩGÔøΩÔøΩ/ÔøΩKZÔøΩÔøΩ	$ÔøΩHUÔøΩq›°1ÔøΩÔøΩÔøΩqÔøΩKÔøΩlNÔøΩÔøΩÔøΩ2ÔøΩ«ïÔøΩÔøΩSOÔøΩÔøΩ;ÔøΩÔøΩ#ÔøΩ#ÔøΩÔøΩvÔøΩÔøΩÔøΩÔøΩOPÔøΩÔøΩÊåú)€ùÔøΩÔøΩÔøΩÔøΩÔøΩjÔøΩ$ÔøΩJ~UÔøΩÔøΩÔøΩÔøΩ“ö~TÔøΩ==*∆êÔøΩÔøΩÔøΩÔøΩewQÔøΩÔøΩ%ÔøΩÔøΩÔøΩqÔøΩ#ÔøΩlÔøΩhÔøΩÔøΩÔøΩÔøΩ/zÔøΩÔøΩ—æÔøΩÔøΩÔøΩ0TÔøΩÔøΩY<ÔøΩÔøΩÔøΩ^ÔøΩTÔøΩ':ÔøΩÔøΩÔøΩvgÔøΩÔøΩÔøΩÔøΩ@ÔøΩ)ÔøΩÔøΩÔøΩ5R*ÔøΩ-ÔøΩTÔøΩÔøΩ=ÔøΩÔøΩÔøΩ¬ØÔøΩÔøΩ@sÔøΩ^ÔøΩÔøΩTÔøΩÔøΩGxS@+ÔøΩÔøΩ;ÔøΩÔøΩUÔøΩÔøΩÔøΩÔøΩ~ÔøΩ=4ÔøΩ0ÔøΩÔøΩÔøΩx hWvxED,K^ÔøΩÔøΩÔøΩÔøΩÔøΩ7m—∑,ÔøΩ9ÔøΩ	ÔøΩÔøΩÔøΩ:$ÔøΩyÂ§ÆÔøΩÔøΩk1WÔøΩÔøΩÔøΩPa3rÔøΩhÔøΩÔøΩ_IT0ÔøΩ|ÔøΩÔøΩÃ∫ÔøΩ[ÔøΩoÔøΩo|kÔøΩÔøΩ8ÔøΩÔøΩ-$ÔøΩÔøΩÔøΩÔøΩBuÔøΩÔøΩÔøΩTÔøΩVoCÔøΩ+Z[ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩmÔøΩÔøΩZÔøΩÔøΩÔøΩÔøΩÔøΩ>ÔøΩÔøΩ_ÔøΩÔøΩÔøΩRuÔøΩO7ÔøΩ*ÔøΩ⁄∏ÔøΩ\ÔøΩiÔøΩÔøΩÔøΩHÔøΩ`UÔøΩ}ÔøΩÔøΩÔøΩ01ÔøΩuÔøΩÔøΩŸúÔøΩÔøΩ!Ìì†HÔøΩUrÔøΩÔøΩ#—óÔøΩÔøΩ&;ÔøΩÔøΩYRÔøΩÔøΩ⁄ÆÔøΩÔøΩÔøΩÔøΩ`GÔøΩpÔøΩOqÔøΩYÔøΩÔøΩvfÔøΩÔøΩ}o7/ÔøΩÔøΩSÔøΩÍ©πÔøΩ3ÔøΩ^ÔøΩMÔøΩIÔøΩÔøΩCÔøΩg4dR]iËÖêÔøΩÔøΩ9ÔøΩD	ÔøΩÔøΩ ÔøΩ&ÔøΩxhÔøΩicÔøΩ)QÔøΩGyÔøΩiÔøΩgÔøΩÔøΩÔøΩ\ÔøΩÔøΩUfÔøΩÔøΩ8vÔøΩ30ctÔøΩÔøΩ:WÔøΩÔøΩEÔøΩÔøΩ[ÔøΩÔøΩÔøΩZVÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩCÔøΩ«òÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩSbÔøΩÔøΩe6_ÔøΩÔøΩ:ÔøΩMO!ŸπÔøΩ.ÔøΩ}|ÔøΩÔøΩÔøΩpÔøΩjbÔøΩËè≤dÔøΩÔøΩJÔøΩ æÔøΩxÔøΩÔøΩH4PÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ^'ÔøΩ#/Q+=ÔøΩFO'ÔøΩÔøΩÔøΩE'>ÔøΩ òÔøΩÔøΩ~sÔøΩ4ÔøΩÔøΩ)ÔøΩ1ÔøΩMÔøΩÔøΩÔøΩÔøΩkÔøΩ**Kg ÔøΩÔøΩ ÔøΩÔøΩC/cÔøΩVÔøΩ'nÔøΩÔøΩB&”ÅQÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ]wÔøΩ)j7FÔøΩÔøΩ	ÔøΩ,ÔøΩ}e>A-ÔøΩxÔøΩ^,&ÔøΩEÔøΩÔøΩBjÔøΩ65ÔøΩÔøΩÔøΩÔøΩ^;ÔøΩ)]ÔøΩ8	FT`sÔøΩHÔøΩÔøΩf>LÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ-ÔøΩÔøΩ2LÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩsÔøΩ0ÔøΩ{ÔøΩqÔøΩ\ÔøΩÓÆ´ÔøΩÔøΩ|ÔøΩÔøΩÔøΩjÔøΩkÔøΩ!ÀØ)e-+ÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩsÔøΩ5ÔøΩÔøΩOmÔøΩxÔøΩ[q:ÔøΩÔøΩ: ÔøΩÔøΩuÔøΩ]qÔøΩ;ÔøΩÔøΩÔøΩ~ÔøΩoÔøΩÔøΩwÔøΩCÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩz{ÔøΩÔøΩÔøΩ&ÔøΩÔøΩMmÔøΩyÔøΩaKÔøΩÔøΩÔøΩIÔøΩÔøΩ1ÔøΩÔøΩÔøΩFÔøΩibÔøΩÔøΩ=S}ÔøΩÔøΩ	ÔøΩÔøΩÔøΩi;{∆ÄÔøΩÔøΩ `ÔøΩX9ÔøΩkHÔøΩNÔøΩÔøΩ$HÔøΩUÔøΩÔøΩÔøΩKÔøΩnÔøΩtÔøΩxÔøΩHDÔøΩzÔøΩ_NÔøΩÔøΩÔøΩ√∏=>ÔøΩR^ÔøΩJÔøΩÔøΩ–ºiGÔøΩzÔøΩÔøΩÔøΩ:FhÔøΩÔøΩ2ÔøΩBÔøΩ@ÔøΩ_qÔøΩ""ÔøΩÔøΩÔøΩÔøΩÔøΩKÔøΩ)ÔøΩ>DÔøΩÔøΩÔøΩÔøΩ>VÔøΩNÃ∂aÔøΩ⁄•& 6ÔøΩ_?ÔøΩWÔøΩÔøΩÔøΩ@ÔøΩ2ÔøΩ3	ÔøΩ\ÔøΩ	ÔøΩÔøΩÔøΩqÔøΩAÔøΩÔøΩÔøΩ ÔøΩ«ØÔøΩ∆∏1-·≤ßÔøΩA,{ÔøΩ|eÔøΩ$ÔøΩÔøΩ,ÔøΩ…õ0pÔøΩÔøΩgVfÔøΩÔøΩÔøΩ?ÔøΩ)ÔøΩ`ÔøΩ901ÔøΩ)ÔøΩÔøΩÔøΩJÔøΩÔøΩÔøΩxÔøΩKÌû≤OÔøΩÔøΩÔøΩpÔøΩÔøΩOhÃ™ ÔøΩkÔøΩ,ÔøΩ6r'ÔøΩÔøΩÔøΩF[ÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩMryÔøΩÔøΩ!ÔøΩ9ÔøΩÔøΩÔøΩ!MÔøΩÔøΩ0*vÔøΩFzÔøΩÔøΩGÔøΩ-ÔøΩÔøΩÔøΩ à |NP.oÔøΩ{xÔøΩlÔøΩJÔøΩnVHEÕ≥#ÔøΩÔøΩzNÔøΩÔøΩ6ÔøΩÔøΩÔøΩ3#ÔøΩÔøΩ`ÔøΩq7ÔøΩÔøΩŸ∫0ÔøΩZÔøΩMÔøΩ›µeÔøΩ=ÔøΩ*)ÔøΩ|#ÔøΩ~ÔøΩ=SÔøΩ AÔøΩ0ÔøΩ„òòÔøΩSÔøΩkO`ÔøΩ51[xeÔøΩhÔøΩxÔøΩÔøΩÔøΩmÔøΩ|ÒãåõjÔøΩ,ÔøΩÔøΩug""ÔøΩÔøΩn(ÔøΩÔøΩÔøΩÔøΩp ÔøΩP9ÔøΩÔøΩ$kQÔøΩ∆¶ÔøΩ(BÔøΩÔøΩjÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ>cÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩvÔøΩÔøΩÔøΩvkÔøΩÔøΩÔøΩ_ÔøΩoÔøΩE miÔøΩÔøΩgÔøΩÔøΩÔøΩ#ÔøΩ/ÔøΩq*ÔøΩ\ÔøΩIÔøΩUÔøΩMLÔøΩÔøΩI%ÔøΩ⁄ÉÔøΩÔøΩÔøΩÔøΩ#ÔøΩTMÔøΩÔøΩÔøΩt%ÔøΩ ÔøΩ4~ÔøΩ6ÔøΩtÔøΩNU|ÔøΩ¬ÉÔøΩFÔøΩÔøΩÔøΩ&ÔøΩÔøΩSCvÔøΩ&V_= ÔøΩhÔøΩkÔøΩU~ÔøΩÔøΩ}ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ-ÔøΩÔøΩÔøΩWÔøΩÔøΩ:1ÔøΩ?nÔøΩŒúÔøΩD+ÔøΩ/p:ÔøΩÔøΩÔøΩ*KÔøΩ:ÔøΩ|ÔøΩÔøΩECÔøΩÔøΩ5iÔøΩÔøΩ€ôÔøΩÔøΩ(ÔøΩÔøΩÔøΩÔøΩdÔøΩÔøΩUÔøΩÔøΩMYÔøΩrV≈®ÔøΩMÔøΩÔøΩÔøΩK?,XÔøΩ>PÔøΩÔøΩÔøΩ…ôÔøΩ:ÔøΩÔøΩO"" ÔøΩ+ÔøΩÔøΩÔøΩM<>ÔøΩÔøΩIÔøΩÔøΩ=ÔøΩ>ÔøΩdÔøΩÔøΩÔøΩTHVÔøΩLÔøΩËºé>ÔøΩ“ê#fÔøΩÔøΩÔøΩÔøΩHÔøΩÔøΩÔøΩÔøΩ}÷ï3ÔøΩÔøΩWÔøΩ(ÔøΩ&ÔøΩÔøΩÔøΩÔøΩwÔøΩÈ∞µxÔøΩirc#9|DÔøΩÔøΩÔøΩ{ÔøΩ„ÖÖ6„µûÔøΩÔøΩ_ÔøΩr∆©ÔøΩÔøΩ_ÔøΩyÔøΩoGcÃöÔøΩÔøΩ:ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩVÔøΩ/P1ÔøΩÔøΩ3ÔøΩ8ÔøΩÔøΩÔøΩÔøΩR7Ia ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÈ≠´BÔøΩÔøΩÔøΩDf,WÔøΩ(!o 6ÔøΩr;ÔøΩÔøΩ&56)ÔøΩÔøΩÔøΩmÔøΩ-ÔøΩ&*ÔøΩÔøΩÔøΩ√åFDq-'D""ÔøΩÔøΩ2ÔøΩGÔøΩ^ÔøΩ$1,ÔøΩ}+E?UƒïÔøΩÔøΩÔøΩÔøΩuÔøΩÔøΩAKÔøΩ~IÔøΩ15ÔøΩk€π<q8~vÔøΩ5|r8sÔøΩjÔøΩÔøΩÔøΩÔøΩÔøΩk9 ÔøΩÔøΩ4ÔøΩEÔøΩÔøΩÔøΩ;`ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÿòÔøΩ6:ÔøΩO2ÔøΩÔøΩ'ÔøΩÔøΩÔøΩ&ÔøΩÔøΩÔøΩ1ÔøΩÔøΩ]ÔøΩE ‘£JÔøΩÔøΩÔøΩXPÔøΩÔøΩÔøΩKÔøΩÔøΩOÔøΩÔøΩÔøΩÔøΩ: 8ÔøΩ#ÔøΩ.]XÔøΩÔøΩPÔøΩNÔøΩÔøΩ0?\E:ZÔøΩÔøΩ&NÔøΩ,ÔøΩoÔøΩÔøΩsÔøΩ' FÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ`ÔøΩÔøΩÔøΩNÔøΩÔøΩ?ÔøΩ]@ÔøΩ-;ÔøΩÔøΩt<ÔøΩFk}PÔøΩNÕ¥◊¨X—∫#GÔøΩ4_XJÔøΩÔøΩ3&ÔøΩIZ4ÔøΩ/ÔøΩZÔøΩÔøΩJÔøΩ^bÔøΩ0#ÔøΩÔøΩ[ÔøΩÔøΩKÔøΩ.NÔøΩÔøΩÔøΩ.K%nÔøΩÔøΩdÔøΩeÔøΩÔøΩ@XÔøΩÔøΩÔøΩÔøΩÔøΩ}‘ΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩi&ÔøΩÔøΩ{ÔøΩÔøΩÔøΩÔøΩ9ÔøΩÔøΩA&ÔøΩ,ÔøΩÔøΩÔøΩÔøΩ*ÔøΩ?ÔøΩmÔøΩ""	ÔøΩ(ÔøΩÔøΩÔøΩ_ÔøΩ;ÔøΩ9Œî}ÔøΩoÔøΩÔøΩxWÔøΩtXjÔøΩ9FÔøΩÔøΩsÔøΩÔøΩ_#}ÔøΩÔøΩÔøΩÔøΩÔøΩHZÔøΩÔøΩ8ÔøΩo[c/ÔøΩÔøΩAÔøΩB,ÔøΩuMR,ÔøΩÔøΩzÔøΩl=ÔøΩÔøΩÔøΩsYWtÔøΩÔøΩ(ÔøΩ{.≈≥ÔøΩÔøΩÔøΩ)X'_ÔøΩÔøΩe—átÔøΩ hpÔøΩÔøΩÔøΩ%WÔøΩEÔøΩÔøΩ€àÔøΩEÔøΩrÔøΩÔøΩiﬂüEÔøΩÔøΩ-+%ÔøΩ ÔøΩÔøΩÔøΩ1SÔøΩÔøΩÔøΩg^ÔøΩÔøΩÔøΩUÔøΩnÔøΩPZ9>w[ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩZ—áÔøΩÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩWd&ÔøΩÃ§1ÔøΩTÔøΩnÔøΩ)ÔøΩÔøΩSÔøΩsÔøΩÔøΩÔøΩ""WXRaÔøΩ ÔøΩlÔøΩ7 ÔøΩDÔøΩÔøΩ;7ÔøΩÔøΩ^“èÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩAÔøΩ`+ÔøΩlDAÔøΩÔøΩSÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÓòåZÔøΩr\ÔøΩÔøΩ⁄†ÔøΩ]ÔøΩ÷¶DrÔøΩÔøΩÔøΩ?ÔøΩÔøΩ?gK◊ÜÔøΩÔøΩÔøΩÔøΩnoz=C:nÔøΩ&sÔøΩ@`UÔøΩÔøΩ2lÔøΩÔøΩÔøΩZPÔøΩÔøΩjÔøΩÔøΩÔøΩÔøΩÔøΩiÔøΩÔøΩd]'@ÔøΩ>ÔøΩÔøΩ7BÔøΩ<ÔøΩVÔøΩÔøΩ}ÔøΩÔøΩÔøΩÔøΩÔøΩEÔøΩ ÔøΩÔøΩ`^sÔøΩÔøΩ>JÔøΩ ÔøΩ5Œè	ÔøΩÔøΩzÔøΩ;ÔøΩÔøΩÔøΩÔøΩmÔøΩq5uOÔøΩÔøΩ	ÔøΩÔøΩ`ÔøΩNÔøΩÔøΩÔøΩye!ÔøΩÔøΩÔøΩ@>ÔøΩo{C]ÔøΩNMLÔøΩÔøΩ,ÔøΩÔøΩc}ÔøΩyÔøΩAÀøÔøΩ◊ÖÔøΩÔøΩÔøΩaÔøΩ0ÔøΩÔøΩG8	ŒÇXÔøΩ{ÔøΩ4ÔøΩnrDÔøΩÔøΩ|ÔøΩ+ÔøΩÔøΩÔøΩeNÔøΩfÔøΩ XvÔøΩ/2ÔøΩÔøΩeÔøΩÔøΩÔøΩyzÔøΩXÔøΩ<ÔøΩ ÔøΩÔøΩLÔøΩ ÔøΩÔøΩzÔøΩ3ÔøΩÔøΩ}nÔøΩÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩF>gÔøΩÔøΩÔøΩ%aÔøΩbYÔøΩOÔøΩ⁄†ÔøΩ]cLGÔøΩW>ÔøΩsÔøΩDÔøΩ&«ÑÔøΩqÔøΩcÔøΩ4ÔøΩÔøΩTÔøΩÔøΩ~ÔøΩÔøΩÀõjÔøΩÔøΩÕ§ÔøΩ7kÔøΩÔøΩ|?ÔøΩÔøΩCÔøΩ9ÔøΩÔøΩÔøΩÔøΩ:ÔøΩÔøΩÔøΩa<ÔøΩsÔøΩ} ÔøΩ|ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩR\GÔøΩÔøΩ(ÔøΩﬁ≥SÔøΩÔøΩiÔøΩ¬∂ÔøΩÔøΩÔøΩXÔøΩ@Y”ÜÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩuÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩSM	-ÔøΩqvÔøΩ2ÔøΩ|ÔøΩÔøΩÔøΩ^>ZÔøΩ,ÔøΩkÔøΩDyÔøΩŸ£ÔøΩdÔøΩDÔøΩ+ÔøΩÔøΩ0EoÔøΩÔøΩÔøΩYÔøΩÔøΩ2s]’ÇÔøΩÔøΩÔøΩ≈üÔøΩ@&jÔøΩÔøΩ~FÔøΩÔøΩŸ§{ÔøΩÔøΩÔøΩKIRQ;ÔøΩ`ÔøΩX `G ÕøÔøΩ5ÔøΩÔøΩÔøΩÔøΩÔøΩjr	0ÔøΩÔøΩ_=ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩKÔøΩ7ÔøΩ)SÔøΩdÔøΩÔøΩÔøΩ<ÔøΩÔøΩ‘æÔøΩÔøΩŸïÔøΩÔøΩ»úÔøΩÔøΩÔøΩÔøΩn9Q ÔøΩ ÔøΩ&Z~bH@LÔøΩ"" ÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩÔøΩ6ÔøΩÔøΩ<ÔøΩV ÔøΩÔøΩ:ÔøΩÔøΩMÔøΩÔøΩgÔøΩÔøΩ]ÔøΩÔøΩÔøΩÈÑ∞T]ÔøΩ#ÔøΩœækÔøΩdÔøΩhZÔøΩÔøΩÔøΩÔøΩ)⁄¶ÔøΩ|ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩX_O''~wÔøΩbx5v-ÔøΩÔøΩwÔøΩÔøΩÔøΩFÔøΩtÔøΩ ÔøΩT`ÔøΩÔøΩÔøΩ;ÔøΩÔøΩ&aÔøΩ{ÔøΩ%ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩDÔøΩg&A?‹ΩÔøΩÔøΩuKu@ÔøΩHÔøΩÔøΩÔøΩÔøΩS^ÔøΩF:ÔøΩmÔøΩ÷≤ÔøΩÔøΩuÔøΩÔøΩ'ÔøΩ5KKWÔøΩcÔøΩÔøΩlÔøΩU!ÔøΩbÔøΩÔøΩ]veÔøΩ–§ujÔøΩ<ÔøΩÔøΩH-""ÔøΩÔøΩÔøΩ2ÔøΩÔøΩÔøΩÔøΩpÔøΩO~ÔøΩ ÔøΩ;‹≤yÔøΩHÔøΩÔøΩgÔøΩ)|ÔøΩÔøΩdÔøΩEÔøΩÔøΩ‹ìÔøΩdÔøΩÔøΩÔøΩÔøΩrÔøΩG9ÔøΩzÔøΩËáõlÔøΩÔøΩ""ÔøΩ ÔøΩwÔøΩz@0pÔøΩÔøΩ. 2'YÔøΩS–ºÔøΩÔøΩkMÔøΩ+ÔøΩ◊ìWÔøΩÔøΩÔøΩ [[ÔøΩ[ÔøΩYDÔøΩÔøΩÔøΩÔøΩnM{=i^2QRÔøΩ)ÔøΩ|T:ÔøΩZÔøΩÔøΩ=ÔøΩ:ÔøΩÔøΩ*ÔøΩÔøΩÔøΩÔøΩpÔøΩAE!QÔøΩ`L]ÔøΩCÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩkG+$ÔøΩÔøΩÔøΩtsÔøΩE’µÔøΩÔøΩ,vÔøΩÔøΩÔøΩmÔøΩÔøΩÔøΩÔøΩÔøΩLÔøΩ.JÔøΩÔøΩÔøΩÔøΩkFÔøΩÔøΩÔøΩÔøΩ3ÔøΩÔøΩÔøΩÔøΩ,CÔøΩÔøΩkÔøΩtÔøΩ	ÔøΩujÔøΩBÔøΩÔøΩlÔøΩ#ÔøΩÔøΩÔøΩÀ±V8q4SÔøΩ<ÔøΩILÔøΩ{:ÔøΩÔøΩ_cYÔøΩÔøΩÔøΩJdÔøΩÔøΩŸÑÔøΩÔøΩÔøΩGAÔøΩÔøΩÔøΩNÔøΩÔøΩ.gEÔøΩGÔøΩLÔøΩÔøΩkÔøΩVE	ÔøΩM ÔøΩvG0ÔøΩ&urJÔøΩÔøΩÔøΩÔøΩWÔøΩ)n[ÔøΩ""ezÔøΩÔøΩÃªÔøΩÔøΩÔøΩU^-1hyÔøΩÔøΩÊßñÔøΩÔøΩ(ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩPÔøΩÔøΩÔøΩ lÔøΩ""ÔøΩÔøΩ…¨ÔøΩÔøΩÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩÔøΩ	:ÔøΩ ELÔøΩLÔøΩPÔøΩÔøΩLÔøΩTÚïÆ´ÔøΩv*y\_ÔøΩÔøΩÔøΩ:bÔøΩ'ÔøΩQÔøΩ+ }9}KÔøΩ@ÔøΩC—ìÔøΩpÔøΩ=ÔøΩÔøΩ(ÔøΩÔøΩÔøΩ#:Q!iv%-,2ÔøΩEnÔøΩ8ÔøΩ'ÔøΩ o=mÔøΩ[ÔøΩ~KPÔøΩÔøΩeÔøΩ+bXBq,+ÔøΩ$ÔøΩÔøΩ>7ÔøΩuÔøΩrfÔøΩg# ∑uÔøΩ$«ëGÔøΩÔøΩrÔøΩz≈å9kÔøΩÔøΩ=ÔøΩfÔøΩÔøΩ.ÔøΩÔøΩÔøΩ:#ÔøΩ!CTÔøΩ(ÔøΩÔøΩÔøΩEÔøΩÔøΩQÔøΩÔøΩÔøΩESMPpÔøΩ?ÔøΩÔøΩ|ÔøΩÔøΩVmw0ZÔøΩÔøΩM1hÔøΩKÔøΩ4CÔøΩzÔøΩÔøΩ>ÔøΩÔøΩÔøΩÔøΩwaÔøΩ ÔøΩÔøΩÔøΩÔøΩ1ÔøΩCÔøΩ|mÔøΩkxÔøΩÔøΩÔøΩf3ÔøΩ4:ÔøΩKoÔøΩ}ÔøΩÔøΩÔøΩ#ÔøΩÔøΩeH[69ÔøΩÔøΩwƒ≤ÔøΩÔøΩÔøΩÕÖeÔøΩ∆£ÔøΩ/ÔøΩÔøΩÔøΩ	 nqÔøΩ◊íÔøΩZ`^Hœ´ÔøΩÔøΩÔøΩ ÔøΩÔøΩV8KÔøΩÔøΩgqW SÔøΩÔøΩÔøΩShÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩeÔøΩ9ÔøΩÔøΩPV5<ÔøΩ~‹ΩTÔøΩÔøΩMÔøΩ]>ÔøΩ^ÔøΩZXUÔøΩ~ÔøΩcAÔøΩÔøΩoÔøΩNÔøΩƒéa""nÔøΩÔøΩ-ÔøΩVÔøΩO,(	÷≠-hF9ÔøΩuÔøΩ.hÔøΩÔøΩÔøΩ€Ø8ÔøΩ–£ÔøΩ⁄©ÔøΩjLÔøΩ,ÔøΩTÔøΩ–øÔøΩ:ÔøΩÔøΩÔøΩPCÔøΩ&ÔøΩTÔøΩ)ÔøΩNÔøΩyÔøΩÔøΩDÔøΩÔøΩ2ÔøΩÔøΩÔøΩÔøΩ’π{ÔøΩÔøΩ:ÔøΩÔøΩK5ÔøΩ…∏gÔøΩ`ÔøΩ%ÔøΩÏîèÔøΩpÔøΩÔøΩ`lÔøΩ>DbqÔøΩÔøΩgÔøΩÔøΩR}ÔøΩÔøΩÔøΩXÔøΩÔøΩ/'ZÔøΩ`ÔøΩÔøΩÔøΩﬁº)3ÔøΩËêàÔøΩkÔøΩÔøΩÔøΩÔøΩkÔøΩÔøΩzÔøΩ[ÔøΩÔøΩÔøΩÔøΩ÷á)DÔøΩÔøΩovT≈úÔøΩ ÔøΩÔøΩJbÔøΩdÔøΩÔøΩÔøΩ/jÔøΩ'iqÔøΩÔøΩPÔøΩgGÔøΩÔøΩÔøΩhÔøΩÔøΩPÔøΩÔøΩÔøΩÔøΩ}ÔøΩYÔøΩÔøΩh…°MÔøΩ1ZÔøΩÔøΩÔøΩÔøΩ.*ÔøΩ-ÔøΩÔøΩYÔøΩ$""ÔøΩÔøΩF4«∂kUd1ÔøΩÔøΩÔøΩÔøΩ*ÔøΩjÔøΩÔøΩ<ÔøΩÔøΩÔøΩ*ÔøΩO>_ÔøΩ=ÔøΩ$ÔøΩÔøΩÔøΩKÔøΩ**ÔøΩN^ÔøΩÔøΩÔøΩtzÔøΩÍõ£HÔøΩÔøΩÔøΩÔøΩQ qÔøΩjÔøΩÔøΩWÔøΩÔøΩytÔøΩMÔøΩÔøΩÔøΩ	aÔøΩÔøΩoÔøΩ 6ÔøΩ4ÔøΩÔøΩqÔøΩÔøΩÔøΩ'Fb0ÔøΩIÔøΩÔøΩ?ÔøΩÔøΩÔøΩÔøΩ^ÔøΩJZÔøΩ .rwÔøΩÔøΩPÔøΩ0€∏ÔøΩLÔøΩÔøΩ)!ÔøΩQYÔøΩ*9ÔøΩ#ÔøΩÔøΩ9VÔøΩÔøΩÔøΩÔøΩR30ÔøΩQIÔøΩ5vÔøΩÔøΩÔøΩÔøΩRUo.]:)ÔøΩÔøΩÔøΩ9ÔøΩWÔøΩP j` aÔøΩÔøΩ'ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩgJÔøΩBm2ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ6"""" b=2ÔøΩÔøΩm::+7ÔøΩÔøΩÔøΩÔøΩtcÔøΩÔøΩYTÔøΩ4ÔøΩÔøΩ]ÔøΩ)`iu9ÔøΩÔøΩjÔøΩÔøΩ^ÔøΩ‹ÇT04/ÔøΩ|“íÔøΩ.ÔøΩÔøΩXoÔøΩGÔøΩÔøΩYFÔøΩÔøΩÔøΩ[}ÔøΩzqÔøΩÔøΩj^VÔøΩGÔøΩÔøΩ[ ÔøΩ4ÔøΩÔøΩ‹ûÔøΩF{""ÔøΩ>R>RÔøΩzÔøΩÔøΩÔøΩ9hÔøΩÔøΩÔøΩkxÔøΩ\cÔøΩgÔøΩ(ÔøΩw}(ÔøΩÔøΩpÔøΩ}ÔøΩBÔøΩ}D‹¶GÔøΩÔøΩÔøΩÔøΩÔøΩO1ÔøΩ,sÔøΩ…ânÔøΩx[WÔøΩÔøΩhÔøΩÕ≥ÊÑÑÔøΩÔøΩ[/Dm)>ÔøΩÔøΩ$ÔøΩ&[ÔøΩÔøΩÔøΩcÔøΩ7ÔøΩÔøΩ%ÔøΩÔøΩÔøΩwÔøΩÔøΩ8f6RPÔøΩ|ÔøΩÔøΩfÔøΩÔøΩÔøΩZ5R9ÀéÔøΩ]ÔøΩqSÔøΩh@HÔøΩÔøΩSYÔøΩ`fÔøΩÔøΩP>\VÔøΩÔøΩ""ÔøΩÔøΩ0ÔøΩ	ÔøΩ!AÔøΩÔøΩÔøΩÔøΩjÔøΩz""ÔøΩÔøΩ1ÔøΩfh&ÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩ#v1.ÔøΩÔøΩÔøΩ1ÔøΩÔøΩEÔøΩÔøΩÔøΩjÔøΩQÔøΩCÔøΩ: ÔøΩÔøΩ ÔøΩ;EÔøΩmÔøΩ.8ÔøΩÔøΩÔøΩbhÔøΩRlÔøΩÔøΩnmÔøΩÔøΩQÔøΩÔøΩÔøΩÔøΩÔøΩA«ê¬úÔøΩÔøΩ(ÔøΩdHÔøΩ[ﬂÉÔøΩÔøΩhCÔøΩÔøΩÔøΩ-mE.ÔøΩhŒíT0Œ´;[ÔøΩÔøΩ‰£ûÔøΩ ôÔøΩÔøΩbÔøΩ ÔøΩÔøΩ<ÔøΩÔøΩlÔøΩph5ÔøΩ?)cÔøΩ√ëÔøΩÔøΩwÔøΩw#eÔøΩ3e-WÔøΩ_ÔøΩAÔøΩHÔøΩ–ÑÔøΩqÔøΩ0ÔøΩÔøΩ*ÔøΩ@ÔøΩrÔøΩ3^qÔøΩÔøΩsÔøΩ7u9l)ÔøΩÔøΩSfÔøΩÔøΩ0bÔøΩÔøΩNKÔøΩ.ÔøΩ—¨ÔøΩLOÔøΩpmÔøΩqÔøΩPSÔøΩÔøΩJÔøΩÔøΩL}sÔøΩ@ÔøΩ:aÔøΩÔøΩÔøΩ!ÔøΩXÔøΩÔøΩÔøΩÔøΩG~ÔøΩÔøΩSÔøΩÔøΩ7QSÔøΩÔøΩ\W{ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔí≠ÔøΩÔøΩÂü®ÔøΩ–¶ÔøΩÀ±c`VÔøΩÔøΩ,ﬁòud‘úÔøΩÔøΩÔøΩÔøΩUÔøΩo0vÔøΩH'ÔøΩÔøΩjÔøΩÔøΩL^`ÔøΩÔøΩÔøΩÔøΩÔøΩ€∂ÔøΩreÔøΩa»ÅÔøΩG(ÔøΩÔøΩÔøΩÔøΩ	ÔøΩ”ÜÀ≤_–äÔøΩ78cÔøΩe5RÔøΩÔøΩ%ÔøΩCÔøΩﬂπÔøΩ~EÔøΩl/ÔøΩ""?ÔøΩÔøΩJÔøΩÔøΩÔøΩÔøΩp–†+pWÔøΩWÔøΩÔøΩw2ÔøΩ8ÔøΩÔøΩVz^ÔøΩÔøΩﬁÖ~0ÔøΩÔøΩÔøΩÔøΩÔøΩƒºÔøΩÔøΩÔøΩLÔøΩ""7ÔøΩŸ≤\_ÔøΩ/ÔøΩ5ÔøΩA5ÔøΩÔøΩUŒ•ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ*ÔøΩÔøΩÔøΩÔøΩÔøΩpÔøΩÔøΩa5ÔøΩÔøΩN){eÔøΩÔøΩu+ÔøΩ}v/ÔøΩÔøΩÔøΩ.ÔøΩMÔøΩaÔøΩ2-&ÔøΩmÔøΩÔøΩÔøΩ1ÔøΩÔøΩÔøΩÔøΩSÔøΩÔøΩah:lÔøΩ)GÔøΩÔøΩbÔøΩÔøΩÔøΩ5 /ÔøΩeKÔøΩr»æÔøΩ ÔøΩÔøΩ 9∆µÃúi/ÔøΩÔøΩÔøΩÔøΩÔøΩ4ÔøΩ<x6R}NTYÔøΩ%ÔøΩÔøΩm@ÔøΩovuÔøΩ[JÔøΩ{ÔøΩÔøΩÔøΩÔøΩKÔøΩ@!9kÔøΩ{ZÔøΩÔøΩÔøΩÔøΩÔøΩ88ÔøΩ ÔøΩÔøΩ/ÔøΩÔøΩ%ÔøΩjÔøΩÔøΩ¬üÔøΩ	vÔøΩ.ÔøΩSÔøΩ\\$FCpÔøΩÔøΩCÔøΩÔøΩ*:ÔøΩÔøΩ7<6Jr8zÔøΩÔøΩC? ÔøΩÔøΩcƒùÔøΩ%D.ÔøΩ&Ã≠ÔøΩ‰î°ÔøΩÔøΩTÀêÔøΩÔøΩ‘¶JÔøΩÔøΩ%ŸÆÔøΩF2ÔøΩpcÕühÔøΩ ÔøΩ9ÔøΩ+S]ÔøΩfÔøΩÔøΩÔøΩibÔøΩ>ÔøΩkÔøΩÔøΩYdÔøΩ0,Y?ÔøΩf0SqÔøΩÔøΩWÔøΩÔøΩ~ÔøΩoÔøΩÔøΩÔøΩÔøΩÔøΩo%ÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩ8ÃÜÔøΩBÔøΩWÔøΩuÔøΩq ~ÔøΩÔøΩÔøΩiÔøΩÔøΩÔøΩÔøΩ3*ÔøΩ~ÔøΩÔøΩaÔøΩL3ÔøΩ“ÆÔøΩr^CMÿóP<ÔøΩÔøΩÔøΩ$ÔøΩyyÔøΩw/ÔøΩÔøΩ_ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩOZÔøΩ'ÔøΩu?ÔøΩÔøΩ2nÔøΩ`PÔøΩQxÔøΩ6ÔøΩ;ÔøΩ8ÔøΩÔøΩNykÔøΩ[zZÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩÔøΩpÔøΩ0m0ÔøΩz[ÿöK22ÔøΩÔøΩÔøΩr'ÔøΩÔøΩvÔøΩBXqÔøΩÔøΩÔøΩ2ÔøΩVÔøΩÔøΩ&ÔøΩÔøΩaÔøΩDÔøΩ`RUÔøΩ""+ÔøΩZ}]ÔøΩÔøΩÔøΩwÔøΩÔøΩÔøΩXjf$KÔøΩeÔøΩÔøΩmÔøΩÔøΩ∆éÔøΩÔøΩ#iÔøΩ{?ÔøΩ=+cÔøΩÔøΩﬂÖÔøΩÔøΩ+ ¢ÔøΩÔøΩÔøΩfÔøΩÔøΩ,_?97eÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ2	!rh^ÔøΩcÔøΩiÔøΩÔøΩjÔøΩiÔøΩf!ÔøΩ""j1BÔøΩÔøΩÔøΩ=<ÔøΩÔøΩÔøΩÔøΩPÔøΩÔøΩÔøΩÔøΩMÔøΩ>ÔøΩ ÔøΩÔøΩÔøΩYLERtnÔøΩUÔøΩuÔøΩ ﬂ†BÔøΩÔøΩÔøΩ&ÔøΩÔøΩÔøΩrRÔøΩHÔøΩ.ÔøΩnÔøΩÔøΩDÔøΩNÔøΩÔøΩN;JÔøΩ`ÔøΩLÔøΩÔøΩ&ÔøΩ<^P v0ÔøΩ≈°ÔøΩQHA,ÔøΩÔøΩÔøΩÔøΩÔøΩgÔøΩ%(ÔøΩÔøΩmÔøΩÔøΩÔøΩ_ÔøΩÔøΩÔøΩ?ÔøΩÔøΩIÔøΩÔøΩGÔøΩÔøΩ=ÌÉÖzÔøΩ3ÔøΩŸùÔøΩOÔøΩÔøΩÔøΩ:|ÔøΩ	XÔøΩ ∆≤ÔøΩÔøΩÔøΩÔøΩW&ÔøΩUÔøΩÔøΩ) ÔøΩAV;|[NÔøΩÔøΩÔøΩÔøΩV›öw)AÔøΩÔøΩiÈ¢†zÔøΩbÔøΩÔøΩHÔøΩ?ÔøΩ3]€úUvÔøΩfEÔøΩ:ÔøΩ’êÔøΩlÔøΩÔøΩÔøΩeÔøΩÔøΩÔøΩyTÔøΩÔøΩXÔøΩmÔøΩN_]nGS8<ÔøΩmstÔøΩÔøΩJ>ÔøΩÔøΩsÔøΩÔøΩÔøΩVKI ÔøΩ@:aVZÔøΩÔøΩÔøΩ>ÔøΩÔøΩ S:ÔøΩ!ÔøΩÔøΩÔøΩFYC–ûÔøΩÔøΩ(iÔøΩÔøΩÔøΩ ÔøΩYB%ÔøΩ)ÔøΩMÔøΩÔøΩÔøΩzÔøΩÔøΩ/ÔøΩÔøΩFÔøΩ=‹ìKÔøΩÔøΩÔøΩKÔøΩÔøΩ 8ÔøΩÔøΩÔøΩ¬©R=$ÔøΩFJ^ÔøΩ:>ÔøΩ-l aÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ>ÔøΩ8qÔøΩÔøΩ0IA[ÔøΩA)ÔøΩeÔøΩÔøΩXÔøΩazÔøΩÔøΩÔøΩz(8ÔøΩÔøΩÔøΩÔøΩ!UÔøΩfTÔøΩÔøΩxHÔøΩlﬂªÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ/ÔøΩBiÕùxÔøΩ7ÔøΩmÔøΩ1ÔøΩ(ÔøΩ$HÔøΩeÔøΩÔøΩÔøΩSÔøΩ60;`3DÔøΩnÔøΩYÔøΩÔøΩ'qnÔøΩÔøΩÔøΩÔøΩ5ÔøΩiÔøΩOÔøΩ""#ÔøΩÔøΩ~ÔøΩ)VÔøΩÔøΩÔøΩÔøΩ}ÔøΩŒø""ÔøΩÔøΩÔøΩxÔøΩNÔøΩÔøΩÔøΩzNÔøΩ.WÔøΩÔøΩvq`~ÔøΩ~.<^ÔøΩ""ÔøΩSÔøΩxÔøΩ…´{ÔøΩ^ÔøΩk{ÔøΩÔøΩÃòÔøΩÔøΩÔøΩ]ÔøΩÔøΩfÔøΩn+ÔøΩ:.*-i}ÔøΩÔøΩÔøΩÔøΩÔøΩCÔøΩÔøΩ‘ªÔøΩ=ÔøΩ(ÔøΩ/ÔøΩÏìêjÔøΩuO*”òsY\ÔøΩÔøΩ|ÔøΩCÔøΩCÔøΩTÔøΩ(ÔøΩÔøΩH6=@|N8ÔøΩ`9ÔøΩÔøΩ2ÔøΩÔøΩCÔøΩÔøΩ9iÔøΩÔøΩÔøΩIÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩ-ÔøΩdÔøΩÔøΩIÔøΩÔøΩ<ÔøΩ\dÔøΩWÔøΩÔøΩhÔøΩiDÔøΩF{ÔøΩÔøΩÔøΩzrÔøΩbÔøΩÔøΩeZÔøΩ$,ÔøΩÔøΩÔøΩÔøΩÔøΩPyHÔøΩÔøΩÔøΩ-hÔøΩ^ÔøΩÔøΩÔøΩÔøΩÔøΩyÔøΩÔøΩwÔøΩ@;ﬂë;ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩE)vQÔøΩE(ÔøΩÔøΩÔøΩ+O	ÔøΩÔøΩÔøΩS4ÔøΩÔøΩÔøΩ}1ÔøΩ0ÔøΩ∆ùÔøΩÔøΩÔøΩÔøΩZÔøΩsqAb`⁄äkÔøΩQK?)LDQÔøΩ`>cdQÔøΩÔøΩÔøΩÔøΩÔøΩzÔøΩÔøΩiPÔøΩguÔøΩofÔøΩyÔøΩÔøΩUW7 ÔøΩÔøΩyWÔøΩ[*2ÔøΩÔøΩtmÔøΩKCÔøΩÔøΩ ÔøΩ#=ÔøΩ<^wkIv]ÔøΩ]?ÔøΩUÔøΩUVy‹òÔøΩÔøΩ‡ßß-›∫ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩfÔøΩÔøΩ&ÔøΩ8 î:Ÿê-ÔøΩgÈ¢™ÔøΩ'ÔøΩCÔøΩ|ÔøΩÔøΩQpÔøΩÔøΩÔøΩÔøΩÔøΩ6jQPÔøΩÔøΩÔøΩOf2[BÔøΩ:ÔøΩBÀΩÔøΩ:ÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩ\ÔøΩÔøΩ\(ÔøΩ≈ÆÔøΩÔøΩIIŸæ9ÔøΩÔøΩoxq#ÔøΩqÕè>ÔøΩÔøΩa_€ßÔøΩÔøΩÔøΩÔøΩ>ÔøΩ√çÔøΩÔøΩYLÔøΩÔøΩ:]ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩwÔøΩyÔøΩÔøΩvNÔøΩ9ÔøΩ:ŒëÔøΩÔøΩXx=ÔøΩÔøΩzCÔøΩÔøΩPQŒõuÔøΩ		ÔøΩÔøΩmÔøΩy ÔøΩ|ÔøΩCLs\ÔøΩHÔøΩÔøΩA::ÔøΩÔøΩÔøΩÔøΩC\d6ÔøΩŒªÔøΩ}ÔøΩ1ÔøΩ%>¬ªJxcÔøΩÔøΩÔøΩhÔøΩCÔøΩÔøΩÔøΩÔøΩÔøΩ%ÔøΩÔøΩÔøΩÔøΩ(ÔøΩÔøΩÔøΩÔøΩ%ÔøΩÔøΩ9s›èXmZL?4ÔøΩÔøΩ,ÔøΩqÔøΩÔøΩj_ÔøΩv+ÔøΩ_ÔøΩÔøΩÔøΩÔøΩÔøΩyAfVÔøΩhÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ7/ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ_MÔøΩ^#qPÔøΩÔøΩFÔøΩÔøΩÔøΩÔøΩ>g %FÔøΩÔøΩÔøΩGÔøΩÔøΩÔøΩMy ÔøΩukÔøΩ<ÔøΩÔøΩÔøΩÔøΩY`ÔøΩ	:ÔøΩA'qÔøΩVdÔøΩ/NHWhHÔøΩÔøΩÔøΩdÔøΩgÔøΩ^ÔøΩÔøΩh9M^VX^$pÔøΩÔøΩOOZÔøΩv?ÔøΩ ÇÔøΩÔøΩ2-.ÔøΩ`gK>ÔøΩd}ÀèÔøΩÔøΩrUÔøΩÔøΩ""}ÔøΩÔøΩÔøΩÔøΩ""ÔøΩY[ÔøΩrÔøΩÔøΩgD*ÔøΩÔøΩeÔøΩwÔøΩÔøΩ9ÔøΩGÔøΩuÔøΩEgyÔøΩÔøΩÔøΩ%ÔøΩMÔøΩ 4>ÔøΩ)+@ÔøΩR*ÔøΩÔøΩÔøΩbhÔøΩÔøΩÔøΩd04ÔøΩÔøΩËäù5ŸïqÔøΩÔøΩÔøΩ!ÔøΩÔøΩÔøΩLÔøΩ.∆úÔøΩÔøΩÔøΩ""ÔøΩ K;tÔøΩÔøΩeﬁóÔøΩ]rKÔøΩÔøΩ⁄âÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩnq/]hFNÔøΩÔøΩÔøΩ*/ÔøΩtÔøΩÔøΩÔøΩ.)-ÔøΩ %ÔøΩÔøΩÔøΩÔøΩjÔøΩÔøΩ3-ÔøΩŸñÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩwkÔøΩ1ÔøΩ`ÔøΩÔøΩnÔøΩÔøΩÔøΩÔåµÔøΩ[ÔøΩ}À†'ÔøΩe:8ÔøΩÔøΩsfG~ÔøΩÔøΩÔøΩÔøΩOÔøΩÔøΩÔøΩTÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩe])ÔøΩ|ÔøΩÔøΩfcwÔøΩÔøΩÔøΩÔøΩs]ÔøΩf ÔøΩÔøΩÔøΩl#^ÔøΩÃàÔøΩ2ÔøΩÔøΩÔøΩÔøΩAÔøΩ!6:IÔøΩÔøΩÔøΩÔøΩÔøΩ!dÔøΩIÔøΩmÔøΩUÔøΩÔøΩÔøΩnÔøΩXAGÔøΩÔøΩÔøΩLÔøΩTÔøΩÔøΩjÔøΩ30ÔøΩJ}ÔøΩNÔøΩÔøΩÔøΩ√¥ÔøΩZÔøΩÔøΩÔøΩ8ÔøΩÔøΩTÔøΩÔøΩÔøΩÔøΩ]Dn[ÔøΩ ÔøΩt3)#{[ÔøΩmÔøΩÔøΩÔøΩ-ÔøΩÔøΩAu;“≤ÔøΩ<ÔøΩÔøΩÔøΩÔøΩ.ÔøΩ«òÔøΩQÔøΩ""ÔøΩ(ÔøΩÔøΩÔøΩ¬ßnÔøΩ/ÔøΩÔøΩaÌâ¶]ÔøΩÔøΩ01)»∫{hÔøΩ%[kÔøΩÔøΩJ[ÔøΩÔøΩ)ÔøΩ@<ÔøΩ,ÔøΩÔøΩÔøΩ47tÔøΩÔøΩ3ÔøΩÔøΩ=ÔøΩÔøΩÔøΩÔøΩ;GÔøΩÔøΩP‹≠fÔøΩ:ÔøΩ!]#ÔøΩÔøΩZkÔøΩ~.ÔøΩÔøΩEXÔøΩÔøΩÔøΩ8ÔøΩÔøΩq’âÔøΩÔøΩ+uÔøΩÔøΩÔøΩÔøΩs–•}AÔøΩ¬üdÔøΩpQÔøΩÔøΩÔøΩÔøΩÔøΩ ^ÔøΩÔøΩÔøΩÔøΩÔøΩs'ÔøΩ(ÔøΩ4ÔøΩÔøΩ<&ÔøΩ÷ÉÔøΩÔøΩÔøΩ√¶^ÔøΩÔ¨∫vÔøΩtÔøΩ7ÔøΩÔøΩdN~ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩw|OyÔøΩp6ÔøΩ_ÔøΩ8rÔøΩ9yQÔøΩÔøΩÔøΩ+ÔøΩÔøΩÔøΩNÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ5ÔøΩ ÔøΩÔøΩÔøΩ;?+ÔøΩh$[;ÔøΩDÔøΩ""ÔøΩÔøΩVÔøΩÔøΩoFÔøΩxÔøΩÔøΩÔøΩÔøΩyÔøΩÔøΩCÔøΩhGÔøΩ.ÔøΩ3JdEÔøΩqÔøΩfÔøΩ/ÔøΩ ÔøΩkM,ÔøΩ!IÔøΩÔøΩ!ÔøΩÔøΩ`ÔøΩÔøΩ!y0ÔøΩOÔøΩÔøΩÔøΩÔøΩE|ÔøΩÔøΩA.ÔøΩÔøΩÔøΩ)WÔøΩ#—åÔøΩÔøΩXÔøΩÔøΩÔøΩÔøΩg ÔøΩÔøΩ8ÔøΩÔøΩÔøΩQÔøΩÁúãÔøΩÔøΩ8ÔøΩÔøΩÔøΩlÔøΩ<ÔøΩ! SCA|ÔøΩÔøΩ &ÔøΩ]ÔøΩo+HÔøΩaÔøΩkÔøΩÔøΩÔøΩ!|ÔøΩÔøΩ-ÔøΩÔøΩÔøΩ-,m3tÔøΩÔøΩÔøΩ⁄õÔøΩÔøΩÔøΩ2ÔøΩn1ÔøΩlÔøΩ@-""FÔøΩlÔøΩÔøΩÔøΩ3ÔøΩ0ÔøΩ	>ÔøΩ0ÔøΩOKÔøΩ?bi)*ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩc'ÔøΩe#ÔøΩÔøΩoÔøΩ>ÔøΩsÔøΩÔøΩ{ÔøΩÔøΩÀπÔøΩ ÔøΩBXÔøΩÔøΩVÔøΩQÔøΩÔøΩPwÔøΩÔøΩÔøΩÔøΩAZ*ÔøΩy3bÔøΩzfÔøΩÔøΩÔøΩÔøΩ|QÔøΩF0ÔøΩÔøΩÔøΩDÔøΩ=I/ÔøΩbRBÔøΩÔøΩ2ÔøΩÔøΩÔøΩÔøΩrF#k=ÔøΩÔøΩÔøΩ(_ÔøΩ?ﬁΩÔøΩÔøΩÔøΩ'ÔøΩprÔøΩÔøΩ‚≤®ÔøΩcÔøΩÔøΩÔøΩ|EÔøΩ]ÔøΩ#3ÔøΩÔøΩsÔøΩSÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ@ÔøΩsŒôPÔøΩaÔøΩpGyÔøΩ√™ÔøΩC6ÔøΩ◊í%mÔøΩÔøΩÔøΩVÔøΩu>ÔøΩÔøΩÔøΩÔøΩOÔøΩÔøΩKÔøΩ~HÔøΩÔøΩÔøΩ.ÔøΩÔøΩ)ÔøΩ^À™ÔøΩ,ÔøΩÔøΩ$~ÔøΩ:ÔøΩRÔøΩk8:ÔøΩ0>)ÔøΩÔøΩ5ÔøΩC}ÔøΩ3ÔøΩ;ÔøΩaÔøΩÔøΩ+ÔøΩ[ÔøΩÔøΩÔøΩ}ÔøΩ^ÔøΩz-!8ÔøΩ>ÔøΩ)#q6&[qÔøΩ9ÔøΩ’Ü~ÔøΩÔøΩLÔøΩm~ÔøΩcÔøΩ|QÔøΩﬁΩÔøΩ!ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ1ÔøΩ[\ÔøΩÔøΩÔøΩJÔøΩÔøΩ/ÔøΩXÔøΩNMÔøΩÔøΩkÔøΩ*>X(NLÔøΩokÔøΩÔøΩTHMÔøΩ4ÔøΩÔøΩDrlÔøΩ>ÔøΩÔøΩÔøΩ 9ÔøΩOÔøΩ^ÔøΩEÔøΩÔøΩÔøΩÔøΩqÔøΩÔøΩÔøΩÔøΩ êÔøΩÔøΩÔøΩqÔøΩŒ¶ÔøΩÔøΩÔøΩ?ÔøΩ‰Æ†CÔøΩmcÔøΩ`ÔøΩÔøΩÔøΩ^›âIcÔøΩiOhBr#ÔøΩ+ÔøΩÃÆy{rfÔøΩ\=ÔøΩ4ÔøΩzÔøΩÔøΩÔøΩÔøΩÔøΩ€¶3DÔøΩ:ÔøΩu$2sÔøΩhÔøΩ3ÔøΩÔøΩe""ÔøΩg)ÔøΩxÔøΩ!ÔøΩTÔøΩoÔøΩÔøΩÔøΩV;ÔøΩÔøΩ M)?ÔøΩ_ÔøΩDÔøΩÔøΩ?ÔøΩÔøΩ- c ÿ£ÔøΩÔøΩ/SÔøΩÔøΩ3ÔøΩGÔøΩÔøΩxÔøΩVÔøΩ]C pÔøΩ]ÔøΩ_ÔøΩÔøΩ⁄óÔøΩÔøΩÔøΩzÔøΩÔøΩZÔøΩÔøΩÔøΩ≈¨taÔøΩdÔøΩIÔøΩ3oxÔøΩÔøΩ}?MÔøΩ]PurÔøΩ ÔøΩ7ÔøΩd*ÔøΩ»é.ÔøΩCÔøΩÔøΩQÔøΩIÔøΩVÔøΩ ÔøΩÔøΩQÔøΩBUh]ÔøΩ‹∂ÔøΩÔøΩ ÔøΩÔøΩmUÔøΩÔøΩÔøΩ-ÔøΩÔøΩÔøΩÔøΩÔøΩPÔøΩÍΩÄOÀûÔøΩÔøΩ83?ÔøΩÔøΩÔøΩÔøΩRgÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩQ ÔøΩ5ÔøΩÔøΩVdiÔøΩÕ∂ÔøΩTÔøΩ`G…™ÔøΩAZtnÔøΩÔøΩS:ÔøΩÔøΩkÔøΩ~ÔøΩÔøΩÔøΩSÔøΩÔøΩ ÔøΩFÔøΩÔøΩÔøΩÔøΩ\ÔøΩ[1ÔøΩzÔøΩÔøΩÔøΩÔøΩkÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩÔøΩÔøΩ>ÔøΩoÔøΩ,bp2”™ÔøΩS}DÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩ ùsaÔøΩ*NUt ÔøΩvÔøΩ'ÔøΩ%!Òº∑øÔøΩ!KÔøΩ=ÔøΩ	MÔøΩÔøΩÔøΩ}OŸé∆ÖPWﬁ∏ÔøΩÔøΩHÔøΩÔøΩ⁄ûÔøΩ‹ÇÔøΩÔøΩFÔøΩ0}`ÔøΩÔøΩÔøΩo6?ÔøΩ}ﬁÄ=…ÖÔøΩP=ÔøΩÔøΩÔøΩmÔøΩ\ÔøΩeE<ÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩ8ÔøΩÔøΩÔøΩElÔøΩ ÔøΩÔøΩÔøΩK^(ÔøΩfJÔøΩÔøΩÔøΩoÔøΩ.""TÔøΩSÔøΩw8ÔøΩÔøΩÔøΩ!ÔøΩ\ÔøΩ##""ÔøΩÔøΩÔøΩcM~GmE^ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩc6ÔøΩ]ÔøΩGÔøΩxw+ÔøΩÔøΩÔøΩ,ÔøΩ5+ÔøΩVÔøΩÔøΩrBÔøΩÔøΩÔøΩÔøΩb ÔøΩ:ÔøΩyÔøΩBiÔøΩprVÔøΩx<@ÔøΩ@ÔøΩ&ÔøΩfV.b0ÔøΩÔøΩÔøΩÔøΩcÔøΩÔøΩ<#ÔøΩkÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩPÔøΩÔøΩ!kÔøΩTÀÆ:sÔøΩmÔøΩ—æÔøΩÔøΩÔøΩÔøΩUÔøΩ$ÔøΩxÔøΩ(ÔøΩJgÔøΩÍã°`ÔøΩ)ÔøΩÔøΩÔøΩ endstream endobj 49 0 obj << /Type /ObjStm /Length 5392 /Filter /FlateDecode /N 97 /First 831 >> stream xÔøΩÔøΩ\[w7ÔøΩ~ÔøΩ_—èÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ3;;ÔøΩ_ÔøΩƒéÔøΩ8NrÔøΩ@KÔøΩÕ±,*ÔøΩ8ÔøΩÔøΩÔøΩÔøΩW ÔøΩ)ÔøΩÔøΩlvÔøΩLÔøΩÔøΩÔøΩ ÍÇ™ÔøΩÔøΩ[|ÔøΩ7!4ÔøΩ6!6ÔøΩ7!5ÔøΩÔøΩ&ÔøΩÔøΩÔøΩ‹ÑÔøΩXÔøΩ7ÔøΩolÔøΩM4ÔøΩ-ÔøΩÔøΩÔøΩq.6ÔøΩ5.ÔøΩ&z<ÃÅÔøΩÔøΩ@jÔøΩÔøΩÔøΩÔøΩHiLÔøΩÔøΩSÔøΩÔøΩ1O2ÔøΩÔøΩDÔøΩ6∆πÔøΩ$ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩMÔøΩÔøΩÔøΩ	&7	{ÔøΩÔøΩÔøΩÔøΩ,◊òÔøΩ`ÔøΩÔøΩmÔøΩÔøΩ7ÔøΩ2ÔøΩ6ÔøΩ6÷∫ÔøΩdÔøΩ_ÔøΩÔøΩÔøΩÔøΩsÔøΩÔøΩÔøΩÔøΩrlÔøΩÔøΩÔøΩKÔøΩ≈æsnl4ÔøΩÔøΩ	<ÔøΩWzÔøΩÔøΩ4ÔøΩÔøΩÔøΩ1ÔøΩÔøΩ8ÔøΩÔøΩ5ÿ≤ÔøΩ7%ÔøΩÔøΩÔøΩÔøΩ…ïÔøΩ_LV2$ÔøΩÔøΩJÔøΩÔøΩ0ÔøΩÔøΩÔøΩÔøΩ\ÔøΩÔøΩÔøΩÔøΩÔøΩ-ÔøΩÔøΩÔøΩÔøΩ5ÔøΩ0ÔøΩC~ÔøΩÔøΩ$ÔøΩDÔøΩÔøΩ/EÔøΩJ ÿó[–Ñ≈ÆL_ÔøΩÔøΩhÔøΩÔøΩÔøΩD^ÔøΩ@}`»ÄÔøΩÔøΩDÔøΩÔøΩAmÿÇÔøΩÔøΩÔøΩÔøΩVÔøΩÔøΩDxÔøΩÔøΩÿ∞1	ÔøΩÔøΩ2iÔøΩ,ÔøΩPÔøΩÔøΩÔøΩÔøΩÔøΩd{ÔøΩ(""ÔøΩU#ÔøΩNtÔøΩ B!ÔøΩ"";+ÔøΩ ÔøΩ@ÔøΩb2ÔøΩÔøΩ6AC!ÔøΩ#F#&ÔøΩAB/w0SHVÔøΩ kÔøΩ""ÔøΩÔøΩ3ÔøΩ(=ÔøΩGÔøΩÔøΩÔøΩÔøΩ/ÔøΩOÔøΩ_vÔøΩFÔøΩe ÔøΩÔøΩÔøΩÿãÿúI9ÔøΩÔøΩÔøΩÔøΩÔøΩMwÔøΩÔøΩÔøΩÔøΩÔøΩhÔøΩ7?ÔøΩLmE[ÔøΩÔøΩÔøΩ6ÔøΩ6ÔøΩÔøΩ«πÔøΩÔøΩÔøΩÔøΩSÔøΩdÔøΩ mÔøΩÔøΩ`ÔøΩ 8ÔøΩ[(ÔøΩU)]ÔøΩÔøΩÔøΩÔøΩbJÔøΩÔøΩÔøΩQÔøΩBYÔøΩÔøΩÔøΩJÔøΩÔøΩ.ÔøΩ1ÔøΩ÷§ÔøΩ(ÔøΩoÔøΩÔøΩe[/ÔøΩNyÔøΩQÔøΩÔøΩLÔøΩÔøΩÔøΩ|ÔøΩÊØõÔøΩeÔøΩ=ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩLgÔøΩÔøΩfÔøΩÔøΩ?ÔøΩGÔøΩÔøΩ2=/qÔøΩÔøΩ7›ãÔøΩÔøΩÔøΩ÷õ6ÔøΩÔøΩÔøΩZCÔøΩ>ÔøΩ=$lhÔøΩEÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ{:9ÔøΩÔøΩtÔøΩÿø}ÔøΩÔøΩ7ÔøΩÔøΩ7ÔøΩvÔøΩÔøΩg{ÔøΩÔøΩiS=ÔøΩÔøΩÔøΩ)hÔøΩÔøΩÔøΩÔøΩpÔøΩÔøΩÔøΩÔøΩqÔøΩÔøΩÓíõZ	ÔøΩ\CPp7mÔøΩYÔøΩÔøΩÔøΩM~oÔøΩÔøΩwÔøΩÔøΩÔøΩIgÔøΩW ÔøΩuÔøΩÔøΩÔøΩÔøΩxÔøΩMÔøΩ6ÔøΩÔøΩWs~e>^ ÔøΩÔøΩfÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ”£voÔøΩÔøΩÔøΩÔøΩ>LÔøΩÔøΩÔøΩ:=ÔøΩfÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩx6:ÔøΩ|ÔøΩÔøΩ:ÔøΩÔøΩÔøΩNnLgÔøΩNÔøΩnÔøΩÔøΩÔøΩÔøΩ?ÔøΩM&ÔøΩÔøΩÔøΩLÔøΩ(ÔøΩ# YÔøΩnÔøΩÔøΩ ÔøΩÔøΩŸôGÔøΩÔøΩÔøΩÔøΩs<ÔøΩ~ÔøΩÔøΩÔøΩ?~ÔøΩRÔøΩoÔøΩ+(ÔøΩ!ÔøΩ/ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩch{ÔøΩ<ÔøΩzÔøΩ'ÔøΩÔøΩwÔøΩvÔøΩ25ÔøΩ-ÔøΩGÔøΩÔøΩO÷∑ÔøΩ›¥yIÔøΩÔøΩ{ÔøΩ}FÔøΩÔøΩÔøΩ`D&ÔøΩFÔøΩ`1ÔøΩdÔøΩÔøΩnvÔøΩÔøΩGÔøΩÔøΩ?FÔøΩÔøΩÔøΩÔøΩ`ÔøΩÕßÔøΩG]ÔøΩiÔøΩÔøΩÔøΩÔøΩ»ïÔøΩHÔøΩÔøΩyÔøΩÔøΩÔøΩÔøΩlÔøΩÔøΩÔøΩÔøΩ^ qoÔøΩ^ÔøΩÔøΩ$ÔøΩÔøΩ'ÔøΩ_ÔøΩ}ÔøΩÔøΩ<ÔøΩ gvÃ∞o¬Ñ4~_zÔøΩÔøΩÔøΩŸ§ÔøΩÔøΩ{)ÔøΩÔøΩÔøΩÔøΩ⁄∫tÔøΩÔøΩZPÔøΩBÔøΩWÔøΩUYÔøΩ9ÔøΩÔøΩ-ÔøΩÔøΩj{ÔøΩÔøΩÔøΩÔøΩXÔøΩÔøΩTÔøΩKÔøΩ8ÔøΩ6H]ÔøΩC#ÔøΩRPÔøΩ/ vÔøΩ}ÔøΩTÔøΩÔøΩ8, ÔøΩÔøΩ|ÔøΩ ÔøΩ;ÔøΩEÔøΩpyÔøΩJÔøΩyÔøΩ_/ÔøΩÔøΩ{GÔøΩ ÔøΩiÔøΩÔøΩÔøΩ*dÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩjÔøΩjÔøΩ{ÔøΩPÔøΩ ÔøΩÔøΩÔøΩNÔøΩÔøΩÔøΩ8ÔøΩ;ÔøΩÔøΩÔøΩIÔøΩ$yÔøΩDÔøΩÔøΩCÔøΩ	ÔøΩ6ÔøΩ~ÔøΩmo»ë wa*ÔøΩÔøΩÔøΩshMm3ÔøΩ :ÔøΩÔøΩÔøΩÔøΩlÔøΩ@ÔøΩÔøΩÔøΩxÏõÑÔøΩ@ÔøΩÔøΩÔøΩÔøΩbÔøΩd1ÔøΩÔøΩPÔøΩÔøΩÔøΩG>QÔøΩÔøΩÔøΩw@ÔøΩÔøΩ6ÔøΩÔøΩxÔøΩ@ÔøΩ#6rÔøΩ&cÔøΩÔøΩÔøΩÔøΩqH# ã0aÔøΩÔøΩÔøΩ{ÔøΩÔøΩ ÔøΩd?ÔøΩÔøΩHÀúÔøΩ7hMÔøΩÔøΩ?^`*D 4ÔøΩ\GY$PfÔøΩÔøΩ""vÔøΩÔøΩÔøΩÔøΩAdo\ﬁºÔøΩIYÔøΩ^LS\ÔøΩÔøΩ ÔøΩJÔøΩQ #/ÔøΩ&ŒüÔøΩÔøΩ_DjÔøΩÔøΩw)h&ÔøΩ‘∏))}ÔøΩ@ 8<k[ÔøΩÔøΩ/cGÔøΩ^""ÔøΩÔøΩÔøΩ’°ÔøΩÔøΩ3ÔøΩŸèÔøΩ$KNJÔøΩÔøΩU	ÔøΩF%N…Ç]yE ÔøΩQ^dŒÑV""ÔøΩ1fÔøΩrD.…âÔøΩd'{EÔøΩ(ÔøΩ–∑ÔøΩÔøΩP-ÔøΩÔøΩÔøΩÔøΩÔøΩ#ÔøΩ«≠ÔøΩÔøΩZ1ÔøΩÔøΩÔøΩÔøΩ 5{ÔøΩ4w&%(ÔøΩÔøΩÔøΩR^E+ÔøΩÔøΩÔøΩ=ÔøΩÔøΩÔøΩn%3-DÔøΩÔøΩMÔøΩS,ÔøΩLPÔøΩI47ÔøΩÔøΩdÔøΩAÔøΩÔøΩB]ÔøΩlÔøΩÔøΩÔøΩ#jÔøΩ_6~ÔøΩÔøΩÔøΩVkÔøΩgÔøΩÔøΩ4uÔøΩ9ÔøΩÔøΩpÔøΩÔøΩ;kÔøΩÔøΩÔøΩE/*ÔøΩÔøΩŸúW'+ÔøΩb|ÔøΩ/ÔøΩÔøΩVÔøΩ^(ÔøΩlÔøΩÔøΩRÔøΩRÔøΩCÔøΩÔøΩ0ÔøΩ+g/ÔøΩVWÔøΩÔøΩaÔøΩ-ÔøΩLÔøΩÔøΩÔøΩÔøΩÔøΩpÔøΩ]ÔøΩÔøΩ@s=ÔøΩuÔøΩcÔøΩl#GÔøΩÔøΩÔøΩÔøΩbÔøΩÔøΩÔøΩ(ÔøΩUÔøΩp`mÔøΩzÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩCÔøΩÔøΩ|=ÔøΩKÔøΩ4ÔøΩvÔøΩÔøΩÔøΩ'ÔøΩ⁄çvÔøΩÔøΩÔøΩÔøΩRÔøΩÔøΩÔøΩyÔøΩ_-ÔøΩzÔøΩ+ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ""Ogdk+If.ÔøΩƒù)ÔøΩJ]ÔøΩL@wÔøΩWÔøΩÔøΩV>ÔøΩÔøΩ&gjÔøΩ#bÔøΩhMÔøΩÔøΩÔøΩÔøΩ÷ÅÔøΩa}ÔøΩÔøΩÔøΩÔøΩS[/=BÔøΩÔøΩÔøΩ<ÔøΩ,tÔøΩÔøΩÔøΩÔøΩÔøΩCCÔøΩÔøΩBRÔøΩÔøΩ7BÔøΩg=ﬁå""Y($ÔøΩÔøΩÔøΩ4$)ÀΩÔøΩ^ÔøΩÔøΩÔøΩ<ÔøΩgÔøΩ ÔøΩ 'ÔøΩl}+!ÔøΩSÔøΩÔøΩ—ÖÔøΩc>)ÔøΩ<ÔøΩÔøΩ%ÔøΩRxÔøΩÔøΩDÔøΩÔøΩfxWeÔøΩ}my2ÔøΩ`ÔøΩOsmÔøΩ#ÃÆÔøΩÔøΩÔøΩpÔøΩÔøΩ;4@¬¶ÔøΩÔøΩÔøΩÔøΩk3ÔøΩK^9ÔøΩCZÔøΩK<œ≤ÔøΩÔøΩ9,[ÔøΩÔøΩloÔøΩÔøΩÔøΩÔøΩ#ÔøΩ{lÔøΩIÔøΩl]ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩVR+ÔøΩÔøΩ2ÔøΩÔøΩÔøΩjul+ÔøΩÔøΩU/RÔøΩU¬ÜÔøΩ6ÔøΩÔøΩÔøΩB8$ÔøΩ+ÔøΩ%%ZÔøΩ%ÔøΩÔøΩ$'ÔøΩ0&ÔøΩQÁëØÔøΩraÔøΩÔøΩÔøΩ,dzÔøΩ@*8RÔøΩÔøΩlÔøΩQ""""ÔøΩ	ÔøΩ=ÔøΩ9%ÔøΩÔøΩrÔøΩ ÔøΩ/ÔøΩ<ÔøΩÔøΩÔøΩ{ÔøΩ≈çv!}GikÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩgÔøΩÔøΩÔøΩ1ÔøΩhÔøΩÔøΩkÔøΩ3ŸæFfÔøΩCJ|^k8IÔøΩmi›ë<ÔøΩKÔøΩMÔøΩÔøΩÔøΩÔøΩ9uNÔøΩÔøΩÔøΩs⁄¨P.ÔøΩÔøΩÃó√∂Yd-¬ªz ÔøΩÔøΩÔøΩÔøΩÔøΩ0ÔøΩ ÔøΩuIƒ™ÔøΩÔøΩÔøΩIÔøΩÔøΩÃ¨ghÔøΩwÔøΩÔøΩÔøΩl_ÔøΩÔøΩ.mÔøΩsÔøΩÔøΩZCQ4ÔøΩzb ÔøΩ9ÔøΩse8ÔøΩÔøΩÔøΩ-QÔøΩÀîÔøΩ0ÔøΩ[	ÔøΩfRÔøΩÔøΩÔøΩÔøΩ ÔøΩ ÔøΩÔøΩ+(%[ÔøΩzÔøΩ⁄àÔøΩ2ÔøΩrJe»ìÔøΩÔøΩŒ®ÔøΩÔøΩUÔøΩÔøΩrlÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩYÔøΩÔøΩ|LUTWÔøΩzÔøΩÔøΩÈ®ï""2Oy(ÔøΩÔøΩ!ÔøΩÔøΩ+ÔøΩÔøΩJ3l^jÔøΩÔøΩaÔøΩ|ÔøΩmXÔøΩpLÔøΩÔøΩ$ÔøΩ%ÔøΩ|ÔøΩÔøΩÔøΩÔøΩ'ÔøΩLÔøΩfÔøΩÔøΩÔøΩÔøΩÔøΩwh+ÔøΩÔøΩMÔøΩÔøΩ9ÔøΩÔøΩa8>ÔøΩÔøΩW8ÔøΩÔøΩÔøΩÔøΩ(ÔøΩdÔøΩBÔøΩÔøΩÔøΩn3ÔøΩ8-ÔøΩgnÔøΩ ÔøΩC!*vÔøΩ3JÔøΩÔøΩ ÔøΩMÔøΩÔøΩ""ÔøΩÔøΩgÔøΩgjÔøΩ""ÔøΩÔøΩeŸóÔøΩ+<ÔøΩx&CÿëÔøΩYKOÔøΩjÔøΩ%ÔøΩuÔøΩÔøΩW|?LÔøΩÔøΩÔøΩÔøΩ?tÔøΩÔøΩ	ÔøΩÔøΩÔøΩ#ÔøΩÔøΩUÔøΩGIznXÔøΩ`ÔøΩ,–§BVÔøΩ-ÔøΩ.8ÔøΩÔøΩÔøΩRÔøΩLÔøΩAÔøΩ?ÔøΩ*QÔøΩÔøΩeYL>ÔøΩcAP""*ÔøΩRFÔøΩÔøΩ◊ÑÔøΩ3!ÔøΩƒÅvÔøΩnÔøΩ .ÔøΩÔøΩoÔøΩÔøΩ6d,ÔøΩÔøΩÔøΩgÔøΩ&,,*&G12ÔøΩJL›´vÔøΩÔøΩ&ÔøΩÔøΩ8PIZ`ÔøΩUÔøΩ ÔøΩTÔøΩÔøΩPÔøΩ„∞¨yÔøΩÔøΩ^ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩDÀóÔøΩwÔøΩ$ÔøΩv%OÔøΩ,sÔøΩ*g$ÔøΩÔøΩQœ≤SÔøΩÔøΩJ%ÔøΩsÔøΩÔøΩÔøΩDÔøΩ.""hfÔøΩÃÇÔøΩ`ÔøΩzGÔøΩYÔøΩ42N#ÔøΩÔøΩoÔøΩÔøΩKRÔøΩÔøΩÔøΩ| ∞ÔøΩWXÔøΩ\ ÔøΩÔøΩÔøΩ6ÔøΩÔøΩ-:mÔøΩÔøΩÔøΩÔøΩÔøΩuaÔøΩHÔøΩ,kÔøΩÔøΩÔøΩ@tÔøΩUoH5ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩjdCSÔøΩcjR!ÔøΩÔøΩÔøΩeÔøΩÔøΩÔøΩhÔøΩe*VÔøΩUaÔøΩÔøΩÔøΩgT;ÔøΩÔøΩ1>[g◊îÔøΩÔøΩÔøΩ?ÔøΩ8ÔøΩÔøΩ.ÀáÔøΩ_1zÔøΩ7'ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩNÔøΩjÔøΩÔøΩÔøΩÔøΩNÔøΩÔøΩÔøΩÔøΩ0H2ÔøΩÔøΩh_€ïMÔøΩ h%[ ÔøΩCÔøΩÔøΩ:Om=!oÔøΩÔøΩÔøΩÔøΩÔøΩ\kÔøΩ0ÔøΩÔøΩIÔøΩÔøΩÔøΩYHAÔøΩh#kbÔøΩÔøΩgÔøΩa 6<SÔøΩ!f1\	$c,+ÔøΩÔøΩÔøΩcÔøΩZ LÔøΩÀáÔøΩI'ÔøΩtRÔøΩÔøΩ|)ÔøΩÔøΩ2ÔøΩÔøΩÔøΩÔøΩ9ÔøΩwÔøΩÔøΩ2ÔøΩÔøΩ_E1ÔøΩÔøΩÔøΩgÔøΩÔøΩÔøΩÔøΩÔøΩ#≈•JÔøΩÔøΩÔøΩÔøΩ>ÔøΩ ÔøΩgÔøΩbEÔøΩ{*!ÔøΩ◊∂j.1VRim-À´ÔøΩÔøΩjÔøΩÁµâEwÔøΩÔøΩÔøΩÔøΩx øÔøΩqÔøΩX-ÔøΩÔøΩÔøΩÔøΩr	%ÔøΩEÔøΩÔøΩ!ÔøΩct÷∂.2ÔøΩKÔøΩÔøΩvÔøΩvÔøΩ7mu-O0ÔøΩÔøΩÔøΩ(ÔøΩIcÔøΩ2ÔøΩÔøΩ~ÔøΩÔøΩYÔøΩ[ÔøΩ“πdÔøΩÔøΩ|g!ÔøΩÔøΩ.ÔøΩÔøΩÔøΩtfmU&xÔøΩŒÆtlÔøΩÔøΩÔøΩZÔøΩ69ÔøΩPÔøΩÔøΩ5!…áÔøΩÔøΩ7ÔøΩÔøΩpÔøΩÔøΩ›Å xÔøΩw^nkEÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩBUÔøΩ; ÄÔøΩ+ÔøΩÔøΩbÔøΩ7ÔøΩÔøΩÔøΩÔøΩYÔøΩa-^ ÔøΩÔøΩP)IÔøΩb	`ÔøΩÔøΩLbÔøΩÔøΩHÔøΩXÔøΩIÔøΩÔøΩÔøΩÔøΩXÔøΩj…©ÔøΩÔøΩÔøΩ3ÔøΩÔøΩÔøΩ	ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩGÔøΩNÔøΩ&9ÔøΩ◊úHbÔøΩÔøΩÔøΩÔøΩ◊ë$/ÔøΩtjyÔøΩW}ÔøΩ .ÔøΩgtÔøΩ>ÔøΩÔøΩHÔøΩ#ÔøΩ%ÔøΩÔøΩÔøΩ^i|ÔøΩL:DÔøΩÔøΩ""ÔøΩÔøΩqÔøΩ]ÔøΩÔøΩkÔøΩ2ÔøΩÔøΩ_ÔøΩÔøΩÔøΩÔøΩÔøΩHrÔøΩÔøΩÔøΩÔøΩ{MÔøΩÔøΩ/ÔøΩSÔøΩÔøΩHÔøΩÔøΩÔøΩÔøΩOZÔøΩ9(ÔøΩÔøΩ)ÔøΩÔøΩOÔøΩÔøΩsÔøΩÔøΩ[ÔøΩÔøΩÔøΩÔøΩoÔøΩ iÔøΩÔøΩzou%ÔøΩx«∑ÔøΩÀûÔøΩÔøΩ[ÔøΩÔøΩ&2LJ~QÔøΩ]RÔøΩ=«òÔøΩ2ÔøΩÔøΩÔøΩ{ÔøΩ]ÔøΩkÔøΩÔøΩÔøΩ%C (‹πÔøΩÔøΩÔøΩi%ÔøΩÔøΩÔøΩÔøΩ:""jpÔøΩÔøΩ7$&/ÔøΩÔøΩDÔøΩ‹≥ÔøΩdyDHÔøΩl"" 5uÔøΩÔøΩuÔøΩÔøΩuV>]ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ+ÔøΩ5ÔøΩÔøΩÔøΩ·à§$ÔøΩÔøΩzÔøΩÔøΩ&g:ÔøΩ3ÔøΩ>÷¨h—∑ÔøΩÔøΩÔøΩM}V«â ™lÔøΩ%.ÔøΩÔøΩ9I#ÔøΩ?)ÔøΩKÔøΩÔøΩÔøΩZÔøΩMLÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩh.ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩxÔøΩÔøΩÔøΩ\2i\ÔøΩÔøΩÔøΩÎ≠ØÔøΩÔøΩÔøΩÔøΩnÔøΩÔøΩuÔøΩ›∏;ÔøΩ&›øÔøΩÔøΩÔøΩÓ®õv”£qw<ÔøΩÔøΩÔøΩÔøΩsÔøΩÔøΩdÔøΩÔøΩx<ÔøΩLÔøΩÔøΩYwÔøΩÕªÔøΩÔøΩÔøΩxÔøΩÔøΩÔøΩÔøΩvÔøΩ›ü_7›ΩÔøΩÔøΩzÔøΩ»≤GÔøΩNÔøΩÔøΩÔøΩ›π3ÔøΩÔøΩÔøΩÔøΩÔøΩBÔøΩ~ÔøΩ f4ÔøΩ-ÔøΩÔøΩÔøΩL«ç]|]ÔøΩÔøΩÔøΩFÔøΩMÔøΩ√ùoÔøΩ?ÔøΩÔøΩ?ÔøΩ~{ÔøΩÔøΩÔøΩÔøΩ|t8Ÿª}ÔøΩƒ∏|9|ÔøΩ?AÔøΩÔøΩ»ÉÔøΩÔøΩÔøΩÔøΩx>ÔøΩ5›õÔøΩ7ÔøΩÔøΩÔøΩÔøΩ]sÔøΩÔøΩÔøΩÔøΩÔøΩtÔøΩÔøΩÔøΩ›∑ÔøΩwÔøΩ3ÔøΩEÔøΩÔøΩ{ÔøΩÔøΩÔøΩÔøΩ]ÔøΩÔøΩ`ÔøΩ;~ÔøΩÔøΩÔøΩÔøΩ]ÔøΩÔøΩ{ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ;ÔøΩq!ÔøΩÔøΩ(ÔøΩÔøΩÔøΩÔøΩ :ÔøΩ|:#ÔøΩ?ÔøΩO›üÔøΩÔøΩÔøΩÔøΩx6ÔøΩQÔøΩNdÔøΩ?ÔøΩ.ÔøΩÔøΩYYÔøΩÔøΩÔøΩÔøΩÔøΩ^ÔøΩUYÔøΩÔøΩdŸóÔøΩÔøΩÔøΩÔøΩ*1ÔøΩÃéÔøΩÂÖëÔøΩÔøΩÔøΩÔøΩgÔøΩÔøΩ√èœû>%cÔøΩ\IÔøΩÔøΩKÔøΩÔøΩ]ÔøΩÔøΩ ÔøΩ:GÔøΩ~ÔøΩÔøΩÔøΩ`ÔøΩOiÔøΩÔøΩÔøΩY^ÔøΩ=ÔøΩÔøΩÔøΩ(ÔøΩÔøΩÀªÔøΩZ<ÔøΩÔøΩEÔøΩ8sÔøΩÔøΩyÈáúÔøΩÔøΩ~ÔøΩ8ÔøΩÔøΩÔøΩÔøΩ''«áÔøΩ?WÔøΩÔøΩ5ÔøΩ!ÔøΩ?GeVÔøΩ,ÔøΩÔøΩÔøΩ&ÔøΩÔøΩ1ÔøΩeÔøΩÔøΩÔøΩ?6ÔøΩÔøΩÔøΩÔøΩ*ÔøΩÔøΩrÔøΩÔøΩT&ÔøΩx–ΩÔøΩÔøΩÔøΩÔøΩCÔøΩÔøΩÔøΩÔøΩ<~?ÔøΩ.ÔøΩ”ÆÔøΩÔøΩŸÖ^}ÔøΩ‘´;ÔøΩÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩ,√∑ÔøΩÃÆÔøΩÔøΩ/ÔøΩ<ÔøΩÔøΩlÔøΩÔøΩÔøΩ|Êå©ÔøΩYo6yÔøΩgyÔøΩ}ÔøΩÔøΩÔøΩ{?ÔøΩÔøΩx.kH&ÔøΩÔøΩÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩUÔøΩ{ÔøΩRÔøΩnÔøΩ\ÔøΩkÔøΩ~7ÔøΩÔøΩ…≥ÔøΩ=|F~ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ*qgÔøΩÔøΩ#ÔøΩ?\≈çÔøΩÔøΩÔøΩÔøΩ”ßÔøΩU>ÔøΩ@ÔøΩMsuÔøΩÔøΩÔøΩÔøΩpÔøΩ,CÔøΩÔøΩ5ÔøΩÔøΩ–ΩFÔøΩ}ÔøΩÔøΩÔøΩÔøΩLÔøΩÔøΩÔøΩÔøΩÔøΩ>ÔøΩÔøΩÔøΩ&ÔøΩÔøΩÔøΩdq8=ZÔøΩ≈æ|h<ÔøΩupÔøΩnÔøΩqtÔøΩÔøΩv::ÔøΩÔøΩ-ÔøΩMÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ-ÔøΩÔøΩÔøΩ|ÔøΩÔøΩÔøΩGÔøΩÔøΩ“±ÔøΩÔøΩ ÔøΩÔøΩv:>ÔøΩÔøΩt>ÔøΩ{ÔøΩÔøΩÔøΩ$ÔøΩÔøΩÔøΩ0ÔøΩÔøΩDÔøΩYÔøΩÔøΩCÔøΩÔøΩ:lÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩ~pÿàIÔøΩÔøΩÔøΩÔøΩÔøΩsX∆ãs}uÔøΩ6\ÔøΩ.ÔøΩÔøΩÔøΩ^PÔøΩÔøΩwÔøΩr&ÔøΩÔøΩÔøΩÔøΩHÔøΩÔøΩÔøΩW(UÔøΩ3ÔøΩGÔøΩÔøΩÔøΩ?ÔøΩzÔøΩ9HÔøΩwwwqFÔøΩzteÔøΩÔøΩ ÔøΩyÔøΩÔøΩÔøΩTÔøΩÔøΩKÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩw_ÔøΩ'ÔøΩÔøΩÔøΩ?/ÔøΩÔøΩ ÔøΩ’ªendstream endobj 50 0 obj << /Filter /FlateDecode /Length1 2081 /Length2 14414 /Length3 0 /Length 15670 >> stream xÔøΩÔøΩÔøΩP\ÔøΩ÷ÄÔøΩÔøΩ=ÔøΩÔøΩqwÔøΩÔøΩÔøΩÔøΩ@ÔøΩ”∏;ÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩeÔøΩ#ÔøΩÔøΩÔøΩÔøΩﬁ¢ÔøΩÔøΩoÔøΩÔøΩkÔøΩÔøΩÔøΩÔøΩÔøΩU‘ôÔøΩÔøΩÔøΩM@ÔøΩÔøΩvÔøΩÔøΩÔøΩ,lÔøΩ 	Eqv '25ÔøΩÔøΩÔøΩÔøΩ92ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩt~ÔøΩIÔøΩ_ ÔøΩÔøΩ r.6 vN ;?;/?ÔøΩÔøΩÔøΩÔøΩÔøΩ?ÔøΩÔøΩ~ÔøΩ$ÔøΩlPdÔøΩÔøΩ€ÅÔøΩÔøΩÔøΩ%ÔøΩ< `KÔøΩÔøΩ<ÔøΩÔøΩ ÔøΩ3ÔøΩÔøΩÔøΩÔøΩÔøΩ2ÔøΩÔøΩÔøΩAÔøΩÔøΩ@;ÔøΩ""ÔøΩÔøΩdÔøΩÔøΩÔøΩhPÔøΩ7ÔøΩÔøΩ=ÔøΩ'ÔøΩÔøΩÔøΩÔøΩÔøΩ?+ÔøΩÔøΩÔøΩÔøΩ÷âÔøΩb!LÔøΩp;[ÔøΩ@N ÔøΩ+ÔøΩÔøΩWÔøΩ %ÔøΩ-ÔøΩﬂ≠ÔøΩ S4,ÔøΩNÔøΩRÔøΩ€õ;ÔøΩ! ÔøΩÔøΩÔøΩl ÔøΩszuqÔøΩ3A ÔøΩÔøΩÔøΩ  eÔøΩ›øÔøΩÔøΩeÔøΩÔøΩÔøΩÔøΩ ÔøΩYÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ45ÔøΩÔøΩu ÔøΩyÔøΩÔøΩ, ÔøΩ`@YZÔøΩÔøΩÔøΩ›ô	 ÔøΩ3ÔøΩÔøΩhÔøΩdÔøΩÔøΩtÔøΩmÔøΩ&ÔøΩÔøΩHÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ?'SÔøΩÔøΩŸâÔøΩ	lÔøΩWÔøΩÔøΩÔøΩy=f);3	{[[ÔøΩÔøΩÔøΩÔøΩ_ÔøΩIÔøΩ! ÔøΩÔøΩsÔøΩ`ÔøΩÔøΩ√µÔøΩÔøΩwÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩjÔøΩÔøΩ≈ÅUÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÕ´ÔøΩÔøΩÔøΩÔøΩÔøΩfccÔøΩÔøΩÔøΩÔøΩ wSK÷øhx8ÔøΩÔøΩVÔøΩÔøΩ%~ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ`ÔøΩÔøΩÔøΩlzÔøΩÔøΩÔøΩÔøΩtÔøΩ!. ÔøΩ*ÔøΩÔøΩÔøΩÔøΩÔøΩf`SgÔøΩ	ÔøΩlÔøΩÔøΩ'ÔøΩÔøΩdÔøΩ/~}ÔøΩÔøΩ;@ÔøΩÔøΩuÔøΩÔøΩlÔøΩÔøΩÔøΩÔøΩÔøΩÎÑôÔøΩÔøΩÔøΩxÔøΩ1ÔøΩÔøΩÔøΩj+J*iI0ÔøΩÔøΩÔøΩÔøΩ*ÔøΩÔøΩÔøΩÔøΩ^ÔøΩ‹ú fnv ;;'ÔøΩÔøΩÔøΩ ÔøΩÔøΩqTÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩr_ÔøΩÔøΩ?%ÔøΩÔøΩ{ÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩdÔøΩ:ÔøΩ  ›üA7`ÔøΩf3}ÔøΩ`ÔøΩÔøΩ<ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩHÔøΩÔøΩÔøΩÔøΩo=›øÔøΩÔøΩ@[ÔøΩÔøΩ«ø-^'ÔøΩÔøΩÔøΩuÔøΩ_wÔøΩÔøΩÔøΩÔøΩjÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ6fÔøΩW'ÔøΩ|ÔøΩ1;ÔøΩÔøΩ#ÔøΩIÔøΩ2S;ÔøΩZÔøΩk\ÔøΩ%ÔøΩÔøΩkÔøΩlÔøΩv {'ÔøΩ_WÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ^ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩpzÔøΩ…øUÔøΩÔøΩÔøΩÔøΩﬂîRvÔøΩÔøΩfm7 ÔøΩ =ÔøΩÔøΩ^GÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩf ÔøΩÔøΩÔøΩÔøΩÔøΩbgÔøΩÔøΩÔøΩxmÔøΩ`nAÔøΩÔøΩÔøΩÔøΩX%ÔøΩÔøΩÔøΩÔøΩX%ÔøΩÔøΩUÔøΩÔøΩÔøΩ`ÔøΩÔøΩC ÔøΩÔøΩÔøΩ*ÔøΩÔøΩ^c*ÔøΩÔøΩ◊òJÔøΩ5ÔøΩÔøΩÔøΩÔøΩkLÔøΩ?ÔøΩSÔøΩÔøΩÔøΩTÔøΩC\ VÔøΩ?ÔøΩÔøΩAÔøΩÔøΩÔøΩÔøΩJÔøΩ?ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ3ÔøΩ/ÔøΩu¬¨fÔøΩ@v +ÔøΩÔøΩZÔøΩÔøΩÔøΩucXÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ] ÔøΩpx5ÔøΩÔøΩÔøΩiÔøΩ_ÔøΩÔøΩ~%ÔøΩÔøΩ+ÔøΩ≈´ÔøΩ|ÔøΩÔøΩÔøΩÔøΩZÔøΩÔøΩ?ÔøΩvÔøΩ?ÔøΩÔøΩZÔøΩ?BÔøΩ^#ÔøΩÔøΩÔøΩÔøΩ⁄æÔøΩhÔøΩÔøΩ~-ÔøΩ·èöÔøΩ^ÔøΩÔøΩÔøΩÕøÔøΩÔøΩXÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ5ÔøΩÔøΩJÔøΩÔøΩÔøΩÔøΩÔøΩ\ÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ5ÔøΩÔøΩÔøΩkuŒñÔøΩ?NÔøΩ|g7ÔøΩ8ÔøΩ6ÔøΩÔøΩ|ÔøΩÔøΩÔøΩrÔøΩÔøΩÔøΩ#:ÔøΩk<ÔøΩÔøΩkwÔøΩÔøΩ{=7OÔøΩ_ÔøΩÔøΩg=L] ÔøΩ◊óÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ~#ÔøΩ@ÔøΩ SÔøΩY{SÔøΩ`ÔøΩÔøΩÔøΩÔøΩobÔøΩnÔøΩ;cBSÔøΩ;⁄©ÔøΩÔøΩ^ÔøΩvÔøΩ{tÔøΩ$ÔøΩÔøΩ/ÔøΩkÔøΩkÔøΩÔøΩÔøΩnÔøΩÔøΩ-)ÔøΩ+ÔøΩÔøΩwO^ÔøΩua-	ÔøΩÔøΩﬁèÔøΩÔøΩj;ÔøΩÔøΩÔøΩ?ÔøΩÔøΩÔøΩÔøΩÔøΩjÔøΩHÔøΩHÔøΩ5DwÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ4CwÔøΩQg;ÔøΩÔøΩGWÔøΩ≈æuÔøΩqÔøΩÔøΩ+]	ÔøΩÔøΩQ›≠ÔøΩGy,ÔøΩdÔøΩ÷å2(ÔøΩÔøΩÔøΩ1…ú!ÔøΩÔøΩwf&EdÔøΩ:u«òÔøΩÔøΩÔøΩÔøΩÔøΩy'œàÔøΩsÔøΩY‡•∑ÔøΩs7ÔøΩRÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩPÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩd9ÔøΩ9ÔøΩÔøΩÔøΩXÔøΩÔøΩÔøΩBsRÔøΩÔøΩFÔøΩvÔøΩ#W5yÔøΩ`ÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩqÔøΩD)ÔøΩÔøΩDhÔøΩÔøΩÔøΩ&ÔøΩÔøΩ‡æçzVVv-oÔøΩÔøΩÔøΩqÔøΩÔøΩjÔøΩÔøΩÔøΩgdÔøΩÔøΩHÔøΩHÔøΩÔøΩÔøΩ GXZÔøΩgÔøΩÔøΩ+:ÔøΩÔøΩ_aÔøΩÔøΩÔøΩxÔøΩ	sÔøΩÔøΩÔøΩ|'iÔøΩ>ÔøΩÔøΩÔøΩÔøΩÔøΩsÔøΩÔøΩ8ÔøΩwyÔøΩ—é:`xoÔøΩ|ÔøΩÔøΩeÔøΩÔøΩÔøΩ_jÔøΩ	kÔøΩÔøΩ""ÔøΩÔøΩ[ÔøΩg	ÔøΩ<ÔøΩÔøΩ=ÔøΩ_ÔøΩÔøΩb-M\=#o5RÔøΩ&ÔøΩÔøΩÔøΩ“£ÔøΩÔøΩÔøΩ4HdÔøΩHpÔøΩNf}ÔøΩQcÔøΩ%xﬁ¨T4ÔøΩnÔøΩ/ÔøΩe;,ÔøΩA…°ÔøΩÔøΩM?ÔøΩ/SÔøΩKdÔøΩ\:ÔøΩ>ÔøΩÔøΩÔøΩÔøΩÔøΩOœ•%j ÔøΩÔøΩ,ÔøΩQ!ÔøΩÔøΩÔøΩ(ÔøΩÔøΩÔøΩÔøΩoV%nÔøΩÔøΩ{BÔøΩÔøΩÔøΩqÔøΩ#ÔøΩOÔøΩÔøΩeÔøΩ JIÔøΩÔøΩÔøΩ2NÌÑºÔøΩÔøΩ,#?/:ÔøΩXÔøΩxÔøΩ*ÔøΩIS5)ÍÖÉ!tÔøΩÔøΩJÔøΩ?pÔøΩ&ÔøΩnQf7ÔøΩYu][ÔøΩÔøΩ3ÔøΩj>ÔøΩUÔøΩÔøΩm!?ÔøΩQÔøΩmÔøΩÔøΩÔøΩ4ÔøΩÔøΩVbÔøΩ(ÔøΩ”ö48QÔøΩÔøΩ%ÔøΩnÔøΩnÔøΩ|ÔøΩ7-&rncÔøΩÔøΩÔøΩUÔøΩÔøΩÔøΩxSÔøΩÔøΩÔøΩaÔøΩÔøΩQÔøΩ1ÔøΩiÔøΩÔøΩvÔøΩÔøΩ#ÔøΩÔøΩCLÔøΩÔøΩÔøΩÔøΩ@ÔøΩ7%ÔøΩ,ÔøΩÔøΩÔøΩÔøΩeIÔøΩLÔøΩÔøΩÔøΩÔøΩBNKÔøΩÔøΩtÔøΩQÔøΩAcÔøΩ;ÔøΩÔøΩﬂßÔøΩÔøΩÔøΩÔøΩÔøΩ<5FÔøΩÔøΩ8ÔøΩÔøΩ|ÔøΩÔøΩ>ÔøΩÔøΩyÔøΩÔøΩÔøΩÔøΩ""ÔøΩÔøΩCÔøΩÔøΩeIÔøΩÔøΩ5uo)ÔøΩÔøΩs%H)%ÔøΩKÔøΩÔøΩÔøΩÔøΩÔøΩOÔøΩ_ÔøΩNÔøΩÔøΩÔøΩbÔøΩ||+”ûÔøΩMÔøΩÔøΩÔøΩ[ÔøΩÔøΩ?WÔøΩ3hÔøΩÔøΩ'ÔøΩVÔøΩÔøΩ+ÔøΩ5ÔøΩ7ÔøΩÔøΩÔøΩÔøΩ“úÔøΩfÔøΩVÔøΩÔøΩÔøΩNO/ÔøΩÔøΩÔøΩÔøΩÔøΩ>8ÔøΩ:.`0PÔøΩÔøΩ6T	*ÔøΩÔøΩ.-ÔøΩÔøΩÔøΩÔøΩu6!ÔøΩ·ìπjv~6ÔøΩ-@ÔøΩÔøΩÔøΩqqeÔøΩ(&ÔøΩÔøΩ;ÔøΩÔøΩ`ÔøΩ!ÔøΩÔøΩÔøΩw)]ÔøΩÔøΩAhÔøΩÔøΩÔøΩÔøΩ)AÔøΩÔøΩ?ÔøΩÔøΩÔøΩC ›´ÔøΩÔøΩ`ÔøΩÔøΩaÔøΩÔøΩÔøΩ.LvÔøΩ?R9ÔøΩb'ÔøΩÔøΩÔøΩ ]ÔøΩ‡´çRÔøΩÔøΩÔøΩÔøΩ|YÔøΩ3d<ÔøΩÔøΩh!ÔøΩ !ÔøΩÔøΩÔøΩ3w0ÔøΩm}_ÔøΩ*ƒ°ZH‘íÔøΩcÔøΩJÔøΩLÔøΩÔøΩ^ÔøΩOvÔøΩÔøΩB=ÔøΩmjÔøΩÔøΩÔøΩpÔøΩ)8ÔøΩU>ÔøΩe«ç/'ÔøΩ ÔøΩfÔøΩÔøΩrÔøΩÔøΩÔøΩEÔøΩ/OvÔøΩ!0	ÔøΩ0ÔøΩjIÔøΩÔøΩrÔøΩq~&ÔøΩÔøΩﬁ∫ÔøΩÔøΩÔøΩÔøΩﬁ¶wOÔøΩ1n ÔøΩÔøΩSÔøΩxÔøΩÔøΩÔøΩÔøΩt'ÔøΩiNÔøΩ~ÔøΩhÔøΩÔøΩOÔøΩ)ÔøΩlÔøΩ’ìƒÉ""ÔøΩÔøΩÔøΩnHÔøΩBÔøΩÔøΩvmÔøΩÔøΩÔøΩzE«®ÔøΩÔøΩÔøΩi6÷úÔøΩGÔøΩÔøΩÔøΩplrs>caÔøΩÔøΩU>ÔøΩÔøΩÔøΩ%ÔøΩÔøΩpÔøΩÔøΩI ÔøΩ;ÔøΩ\	mÔøΩÔøΩ=A0ÔøΩÔøΩÔøΩrGpwÔøΩÔøΩo	QÔøΩÔøΩ>ÔøΩVÔøΩ @k WÔøΩÔøΩÔøΩZÔøΩÔøΩÔøΩÔøΩÔøΩOÔøΩÔøΩbÔøΩ1fÔøΩÔøΩOÔøΩmÔøΩÔøΩMÔøΩﬁçeÔøΩCAÔøΩÔøΩJ/ÔøΩÔøΩÔøΩ éGVEÔøΩcFÔøΩoÔøΩÔøΩAÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩIÔøΩ\NÔøΩÔøΩi!ÔøΩOÔøΩÔøΩ+tÔøΩÔøΩÔøΩnÔøΩCÔøΩÔøΩÔøΩtÔøΩÔøΩ@ÔøΩGTÔøΩÔøΩoÔøΩ=+ÔøΩÔøΩÔøΩÔøΩU ÔøΩ çM{ÔøΩÔøΩ#ÔøΩÔøΩMÔøΩLÔøΩ:ÔøΩÔøΩÔøΩÔøΩ`~ÔøΩP'ÔøΩÔøΩ%ÔøΩÔøΩÔøΩ2ÔøΩqÔøΩÔøΩÔøΩizÔøΩÔøΩ_ÔøΩÔøΩÔøΩYÔøΩÔøΩaÔøΩÔøΩ:ÔøΩIÔøΩÔøΩÔøΩ«ºÔøΩÔøΩÔøΩÔøΩ?lÔøΩÔøΩÔøΩ#ÔøΩZÔøΩÔøΩÔøΩÔøΩGÔøΩYÔøΩÔøΩL8?ÔøΩ€ó}ÔøΩsÔøΩUÔøΩOÔøΩ8ÔøΩÔøΩ IÔøΩÔøΩ6ÔøΩ2ÔøΩÔøΩ ÔøΩhÔøΩPÔøΩÔøΩ`ÔøΩ=7vÔøΩÔøΩÔøΩ&ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩv]oÔøΩX!?gÔøΩÈë™`ÔøΩs}3ÔøΩeTvÔøΩ1ÔøΩÔøΩÔøΩÔøΩN÷èU”£ÔøΩÃñXuKmwÔøΩÔøΩÔøΩ""ÔøΩÔøΩÔøΩfiÔøΩÔøΩÔøΩÔøΩ,ÔøΩXÔøΩÔøΩQ`{ÔøΩyÔøΩÔøΩÔøΩ{KE:ÔøΩÔøΩF_*ÔøΩÔøΩ;ÔøΩÔøΩÔøΩSÔøΩUÔøΩnÔøΩÔøΩ5ÔøΩh,ÔøΩ[ÔøΩ`kÔøΩP 2?ÔøΩmkÔøΩÔøΩÔøΩwÔøΩh,Bd…úÔøΩ`s!ÔøΩÃΩ!=lÔøΩ)ÔøΩYbÔøΩ@rcÔøΩ`‰™•Z-ÔøΩlÔøΩOÔøΩÔøΩÔøΩÔøΩ3h√¥IÔøΩW9ÔøΩ2Àµ'ÔøΩ@1!ÔøΩÀªÔøΩ3ÔøΩ=-ÔøΩKÔøΩÔøΩÔøΩÔøΩÔøΩvW:*ÔøΩ]uÿäuzSÔøΩÔøΩ,ÔøΩ‡ø†\`)|ÔøΩ5e}9uÔøΩ]ÔøΩIÔøΩjQNÔøΩTÔøΩÔøΩÔøΩyÔøΩÔøΩÔøΩÔøΩPÔøΩ5!vÃ¨m ÔøΩ*ÔøΩÔøΩdÔøΩ~ÔøΩ)ÔøΩÔøΩ%ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩjÔøΩÔøΩOÔøΩÔøΩ ÔøΩDÔøΩÔøΩ$CÔøΩÔøΩÔøΩÔøΩ\ °ÔøΩ|?ÔøΩe;y@EtQÔøΩÔøΩÔøΩ]~ﬂñ/eÔøΩÔøΩÔøΩ[ÔøΩPC“ØÔøΩÔøΩSrÔøΩ;ÔøΩQÔøΩ!ÔøΩÔøΩT[9ÔøΩ|-ÔøΩÔøΩ=ÔøΩÔøΩÔøΩÔøΩ4ÔøΩÔøΩu8XFÔøΩÔøΩ ÔøΩÔøΩÔøΩAe[ÔøΩ*ÔøΩÈ©ßJlÔøΩ0ÔøΩ«¶ÔøΩ[ÔøΩ1ÔøΩÔøΩ|ÔøΩÔøΩwÔøΩEAÔøΩmLÔøΩÔøΩoÔøΩÔøΩÔøΩÔøΩxEÔøΩI""PVDÔøΩÔøΩÔøΩ EÔøΩ”©ÔøΩÔøΩÔøΩÔøΩEÔøΩcÔøΩÔøΩiÔøΩWÔøΩÔøΩ)ÔøΩ7ÔøΩ7{ÔøΩÔøΩ€°+ÔøΩ=ÔøΩÔøΩ^ÔøΩÔøΩqÔøΩÔøΩŸÆÔøΩ…∫Y$CIH8svÔøΩ‰©íqÔøΩ~!ÔøΩÔøΩÔøΩ8ÔøΩj“ì'WÔøΩz2%ÔøΩ[◊ßÔøΩ^ÔøΩ ÔøΩ5ÔøΩÔøΩGLÔøΩÔøΩ8„É®=$ ÔøΩﬁ™ÔøΩ}ÔøΩ?UÔøΩnÔøΩ…ÑÔøΩ_ÔøΩ=psÔøΩ%Qn-ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩÔøΩÔøΩÔøΩ5ÔøΩU(ÔøΩ<0ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩQ=ÔøΩÔøΩ$ÔøΩ9ÔøΩjcÔøΩ{ÔøΩwÔøΩuÔøΩ!^ÔøΩs5ÔøΩÔøΩ{ÔøΩ/ÔøΩBÔøΩhKÔøΩÔøΩ	ÔøΩÔøΩÔøΩ~/ÔøΩe8,$ÔøΩÔøΩÔøΩAÔøΩ*ÔøΩ^LbÔøΩÀØ)ÔøΩ(x:ÔøΩÔøΩﬁ©ÔøΩÔøΩyÔøΩÔøΩfÈÖöNÔøΩÔøΩÔøΩÔøΩSÔøΩ+ÔøΩÀõ+s`ÔøΩTlÔøΩËî¶ÔøΩ4„™òÔøΩ@/ÔøΩÔøΩÔøΩÔøΩsTÔøΩÔøΩfÔøΩ( k<ÔøΩÔøΩÔøΩÔøΩGSÔøΩÔøΩ|ÔøΩÃâÔøΩwÔøΩ.ÔøΩÔøΩÔøΩ]qlÔøΩÃÆÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩ9ÔøΩ ÔøΩÔøΩ[vÔøΩ›¢ÔøΩrÔøΩTÔøΩ$ÔøΩÔøΩÔøΩÔøΩ(fÔøΩ{[htUÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩmiÔøΩÔøΩuWÔøΩÔøΩ<ÔøΩ~ÔøΩÔøΩﬁ§ÔøΩYÔøΩLÔøΩÔøΩI(&ÔøΩÔøΩ–öoÔøΩÔøΩÔøΩ]ÔøΩÔøΩ!]ÔøΩÔøΩ""2ÔøΩÔøΩ9ÔøΩÔøΩ%_d{yÔøΩ+${gK&kÔøΩ+ÔøΩh ÔøΩMÔøΩ}ÔøΩpÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩIÔøΩÔøΩÔøΩKÔøΩÔøΩm9ÔøΩ#ÔøΩ–ÇÔøΩÔøΩcÔøΩEÔøΩÔøΩÔøΩ/ÔøΩÔøΩe|‘©»Äﬁ®7ÔøΩÔøΩs ÔøΩ.ÔøΩ'nÔøΩOU)P“øSÔøΩWzÔøΩ8ÔøΩpÔøΩz}dVÔøΩÔøΩÔøΩ%∆Ö=D“ïÔøΩÔøΩÔøΩ⁄∏RÔøΩÔøΩ7ÔøΩÔøΩMÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ&ÔøΩNÔøΩLÔøΩÔøΩ(ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩLÔøΩD-ÔøΩÔøΩ/#YÔøΩÔøΩ\2F#ÔøΩ÷üÔøΩÔøΩzFÔøΩÔøΩÔøΩÔøΩÔøΩW ÔøΩArÔøΩÔøΩ&DI√¶3""ÔøΩÔøΩYÔøΩ#ÔøΩÔøΩ7NÔøΩXcÔøΩ~ÔøΩÔøΩÔøΩÔøΩN_ÔøΩÔøΩkÔøΩ3ÔøΩ2ÔøΩÔøΩ=ÔøΩÔøΩÔøΩg#ÔøΩÔøΩfÔøΩsiNÔøΩGÃÇÔøΩÔøΩÔøΩHÔøΩ\EÔøΩÔøΩÔøΩÔøΩÔøΩ,IÔøΩÀèÔøΩY3ÔøΩ3ÔøΩpÔøΩÔøΩqÔøΩq8.ÔøΩÔøΩÔøΩÔøΩDÔøΩÔøΩÔøΩÔøΩRÔøΩtÔøΩÔøΩ;ÔøΩÔøΩÔøΩÔøΩÔøΩsÔøΩ3ÔøΩÔøΩIKiÔøΩÔøΩÔøΩ(ÔøΩÔøΩxÔøΩ&ÔøΩÔøΩOÔøΩÔøΩ6+ÔøΩ]ÔøΩ4ÔøΩIQ:ÔøΩmÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ-ÔøΩ1ÔøΩBÔøΩx|ÔøΩ$PÔøΩqÔøΩ)>6ÔøΩÔøΩÔøΩÔøΩ9ÔøΩÔøΩhYÔøΩ&y~GÔøΩÔøΩ⁄ÆA{FÔøΩÔøΩ2+ÔøΩ""fÔøΩGÔøΩÔøΩ ÔøΩÔøΩÔøΩÔÖûcÔøΩQÔøΩÔøΩ;ÔøΩlnH UaÔøΩƒ∞FÔøΩ{PiÔøΩÔøΩCÔøΩ^2ÔøΩÔøΩ;p4ÔøΩ3ÔøΩ^FÔøΩ‘¥ÔøΩÔøΩNxÔøΩÔøΩTÔøΩÔøΩÔøΩCBÔøΩÔøΩUÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩFNÔøΩ?[ÔøΩÔøΩÔøΩÔøΩÔøΩ4+QÔøΩi^d ÔøΩ&ÔøΩ'ÔøΩKﬁìÔøΩÔøΩÔøΩ\ÔøΩIÔøΩ<ÔøΩÔøΩoÔøΩÔøΩnX=ÔøΩB\ÔøΩ2T.c(—Ñ?g#ÔøΩÔøΩÔøΩÔøΩÔøΩnﬂ¥+ÔøΩ4ÔøΩfÔøΩxÔøΩÔøΩÔøΩ&}ÔøΩÔøΩ∆òPeÔøΩ2?PÔøΩ8ÔøΩ)3ÔøΩÔøΩ80wÔøΩ;ÔøΩÔøΩÔøΩ'ÔøΩzÔøΩÔøΩÔøΩÔøΩ5wÔøΩeÔøΩÔøΩgÔøΩxÔøΩﬂ©8ÔøΩhDÀîÔøΩ~ÔøΩcÃ∫ÔøΩÔøΩe9?:x2ÔøΩ>ÔøΩÔøΩ{ÔøΩjÔøΩVÔøΩgÔøΩÔøΩH.ÔøΩeÔøΩ)4bÔøΩa;bcÔøΩ ÔøΩxÔøΩÔøΩÔøΩ3CÔøΩÔøΩQÔøΩ Jm“íÔøΩ>ÔøΩÔøΩSI]Na≈ÉÔøΩÔøΩÔøΩkoÔøΩœ§ÔøΩÔøΩqÔøΩ$dÔøΩÔøΩ?}ÔøΩÔøΩ√ΩWaÔøΩÔøΩ ÔøΩÔøΩSÔøΩÔøΩÔøΩÔøΩ€§ÔøΩ)XuÔøΩÔøΩ4zÔøΩ@ÔøΩÔøΩoÔøΩÔøΩÔøΩ#ÔøΩ|ÔøΩ4T¬úÔøΩ)ÔøΩÔøΩfÔøΩ€úuÔøΩg_ÔøΩpÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩpÔøΩw@ÔøΩ|QÔøΩtÔøΩÔøΩeÔøΩÔøΩÔøΩÔøΩEZ‹éÔøΩÔøΩaÔøΩÔøΩÔøΩ ÔøΩ#}ÔøΩqÔøΩ[ÔøΩsuFsÔøΩu·¶™œ®!ÔøΩ9◊±	ÔøΩÔøΩyCÔøΩdÔøΩ÷éiÔøΩJÔøΩNÔøΩ\ÔøΩÔøΩXMÔøΩÔøΩJÔøΩÔøΩNÔøΩÔøΩ}wÔøΩÔøΩR~qÔøΩKÔøΩÔøΩÔøΩÔñï0\ÔøΩ52ÔøΩÔøΩ7ÔøΩÔøΩÔøΩ9fÔøΩÔøΩ+ÔøΩÔøΩÔøΩz_ÔøΩ3ÔøΩÃ≤ÔøΩÔøΩSÔøΩÔøΩ@«ôÔøΩ#ÔøΩVÔøΩuÔøΩTjÔøΩ])SHÔøΩ=ÔøΩÔøΩÔøΩ<=?ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ1ÔøΩOÔøΩŒÜÔøΩvÔøΩ	%ÔøΩJÔøΩÔøΩ+0ÔøΩÔøΩrÔøΩK0ÔøΩÔøΩÔøΩÔøΩÔøΩ zHu]ÔøΩÔøΩ@j34ÔøΩVÔøΩ8ÔøΩÔøΩ_ÔøΩÔøΩÔøΩeÔøΩŸûÔøΩÔøΩÔøΩ◊πÔøΩCJÔøΩÔøΩÔøΩÔøΩLÔøΩÔøΩÔøΩÔøΩc0ÔøΩÔøΩÔøΩpÔøΩÔøΩ^≈ÜÔøΩV^ÔøΩw8FVÔøΩÔøΩ	_ÔøΩ7ÔøΩ!7ÃªÔøΩ(Jp_ÔøΩqÔøΩÔøΩM[!ÔøΩ?ÔøΩÔøΩCÔøΩÔøΩDÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩ ÀùI4‘æSÔøΩ(ÔøΩÔøΩ<ÔøΩkÔøΩÔøΩÔøΩÔøΩÔøΩ.YG…Ör$ÔøΩ,1ÔøΩhÔøΩÔøΩ+ÔøΩ4 ¢ÔøΩÔøΩBMÔøΩuHÔøΩANÔøΩ]/KÔøΩ≈áfÔøΩ5CGzJIÔøΩ/sQt ÔøΩÔøΩ,ÔøΩÔøΩÔøΩÔøΩÁ•ûoIÔøΩÔøΩfÔøΩmÔøΩÔøΩÔøΩ(r{c""8""ÔøΩÔøΩuÔøΩÔøΩC@w3ÔøΩÔøΩÔøΩÊª¥ÔøΩ|)ÔøΩÔøΩÔøΩÔøΩ>dlZ&ÔøΩ ÔøΩÔøΩ<=GGÔøΩoÔøΩÔøΩ	p$""ÔøΩ3ÔøΩÔøΩ.zÔøΩkÔøΩÔøΩÔøΩÔøΩÔøΩQÔøΩuÔøΩ4ÔøΩÔøΩÔøΩui\KÔøΩ:ÔøΩ6ÔøΩmÔøΩÔøΩÔøΩRÔøΩÔøΩ ∑BÔøΩÔøΩÔøΩ…ìÔøΩÔøΩ9ÔøΩ”óÔøΩaÔøΩÔøΩ^ÔøΩL_ÔøΩ&ÔøΩÔøΩÔøΩLÿ•+ÔøΩÔøΩÔøΩ~AÔøΩDÔøΩÔøΩi:]u#ÔøΩlÔøΩÔøΩÔøΩÔøΩ∆≥ÔøΩ3ÔøΩÔøΩÔøΩÔøΩ[ÔøΩÔøΩ5ÔøΩÔøΩW6J*ÔøΩÔøΩÔøΩrÔøΩ,›µ""ÔøΩ ÑÔøΩ[?›Ω40`c S7DÔøΩ1uBÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩ1^ÔøΩX_FÔøΩÔøΩÔøΩ5JÔøΩm1ÔøΩ^gÔøΩÔøΩU3ÔøΩÔøΩ:rÔøΩY6ÔøΩMÔøΩ ÔøΩ5ÔøΩ%ÔøΩKÔøΩmÔøΩoÔøΩÔøΩﬂàÔøΩ ÔøΩGÔøΩ5Jﬂ≤ÔøΩ/&-ÔøΩÔøΩÔøΩ4uh,G?ÔøΩÔøΩÔøΩ+wÔøΩ]‹ØOkÔøΩqT-ÔøΩÔøΩAÔøΩ{ÔøΩT=ÔøΩJŸìceOOÔøΩÔøΩÔøΩÔøΩ/ÔøΩ,ÔøΩÔøΩÔøΩydÔøΩÔøΩÔøΩƒìÔøΩÔøΩtÔøΩÔøΩÔøΩqÔøΩbÔøΩuÔøΩ|ÔøΩÔøΩÔøΩÔøΩÔøΩÏÇ¥ÔøΩZÔøΩeÔøΩÿ®ÔøΩ`ÔøΩ<ÔøΩÔøΩÌãÉ>KÔøΩÔøΩqNÔøΩ=ÔøΩy^ÔøΩTÔøΩÔøΩ[UÔøΩ7r#X	ÔøΩÔøΩÔøΩ †ÔøΩÔøΩÔøΩÔøΩœµ`ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩW7ÔøΩz$!gÔøΩÔøΩ,fTÔøΩÀóÔøΩÔøΩÔøΩ ÔøΩ«û]ÔøΩÔøΩM ÔøΩ)ÔøΩÔøΩÔøΩZ_ÔøΩ#kdÔøΩ<ÔøΩÔøΩÔøΩ-HÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩGÔøΩÔøΩÔøΩÔøΩRXÔøΩÔøΩ.CÔøΩ\AÔøΩ\KÔøΩ@ÔøΩwÔøΩÔøΩÔøΩÔøΩRÔøΩÔøΩPŒ•ÔøΩ!ÔøΩÔøΩ0ÔøΩ~ÔøΩ>V |ÔøΩIÔøΩÔøΩSQk2ÔøΩ/ÔøΩÔøΩ0ÔøΩÔøΩNÔøΩÔøΩ‘£ÔøΩÔøΩÔøΩÔøöÔøΩÔøΩÔøΩÔøΩCÔøΩÔøΩÔøΩcNbÔøΩÔøΩÔøΩyÔøΩÔøΩÔøΩÔøΩÔøΩgÔøΩbFB#ÔøΩaiÔøΩÔøΩ â?ÔøΩ\…±ÔøΩÔøΩPÔøΩJÔøΩ∆êÔøΩmÔøΩdÔøΩmÔøΩÔøΩ*ÔøΩ◊¢ÔøΩ5ÔøΩÔøΩ_gvtÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩTJÔøΩÔøΩÔøΩGÔøΩGÔøΩ%4ÔøΩXÔøΩ#ÔøΩÔøΩÔøΩ.ÔøΩ6?ÔøΩkÔøΩkÔøΩﬂó,ÔøΩÔøΩÔøΩÔøΩ$ÔøΩ éÔøΩÔøΩÔøΩ'ÔøΩ`ÔøΩ0ÔøΩÔøΩ	vÔøΩÔøΩo6PÔøΩÔøΩ9ÔøΩKÔøΩEÔøΩÔøΩx]ÔøΩÔøΩ@JÔøΩR V‚´ïÔøΩbÔøΩÔøΩsXÔøΩÔøΩB[ÔøΩÔøΩ_ÔøΩ;ÔøΩMÔøΩ@ÔøΩJ-ÔøΩÔøΩvI7ÔøΩÔøΩÔøΩ'ÔøΩQÔøΩ}ÔøΩÔøΩÔøΩS7]<ÔøΩJÔøΩgÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩQ%ÔøΩvWÔøΩ<ÔøΩÔøΩÔøΩkÔøΩw)ÔøΩÔøΩÔøΩvÔøΩ=ÔøΩÔøΩ◊Ö#ÔøΩÔøΩwÔøΩ_YÔøΩFÔøΩ1ÔøΩÔøΩÔøΩ""ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩiÔøΩÔøΩ=ÔøΩÔøΩ cÔøΩ|ÔøΩ@RÔøΩC^CM&ÔøΩÔøΩœîÔøΩeÔøΩ–ÖGÔøΩÔøΩ-ÔøΩÔøΩÔøΩ4dÔøΩ-ÔøΩSYÔøΩÔøΩÔøΩ`RÔøΩÔøΩÔøΩÔøΩ'/SPCÔøΩ{ÔøΩ;ÔøΩÔøΩ9ÔøΩÔøΩÔøΩƒåÁ¢∞CKÔøΩÔøΩXÔøΩ""ÔøΩOÔøΩxÔøΩ+ÔøΩÔøΩ+)?=ÔøΩlÔøΩWÔøΩS ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ /ÔøΩÔøΩ1ÔøΩ[ÔøΩÔøΩ6ÔøΩ{ÔøΩÔøΩÔøΩ8EjÔøΩÔøΩÔøΩÔøΩGÔøΩÔøΩÔøΩ3RqÔøΩ—àÔøΩf~ÔøΩÔøΩÔøΩk_yÔøΩÔøΩÔøΩÏ∫ÇFS!~ÔøΩ=ÔøΩG ÔøΩ%""6BÔøΩtK-ÔøΩ'CÔøΩJWÔøΩ@ÔøΩwÔøΩeÔøΩfÔøΩglqÀæÔøΩÔøΩÔøΩÔøΩf[Ã∂ÔøΩÔøΩYÔøΩtÔøΩ §(≈óQÔøΩisÔøΩÔøΩÔøΩ8ÔøΩNh…ë‹©ÔøΩÔøΩÔøΩ &6ÔøΩFÔøΩ6ÔøΩMÔøΩÔøΩÔøΩCzÔøΩÔøΩxÔøΩÔøΩÔøΩÔøΩz}XwÔøΩtÔøΩÔøΩÔøΩlÔøΩX)ÔøΩÔøΩ+}ÔøΩPÔøΩÔøΩ]ÔøΩwÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩlKwÔøΩ+OÔøΩÔøΩÔøΩÔøΩ ÔøΩBpfOÔøΩ–¥ÔøΩ,zmÔøΩiÔøΩÔøΩÎé† &ÔøΩÔøΩ3ÔøΩÔøΩ’§ÕîwÔøΩ	Ωπ≥ÔøΩÔøΩdÔøΩ=ÔøΩ1uJÔøΩÔøΩNÔøΩFÔøΩÔøΩeÔøΩ{ÔøΩÔøΩYÔøΩÀª^GÔøΩ`ÔøΩ *1ÔøΩÔøΩÔøΩIOBÔøΩ$nÔøΩÔøΩÔøΩ¬ãÔøΩÔøΩÔøΩrdA`ÔøΩ;*ÔøΩlÔøΩdÔøΩHÔøΩPÔøΩtÔøΩÔøΩÔøΩj1~!$.ÔøΩ-xÔøΩÔøΩ~ÔøΩÔøΩG'ÔøΩ>_ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩTXÔøΩÔøΩql&R!ÔøΩmgÔøΩÔøΩ7w]ÔøΩ^‘ßÔøΩ.∆ÑÔøΩÔøΩ53ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩmÔøΩÔøΩyÔøΩ9ÿÖ÷éÔøΩVfÔøΩc?~ÔøΩÔøΩÔøΩÔøΩw""ÔøΩÔøΩ<[ÔøΩÔøΩÔøΩ/ÔøΩÔøΩÔøΩÔøΩRÔøΩ=x…à/ÔøΩA0! :ÔøΩmƒòÔøΩ\dÔøΩÔøΩ.ÔøΩcÔøΩ%ÔøΩÔøΩDx[ÔøΩ!ÔøΩÔøΩaÔøΩLÔøΩÔøΩÔøΩjÔøΩ_ÔøΩZÔøΩ8rÔøΩzÔøΩbÔøΩ«Æ	ƒ∏ÔøΩÔøΩ87gÔøΩ5k""^ÔøΩhÔøΩÔøΩ6E9ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÍÖ¨ÔøΩÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩOÔøΩ<ÔøΩWÔøΩ{T ïÔøΩ∂î§tÔøΩ]ÔøΩ,pÔøΩÔøΩÔøΩ÷ùSIfÔøΩÔøΩ`IuÔøΩYÔøΩÔøΩR.ÔøΩÔøΩÔøΩBSaÔøΩÔøΩmÔøΩD<ÔøΩÔøΩÔøΩ“ÉÔøΩ`:ÔøΩ3ÔøΩÔøΩÔøΩgXÔøΩeÔøΩVÔøΩÔøΩWÔøΩo_ÔøΩNÔøΩÔøΩÔøΩÔøΩyÔøΩÔøΩÔøΩÔøΩÔøΩgÔøΩdÔøΩÔøΩÔøΩN?ÔøΩGX$ÔøΩÔøΩÔøΩÔøΩÔøΩLÔøΩlÔøΩYÔøΩÔøΩÔøΩS ÔøΩ+ÔøΩ=YÔøΩ ÔøΩÔøΩÔøΩAvtÔøΩ?&ÔøΩ#ÔøΩ4ÔøΩÔøΩ⁄±ÔøΩÔøΩ7ÔøΩ-ÔøΩÔøΩÔøΩP{ÔøΩÔøΩSÔøΩgÔøΩLÔøΩBÔøΩÔøΩRÔøΩ8ÔøΩÔøΩÔøΩxÔøΩÔøΩÔøΩ0ÔøΩÔøΩ]ÔøΩ*ZÔøΩÔøΩU%ÔøΩÔøΩV ∏Ç≠ÔøΩZ@ÔøΩÔøΩÔøΩÔøΩKEÔøΩ÷≥«†ÔøΩÔøΩh'ÔøΩ'""ÔøΩX.ÔøΩÔøΩÔøΩlDÔøΩVÔøΩAÔøΩÔøΩ3]zF=ÔøΩ(ÔøΩÔøΩ^ÔøΩKCÔøΩjmÔøΩEÔøΩÔøΩ8:Tza¬ûÔøΩÔøΩyTaÔøΩÔøΩÔøΩÔøΩ-ÔøΩ ≤ƒ†ÔøΩÔøΩÔøΩÔøΩLÔøΩÔøΩ$hÔøΩÔøΩÔøΩÔøΩH^ÔøΩjÔøΩÔøΩÔøΩgGÔøΩÔøΩÔøΩ}ÔøΩÔøΩc#)%ÔøΩÔøΩÔøΩÔøΩP~TÔøΩÔøΩhÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ&ÔøΩdÔøΩÔøΩÔøΩ,ÔøΩÔøΩ~F.0KÔøΩÔøΩÔøΩ€µÔøΩicG(ÔøΩÔøΩ…à,ÔøΩ'cÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ	ÔøΩ7ÔøΩÔøΩ+ÔøΩÔøΩÔøΩ}ÔøΩ≈ΩoÔøΩÔøΩÔøΩÔøΩ.NÔøΩÔøΩÔøΩMﬂ£SÔøΩ}sb]nÔøΩÔøΩ5ÔøΩ»ÉjÔøΩÔøΩSÔøΩTbtÔøΩLhÔøΩÔøΩÔøΩ io?ÔøΩ ÔøΩ n8sÔøΩÔøΩ8ÔøΩb;ÔøΩ\ÔøΩ9nZÔøΩÔøΩÔøΩÔøΩQ ÔøΩ_ÔøΩÔøΩÔøΩÔøΩG-«±i%ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ8ÔøΩcO⁄±ÔøΩ>ÔøΩÔøΩh)MÔøΩ]ÔøΩ{ÔøΩÔøΩN""]!ÔøΩ0ÔøΩ+ÔøΩQK#ÔøΩcvÔøΩ.ÔøΩi7ÔøΩ ÔøΩ7!≈öxX%¬§ÔøΩÔøΩ-aYÔøΩ2P ÔøΩÔøΩa'C5=-ÔøΩ:S@ÔøΩlÔøΩÔøΩÔøΩA//K0FEÔøΩh|ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩDÔøΩ#ÔøΩÔøΩÔøΩÔøΩ@ÔøΩi}ÔøΩeaÔøΩnY(W/gÔøΩÔøΩ3ÔøΩaÔøΩdÔøΩmÔøΩÔøΩÔøΩ5ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ5ÔøΩÔøΩpÔøΩÔøΩÔøΩÔøΩÔøΩiÔøΩ0ÔøΩÔøΩÔøΩd0ÔøΩÿõÔøΩ9√õŒ°@}ÔøΩÔøΩÔøΩ,WTÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩVÔøΩÔøΩÔøΩÔøΩ4R_ÔøΩ 2T>xÔøΩÔøΩcÔøΩu~>ÔøΩÔøΩÔøΩZnÔøΩ$ÔøΩÔøΩÔøΩÔøΩcJgÔøΩ1ÔøΩÔøΩÔøΩ,~ÔøΩrÔøΩ/ÔøΩÔøΩÔøΩvÔøΩÔøΩÔøΩ@ÔøΩÔøΩLÔøΩ ÔøΩ+WÔøΩ#ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ∆Å9ÔøΩÔøΩÔøΩ@""a7ÔøΩÔøΩvxBÔøΩ3ÔøΩ∆±4ZÔøΩvÔò£ÔøΩÔøΩ7(oÔøΩÔøΩNÔøΩÔøΩÔøΩ+w]|/(ÔøΩÔøΩUÔøΩ:ÔøΩÔøΩ^ÔøΩÔøΩ.ÔøΩÕ≤ÔøΩJÔøΩÔøΩ#d6#ÔøΩ0V÷∫ÔøΩ`bjÔøΩmIVÔøΩÔøΩXÔøΩ·ïêÔøΩÔøΩÔøΩqÔøΩmhÔøΩ1ÔøΩÔøΩ""qÔøΩ8YÔøΩH4W/ÔøΩ	ÔøΩ'XkQÔøΩÔøΩ%ÔøΩÔøΩÔøΩKOAÔøΩÔøΩÔøΩ][ÔøΩÔøΩ|jJÔøΩÔøΩÔøΩÔøΩÔøΩOÔøΩÔøΩ'@ÔøΩÔøΩ6%ÃâÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩB^ÔøΩÔøΩÔøΩÔøΩÔøΩ\ÔøΩ,ÔøΩÔøΩiÃø""ÔøΩÔøΩ€ØÔøΩÔøΩ&ÔøΩ&jÔøΩ;ÔøΩdkee8!LÔøΩÔøΩ1ÔøΩ""7Gs4ÔøΩÁ∏ïÔøΩÔøΩ6iÔøΩÔøΩÔøΩÔøΩIÔøΩÔøΩÔøΩÔøΩpÔøΩCÔøΩÔøΩÔøΩÔøΩ(ÔøΩ .ÔøΩ4ÔøΩÔøΩYÔøΩÔøΩÔøΩ vÔøΩ ∂ÔøΩÔøΩGÔøΩÔøΩ9iÔøΩÔøΩrÔøΩÔøΩÔøΩtÔøΩÔøΩÔøΩÔøΩﬁ≥ÔøΩ#ÔøΩÔøΩ:-/ÔøΩ1ÔøΩ%ÔøΩnÔøΩJÔøΩ;ÔøΩÔøΩÔøΩÔøΩ++ÔøΩÔøΩÔøΩÔøΩ“¶ÔøΩÔøΩC›§ÔøΩÔøΩqSJÔøΩÔøΩ#ÔøΩxuÔøΩÔøΩÔøΩÔøΩ_ÔøΩRÔøΩ1D&ÔøΩÔøΩ ÔøΩÔøΩlÔøΩv]ÔøΩCÔøΩUÔøΩ!√º2ÔøΩÔøΩÔøΩYÔøΩÔøΩÔøΩ∆å!ÔøΩ1RÔøΩ44ÔøΩ[ÔøΩÔøΩÔøΩ9ÔøΩR{pÔøΩÔøΩÔøΩ'	ÔøΩÔøΩ|ÔøΩ9ÔøΩzÔøΩÔøΩﬂ∞	ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩz>7ÔøΩmÔøΩÔøΩjÔøΩÔøΩT€ötÔøΩbÔøΩÔøΩ“∂ﬁ¥ÔøΩ>E.ÔøΩÔøΩ\7ÔøΩvÔøΩÔøΩM32""ÔøΩ?:5ÔøΩ1ÔøΩv[ÔøΩ;xÔøΩÔøΩ(ÔøΩNÔøΩÔøΩÔøΩplÔøΩÔøΩ7ÔøΩ#ÔøΩG:XÔøΩe&ÔøΩY+ÔøΩuÔøΩ^ÔøΩÔøΩCÔøΩ1ÔøΩÔøΩzÔøΩÔøΩzwÔøΩÔøΩ7 ÔøΩ\ÔøΩÔøΩÔøΩÔøΩŒåÔøΩÔøΩ;ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ4ÔøΩGÔøΩ1ÔøΩÃª<ÔøΩÔøΩÔøΩ[7ÔøΩÔøΩxÔøΩÔøΩÔøΩÔøΩYÔøΩf%:AJe[TÔøΩÔøΩ3vÔøΩZy\ÔøΩÔøΩz""ÔøΩÔøΩÔøΩR|ÔøΩÔøΩObÔøΩ]ÔøΩÔøΩpÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩaÔøΩXÔøΩX/oÔøΩ‹∞ÔøΩÔøΩÔøΩQÔøΩÔøΩT€êÔøΩÔøΩÔøΩ\BÔøΩCÔøΩVÔøΩ/ÔøΩÔøΩ}ÔøΩeKÔøΩz>oÔøΩjÔøΩ7GÔøΩÔøΩSfÔøΩÔøΩÔøΩÔøΩÔøΩX|$ÔøΩÔøΩÔøΩÔøΩÔøΩiÔøΩÔøΩÔøΩÔøΩV2*XÔøΩ=ÔøΩ""ÔøΩÔøΩ`◊ß#BÔøΩ]ÔøΩÔøΩÔøΩlwXÔøΩ&ÔøΩ}ÔøΩÔøΩÔøΩÔøΩ4ÔøΩ<ÔøΩÔøΩÔøΩN V\ÔøΩ}WÔøΩÔøΩ:6ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÀÉÔøΩÔøΩzZzÔøΩUkoÔøΩ*‡∑üÔøΩÔøΩ{|?ZÔøΩÔøΩ>ÔøΩÔøΩÔøΩﬂ≤ÔøΩÔøΩÔøΩfÔøΩÔøΩ VÔøΩ~Q=~ÔøΩÔøΩ2,mÔøΩxsÔøΩ,KÔøΩ_S{ÔøΩÔøΩÔøΩÔøΩ ÔøΩ_ÔøΩÔøΩmuxÔøΩÔøΩyÔøΩ+ÔøΩÔøΩ‘¢D~ÔøΩvÔøΩU'ÔøΩÔøΩ7ÔøΩg8GnÔøΩ>vÔøΩÔøΩHÔøΩ–ªÔøΩ|ÔøΩÔøΩs?ÔøΩKÔøΩxÔøΩE2~ÔøΩLc9]ÔøΩÔøΩÔøΩ+[.{ÔøΩÔøΩKR)SÔøΩÔøΩÔøΩÔøΩ3ÔøΩ}ÔøΩ/’ÄÔøΩ$ÔøΩ)ÔøΩ}ÔøΩ|ÔøΩZÔøΩ	ÔøΩÔøΩÔøΩcLÔøΩtÔøΩkÔøΩyhÔøΩÔøΩDÔøΩÔøΩÔøΩtÔøΩGÔøΩ)ÔøΩ;3ZÔøΩÔøΩtWÔøΩÔøΩÔøΩÔøΩÔøΩZ[ÔøΩÔøΩ1gÔøΩÔøΩHÔøΩÔøΩÔøΩZÔøΩDXÔøΩYMbfÔøΩ6kÔøΩ`ÔøΩÔøΩlzUËÑª&cÔøΩZÔøΩAHÔøΩSGEÔøΩgvXÔøΩ`)ÔøΩRÔøΩh]uTÔøΩaAzÔøΩÔøΩÔøΩReÔøΩÔøΩB1eÔøΩÔøΩ'ÔøΩ.ÔøΩWÔøΩG^RÔøΩsÔøΩarqÔøΩvÔøΩSÔøΩÔøΩÔøΩ9ÔøΩÔøΩnÔøΩeÔøΩNÔøΩ2ÔøΩv?ÔøΩC>ÔøΩw#ÔøΩÔøΩxÔøΩjN20ÔøΩÔøΩhÔøΩ.ÔøΩÔøΩkÔøΩÔøΩÔøΩÕåRÔøΩ`ÔøΩ!	""ÔøΩ(ÔøΩ;hÔøΩÔøΩÔøΩ0{ÔøΩHÔøΩÔøΩ qÔøΩRUÔøΩÔøΩÔøΩÔøΩKÕõÔøΩÔøΩw.0""ÔøΩÔøΩYÔøΩÿΩHÔøΩ~ÔøΩeÔøΩÔøΩÔøΩY≈≠7LÔøΩ!XÔøΩÔøΩfÔøΩÔøΩZ^@ÔøΩo3Eÿä|ÔøΩÔøΩGÔøΩÔøΩÔøΩƒè!ÔøΩ”ê{ÔøΩÔøΩÔøΩÔøΩX@ÔøΩÔøΩ⁄úCeÔøΩmÔøΩ!ÔøΩœ≠ÔøΩÔøΩ∆öiÔøΩÔøΩÔøΩ ﬂÖÔøΩuÔøΩÔøΩÔøΩÔøΩÔøΩ*|ÔøΩnÔøΩÔøΩfÔøΩxÔøΩÔøΩÔøΩ'ÔøΩ9ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩEÔøΩÔøΩ@YiÔøΩÔøΩÔøΩÔøΩÔøΩo{ÔøΩRÔøΩÔøΩÔøΩ>`ÔøΩ⁄áÔøΩÔøΩÔøΩ:ÔøΩ'&ÔøΩÔøΩÔøΩy3vÔøΩÔøΩÔøΩ4qÔøΩÔøΩÔøΩjÔøΩ+-ÔøΩ~jÔøΩLcÔøΩUÔøΩ}ÔøΩ NÔøΩÔøΩgvÔøΩFyÔøΩÔøΩÔøΩŸπ ÔøΩflÔøΩÔøΩÔøΩÔøΩ{ÔøΩOÔøΩ]ÔøΩ7JÔøΩeÔøΩtÔøΩÔøΩO8sÔøΩÔøΩÔøΩÔøΩÔøΩﬂ≥ÔøΩÔøΩÔøΩ8ÔøΩUÔøΩÔøΩ,ÔøΩÔøΩ3ÔøΩo_ÔøΩKÔøΩÔøΩÃå—çÔøΩ6NÔøΩ”§~ÔøΩ aLÔøΩÔøΩÔøΩdGÔøΩ)ztÔøΩEÔøΩ1SmpÔøΩÔøΩÔøΩ ÔøΩAÔøΩ_BÔøΩÔøΩi, ÔøΩ48ÔøΩSÔøΩ ÔøΩÔøΩÔøΩÔøΩ%dÔøΩÔøΩÔøΩÔøΩÔøΩT4ÔøΩ|xÔøΩÔøΩÔøΩÔøΩÔøΩ‰ò¨ÔøΩmGÔøΩgÔøΩÔøΩ?ÔøΩÔøΩÔøΩK“ßÔøΩTuÔøΩ,ÔøΩD]}'€ØÔøΩÔøΩ^ÔøΩÔøΩ{ÔøΩGÔøΩ)ÔøΩÔøΩMÔøΩGÔøΩM$ÔøΩ»á<:ÔøΩÃò!#ÔøΩÔøΩÔøΩW!kÔøΩKÔøΩ""}5`ÔøΩ–åÔøΩI3ÔøΩL9ÔøΩ@ÔøΩÔøΩ’ç9ÔøΩÔøΩÔøΩ|j 2ÔøΩÔøΩBÔøΩÔøΩlÔøΩÔøΩÔøΩ9ÔøΩ'XtÔøΩzÔøΩÔøΩÔøΩ08ÔøΩ ÔøΩÔøΩÔøΩ0ÔøΩÔøΩVÔøΩ}ÔøΩÔøΩÔøΩÔøΩÔøΩ9ÔøΩÔøΩi9JÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩk<ÔøΩÔøΩÀÄÔøΩÔøΩt^ÔøΩBÔøΩ-ÔøΩÔøΩÔøΩ~ÔøΩÔøΩAJÔøΩ&ÔøΩG}^^$ÔøΩÔøΩ–álÔøΩ ÔøΩÔøΩ !QUGÔøΩ+ÔøΩ'ÔøΩÔøΩqj~ÔøΩÔøΩ4ÔøΩR)H,~ÔøΩÔøΩ ÔøΩ~ÔøΩ.ÔøΩÔøΩ\ÔøΩÔøΩÔøΩ>ÔøΩnÔøΩ$ÔøΩVÔøΩ1ÔøΩabÔøΩÔøΩiÔøΩÔøΩuÔøΩÔøΩ<ÔøΩÔøΩÔøΩÔøΩÔøΩpÔøΩÔøΩNÔøΩÔøΩÔøΩÔøΩ<ÔøΩÔøΩ4ÔøΩDÔøΩSÔøΩwÔøΩnÔøΩ…£J>ÔøΩÔøΩÔøΩ+ÔøΩLÔøΩÔøΩÔøΩ5o*ÔøΩÔøΩ}ÔøΩ/YÔøΩ mÔøΩhÔøΩ=urÔøΩÔøΩ9/C`gÔøΩ-;‘∫ÔøΩÂÅãÃÉÔøΩySZIÔøΩqjÔøΩÔøΩÔøΩ.ÔøΩÔøΩÔøΩczÔøΩQÔøΩ⁄åÔøΩÔøΩ–õÔøΩÔøΩ!ÔøΩJÔøΩ‹úÔøΩÔøΩ_eÔøΩÔøΩŸüÔøΩ0}ÔøΩÔøΩÔøΩf, #ÔøΩLVÔøΩÔøΩLÔøΩÔøΩ7\qiÔøΩÔøΩÔøΩÔøΩ:LÔøΩjÔøΩ-NÔøΩ""ZÔøΩ\ÔøΩ&ÔøΩ◊§ÔøΩ7ÔøΩÔøΩÔøΩ 4ÔøΩÔøΩoÔøΩaÔøΩ:ÔøΩED\zÔøΩ‡†©ÔøΩU7}kI7R<ÔøΩÔøΩBÔøΩÔøΩÔøΩÔøΩ+)‹®bÔøΩÔøΩG[ÔøΩqÔøΩÔøΩÔøΩ1rÔøΩÔøΩÔøΩn<4{ÔøΩDÔøΩ'ÔøΩE| óCÔøΩezZÔøΩxCÔøΩdÔøΩ`ÔøΩ4ÔøΩÔøΩ}vlÔøΩq/ÔøΩÔøΩÔøΩÔøΩ3ÔøΩ$=lÔøΩœà«°ÔøΩEuÔøΩÔøΩÔøΩDÔøΩ7d}8ÔøΩÔøΩa”±ÔøΩÔøΩaÔøΩÔøΩQÔøΩG$dÔøΩÔøΩURQ	ÔøΩÔøΩQZÔøΩÔøΩyÔøΩ&DÔøΩÔøΩ0 ÔøΩÔøΩÔøΩÔøΩÔøΩU\ÔøΩ»™7BÔøΩÔøΩÔøΩ)ÔøΩÔøΩRNÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩjUÔøΩÔøΩƒ¥ÔøΩÔøΩMÔøΩ;ÔøΩ~¬∂ÔøΩÔøΩ$ÔøΩÔøΩÔøΩ5ÔøΩÔøΩXÔøΩ.ÔøΩeÔøΩÔøΩÔøΩ*SÔøΩÔøΩCÔøΩG_!’µO8ÔøΩÔøΩ^ÔøΩÔøΩDÔøΩÔøΩÔøΩZÔøΩz=◊ê(ÔøΩe2oÔøΩ_iQÔøΩÔøΩ∆óÔøΩÔøΩ–´ÔøΩXÔøΩpvCÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩ}%ÔøΩÔøΩz7ÔøΩZ]ÔøΩÔøΩ{P]ÔøΩÔøΩÔøΩ(ÔøΩÔøΩRrÔøΩYÔøΩMÔøΩRÔøΩÔøΩÔøΩÔøΩÔøΩ%ÔøΩ[ÔøΩÔøΩÔøΩÔøΩMPÔøΩHÔøΩ⁄µQÔøΩ^ZÔøΩSÔøΩFÔøΩPÔøΩE)ÔøΩÔøΩ@aÔøΩÔøΩBÔøΩy{tÔøΩÔøΩNÔøΩËêòÔøΩKÔøΩﬁ∞œÉÔøΩÔøΩtœîÔøΩrÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩi1ÔøΩÔøΩwÔøΩÀ°ÔøΩÔøΩdÔøΩÔøΩJÔøΩHÿåÔøΩDÔøΩ >ÔøΩ1fÔøΩ‹ãbÔøΩÔøΩÔøΩ+ÔøΩiZÔøΩ'≈´ﬁ∫ÔøΩ;ÔøΩÔøΩÔøΩ)ÔøΩq0ÔøΩ>ÔøΩ<ÔøΩ~ÔøΩÔøΩVÔøΩ4I)ZKÔøΩÊ¥¨dÔøΩZÔøΩ~ÔøΩÔøΩÔøΩ'K~(ÔøΩ’ö ÔøΩŒæ_,ÔøΩ<+ÔøΩÔøΩÔøΩnÔøΩÔøΩÔøΩK ÔøΩPnkÔøΩnÔøΩXÔøΩ!skÔøΩÔøΩÔøΩÔøΩ""ÔøΩ[+ÔøΩÕ∫UÔøΩnQÔøΩ[ÔøΩ›•,ÔøΩ+ÔøΩijl·Ü™e9ÔøΩ-yÔøΩ./E%IÔøΩ,ÔøΩÔøΩMÔøΩGÔøΩÔøΩj~’ì!E'M€≥[hÔøΩÔøΩÔøΩFÔøΩn~zÔøΩÔøΩ1zÔøΩzuÔøΩÔøΩF-AÔøΩJÔøΩÔøΩÔøΩ$rVo÷ö)^–µÔøΩFyÔøΩd⁄èyÔøΩq[ÔøΩÔøΩÔøΩ;dÔøΩÔøΩÔøΩÔøΩÔøΩ!BÔøΩÔøΩÔøΩÔøΩÔøΩ(h.ÔøΩDÔøΩ~ÔøΩÔøΩXÔøΩ ÔøΩÔøΩÔøΩ,!jUO	rÔøΩGÔøΩP0KÔøΩID-ÔøΩLÔøΩoÔøΩÔøΩtlÔøΩAA—´ÔøΩÔøΩ10ÔøΩÔøΩÔøΩ7ÔøΩ_vÔøΩQyÔøΩÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩYÔøΩ+jÔøΩ)pÔøΩ_ÔøΩ^ÔøΩÔøΩ+ÔøΩÔøΩ8OfH:ÔøΩ÷ØÕêÔøΩÔøΩÔøΩÔøΩDxÔøΩÔøΩVÔøΩ-ÔøΩÔøΩ0ÔøΩP|ÔøΩÔøΩNÔøΩÔøΩJÔøΩkÔøΩu9ÔøΩ^«£«îÔøΩÔøΩ?%ÔøΩŸÅÔøΩ}ÔøΩk€èÔøΩÔøΩq[ÔøΩ*jÔøΩvÔøΩ!ÔøΩÔøΩ@ZÔøΩvÔøΩtÔøΩsÔøΩxÔøΩ’ïÔøΩÔøΩoWY ÔøΩ[ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩHsÔøΩÔøΩTeÔøΩÔøΩ&ÔøΩUÔøΩÔøΩÔøΩzÔøΩÔøΩÔøΩÂåånÔøΩÔøΩ;ÔøΩ	’£=ÔøΩrbÔøΩÔøΩ""ÔøΩÔøΩÔøΩ“£ÔøΩX~ÔøΩ{NÔøΩÔøΩÔøΩ0ÔøΩÔøΩ?#SbYÔøΩvÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ…çDÔøΩÔøΩÔøΩp'OÔøΩ ÔøΩÔøΩÔøΩ ÔøΩYÔøΩÔøΩÔøΩ.OÔøΩÔøΩnMÔøΩuÔøΩ,ÔøΩ3ÔøΩ[ÔøΩÔøΩÔøΩuÔøΩÔøΩB!ÔøΩÔøΩ)ÔøΩÔøΩw%ÔøΩÔøΩfw:ÔøΩÔøΩhÔøΩ5·Ñ∫dÔøΩ.vÔøΩ~)ÔøΩÔøΩÔøΩMÔøΩÔøΩU^rÔøΩÔøΩÔøΩÔøΩÔøΩx/ÔøΩÔøΩÔøΩ!?^>tEÔøΩ&ÔøΩÔøΩCGÔøΩÔøΩz,ÔøΩBÔøΩÔøΩ}pKÔøΩÔøΩﬁèOÔøΩÔøΩOGoÔøΩÔøΩdÔøΩ7?ÂæâL«áÔøΩsC'ÔøΩE#0bÔøΩ|h\qÔøΩAl$ÔøΩÔøΩŒªoÔøΩyÔøΩ6ÔøΩÔøΩLÔøΩPqYÔøΩÔøΩ1ÔøΩWÔøΩ^+}ÔøΩgﬁêÔøΩÔøΩÔøΩÔøΩŒòÔøΩÔøΩJ|ÔøΩÔøΩÔøΩÔøΩ4ÔøΩÔøΩÔøΩK>~ -ÔøΩÔøΩÔøΩÔøΩTÔøΩÔøΩzÔøΩJÔøΩÔøΩÔøΩÔøΩ—±oI;K—Ö›ÖÔøΩ.[ÔøΩ$ÔøΩÔøΩGÔøΩ ø[ÔøΩw%ÔøΩrOÔøΩ÷æÔøΩÔøΩfÔøΩÔøΩÔøΩ	ÔøΩÔøΩÔøΩÔøΩWwAÔøΩÔøΩ[N<0ÔøΩ$ÔøΩÔøΩNÔøΩÔøΩAI ÔøΩ@ÔøΩÔøΩVÔøΩÔøΩÔøΩÔøΩ B?ÔøΩÔøΩcÔøΩ[ÔøΩ%ÿµÔøΩFÔøΩY√©ÔøΩ{ÔøΩÔøΩ ÔøΩÔøΩÔøΩRÔøΩIgÔøΩ~ÔøΩMRÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩw”îHÔøΩÔøΩ""ÔøΩt60ÔøΩÔøΩÔøΩjÔøΩÔøΩ2ÔøΩsÔøΩaÔøΩÔøΩ`ÔøΩ(ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩbETÔøΩqÔøΩÔøΩÔøΩÔøΩU]ÔøΩ ÔøΩiÔøΩÔøΩÔøΩcÔøΩmÔøΩÔøΩÔøΩYJÔøΩOÔøΩ»ÄFvÔøΩg_ÔøΩÔøΩ;ÔøΩCÔøΩÔøΩ/ÔøΩ,1ÔøΩvÔøΩn;~iÔøΩÔøΩÔøΩÔøΩœÉKbÔøΩpÔøΩÔøΩÔøΩ(ÔøΩÔøΩÔøΩ@ ÔøΩqtTÔøΩT‹ÇÔøΩ""ÔøΩ KÔøΩ\ÔøΩ+ÔøΩÔøΩG÷ûÔøΩi4QÔøΩp¬ëql/ÔøΩÔøΩ@	Á∑ê ÇÔøΩÔøΩÔøΩsÔøΩxÔøΩ0ÔøΩÔøΩ%ÔøΩÔøΩs ÔøΩ_ÔøΩ0ZÔøΩÔøΩÔøΩmÔøΩÔøΩ >ÔøΩ0ÔøΩÔøΩRMÔøΩZÔøΩÔøΩÔøΩYXÔøΩ}ÔøΩ)o	CÔøΩÔøΩÔøΩÔøΩŒÑÔøΩÔøΩVÔøΩÔøΩÔøΩ5%QgÔøΩ,QÔøΩ7ÔøΩ,ÔøΩ(ZŒøÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩO""ÔøΩVÔøΩÔøΩÔøΩXeÔøΩxÔøΩV#<ÔøΩÔøΩ~N8qÔøΩXÔøΩmSÔøΩÔøΩÔøΩÔøΩ""@ÔøΩ&`ÔøΩ.ÔøΩÔøΩ@ÔøΩÔøΩÔøΩ{ÔøΩÔøΩ>ÔøΩÔøΩL^€πÔøΩ5ÔøΩS?ÔøΩÔøΩÔøΩSU⁄Öe|ÔøΩÔøΩyÔøΩ-ÔøΩÔøΩTÔøΩÔøΩ;ÔøΩÔøΩÔøΩRÔøΩHDÔøΩÔøΩjTÔøΩÔøΩÔøΩ5.ÔøΩ+6ÔøΩ;XÔøΩÔøΩÔøΩ0')ÔøΩÔøΩM ºÔøΩv7ÔøΩrÔøΩÔøΩyÔøΩÔøΩ""eÔøΩÔøΩ kÔøΩ5ÔøΩlFÔøΩÔøΩÔøΩÔøΩPÔøΩÔøΩ√íÔøΩÔøΩÔøΩc<S 6ÔøΩÔøΩEÔøΩuj"" .5tjEÔøΩÔøΩÔøΩJHSAÔøΩJÔøΩÔøΩÔøΩÔøΩÔøΩ`ÔøΩ ÔøΩÔøΩTn5WWXÔøΩYÔøΩMtÔøΩÔøΩÔøΩÔøΩSSŒåÔøΩÔøΩR^5Ààr!»òÔøΩd]ÔøΩÔøΩÔøΩÔøΩÔøΩ;7ÔøΩÔøΩ/ÔøΩÔøΩSÔøΩÔøΩÔøΩÔøΩW)v@ÔøΩÔøΩ$<=m÷ÆÔøΩ.ÔøΩ\√®ÔøΩÔøΩ+YÔøΩÔøΩÔøΩRÔøΩÔøΩ(ÔøΩÔøΩ ÔøΩoSÔøΩÔøΩÔøΩÔøΩdÔøΩ,ÔøΩÔøΩ:I4 DÔøΩPÔøΩq$MÔøΩIm‘•BHÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ\JÔøΩW(f :(1ÔøΩÔøΩM>ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ:,!ÔøΩÿüÔøΩÔøΩ$ÔøΩÔøΩ8ÔøΩÔøΩ\ÔøΩS11ÔøΩÔøΩ4ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ	5ÔøΩRÔøΩtÔøΩb3ÔøΩÔøΩvÔøΩ 3eÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩcGÔøΩÔøΩ÷©UZ2ÔøΩNÔøΩV%ÔøΩ{A!ÔøΩÔøΩ8ÔøΩ;ÃßAv%	F-ÔøΩZÔøΩPfÔøΩÔøΩzÔøΩÔøΩt(ÔøΩ!√âbÔøΩƒß ^!ÔøΩ∆∞ÔøΩÔøΩtÔøΩwÔøΩÔøΩÔøΩ 1bNÔøΩÔøΩ6ÔøΩÔøΩÔøΩÔøΩÔøΩ5+ÔøΩÔøΩ~ÔøΩ«•-iÔøΩx7ÔøΩ.zÔøΩÔøΩ$wŒòIÔøΩgÔøΩgÔøΩ OÔøΩÔøΩÔøΩ'XÔøΩÔøΩÔøΩÔøΩÔøΩl<$ÔøΩÔøΩÔøΩÔøΩÔøΩh“àJÔøΩÔøΩÔøΩ9/ÔøΩJtÔøΩ$LÔøΩÔøΩNÔøΩÕøÔøΩXÔøΩÔøΩÔøΩÔøΩRÔøΩÔøΩ=ÔøΩFÔøΩwÔøΩÔøΩGCÔøΩ9?ÔøΩ&UvÔøΩÔøΩxÔøΩÔøΩÔøΩ.ÔøΩXw—πÔøΩÔøΩzÔøΩmÔøΩÔøΩ0ÔøΩBe1ÔøΩ%<ÔøΩÔøΩÔøΩTÔøΩ~GÔøΩÔøΩÔøΩÔøΩÔøΩ,}•ÉßÔøΩÔøΩÔøΩÔøΩÔøΩËÅù8ÔøΩiÔøΩÔøΩÔøΩNÔøΩÔøΩU‡≥¥ÔøΩﬁçÔøΩyÔøΩjÔøΩEMiÔøΩÔøΩ`ÔøΩ ÔøΩ%%kÔøΩÔøΩÔøΩÔøΩÔøΩu)ÔøΩ	ÔøΩÔøΩ.1ÔøΩÓááÔøΩÔøΩXÔøΩHuzÔøΩ'.jvKÔøΩ}1#ÔøΩg[:ÔøΩ–úÔøΩŸçÔøΩ.ÔøΩÔøΩd4ÔøΩÔøΩ7ÔøΩIÔøΩÔøΩ,^ÔøΩEÔøΩ'ÔøΩ7aQÔøΩÔøΩÔøΩÔøΩsÔøΩ*ÔøΩÔøΩÔøΩ0 cÔøΩKHÔøΩ#8ÔøΩŸé’¥. ?ÔøΩÔøΩ3 ÔøΩÔøΩÔøΩÔøΩ ÔøΩOsr√èIÔøΩÔøΩOiÔøΩÔøΩÔøΩÔøΩHÔøΩÔøΩ |ÔøΩÔøΩÔøΩÔøΩ""ÔøΩÔøΩ>ÔøΩÔøΩÔøΩlÔøΩLÔøΩÔøΩÔøΩÔøΩﬁ§qÔøΩÔøΩ]ÔøΩÔøΩÔøΩJÔøΩÔøΩÔøΩ/ÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩ[ÔøΩÔøΩÔøΩ>ÔøΩoÔøΩfx& ÔøΩÔøΩgzOÔøΩÔøΩÔøΩzÔøΩ#√ásÔøΩ0M^ÔøΩ›çÔøΩÔøΩ%ÔøΩD~i…ÅÔøΩ&ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩnÔøΩ)C'H ÔøΩpÔøΩG-ÔøΩ[ÔøΩE6ÔøΩÔøΩœä¬¨ÔøΩÔøΩÔøΩ!_8œ¥ÔøΩÔøΩ<ÔøΩÔøΩÔøΩÔøΩÔøΩmÔøΩnÔøΩ+uÔøΩÔøΩƒ®LÔøΩÔøΩ?3ÔøΩ[AZ[T|ÔøΩmf“ìÔøΩÍ∏ºI(‘ìÔøΩ6›âÔøΩLÔøΩÔøΩmÔøΩ(ÔøΩÔøΩÔøΩbÔøΩÔøΩÔøΩ0ÔøΩÔøΩMUvÔøΩÔøΩ [ÀírH0ÔøΩÔøΩÈë¢DÔøΩ_ÔøΩ»ú?diÔøΩ“üÔøΩÔøΩ,ÔøΩÔøΩWÔøΩÔøΩbX!S%ÀïX ÔøΩ¬°ÔøΩS5ÔøΩLÔøΩA6""+ÔøΩÔøΩH9ÔøΩ2SÔøΩLÔøΩqMÔøΩÔøΩF'ÔøΩÔøΩÔøΩHDÔøΩ…™ÔøΩSÔøΩ ÔøΩÔøΩÔøΩvÔøΩZÔøΩÔøΩ¬äÔøΩÔøΩ}9ÔøΩ`\ÔøΩÔøΩÔøΩ‘çÔøΩ|*-BÔøΩÔøΩÔøΩÔøΩÔøΩb-/ÔøΩwZ,ÔøΩ ÔøΩc|.ÔøΩÔøΩb<ÔøΩÔøΩ""ÔøΩŒûÔøΩÔøΩ#ÔøΩ]ÔøΩ5ÔøΩÔøΩÔøΩ>ÔøΩjÔøΩÔøΩÔøΩÔøΩ}ÔøΩÔøΩÔøΩDVÔøΩ ÀçkÔøΩÔøΩÔøΩXÔøΩ9 kÔøΩN$ÔøΩÔøΩÔøΩÔøΩÔøΩLI.=xÔøΩFG’•;wÔøΩ—≠FkLÔøΩ.ÔøΩÔøΩxÕºÔøΩÔøΩ1ÔøΩ[qÔøΩ_ÔøΩÔøΩBÔøΩÔøΩbzÔøΩÔøΩ9ÔøΩ,ÔøΩÔøΩVcÔøΩÔøΩC8jÔøΩp’ùœóÔøΩPÔøΩQÔøΩ.YÔøΩÔøΩ?ÔøΩÔøΩ5ÔøΩÔøΩÔøΩ70ÔøΩÔøΩ4ÔøΩ*ÔøΩÔøΩ*ÔøΩÔøΩ/ÔøΩÔøΩ1ÔøΩÔøΩ»â2r:ÔøΩJ6ÔøΩÔøΩ}2ÔøΩÔøΩsÔøΩÔøΩdÔøΩÔøΩÔøΩg#ÔøΩgv}-ÔøΩÔøΩÔøΩOÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ\ÔøΩÔøΩDÔøΩÔøΩÔøΩÔøΩ1ÔøΩ&ÔøΩÔøΩÔøΩ-,ÔøΩÔøΩÔøΩÔøΩ^ÔøΩ«ßsÔøΩLÔøΩÔøΩ3ÔøΩÔøΩÔøΩqmzÔøΩÔøΩ6ÔøΩÔøΩƒäÔøΩeouÔøΩ/*ÔøΩÔøΩ+ÔøΩÔøΩÔøΩÔøΩEÔøΩ$ ?[ ÔøΩLÔøΩÔøΩ1ÔøΩ_ÔøΩ3qMjFwÔøΩ\ÔøΩ%ÔøΩ~sÔøΩÃÑÔøΩ?uAÀÜT|ÔøΩ,nSÔøΩÔøΩ rÔøΩ?FDÔøΩi¬•ÔøΩÔøΩ9aÔøΩI{∆§*ÔøΩÔøΩÔøΩÍèéÔøΩ+zÔøΩr'6(ÔøΩÔøΩÔøΩÔøΩ7ÔøΩÔøΩ3ÔøΩ:ÔøΩÔøΩÔøΩÔøΩiAÔøΩÔøΩ3'$.{6ÔøΩÔøΩaÔøΩÔøΩ^ÔøΩÔøΩÔøΩjZ)/ÔøΩaPÔøΩÔøΩ?oÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩo]ÔøΩÔøΩDÔøΩMÔøΩGIÔøΩMÔøΩ*lÔøΩ`ÔøΩb.ÔøΩÔøΩÔøΩ'ÔøΩ*ÔøΩ`rÔøΩÔøΩÔøΩÔøΩÔøΩ:ÔøΩ∆ªÔøΩÔøΩVqÔøΩÔøΩL$FÔøΩMv#l)FÔøΩ_IuÔøΩgÔøΩÔøΩÔøΩ3ÔøΩÔâû8fÔøΩDÔøΩÔøΩ[OŸõQÔøΩÔøΩ4=9@$ÔøΩœΩÔøΩÔøΩÔøΩBÔøΩÔøΩ|[zÔøΩfÔøΩTÔøΩÔøΩfÔøΩÔøΩIÔøΩÓãµ◊ÖÔøΩXxÔøΩÔøΩ/ÔøΩ≈áÔøΩÔøΩÔøΩy^E@ÔøΩÔøΩÔøΩÔøΩÔøΩEÔøΩZ,ÔøΩÔøΩÔøΩÔøΩÔøΩœõÔøΩÔøΩ‰ΩúRÔøΩÔøΩ:ÔøΩ2ÔøΩOÔøΩÔøΩYÔøΩ=ÔøΩcBÊä°ÔøΩÔøΩÔøΩÔøΩe1<ÔøΩÔøΩBbÔøΩ3ÔøΩrÔøΩÔøΩYÔøΩÔøΩxÔøΩHÔøΩ&hÔøΩ3ÔøΩÔøΩJÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩXa(ÔøΩAiÔøΩœ´ÔøΩÔøΩx""ÔøΩÔøΩ:ÔøΩ6ZA.ÔøΩÔøΩ$IÔøΩGÔøΩÔøΩWZ›ùÔøΩÀ¢ÔøΩÔøΩﬁæÕ≤ÔøΩ ÔøΩÔøΩ_ÔøΩZ3DÔøΩ‚ÉßÔøΩ8ÔøΩH”äÔøΩEÔøΩn?#ÔøΩÔøΩÔøΩ≈≠ÔøΩÔøΩIPÔøΩSKÔøΩÔøΩlb=ÔøΩ ÔøΩÔøΩÔøΩÔøΩ+ k/w)ÔøΩÔøΩ\ÔøΩxÔøΩÔøΩÔøΩNÔøΩÔøΩ‹îÿùÔøΩ%ÃûÔøΩÔøΩÔøΩo\ÔøΩ8QÔøΩ!ÔøΩÔøΩ}(ÔøΩÔøΩŒ¢ÔøΩ ÔøΩÔøΩ ÔøΩ0ÔøΩÔøΩ.ÔøΩÔøΩhVPÔøΩÔøΩ ÔøΩK9ÔøΩÔøΩ$ÔøΩÔøΩÔøΩJÔøΩÔøΩ$ÔøΩÔøΩÔøΩo""LÔøΩaÔøΩÔøΩÔøΩÔøΩÔøΩiÔøΩÔøΩ^ÔøΩqWÔøΩ&ÔøΩ	ÔøΩÔøΩV7ÔøΩ~~ÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩsÔøΩŒêÔøΩJ#ÔøΩÔøΩ ÔøΩ Z endstream endobj 51 0 obj << /Filter /FlateDecode /Length1 2716 /Length2 23973 /Length3 0 /Length 25491 >> stream xÔøΩÔøΩÔøΩTÔøΩÔøΩ.Lw(ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9ÔøΩCwIÔøΩtHIÔøΩÔøΩÔøΩHwÔøΩÔøΩtw#ÔøΩ wÔøΩ{ÔøΩÔøΩÔøΩÔøΩÔøΩZÔøΩ.ÔøΩÔøΩy;ÔøΩÔøΩÔøΩÔøΩÔøΩTEÔøΩQÔøΩÔøΩÔøΩ(eoÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩWTceÔøΩÔøΩÔøΩ3ÔøΩÔøΩÔøΩ!QRjXÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ(ÔøΩÔøΩNÔøΩÔøΩÔøΩv|ÔøΩ;M\ÔøΩ2	ÔøΩÔøΩÔøΩÔøΩ@ÔøΩ`eÔøΩrÔøΩrÔøΩ ÔøΩXXxÔøΩÔøΩÔøΩﬁâ aÔøΩfmPdÔøΩÔøΩÔøΩÔøΩÔøΩ(ÔøΩÔøΩ<ÔøΩÔøΩ-ÔøΩ\ÔøΩiÔøΩÔøΩ+ÔøΩ∆åÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ;@ÔøΩÔøΩdmfbP4qÔøΩ⁄Ç3ÔøΩÔøΩÔøΩ ÔøΩÔøΩfÔøΩ@ÔøΩÔøΩÔøΩÔøΩÔøΩrqqÔøΩcfvwwg2ÔøΩufÔøΩwÔøΩÔøΩe ÔøΩ[ÔøΩX‘ÄÔøΩ@'7ÔøΩ9ÔøΩWÔøΩ %[ÔøΩﬂù1!Q4ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ[ÔøΩÔøΩÔøΩ8`ÔøΩÔøΩhÔøΩÔøΩpÔøΩ3:ÔøΩÔøΩÔøΩ  eÔøΩÔøΩÔøΩÔøΩ 0 ÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩpÔøΩxÔøΩ dmÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ%ÔøΩÔøΩ(K)0ÔøΩxÔøΩ0 LÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ&n&ÔøΩ SÔøΩÔøΩ_ÔøΩÔøΩ ÔøΩDU&ÔøΩÔøΩiÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ≈ôÔøΩÔøΩÔøΩÔøΩEÔøΩ_aÔøΩSÔøΩÔøΩ3ÔøΩÔøΩÔøΩ⁄π8#ÔøΩÔøΩOÔøΩÔøΩ	hÔøΩ'ÔøΩﬂõ}ggÔøΩnÔøΩÔøΩÔøΩÔøΩÔøΩ3ÔøΩÔøΩ’ÑÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ+PVÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩdaaÔøΩÔøΩe @3+ÔøΩ_ÔøΩ5<ÔøΩ)YÔøΩÔøΩÔøΩz;ÔøΩ; ,ÔøΩM }ÔøΩ-ÔøΩÔøΩHÔøΩÔøΩ&n@ÔøΩÔøΩÔøΩ+ÔøΩÔøΩÔøΩOÔøΩ++ÔøΩÔøΩÔøΩÔøΩ` ÔøΩÔøΩÔøΩCÔøΩ,ZÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩ Ë±ÄÔøΩÔøΩ `ÔøΩÔøΩÔøΩÔøΩ70ÔøΩÔøΩÔøΩÔøΩ@ÔøΩÔøΩÔøΩÔøΩÔøΩ/ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ x3rÔøΩ ÔøΩ8Y ÔøΩÔøΩHÔøΩ ÔøΩÔøΩÔøΩÔøΩ0*&ÔøΩÔøΩÔøΩÒáØ¨ÔøΩÔøΩ=ÔøΩÔøΩÔøΩjÔøΩcÔøΩÔøΩÔøΩÔøΩÔøΩ! ÔøΩ?ÔøΩAÔøΩo,%{0kÔøΩ ÔøΩÔøΩ$ÔøΩgÔøΩd1ÔøΩÔøΩ?SÔøΩ/ÔøΩÔøΩ?ÔøΩÔøΩÔøΩÔøΩ#ÔøΩÔøΩ.HÔøΩÔøΩKMÔøΩÔøΩÔøΩÔøΩ6ÔøΩÔøΩyÔøΩc &ÔøΩÔøΩÔøΩ ÔøΩÔøΩg`ÔøΩÔøΩMÔøΩÔøΩÔøΩ""ÔøΩÔøΩÔøΩÔøΩÔøΩke]LÔøΩÔøΩ jg	ÔøΩwÔøΩÔøΩÔøΩRÔøΩ@sk3ÔøΩÔøΩÔøΩÔøΩ\ÔøΩ◊ïÔøΩÔøΩÔøΩ*ÔøΩÔøΩ÷ø+ FÔøΩjÔøΩÔøΩ|ZfÔøΩÔøΩÔøΩg0%ÔøΩRÔøΩÔøΩÔøΩﬂîÔøΩvfÔøΩÔøΩNÔøΩÔøΩÔøΩ`ÔøΩÔøΩdÔøΩ^2qÔøΩYÔøΩÔøΩhÔøΩÔøΩÔøΩÔøΩ f&;{ÔøΩ ‹û/ÔøΩÔøΩÔøΩ	ÔøΩÔøΩFÔøΩ8Ã¢ÔøΩD#. ÔøΩÔøΩoÔøΩ `ÔøΩÔøΩx ÔøΩÔøΩ/ÔøΩYÔøΩ_ÔøΩÔøΩ`ÔøΩÔøΩÔøΩXÔøΩ“øÔøΩYÔøΩ7b0ÔøΩÔøΩF fÔøΩÔøΩÔøΩOÔøΩ7ÔøΩSÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩE<ÔøΩ|*ÔøΩ8ÔøΩÔøΩoŒßÔøΩÔøΩÔøΩÔøΩFÔøΩ|ÔøΩÔøΩwÔøΩÔøΩ‹ªÔøΩoÔøΩEÔøΩ7ÔøΩÔøΩÔøΩ7◊¢ÔøΩ/ÔøΩ◊¢ÔøΩÔøΩÔøΩL~#ÔøΩÔøΩÔøΩoÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩpÔøΩ-gÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩ '2ÔøΩqÔøΩÔøΩÔøΩŸÉÔøΩLÔøΩ	ÔøΩ/ÔøΩÔøΩÔøΩÔÑø(ÔøΩlÔøΩ/dÔøΩdnÔøΩ8ÔøΩaÔøΩÔøΩ;(ÔøΩÔøΩÔøΩÔøΩÔøΩlÔøΩ@[sgÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩaÔøΩcÔøΩÔøΩ ÔøΩ@ÔøΩ_ÔøΩÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ[ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9ÔøΩ/s{ÔøΩ?ÔøΩ XÔøΩÔøΩÔøΩ~WÔøΩÔøΩfÔøΩÔøΩ`ÔøΩÔøΩÔøΩ,ÔøΩÔøΩpÔøΩ6@ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩUÔøΩlÔøΩh<ÔøΩﬂë9ÔøΩÔøΩvÔøΩSÔøΩCÔøΩÔøΩÔøΩÔøΩbÔøΩÔøΩÔøΩÔøΩQÔøΩÔøΩqÔøΩÔøΩs ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ;8ÔøΩÔøΩ	ÔøΩÔøΩÔøΩ√îÔøΩ/ÔøΩÔøΩÔøΩÔøΩsÔøΩÔøΩÔøΩ ruÔøΩ#'XÔøΩÔøΩ{ÔøΩÔøΩÔøΩ+ÔøΩÔøΩÔøΩÔøΩŒø\cÔøΩ%ÔøΩwÔøΩÔøΩÔøΩÔøΩS;ÔøΩoÔøΩÔøΩ*ÔøΩÔøΩÔøΩ≈¨ÔøΩÔøΩÔøΩ«Æ~-ÔøΩw-ÔøΩ`'gÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ8ÔøΩAÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ[ÔøΩ]ÔøΩÔøΩÔøΩp<[wÔøΩ?ÔøΩ1\ÔøΩÔøΩÔøΩ5ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩAQÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩNÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ	ÔøΩFÔøΩÔøΩﬁ†ÔøΩÔøΩÔøΩÔøΩÔøΩ~ÔøΩ@3ÔøΩÔøΩ{3ÔøΩ`ÔøΩÔøΩÔøΩÔøΩÔøΩ*QwÔøΩÔøΩQÔøΩIÔøΩmÔøΩTZFÔøΩyÔøΩVÔøΩ{4ÔøΩ$ÔøΩ åÔøΩUÔøΩk—§ÔøΩÔøΩWKÔøΩÔøΩ4W""$OÔøΩÔøΩ5ÔøΩaMÔøΩÔøΩÔøΩ>ÔøΩFÔøΩjÔøΩÔøΩÔøΩHsc8}? DÔøΩÔøΩ!2jÔøΩÔøΩÔøΩ<9ÔøΩhÔøΩÔøΩnÔøΩlÔøΩÔøΩÔøΩqtÔøΩASÔøΩ√ºuÔøΩÔøΩÔøΩÔøΩ[ÔøΩ8:ÔøΩÔøΩÔøΩSÔøΩ%ÔøΩÔøΩX:ÔøΩÔøΩÔøΩP4EÔøΩkÔøΩ9ÔøΩGÔøΩÔøΩHÔøΩ@ÔøΩqÔøΩ>uu=ÔøΩÔøΩÔøΩÔøΩD.ÔøΩÔøΩÔøΩ0ÔøΩÔøΩÔøΩ[wÔøΩ-ÔøΩnÔøΩkÔøΩLÔøΩÕπÔøΩ_ÔøΩÔøΩ cxÔøΩÔøΩ[l/Yw÷ªÔøΩpÔøΩoŒ£QÔøΩÔøΩ$ÔøΩ!eÔøΩÔøΩÔøΩ[zÔøΩÔøΩZÔøΩ]}ÔøΩWÔøΩÔøΩÔøΩ6÷≠ÔøΩ$@05AÔøΩVÔøΩ◊íz,#'2eÔøΩÔøΩfÔøΩHLÔøΩÔøΩÔøΩÔøΩD{mbÔøΩ-ÔøΩZÔøΩ6)ÔøΩÔøΩÔøΩ^ SÔøΩ:VÔøΩ ÔøΩÔøΩ5ÔøΩÀÉÔøΩÔøΩoBSÔøΩnÔøΩovÔøΩj	ÔøΩ ZÔøΩÔøΩÔøΩIZÔøΩE,-ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ@uheÔøΩ^1,ÔøΩ%ÔøΩ<¬öÔøΩxÔøΩÔøΩ›øaÔøΩ(`aÔøΩÔøΩÔøΩ&<ÔøΩÔøΩÔøΩ9ÔøΩÔøΩ-ÔøΩ=Uj[ÔøΩz=rÔøΩ0z	ÔøΩRz1mO9=-ÔøΩÔøΩbÔøΩ4ÔøΩÔøΩÔøΩMÔøΩÔøΩÔøΩÔøΩÔøΩKÔøΩÔøΩ_ ÔøΩÔøΩ *e>]+ÔøΩaÔøΩ(ÔøΩ$QHÔøΩÔøΩÔøΩ;ÔøΩ(‰êïÔøΩﬁûÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩg:ÔøΩ*ÔøΩlÔøΩÔøΩÔøΩW%ÔøΩ:ÔøΩdŸ´  ÔøΩÔøΩ6ÔøΩ€∏ÔøΩÔøΩEÔøΩ{ÔøΩ^ÔøΩÔøΩÔøΩ=\l0f]ÔøΩ;8ÔøΩCÔøΩÔøΩvÔøΩÔøΩrÔøΩÔøΩh$ÔøΩÔøΩÔøΩÔøΩnDSÔøΩ# 17RÔøΩÔøΩXtm ÔøΩÔøΩÕëÔøΩœèÔøΩÔøΩÔøΩÔøΩ‘ÖÔøΩÔøΩÔøΩa>ÔøΩsÔøΩÔøΩÔøΩUÔøΩ""8ÔøΩÔøΩÔøΩŸ™[ÔøΩoi P2^-ÔøΩPfÔøΩ,BÔøΩÔøΩÔøΩkÔøΩ=ÔøΩ#P◊∏ÔøΩ#ÔøΩZÔøΩËûùÔøΩ$ﬂ§ÔøΩÔøΩÔøΩqÔøΩ4 ÔøΩ9ÔøΩ“†AÔøΩTÔøΩÔøΩÔøΩÔøΩÔøΩ.ViÔøΩ""ÔøΩ-""V4ÔøΩEkÔøΩÔøΩOÔøΩWÔøΩaÔøΩÔøΩÔøΩ[ÔøΩYÔøΩÔøΩFe %ÔøΩ+ ÔøΩÔøΩX/3ÔøΩY6^ÔøΩ""ÔøΩ$ÔøΩ ÔøΩÔøΩÔøΩÔøΩ+XW!_ÔøΩ;t )V%ÔøΩÔøΩ5""ÔøΩÔøΩÔøΩ/ÔøΩÔøΩÔøΩÔøΩÔøΩ)ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ2ÔøΩYYJ|ÔøΩ^ÔøΩÔøΩmOjÔøΩÔøΩÔøΩ2VÔøΩNWrÔøΩWÔøΩÔøΩÔøΩjkÔøΩÔøΩ“ÖÔøΩ/ÔøΩÔøΩpÔøΩÔøΩÔøΩs`ÔøΩÔøΩÔøΩ.xÔøΩ{ÔøΩG<ÔøΩÔøΩﬁåÔøΩRÔøΩÔøΩÔøΩ_ÔøΩÔøΩiÔøΩCÔøΩ√çT/ÔøΩÔøΩFÔøΩ)ÔøΩÔøΩÔøΩ[ÔøΩ#vﬂéYÔøΩÔøΩUÔøΩ/ÔøΩrwÔøΩÔøΩ:,e√±nÔøΩ\ÔøΩxgÔøΩoÔøΩPNŸéÔøΩÔøΩÔøΩÔøΩÔøΩoÔøΩ?fjLÔøΩÔøΩ3-ÔøΩÔøΩÔøΩÔøΩÔøΩdÔøΩÔøΩÔøΩ.ÔøΩm.ÔøΩ+&ÔøΩ’äDLÔøΩHÔøΩ!OÔøΩÕ¶ÔøΩ2ÔøΩÔøΩRÔøΩ%ÔøΩBAzÿø/k`LÔøΩ]ÔøΩÔøΩÔøΩ;ÔøΩÔøΩFÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩÔøΩbÔøΩÔøΩÔøΩhZÔøΩv#7ÔøΩÔøΩÔøΩÔøΩjÔøΩ^ÔøΩÔøΩÔøΩÔøΩkÔøΩ5!-'lÔøΩÔøΩÔøΩS3ÔøΩgÔøΩÔøΩ.ÔøΩ/ÔøΩ/ÔøΩÔøΩÔøΩ≈´ÔøΩ=ÔøΩÔøΩqÔøΩhÔøΩ~‹¨ÔøΩZfÔøΩÔøΩS	ÔøΩlÔøΩÔøΩÔøΩ|ÔøΩÔøΩÔøΩ8poMÔøΩiÔøΩÔøΩ1WÔøΩoH/]PÔøΩÔøΩÔøΩ!RÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩHÔøΩ`>QÔøΩI`ÔøΩ~ÔøΩUÔøΩ9j@LPÔøΩÔøΩÔøΩÔøΩ)KBÔøΩNÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩMÔøΩ?eOyÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩ:ÔøΩÔøΩ}iÔøΩ*ÔøΩÔøΩÔøΩIXÔøΩjÔøΩu/WÔøΩÔøΩX ÔøΩÔøΩÔøΩ a.ÔøΩÔøΩdÔøΩÔøΩÔøΩ&ÔøΩca@$ÔøΩZÔøΩÔøΩ`«©~ÔøΩNUÔøΩx0YUÔøΩ%ÔøΩu[ÔøΩÔøΩOpÔøΩ:aÔøΩfÔøΩÔøΩEÔøΩÔøΩJÔøΩfÔøΩ{KÔøΩÔøΩÔøΩ ÔøΩÔøΩf6mÔøΩ k]ÔøΩÔøΩÔøΩjÔøΩLÔøΩÔøΩmÔøΩHÔøΩÔøΩth9^AÔøΩÔøΩ)%ÔøΩ|*,›ΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩDfÔøΩÔøΩÔøΩLP+ÔøΩÔøΩ$[.ÔøΩÔøΩ(ÔøΩÔøΩÔøΩÔøΩ@)ÔøΩ1'fÔøΩxÔøΩhÔøΩÔøΩM&ÔøΩÔøΩÔøΩ{ÔøΩÔøΩÔøΩÔøΩiÔøΩ-ÔøΩÔøΩ\B$D*D0ÔøΩÔøΩ⁄ú}ÔøΩÔøΩÔøΩ \ÔøΩ-#ÔøΩS(SÔøΩg?y{Ed#ÃôÔøΩÔøΩ◊´œÑÒ≠®û[ÔøΩ{/\ÔøΩ_rÔøΩÔøΩﬁòÔøΩdÔøΩ ÔøΩ(ÔøΩÔøΩ2gBHÔøΩÔøΩ|ÔøΩcÔøΩ$&OÔøΩ4CWTÔøΩÔøΩÔøΩÔøΩ}Z÷ÉÔøΩ-{iÔøΩÔøΩ%ÔøΩÔøΩÔøΩ*ÔøΩÔøΩBÔøΩ%'TÔøΩÔøΩÔøΩÔøΩÔøΩ#ÔøΩÔøΩ’¢ÔøΩÔøΩYRXÔøΩÔøΩgÔøΩ=	X):QÔøΩÔøΩiÔøΩ)lmÔøΩÔøΩÔøΩ.mUÔøΩdÔøΩkUÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩgÔøΩ7ÔøΩV+ÔøΩ5nÔøΩ≈•jN%ÔøΩÔøΩÔøΩÀï[PÔøΩÔøΩ;CÔøΩÔøΩÔøΩ¬õ '?ÔøΩÔøΩÔøΩÔøΩDWÔøΩÔøΩÔøΩÔøΩ(czÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩLÔøΩÔøΩÔøΩ.ÔøΩÔøΩUÔøΩq/|ÔøΩlÔøΩÔøΩÔøΩÔøΩ>ÔøΩ/ÔøΩÔøΩtÔøΩ[ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÀ•√àÔøΩÔøΩ8{ZZÔøΩsÔøΩ-#ÔøΩhÔøΩÔøΩLÔøΩYkÔøΩ-<<_fÔøΩÔøΩÔøΩCC,ÔøΩÔøΩÔøΩD»§ÔøΩÔøΩÔøΩn5rMRÔøΩ€¥b@4 ÀäÔøΩÔøΩ”âÔøΩÔøΩe“ÜÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩÔøΩÔøΩ;UV‹™ÔøΩÔøΩÔøΩ/ÔøΩÔøΩZÔøΩ E√ÖÔøΩgÔøΩwGyÔøΩÔøΩ1ÔøΩvh^ÔøΩÔøΩÔøΩÔøΩÔøΩ|3ÔøΩ Y^ÔøΩ1ÔøΩOKÔøΩÔøΩ# ÔøΩJÔøΩ‹î$ÔøΩ""ÔøΩÔøΩy)dÔøΩÔøΩÔøΩEÔøΩ,	ÔøΩÔøΩ@\ÔøΩÔøΩarÔøΩÔøΩR µÔøΩÔøΩÔøΩ*#ÔøΩ1ÔøΩÔøΩxÔøΩÔøΩBÔøΩV&@yTÔøΩÔøΩÔøΩ:€≥5ÔøΩÔøΩÔøΩcÔøΩATy,ÔøΩg|ÔøΩOÔøΩ÷àÔøΩÔøΩÔøΩÔøΩÔøΩYoÔøΩƒëxÔøΩ{ÔøΩDe ÔøΩÔøΩÔøΩ!ÔøΩ<ÔøΩÔøΩÔøΩr<7ÔøΩ]XE]ÔøΩK3QD0ÔøΩqÔøΩœ±ÔøΩÔøΩÔøΩ7ÔøΩÔøΩ+ÔøΩÔøΩYJW/#ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩOÔøΩÔøΩÔøΩ_ÔøΩÓÅèÔøΩÔøΩ!ÔøΩdÔøΩÔøΩ)Y1ÔøΩÔøΩÔøΩÔøΩÔøΩAÔøΩmÔøΩ‘ò,]{ÔøΩ~ÔøΩÔøΩOC,ÔøΩÔøΩÔøΩ?f5^ÔøΩqeÔøΩpÔøΩ?ﬁú'ÔøΩÔøΩÔøΩ?eÔøΩÔøΩÔøΩÔøΩDÔøΩoÔøΩ\ÔøΩÔøΩ`Iu|=3ÔøΩÔøΩÔøΩÔøΩ*ÔøΩÔøΩÔøΩxj/e`ÔøΩl]ÔøΩÔøΩyUÔøΩÔøΩz<ÔøΩÃÄÔøΩÔøΩ=^JÔøΩÔøΩÔøΩy'j&Qh|ÔøΩÔøΩ\o1ÔøΩÔøΩÔøΩ lÔøΩÔøΩrqÔøΩÔøΩÔøΩRsÔøΩbÔøΩÔøΩwJaSÔøΩÔøΩUÔøΩ9ÔøΩÔøΩÔøΩ?ÔøΩARÔøΩ4pÔøΩsQJÔøΩ!ÔøΩÔøΩÔøΩÕüÀ∫ÔøΩ ÔøΩ_=ÔøΩ“µDÔøΩ}ÔøΩMÔøΩÔøΩÔøΩÔøΩ,ÔøΩvÔøΩÔøΩÔøΩ+P+ÔøΩ*.iÔøΩÔøΩÔøΩgÔøΩÔøΩ:ÔøΩCÔøΩÔøΩÔøΩ8*UhÔøΩÔøΩ⁄≥1ÔøΩ:»èÔøΩ4ÔøΩÔøΩlÔøΩÔøΩÔøΩÔøΩFÔøΩwÔøΩÔøΩP7⁄ô7ÔøΩÔøΩxÔøΩÔøΩÔøΩÔøΩiAÔøΩÔøΩOÔøΩcÔøΩÔøΩÔøΩÔøΩUÔøΩÔøΩz8ÔøΩ ÔøΩC""ÔøΩÔøΩ*6wÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ	fÔøΩÔøΩrHﬂ°2ÔøΩÔøΩKÔøΩ6ÔøΩÔøΩÔøΩlÔøΩÔøΩ#ÔøΩÔøΩtRÔøΩÃüÔøΩ=KÔøΩTÔøΩ""ÔøΩ~ÔøΩWMÔøΩ""ÔøΩÔøΩ+]ÔøΩÔøΩÔøΩ9ÔøΩÔøΩ3T\ÔøΩÔøΩ+ÔøΩÔøΩSj|SjÔøΩÁé≠DÔøΩWKÔøΩ9ÔøΩs*L–πÔøΩÔøΩ<ÔøΩqÔøΩÔøΩ|ÔøΩ#D)ÔøΩÔøΩÔøΩÔøΩ	SÔøΩÔøΩDÔøΩÔøΩ‘îÔøΩ;ÔøΩxÔøΩ:ÔøΩÔøΩÔøΩFÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩUEÔøΩÔøΩ_sÔøΩÔøΩÔøΩzIÔøΩÔøΩÔøΩ+ÔøΩÔøΩÔøΩj{Ã±ÔøΩÔøΩDÔøΩÔøΩÔøΩÔøΩC=ÔøΩhÔøΩUÔøΩÔøΩ}FÔøΩÔøΩÔøΩoj5ÔøΩÔøΩÔøΩÔøΩ.	ZN!ÔøΩ&YÔøΩz7ghÔøΩRyÔøΩÔøΩÔøΩÔøΩTÔøΩÔøΩÔøΩÔøΩt”ï.ÔøΩÔøΩÔøΩqÔøΩÔøΩ*ÔøΩ M 4s!{ÔøΩÔøΩ1ÔøΩ6NVÔøΩÔøΩvÔøΩ8/YS)ÔøΩ0ÔøΩlE_ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ.ÔøΩÔøΩtWÔøΩÔøΩ“öKnÔøΩ;_ÔøΩ⁄ßcÔøΩÔøΩxÔøΩ{ÔøΩ #ÔøΩÔøΩÔøΩÔøΩDzÔøΩ!0iÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩÔøΩ:ÔøΩX:ÔøΩÔøΩÔøΩS0ÔøΩÔøΩ_WÔøΩNÔøΩS)8ÔøΩÔøΩ`4ÔøΩÔøΩ0Q|ﬂßÔøΩÔøΩÔøΩÔøΩ3 ÔøΩ$ÔøΩÔøΩ[ÔøΩÔøΩ{yÔøΩÔøΩÔøΩUÔøΩyU|ÔøΩÔøΩdvÔøΩjAÔøΩÔøΩÔøΩyÔøΩr5ÔøΩÔøΩÔøΩ$ÔøΩÔøΩÔøΩÔøΩ)y1ÔøΩÔøΩ}ÔøΩ	ÔøΩ{[ QGÔøΩSÔøΩÔøΩÔøΩYH6TZÔøΩÔøΩ^lfÔøΩ,ÔøΩ$9”çÔøΩÔøΩnÔøΩ>BÔøΩc ÔøΩÔøΩÔøΩÔøΩqÔøΩ‰™â^xÔøΩ≈≠ÔøΩÔøΩÔøΩLHÔøΩÔøΩOxÔøΩÔøΩÔøΩEiÔøΩÔøΩW:ÔøΩdÔøΩbÔøΩÔøΩÔøΩÔøΩ;ÔøΩÔøΩ2ÔøΩdÔøΩ_ÔøΩÔøΩnYÔøΩG”éÔøΩ8ÔøΩnyKÔøΩÿ∏ÔøΩ≈û.jÔøΩÔøΩÔøΩÔøΩ#ÔøΩ,i.K<ÔøΩUÔøΩ\ÔøΩÔøΩ*6xFÔøΩÔøΩ{ÔøΩHÔøΩ(x ÔøΩÔøΩÔøΩÔøΩÔøΩm=+hÔøΩkÔøΩ#ÔøΩÔøΩmÔøΩÔøΩÔøΩÔøΩ#zÔøΩÔøΩÔøΩÔøΩÔøΩL@ÔøΩﬂårfu2ÔøΩÔøΩ9ÔøΩ*aVwÔøΩÔøΩN""ÔøΩ1cÔøΩÔøΩÔøΩk	ÔøΩÔøΩÔøΩm BÔøΩzÔøΩsI}WÔøΩ?HPiÔøΩÔøΩnÕ®ÔøΩmÔøΩÔøΩÔøΩY-ÔøΩEvÔøΩ-(oAÔøΩÔøΩfÔøΩÔøΩ!<ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩn)ÔøΩÔøΩMÔøΩqÔøΩET	ÔøΩQÔøΩ.92EÔøΩhÔøΩÔøΩ(dÔøΩ+ÔøΩÔøΩ}N_,ÔøΩ1qÔøΩÔøΩQÔøΩÔøΩXÔøΩÔøΩ)ÔøΩÔøΩÔøΩsÔøΩÔøΩ2ÔøΩIÔøΩÔøΩÔøΩ]ÔøΩ!>ÔøΩÕó<ÔøΩI⁄é–∫ÃªÔøΩÔøΩsÔøΩh~xu|jÔøΩÔøΩ+ÔøΩ-ÔøΩÔøΩ6""?ÔøΩ<ÔøΩ|ÔøΩÔøΩaÔøΩÔøΩÔøΩ?⁄ÑÔøΩÔøΩÔøΩSÔøΩÔøΩÔøΩuÔøΩiÔøΩ+ÔøΩ,ÔøΩ8GÔøΩÔøΩ-ÔøΩ ÔøΩÔøΩ8kÔøΩÔøΩ ÔøΩ»õ$ÔøΩÔøΩÔøΩ«âÔøΩ ÔøΩÔøΩ1/VquÔøΩÔøΩ|ÔøΩÔøΩÔøΩÔøΩÔøΩA(uÔøΩdÔøΩ/r…äﬂÉÔøΩ@4gÔøΩÔøΩÔøΩMÔøΩAÔøΩmf[%NynHÔøΩ'`ÔøΩmÔøΩÔøΩ‹äIÔøΩLrÔøΩÔøΩnÔøΩd%ÔøΩkÔøΩÔøΩo{oÔøΩnÔøΩe1ÔøΩ&`ÔøΩt(Y'ÔøΩÔøΩ'ÔøΩÔøΩÔøΩ,¬îÔøΩvÔøΩd6ÔøΩ<ÔøΩYÔøΩdeÔøΩ!ÔøΩCÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ:ÔøΩ ÔøΩÔøΩbÔøΩÔøΩ⁄∞ÔøΩjÔøΩÔøΩUÔøΩÔøΩvÔøΩ{uÔøΩgONÔøΩÔøΩÔøΩÔøΩtÔøΩÔøΩ?1/L4ÔøΩLÔøΩ8ÔøΩNdÔøΩÔøΩÔøΩÔøΩÔøΩ8ÔøΩÔøΩ€åx!ÔøΩÔøΩÔøΩÔøΩA	ÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩNÿÅKÔøΩH;L]Bc3ÔøΩÔøΩÔøΩ?ﬁ•T,ÔøΩzÔøΩÔøΩÔøΩ+ÔøΩv>UÔøΩÔøΩh-∆∑ÔøΩÔøΩ“çÔøΩÔøΩÔøΩÔøΩ6eÔøΩ DÔøΩeÔøΩÔøΩ^`[ÔøΩaÔøΩnv<ÔøΩÔøΩRÔøΩÔøΩÔøΩÔøΩZ_KÔøΩ{/LÔøΩEI==[6ÔøΩÔøΩ&È±≤ÔøΩHÔøΩ=NaÔøΩM(>ÔøΩ|XgÔøΩÔøΩe_MN?ÔøΩ‹øI&]ÔøΩÔøΩÔøΩ|ÔøΩÔøΩBÔøΩy~ÔøΩ‰≠∂ÔøΩÔøΩÔøΩum}ÔøΩNOmÔøΩ!ÔøΩÔøΩÔøΩ,ÔøΩÔøΩH?ÔøΩLÔøΩIÔøΩÔøΩÔøΩÔøΩÔøΩHÔøΩÔøΩ]]$ÔøΩ^XÔøΩÔøΩ_ÔøΩÔøΩ\ÔøΩ[.ZuÔøΩÔøΩ9ÔøΩ<|)ÔøΩ""ÔøΩÔøΩÔøΩp gÔøΩ@ÔøΩ:ÔøΩQÔøΩÔøΩPUÔøΩHb9^&ÔøΩ'ÔøΩÔøΩFÔøΩ4Q?ÔøΩÔøΩÔøΩ}ÔøΩÔøΩ6dÔøΩ""ÔøΩy,ÔøΩD}ÔøΩÔøΩÔøΩÏòùÔøΩÔøΩÕ¢1ÔøΩ çÔøΩ¬∏ÔøΩZÔøΩÔøΩÔøΩÔøΩÔøΩtÔøΩÔøΩ1ÔøΩjRÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ<8ÔøΩÔøΩÔøΩÔøΩQÔøΩ=CÔøΩ9ÔøΩÔøΩwÔøΩ∆ôÔøΩÔøΩÔøΩÔøΩÔøΩ(ÔøΩ<ÔøΩÔøΩKNÔøΩÔøΩÔøΩIÔøΩHÔøΩfÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩIÔøΩÔøΩ ÔøΩ3ÔøΩ	n;ÔøΩ4ÔøΩ!ÔøΩ\rhwÔøΩÔøΩdÔøΩs⁄îCzi*ÔøΩÔøΩÔøΩÔøΩDRZmœécp8BeÔøΩ{k=ÔøΩÔøΩ|ÔøΩÔøΩg=^AY!ÔøΩ2ÔøΩÔøΩÔøΩÔøΩÔøΩGnsƒ®c^ÔøΩÔøΩxkCb—ûÔøΩÔøΩJ uÔøΩxo÷Ñ[lÔøΩÔøΩnq'ŸÉoÔøΩÔøΩ7geDÔøΩÔøΩ,~=ÔøΩkPc:HÔøΩzrÔøΩÔøΩÔøΩe¬†QÔøΩÔøΩhÔøΩy>ÔøΩÔøΩq'ÔøΩÔøΩÔøΩ\Õà+ÔøΩ›Ø5ÔøΩÔøΩÔøΩvÔøΩ4ÔøΩNÔøΩÔøΩÔøΩÔøΩgÔøΩÔøΩÔøΩÔøΩÔøΩ5ÔøΩÔøΩÔøΩ=ÔøΩqÔøΩÔøΩÔøΩÔøΩÔøΩ+kÔøΩ]ÔøΩ—ÉÔøΩÔøΩÔøΩÔøΩÔøΩEÔøΩ%ÔøΩÔøΩ}q/ÔøΩÔøΩ»âÔøΩÔøΩÔøΩDÔøΩÔøΩÔøΩ5?ÔøΩÔøΩÔøΩÔøΩÔøΩfÔøΩ-Y'ÔøΩÔøΩbvÔøΩÔøΩUÔøΩÔøΩ÷ÆeÔøΩ]ÔøΩ[ÔøΩÔøΩÔøΩ'ÔøΩ:NÔøΩÔøΩÔøΩ$ÔøΩÔøΩÔøΩbÔøΩÃâÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩ.ÔøΩQKÔøΩÔøΩh7ÔøΩLJÔøΩÔøΩ6~ÔøΩÔøΩMÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩ—ê/1yKÔøΩÔøΩn9ÔøΩXÔøΩÔøΩÔøΩÔøΩIÔøΩÔøΩÔøΩÔøΩ	#KÔøΩÔøΩÔøΩbÔøΩSÔøΩÔøΩTÔøΩ√¨ÔøΩÔøΩ«äÔøΩÔøΩ""ÔøΩKbSÔøΩGWÔøΩ{ÔøΩN4}ÔøΩSÔøΩ.ÔøΩÔøΩÔøΩnœèÔøΩÔøΩÔøΩÔøΩÔøΩZÔøΩÔøΩ<ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩVÔøΩLÔøΩ!	ÔøΩÔøΩRÔøΩ^Õß>ÔøΩ.ÔøΩcÔøΩ,ÔøΩÔøΩcÔøΩÔøΩ\ÔøΩÔøΩÔøΩzÔøΩÔøΩÔøΩÔøΩ'⁄Ü%ÔøΩÔøΩÔøΩÔøΩtÔøΩÔøΩÔøΩÔøΩzÔøΩXÔøΩ+ÔøΩÔøΩbÔøΩÔøΩ|ÔøΩÔøΩy»èÔøΩÔøΩÔøΩÔøΩÔøΩ@ÔøΩ9—ÆÔøΩÔøΩO€∂sÔøΩIeÔøΩÔøΩCÔøΩFÔøΩ	ÔøΩx]D&}«àjÔøΩÔøΩ9""q`TÔøΩÔøΩÔøΩ>ÔøΩ7ÔøΩSv'ÔøΩ/ÔøΩ:ÔøΩ 7ÔøΩ 5ÔøΩÔøΩ?~ÔøΩKÔøΩÔøΩyRÔøΩÔøΩ^ÔøΩdjBÔøΩÔøΩ“∂ÔøΩeOÔøΩ=_ÔøΩÔøΩÔøΩÔøΩ5~aÔøΩÔøΩrÔøΩd+&ŒµF*gÔøΩ—Å=dÔøΩ'ÔøΩÔøΩÔøΩÔøΩÔøΩ*ÔøΩÔøΩÔøΩdÔøΩ-ÔøΩ◊ìÔøΩÔøΩ9ÔøΩhR7ÔøΩÔøΩÔøΩoÔøΩnÔøΩÔøΩÔøΩÔøΩ@#ÔøΩ!vÔøΩÔøΩTHÔøΩÔøΩÔøΩ ∏NqÔøΩÔøΩÔøΩ>ÔøΩÔøΩRgÔøΩÔøΩÔøΩÔøΩ{ÔøΩ7ƒêÔøΩ_ÔøΩÔøΩÔøΩ⁄òÔøΩ>ZÔøΩlpÔøΩÔøΩÔøΩgÔøΩÔøΩÔøΩÔøΩrÔøΩA‰§µ–ÖÔøΩaPÔøΩÔøΩ""DÔøΩqÔøΩÔøΩYkÔøΩ ºÔøΩÔøΩo{ÔøΩÔøΩÔøΩ;&ÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩ”∫$BÔøΩÔøΩÔøΩjÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩIÔøΩÔøΩﬂë»úÔøΩ	ÔøΩÔøΩ2ÔøΩÔøΩÔøΩÔøΩeÔøΩÔøΩeÔøΩÔøΩVkÔøΩ3pÔøΩÔøΩRÔøΩVÔøΩÔøΩLsÔøΩ4ÔøΩh ÔøΩaÔøΩÔøΩCÔøΩÔøΩ}ÔøΩÔøΩÔøΩuÔøΩ$ÔøΩÔøΩÔøΩ!/+oÔøΩuÔøΩÔøΩÔøΩ`ÔøΩÔøΩ^]S◊ßÔøΩ-ÔøΩHus.GÔøΩÔøΩ:ÔøΩ∆±ÔøΩRÔøΩÔøΩ=:ÔøΩÔøΩÔøΩ5ÔøΩ|""ÔøΩÔøΩ&ÔøΩÔøΩÔøΩKÔøΩÔøΩkŒºÔøΩEÔøΩ'IÔøΩ]ÔøΩzÔøΩÔøΩ2zÔøΩÔøΩÔøΩÔøΩK'ÔøΩÔøΩ3YÔøΩOÔøΩ=ÔøΩÔøΩp¬ÆÔøΩÔøΩÔøΩw6ÔøΩ%ÔøΩa=<_rÔøΩÔøΩZÔøΩÔøΩV2.ÔøΩ=ÔøΩQÔøΩ0ÔøΩﬁùÔøΩÔøΩÔøΩ3bÔøΩqÔøΩoÔøΩ‹ÜÔøΩÔøΩÔøΩr	;ÔøΩ ﬁ±ÔøΩ0ÔøΩÔøΩÔøΩÔøΩÔøΩQ$IZÔøΩ;vÔøΩÔøΩÔøΩGu,jÔøΩÔøΩ~ÔøΩ{ÔøΩÔøΩÔøΩÔøΩﬂ£0]ÔøΩÔøΩQÔøΩÔøΩoQ:mÔøΩRÔøΩ%ÔøΩ~;sÔøΩÔøΩÔøΩÔøΩ#ÔøΩ?ÔøΩÔøΩÕº~.ÔøΩQ.CÔøΩq9ÔøΩ9ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ‹êKÔøΩ ÔøΩx_ÔøΩÔøΩÔøΩsvEÔøΩxÔøΩ3ÔøΩÔøΩÔøΩ[ÔøΩ<ÔøΩ$ÔøΩyM»è$ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩtÔøΩÔøΩÔøΩÔøΩÔøΩŒ∑|ÔøΩ0ÔøΩÔøΩÔøΩfÔøΩ◊îk_ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9yCoÔøΩ:ÔøΩAFÔøΩfÔøΩuÔøΩÔøΩd|ÔøΩÔøΩÔøΩÔøΩoYÔøΩ24-ÔøΩÔøΩEÔøΩ[ÔøΩÔøΩÔøΩÔøΩ DÔøΩ√ïÔøΩÔøΩÔøΩbGD%nÔøΩb)ÔøΩ:ÔøΩwÔøΩx ÔøΩRÔøΩ:ÔøΩÔøΩÔøΩÔøΩÀä3ÔøΩÔøΩ""1ÔøΩ  ÔøΩÔøΩÔøΩ@ÔøΩÔøΩÔøΩOÔøΩoÔøΩFÔøΩÔøΩgÔøΩÔøΩ’∑U""G*DKÔøΩÔøΩÔøΩzpzÔøΩÔøΩqÔøΩÔøΩMKÔøΩÔøΩÕç…®pwÔøΩVÔøΩli2VK bH*ÔøΩÔøΩ|ÔøΩÔøΩÔøΩMÔøΩapÔøΩF)ÔøΩ⁄∏ÔøΩÔøΩ~ÔøΩÔøΩpÔøΩxsÔøΩÔøΩÔøΩ/ÔøΩÔøΩ|ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩx0ÔøΩÔøΩÔøΩÔøΩO{^ÔøΩÔøΩMo;ÔøΩ!_.uÔøΩAÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩU ÔøΩB%5ÔøΩÔøΩÔøΩeÔøΩÔøΩ'meÔøΩR&ÔøΩÔøΩÔøΩ7""ÔøΩÔøΩÔøΩ){ÔøΩÔøΩo*pwÔøΩ+ÔøΩÔøΩÔøΩÔøΩ)]ÔøΩÔøΩgBÔøΩÔøΩawÔøΩÔøΩÔøΩ;QÔøΩ0sÔøΩ(ÔøΩFeÔøΩÔøΩM'YÔøΩHÔøΩKÔøΩ!KÔøΩ«îÔøΩÔøΩ(ÔøΩLHÔøΩ`w ÔøΩÔøΩÔøΩÔøΩYÔøΩJÔøΩyBÔøΩÔøΩÀ∞ÔøΩÔøΩml# ÔøΩo1ÔøΩYÔøΩÔøΩSÔøΩ""ÔøΩÔøΩfCXgÔøΩÔøΩs0FÔøΩWÔøΩÔøΩWÔøΩoÔøΩŒàEgÔøΩ5'ÔøΩÔøΩ%GQÔøΩÿúÔøΩÔøΩNÔøΩ_ÔøΩO.tÔøΩ%DjlÔøΩÔøΩ40ÔøΩTÔøΩTxÔøΩ€âÔøΩDÔøΩ›¢ÔøΩSÔøΩtÔøΩÔøΩ ÔøΩÔøΩÔøΩ~fKÔøΩ:∆¨ÔøΩÔøΩÔøΩÔøΩ¬åÔøΩ$ÔøΩÔøΩm~ÔøΩÔøΩÔøΩ◊ÆÔøΩrMX ﬂ≤ÔøΩ&WÔøΩÔøΩ&""ÔøΩgÔøΩÔøΩ–ûÔøΩCÔøΩÔøΩ5ÔøΩnÔøΩFÔøΩÔøΩÔøΩÔøΩ.ÔøΩZs8uÔøΩ:h4ÔøΩ%GÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩsÔøΩXÔøΩfÔøΩJÔøΩÔøΩ+ÔøΩ/ÔøΩfÔøΩÀä@AÔøΩŒ•bWÔøΩnÔøΩ8ÔøΩÔøΩÔøΩÔøΩ>ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ]ÔøΩ-‘ï^(qGlH ÔøΩ3ÔøΩ]JÔøΩÔøΩÔøΩÔøΩR9ÔøΩÔøΩ_ÔøΩnÔøΩÔøΩ~!ÔøΩ0WÔøΩ[ÔøΩÔøΩ8o:|lHÔøΩÔøΩIÔøΩxMÔøΩÔøΩWÔøΩWHV‚åáÔøΩÔøΩÔøΩGÔøΩ~:m5H2$ÔøΩ ÔøΩ&ÔøΩ[|ÔøΩÔøΩÔøΩQÔøΩ~KÔøΩtÔøΩfÔøΩyÔøΩÔøΩHÔøΩMÔøΩ?SÔøΩÔøΩM\ÔøΩ…íEÔøΩÔøΩ]Y‹ëÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ=ÔøΩSGÔøΩ}nTÔøΩ[ÔøΩTÔøΩ$ÔøΩ;RÔøΩÔøΩ4ÔøΩMÔøΩ,ÔøΩÔøΩ+UKTÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩjÔøΩœùÔøΩÔøΩ`_'AÔøΩÔøΩÔøΩ}ÔøΩÔøΩ≈¥ÔøΩnÔøΩ|ÔøΩ<ÔøΩÔøΩAÔøΩIL9ÔøΩ|”¨[BÔøΩ~ÔøΩ»âRFÔøΩÔøΩÔøΩÔøΩJÔøΩÔøΩaÔøΩÔøΩ√π:6ÔøΩÔøΩÔøΩ>ÔøΩÔøΩ»∫eÔøΩ@^ÔøΩtJÔøΩ| ÔøΩÔøΩÔøΩmÔøΩ,ÔøΩÔøΩZ""ÔøΩ$8ÔøΩoÔøΩ#÷ñyOIÔøΩÔøΩÔøΩ#1L”≠OÔøΩ?ÔøΩœáÔøΩÔøΩÔøΩmÿÇ'ÔøΩÔøΩfÔøΩiHÔøΩn‹¶XÔøΩÍîäB6ÔøΩÔøΩ‘∞AÔøΩÔøΩÔøΩoÔøΩÔøΩÔøΩÔøΩ/EÔøΩ|ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÀäÔøΩÔøΩuÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩG-ÔøΩiÔøΩ2ÔøΩ~ÔøΩÔøΩ‹ÜKÔøΩhSÔøΩ8ÔøΩWÔøΩkÔøΩÔøΩ0LÔøΩ#ZpÔøΩ$ÔøΩÔøΩRÔøΩrbÔøΩ.,ÔøΩ7ÔøΩuŒ≠Îæ¶ÔøΩ ÔøΩÔøΩYÔøΩÔøΩÔøΩ&gVÔøΩcÔøΩÔøΩÔøΩÔøΩjÔøΩyÔøΩ/SÔøΩu(ÔøΩrÔøΩÔøΩÔøΩVÔøΩUÔøΩÔøΩÔøΩÔøΩ(8ÔøΩN–ºÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ:K.#ZÔøΩw9WÔøΩeh&ÔøΩÔøΩ‹¥ÔøΩAÔøΩÔøΩy&o ÔøΩÔøΩ=ÔøΩÔøΩNÔøΩÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩ-$ÔøΩWrÔøΩÔøΩ vZÔøΩÔøΩÔøΩ,8tÔøΩƒéfÔøΩÀåoÔøΩ9ÔøΩo'ÔøΩ?ÔøΩ4ÔøΩn ÔøΩÔøΩÔøΩÔøΩÔøΩMÔøΩ;DÔøΩi>ÔøΩÔøΩBcÔøΩÔøΩ_npMyÔøΩ} j/C""'ÔøΩ%ÔøΩ9BÔøΩÔøΩÔøΩQÔøΩÔøΩzÔøΩ#ÔøΩÔøΩIÔøΩNÔøΩwÔøΩ5ÔøΩ*ÔøΩzÔøΩÔøΩ#fÔøΩ!ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9>ÔøΩNÔøΩÔøΩÔøΩJÔøΩ3ÔøΩ0LÔøΩ&ÔøΩÔøΩÔøΩÔøΩ[ÔøΩÔøΩ\ÔøΩL`VÔøΩÔøΩ`ÔøΩJÔøΩ}ÔøΩÔøΩ>ÔøΩÔøΩÔøΩÔøΩGVÔøΩ"""" )ÔøΩ{ÔøΩuÔøΩ+›•aYvÔøΩ6Ÿ†jÔøΩFÔøΩ&ÔøΩKÔøΩ}gÔøΩ$ÔøΩX+oFÔøΩbÔøΩtÔøΩ<ÔøΩiÔøΩÔøΩgÔøΩ^DgmÔøΩÔøΩgÔøΩ!ÔøΩ.ÔøΩRmÔøΩveÔøΩÔøΩ≈¶ ÔøΩ ÔøΩ€ìÔøΩkÔøΩÔøΩÔøΩ ÔøΩqÔøΩÔøΩtÔøΩ>ÔøΩÔøΩ:ÔøΩ_ÔøΩÔøΩWkÔøΩskVÔøΩ0ÔøΩGÔøΩIÔîèÔøΩÿ¶4ÔøΩÔøΩlÔøΩ_IÔøΩ#YÔøΩÔøΩÔøΩ$MÔøΩÔøΩÔøΩSÔøΩ1ÔøΩÔøΩÔøΩ,ÔøΩy#JP['x]LÔøΩÔøΩ.ÔøΩ9	h8œ≠ÔøΩ""(ÔøΩ/OGÔøΩÔøΩH ÔøΩÔøΩ]wE&ÔøΩÔøΩ%ÔøΩ5ÔøΩ0}ÔøΩÃç>ÔøΩzÔøΩÔøΩ<6y=ÔøΩÔøΩ=BBÔøΩOV:ÔøΩ=ÔøΩ*ÔøΩ‚§û,ÔøΩÔøΩbÔøΩ1ÔøΩ+c3ƒóÔøΩo,tÔøΩÔøΩÔøΩ-ÔøΩ^Ee|ÔøΩ	fÔøΩ*s PÔøΩÔøΩÔøΩ""ÔøΩ√ëÔøΩÔøΩl÷≤|ÔøΩÔøΩÔøΩaÔøΩvÔøΩÊ™ß<	ÔøΩÔøΩ5UÔøΩÔøΩ2ÔøΩuÔøΩÔøΩÔøΩÔøΩCÔøΩÔøΩÔøΩÔøΩmÔøΩNs.FÔøΩ“ádÔøΩ1iÔøΩ`<\ÔøΩÔøΩyÔøΩÔøΩlRÔøΩS¬ÜÔøΩÔøΩÔøΩ#ÔøΩÔøΩÔøΩ5BÔøΩu»ÑÔøΩ}ÔøΩ<ÔøΩÔøΩAÔøΩTÔøΩÔøΩ—Ñ~/ÔøΩuÔøΩ[&(ÔøΩPÔøΩÔøΩzÔøΩÔøΩr=≈óÔøΩÔøΩÔøΩ…®ÔøΩ1ÔøΩÔøΩÔøΩÔøΩÔøΩ/n5;ÔøΩ""AÔøΩ.ÔøΩÔøΩYÔøΩMnNuV8	ÔøΩuÔøΩ2ÔøΩ:{OÔøΩYÔøΩvI,{ÔøΩÔøΩFÔøΩ-.=ÔøΩ'ÔøΩÔøΩÔøΩÔøΩ8ÔøΩ ÔøΩÔøΩÔøΩÔøΩNÀ≤ÔøΩ–ÑÔøΩÔøΩÔøΩhÔøΩXÔøΩnÔøΩ#ÔøΩÔøΩÔøΩpÔøΩÔøΩÔøΩa""6ÔøΩŸß""MÔøΩgAÔøΩdÔøΩ ÔøΩÔøΩÔøΩ ÔøΩ-mÔøΩÔøΩRNÔøΩ*UzÔøΩI[ﬂô}vÔøΩbÔøΩkÔøΩÔøΩkÔøΩÔøΩGÔøΩnÔøΩ€¶ÔøΩÔøΩEÔøΩÔøΩ =ÔøΩ:ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩQÔøΩÔøΩWIÔøΩÔøΩ6CbT%ÔøΩÔøΩf'SZÔøΩÔøΩÔøΩÔøΩÀ∏ﬂªyk4zÔøΩYÔøΩÔøΩÔøΩ.ÔøΩÔøΩÔøΩÔøΩ_GÔøΩUcÔøΩÔøΩÔøΩÔøΩ |ÔøΩaÔøΩÔøΩhPÔøΩ!ÔøΩyy‹ôÔøΩÈ±âÔøΩÔøΩ@ÔøΩ0	ÔøΩ>ÔøΩÔøΩeRÔøΩ:ÔøΩÔøΩ‘´ÔøΩÔøΩÔøΩ;ÔøΩ!3$SÔøΩy?ÔøΩÔøΩ]ÔøΩÔøΩfÔøΩÔøΩÔøΩBÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩhÔøΩ$LIÔøΩIÔøΩtÔøΩÔøΩÔøΩÔøΩÔøΩ·£≠ÔøΩÔøΩeNÃãÔøΩ	ÔøΩNÔøΩ 1yÔøΩ/8ÔøΩÔøΩNÔøΩÔøΩÔøΩg.ÔøΩÔøΩ WÔøΩyÔøΩÔøΩ–ñqj _GÔøΩ.ÔøΩ R{#ÔøΩ6ÔøΩ--ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩDÔøΩ<0{^ÔøΩÔøΩhÔøΩ€™} KÔøΩÔøΩ4ÔøΩÔøΩ2«∑zr'ÔøΩ=ÔøΩ-ÔøΩ“èÔøΩÔøΩZEÔøΩpÔøΩﬂ¨ÔøΩ`>pSÔøΩ–ªÔøΩJÔøΩ,np_#Œ¨ÔøΩÔøΩTÔøΩÔøΩÔøΩÔøΩÔøΩkÔøΩÔøΩÔøΩRÔøΩÔøΩ:ÔøΩÔøΩÔøΩÔøΩPEÔøΩÔøΩÔøΩÔøΩ8gmÔøΩÔøΩÔøΩ“Ñ?ÔøΩÔøΩÔøΩ|'ÔøΩÔøΩÔøΩ.¬ü\ÔøΩ$mPÔøΩÔøΩÔøΩ*ÔøΩQÔøΩÔøΩWÔøΩÔøΩÔøΩJFÔøΩz,ÔøΩÔøΩ#rÔøΩpÔøΩÔøΩÔøΩÔøΩ«ÑÔøΩ\ÔøΩÔøΩ=ÔøΩ!ÔøΩ%ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9ÔøΩvÔøΩÔøΩÒØöªÔøΩÔøΩÔøΩ.ÔøΩÔøΩÔøΩ%ÔøΩ ÔøΩ8OÔøΩÔøΩLXÔøΩ>ÔøΩÔøΩÔøΩ^1ÔøΩÔøΩJ~'>(ÔøΩ'ÔøΩ*bÔøΩÔøΩÔøΩÔøΩimÔøΩÔøΩÔøΩDÔøΩwÔøΩeuÔøΩÔøΩlÔøΩÔøΩE`ÔøΩÔøΩDÔøΩmÔøΩÔøΩPvÔøΩÔøΩ7ÔøΩoÔøΩM$ÔøΩÔøΩ/!jÔøΩëÑñ`ÔøΩÔøΩyÔøΩcÔøΩ8mÔøΩGÔøΩÔøΩÔøΩ%AÔøΩ&ÔøΩe""ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ/ÔøΩo#PÔøΩÔøΩ>ÔøΩÔøΩÔøΩ‘í ŒâÔøΩ2MPÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩ„çúÔøΩ<<#ÔøΩÔøΩ>+ÔøΩÔøΩÔøΩ4yeÔøΩ«´OgQÔøΩÔøΩÔøΩWÔøΩÔøΩM3U#ÔøΩÔøΩÔøΩ|ÔøΩÔøΩÔøΩ?ÔøΩHÔøΩUrÔøΩ^ÔøΩÔøΩ~@ÔøΩ5ÔøΩWÔøΩ&UÔøΩ^ÔøΩÔøΩlÔøΩÔøΩÔøΩ«¶ÔøΩ(iÔøΩÔøΩÔøΩÔøΩÔøΩ""ÔøΩÔøΩFqD?ÔøΩkÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩ—çÔøΩÔøΩÔøΩÔøΩ1DÔøΩ5?QVÔøΩUKÔøΩ?ÔøΩÔøΩgÔøΩ2ÔøΩÔøΩﬂã#f\ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ÷ùmÔøΩ7ÔøΩÔøΩ# )”ÖÔøΩÔøΩtÔøΩKzÔøΩyÔøΩÔøΩgÔøΩÔøΩSn8ÔøΩSbÃÄÔøΩCg84 C«†ÔøΩÔøΩ{ ÔøΩÔøΩ8ÔøΩT}&SÔøΩR|ÔøΩ@zÔøΩgSHAFÔøΩqÔøΩOÔøΩe‹µ+ÔøΩ!ÔøΩx=0—íÔøΩÔò∫ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩuÔøΩÔøΩ’£E\7ÔøΩ–õÔøΩxÔøΩKÔøΩÔøΩÔøΩ‚®íÔøΩ!ÔøΩ7ÔøΩ“≥NS2ÔøΩÔøΩCi$V|jÔøΩ;Sd 	ÔøΩlEA{d*ÔøΩ5ŸámÔøΩOÔøΩÔøΩ*Ãß¬ãÔøΩÔøΩoÔøΩ(ÔøΩÔøΩÔøΩÔøΩHÔøΩq	ÔøΩÔøΩÔøΩSrÔøΩÔøΩMCÔøΩÔøΩÔøΩk€´ÔøΩO5ÔøΩh[ÔøΩÔøΩj,LÔøΩÔøΩÔøΩÔøΩŒ≠5ÔøΩÔøΩÔøΩcNS^ÔøΩfJ:ÔøΩUÔøΩÔøΩÔøΩ,ÔøΩ2 ÔøΩ|	ÔøΩ)ÔøΩÔøΩ3ÔøΩÔøΩNÔøΩÔøΩÔøΩÔøΩsÔøΩÔøΩÔøΩÔøΩXlAÔøΩD&\ÔøΩÔøΩÔøΩEÔøΩZe<:ÔøΩMÔøΩ*ÔøΩk""ÔøΩ1]ÔøΩB'ÔøΩXhÔøΩ$XÔøΩÔøΩoÔøΩÔøΩÔøΩOHÔøΩÔøΩ  ©&ÔøΩGÔøΩ.ÃçÔøΩÔøΩ[ÔøΩsyÔøΩÔøΩÔøΩÔøΩÔøΩBÔøΩÔøΩ;.ÔøΩ?ÔøΩÔøΩmÔøΩÔøΩFÔøΩÔøΩÔøΩkÔøΩK|ÔøΩÔøΩÔøΩ\ÔøΩÔøΩ&ÔøΩPÔøΩÔøΩxÔøΩÔøΩ{ÔøΩ]ÔøΩÔøΩ$ÔøΩÔøΩÔøΩnÔøΩÔøΩÔøΩ/pÔøΩÔøΩUÔøΩ.~8ÔøΩ/'ÔøΩtf4;ÔøΩ6ÔøΩ-dÔøΩÔøΩ&ÔøΩÔøΩÔøΩ3ÔøΩ[,!ÔøΩÔøΩ3ÔøΩt@ÔøΩÔøΩZÃëDÔøΩ’®vÔøΩÔøΩ$]H3ÔøΩÔøΩtÔøΩÔøΩDÔøΩaÔøΩnoÔøΩf8ÔøΩ{;ÔøΩÔøΩÔøΩdH;ÔøΩÔøΩs1{UÔøΩÔøΩj|ÔøΩÿ¥ÔøΩY?+\ÔøΩ^ÔøΩÔøΩÔøΩÔøΩÔøΩe3/g›∏ﬁæÔøΩvÔøΩÔøΩ9/Iz8Àö<ÔøΩÔøΩkEÔøΩÔøΩÔøΩ3yÔøΩf1lcaÔøΩÔøΩ[ÔøΩ{}ÔøΩÔøΩÔøΩpK},ÔøΩÔøΩÔøΩ?ÔøΩÔøΩ9ÔøΩÔøΩÔøΩ ùsÔøΩÔøΩq`⁄ªuÔøΩ,ÔøΩA}|ÔøΩÔøΩ.4ÔøΩZÔøΩÔøΩÔøΩÔøΩ+ÔøΩÔøΩeWÔøΩlÔøΩcc+ÔøΩ’¥PrZAÔøΩr^iÔøΩÔøΩÔøΩwÔøΩÔøΩÔøΩ kÔøΩsKÔøΩÔøΩMÔøΩ9ÔøΩQÔøΩÔøΩÔøΩVÔøΩ%kCÔøΩÔøΩÔøΩÔøΩ'{^ÔøΩÕ£ÔøΩÔøΩAÔøΩÔøΩoÔøΩÔøΩliÔøΩQZÔøΩaÔøΩzÔøΩuÔøΩÔøΩ{ÔøΩ""hÔøΩÔøΩÔøΩ<8ÔøΩl@W0ÔøΩÔøΩtÔøΩyrOpÔøΩXhÔøΩÔøΩÔøΩ&=:ÔøΩ\ÔøΩ◊ÜÀò9ÔøΩj>'fÔøΩ.ÔøΩ{ÔøΩÔøΩAÔøΩ…ëÔøΩÔøΩ|ÔøΩJÔøΩÔøΩd5…±l≈õNÔøΩF(ÔøΩUUÔøΩÔøΩ;€µ{ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩËï£ÔøΩFWÔøΩÔøΩ+ÔøΩxÔøΩbÔøΩVÔøΩﬁâÔøΩjÔøΩ·ÜÆ)ÔøΩÔøΩÔøΩV,ÔøΩÔøΩÔøΩÔøΩm…ÑÔøΩZÔøΩ€æÔøΩ~ÔøΩÔøΩc2ÔøΩ&ÔøΩÔøΩ+ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩFÔøΩÔøΩlÔøΩÔøΩ&DÔøΩÔøΩÔøΩÔøΩ(hÔøΩÔøΩÔøΩÔøΩ2ÔøΩÔøΩMÔøΩ=ÔøΩÔøΩ""ÔøΩÔøΩÔøΩ ÔøΩ-CtCÔøΩÔøΩÃí}ÔøΩÔøΩÔøΩ@sÔøΩÔøΩÔøΩÔøΩ""ÔøΩD%8tmILÔøΩm~ÔøΩÔøΩ1ÔøΩÔøΩÔøΩÔøΩtÔøΩÔøΩ<ÔøΩÔøΩÔøΩ<_JÔøΩFÔøΩÔøΩ+ÔøΩÔøΩ÷Ç{◊ó.ÔøΩXÔøΩÔøΩÔøΩÔøΩ-JÔøΩÔøΩÔøΩÔøΩ ÔøΩi$aÔøΩÔøΩÔøΩ'iÔøΩÔøΩÔøΩÔøΩÔøΩlJrÔøΩUVÔøΩÔøΩ/ÔøΩ)(ÔøΩÔøΩÔøΩ#ÔøΩÔøΩLÔøΩÔøΩWHwX0tÔøΩRÔøΩÔøΩ ÔøΩq 5ÔøΩwPÔøΩkÔøΩMÔøΩÔøΩÔøΩ]ÀÜLr9SÔøΩSÔøΩÔøΩÔøΩ~ÔøΩÔøΩÔøΩÔøΩ¬∞ÔøΩÌã≠'ÔøΩ6ÔøΩ*ÔøΩ;YÔøΩMP⁄§ÔøΩÔøΩ|ÔøΩ%ÔøΩ u {ÔøΩkEÔøΩ@ÔøΩÔøΩÔøΩT7ÔøΩxÔøΩeÔøΩrHFvc6|?ÔøΩÔøΩ]ÔøΩJ9ÔøΩÔøΩÔøΩ*ÔøΩf\ÔøΩÔøΩ""%ÔøΩÔøΩ[ÔøΩJÔøΩKÔøΩv/xÔøΩÔøΩtFÔøΩ|ÔøΩ'I gÔøΩÔøΩ2Q?ÔøΩK-ÔøΩnÔøΩÔøΩ„ìæPyÔøΩ¬¶ÔøΩ5ÔøΩ#ÔøΩJdÔøΩbeƒñÔøΩ*ÔøΩÔøΩ97)KÔøΩÔøΩ„áπÔøΩ]c""ÔøΩÔøΩvÔøΩ\}ÔøΩÔøΩD [ÔøΩÂ≥ÖÔøΩÔøΩ@ÔøΩ;ÔøΩ{ÔøΩ(vÔøΩÔøΩAÔøΩN<ÔøΩÔøΩÔøΩÔøΩ:5m2nÔøΩÔøΩÔøΩfÔøΩÔøΩÔøΩÔøΩzÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩE)UÔøΩÔøΩ+/?ÔøΩDeÔøΩÔøΩSÔøΩcTÔøΩ}ÔøΩ0ÔøΩ ]BI?0wÔøΩÔøΩ!ÿû,mÔøΩB]ÔøΩÔøΩÔøΩ paJ""ÔøΩ2[ÔøΩÔøΩx'LÔøΩ6WÔøΩhÔøΩÔøΩÔøΩEgÔøΩVÔøΩÔøΩMNÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ .ÔøΩs<4ÔøΩ;}ÔøΩhÔøΩÔøΩugÔøΩÔøΩÔøΩ⁄ßÔøΩÔøΩÔøΩÔøΩO\u~ÔøΩÔøΩÔøΩ.2ÔøΩÔøΩÔøΩzOÔøΩ[ÔøΩNÔøΩÔøΩFÔøΩk.ÔøΩÔøΩMÔøΩHPÔøΩCÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩuÔøΩÔøΩ""ÔøΩÔøΩMÔøΩyÔøΩoTKÿ™ÔøΩÔøΩgÔøΩYÔøΩÔøΩÔøΩÔøΩÔøΩ7’øÔøΩÔøΩ*ÔøΩÔøΩk2ÔøΩb4ÔøΩ5BÔøΩ-ÔøΩ@7ÔøΩÔøΩzÔøΩcÔøΩÔøΩWtÔøΩÔøΩb,ÔøΩÔøΩrÔøΩeÔøΩqÔøΩ:ÔøΩDs]gÔøΩ_?+ÔøΩ	ÔøΩÔøΩÔøΩÔøΩ{.ÔøΩÔøΩ-ÔøΩÔøΩÔøΩÔøΩ	:IÔøΩ$cÔøΩ""qÔøΩÔøΩ8ÔøΩÔøΩ+ÔøΩbÔøΩÔøΩ\ÔøΩÔøΩXÔøΩ–µYÔøΩfÔøΩÔøΩÔøΩÔøΩÔøΩ~rÔøΩ4ÔøΩuÔøΩÔøΩÔøΩÔøΩ{ÔøΩ=HÔøΩÔøΩBÔøΩ7ÔøΩ+At&Q!ÔøΩÔøΩlÔøΩ»â:ÔøΩjB	OÔøΩ0wÔøΩi?ÔøΩÔøΩ>ÔøΩCfÔøΩÔøΩ*i4ÔøΩÔøΩ&RÔøΩL&8ÔøΩ{ÔøΩÔøΩ?ÔøΩÔøΩ}ÔøΩO=ÔøΩ@-ÔøΩÔøΩ!ÔøΩÔøΩÔ±õ*|ZÔøΩÔøΩ_ÔøΩÔøΩ6ÔøΩjnYÔøΩHF~ÔøΩh/ÔøΩÔøΩoÔøΩ*\ÔøΩÔøΩ[,ÔøΩÔøΩGwÔøΩ0ƒå3ÔøΩÔøΩ 7OÔøΩÔøΩxÔøΩÔøΩ÷Ö“ç&ÔøΩVCÔøΩÔøΩÔøΩ%ÔøΩÔøΩÔøΩZÔøΩÔøΩ~ÔøΩ¬¨dÔøΩ06ÔøΩ8ÔøΩ	ÔøΩ>yÔøΩÔøΩh7ÔøΩÀßpÔøΩÔøΩ~oÔøΩÔøΩMÔøΩ4∆öÔøΩ/ÔøΩÔøΩÔøΩÔøΩBÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩaŸ´€ë€üÔøΩjÔøΩÔøΩ+y:giÔøΩ	x#>U ÔøΩ“®-ÔøΩÔøΩfFÔøΩK$ÔøΩ\FSsÔøΩ^ÔøΩLhdÔøΩsÔøΩÔøΩ/ÔøΩÔøΩÔøΩJÔøΩM?ÔøΩÔøΩz""ÔøΩAÔøΩÔøΩÔøΩ6_fÔøΩGÔøΩÔøΩAzÔøΩÔøΩÔøΩdÔøΩÔøΩl$ ÔøΩ""ÔøΩÔøΩÔøΩÔøΩ1ÔøΩÔøΩ»∫s~ÔøΩ=a~7ÔøΩ…≠ÔøΩ45ÔøΩu.UÔøΩ6ÔøΩÔøΩÔøΩ1\UÔøΩÔøΩÔøΩ`ÔøΩ_ZÔøΩÔøΩ$#ÔøΩ ÔøΩaCvÔøΩÔøΩyÔøΩÔøΩÔøΩiÔøΩÔøΩÔøΩÔøΩÔøΩbJÔøΩiÔøΩ[rDs3ÔøΩŸ¨kQ9ÔøΩÔøΩ%ÔøΩPÔøΩÔøΩ'3dTGkÔøΩÔøΩÔøΩ'$ÔøΩ5ÔøΩmÔøΩÔøΩ	ÔøΩ:	ÔøΩw;jÔøΩÔøΩÔøΩgÔøΩ8ÔøΩGÔøΩÔøΩpiÔøΩT3ÔøΩRxÔøΩÔøΩÔøΩX[ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ}ÔøΩoÔøΩ ÔøΩRÔøΩÔøΩsÔøΩ«ãaÔøΩ/UGÔøΩÔøΩÔøΩÔøΩzm{ÔøΩÔøΩcÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ(SÔøΩSÔøΩ&+1ÔøΩM}∆±ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ πÔøΩÔøΩÔøΩ&ÔøΩ4‰ÇÄÔøΩ,ÔøΩ)ÔøΩ»ºÔøΩ4 ÔøΩ>ÔøΩJÔøΩtÔøΩÔøΩÔøΩÔøΩÔøΩ€äÔøΩÔøΩÔøΩÔøΩd$ZÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ(Q_ÔøΩLÔøΩÔøΩhÔøΩÔøΩgn6ZV<&ÔøΩ›∂ÔøΩ[DÔøΩÔøΩ«•>ÔøΩ{≈æc;ÔøΩÔøΩÔøΩÔøΩt œ©i\{}ÔøΩÀéaTÔøΩzÔøΩÔøΩÔøΩ~n:ÔøΩ.ÔøΩÔøΩi!ZÔøΩÔøΩÔøΩÔøΩÔøΩ~ÔøΩTÔøΩÔøΩ.yibÔøΩÔøΩÔøΩFÔøΩÔøΩÔøΩtÔøΩ :ÔøΩ|P	ÔøΩÔøΩÔøΩÔøΩÔøΩHÔøΩÔøΩ8CÔøΩT0ÔøΩ`p@,ÔøΩÔøΩ=ÔøΩÔøΩ1ÔøΩÔøΩ$APÔøΩU$k]ÔøΩÔøΩaÔøΩÔøΩÔøΩÔøΩTÔøΩ'PÔøΩ,’ñÔøΩ{*%""vÔøΩÔøΩÔøΩJJÔøΩÔøΩÔøΩÔøΩMÔøΩW ÔøΩ-ŒÇÔøΩELzÔøΩÔøΩcÔøΩÔøΩÔøΩ[ÔøΩÔøΩËìêÔøΩ9ÔøΩÔøΩZ}yÔøΩC!ÔøΩyÔøΩÔøΩÔøΩmI} 7ÔøΩkVw""ÔøΩ'q<ÔøΩÔøΩ.ÔøΩ ÔøΩ¬úÔøΩÔøΩiÔøΩÔøΩÔøΩ	ÔøΩÔøΩÔøΩ{ÔøΩ&-BU«≥|}ÔøΩÃîÔøΩABIÔøΩ2ÔøΩÔøΩÔøΩÔøΩ6ÔøΩvxÔøΩÔøΩÔøΩ!""p’ÄjÔøΩ+nÔøΩÔøΩÔøΩ`VqTÔøΩiÔøΩf=,ÔøΩÔøΩ]ÔøΩÔøΩÔøΩRBÔøΩÔøΩÔøΩ-ÔøΩM%ÔøΩhÔøΩvÔøΩÔøΩQÔøΩÔøΩHÔøΩÔøΩÔøΩ8yÔøΩÔøΩÔøΩXÕ∑AqGÔøΩHHÔøΩycÔøΩÔøΩÔøΩÔøΩÔøΩgmÔøΩ/ÔøΩ3ÔøΩ<ÔøΩÔøΩiÔøΩÔøΩ8ÔøΩÔøΩqsRÔøΩ xFÔøΩ8ÔøΩlLÔøΩ1	ÔøΩÔøΩÔøΩ-QÔøΩBaÔøΩXÔøΩsÔøΩÔøΩ`wÔøΩ)ÔøΩÔøΩÔøΩHÔøΩ5<}ÔøΩÔøΩ‹°#ÔøΩ~e5ÔøΩ]ÔøΩ„ëó:ÔøΩÔøΩÕ∏ÔøΩÔøΩÔøΩ’ΩTÔøΩ!5ÔøΩ6xÔøΩÔøΩ sÔøΩEXÔøΩÔøΩÔøΩÔøΩÔøΩ-ÔøΩÔøΩÔøΩ>XÔøΩÔøΩ÷ßÔøΩ[ÔøΩ5ÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩÔøΩ	ÔøΩÔøΩ~ÔøΩDÔøΩÔøΩÔøΩWfÔøΩƒÑÔøΩÔøΩztÔøΩrÔøΩdlGMÃçvÔøΩ#[OÔøΩ{ÔøΩUÔøΩxÔøΩÔøΩÔøΩÔøΩMÔøΩÔøΩWÔøΩ?=ÔøΩrÔøΩ\	4^ÔøΩÔøΩÔøΩ2ÔøΩ ÔøΩÔøΩZ^ÔøΩ$ÔøΩÔøΩ]ÔøΩÔøΩmwX.ÔøΩ}gÔøΩ∆†[ÔøΩXÔøΩœΩÔøΩÔøΩW8›Æ!ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ<›¨ÔøΩ	ÔøΩŒÜÔøΩMÔøΩ,ÔøΩJÔøΩnÔøΩSÔøΩÔøΩÔøΩ ≈≥ÔøΩË§®ÔøΩ!$ÔøΩÔøΩÔøΩÔøΩÔøΩaYÔøΩÔøΩnÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩoÔøΩÔøΩaVÔøΩÔøΩÔøΩÔøΩYÔøΩ<ÔøΩÔøΩÔøΩ?ÔøΩIiÔøΩÔøΩÔøΩÔøΩ4ÔøΩ2j(ÔøΩPÔøΩÔøΩÔøΩ'ÔøΩeNÔøΩÔøΩTÔøΩ2GWXÔøΩÔøΩB{œìÔøΩFÔøΩ_ÔøΩÔøΩÔøΩEÔøΩ""ÔøΩÔøΩNÔøΩÔøΩ'ÔøΩÔøΩs""R}ÔøΩÔøΩÔøΩisÔøΩ|=ÔøΩnÔøΩ6ÔøΩq*ÔøΩÔøΩÔøΩbÔøΩÔøΩFÔøΩzi|ÔøΩÔøΩwÔøΩ:ÔøΩÔøΩRÔøΩ3KÔøΩÔøΩÔøΩmÔøΩ\ÔøΩ>RÔøΩ ak@ÔøΩDj`ÔøΩÔøΩÔøΩmVÔøΩ]nÔøΩÔøΩÔøΩÔøΩHÔøΩAÔøΩÔøΩ(]ÔøΩÔøΩÔøΩÔøΩmÔøΩÔøΩKt*ÔøΩÔøΩSÔøΩ""ÔøΩ	qÔøΩÔøΩ{ÔøΩhÔøΩ@ÔøΩ ZÔøΩÔøΩÔøΩÔøΩÔøΩJÔøΩÔøΩÔøΩÔøΩMÔøΩsnSÃ¶LÔøΩhkQafqÔøΩU)ÔøΩÔøΩ@ÔøΩÔøΩÔøΩ2ÔøΩ7ƒêÔøΩÔøΩ,Ã§>ÔøΩr=ÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩ_cÔøΩ?;ÔøΩJhEÔøΩÔøΩÔøΩÔøΩR6ÔøΩlyÔøΩIÔøΩÔøΩÔøΩÔøΩŒøÔøΩ<ÔøΩ@ÔøΩ~6?ÔøΩ.ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ+uiÔøΩÔøΩ*ÔøΩÔøΩÔøΩa4\ÔøΩÔøΩOÔøΩÔøΩ/Ÿ©ÔøΩ~ÔøΩ&ÔøΩ‚∑ÖÔøΩÔøΩÔøΩKiÔøΩÈÆØÔøΩ1ÔøΩKÔøΩSÔøΩCÔøΩÔøΩÔøΩÔøΩ2G^ÔøΩ“ïÔøΩŒêFÔøΩÔøΩ?ƒüYFÔøΩoÔøΩÔøΩÔøΩqÀ≠6ÔøΩGlÔøΩÔøΩÔøΩÔøΩ7/›úÔøΩqÔøΩÔøΩ~ÔøΩÔøΩzÔøΩÔøΩ√£1ÔøΩÔøΩc.ÔøΩE‘πÔøΩÔøΩ=\ÔøΩÔøΩÔøΩ›ÅÔøΩDÔøΩQÔøΩÔøΩÔøΩÔøΩÔøΩpÔøΩn h$ÔøΩ$ÔøΩÔøΩÔøΩ-ÔøΩÔøΩ=:ÔøΩÔøΩ,.ZiÔøΩ5ÔøΩ6ÔøΩÔøΩÔøΩeÔøΩv+ÔøΩ#ÔøΩ}gÔøΩÔøΩÔøΩaÔøΩZÔøΩCÔøΩÔøΩÔøΩ=vÔøΩ)ÔøΩÔøΩÔøΩuÔøΩÔøΩÔøΩaÔøΩÔøΩJ1ÔøΩt~szÔøΩÔøΩÔøΩÔøΩ%~ÔøΩÔøΩ{Mz^CÔøΩBÔøΩ.ÔøΩ?ÔøΩyÔøΩ‹ÉÔøΩÔøΩ#M-ÔøΩÔøΩ@ﬁÜÔøΩ-rÔøΩÔøΩEh≈îÔøΩÔøΩ&ÔøΩ +tiÔøΩÔøΩπµ®ÔøΩÔøΩÔøΩ4=ÔøΩÔøΩ{ÔøΩJÔøΩiÁ∏ØÔøΩJÔøΩ|7{{ÔøΩÔøΩle“å@	ÔøΩÔøΩÔøΩuG87ÔøΩoÔøΩ)8 §AÔøΩÔøΩÔøΩ$ÔøΩ[UÔøΩÔøΩeÔøΩ|1i wcÔøΩF<ÔøΩ1ÔøΩ%ÔøΩKÔøΩÔøΩÔøΩVÔøΩÔøΩÔøΩÔøΩhÔøΩÔøΩÔøΩOu<+ÔøΩÔøΩÔøΩCÔøΩÔøΩÔøΩ}]ÔøΩC@ÔøΩ2yÔøΩÔøΩ> ÔøΩÔøΩÔøΩL`ÔøΩ MÔøΩP·ÄàDQÔøΩÔøΩ4ÔøΩÔøΩÔøΩÔøΩŸ≠ ÔøΩFÔøΩ„ÖàWÔøΩÔøΩ1.ÔøΩ&ÔøΩÔøΩ6ÔøΩXÔøΩÔøΩV2ÔøΩÔøΩ`ÔøΩÔøΩ5'ÔøΩ]Rc -ÔøΩJR[ÔøΩ ÔøΩÔøΩ	_vÔøΩÔøΩÔøΩÔøΩr^-ÔøΩeÔøΩA7bqLﬂπÔøΩ]d[ÔøΩÔøΩÔøΩÔøΩ\ÔøΩh\ÔøΩÔøΩ^ÔøΩÔøΩÔøΩ9ÔøΩu0ÔøΩ~qÔøΩ5ÔøΩÔøΩÔøΩlÔøΩÔøΩÔøΩÔøΩÔøΩ'ÔøΩwÔøΩÔøΩBNÔøΩa ÔøΩÔøΩK&ÔøΩÔøΩlÔøΩpÔøΩoÔøΩÔøΩÔøΩÔøΩÔøΩ=N)12`ÔøΩÔøΩÓìúÔøΩnQ…áÔøΩz3)dÔøΩ7ÔøΩ/ÔøΩÔøΩ&NÔøΩÔøΩÔøΩAÔøΩ7ÔøΩÔøΩÔøΩÔøΩF@ÔøΩSÔøΩÔøΩ“•ÔøΩÔøΩÔøΩQÔøΩRHO4ÔøΩIÔøΩz,ÔøΩPÔøΩAÔøΩ]ÔøΩyX °ÔøΩÔøΩPÔøΩÔøΩ3ÔøΩÕáÔøΩ""Lz\h<ÔøΩÔøΩÔøΩ>ÔøΩÔøΩÔøΩYÔøΩÔøΩÔøΩ)*~ÔøΩYÔøΩZf√ßÔøΩÔøΩÔøΩ6ÔøΩ|HÔøΩ?jÔøΩU/ÔøΩD1ÔøΩ ÔøΩSÔøΩÔøΩ?ÔøΩ`ÔøΩÔøΩ ÔøΩH€Ñ?vÔøΩ…úCÔøΩ%ÔøΩÔøΩ›∂ÔøΩ.ÔøΩÔøΩÔøΩ“önÔøΩÔøΩÔøΩFÔøΩÔøΩ%ya5OWmÔøΩ1ÔøΩÔøΩXÔøΩ1ÔøΩ ÔøΩGÔøΩÔøΩÔøΩ+ ÔøΩÔøΩ3IÔøΩÔøΩÿê'zÔøΩ—ÑÀùÔøΩ<ÔøΩÔøΩÔøΩIb^ ÔøΩMÔøΩÔøΩÔøΩskÔøΩÔøΩB_@wÔøΩ	ÔøΩÔøΩ ÔøΩ»Æ{ÔøΩBLÔøΩÔøΩÔøΩÔøΩÔøΩ≈ÅÔøΩÔøΩ*!	TÔøΩrÔøΩÔøΩÔøΩF*YÔøΩ6pÔøΩÔøΩtÔøΩ~!ÕüÔøΩÔøΩÔøΩÔøΩÔøΩz%ÔøΩÔøΩÔøΩÔøΩkg8ÔøΩ.ÔøΩCÔøΩÔøΩV3ÔøΩ[ÔøΩÔøΩ'fÔøΩ/ŸÖÔøΩÔøΩÔøΩ|{mÔøΩÔøΩ uÔøΩÔøΩÔøΩ}O QQ*ÔøΩÔøΩÔøΩOÔøΩ6ÔøΩÔøΩ',""ÔøΩXÔøΩÔøΩÔøΩ/ÔøΩÔøΩÔøΩh>ÔøΩCIkÔøΩÔøΩuCÔøΩÔøΩVÔøΩD.ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔÅ°·îö ÔøΩÔøΩeÔøΩÔøΩJÔøΩÀæÔøΩ?GÔøΩÔøΩNÔøΩÔøΩÔøΩŒúÔøΩÔøΩ<ÔøΩÔøΩ0ÔøΩ—ä*ÔøΩ_'dÔøΩk‹ñYÔøΩÔøΩsH<Ë¨ïtÔøΩF[n ®ÔøΩÔøΩÔøΩJ7ÔøΩÔøΩwÔøΩ<ÔøΩÔøΩY!ÔøΩzÔøΩ4ÔøΩÔøΩ@ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ›°ÔøΩÔøΩÔøΩÔøΩÔøΩƒõÔøΩÔøΩÔøΩÔøΩ~ÔøΩSÔøΩBÔøΩÔøΩWÔøΩ!ÔøΩdÔøΩKf—ü0ÔøΩÔøΩÔøΩÔøΩÔøΩP?ÔøΩpÔøΩKÔøΩA0%cÔøΩÔøΩÔøΩD2ÔøΩ?ÔøΩ‰¢Ω+œáÔøΩÔøΩ<ÔøΩTVrÔøΩÔøΩu|pÔøΩ≈íÔøΩR⁄ñÔøΩŸ¶ÔøΩ)ÔøΩÔøΩÔøΩ?ÔøΩmKHÔøΩÔøΩÔøΩcÔøΩHÔøΩ’≠ÔøΩÔøΩﬂæÔøΩÔøΩÔøΩÔøΩ+ÔøΩnÔøΩÔøΩÔøΩ:ÔøΩ∆™d⁄ên\@ÔøΩ4ÔøΩ,-##ÔøΩ-P ÔøΩÔøΩ'ÔøΩgÔøΩÔøΩÔøΩUÔøΩÔøΩÔøΩMÔøΩqXPÔøΩÔøΩZÔøΩiÔøΩÔøΩ{ÔøΩÔøΩZÔøΩMuÔøΩ^2ÔøΩAÔøΩÔøΩÔøΩ3ÔøΩÔøΩÔøΩtutÔøΩ,ÔøΩÔøΩ !ÔøΩÔøΩÔøΩHÔøΩ?vÔøΩ^uÔøΩ»£UÔøΩÔøΩrqÔøΩ~»ù‘∑ÔøΩÔøΩÔøΩbHJhTÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ5UÔøΩÔøΩvÔøΩyÔøΩÔøΩbÔøΩÔøΩÔøΩ|ÔøΩÔøΩX7ofÔøΩ\ÔøΩg =ÔøΩ#ÔøΩFÔøΩÔøΩ√ùNÎ±ôÔøΩ:i8bÔøΩÔøΩFÔøΩÔøΩÔøΩÔøΩÔøΩZÔøΩ!HÔøΩ()UPd1ÔøΩVÔøΩÔøΩ-vÔøΩÔøΩ ÔøΩÔøΩÔøΩFÔøΩÔøΩÔøΩ⁄ûq1ÔøΩÔøΩ<ÔøΩW}ÔøΩtAÔøΩgÔøΩWF◊¶ÔøΩXÔøΩÔøΩÔøΩESbÔøΩÔøΩÔøΩu1ÔøΩ{_,9{y}ÔøΩGTÔøΩÔøΩsÔøΩÔøΩ|4ÔøΩÔøΩPomÔøΩP.ÔøΩ◊±ÔøΩt–ÅÔøΩ\ÔøΩ@ÔøΩÔøΩ1ÔøΩP""qÔøΩsÔøΩÔøΩ;ÔøΩpNk]hÔøΩ+7(ÔøΩÔøΩJ@ﬁã0x3ÔøΩÔøΩÔøΩvÔøΩÔøΩ^ÔøΩ lÔøΩFÔøΩ«ê@ÔøΩÔøΩfÔøΩXPEÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ~/ÔøΩÔøΩ0ÔøΩ[jo/ÔøΩv^ÔøΩ;ÔøΩÔøΩÔøΩGÔøΩoÔøΩFQÔøΩÔøΩOjÔøΩÔøΩÔøΩÔøΩÔøΩ9RÔøΩÔøΩH""-AÃíe2—äÔøΩO3ÔøΩtÔøΩzXXÔøΩÔøΩ~ÔøΩÔøΩ2ÔøΩ+◊±ÔøΩxrÔøΩÔøΩzÔøΩÔøΩÔøΩJÔøΩGÔøΩÔøΩNÔøΩzÔøΩÔøΩÔøΩÔøΩÔøΩkÔøΩ%OÔøΩÔøΩ-vÔøΩÔøΩÔøΩÔøΩuP*ÔøΩPPI›£…º3ÔøΩÔøΩi94ÔøΩÔøΩ2ÔøΩÔøΩÔøΩÔøΩR$ÔøΩÔøΩX8ÔøΩ1ÔøΩÔøΩ√ïÔøΩÔøΩ~ÔøΩÔøΩgÔøΩ?fUÔøΩÔøΩ`ÔøΩÔøΩWÔøΩ|ÔøΩÔøΩÔøΩQÔøΩ1~ÔøΩ#ÔøΩÔøΩÔøΩÔøΩ’øÔøΩÔøΩgsÔøΩ$ÔøΩfÔøΩÔøΩÔøΩ’æÔøΩ""ÔøΩ;:ÔøΩEÔøΩŒàÔøΩl	ÔøΩÔøΩt1Ã©GIy9LÔøΩÔøΩ0ÔøΩqÔøΩÔøΩÔøΩ{ÔøΩ_ÔøΩ!ÔøΩÔøΩTÔøΩXCZÔøΩ1ÔøΩm÷éFÔøΩTÔøΩ@ÔøΩÔøΩZÔøΩ	#`xÔøΩÔøΩÔøΩ[ÔøΩÔøΩÒ•£¨YJÔøΩ%ÔøΩÔøΩvv…ãÔøΩSJj3<ÔøΩ√™G$ÔøΩ‚ºèÔøΩÔøΩÔøΩÔøΩœ≥ÔøΩÔøΩÔøΩK?ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ	ÔøΩ{;ÕùÔøΩQÔøΩÔøΩÔøΩEÔøΩÔøΩlÔøΩK∆éÔøΩ?j+ssÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ'CÔøΩZ\ÔøΩÔøΩtÔøΩÕ®ÔøΩwnÔøΩe…¶pJÔøΩﬂ°QÔøΩ+ÔøΩ!KÔøΩÔøΩÔøΩuÔøΩvÔøΩ]ÔøΩÔøΩLÔøΩÔøΩB&8ÔøΩÔøΩ<*ÔøΩ!ÔøΩÔøΩPÔøΩÔøΩÔøΩvÔøΩ:rÔøΩÔøΩÔøΩÔøΩÔøΩ‘¢ÃçÔøΩÔøΩW-SEÔøΩ#E2f=rÔøΩ""ÔøΩ]ÔøΩÔøΩ ´ÔøΩÔøΩ OÔøΩ'ÔøΩd4ÔøΩÔøΩÔøΩEÔøΩÔøΩÔøΩÔøΩIÔøΩs=ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩ>ÔøΩÔøΩÔøΩŸî90uÃ™ÔøΩ/ÔøΩÔøΩ3ÔøΩ^""lÔøΩÔøΩ.UÔøΩÔøΩ„èôÔøΩÔøΩ3ÔøΩÔøΩoÔøΩpsh ÔøΩÔøΩ‹ÑÔøΩJÔøΩVÔøΩÔøΩ*ÔøΩ\2[ÔøΩ]ÔøΩÔøΩÔøΩ#NŸ∑4ÔøΩÔøΩ%ÔøΩOÔøΩ∆™ÔøΩÔøΩF›®ÔøΩ^HlÔøΩ-ÔøΩ6ÔøΩ/ÔøΩEÔøΩÔøΩ%ÔøΩÔøΩÔøΩÔøΩÔøΩz	ÔøΩvÔøΩÓé∏;yDÔøΩ6ÔøΩÔøΩÔøΩÔøΩ?ÔøΩ!?ÔøΩN^h""ÔøΩ^CeÔøΩOW>‹∞r3ÔøΩz√çCÔøΩRÔøΩÔøΩL&Àö ÔøΩ#ÔøΩÔøΩ\ÔøΩt8qCjÔøΩÔøΩ	ÔøΩ1ÔøΩÔøΩ#1ÔøΩÔøΩÔøΩ*eNÔøΩÔøΩ6ÔøΩÔøΩ/""ÔøΩhÔøΩ1ÔøΩ;ÔøΩÔøΩÔøΩÔøΩÔøΩ;VÔøΩÔøΩ[ÔøΩquÔøΩp99ÔøΩÔøΩÔøΩEÔøΩkÔøΩAÔøΩ6ÔøΩpÔøΩÔøΩÔøΩŒ†ÔøΩ,L ]ÔøΩ ÔøΩw?ÔøΩÔøΩﬁâ@)TH6ÔøΩ"">@j‹∂ÔøΩÔøΩÔøΩzÔøΩP3ÔøΩRÂó§ÔøΩ ÔøΩÔøΩÔøΩe>ÔøΩ^ÔøΩÔøΩMÔøΩ4ÔøΩ/vÔøΩ()uÔøΩ,kÔøΩKÔøΩÔøΩgÔøΩÓ©¨–±YÔøΩÔøΩLkÔøΩ'ÔøΩa)ÔøΩÔøΩÔøΩ…ó=<ÔøΩÔøΩÔøΩ&ÔøΩ9ÔøΩ_ÔøΩÔøΩCZRsÔøΩT’ó&ÔøΩÔøΩ ÔøΩ/mÔøΩQÕ§xafÔøΩ$ÔøΩ}?ÔøΩÔøΩÔøΩZlRÔøΩ#8NÔøΩÔøΩr4ÔøΩ∆ûÔøΩWÓøÄh5ÔøΩ1ÔøΩxÔøΩ;G3<ÔøΩÔøΩÔøΩp4◊ÜÔøΩÔøΩlÔøΩÔøΩ`ÔøΩ!ÔøΩ6Ht/?1ÔøΩÔøΩÔøΩÔøΩ_}dÔøΩÔøΩnÔøΩLWÔøΩÔøΩVÔøΩÔøΩ-ÔøΩÔøΩÔøΩnPÔøΩ^ÔøΩÔøΩÔøΩÔøΩ?@ÔøΩÔøΩ, ÔøΩÔøΩ	ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩeÔøΩwOÔøΩÔøΩ\ÔøΩeÔøΩ.E,ÔøΩÔøΩÔøΩÔøΩ{ÔøΩ +W7TZÔøΩL`ÔøΩÔøΩLÔøΩ[<ÔøΩFÔøΩe6ÔøΩÔøΩÔøΩ""2|ÔøΩÔøΩMÔøΩy‘ùÔøΩ8w’∑ÔøΩÔøΩÔøΩ}ÔøΩk⁄¥ÔøΩÔøΩÔøΩ1ÔøΩÔøΩÔøΩSÔøΩÔøΩnÔøΩz'pÔøΩÔøΩÔøΩ3NÔøΩÔøΩﬁ™ÔøΩÔøΩÔøΩ4TÔøΩÔøΩÔøΩXmÔøΩ ÔøΩXÔøΩDÔøΩÔøΩ.ÔøΩX!mÔøΩÔøΩ%ÔøΩVÔøΩÔøΩvÔøΩÔøΩÔøΩÔøΩÔøΩnÔøΩw«äÔøΩlÔøΩÔøΩÔøΩ$ÔøΩÔøΩ2ÔøΩ[) ÔøΩ8""AÔøΩzÔøΩc◊±*ÔøΩÔøΩÔøΩ3ÔøΩ«§ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ‘á«ÄÔøΩÔøΩGu5>ÔøΩzÔøΩÔøΩeÔøΩÔøΩÔøΩwZÔøΩÔøΩTÔøΩÔøΩÔøΩTC.H?ÔøΩÔøΩ9ÔøΩÔøΩzcÔøΩY2ÔøΩÔøΩÔøΩ<ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩEÔøΩÌÇ±ÔøΩx[ÔøΩ#lÔøΩÔøΩ_VÔøΩ#—µÔøΩyÔøΩÔøΩÔøΩ]ÔøΩÔøΩÔøΩGÔøΩPÔøΩ`<ÔøΩ""ÔøΩÔøΩRÔøΩÔøΩÕª;YeS`m¬ºÔøΩÔøΩyÔøΩ$rÔøΩ`&MÔøΩÔøΩÔøΩÔøΩ DyÔøΩÔøΩ6$ÔøΩM""ÔøΩÔøΩkW2ÔøΩ.lÔøΩÔøΩ‡°ÖÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ[ÔøΩUHHÔøΩOÔøΩnÔøΩnmÔøΩi`ÔøΩh0ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩJZÔøΩÔøΩ-ÔøΩpÔøΩÔøΩÔøΩÔøΩOvjÔøΩeÔøΩÔøΩÔøΩ	5t)$ÔøΩÔøΩÔøΩhÔøΩÔøΩ2ÔøΩwKv8ÔøΩÔøΩ'5ÔøΩÔøΩ}'ÔøΩ*KÔøΩ1ÔøΩ&>ÔøΩ6ÔøΩÔøΩÔøΩÔøΩÔøΩu ÔøΩw ;ÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩiÔøΩÔøΩ!@ÔøΩ""ÔøΩ:+ÔøΩÔøΩÔøΩÔøΩaÔøΩ:ÔøΩ0&%ÔøΩÔøΩÔøΩvÔøΩÔøΩm$ÔøΩÔøΩ\ÔøΩLÔøΩ?iÔøΩ‹∫sZCKÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ5STÔøΩÔøΩÔøΩLÔøΩE [uÔøΩÔøΩÔøΩ;ÔøΩÔøΩÔøΩ‘∑ÔøΩÔøΩ?w“®OÔøΩÔøΩS;ÔøΩu6ÔøΩÔøΩÔøΩÔøΩ`uÔøΩÔøΩKÔøΩ)|Œ≥ÔøΩv%T|ﬁíÔøΩÔøΩÔøΩ^ ÔøΩhÔøΩÔøΩÔøΩÔøΩÔøΩO ZbÔøΩÔøΩÔøΩÃ≤^l{%aBÔøΩb*ÔøΩ–ØÔøΩÔøΩv»úY+ÔøΩÔøΩŒµ◊¥=ÔøΩÔøΩÔøΩÔøΩ~ÔøΩR}EtD`ÔøΩÔøΩMÔøΩWi9 ÔøΩ/ÔøΩÔøΩÔøΩÔøΩÔøΩ≈åÔøΩ ^#ÔøΩRÔøΩÔøΩ *sHÔøΩ^ÔøΩÔøΩIÔøΩÔøΩ6kYÔøΩH{ !)1j0ÔøΩ+:DÔøΩÃ≤ÔøΩPT>CÔøΩh*Ôö∞T ÔøΩJÔøΩ=cÔøΩ÷îÔøΩF2NÔøΩfÔøΩÔøΩÔøΩ>ÔøΩÔøΩÔøΩ#ÔøΩX/œ∑ÔøΩÔøΩnÔøΩÔøΩ1ÔøΩ^ÔøΩÔøΩÔøΩLÔøΩ |JAD+ÔøΩ0ÔøΩTÔøΩnÔøΩÔøΩÔøΩÔøΩÔøΩQ[ÔøΩÔøΩSÔøΩ4ÔøΩÔøΩW1ÔøΩÔøΩÔøΩj¬ÆY,œóÔøΩÔøΩÔøΩÔøΩkÔøΩAj6ÔøΩÔøΩÔøΩ$ÃùÔøΩ&=ÔøΩÔøΩaÔøΩZQmÔøΩÔøΩ?∆ØzAÔøΩ)ÔøΩÔøΩ=aÔøΩÔøΩdeRÔøΩÔøΩxÔøΩÔøΩÔøΩnÔøΩ'ÔøΩÔøΩ9ÔøΩÔøΩÔøΩKÔøΩÔøΩÔøΩ4ÔøΩQÔøΩxÔøΩÔøΩÔøΩÔøΩWÔøΩ1A—¢ÔøΩpÔøΩ1ÔøΩÔøΩÔøΩIÔøΩÔøΩÔøΩfQ÷¶iBÔøΩR]ÔøΩ_ÔøΩ_ÔøΩMÔøΩÔøΩ7bÔøΩÔøΩ.ÔøΩPiÔøΩUÔøΩWÔøΩÔøΩMGÔøΩ|ÔøΩ	;#ÿõAk(ÔøΩ{-ÔøΩ+ÔøΩ#ÔøΩ—†qHÔøΩSL2ÔøΩjÔøΩƒ†q!–ñÔøΩÔøΩ.ÔøΩÔøΩ9ÔøΩ ÔøΩ$OÔøΩÔøΩx9gÔøΩ\ÀâÔøΩ 6ÔøΩMÔøΩsÔøΩgÔøΩ‡æá*ÔøΩÔøΩUfrZb\~ÔøΩÔøΩ◊çq&’∂V7RÔøΩÔøΩe22}ÔøΩ1ÔøΩ)ÔøΩÔøΩÔøΩ)tk<–ÆÔøΩ&$_ÔøΩ<\ ÔøΩÔøΩÔøΩCÔøΩXÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩÔøΩI’∞LfÔøΩ d=ÔøΩPÔøΩÔøΩÔøΩÔøΩÔøΩ?ÔøΩAÔøΩKÔøΩ›±8ÔøΩ3ÔøΩÔøΩÔøΩÔøΩLÔøΩXÔøΩQS^QeAÔøΩSÔøΩÔøΩ.NÔøΩÔøΩÔøΩkÔøΩÔøΩ”†ÔøΩ=$,ÔøΩ-a@ÔøΩÔøΩÔøΩ>[)ÔøΩÔøΩuhÔøΩÔøΩÿöÔøΩÔøΩÔøΩÔøΩÔøΩ`ÔøΩÔøΩÔøΩÔøΩ7S\vÔøΩÔøΩÔøΩÔøΩpÔøΩtÔøΩ,ÔøΩÔøΩ;4ÔøΩ*ÔøΩNÔøΩÔøΩÔøΩÔøΩmÔøΩÔøΩÔøΩÔøΩÔøΩjÔøΩ (C/ÔøΩÔøΩÔøΩ	ÔøΩZ\«¥nYÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩNJLl0ÔøΩ ÔøΩÔøΩtÔøΩÔøΩzÔøΩ ÔøΩÔøΩVÔøΩÔøΩ{ÔøΩÔøΩÔøΩÔøΩ_'ÔøΩÔøΩ8‚±£3ÔøΩÔøΩ ±e“æsÔøΩcv*dÔøΩ[ÔøΩÔøΩHÔøΩI 3$[ÔøΩ ÔøΩ%@>ÔøΩÔøΩÔøΩRz 0ÔøΩ+cÔøΩÔøΩ}»´Q VÔøΩ≈ÖÔøΩ^$ÔøΩVZvÔøΩcÔøΩ÷ïÔøΩ⁄≥ÔøΩÔøΩJaÔøΩÔøΩÔøΩlo€±ÔøΩÔøΩÔøΩ∆≠+ÔøΩÔøΩ<(ÔøΩ/QÔøΩ;ÔøΩ;M}ÔøΩÔøΩ3ÔøΩÔøΩE^ÔøΩÔøΩ ÔøΩÔøΩ ZÔøΩÔøΩWÔøΩ[[nÔøΩ(%ÔøΩM#MÔøΩÔøΩ??A)KÔøΩÁöªÔøΩIÔøΩÔøΩnÔøΩrÔøΩvz_|ÔøΩ8ÔøΩJÔøΩokGVÔøΩGÔøΩ[ÔøΩ]ÔøΩÔøΩFÔøΩHHliÔøΩZÔøΩ8ÔøΩ&ÔøΩÔøΩF-«≠=)ÔøΩÔøΩ3WÔøΩÔøΩÔøΩoÔøΩÔøΩÔøΩ}ÿåÔøΩ[0ÔøΩlÔøΩÔøΩ`UÔøΩÔøΩÔøΩMCÔøΩÔøΩl!ÔøΩo>ÔøΩqÔøΩ`[4ÔøΩÔøΩ ÔøΩ^@W""Q;ÔøΩÔøΩÔøΩÔøΩÔøΩAZ&ÔøΩÔøΩkÔøΩDÔøΩh$`# #ÔøΩ«©qy?ÔøΩÔøΩ{v MÔøΩ–àÔøΩÔøΩÔøΩwa}ÔøΩ¬ÄÔøΩUÔøΩtÔøΩÔøΩÔøΩ*ÔøΩOYÔøΩÔøΩÔøΩ*ÔøΩÁ∫ª&ÔøΩsÔøΩn›Ñ‹Ø,!_ÔøΩÔøΩf|UfÔøΩD$LÔøΩÔøΩ%pÔøΩÔøΩ^hRc{ÔøΩÔöÉxRÔøΩZÔøΩnÔøΩÔøΩÔøΩ]ÔøΩÔøΩÔøΩT]ÔøΩÔøΩÔøΩ1IÔøΩrÔøΩÔøΩ{ÔøΩÔøΩÔøΩZÔøΩÔøΩ·É≥ekXÔøΩÔøΩÔøΩ ÔøΩ&ÔøΩÔøΩbOÔøΩÔøΩÔøΩÔøΩÔøΩ.ÔøΩVoÔøΩ@ÔøΩuÔøΩÔøΩÔøΩÔøΩÔøΩr`ÔøΩKT/ÔøΩÔøΩÔøΩÔøΩyÔøΩﬁÆÔøΩﬁ¶ÔøΩÔøΩÔøΩÔøΩ!6ÔøΩÔøΩ$ÔøΩ)ÔøΩxMQ- @qÔøΩ$3ÔøΩPÔøΩ,ÔøΩÔøΩ^+ÔøΩ]ÔøΩ'.]ÔøΩb ≠PVAQ'$ÔøΩ:ÔøΩÔøΩ.ÔøΩ(ÔøΩ'ÔøΩÔøΩÔøΩ ÔøΩÔøΩOÔøΩqÔøΩÔøΩdsNÔøΩÔøΩprtÔøΩƒûkVÔøΩÔøΩÔøΩoÔøΩ_ÔøΩ9€ô_ÔøΩ'|+ÔøΩÔøΩÔøΩz ejnÔøΩÔøΩÔøΩ%ÔøΩ+sÔøΩÔøΩ		ÔøΩVqÔøΩÔøΩuÔøΩRÔøΩkÔøΩÔøΩnzÔøΩ)ÔøΩYÔøΩÔøΩ""ÔøΩgÔøΩÔøΩVÔøΩ=WÔøΩgÔøΩ ÔøΩÔøΩ!ÔøΩX=ÔøΩÔøΩ1ÔøΩÔøΩ:'	*ÔøΩcp#ÔøΩHÔøΩsSÔøΩÔøΩÔøΩ -ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ<7ÔøΩ/ÔøΩÔøΩ	>ÔøΩ$ÔøΩYÔøΩ$ÔøΩYÔøΩÔøΩÔøΩ‚≤≠ÔøΩƒÑÃë@/ÔøΩ6ÔøΩÔøΩK÷ùÔøΩzÔøΩﬁ£ÔøΩH{vÔøΩÔøΩ$ÔøΩÔøΩ@ÔøΩÔøΩ\ÔøΩ!UÔøΩAÔøΩg[!ÔøΩÔøΩÔøΩ5/pÔøΩÔøΩ'ÔøΩÔøΩÔøΩBÔøΩ.ÔøΩÔøΩ%[ÔøΩUÔøΩfÔøΩÔøΩÔøΩÔøΩÔøΩD_ÔøΩ>ÔøΩÔøΩÔøΩXSFBÔøΩÔøΩ3f(ÔøΩÔøΩ>ÔøΩÔøΩ-)ÔøΩv,O“òÔøΩÔøΩctÔøΩÔøΩhKJÔøΩ: ÔøΩ pÔøΩÔøΩ<ÔøΩ/ÔøΩ$eÔøΩÔøΩwÔøΩOÔøΩ%`ÔøΩuÔøΩ~cSÔøΩÔøΩÔøΩ8—ΩÔøΩÔøΩÔøΩgDÔøΩQÔøΩÔøΩÔøΩÔøΩÔøΩb'5iÔøΩÔøΩK%""ÔøΩÔøΩ|VnVÔøΩÔøΩJÔøΩ€ï'85NÔøΩÔøΩÔøΩÔøΩw?BÔøΩJ:ÔøΩ^-◊ªÔøΩÔøΩ$ÔøΩfYÔøΩÔøΩÔøΩÔøΩÔøΩMÔøΩÔøΩÔøΩ1ÔøΩÔøΩKÔøΩÔøΩ7ÔøΩnÔøΩÔøΩﬁìÔøΩÔøΩLÔøΩÔøΩÔøΩÔøΩ7*=ÔøΩGÔøΩ,ÔøΩÔøΩÔøΩ'AÔøΩÔøΩ2ÔøΩÔøΩÔøΩÔøΩ|D0ÔøΩÔøΩÔøΩEÔøΩÔøΩC≈éC' ÔøΩÔøΩÔøΩRy&iÔøΩLÔøΩuÔøΩÔøΩd+ÔøΩWÔøΩgr=ÔøΩn= ÔøΩBÔøΩQpÔøΩÔøΩÔøΩÔøΩh25ÔøΩÔøΩÔøΩÔøΩmÔøΩuqÔøΩ ÔøΩJÔøΩ‹ù ÔøΩ*ÔøΩ*7ÔøΩÔøΩÔøΩ-&ÔøΩÔøΩKÔøΩÔøΩftÔøΩ6ÔøΩÔøΩÔøΩÔøΩiÔøΩiÔøΩÔøΩ⁄íÔøΩÔøΩ|^ÔøΩpÔøΩ`ÔøΩ|ÔøΩ?^8ÔøΩÔøΩÔøΩÔøΩ~ÔøΩÔøΩÔøΩUBﬂ∞ÔøΩ[ÔøΩpÔøΩÔøΩlzÔøΩ6y97SI<ÔøΩ(_ÔøΩ,}ÔøΩÔøΩÔøΩ;'ÔøΩÔøΩ--ÔøΩÔøΩÔøΩÔøΩÔøΩ{tÔøΩÔøΩi⁄´3ÔøΩ/m/ÔøΩÔøΩÔøΩOQÔøΩoNÔøΩT2Áì∫9ÔøΩmÔøΩÔøΩmy+ÔøΩVQAyÔøΩrC—õvÔøΩÔøΩÔøΩ9ÔøΩ}ÔøΩdÕÉÔøΩÔøΩÔøΩ3(=Y=ÔøΩLÔøΩÔøΩÔøΩ^ÔøΩukÔøΩ+ÔøΩ}+ÔøΩÔøΩ^2ÔøΩÔøΩÔøΩ'ZÔøΩ/ÔøΩXÔøΩ ∑;&kuÔøΩÔøΩÔøΩjÔøΩ…òÔøΩÔøΩÎ¨ñ{TKmyÔøΩÔøΩÔøΩÔøΩÔøΩpZÔøΩ@dY6ÔøΩJÔøΩ«ì‘ÖÔøΩ`ÔøΩ`ÔøΩÔøΩÔøΩyÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÃãBÔøΩÔøΩKÔøΩOÔøΩ⁄ôb[ÔøΩÔøΩqÔøΩLÔøΩÔøΩ}W-ÔøΩ ÔøΩ-ÔøΩ L`k[ÔøΩiÔøΩÔøΩÔøΩcÔøΩÔøΩ;ÔøΩÔøΩ*xÔøΩÔøΩ\ÔøΩÔøΩaKlÔøΩÔøΩRkÔøΩÔøΩ+'ÔøΩÔøΩ3ÔøΩÔøΩ)ÔøΩÔøΩ{ÔøΩ3ÔøΩÔøΩXÔøΩyÔøΩÔøΩÔøΩ?ÔøΩÔøΩÔøΩ{ÔøΩÔøΩ""ÔøΩRÔøΩgÔøΩÔøΩ;ÔøΩÔøΩÔøΩÔøΩV$ÔøΩÔøΩ‘ÖÔøΩ‘±ÔøΩÔøΩ$ÔøΩDÔøΩÔøΩ#7&8Oœ•ÔøΩÔøΩÔøΩÔøΩV?ÔøΩMÔøΩÔøΩxÔøΩÔøΩÔøΩP~+ÔøΩ	ÔøΩÔøΩÔøΩÔøΩ]Ã¨gEÔøΩW}ÔøΩÔøΩÔøΩÔøΩJkÔøΩÔøΩÔøΩKL?ÔøΩ	]ÔøΩ$BuÔøΩ)R÷ÉcÔøΩ5ÔøΩBÔøΩ=ÔøΩ)ÔøΩÔøΩF-ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ[ÔøΩ)ÔøΩVÔøΩ9ﬂ£ÔøΩ`dSÔøΩÔøΩ;ÔøΩMÔøΩbÔøΩ∆ΩÔøΩÔøΩÔøΩ_ÔøΩÔøΩÔøΩZ€ºÔøΩVÔøΩ tÔøΩÔøΩÔøΩ]ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩmÔøΩ+ iAÔøΩÔøΩ’ê ÔøΩÔøΩÔøΩ ÔøΩirÔøΩ‚∫°y=ÔøΩÔøΩQTÔøΩy2ÎãòÔøΩÔøΩr>IÔøΩq>ÔøΩbÔøΩÔøΩCÔøΩ]ÔøΩ!cÔøΩD~ÔøΩÔøΩÔøΩ)ÔøΩb»ØÔøΩMÔøΩ(lÔøΩsÔøΩÔøΩJÔøΩCÔøΩÔøΩBÔøΩV8ÔøΩÔøΩbÔøΩ""ÔøΩÔøΩÔøΩaÔøΩÔøΩ	xmI8mlÔøΩÔøΩÔøΩ$ÔøΩÔøΩ=ÔøΩwA2>`ÔøΩ÷ØÔøΩ=»µÔøΩXWÔøΩ,`»èÔøΩÔøΩÔøΩÔøΩÔøΩHÔøΩÔøΩÔøΩ^/b-ÔøΩ""ÔøΩÔøΩ	ÔøΩ{PÔøΩÔøΩ ÔøΩ9ÔøΩ]ÔøΩÔøΩÔøΩvGÔøΩÔøΩŸáÔøΩ;wx2wIÔøΩFÔøΩwÔøΩœ¥w_ÔøΩÔøΩz≈≤ÔøΩÔøΩÔøΩgÔøΩ?ÔøΩquÔøΩkÔøΩZÔøΩ!ÔøΩg0j–∞ÔøΩÔøΩÔøΩ)*ÔøΩÔøΩ=i(4W)l$ÔøΩÔøΩHxTÔøΩÔøΩv	ÔøΩ*ÔøΩÔøΩ""ÔøΩÔøΩ4ÔøΩÔøΩÔøΩ /ÔøΩ.ÔøΩS) ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩGZjÔøΩÔøΩaUÔøΩ oÔøΩÔøΩÔøΩ\ÔøΩs,VÔøΩÔøΩfeÔøΩ7_ -ÔøΩÔøΩ!ÔøΩÔøΩ)ÔøΩÔøΩiI3ÔøΩ_ÔøΩRtÔøΩÔøΩÔøΩ.V*ÔøΩÔøΩÔøΩÀπÔøΩ*ÔøΩÔøΩYÔøΩÔøΩHÔøΩ=ÔøΩÔøΩpÔøΩE@ÔøΩbÔøΩKÔøΩTÔøΩÔøΩc[pÔøΩQÔøΩÔøΩffÔøΩÔøΩÔøΩÔøΩ)ÔøΩ""ÔøΩUÔøΩÔøΩÔøΩ&ÔøΩ @1""ÔøΩ:<ŸûÔøΩ{aKYÔøΩÔøΩWÔøΩÔøΩ n^P^\—ùPÔøΩÔøΩr5ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩGÔøΩC2ÔøΩ2ÔøΩÔøΩv4ÔøΩÔøΩÔøΩÔøΩ)ÔøΩÔøΩ\rY5ÔøΩÔøΩ4ÔøΩMUc)ÔøΩuÔøΩ~ÔøΩÔøΩÔøΩXÔøΩ|ÔøΩÔøΩ@V[ÔøΩÔøΩHhÔøΩÔøΩÔøΩBÔøΩ~uÔøΩ%ÔøΩa7c{cÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩÔøΩOWÔøΩÔøΩiWÔøΩKÔøΩÔøΩmÔøΩ5ÔøΩl@ÔøΩÔøΩÔøΩÏÆåmVDÔøΩUÔøΩ""ÔøΩ oÔøΩ:oÔøΩHÔøΩÔøΩKÔøΩPB+ÔøΩdV÷Æ+IﬁÑHÔøΩ""ÔøΩ ÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩ`.ÔøΩÔøΩÔøΩbÔøΩÔøΩ5ÔøΩ8ÔøΩÔøΩ€∂ÔøΩ>@oÔøΩiÔøΩ3ÔøΩNÔøΩÔøΩÔøΩqPÔøΩÕÖÔøΩ xxpxO~vÔøΩNÔøΩqÔøΩÔøΩ‘öGu}ÔøΩaFDDAÔøΩ xÔøΩ@ÔøΩIÔøΩÔøΩ$ÔøΩÔøΩÔøΩUÔøΩÔøΩ\ÔøΩÔøΩÔøΩ ÔøΩIÔøΩÔøΩmKÔøΩuÔøΩ,ÔøΩÔøΩÔøΩ(ÔøΩÔøΩE{ÔøΩ$–†PÔøΩÔøΩÔøΩŸÖ0ÔøΩG/ÔøΩÔøΩvTkÔøΩfÔøΩÔøΩŸÖiKÔøΩXÔøΩO  ÔøΩTCÔøΩÔøΩÔøΩÔøΩO	rx}dÔøΩ>ÔøΩJÀ¨ÔøΩ+~ÔøΩ$ÔøΩJÔøΩFÔøΩÔøΩ`MÔøΩÔøΩ√ªÔøΩn;3ÔøΩÔøΩÔøΩÔøΩPFÔøΩÔøΩ kÔøΩPÔøΩÔøΩVÔøΩ7ÔøΩ–äÔøΩÔøΩdÔøΩÔøΩ ÔøΩ{ÔøΩÔøΩÔøΩ |CCXÔøΩÔøΩÔøΩÔøΩl+ÔøΩÔøΩÔøΩÔøΩÔøΩK:S`jS(5[TÔøΩÔøΩuÔøΩÔøΩ@ÔøΩG“™ÔøΩÔøΩ8TfÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ=]KÔøΩÔøΩÿêÔøΩÔøΩj[ÔøΩÔøΩÔøΩ0LÔøΩÔøΩÔøΩoqÔøΩs ÔøΩr6ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ|ÔøΩÔøΩÔøΩnWÔøΩÔøΩbÔøΩaÔøΩ)CÔøΩVÔøΩÔøΩB3ÔøΩÔøΩzÔøΩÔøΩ9K/›±ÔøΩ 	+ÔøΩ>ÔøΩÔøΩÔøΩÔøΩa""ÔøΩ*vfÔøΩÔøΩRÔøΩÔøΩÔøΩÔøΩ ÔøΩeBÔøΩ;ÔøΩÔøΩtÔøΩ5ÔøΩÔøΩÔøΩÔøΩSÔøΩ(ÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩOÔøΩÔøΩKÔøΩÔøΩI$ÔøΩﬂìÔøΩ‘Éu›ÉÔøΩMhHÔøΩÔøΩÔøΩÔøΩ*⁄âg7ÔøΩQ3ÔøΩÔøΩ{„†∂ÔøΩ-ÔøΩƒ∞4 õÔøΩÔøΩÔøΩÔøΩ-3;ÔøΩEÔøΩGaÔøΩflÔøΩÔøΩÔøΩwÔøΩÔøΩ_ÔøΩAÔøΩvÔøΩÔøΩÔøΩ8ÔøΩ$ÔøΩÔøΩÔøΩÔøΩÿê€æ)ÔøΩ>ÔøΩoÃßÔøΩ&iTÔøΩNm<ÔøΩRÔøΩVqIQk\ÔøΩÔøΩÔøΩÔøΩZÔøΩHÔøΩÔøΩ+3)ÔøΩÔ™ÉyÔøΩÔøΩw9ÔøΩÔøΩWÔøΩd‹≤ÔøΩÔøΩÔøΩÔøΩSUoÔøΩÔøΩ-PsBÔøΩ~1yÔøΩ:v^ÔøΩÔøΩÔøΩzÀªy)cÔøΩ1(ÔøΩÔøΩÔøΩ<AÔøΩÔøΩÔøΩJÔøΩÔøΩ ÔøΩÔøΩ2ÔøΩÔøΩÔøΩÔøΩÔøΩÒ™πÆ!ÔøΩ÷ÆÔøΩÔøΩÔøΩÔøΩÔøΩ""ÔøΩÔøΩÔøΩ\dÔøΩÔøΩllÔøΩÔøΩÔøΩÔøΩ=nc]ÔøΩNÔøΩÔøΩÔøΩ?ÂàºiÔøΩÔøΩÔøΩÔøΩÔøΩ`s%ÔøΩÔøΩÔøΩeÔøΩ]ÔøΩÔøΩÔøΩÔøΩp@ÔøΩÔøΩÔøΩpÔøΩZÔøΩÔøΩKÔøΩÔøΩÔøΩ ÔøΩÔøΩ_ÔøΩ3$\ÔøΩÔøΩzÔøΩMLÔøΩﬂ∑i^ÔøΩÔøΩÔøΩÔøΩﬂé~ÔøΩÔøΩÔøΩAxÔøΩÔøΩl{ÔøΩ‹πÔøΩ3ÔøΩSÔøΩtA{J3ÔøΩ⁄ØÔøΩ)ÔøΩÔøΩ6/ÔøΩÔøΩf!ÔøΩÔøΩkÔøΩS_ÔøΩÔøΩ.r+ÔøΩÿéÔøΩZÔøΩÔøΩÔøΩÔøΩ2ÔøΩÔøΩqÔøΩÔøΩTÔøΩÔøΩÔøΩ$ÔøΩÔøΩÔøΩ-ÔøΩÔøΩG&r]inXÔøΩÔøΩ??(ÔøΩÔøΩ	&`ÔøΩÔøΩÔøΩÔøΩo ÔøΩÔøΩiÔøΩ'ÔøΩÔøΩÔøΩjÔøΩÔøΩg$lÔøΩÔøΩÔøΩÔøΩÔøΩ%ÔøΩ0j’î'<	(yÔøΩC)ÔøΩ/XNÔøΩ'DﬂóaBÔøΩÔøΩÔøΩhÔøΩÔøΩeÔøΩÔøΩFÔøΩÔøΩgEÔøΩ[RÔøΩmÔøΩÔøΩ1ÔøΩÔøΩ«íÔøΩÔøΩ6lÔøΩÔøΩ2ÔøΩÔøΩ6ÔøΩvnWÔøΩ:ÔøΩÔøΩnÔøΩ1ÔøΩÔøΩÔøΩÔøΩq[ÔøΩÔøΩhiÔøΩÔøΩVVÔøΩ:ÔøΩzHÔøΩÔøΩﬁ£1ÔøΩÔøΩÔøΩÔøΩ7ÔøΩÔøΩÔøΩX,ÔøΩÔøΩgÔøΩÔøΩ'ÔøΩzÔøΩ#ÔøΩZDxÔøΩ;ÔøΩdÔøΩœàB	ÔøΩ¬øÔøΩ‹¨+yJÔøΩoÔøΩS^dÔøΩ`ÔøΩÔøΩÔøΩ=ÔøΩÔøΩÔøΩÔøΩÔøΩ!]XÔøΩÔøΩxyÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ⁄ìÔøΩÔøΩÔøΩe√©pOÔøΩÔøΩÔøΩ,ÔøΩ'Z!ÔøΩÔøΩ/KÔøΩ2WÔøΩÔøΩ'ÔøΩ%#ÔøΩwÔøΩDBÔøΩeÔøΩYÔøΩÔøΩWÔøΩ!’ÜÔøΩKÔøΩÔøΩqÔøΩÔøΩYM;ÔøΩ”èÔøΩ+FÔøΩ3cﬂ§ÔøΩmS$ÔøΩXÔøΩ:`r ÔøΩWÔøΩÔøΩ SpiuÔøΩ>ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ>ÔøΩmiQÔøΩÔøΩÔøΩ/ÔøΩÔøΩbÔøΩÔøΩÔøΩÔøΩN\ÔøΩuÔøΩ*ÔøΩEÔøΩrÔøΩÔøΩÔøΩdÔøΩÔøΩ|JD=ÔøΩÔøΩ7CÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ/iÔøΩÔøΩÔøΩqdsN9ÔøΩÔøΩÔøΩnÔøΩrGÔøΩR6ÔøΩÔøΩÔøΩDÔøΩ9Hu'^ÔøΩÔøΩÔøΩÔøΩWx=ÔøΩÔøΩPoFr_ÔøΩp„íúÔøΩÀß0ÔøΩ4ÔøΩÔøΩÔøΩÔøΩ4ÔøΩSÔøΩlÔøΩ*TS	TGÔøΩ]ÔøΩÔøΩAÔøΩtÔøΩKÔøΩÔøΩÔøΩXÔøΩzÔøΩÔøΩpÔøΩÔøΩ ÔøΩÔøΩÔøΩ ÔøΩÔøΩZ=ÔøΩÔøΩÔøΩÔøΩÔøΩ”ÜÔøΩÔøΩ;ÔøΩZÔøΩÔøΩÔøΩÔøΩÔøΩJrÔøΩÔøΩÔøΩÔøΩ[?ÔøΩwÔøΩLmÔøΩÔøΩÔøΩ]ÔøΩÔøΩkÔøΩÔøΩ$ÔøΩ}J4ÔøΩÔøΩÔøΩ;ÔøΩ#KÔøΩÔøΩÔøΩÔøΩx""ÔøΩÔøΩÔøΩÔøΩ	VÔøΩhÔøΩÔøΩÔøΩ1ÔøΩ-ÔøΩ,ÔøΩ<ÔøΩYÔøΩ;ÔøΩÔøΩ:ÔøΩKÔøΩÔøΩ/-ÔøΩA-PÔøΩÔøΩ6ÔøΩÔøΩÔøΩF{}ÔøΩ@i_ÔøΩÔøΩŒée[ÔøΩÔøΩÔøΩÔøΩ ÔøΩ0TpÔøΩÔøΩPÔøΩ=ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!	Fw1iÔøΩnft(ÔøΩÔøΩÔøΩÔøΩ[:lS#.6ÔøΩR;ÔøΩPÔøΩCÔøΩÕøÔøΩÔøΩÔøΩÁ§ìÔøΩbÔøΩÔøΩ5XÔøΩziÔøΩÔøΩU""ÔøΩÔøΩ+ÔøΩo[ÔøΩQÔøΩÔøΩ ÔøΩ`ÔøΩeÔ≥°'9ÔøΩzÔøΩe!ÔøΩi=ÔøΩtÔøΩÔøΩÔøΩÔøΩÔøΩ(ÔøΩÔøΩMEÔøΩvÔøΩ-ÔøΩ%dÔøΩÔøΩ ÔøΩ ∆¥ÔøΩÔøΩ’∏ÔøΩP<=ÔøΩ`UHlÔøΩÔøΩÔøΩ‹ã ÔøΩ8ÔøΩ,ÔøΩÔøΩ<ÔøΩAÔøΩÔøΩ¬∫ÔøΩÔøΩ2ÔøΩ{ÔøΩ—ãÔøΩCÔøΩÔøΩpÔøΩ620-ÔøΩ,8'ÔøΩ#BÔøΩn[ÔøΩÔøΩTÔøΩÔøΩÔøΩwT*ÔøΩg_wÔøΩmu5ÔøΩ∆óÔøΩÔøΩtÔøΩÔøΩÔøΩ{jB6ÔøΩÔøΩs3*SÔøΩÔøΩyÔøΩY:l∆Ä5ÔøΩÔøΩN‘∞UÔøΩÔøΩwV8ÔøΩgÔøΩV&NÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!M4vÔøΩÔøΩ&SÔøΩgÔøΩqÔøΩBÔøΩ3yÔøΩpÔøΩÔøΩÔøΩ€¢nWÔøΩÔøΩ BÔøΩx|\5ÔøΩzÔøΩÔøΩMÔøΩ:ÔøΩPÔøΩÔøΩÔøΩÔøΩ5$'QÔøΩ`rÔøΩPxÔøΩ/CÔøΩÔøΩÔøΩ$ÔøΩ]2 2ibÔøΩ_ÔøΩÔøΩÔøΩÔøΩ_ÔøΩ?ÔøΩÔøΩÔøΩ…æcÔøΩÔøΩÔøΩÔøΩi6ÔøΩUÔøΩÔøΩbÔøΩÔøΩWÔøΩﬁõ`ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩO/ ÔøΩÔøΩÔøΩZÔøΩGÔøΩ7ÔøΩÔøΩÔøΩk-ÔøΩÔøΩÔøΩÔøΩÔøΩ|ÔøΩÔøΩ÷ªÔøΩÔøΩTM]ÔøΩÔøΩÔøΩ%ÔøΩEÔøΩ__&ÔøΩa\ÔøΩdÔøΩ\6ÔøΩÔøΩÔøΩdr=ZpÔøΩ?%ÔøΩH$>ÔøΩÔøΩÔøΩÔøΩw6ÔøΩÔøΩÔøΩC<vÔøΩÔøΩfÔøΩÔøΩÔøΩÔøΩY0L«öÔøΩ;$#ÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ(ÔøΩÔøΩBaxÔøΩ ZÔøΩ?zÔøΩÔøΩCÔøΩÔøΩÔøΩ6œÖS∆∏ÔøΩ3`ÔøΩÔøΩL#BÔøΩÔøΩ>ÔøΩÔøΩÔøΩ–®4ÔøΩjWÔøΩÔøΩÔøΩUÔøΩRZÔøΩ‘ógÔøΩÔøΩÔøΩlvÔøΩw(: c|ÔøΩ:QCx ⁄™XÔøΩÔøΩÔøΩqÔøΩiÔøΩ+CÔøΩ9{ÔøΩÔøΩÔøΩ dmw.yÔøΩy\*/ÔøΩ#ÔøΩ_bÔøΩaÔøΩo~ÔøΩÔøΩFÔøΩÔøΩS-ÔøΩÔøΩ$ÔøΩÔøΩHÔøΩÔøΩÔøΩAÔøΩcqy0ÔøΩÔøΩ*ÔøΩ_ÔøΩÔøΩQ;ÔøΩ|+K'@DÔøΩÔøΩÔøΩRX`zIÔøΩÔøΩTxÔøΩÔøΩÔøΩÔøΩDjj/ ÔøΩÔøΩÔøΩ5ÔøΩ q""kÔøΩ0ÔøΩÔøΩÔøΩ+ÔøΩÔøΩÔøΩÔøΩÔøΩ{ÔøΩÔøΩÔøΩÔøΩÔøΩLÔøΩdSfÔøΩÔøΩ8oOÔøΩW/7ÔøΩÔøΩoc%GWÔøΩÔøΩ|ÔøΩÔøΩ]ÔøΩÔøΩFÒè∂ô|'ÔøΩÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩ‹âzÔøΩÔøΩÔøΩbÔøΩOÔøΩ UP?ÔøΩÔøΩÔøΩkÔøΩGÔøΩÔøΩÔøΩIÔøΩdÔøΩÔøΩC∆∏ÔøΩÔøΩÔøΩÔøΩmbÔøΩ?GÔøΩ=eÔøΩÔøΩK@ixBBÔøΩpÔøΩÔøΩÔøΩÊ¢ëÔøΩ¬∞yÔøΩÔøΩ6ÔøΩaÔøΩÔøΩ!e`ÔøΩÔøΩ""ÔøΩÔøΩÔøΩÔøΩ[ÔøΩ|ÔøΩÔøΩÔøΩ9@ÔøΩf&,ÔøΩÔøΩÔøΩ$/ÔøΩÔøΩ4ÔøΩLÔøΩÔøΩÕô[=ÔøΩ&K3ÔøΩE	UÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ_VyÔøΩw1ÔøΩÔøΩ«ÇmÔøΩ  ÇÔøΩÔøΩÔøΩ%ÔøΩ+ÔøΩgÃëÔøΩI$v37≈è@ÔøΩ30pE""ÔøΩr9ÔøΩÔøΩEeÔøΩ—®u-ÔøΩÔøΩÔøΩg	@ÔøΩv![ÔøΩHÔøΩ7ÔøΩJSÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ~ÔøΩWÔøΩu ÔøΩxWÔøΩÔøΩKhÔøΩ(5!ÔøΩÔøΩÔøΩO^ÔøΩTÔøΩ:ÔøΩÔøΩÔøΩxÔøΩ8*ÔøΩVÔøΩa|WÔøΩÔøΩe> stream xÔøΩÔøΩZÔøΩrÔøΩ6}ﬂØÔøΩÔøΩxÔøΩ  UÔøΩÔøΩÔøΩ~ÔøΩÔøΩ&gk82ms#KÔøΩÔøΩKÔøΩ~ÔøΩAP&@RÔøΩ]Œ¶&&ÔøΩ ÔøΩÔøΩÔøΩn4@BL2&9Q.1aIWAxlÔøΩ*IÔøΩL*""""lOÔøΩH4\5ÔøΩVnÔøΩbÔøΩ0ÔøΩ$fpe$1ÔøΩtÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ+ÔøΩ≈†@I¬òmÔøΩQLÔøΩXÔøΩ9ÔøΩÔøΩHÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÿî04	M	ÔøΩÔøΩFtÔøΩ}@ÔøΩQÔøΩ$<2ÔøΩYÔøΩÔøΩ) ÔøΩcÔøΩsÔøΩÔøΩÔøΩ.ÔøΩGÔøΩ#¬ïÔøΩfÔøΩkTÔøΩ9ÔøΩÔøΩÔøΩƒëÔøΩ#HÔøΩ4xÔøΩ‚ò°DÔøΩXÔøΩ(IÔøΩ4ÔøΩ5ÔøΩ’ÜƒöA<ÔøΩFÔøΩB√Ä2ÔøΩk8ÔøΩÔøΩ14¬ç ÔøΩÔøΩIÔøΩÔøΩ ÔøΩ$vÔøΩ5jÔøΩÔøΩ1ÔøΩ1DÔøΩ  ÔøΩ#ÔøΩ1 ÔøΩsÔøΩÔøΩÔøΩ56ÔøΩDIÔøΩMÔøΩ( ÔøΩy$IAPyÔøΩ 2%	IÔøΩ>ÔøΩÔøΩHÔøΩÔøΩÔøΩ&8ÔøΩÔøΩ&ÔøΩFtÔøΩMÔøΩÔøΩÔøΩÔøΩÔøΩfÔøΩHÔøΩD√ô$ÔøΩ	 (6qDl#ÔøΩHÔøΩfÔøΩ@ÔøΩ!FQÔøΩ5QÔøΩÔøΩ8ÔøΩqH6ÔøΩ9ÔøΩ +ÔøΩEÔøΩÔøΩa~ ÔøΩÔøΩÔøΩWBÔøΩÔøΩYBRÔøΩe? ÔøΩÔøΩÔøΩÔøΩ<ÔøΩgÔøΩÔøΩ:nÔøΩ/ÔøΩbÔøΩAÔøΩÔøΩ>ÔøΩÔøΩÔøΩrÔøΩ.ÔøΩwÔøΩÔøΩÔøΩ}SÔøΩÔøΩÔøΩÔøΩMoÔøΩpÔøΩÔøΩ'ÔøΩ1ÔøΩFÔøΩÔøΩÔøΩ7heÔøΩIÔøΩÌõåÔøΩÔøΩKxÔøΩÔøΩ ÔøΩÔøΩq8ZxÔøΩÔøΩÔøΩÔøΩœäj7ÔøΩÔøΩ}ÔøΩ*4ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩEÔøΩÔøΩGÔøΩÔøΩ}]ÔøΩÔøΩÔøΩbOÔøΩ^ÔøΩKÔøΩÔøΩdÔøΩk5ÔøΩ?ZÔøΩÔøΩÔøΩG|ÔøΩ$^Eu‚ïó)juÔøΩÔøΩÔøΩvÔøΩÔøΩbÔøΩjwÔøΩX‡æü⁄éÔøΩÔøΩhÔøΩ9ÔøΩ_ÔøΩÔøΩÔøΩ*LGÔøΩÔøΩ je2ÔøΩMÔøΩ4ÔøΩ4WÔøΩÔøΩ?1dÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩÌì•BÔøΩÔøΩOÔøΩ\ÔøΩÔøΩÔøΩDÔøΩÔøΩÔøΩbÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩgÔøΩ ÔøΩÔøΩÔøΩtÔøΩÔøΩÔøΩÔøΩ%}]!ÔøΩArÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩD+GÔøΩÔøΩ!	ÔøΩN:ÔøΩKl?5ÔøΩÔøΩÔøΩtÔøΩÔøΩOaÔøΩlÔøΩ\ÔøΩÔøΩkÔøΩlÔøΩÔøΩÔøΩÔøΩŒâÔøΩÔøΩ	zÔøΩfÔøΩÔøΩ<ÔøΩÔøΩ9ÔøΩÔøΩÔøΩ2€âÔøΩÔøΩA/ÔøΩÔøΩ?gXÔøΩÔøΩÔøΩÔøΩÔøΩc	ÔøΩÔøΩÔøΩÔøΩÔøΩtÔøΩÔøΩÔøΩÔøΩÔøΩ„°µÔøΩÔøΩ÷°L4ÔøΩWÔøΩÔøΩÔøΩ:,MÔøΩYO⁄≠ÔøΩ]ÔøΩÔøΩOOÔøΩÔøΩÔøΩÔøΩ‘≠+ÔøΩbÔøΩ5ÔøΩÔøΩ5ÔøΩÔøΩvÔøΩ7◊ΩÔøΩÔøΩ-bÔøΩÔøΩÔøΩ«ΩD]ÔøΩi\v?ÔøΩÔøΩ]ÔøΩXÔøΩÔøΩmÿõÔøΩÔøΩe^ÔøΩÔøΩ?ÔøΩ€ø88ÔøΩqÔøΩ<ÔøΩ≈∫~7x/ÔøΩÔøΩA;ÔøΩÔøΩÔøΩ?ÔøΩ-ke\ÔøΩÔøΩ2RÔøΩ=V6|ÔøΩÔøΩ/ÔøΩHiÔøΩ<}ÔøΩMdÔøΩÔøΩ'{ÔøΩÔøΩÔøΩÔøΩ»áÔøΩL(!ÔøΩÿöÔøΩx;ÔøΩÔøΩÔøΩ^ÔøΩÔøΩoÔøΩ'ÔøΩZWÔøΩNiÔøΩn}kÔøΩ=0ÔøΩÔøΩqÔøΩ`√∏	ÔøΩÔøΩÔøΩEÔøΩÔøΩ>ÔøΩÔøΩm_ÔøΩÔøΩÀÄxÔøΩÔøΩ·ÑíÔøΩÔøΩhnÔøΩÔøΩÔøΩ\]ÿåVÔøΩBO„∞ÜÔøΩgÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ<–Ø ÔøΩ◊ìÔøΩÔøΩ(ÔøΩGÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÎ∂îÔøΩÔøΩÔøΩFÔøΩÔøΩÔøΩÔøΩ"":8ÔøΩ:ÔøΩÔøΩÔøΩÔøΩh7-ÔøΩÔøΩtÔøΩ%n-ÔøΩ5ÔøΩwÔøΩ;9ÔøΩl_ÔøΩÔøΩ»õÔøΩÔøΩ%0ÔøΩkÔøΩÔøΩÔøΩQB{ÔøΩÔøΩ`ÿ≥ÔøΩÔøΩEÔøΩ$-÷õ3}ÕÖÔøΩwlÔøΩÔøΩOÔøΩÔøΩÔøΩÎáá]ÔøΩD=n&›öÔøΩÔøΩwÔøΩÔøΩ›õÔøΩÔøΩÔøΩÔøΩÔøΩ|ÔøΩ<ÔøΩJÔøΩ7ÔøΩ;ÔøΩ\ÔøΩÔøΩÔøΩj`#ÔøΩ_|ÔøΩƒØÔøΩÔøΩBwÔøΩ}ÔøΩwÔøΩÔøΩ5ÔøΩ^3ÔøΩÔøΩkf<ÔøΩ(rg'◊∑{÷¥WÔøΩYkÔøΩ ÔøΩÔøΩÔøΩÔøΩYGÔøΩÔøΩ⁄æÔøΩÿΩÔøΩÔøΩÔøΩÔøΩ\ÔøΩY—®ÔøΩlÔøΩ*ÔøΩ: ÔøΩÔøΩÔøΩÔøΩÔøΩÈÅµÔøΩ_ÔøΩÔøΩLÔøΩ53ÔøΩyÔøΩÔøΩ‹≥ÔøΩÂûÖÔøΩ=K	ÔøΩyÔøΩÔøΩ÷ùJÔøΩ`{pÔøΩÔøΩÔøΩÔøΩÔøΩNÔøΩbFmÔøΩÔøΩ\ZÔøΩPÔøΩul1BÔøΩT;ÔøΩÔøΩ0ÔøΩÔøΩÔøΩÔøΩÔøΩ""+ÔøΩ':ÔøΩdÔøΩÔøΩ>›ÄÔøΩÔøΩÔøΩÔøΩ7ÔøΩ3ÔøΩÔøΩÔøΩ-loO 'ÔøΩÔøΩÔøΩ&ÔøΩb[AÔøΩÔøΩ\ÔøΩÔøΩÔøΩÔøΩ≈ßtÔøΩÔøΩ)ÔøΩÔøΩÔøΩ""Á£≠ÔøΩtÔøΩÔøΩQdOÔøΩDÔøΩ:ÔøΩ	tÔøΩÔøΩÔøΩzO\ÔøΩcÔøΩÔøΩ>ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩNr ÔøΩ Ÿ∑lBÔøΩZ<ÔøΩ3ÔøΩÔøΩÔøΩÔøΩÔøΩDÔøΩ+ÔøΩÔøΩÔøΩÔøΩÔøΩ\ÔøΩ»Ω=J;ÔøΩÔøΩÔøΩAÔøΩ}}NÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩﬂÑÔøΩÔøΩÔøΩi+ÔøΩÔøΩÔøΩ#ÔøΩEÔøΩÔøΩ›•{tÔøΩÔøΩ#⁄£ÔøΩÔøΩwzA/ÔøΩÔøΩÔøΩCzKSÔøΩÔøΩ~ÔøΩÔøΩÔøΩ?3xQÔøΩ/ÔøΩÔøΩÔøΩ%nDGÔøΩÔøΩtÔøΩÔøΩRzGÔøΩÔøΩJzÔøΩSÔøΩÔøΩt>ÔøΩGÔøΩÔøΩsÔøΩTÔøΩÔøΩO:ÔøΩOtÔøΩ8ÔøΩ,ÔøΩÔøΩ+ÔøΩUoÔøΩJÔøΩlÔøΩÔøΩOÔøΩÔøΩlÔøΩÔøΩÔøΩ_ÔøΩÔøΩÔøΩiÔøΩÔøΩÔøΩtzÔøΩKÔøΩXÔøΩH=ÔøΩoÔøΩ;ÔøΩA“øÔøΩ5x!.ÔøΩ%Q#jn{_ÔøΩÔøΩÔøΩÔøΩmÔøΩÔøΩÔøΩÔøΩÔøΩ@ÔøΩÔøΩÔøΩÔøΩF	ÔøΩ3ÔøΩÔøΩÔøΩ.]> stream xÔøΩÔøΩYÔøΩrÔøΩ6}ÔøΩWÔøΩÔøΩ~ÔøΩÔøΩÔøΩÔøΩÔøΩ$ÔøΩÔøΩ:3MÔøΩÔøΩÔøΩÔøΩ%ÔøΩ#ÔøΩ6ÔøΩTIjÔøΩÔøΩ{ÔøΩlÔøΩm]ÔøΩÔøΩ 	,vgiÔøΩ,L)ÔøΩ4]-B *ÔøΩ?wÔøΩÔøΩFÔøΩ <ÔøΩÔøΩrÔøΩdÔøΩ5WÔøΩÔøΩs6ÔøΩÔøΩYÔøΩzÔøΩÔøΩ=ÔøΩﬁäÔøΩU[ÔøΩÔøΩ	bÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ8ÔøΩk:ÔøΩoÔøΩ6cmÔøΩÔøΩMÔøΩÔøΩvQÔøΩlVaÔøΩÔøΩ*[ÔøΩÔøΩbÔøΩÔøΩÔøΩ2ÔøΩqÔøΩ3ÔøΩÔøΩ~kÔøΩÚöçÆÔøΩÔøΩr=ÔøΩ ÔøΩÔøΩÔøΩrWr^MÔøΩqÔøΩ^ÔøΩÔøΩbcÔøΩÔøΩaÔøΩÔøΩÔøΩ}YakÔøΩ7ÔøΩŒüdÔøΩÔøΩhÔøΩ 5@M}ÔøΩÔøΩ/ÔøΩÔøΩŒõvÔøΩÔøΩmrn?ÔøΩÔøΩÔøΩ{ÔøΩ4ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩCÔøΩÔøΩcÔøΩ|*ÔøΩtÔøΩ~ÔøΩÔøΩÔøΩÔøΩb»§(/YYÔøΩOÔøΩwY=N8ÔøΩrÔøΩÃ≥	kÔøΩOy9ÔøΩ]ÔøΩÔøΩÔøΩÔøΩÔøΩ&ÔøΩ◊å:ÔøΩÔøΩMÔøΩÔøΩÔøΩÔøΩÔøΩ78ÔøΩÔøΩÔøΩfÔøΩÔøΩ ÔøΩzÔøΩGÔøΩÔøΩfd€´wÔøΩÔøΩGÔøΩﬁàÔøΩÔøΩÔøΩiQM[ÔøΩRÔøΩaÔøΩxÔøΩ6CdÔøΩ=ÔøΩ7Ÿób:ÔøΩ.ÔøΩÔøΩÔøΩMÔøΩrÔøΩÔøΩÔøΩwÔøΩÔøΩE3ÔøΩdÔøΩ4ÔøΩÔøΩeÔøΩMÔøΩÔøΩzÔøΩÔøΩ/ÔøΩ~ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩxÔøΩÔøΩoLÔøΩbÔøΩV?^eÔøΩÔøΩ|>«íÔøΩ5xU_ÔøΩÔøΩTÔøΩclÔøΩÔøΩÔøΩRÔøΩ&xÔøΩnÔøΩÔøΩÔøΩ);ÔøΩÔøΩ%ÔøΩÔøΩDDGÔøΩÔøΩÔøΩl÷ûG(!ÔøΩj$Y7ÔøΩÔøΩ&~)ÔøΩOÔøΩÔøΩÔøΩeÔøΩnkpYeWÔøΩÔøΩÔøΩƒçÔøΩ3WÔøΩÔøΩEÔøΩÔøΩÔøΩqV>ÔøΩeu6..ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÕÖÔøΩ2liÔøΩ	0ÔøΩnsÔøΩÔøΩrKÔøΩÔøΩÔøΩ!ÔøΩÔøΩ=ÔøΩÔøΩs\BÔøΩjÔøΩXÔøΩtmÔøΩ%ÔøΩÔøΩvÔøΩ[»£ÔøΩÔøΩZÔøΩÿá,ÔøΩÔøΩÔøΩ^\ÔøΩÔøΩÔøΩ!ÔøΩ*yÔøΩÔøΩÔøΩTH“¶ÔøΩ{ÔøΩÔøΩ,:AÔøΩMFÔøΩÔøΩÔøΩ^,ÔøΩjÔøΩÔøΩÔøΩÔøΩ$ÔøΩ_ÔøΩ>ÔøΩÔøΩ–ëÔøΩÔøΩ^ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ‘¶ÔøΩÔøΩ ÔøΩÔøΩdÔøΩÔøΩÔøΩÔøΩÃùioÔøΩÔøΩzyÊôáÔøΩ ÔøΩ+ÔøΩÔøΩÔøΩÔøΩÔøΩ`^ÔøΩ’è7wuÔøΩ(!cVfÔøΩÔøΩhÔøΩÔøΩ=T8bÔøΩÔøΩ)ÔøΩnÔøΩ).""ÔøΩ|ÔøΩQÔøΩlÔøΩ”ãÔøΩjÔøΩ""ÔøΩYÔøΩÔøΩDÔøΩjY¬¥ÔøΩlÔøΩÔøΩÔøΩ^aÔøΩÔøΩÔøΩÔøΩ.iÔøΩÔøΩ^ÔøΩNsÔøΩ*ÔøΩÔøΩ$ÔøΩ+ÔøΩ<ÔøΩeJÔøΩbnK>JÔøΩÔøΩBÔøΩÔøΩ@4PuÔøΩ 'n¬íÔøΩ(ÔøΩdÔøΩÔøΩÔøΩHÔøΩ]XÔøΩ^ÔøΩÔøΩ*7ÔøΩiÔøΩ#ÔøΩ4NÔøΩÔøΩÔøΩS\ÔøΩÔøΩ}TtÔøΩ2E)ÔøΩRxÔøΩÔøΩwÔøΩQÔøΩÔøΩ ÔøΩÔøΩEÔøΩ,Y(ÔøΩ6PÔøΩyÔøΩÔøΩ⁄ÆdÔøΩ'ÔøΩ!L»≠ÔøΩ&MÔøΩÔøΩÔøΩqÔøΩÔøΩÔøΩ""7(ÔøΩÃ≠ÔøΩ""tKÔøΩÔøΩÔøΩ{ÔøΩ!—¢»ìÔøΩÔøΩWÔøΩ9 ÔøΩÔøΩÔøΩÔøΩ|∆≤ÔøΩItÔøΩ€íÔøΩÔøΩ}ÔøΩÔøΩh?ÔøΩsÔøΩÔøΩ‹éÔøΩÔøΩ89ÔøΩ.ÔøΩqÔøΩÔøΩF>ÔøΩhÔøΩ,ÔøΩD ÔøΩj$ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩSwÔøΩyÔøΩÔøΩ5ÔøΩÔøΩQqÔøΩ]ÔøΩÔøΩvrÔøΩ>ÔøΩXÔøΩBÔøΩÔøΩ[d<ÔøΩ5ÔøΩ^jCÔøΩÔøΩaI7ÔøΩÔøΩLCxÔøΩÿµ2,ÔøΩNÔøΩ7ÔøΩu4ÔøΩ(7ÔøΩÔøΩÔøΩÔøΩwÔøΩ€î3nMÔøΩÔøΩ^lÔøΩ ÔøΩÔøΩ}NMÔøΩLpÔøΩ√ëEc4ÔøΩo+ÔøΩÔøΩ-GÔøΩÔøΩ9ÔøΩÔøΩ}ÔøΩÔøΩ(ÔøΩÔøΩÔøΩ kÔøΩÔøΩÔøΩÔøΩÔøΩkÔøΩnC]ÔøΩ…©ÔøΩsEÔøΩ%evÔøΩÔøΩÔøΩe3ÔøΩÔøΩQÔøΩNÔøΩoÔøΩÔøΩ¬¶ÔøΩÔøΩtTÔøΩ2ÔøΩÔøΩZÔøΩÔøΩÔøΩÔøΩmpÔøΩX—ßÔøΩ#ÔøΩ N2ÔøΩB""+xÔøΩ|K}ÔøΩAÔøΩGÃ∏ÔøΩÔøΩÔøΩÔøΩÔøΩ]ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ2&MÔøΩÔøΩ*ÔøΩÔøΩMÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩHÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ,ÔøΩ9XÔøΩ tÔøΩtÔøΩÔøΩÔøΩÔøΩÔøΩ–®kQÔøΩÔøΩWÔøΩk%!tÔøΩÔøΩbÔøΩ&]Adendstream endobj 1 0 obj << /Annots [ 283 0 R 284 0 R 285 0 R ] /Contents 2 0 R /MediaBox [ 0 0 612 792 ] /Parent 176 0 R /Resources 286 0 R /Type /Page >> endobj 2 0 obj << /Filter /FlateDecode /Length 2889 >> stream xÔøΩÔøΩYKÔøΩ€∏ÔøΩœØPÔøΩDUÔøΩhÔøΩÔøΩÔøΩÔøΩÔøΩkÔøΩC*ÔøΩ«ïÔøΩÔøΩ>@$!CÔøΩ23ÔøΩ*ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩVÔøΩ@ÔøΩÔøΩh _ÔøΩÔøΩww7o>ÔøΩ2,ÔøΩ8[ÔøΩm*ÔøΩÔøΩ2IYÔøΩÔøΩÔøΩÔøΩwÔøΩ≈óÔøΩnÔøΩÔøΩÔøΩJGip4ÔøΩÔøΩ*.ÔøΩa?6ÔøΩÔøΩ:ÔøΩZÿûiÔøΩÔøΩ2ÔøΩÔøΩVKÔøΩÔøΩMÔøΩ*ÔøΩÔøΩn=ÔøΩÔøΩRÔøΩÔøΩÔøΩÔøΩŸáÔøΩTÔøΩ-ÔøΩÔøΩ ÔøΩL{\ÔøΩuÕì=U Ç-ÔøΩhÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ,ÔøΩÔøΩÔøΩ}ÔøΩR	miÔøΩTXÔøΩ)oiÔøΩÔøΩfÔøΩJÔøΩ2ZÔøΩÔøΩÔøΩOufÔøΩ2ÔøΩo{iÔøΩÔøΩÔøΩÔøΩÔøΩ(TÔøΩFSÔøΩOÔøΩ1ÔøΩÔøΩÔøΩqÔøΩsÔøΩÔøΩGdÔøΩÔøΩBÔøΩCÔøΩÔøΩGÔøΩÔøΩÔøΩVgÔøΩÔøΩÔøΩÔøΩÔøΩAÔøΩ4ÔøΩÔøΩÔøΩGÔøΩ*ÔøΩÔøΩSOÔøΩ3UÔøΩ2ÔøΩvÔøΩÔøΩÔøΩcÔøΩS_ÔøΩNÔøΩ:ÔøΩÔøΩ/ÔøΩiÔøΩiZÈØÅÔøΩG`ÔøΩ=›äÔøΩÔøΩlÔøΩÔøΩv<ÔøΩÔøΩÔøΩÔøΩw2ÔøΩ⁄ë%3ÔøΩi6ÔøΩÔøΩYMÔøΩÔøΩÔøΩÔøΩuÔøΩÔøΩ 5ÔøΩ$ÔøΩ–êÔøΩBkÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩQÔøΩd1ÔøΩŸåÔøΩcV*NÔøΩÔøΩGÔøΩÔøΩÔøΩ÷öaÔøΩ`cÔøΩ\RÔøΩœçuX(-sC%ÔøΩ?ÔøΩ{ÔøΩUÔøΩ~G,ÔøΩ	gÔøΩÔøΩUÔøΩÔøΩdrÔøΩ_|ÔøΩÔøΩÔøΩ_\ÔøΩ~e‚òæÔøΩY/U–πÔøΩÔøΩrÔøΩÔøΩÔøΩ6ÔøΩ”≤ÔøΩÔøΩ-ÔøΩaÔøΩÔøΩÔøΩEÔøΩÔøΩ >%ÔøΩuMUÔøΩ^@ÔøΩÔøΩiÔøΩÔøΩÔøΩh~8ÔøΩÔøΩÔøΩeÔøΩ0}o	ÔøΩI^xÔøΩOÔøΩÔøΩ`ÔøΩÔøΩ ÔøΩÔøΩÔøΩ,◊ÄÔøΩ;ÔøΩÔøΩÔøΩpÔøΩmÔøΩÔøΩ>Y#ÔøΩÔøΩ ÔøΩpÔøΩ ÔøΩaÔøΩÔøΩ 3ÔøΩ}ÔøΩÔøΩÔøΩ=DÔøΩÔøΩÔøΩÔøΩrc◊≤œëÔøΩÎ∞¨ÔøΩ=I_28ÔøΩ7,tÔøΩDÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ~ [fÔøΩ+ÔøΩ1€ôÔøΩÔøΩ2ÔøΩÔøΩÔøΩ⁄Üy»´ÔøΩpÔøΩÔøΩÔøΩ7ÔøΩv'ÔøΩÔøΩÔøΩ];ÔøΩ_ÔøΩÔøΩÔøΩÔøΩ»©ÔøΩÔøΩÔøΩ9ÔøΩÔøΩ,?÷ñ[pÔøΩbwVÔøΩzÔøΩkÔøΩÔøΩH%ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ@ÔøΩ{ÔøΩÔøΩÔøΩ]ÔøΩ`zpÔøΩHÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!.ŸóÔøΩÔøΩÔøΩxÔøΩÔøΩNÔøΩ5ÔøΩ;ÔøΩÔøΩﬂäKÔøΩÔøΩR?¬Ü4ÔøΩÔøΩ\ÔøΩÔøΩÔøΩ?ÔøΩ∆≤'ÔøΩ	uÔøΩÔøΩÃ≥6dYHÔøΩÔøΩ RÔøΩÔøΩCÔøΩÔøΩYÔøΩqÔøΩYhÔøΩa7ÔøΩÔøΩÔøΩcRÔøΩ0ÔøΩ]CZÔøΩÔøΩÔøΩpÔøΩ~HÔøΩÔøΩ_ÔøΩL»≠ÔøΩÔøΩÔøΩ4&ÔøΩ¬ô0EÔøΩL<ÔøΩA(L ÔøΩÔøΩiEÔøΩÔøΩÔøΩm;ÔøΩÔøΩMÔøΩ L{ÔøΩÔøΩÔøΩÔøΩÔøΩ)ÔøΩÔøΩ∆öoaÔøΩsÔøΩÔøΩ_ÔøΩQo]€™ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩqÔøΩÔøΩﬁâÔøΩÔøΩLÔøΩEÔøΩYÔøΩÔøΩ)ÔøΩPÔøΩﬁ≥iaÔøΩÔøΩﬁéÔøΩÔøΩ‡∞≥ÔøΩÔøΩ8ÔøΩÔøΩ%ÔøΩÔøΩbÔøΩÔøΩÔøΩ4ÔøΩg)nÔøΩÔøΩÔøΩlxÔøΩÔøΩÔøΩ2ÔøΩuLHÔøΩhÔøΩFÔøΩHÔøΩ0ÔøΩÔøΩÔøΩ}TÔøΩÔøΩ%ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩsÔøΩ/ÔøΩÔøΩgÔøΩÔøΩ:JÔøΩÔøΩÔøΩHK~ÔøΩPÔøΩÔøΩq6ÔøΩÔøΩÿöÔøΩxÔøΩ|<ÔøΩÔøΩ}ÔøΩ<ÔøΩNÔøΩlÔøΩÔøΩdÔøΩÔøΩkWEÔøΩMÔøΩpÔøΩn}.ÔøΩYÔøΩÔøΩ{ÔøΩ|ÔøΩÔøΩÔøΩÔøΩv;]}&ÔøΩCÔøΩ.EÔøΩ8ÔøΩ úÔøΩ1ÔøΩ5Ã¥ÔøΩÔøΩ?gÔøΩPÔøΩf ÔøΩn+SÔøΩm ÔøΩÔøΩEÔøΩ7ÔøΩ ÔøΩ=)ÔøΩRÔøΩl&trsPÔøΩ3ÔøΩkw<ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩv^ÔøΩÔøΩyÔøΩFH`⁄ÜsÔøΩÔøΩÔøΩkÔøΩÔøΩ#«πÔøΩÔøΩaZuÔøΩ2ÔøΩ+ÔøΩ ÔøΩcÔøΩÔøΩÔøΩÔøΩ~]8MIÔøΩ KÔøΩaÔøΩ"" ÔøΩÔøΩÔøΩÔøΩÔøΩ!\ÔøΩkkyÔøΩ,$ÔøΩÀã=ÔøΩÔøΩ)—ôiÔøΩÔøΩ8bÔøΩÔøΩ%ÔøΩÔøΩÔøΩZÔøΩLÔøΩÔøΩJÔøΩÔøΩsÔøΩa~ÔøΩﬂæ=ÔøΩGÔøΩ4ÔøΩÔøΩ~lm0xeÔøΩXÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩ^>ÔøΩÔøΩzÔøΩ!^ÔøΩÔøΩ{4ÔøΩ‹àCfIÔøΩ%ÔøΩÔøΩyÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ}W\B EÔøΩ6;ÔøΩ`lÔøΩ/ÔøΩÔøΩ$ÔøΩ⁄ä>FÔøΩÔøΩ{ÔøΩÔøΩ@BÌö¨ÔâÉÔøΩÔøΩ;ÔøΩÔøΩÔøΩuyÔøΩN[DÔøΩJÔøΩ&'ÔøΩÔøΩÔøΩÔøΩÔøΩ36ÔøΩk5+ÔøΩwÔøΩÔøΩÔøΩÔøΩÔøΩTÔøΩ-ÔøΩ]gwÔøΩ`EÔøΩÔøΩ ÔøΩaQÔøΩ>ÔøΩÔøΩÔøΩ?;ÔøΩÔøΩÔøΩ ÔøΩ⁄æÔøΩ	{wÔøΩdÔøΩPÔøΩÔøΩ\cÔøΩzÔøΩÔøΩ^hÔøΩt)|gÔøΩË¨®}nÔøΩÔøΩÔøΩ’¥ÔøΩrÔøΩÀûÔøΩÔøΩÔøΩ‡∂∏gÔøΩipÔøΩTÔøΩÔøΩÔøΩqYÔøΩE ÔøΩe|=ÔøΩKÔøΩ~ÔøΩ.eNÔøΩ+vÔøΩVÔøΩ8ÔøΩGÔøΩÔøΩlÔøΩ3ÔøΩE'ÔøΩÔøΩ-ÔøΩÔøΩÔøΩÔøΩ@YbÔøΩÔøΩ)ÔøΩÔøΩeÔøΩÔøΩ'\Q^%qÔøΩÔøΩÔøΩÔøΩgÔøΩk_ÔøΩiÔøΩÔøΩÔøΩ`ÔøΩ#jÔøΩgÔøΩÔøΩ0J”ìÔøΩg'aÔøΩOÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ,u$ 9 cÔøΩÔøΩÔøΩ2ÔøΩ2ÔøΩ!ÔøΩÔøΩ3LÔøΩÔøΩÔøΩ[ÔøΩhÔøΩÔøΩ_ÔøΩiÔøΩÔøΩYÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ^BqÔøΩÔøΩaÔøΩÔøΩŸ±.V,ÔøΩ/VYÔøΩÔøΩLÔøΩÔøΩw7ÔøΩoÔøΩÔøΩÔøΩZhecÔøΩÔøΩWÔøΩiY.ÔøΩÔøΩÕóoÔøΩbÔøΩ`ÔøΩPÔøΩGb=ÔøΩ^iÔøΩÔøΩÔøΩ≈ßÔøΩ›º√ßÔøΩ3mQTÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩÔøΩmLÔøΩÔøΩ`ÔøΩ…ãÔøΩrÔøΩÔøΩ\ÔøΩÔøΩÔøΩÔøΩ9ÔøΩkÔøΩU7ÔøΩÔøΩÔøΩ'ÔøΩ8ÔøΩÔøΩ áÔøΩÔøΩ;ÔøΩXHÔøΩg lyÔøΩÔøΩ# ÔøΩ?ÔøΩ÷åÔøΩe)tÔøΩÔøΩhÔøΩÔøΩAXÔøΩÔøΩj`2ÔøΩÔøΩMÔøΩ0% ÔøΩP7%~8 ÔøΩyÔøΩGÔøΩ%+ÔøΩ++ÔøΩÔøΩÔøΩTÔøΩÔøΩÔøΩÔøΩÔøΩLAÔøΩÔøΩÔøΩaaÔøΩ(bÔøΩE0ÔøΩÔøΩ3ÔøΩÔøΩ#ﬁ≠aÔøΩÔøΩ PÔøΩÔøΩWjÔøΩÔøΩC	ÔøΩÔøΩÔøΩ/|^z '8ÔøΩÔøΩ%GÔøΩWÔøΩYÔøΩÔøΩ]ÔøΩÔøΩ:ÔøΩÔøΩLÔøΩ”ÄÔøΩÔøΩ9ÔøΩiÔøΩ;9hÔøΩÔøΩZÔøΩsÔøΩgÔøΩ;OÔøΩÔøΩ/ÔøΩ7ÔøΩ>ÔøΩ8ÔøΩÔøΩ@;XÔøΩHÔøΩ	;;SÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩ?ÔøΩÔøΩ()ÔøΩwÔøΩÔøΩÔøΩ⁄ìÔøΩÔøΩ tÔøΩÔøΩLÔøΩÔøΩ@ÔøΩwnJ~ÔøΩÔøΩeLXÔøΩ>ÔøΩ ÔøΩfkÔøΩDÔøΩPÔøΩ^ÔøΩ ÔøΩJ}ÔøΩaÔøΩÔøΩ[z}ey9ÔøΩÔøΩLÔøΩÔøΩpÔøΩÔøΩÔøΩÔøΩÔøΩ""ÔøΩÔøΩÔøΩÔøΩ<ÔøΩ)ÔøΩÔøΩwÔøΩzÔøΩÔøΩ>ÔøΩ«©ÔøΩ`LÔøΩxR+9ÔøΩJ.ÔøΩ	ÔøΩ2rÔøΩ|ÔøΩ|ÔøΩÔøΩÔøΩ,EÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩUŸπRI ÔøΩj{-[ÔøΩrIÔøΩÔøΩb OÔøΩ,ÔøΩ`ÔøΩÔøΩ:2ÔøΩC	ÔøΩÔøΩ“øDÔøΩqÔøΩÔøΩÔøΩuÔøΩ=kÔøΩ&ÔøΩÔøΩÔøΩIÔøΩvÔøΩpj#' @ÔøΩÔøΩVÔøΩÔøΩÔøΩ'npyC€Æ=ÔøΩPs#”ãÔøΩ–©O2ÔøΩ9ÔøΩÔøΩtÔøΩWm{ÔøΩHÔøΩÔøΩ -EÔøΩNOBÔøΩXÔøΩ`ÔøΩÔøΩ~qY@A?ÔøΩHÔøΩÔøΩ '\ÔøΩÔøΩÔøΩ ÔøΩÕØ'ÔøΩ\ÔøΩÔøΩÔøΩOÔøΩAJn-≈ßÔøΩÔøΩayOXÔøΩÔøΩÔøΩÔøΩU)ÔøΩ ÔøΩQÔøΩD!ÔøΩÔøΩ»∑ÔøΩÔøΩ»≥⁄ãÔøΩ>T+ÔøΩÔøΩÔøΩÔøΩÔøΩwu)F?3tÔøΩÔøΩ),ÔøΩI>ÔøΩÔøΩTa ÔøΩ Ÿºz7WÔøΩmÔøΩÔøΩ0=ÔøΩ1ÔøΩÔøΩIÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ√ÉŒÜ^cÔøΩed.C NphÔøΩ;ÔøΩÔøΩrÔøΩR(ÔøΩÔøΩ_HŒô<	ÔøΩÔøΩ4ÔøΩLÔøΩ7VFÔøΩ‘¨ÔøΩlÔøΩKÔøΩm;ÔøΩÔøΩHÔøΩÔøΩ÷óÔøΩÔøΩÔøΩ0ÔøΩ5ÔøΩÔøΩrÔøΩÔøΩÔøΩ{ÔøΩkÔøΩÔøΩy&C2|ÔøΩgHÔøΩÔøΩ""ÔøΩÔøΩlIÔøΩAÔøΩÔøΩÿê:ÔøΩ>ÔøΩOÔøΩGWlÔøΩ5ÔøΩyTÔøΩÔøΩÔøΩÔøΩNÔøΩÔøΩ)^B)TÔøΩÔøΩÔøΩÔøΩ]/SÔøΩ5ÔøΩÔøΩ} …ûŒ¶ÔøΩÔøΩÔøΩH5ÔøΩVÔøΩI{ÔøΩ""ÔøΩÔøΩÔøΩÔøΩk9ÔøΩÔøΩÔøΩÔøΩDÔøΩÔøΩ4ÔøΩÔøΩ?ÔøΩÔøΩ>ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ|{eq?U:f;ÔøΩÔøΩÔøΩ1ÔøΩÔøΩqÔøΩLÔøΩ⁄ºÔøΩÔøΩpa<ÔøΩÔøΩÔøΩÔøΩiÔøΩÔøΩÔøΩÔøΩÔøΩpÔøΩÔøΩ~-%ViAÔøΩÔøΩÔøΩ8ÔøΩÔøΩ(ÔøΩ\RÔøΩ2ÔøΩÔøΩxÔøΩÔøΩÔøΩVufÔøΩÔøΩÔøΩbÔøΩÔøΩ#ÔøΩYÔøΩJÔøΩÔøΩ8ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩOgMÔøΩz\BzÔøΩvÔøΩÔøΩiÔøΩÔøΩ2 ÔøΩÔøΩa Àù…ô“ü=ÔøΩf=…†lÔøΩ)[–íÔøΩÔøΩbÔøΩÔøΩbÔøΩ#ÔøΩÔøΩ\ÔøΩÔøΩI/-ÔøΩ…çÔøΩL|bÔøΩ…çÔøΩÔøΩ@{MÔøΩÔøΩÔøΩÔøΩÔøΩ~+ÔøΩÔøΩÔøΩÔøΩ ÔøΩJÔøΩ2L2)8ÔøΩJ|ÔøΩ,ÔøΩÔøΩ[&ÔøΩÔøΩrÔøΩÔøΩ^ÔøΩJpsPÔøΩAÔøΩyÔøΩÔøΩÔøΩÔøΩEÔøΩÔøΩÔøΩ€â endstream endobj 3 0 obj << /Annots [ 290 0 R 291 0 R ] /Contents 4 0 R /MediaBox [ 0 0 612 792 ] /Parent 176 0 R /Resources 293 0 R /Type /Page >> endobj 4 0 obj << /Filter /FlateDecode /Length 3952 >> stream xÔøΩÔøΩ]ÔøΩÔøΩÔøΩÔøΩ~ÔøΩÔøΩ*kÔøΩ(J$ÔøΩ""(ÔøΩÔøΩÔøΩ>ÔøΩ)n	ÔøΩÔøΩAkkÔøΩÔøΩ…í#…∑ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩakoÔøΩÔøΩ }ÔøΩÔøΩÔøΩpHÔøΩ3|sÔøΩÔøΩÔøΩwnÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩnÔøΩ""ÔøΩ26	#mW7ÔøΩÔøΩ/ÔøΩm’¨7ÔøΩÔøΩkÔøΩÔøΩÔøΩkÔøΩÔøΩpÔøΩIÔøΩnÔøΩe=ÔøΩÔøΩmÔøΩ-ÔøΩÔøΩthZÔøΩÔøΩÔøΩ_#eÔøΩÔøΩÔøΩÁûæaÔøΩ!ÔøΩÔøΩÔøΩiÔøΩÔøΩ*ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩb'NmYÔøΩ3nÔøΩÔøΩ `ÔøΩ*ÔøΩÔøΩvx54ÔøΩÔøΩÔøΩÔøΩUx:3ÔøΩ8(ÔøΩ7ÔøΩÔøΩÔøΩZÔøΩ‹øÔøΩ ÇÔøΩ9KÔøΩiÔøΩ\ÔøΩÔøΩ»ÇÔøΩÔøΩ-aÔøΩÔøΩ	IÔøΩF ÔøΩÔøΩ{K4ÔøΩÔøΩoÔøΩÔøΩÔøΩÔøΩÔøΩ0SÔøΩP=ÔøΩ:ÔøΩ`ÔøΩÔøΩÔøΩ	ÔøΩ€úÔøΩÔøΩÔøΩÔøΩPÔøΩJ`IÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ/ÔøΩÔøΩÔøΩ[`ÔøΩÔøΩ5ÔøΩ;f ÔøΩÔøΩP0hÔøΩÔøΩÔøΩ	ÔøΩÃúiÔøΩÔøΩbÔøΩ-ÔøΩÔøΩÔøΩbÔøΩi‹ëÔøΩ ÔøΩnÔøΩv«éÔøΩiÔøΩÔøΩÔøΩÔøΩ_”≤ÔøΩ}ÔøΩÍáùÔøΩ&zÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ€ï	3ÔøΩÔøΩsÔøΩÔøΩ”ïÔøΩÔøΩeƒóÔøΩÔøΩBÔøΩWÔøΩ	ÔøΩD0’° ÔøΩÔøΩWÔøΩQ{sEÔøΩÔøΩÔøΩ?ÔøΩjÔøΩ!U'ÔøΩ#ÔøΩÿé<ÔøΩÔøΩg6ÔøΩÔøΩÔøΩÔøΩÔøΩQ=ÔøΩÔøΩÔøΩÔøΩyjEÔøΩÔøΩÔøΩwÔøΩ‘≥ÔøΩCÔøΩÔøΩÔøΩlÔøΩÔøΩ€≥ÔøΩGÔøΩÔøΩÔøΩ]ÔøΩ.!ÔøΩÔøΩABÔøΩbÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩTÔøΩÔøΩj#ÔøΩÔøΩ`ÔøΩÔøΩxÔøΩ2eÔøΩwÔøΩ/ÔøΩÔøΩ70&ÔøΩÔøΩ'ÔøΩÔøΩœπ>ÔøΩy)55u+ZÔøΩÔøΩÃ¢l ÔøΩ;ÔøΩÔøΩ&«üÔøΩÔøΩ10qÔøΩdÔøΩÔøΩÔøΩÔøΩÔøΩ7alÔøΩÔøΩÔøΩJ ÔøΩ""ÔøΩRqÔøΩÔøΩzFjÔøΩÔøΩMÔøΩÔøΩÔøΩÔøΩaÔøΩdU?/–äBÔøΩƒÄÔøΩÔøΩX	Zy)ÔøΩqÔøΩÔøΩ`ÃøQK\ÔøΩÔøΩÔøΩ[ÔøΩ`YÔøΩ)=cByÔøΩeÔøΩP7eJ]LÔøΩD""ÔøΩÔøΩÔøΩMlBÔøΩnÔøΩ ÔøΩÔøΩdQPt ÔøΩPÔøΩLÔøΩs?ÔøΩQVÔøΩ	ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩZ=ÔøΩ ÔøΩQÔøΩÔøΩGÔøΩtÔøΩ$ÔøΩÔøΩ >ÔøΩa{YÔøΩ)ﬁµÕÅWCÔøΩs…≥ÔøΩ'ÔøΩÔøΩÔøΩ:L3ÔøΩÔøΩÔøΩÔøΩ%ÔøΩÔøΩÔøΩl5ÔøΩÀµx>61_5◊ÇqJÔøΩÔøΩNÔøΩÔøΩp<J9DÔøΩÔøΩPÔøΩÔøΩAÔøΩ ÔøΩ5\ÔøΩÔøΩÔøΩÔøΩ.ÔøΩ√≥ÔøΩÔøΩ’∏`ÔøΩx$7ŸîÔøΩÔøΩÔøΩÔøΩ^ÔøΩÔøΩÔøΩ/ÔøΩO,aÔøΩKÔøΩ06LMÔøΩG9oQÔøΩ&(9ŸõÔøΩlr-ÔøΩÔøΩÔøΩd|ÔøΩdy%. ÔøΩÔøΩ=ÔøΩÔøΩÔøΩcÔøΩÔøΩÔøΩÔøΩ5ÔøΩjnÔøΩlyŒâÔøΩÔøΩ6w-ÔøΩÔøΩXÔøΩYÔøΩÔøΩÔøΩÔøΩ	ÔøΩHÕ¶÷íÔøΩÔøΩkIA'‹†ÔøΩf'ÔøΩÔøΩÿπ+?ÔøΩ;AÔøΩÔøΩCÔøΩq4ÔøΩ)ÔøΩxÔøΩÔøΩ1(ÔøΩgÔøΩ`ÔøΩ;ÔøΩ(ÔøΩÔøΩ1ÔøΩ3 h ÔøΩÔøΩÔøΩBÔøΩÔøΩÔøΩ	ÔøΩÔøΩÔøΩ.ÔøΩÔøΩÔøΩPﬁ±/#ÔøΩÔøΩÔøΩÔøΩÔøΩNÔøΩiÔøΩiÔøΩ?QnYÔøΩÔøΩ»∑ÔøΩÔøΩÔøΩ ÔøΩÔøΩ]ÔøΩÔøΩ!,ÔøΩ…âK3YÔøΩÔøΩBÔøΩ`2ÔøΩÔøΩ# ÔøΩe ÔøΩ)ÔøΩÔøΩ,aÔøΩ1ÔøΩÔøΩÔøΩÔøΩÔøΩtÔøΩ:ÔøΩJÔøΩÔøΩÔøΩK÷≥ÔøΩ-ÔøΩ1;ÔøΩnÔøΩÔøΩ-rÔøΩÔøΩÔøΩCÔøΩPx?YÔøΩÔøΩg`GÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ#ÔøΩ»ã^ÔøΩÃÅÔøΩ ÔøΩÔøΩÔøΩÔøΩFaÔøΩÔøΩÔøΩ~ÔøΩ(ÔøΩÔøΩA(?AÔøΩÔøΩ%ÔøΩ5ÔøΩÔøΩH-hÔøΩÔøΩÔøΩ7ÔøΩdjÓóßV|,\ÔøΩDÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩTÔøΩÔøΩÔøΩÔøΩ/ÔøΩ_ÔøΩ@jÔøΩX6ÔøΩÔøΩÔøΩÔøΩÔøΩ{ÔøΩ \ÔøΩ‘πg8[JÔøΩ-ÔøΩZÔøΩ""ÔøΩ|ÔøΩÔøΩQœ∏ÔøΩÔøΩÔøΩÔøΩÔøΩz{ÔøΩÔøΩÔøΩWÔøΩ	ÔøΩÔøΩZÔøΩHiÔøΩJÔøΩÔøΩ|ÔøΩÔøΩÔøΩÔøΩﬂ¢ÔøΩ:AÔøΩC ÔøΩÔøΩÔøΩP+mBÔøΩqÔøΩÔøΩÔøΩ›´ÔøΩÔøΩzÔøΩÔøΩÔøΩŸ™b ÔøΩ J`fÔøΩÔøΩÔøΩ}ÔøΩJf;4.ÔøΩZÔøΩ_ÔøΩ(ZÔøΩÔøΩÔøΩ §/ÔøΩÔøΩÔøΩÔøΩ1ÔøΩ…ûÔøΩÔøΩ$ÔøΩÔøΩ	wvÔøΩOÔøΩÔøΩ}ÔøΩÔøΩ=/ÔøΩIÔøΩÔøΩDÔøΩ_.ÔøΩ& A7gÔøΩÔøΩp.g«¢AÔøΩÔøΩÔøΩ+ÔøΩÔøΩÔøΩÔøΩÔøΩIFÔøΩÔøΩ0ÔøΩyÔøΩr:TÔøΩ{ÔøΩbŸå6ÔøΩÔøΩbÔøΩÔøΩÔøΩÔøΩUKÔøΩPÔøΩÔøΩU-0	xÔøΩZPÔøΩÔøΩR@ÔøΩÔøΩg.uvÔøΩRÔøΩ2ÔøΩ:ÔøΩ9ÔøΩÔøΩ3ÔøΩnÔøΩÔøΩÔøΩÔøΩ\XÔøΩu ÔøΩ/ ÔøΩtÔøΩÔøΩ$, x	LÔøΩaYvÔøΩÔøΩÔøΩÔøΩÔøΩLX0ÔøΩÔøΩKWQPÔøΩXÔøΩÔøΩÔøΩ]ÔøΩbÔøΩDRÔøΩÔøΩÔøΩ ÔøΩnToPÔøΩÔøΩBÔøΩÔøΩŒû”ÇM'ÔøΩtÔøΩÔøΩÔøΩ CÔøΩ>o{Q,ÔøΩ .ÔøΩ(r""HrÔøΩC<aÔøΩÔøΩÔøΩÔøΩ?ÔøΩÔøΩÔøΩt ‚òúTM}/ÔøΩÔøΩRVÔøΩÔøΩ ÔøΩrÔøΩ+uÔøΩÔøΩi7sÔøΩZtÔøΩÔøΩÔøΩV~|ÔøΩIV	ÔøΩmpGY*ÔøΩÔøΩÔøΩÔøΩOjr! 4ÔøΩÔøΩÔøΩtÔøΩ2ÔøΩÔøΩ$!6n~Z+ÔøΩÔøΩÔøΩ%SÔøΩÔøΩÔøΩÔøΩ7ÔøΩÔøΩÔøΩRÔøΩÔøΩ⁄¢;UÔøΩbÔøΩÔøΩi""ÔøΩÔøΩ'ÔøΩ	p:nÔøΩfÔøΩÔøΩ|ÔøΩ÷úÔøΩz:ÔøΩÔøΩoJÔøΩf1DÔøΩcÔøΩ,ÔøΩuÔøΩIMƒ∑ ÔøΩÔøΩIBÔøΩÔøΩ%ÔøΩ>ywjÔøΩcÔøΩÔøΩAÔøΩÔøΩ2IÔøΩÔøΩ]ÔøΩÎäûAÔøΩÔøΩ ÔøΩÔøΩÔøΩ=tO""ÔøΩÔøΩb_U∆¨ÔøΩÔøΩÔøΩÔøΩ<=ÔøΩdL ÔøΩ=)hÔøΩÔøΩ?ÔøΩ7q√ºÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩe%$ÔøΩÔøΩiÔøΩ/qKÔøΩ^OÔøΩ ñÔøΩzÔøΩcKÔøΩÔøΩÔøΩÔøΩŸçÔøΩ-|[lÔøΩc+ÔøΩ]ÔøΩÔøΩÔøΩÔøΩÔøΩ\ÔøΩÔøΩT;]ÔøΩÔøΩ;ÔøΩÔøΩÔøΩÔøΩRjÔøΩÔøΩÔøΩ)ÔøΩÔøΩ%ZÔøΩÔøΩ>IOÔøΩÔøΩÔøΩkÔøΩ0i;ÔøΩvKÔøΩokÔøΩRjÔøΩ{ÔøΩÔøΩﬂ¥ÔøΩÔøΩlIÔøΩ]&ÔøΩH.ÔøΩZeÔøΩTÔøΩIlhÔøΩ%FÔøΩmÔøΩ2ÔøΩÔøΩÔøΩŸóÔøΩÔøΩÔøΩ<ÔøΩÔøΩÔøΩPÔøΩÔøΩfÔøΩÔøΩ%<ƒ•{FÔøΩÔøΩÔøΩÔøΩÔøΩ«ëÔøΩÔøΩÔøΩÔøΩÔøΩ÷åK^ÔøΩÔøΩÔøΩÔøΩU@ÔøΩi}ÔøΩÔøΩn8ÔøΩÔøΩÔøΩÔøΩc aÔøΩ4ÔøΩÔøΩe+[ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ RÔøΩXÔøΩVqÔøΩÔøΩ›∑ÔøΩÔøΩÔøΩ|ÔøΩPÔøΩ ÔøΩ*ÔøΩ ÔøΩ?ÔøΩÔøΩ(ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩb^ÔøΩ(ÔøΩÔøΩYÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩHÔøΩ&8ÔøΩ9ÔøΩÔøΩ%%5R7)ÔøΩGLÔøΩÔøΩ]	Œ©ÔøΩÔøΩÔøΩdÔøΩTÔøΩ‹¨NÔøΩÔøΩ-|ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩŸüNÔøΩ ÔøΩÔøΩÔøΩZÔøΩÔøΩÔøΩX	ÔøΩÔøΩ6ÔøΩweMÔøΩÔøΩ?ÔøΩQFÔøΩK	NN""⁄áÔøΩÔøΩÔøΩ{ÔøΩNeÔøΩLaYDÔøΩ_ha	ÔøΩpÔøΩÔøΩ0ÔøΩDÔøΩÔøΩÔøΩÔøΩc ÔøΩÔøΩD»ªÔøΩY(hÔøΩ{ÔøΩ!kÔøΩYÔøΩFÔøΩ0ÔøΩÔøΩÔøΩ“ôÔøΩdÔøΩ9ÔøΩÔøΩ)ÔøΩNÔøΩÔøΩ:ÔøΩÔøΩÔøΩu%=ÔøΩ@ÔøΩKÔøΩNRkÔøΩÔøΩ	[ÔøΩ'ÔøΩÔøΩÔøΩÁòó√™ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩgV-zÔøΩCÔøΩÔøΩÔøΩÔøΩ8ÔøΩÔøΩÔøΩ$ÔøΩÔøΩBÔøΩÔøΩÔøΩ€ºÔøΩk.(gÔøΩ(&ÔøΩÔøΩÔøΩÔøΩ/%ÔøΩ.&ÔøΩÛÇ•çS0_ÔøΩ`FÔøΩ‹úÔøΩÔøΩÔøΩ+Ãà6ÔøΩ!sBÔøΩ*2ÔøΩÔøΩj/%KqÔøΩyA|ÔøΩASÔøΩGﬂñÔøΩK/lÔøΩÔøΩÔøΩÔøΩÔøΩ/ÔøΩOÔøΩsƒò*ÔøΩÔøΩÔøΩ;!ÔøΩÔøΩÔøΩ\'@ÔøΩDÔøΩ’ÅÔøΩÔøΩÔøΩÔøΩ;FbÔøΩÔøΩtÔøΩM2ÔøΩ-ÔøΩ	b7⁄áÔøΩÔøΩO,c:ÔøΩaÔøΩÔøΩÔøΩÔøΩ- ÔøΩ6ÔøΩ*6ÔøΩÔøΩÔøΩÔøΩ;ÔøΩÔøΩ-ÔøΩÔøΩpÔøΩÔøΩÔøΩÔøΩ<>ÔøΩÔøΩC%2TÔøΩWÔøΩ;ÔøΩkÔøΩe,ÔøΩÔøΩœµ'ÔøΩ&!ÔøΩH?ÔøΩC@ÔøΩx3l“≠""ÔøΩ<0ÔøΩÔøΩÔøΩÔøΩÔøΩ6uL1ÔøΩÔøΩÔøΩwÔøΩÔøΩ–ºÔøΩd.MÔøΩÔøΩÔøΩÔøΩÔøΩ+3ÔøΩÔøΩ@ÔøΩR(AÔøΩÔøΩÔøΩAÔøΩwÔøΩ»∞ÔøΩ8ÔøΩÔøΩRÔøΩÔøΩ·ΩãÔøΩÔøΩ ÔøΩ ?ÔøΩ,ÔøΩÔøΩÔøΩwÔøΩÔøΩOÔøΩ/ÔøΩÔøΩuÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩoÔøΩPÔøΩÔøΩÔøΩÔøΩaj\ÔøΩLÔøΩ6∆ñ^NÔøΩZÔøΩm@jÔøΩ=ÔøΩ8 ÔøΩb–ó,ÔøΩJ?QÔøΩT:	ÔøΩRÔøΩuÔøΩpibFÔøΩPkbÔøΩdÔøΩ&ÔøΩ}ÔøΩÔøΩÔøΩEÔøΩÔøΩÔøΩ&omÔøΩ+ÔøΩ4)@_(t*ÔøΩÔøΩu#ŒÄuÔøΩÔøΩ2”Ä.DQxÔøΩÔøΩBÔøΩAÔøΩÔøΩÔøΩgiÔøΩ$^ÔøΩÔøΩYIÔøΩdTÔøΩÔøΩ^ÔøΩÔøΩY>- ÔøΩ^ÔøΩRÔøΩI>ÔøΩÔøΩﬁ≥g)ÔøΩeƒ∑tRÔøΩÔøΩÔøΩkaƒëÔøΩAÔøΩÔøΩÔøΩÔøΩ≈éÔøΩÔøΩÔøΩlÔøΩÔøΩEJ3CÔøΩÔøΩDMcE~>HÔøΩÔøΩ/ÔøΩÔøΩzÔøΩÔøΩÔøΩ#ÔøΩi’ßF{ÔøΩÔøΩÔøΩk $MÔøΩeÔøΩÔøΩÔøΩÔøΩÔøΩmÔøΩipÔøΩ$/ ÔøΩDÔøΩ6YÔøΩÔøΩ1ÔøΩ#qOÔøΩlÔøΩ ÔøΩ,ÔøΩ>ÔøΩGÔøΩÔøΩp&ÔøΩG{ ÔøΩxÔøΩ)ÔøΩÔøΩp|ÔøΩÔøΩzGÔøΩ—à)UÔøΩÔøΩ ÔøΩÔøΩi+AÔøΩ}K}vztx_dÔøΩ_>;_ÔøΩ'6ÔøΩ-8ÔøΩCÔøΩÔøΩ{1ÔøΩÔøΩ{ÔøΩ6ÔøΩÔøΩÔøΩHtc;ÔøΩÔøΩÔøΩ!ÔøΩ ÔøΩÔøΩ 0 ÔøΩ#ÔøΩÔøΩ[&ÔøΩÔøΩBÔøΩ wÔøΩÔøΩ<!∆ºÔøΩÔøΩTFÔøΩ¬©ÔøΩÔøΩÔøΩ}p8ÔøΩÔøΩÔøΩÔøΩ4∆ªOFwÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ6ÔøΩh¬Æ8	ÔøΩ ÔøΩÔøΩÔøΩ=45ÔøΩÁíØ⁄ÖfÔøΩDÔøΩÔøΩ+ÔøΩvnÔøΩÔøΩsÔøΩÔøΩÔøΩ91ÔøΩÔøΩoi ÔøΩÔøΩÔøΩB	ÔøΩ|jÔøΩÔøΩsA9“éÔøΩcÔøΩÔøΩ…´‘¶bÔøΩ}ÔøΩÔøΩqÔøΩÔøΩ}x IÔøΩÔøΩxÔøΩe~lÔøΩ5!ÔøΩÔøΩÔøΩ!ÔøΩÔøΩÔøΩÔøΩoÔøΩbÔøΩuÔøΩ5q6ÔøΩtÔøΩÔøΩ	ÔøΩo*ÔøΩÔøΩÔøΩ6+kmÔøΩMÔøΩv:`8q4yÔøΩq7q9ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ 8	ÔøΩ'a| aÔøΩÔøΩÔøΩbÔøΩÔøΩÔøΩoÔøΩ>iÔøΩÔøΩÔøΩMÔøΩÔøΩiÔøΩiÔøΩƒ•XIÔøΩÔøΩÔøΩÔøΩye√µÔøΩÔøΩ&GPÔøΩ1”ßÔøΩÔøΩÔøΩÔøΩ#ÔøΩÔøΩÔøΩCÔøΩÔøΩÔøΩÔøΩ-ÔøΩCÔøΩÔøΩ1ÔøΩÔøΩÔøΩrÔøΩdb–ïÔøΩÔøΩRÔøΩÔøΩ endstream endobj 5 0 obj << /Filter /FlateDecode /Length1 1413 /Length2 6118 /Length3 0 /Length 7081 >> stream xÔøΩÔøΩtTÔøΩ]ÔøΩ6ÔøΩ RHÔøΩÔøΩÔøΩ!JwÔøΩ00ÔøΩCCH#%""ÔøΩt)JÔøΩ""-ÔøΩ H*)!JÔøΩ>>ÔøΩÔøΩ>ÔøΩÔøΩÔøΩÔøΩ}k÷∫ÔøΩ>ÔøΩÔøΩÔøΩ>{ÔøΩs]7'ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ	ÔøΩ!ÔøΩB""ÔøΩ 5] ÔøΩ@DDLHDDÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ'ÔøΩ4ÔøΩ |ÔøΩpÔøΩÔøΩ0ÔøΩÔøΩ&ÔøΩBÔøΩuÔøΩ0ÔøΩ=_ P ÔøΩÔøΩJ…äÔøΩ DEDdÔøΩ&ÔøΩÔøΩ uÔøΩÔøΩ	ÔøΩ+ÔøΩÔøΩA|ÔøΩ8ÔøΩÔøΩ^(ÔøΩÔøΩyÔøΩÔøΩﬂØ 0/ (##%ÔøΩ;ÔøΩÔøΩ	A@ÔøΩ @ÔøΩtÔøΩxÔøΩÔøΩy ÔøΩÔøΩ`(ÔøΩÔøΩG	yW$ÔøΩKVXÔøΩÔøΩÔøΩ_ÔøΩÔøΩ#GÔøΩ(ÔøΩ  ÔøΩÔøΩHWÔøΩÔøΩÔøΩÔøΩÔøΩ8~ÔøΩÔøΩyBÔøΩÔøΩ&DÔøΩ	0qÔøΩÔøΩÔøΩ√ùÔøΩÔøΩ pÔøΩÔøΩÔøΩ!0ÔøΩÔøΩ_ÔøΩÔøΩÔøΩ`ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ""ÔøΩÔøΩE ÔøΩ9 PÔøΩÔøΩrÔøΩÔøΩÔøΩ~'ÔøΩÔøΩ`ÔøΩÔøΩÔøΩÔøΩÔøΩ\ ÔøΩP@_SGÔøΩ ÔøΩ`NÔøΩÔøΩ ÔøΩM>ÔøΩÔøΩ 9ÔøΩ~ÔøΩhÔøΩ@7ÔøΩÔøΩÔøΩÔøΩÔøΩz!}ÔøΩ|ÔøΩÔøΩfÔøΩUÔøΩÔøΩ5`NjpOOÔøΩCÔøΩÔøΩ?u(ÔøΩ9wÔøΩÔøΩÔøΩuÔøΩÔøΩÔøΩaÔøΩWÔøΩPÔøΩÔøΩÔøΩ1ÔøΩ|ÔøΩÔøΩMaPo_ÔøΩÔøΩÔøΩÔøΩMÔøΩÔøΩÔøΩ1 !""#*%)	ÔøΩx `WÔøΩ_ÔøΩÔøΩÔøΩ ÔøΩAÔøΩÔøΩÔøΩÔøΩh/ÔøΩÔøΩÔøΩfH0ÔøΩrÔøΩGÔøΩÔøΩÔøΩA HÔøΩ/$ÔøΩÔøΩÔøΩ?WD@ ÔøΩ	 F!.P—øÔøΩﬂÑ!ÔøΩÔøΩoÔøΩ  XÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ◊õÔøΩ¬úÔøΩ0‘øÈøØXXÔøΩBÔøΩÔøΩ@ÔøΩÔøΩÔøΩÔøΩÔøΩUUÔøΩ ÔøΩÔøΩÔøΩ8@PTFR ÔøΩHIÔøΩÔøΩÔøΩYÔøΩ ÔøΩÔøΩÔøΩ$k√úÔøΩ ÔøΩÔøΩÔøΩÔøΩ9ÔøΩÔøΩ{ÔøΩÔøΩ#ÔøΩ?ÔøΩÔøΩÔøΩÔøΩÔøΩFÔøΩ œøÔøΩn#""!ÔøΩy ÔøΩÔøΩzÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ*ÔøΩÔøΩÔøΩÔøΩÔøΩ#M_ÔøΩÔøΩ8ÔøΩ_ÔøΩÔøΩyB=P7ÔøΩÔøΩEÔøΩÔøΩ@~cÔøΩSÔøΩ!yWÔøΩÔøΩÔøΩÔøΩoT	ÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩ_	ÔøΩ—Ñ@ÔøΩÔøΩHÔøΩÔøΩ_ÔøΩÔøΩ+nÔøΩÔøΩkPÔøΩ ÔøΩÔøΩÔøΩuEDÔøΩÔøΩ1ÔøΩÔøΩÔøΩÔøΩs#ÔøΩÔøΩÔøΩÔøΩ?ÔøΩÔøΩRÔøΩ;ÔøΩ2ÔøΩÔøΩÔøΩ$ ÔøΩ@ÔøΩPD7ÔøΩ|ÔøΩÔøΩ ÔøΩÔøΩ7ÔøΩtÔøΩÔøΩ2@XGﬁ§ nÔøΩ8ÔøΩDÔøΩÔøΩTZ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩ~1ÔøΩEÔøΩDBÔøΩÔøΩÔøΩÔøΩÔøΩE nÔøΩÔøΩ[#7ÔøΩÔøΩÔøΩÔøΩÔøΩz$ &ÔøΩÔøΩÔøΩÔøΩÔøΩ""ÔøΩj#[NÔøΩUÔøΩWÔøΩ>sÔøΩÔøΩgÔøΩ ÔøΩÔøΩÔøΩÔøΩgdÔøΩiÔøΩUÔøΩÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩgÔøΩ4xÔøΩÔøΩÔøΩ^ÔøΩ7ÔøΩÔøΩÔøΩcÔøΩ>1l>ÔøΩÔøΩl4ÔøΩÔøΩL45LÔøΩÔøΩÔøΩxSÔøΩÔøΩÔøΩÔøΩÔøΩIÔøΩDy5ÔøΩÔøΩ;ÔøΩ,ÔøΩÔøΩ	ÔøΩÔøΩgÔøΩÔøΩÔøΩ4ÔøΩA!’âÔøΩV@]œ´ÔøΩÔøΩ'VWÔøΩ$ÔøΩ_ÔøΩL4MÔøΩ	{1ÔøΩYÔøΩÔøΩ3NœéÔøΩd&ÔøΩÔøΩÔøΩ5vxÔøΩÔøΩ2ÔøΩÔøΩ5ÔøΩÔøΩÔøΩDÔøΩ[ÔøΩb%hÔøΩ—§ÔøΩÔøΩÔøΩÔøΩrQÔøΩÔøΩ;VÔøΩÔøΩÿáÔøΩGÔøΩ–™kÔøΩÔøΩÔøΩ&—•%sEclIÔøΩ^ÔøΩZJÔøΩG&aHwÔøΩln	Z} ÔøΩ«†ÔøΩPÔøΩÔøΩ’¥-UÔøΩHÔøΩ ÔøΩG38ÔøΩÔøΩÔøΩ\XÔøΩÔøΩÔøΩMÔøΩÔøΩr5]ÔøΩÔøΩÔøΩLÔøΩÔøΩ\6ÔøΩ&hÔøΩrRÔøΩÔøΩ< 	ÔøΩÔøΩZ!ÔøΩ$ÔøΩÔøΩbÔøΩ=%Qœ§ÔøΩzrheÔøΩ|ÔøΩ lUÔøΩ	ÔøΩA(ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩP~ÔøΩ≈íÔøΩÔøΩÔøΩMÔøΩÔøΩ/ÔøΩÔøΩn≈´ÔøΩÔøΩÔøΩ=ÔøΩI`ÔøΩS>ÔøΩ_?ÔøΩg›§	/ÔøΩÔøΩO\ÔøΩ&ÔøΩÔøΩM/vÔøΩÔøΩÔøΩ+ÔøΩUJzÔøΩÔøΩÔøΩXÔøΩÔøΩÔøΩÔøΩÔøΩ rÔøΩ8m9ÔøΩÔøΩÔøΩÔøΩÔøΩIyZÔøΩiÔøΩÔøΩWBÔøΩÔøΩÔøΩGnJOÔøΩÔøΩÔøΩR5u OBOÔøΩÔøΩfÔøΩ )ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÃØÔøΩ[ÔøΩXÔøΩ ÔøΩaÔøΩ{SÔøΩÔøΩÔøΩÔøΩmBwÔøΩ$ÔøΩÔøΩÔøΩ	 ÔøΩznbÔøΩ}ÔøΩÔøΩÔøΩ9ÔøΩÔøΩc…ég{WÔøΩfÔøΩ?|QÔøΩÔøΩRÔøΩbÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ3@$ÔøΩWZÔøΩÔøΩÔøΩÔøΩEÔøΩ'ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ4#€©gÌîÖÔøΩÔøΩa5=ÔøΩsÔøΩÔøΩE*i#ÔøΩ.ÔøΩ-NÔøΩCXÔøΩÔøΩ#ÔøΩz^ÔøΩÔøΩJQÔøΩÔøΩ7ÔøΩ/ÔøΩÔøΩm3`fcgÔøΩTLÔøΩnÔøΩc4wkÔøΩÔøΩÃ¢tSÔøΩÔøΩKÔøΩCÔøΩBÔøΩÔøΩVÔøΩ+ÔøΩxN÷†ÔøΩ%ÔøΩŸÇ-a ÔøΩÔøΩZ≈ºÔøΩNpÔøΩvÔøΩFÔøΩVÔøΩÔøΩYÔøΩTÔøΩl4ÔøΩ&ÔøΩÔøΩÔøΩFÔøΩÔøΩFÔøΩÔøΩ(ÔøΩÔøΩÔøΩ%ÔøΩgÔøΩÔøΩ	pÔøΩÔøΩ""ÔøΩ?ÔøΩÔøΩÔøΩÔøΩÔøΩx{ÔøΩÔøΩÔøΩÃ±ÔøΩHÔøΩÔøΩÔøΩÔøΩ~EÔøΩ&&EÔøΩ|ÔøΩÔøΩÔøΩ:ÔøΩyÔøΩÔøΩLÔøΩÔøΩJÔøΩ:L*1ÔøΩÔøΩÔøΩ&WrÔøΩÔøΩm*xÿéÔøΩl=ÔøΩÀæ~]ÔøΩQÔøΩÔøΩ$ÔøΩÔøΩÔøΩ≈∂ÔøΩ#ÔøΩÔøΩOÔøΩGÔøΩÔøΩ}ÔøΩ¬∑V4ÔøΩÔøΩÔøΩÔøΩÔøΩ' •ÔøΩÔøΩÔøΩJÔøΩÔøΩÔøΩÔøΩÔøΩœ®ÔøΩÔøΩ6ÔøΩ(ÔøΩÔøΩÔøΩÔøΩ6NÔøΩjÔøΩ%ÔøΩÔøΩÔøΩdÔøΩÔøΩWÔøΩ[›ãÔøΩÔøΩbÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ5ÔøΩÔøΩaŒù&ÔøΩdÔøΩ-ÔøΩÔøΩ.ÔøΩÔøΩ:ÔøΩÔøΩÔøΩE*ÔøΩÔøΩmÔøΩÔøΩÔøΩÔøΩ(ÔøΩÔøΩÔøΩ[Q~zÿØ«°ÔøΩS…çi#3ÔøΩÔøΩÔøΩ+ †ÔøΩÔøΩÔøΩÔøΩ+‹∑ÔøΩ–ä-ÔøΩeÔøΩ=\ÔøΩ@ÔøΩÔøΩU	*-ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ_gÔøΩ~ÔøΩÔøΩÔøΩÔøΩÔøΩ#ÔøΩ<ÔøΩ-ÔøΩ+ÔøΩÔøΩÊ±õI—µÔøΩ5m}ÔøΩiÔøΩ\j›∂ÔøΩÔøΩ88ÔøΩÔøΩŒü!FÔøΩÔøΩMÔøΩVÔøΩ[ÔøΩSÔøΩ)ÔøΩÔøΩ-ÔøΩ)gÔøΩÔøΩ:u^ÔøΩÔøΩ;ÔøΩÔøΩUÔøΩÏ∏òÔøΩÔøΩLÔøΩ9ÔøΩÔøΩ‘ß.6/'ÔøΩ""oÔøΩ?ÔøΩÔøΩÍª∑6ÔøΩÔøΩÔøΩxtÔøΩÔøΩÔøΩ<ÔøΩvBYÔøΩÔøΩÔøΩÿª8e,40QÔøΩÔøΩÔøΩEÔøΩÔøΩÔøΩPÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩr+'<ÔøΩwJÔøΩ?ÔøΩdUÔøΩÔøΩ+ÔøΩÔøΩÔøΩÔøΩZÔøΩÔøΩ2ÔøΩBWÔøΩÔøΩÔøΩ~ÔøΩiYÔøΩÔøΩÔøΩCH2ÔøΩy‰òòÔøΩ^lAÔøΩÔøΩÔøΩÔøΩÔøΩzÔøΩm]ÔøΩÔøΩ€ÉÔøΩÔøΩÔøΩ ±ÔøΩ^ÔøΩEÔøΩ4ŸûÔøΩÔøΩÔøΩÔøΩÔøΩGÔøΩÔøΩÔøΩÔøΩZÔøΩYÔøΩvlGÔøΩÔøΩÔøΩAÔøΩRUÔøΩrqÔøΩÔøΩÔøΩJ+ÔøΩËΩ£ÔøΩÔøΩeÔøΩsÔøΩÔøΩÔøΩgÔøΩÔøΩCÔøΩÀ•q2'%ÔøΩLÔøΩuÔøΩÔøΩÀΩÔøΩ^€™ÔøΩOVÔøΩ…áÔøΩÔøΩÔøΩNÔøΩ-""'ÔøΩ_ÔøΩÔøΩÔøΩÔøΩ2WÔøΩ2>nÔøΩK+ÔøΩ€∑ÔøΩYÔøΩ>-;⁄≥ÔøΩF'\ÔøΩ}ÔøΩ)PÔøΩÔøΩXÔøΩ2ÔøΩÔøΩ'ÔøΩÔøΩÔøΩRCÔøΩÔøΩ?KÔøΩÔøΩŒ™$ÔøΩÔøΩÔøΩÔøΩYf4(ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9ÔøΩ~⁄ìÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ%ÔøΩ>ÔøΩ ÔøΩÔøΩ/ÔøΩ4ÔøΩÔøΩÔøΩ]ÔøΩÔøΩÔøΩÔøΩ«¨,]%ÔøΩÔøΩÔøΩÔøΩcÔøΩ]hÔøΩO{ÔøΩÔøΩ6ÔøΩuÔøΩoÔøΩÔøΩÔøΩÔøΩ%ÔøΩy|6ÔøΩÔøΩÔøΩ5DÔøΩÔøΩÔøΩÔøΩYm*ÔøΩ‘øÔøΩÔøΩÔøΩWBkd’ãÔøΩa[ÔøΩÔøΩ&VÔøΩ2ÔøΩTÔøΩÔøΩÔøΩrÔøΩ ÔøΩG<ÔøΩ""""ÔøΩÔøΩJÔøΩÔøΩÔøΩ’òÔøΩÔøΩÔøΩ*ÔøΩgfÔøΩÔøΩ;ÔøΩCÔøΩÔøΩxI !ÔøΩ!{GIsYÔøΩsÔøΩÔøΩXTÔøΩ_ÔøΩÔøΩÔøΩlÔøΩ26 ÔøΩ5v/ZgÔøΩÔøΩÔøΩgJz5ÔøΩÔøΩÔøΩÔøΩÔøΩpÔøΩ.KT9ÔøΩÔøΩÔøΩÔøΩÔøΩÕπeM ÔøΩÔøΩÔøΩÔøΩÔøΩ.ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩzÔøΩÔøΩ.ÔøΩh€™OeÔøΩÔøΩÔøΩÔøΩ.|ÔøΩxhÔøΩH]+ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ/LÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩOÔøΩCÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ]ÔøΩsÔøΩÔøΩÔøΩÔøΩ1a~ÈüïaÔøΩÔøΩ3ÔøΩ9ÔøΩÔøΩXÔøΩ-ÔøΩÔøΩ+? oTWÔøΩFÔøΩ=lÔøΩuÔøΩ+ÔøΩÔøΩÔøΩÔøΩÔøΩ""+ÔøΩ|ÔøΩÔøΩ	HÔøΩ^; ÔøΩÔøΩrÔøΩ~ÔøΩÔøΩGÕûÔøΩ?ÔøΩÕ∂Í≤îÔøΩÔøΩÔøΩAN/ÔøΩÔøΩ6ÔøΩDÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩ0ÔøΩ ÔøΩW›óÔøΩpTR$'ÔøΩÔøΩ–°QÔøΩ9ﬂ¶ÔøΩ&“´ÔøΩÔøΩ:»≠*joÔøΩ‘≠ÔøΩÔøΩÔøΩ4ÔøΩeÔøΩC◊¶ÔøΩ2ÔøΩÔøΩÔøΩ}.tqÔøΩÔøΩÔøΩpÔøΩ|T:ÔøΩÔøΩÔøΩlÔøΩÔøΩ (ÔøΩÔøΩSwÔøΩÔøΩÔøΩÔøΩCÔøΩ2ÔøΩ≈¨ÔøΩ~SÔøΩÔøΩ„Æ¨.ÔøΩ‹àÔøΩTkm#JÔøΩÔøΩÔøΩPoÔøΩÔøΩÔøΩb]ÔøΩÔøΩÿÑÔøΩwÔøΩ1ÔøΩÔøΩÔøΩ'-/lÀíÔøΩŸ†ÔøΩ}ÔøΩEmÔøΩUd5ÔøΩVÔøΩOÔøΩÔøΩH3cÔøΩ*…ôÔøΩoB} ÔøΩ;AKÔøΩÔøΩ”ä#ÔøΩﬂ∂yMBÔøΩ⁄øÔøΩÔøΩÔøΩÔøΩ=cÔøΩ^ÔøΩÔøΩ*ÔøΩÔøΩN $MHÔøΩ.ÔøΩ3rÔøΩÔøΩ'pHPÔøΩÔøΩÔøΩ∆ÑÔøΩjL ÔøΩÔøΩÔøΩu#%9dc2ÔøΩ+ÔøΩÔøΩÔøΩÔøΩÔøΩ=ÔøΩRSyÔøΩÔøΩÔøΩÔøΩf[ÔøΩp~~_<ÔøΩÔøΩyGCÔøΩKÔøΩÔøΩfHv@WÔøΩ;ÔøΩofÔøΩÔøΩzÈπ£ÔøΩ,ÔøΩ'hÔøΩÔøΩ)ÔøΩ>ePR&ÔøΩ*ÔøΩ⁄∂ÔøΩÔøΩÔøΩ%6""ÔøΩ ÅÔøΩÔøΩÔøΩ5m<ÔøΩo_sÔøΩÔøΩj!ÔøΩÔøΩ;ÔøΩÔøΩÔøΩÔøΩeBxYp	[ﬂØFÔøΩÔøΩÔøΩSÔøΩ2>\`ÔøΩÔøΩcÔøΩsrÔøΩÔøΩÔøΩOÃÄÔøΩh4ÔøΩ.ÔøΩ@QÔøΩy+ÔøΩCxÔøΩ“±OÔøΩÔøΩÔøΩÔøΩ=ÔøΩ∆ÖÔøΩÔøΩÔøΩwÔøΩ’úÔøΩÔøΩFÔøΩA6$ÔøΩÔøΩÔøΩ|zÔøΩ{!ÔøΩÔøΩdehÔøΩQ.ÔøΩÔøΩ\gÔøΩ<ÔøΩ2+ÔøΩ#ÔøΩÔøΩ(ÔøΩI_ÔøΩYÔøΩÔøΩ8ÔøΩÔøΩÔøΩv 1k“õÔøΩƒ∞ÔøΩÔøΩÔøΩ⁄ñÔøΩÔøΩ""ÔøΩÔøΩrÔøΩÔøΩsÔøΩÔøΩ&ÔøΩ—ΩF/ÔøΩmÔøΩbÔøΩ2ÔøΩÔøΩjgÔøΩpx@ÔøΩwÔøΩPuOÔøΩ	ÔøΩ\#ÔøΩÔøΩÔøΩÔøΩYqPLPWÔøΩÔøΩ'j<ÔøΩ<ÔøΩÀ∫ÔøΩHÔøΩÔøΩgÔøΩ>ÔøΩ^ÔøΩ!}ÔøΩ0IÔøΩÔøΩÔøΩbÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩS [ÔøΩÔøΩlÔøΩ›ÇÔøΩÔøΩ	KRÔøΩÔøΩÔøΩ∆°;4PÔøΩÔøΩÔøΩoÔøΩu0»¶iQ[.\FÔøΩÔøΩÔøΩUÔøΩÔøΩÔøΩÔøΩmnÔøΩaÔøΩ^ÔøΩn$ÔøΩ`/ÔøΩÔøΩ4ÔøΩÔøΩOÔøΩp&ÔøΩÔøΩÔøΩÔøΩÔøΩ “§ÔøΩ>ÔøΩ]ÔøΩ_ÂßÉcBÔøΩÔøΩÔøΩ2ÔøΩ›ÜbÔøΩA2Jc}ÔøΩÁÜôÔøΩÔøΩ<ÔøΩ ÔøΩ-D""ÔøΩmÔøΩÔøΩ	ÔøΩ€¶:ÔøΩBÔøΩÔøΩWIÔøΩÔøΩf^OÔøΩ7ÔøΩ<..ÔøΩÔøΩ$2.ÔøΩiÔøΩ‘è%TÔøΩ$ÔøΩÔøΩÔøΩÔøΩ,%ÔøΩPÔøΩÔøΩ÷òÔøΩ{8ÔøΩÔøΩÔøΩQ:1HÔøΩÔøΩK3ÔøΩ%(—òÔøΩÔøΩ»ôÔøΩwÔøΩÔøΩdÔøΩÔøΩlÔøΩÔøΩ¬ßÔøΩ\ÔøΩÔøΩx;ÔøΩFÔøΩÔøΩÔøΩNÔøΩ[ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩAÔøΩyPÔøΩT;ÔøΩVÔøΩ${NaMÔøΩoEÔøΩÿ∑WÔøΩI|ÔøΩrÔøΩÔøΩ|)uÔøΩuÔøΩQÔøΩ	ÔøΩÔøΩ“øxÔøΩFÔøΩ`yÔøΩÔøΩÔøΩ–∏ÔøΩn/ÔøΩp4EÔøΩÔøΩhÔøΩ9yÔøΩÔøΩJÔøΩMVÔøΩuÔøΩÔøΩÔøΩÔøΩi∆ÄÔøΩÔøΩ ÆÔøΩÔøΩÔøΩÔøΩÔøΩ)&wÔøΩÔøΩÔøΩSÔøΩÔøΩÔøΩ~ÔøΩÔøΩPÔøΩ	ÔøΩoRL@ÔøΩÔøΩÔøΩÔøΩL=ÔøΩ/ JÔøΩRÔøΩE’™AÔøΩcÔøΩÔøΩ[T|}ÔøΩ+ÔøΩMzÔøΩmÔøΩÔøΩ^o~ÔøΩsZÔøΩB?9ÔøΩ eX2GÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩŒá~	ÔøΩ*8ÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩ~ÔøΩÔøΩUÔøΩTÔøΩÔøΩÔøΩ◊∏ÔøΩ5uÔøΩÔøΩfÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩÔøΩl-ÔøΩ(ÔøΩÔøΩÔøΩ&ÔøΩW 6s√ôœëÔøΩÔøΩÔøΩWG.ÔøΩNÔøΩ2,ÔøΩaÔøΩÔøΩÔøΩ jÔøΩmLIXÔøΩqÔøΩÔøΩbÔøΩeÔøΩopnAÔøΩIÔøΩÔøΩÔøΩFÔøΩÔøΩnÔøΩ'QÔøΩQÔøΩ6«ôÔøΩÔøΩ(ÔøΩ?Yf mYoÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩIÔøΩÔøΩuÔøΩzÔøΩ4ÔøΩ4ÔøΩjÔøΩÔøΩÔøΩÔøΩLÔøΩ÷ñÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩi?ÔøΩ\ ÔøΩÔøΩÔøΩOÔøΩ7ÔøΩ-UÔøΩx{jÔøΩi”éÔøΩJÔøΩR%ÔøΩÔøΩÔøΩhÔøΩÔøΩ≈†QÔøΩIÔøΩdGÔøΩÔøΩÔøΩÔøΩ]ÔøΩ4ÔøΩÔøΩ'ÔøΩPÔøΩPÔøΩÔøΩÔøΩ]ÔøΩgÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ_⁄ÄÔøΩf}ÔøΩÔøΩ?3ÔøΩ7ÔøΩ)BÔøΩS&ÔøΩÔøΩÔøΩgÔøΩSÔøΩÔøΩdÔøΩÔøΩEÔøΩRptÔøΩRÔøΩÔøΩÔøΩÔøΩ{ÔøΩÔøΩPÔøΩÔøΩÔøΩÔøΩ52VÔøΩ&ÔøΩ+⁄¥ÔøΩÔøΩÔøΩ0ÔøΩÔøΩÔøΩÔøΩl[@SÔøΩi9ÔøΩ9nÔøΩÔøΩÔøΩÔøΩÔøΩmÔøΩwn$ÔøΩfÔøΩÔøΩGÔøΩDÔøΩDÔøΩÔøΩÔøΩ<ÔøΩÔøΩ“ÉZgÔøΩ5ÔøΩÔøΩÔøΩB=ÔøΩc2ÔøΩZÔøΩRÔøΩÔøΩÔøΩjGeÔøΩÔøΩÔøΩ*ÔøΩÔøΩB∆±ÔøΩÔøΩÔøΩG:EÔøΩÔøΩ¬≥ÔøΩÔøΩSÔøΩzÔøΩÔøΩÔøΩVBTÔøΩcpÔøΩÔøΩ8ÔøΩeÔøΩvVÔøΩÍ•àK:$n1Y.wÔøΩÔøΩ1#ÔøΩ◊ïpÔøΩÔøΩÔøΩN&ÔøΩFÔøΩGÔøΩÔøΩ ÔøΩÔøΩrT÷á∆ØÔøΩCÔøΩWOrÔøΩÔøΩÔøΩÔøΩ""SÔøΩÔøΩ;XE,h9ÔøΩÔøΩÔøΩÔøΩÔøΩmÔøΩÔøΩ_ÃôÔøΩÔøΩÔøΩ7""ux5ÔøΩÔøΩÔøΩÔøΩlÔøΩaqÔøΩÔøΩÔøΩ-hÔøΩIjÔøΩÔøΩ|WÔøΩ œõÔøΩa2ÔøΩ=ÔøΩa<ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ""ÔøΩ){ÔøΩw,=ÔøΩ}ÔøΩÔøΩ{ÔøΩ_ÔøΩÔøΩÔøΩÔøΩÔøΩb,ÔøΩjÔøΩÔøΩÔøΩPT~5ÔøΩÔøΩÔøΩsÔøΩ[ÔøΩÔøΩÔøΩdÔøΩi‹ÜLÔøΩuÔøΩÔøΩcÔøΩ8ÔøΩÔøΩÔøΩÔøΩtÔøΩxÔøΩ8ÔøΩtÔøΩhÔøΩÔøΩ9ÔøΩnYÔøΩ.v+VÔøΩDÔøΩ*‡ºâbh6ÔøΩÔøΩÔøΩÔøΩS ÔøΩﬁúÔøΩÔøΩ—Ñ!ÔøΩÔøΩ'œß‘∞ÔøΩÔøΩvÔøΩ(YhÔøΩgkÔøΩÔøΩDÔøΩ71\6ÔøΩÔøΩÔøΩÔøΩÔøΩkwaIÔøΩS[ÔøΩÔøΩToÔøΩÔøΩM8ÔøΩÔøΩrÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩrsÔøΩ&¬ó[eÔøΩÔøΩBÔøΩ?pÔøΩÔøΩ_ÔøΩ;`ÔøΩÔøΩBÔøΩEÔøΩi7ÔøΩÔøΩÕä<ÔøΩÔøΩ}ÔøΩÔøΩÔøΩBÔøΩÔøΩBsMÔøΩzÔøΩÔøΩmÔøΩtRÔøΩa{ÔøΩ>&Íùõ]ÔøΩÔøΩÔøΩÔøΩ5ÔøΩÔøΩÔøΩ—∑*ÔøΩÔøΩ_ÔøΩS2MJ}ÔøΩ""ÔøΩM,PNZ|EÔøΩÔøΩ""8Yÿû4KpaX=ÔøΩ^ÔøΩ∆§ÔøΩlÔøΩÔøΩ_ÔøΩ3tÔøΩÔøΩIÔøΩrJÔøΩÔøΩ4`ÔøΩGÔøΩ-ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩPÔøΩÔøΩÔøΩjÔøΩÔøΩÔøΩÔøΩ)\ÔøΩÔøΩ2ÔøΩÔøΩ8ÔøΩÔøΩYCÔøΩÔøΩÛÄÜ™xÔøΩEÔøΩV!ÔøΩÔøΩÔøΩÔøΩÔøΩHÔøΩÔøΩ.ÔøΩ €≤…ár8ÔøΩÔøΩÔøΩÔøΩ${tÔøΩ+ÔøΩÔøΩÔøΩL#TtÔøΩWÔøΩ/ÔøΩÔøΩ]ÔøΩÔøΩ⁄éÔøΩÔøΩNaÔøΩÔøΩÔøΩdl¬à”ÑÔøΩXÔøΩÔøΩwÔøΩy{\ÔøΩ_ÔøΩÔøΩÔøΩÔøΩ:uÔøΩ7ÔøΩÔøΩÔøΩ^MÔøΩlÔøΩÔøΩ-ÔøΩÔøΩÔøΩU”ãÔøΩÔøΩ‡®îmÔøΩ7ÔøΩBOS<ÔøΩÔøΩUÔøΩnÔøΩÔøΩ#ÔøΩsFfÔøΩ-ÔøΩÔøΩ P2ÔøΩÔøΩ=J`ÔøΩÔøΩÔøΩtÔøΩÔøΩHV0ÔøΩ%ÔøΩÔøΩÔøΩ(ÔøΩÔøΩ÷ØgÔøΩbÔøΩ√ô`ÔøΩ[mÔøΩyÔøΩ6ÔøΩgÔøΩhÔøΩÔøΩ/F=IÔøΩdV42ÔøΩÔøΩÔøΩÔøΩ`ÔøΩÔøΩÔøΩnÔøΩKSÔøΩÔøΩAÔøΩÔøΩSYÔøΩÔøΩÔøΩÔøΩEyeeÔøΩfÔøΩÔøΩF~qXÔøΩÀÄ8|ÔøΩÔøΩÔøΩUÔøΩÔøΩ.ÔøΩÔøΩfÔøΩﬁâÔøΩÿªnqÔøΩÔøΩÔøΩ9ÔøΩFÔøΩÔøΩœöÔøΩÔøΩRÔøΩ‘óÔøΩÔøΩqEÔøΩi^{ÔøΩÔøΩÔøΩ|ÔøΩ6ÔøΩ_ÔøΩÔøΩh<ÔøΩÔøΩlÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩC–∞X√ºeX]ÔøΩ6pDÔøΩ'ÔøΩCÔøΩOHn$9W^#{~g6ÔøΩ?ÔøΩÔøΩ^aÔøΩÔøΩÔøΩuÔøΩÔøΩ`ÔøΩÔøΩ‘±=ÔøΩÔøΩVÔøΩÔøΩÔøΩ?ÔøΩKIÔøΩ^[ÔøΩÔøΩ_Y<vÔøΩÔøΩL|ÔøΩ6ÔøΩ#ÔøΩ0ÔøΩxJÔøΩÔøΩu&ÔøΩO(ÔøΩs{ÔøΩÔøΩ{v5ÔøΩ};ÔøΩDTÔøΩLÔøΩZ–±-ÔøΩÔøΩÔøΩXtÔøΩ^HÔøΩÔøΩÔøΩÔøΩÔøΩjÔøΩÔøΩÔøΩcRÔøΩÔøΩÔøΩÔøΩ+nÔøΩiÔøΩBÔøΩÔøΩÔøΩXpÔøΩ8~PÔøΩ+ÔøΩÔøΩhtYÔøΩh‘àÔøΩWtfaÔøΩÔøΩ*UÔøΩ -ÔøΩ?ÔøΩnÔøΩkG{ÔøΩg QÔøΩ90ÔøΩÔøΩÔøΩÔøΩ ""ÔøΩm%ÔøΩÔøΩTÔøΩ|iÔøΩKÔøΩZ}ÔøΩÔøΩ\ÔøΩtUÔøΩsÔøΩlÔøΩ-.ÔøΩÔøΩwÔøΩÔøΩ$37\C 'ÔøΩRÔøΩ=,ÔøΩÔøΩÔøΩÔøΩ!=7uÔøΩBÔøΩ_ÔøΩÔøΩÔøΩIkÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ&ÔøΩÔøΩÔøΩÔøΩKl≈±ÔøΩP(…∏8ÔøΩÔøΩ'ÔøΩ;ÔøΩbOÔøΩyÔøΩ ≥ÔøΩÔøΩ!ÔøΩZsÔøΩÔøΩn—üÔøΩ""ÔøΩ3C~ÔøΩÔøΩBÔøΩÔøΩxÔøΩÔøΩÔøΩÔøΩÔøΩÃßÔøΩÔøΩ=lÔøΩÔøΩÔøΩYÔøΩÔøΩÔøΩÔøΩÔøΩFÔøΩO«áV*ÔøΩ9ÔøΩ/rÔøΩgjÔøΩ:ÔøΩ.`6WF_b|ÔøΩÔøΩpIeÔøΩ3JÔøΩÔøΩÔøΩ,ÔøΩ'ÔøΩÔøΩÔøΩ[xÔøΩÔøΩ?""ÔøΩÔøΩÔøΩDÔøΩÔøΩ%uÔøΩ8gÔøΩÔøΩÔøΩ?ÔøΩ J]ÔøΩPÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩuÔøΩyÔøΩÔøΩÔøΩi»≥ÔøΩÔøΩ)'WÔøΩÔøΩXÔøΩeÔøΩf_ÔøΩÔøΩÔøΩcÔøΩ[Ÿ¢ÔøΩÔøΩÔøΩBÔøΩ3sÔøΩ1]ÔøΩÔøΩwsÔøΩPÔøΩ!ÔøΩ-ÔøΩ;/*>uÔøΩMÔøΩz%ÔøΩ5^c}~ÔøΩÔøΩ.SÔøΩj/TÔøΩWÔøΩÔøΩÔøΩÔøΩ‘àÔøΩÔøΩjÔøΩÔøΩ>NÔøΩy-ÔøΩÔøΩÔøΩrh„àêvÔøΩ^*ÔøΩYÔøΩrÔøΩ""QÔøΩÔøΩÔøΩh:ÔøΩT=nÔøΩiÔøΩÔøΩÔøΩhÔøΩOÔøΩÔøΩNCÔøΩCiÔøΩÔøΩCÔøΩkYÔøΩ;{91Õ®ÔøΩ~dÔøΩM8-HÔøΩ$ÔøΩÔøΩUÔøΩ_ÔøΩkÔøΩÔøΩÔøΩÔøΩ]{-ÔøΩ=z'B(ÔøΩm+nKÔøΩLÔøΩÔøΩ6ÔøΩƒ≠ÔøΩÔøΩ]ÔøΩÔøΩ;ÔøΩcÔøΩÔøΩÔøΩÔøΩÔøΩ""wÊ∂ÑaÔøΩ4.}ÔøΩÔøΩJCxÔøΩCy$d6ÔøΩN}~ÔøΩÔøΩÔøΩ\ÔøΩÔøΩIÔøΩÔøΩ4ÔøΩ>>/ÔøΩ:ÔøΩ ∆∞ _ÔøΩ(uÔøΩÔøΩ)ÔøΩ $ÔøΩÔøΩÔøΩJ;ÔøΩ^ÔøΩbpÔøΩsZÔøΩÔøΩ05ÔøΩÔøΩÔøΩcÔøΩ$dlÔøΩÔøΩÔøΩÔøΩÔøΩCÔøΩQÔøΩÔøΩZÔøΩ	~&ÔøΩÔøΩqoÔøΩ[ÔøΩ=ÔøΩÔøΩÔøΩ»®ÔøΩÔøΩÔøΩÔøΩy‰ºèÔøΩÔøΩ1ÔøΩÔøΩÔøΩÔøΩ-…¢9ÔøΩGÔøΩÔøΩ+ÔøΩZIOÔøΩXEZÔøΩÔøΩcÔøΩÔøΩ[tÔøΩtw3ÔøΩ|ÔøΩ|aÔøΩZ ÔøΩ[ÔøΩrÔøΩÔøΩÔøΩyLÔøΩÔøΩÔøΩoÔøΩ$ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩ∆≤OE""ÔøΩÔøΩÔøΩtÔøΩÔøΩÔøΩ‰åªÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩwÔøΩlNHÔøΩbÔøΩ =ÔøΩkDÔøΩ5di≈á≈ßJÔøΩÔøΩwEÔøΩ1ÔøΩÔøΩÔøΩÔøΩFÔøΩ_*_ÔøΩÔøΩ-ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩjÔøΩRyÔøΩÔøΩÔøΩÔøΩ+ÔøΩÔøΩÔøΩ*ÔøΩÔøΩÔøΩ PÔøΩÔøΩÔøΩkÔøΩÔøΩœ•UM/R ÔøΩ""XÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩRL~2sÔøΩÔøΩÔøΩÔøΩdÔøΩHœµK8>yÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩqÔøΩ0ÔøΩÔøΩÔøΩÔøΩi}ÔøΩÔøΩ“åWÔøΩp5ÔøΩ);›±ÔøΩÔøΩ'~)ÔøΩKÔøΩjvÔøΩbÔøΩ_I-	|cÔøΩ$vÔøΩjv1ÔøΩEjÔøΩH]ÔøΩÔøΩ*ÔøΩ:ÔøΩnÔøΩÔøΩ ÔøΩÔøΩ[*ÔøΩ%6cÔøΩƒ°e.Tw$ÔøΩÔøΩgÔøΩÔøΩÔøΩgÔøΩKÔøΩn\ZÔøΩSHÔøΩ[ÔøΩÔøΩ7ÔøΩÔøΩ,ÔøΩZÔøΩWÔøΩkÔøΩwÔøΩfÔøΩÔøΩxÔøΩ@ÔøΩÔøΩÔøΩ8ÔøΩXÔøΩOWÔøΩÔøΩ*uÔøΩ9ÔøΩKÔøΩaÔøΩgÔøΩP5ÔøΩÔøΩ>ÔøΩ w7ÔøΩÔøΩ∆òi7FoÔøΩ,sÔøΩÔøΩY»±ÔøΩÔøΩ~A n>#ÔøΩ=1.ÔøΩ]ÔøΩyÔøΩdMI)ÔøΩuÔøΩ7ÔøΩÔøΩXÔøΩÔøΩÔøΩF=ÔøΩ‘¨UÔøΩ]ÔøΩÔøΩ1QÔøΩ[\ÔøΩÔøΩÔøΩSÔøΩÔøΩe`HdÔøΩhÔøΩÔøΩÔøΩÔøΩÔøΩLÔøΩÔøΩcO/ÔøΩJÔøΩÔøΩÔøΩ5ÔøΩÔøΩÔøΩÔøΩÔøΩ,5ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩjÔøΩ4RÔøΩ ÔøΩCRU;ÔøΩ=v5ÔøΩ-ÔøΩÔøΩÔøΩJs@WÔøΩQÔøΩG|ÔøΩ6=U7ÔøΩÔøΩoÔøΩIÔøΩ{E@wÔøΩ{""eÔøΩ!vhÔøΩ/ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ+Kc ÔøΩÔøΩ\bÔøΩÔøΩÔøΩÔøΩÔøΩav=xÔøΩWobÔøΩÔøΩÔøΩ~`t{ÔøΩÔøΩ	ÔøΩÔøΩ ÔøΩAÔøΩlÔøΩÔøΩÔøΩÔøΩÔøΩ1ÔøΩÔøΩ9ÔøΩ9) EÔøΩbgÔøΩ5}uI\.ÔøΩbe$ÔøΩÔøΩÔøΩÔøΩÔøΩcÔøΩÔøΩÔøΩ;&1{ÔøΩÔøΩYdÔøΩO&=-J⁄£ÔøΩÔøΩÔøΩÔøΩ5ÔøΩ/ÔøΩZPÔøΩÔøΩ6zLÔøΩÔøΩQÔøΩÔøΩÔøΩÔøΩŒúÔøΩÔøΩkÔøΩSÔøΩ8ÔøΩ{ÔøΩÔøΩÔøΩbnÔøΩÔøΩÔøΩÔøΩÔøΩ} )ÔøΩmÔøΩEÔøΩ328ÔøΩÔøΩÔøΩÔøΩQY ÔøΩÔøΩ}ÔøΩbÔøΩÔøΩÔøΩÔøΩÔøΩ,""Œ†ÔøΩ–ÅTnÔøΩÔøΩÔøΩ<ÔøΩ^1ÔøΩjÔøΩ8wÔøΩÔøΩ⁄¥ÔøΩÔøΩÔøΩrÔøΩTÔøΩeVÔøΩ> endobj 7 0 obj << /Filter /FlateDecode /Length 3730 >> stream xÔøΩÔøΩÔøΩnÔøΩÔøΩÔøΩ>_—∑PÔøΩÔøΩb-ÔøΩ9ÔøΩÔøΩ'HbÔøΩPÔøΩ]ÔøΩsisÔøΩÔøΩ||ÔøΩV\ZŸóÔøΩWÔøΩÔøΩWoÔøΩÔøΩxÔøΩÔøΩÔøΩSq(ÔøΩ2ÔøΩÔøΩÔøΩÔøΩ·†íÔøΩÔøΩ6NL~ÔøΩ?~ÔøΩÔøΩÔøΩpskÔøΩÔøΩ3YÔøΩZFtÔøΩÔøΩÕ≠.ÔøΩÔøΩÔøΩÔøΩo |·û±c ±wgÔøΩ(7JÔøΩCYtÈ´ìÔøΩonÔøΩ,ÔøΩÔøΩo uLqÔøΩÔøΩÔøΩÔøΩÔøΩEhZ ÔøΩÔøΩ@œìÔøΩÔøΩ^8u@ÔøΩÔøΩÔøΩzw¬±2ÔøΩ-ÔøΩÔøΩÔøΩ7ÔøΩÔøΩÔøΩÔøΩnÔøΩÔøΩÔøΩ4ÔøΩÔøΩU#œ§yÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ`ÔøΩÔøΩÔøΩ{=ŒëGO‹™xWÔøΩÔøΩÔøΩÔøΩ=ÔøΩÔøΩ [ÔøΩÔøΩ=![ÔøΩÔøΩÔøΩÔøΩ0mÔøΩÔøΩÔøΩOCÔøΩ>^ÔøΩO<ÔøΩÔøΩÔøΩÔøΩÔøΩzÔøΩÔøΩÔøΩÔøΩÔøΩuxÔøΩfÔøΩsÔøΩÔøΩÔøΩ4.ÔøΩÔøΩÔøΩÔøΩ ÔøΩ`hÔøΩ0ÔøΩG ÔøΩÔøΩiÔøΩ{ÔøΩÔøΩÔøΩYÔøΩ""ÔøΩ4[ÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩ ÔøΩtÔøΩÔøΩÔøΩÔøΩÔøΩ?|ÔøΩÔøΩÔøΩ8SÔøΩÏù°qmuÔøΩj'ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩQÔøΩÔøΩÔøΩÔøΩÔøΩ}ÔøΩÔøΩÔøΩÔøΩ;ÔøΩ^:Y8ÔøΩÔøΩH :>	ÔøΩc{ÔøΩzÔøΩÔøΩ w8ÔøΩB~ÔøΩ√©ÔøΩÔøΩ$ÔøΩÔøΩ<ÔøΩKZuÔøΩÔøΩ<3]ÔøΩrÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩob#ÔøΩÔøΩSÔøΩVÔøΩT:ÔøΩÔøΩ2c* T ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩdÔøΩ+ÔøΩÔøΩqi-,Pƒ¶ÔøΩÔøΩÔøΩMÔøΩ[EÔøΩÔøΩÔøΩ:/ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩnÔøΩÔøΩ»îOÔøΩÔøΩv!ÔøΩDÔøΩ~oOÔøΩÔøΩzÔøΩÔøΩfÔøΩCÔøΩ3u€µÔøΩAÔøΩ}@b{j@\OÔøΩÔøΩwÔøΩ.ÔøΩÔøΩÔøΩƒ©ÔøΩÔøΩ8+~ÔøΩpÔøΩEÔøΩS[ ÔøΩ8ÔøΩ]QF_4wÔøΩiÔøΩwUsÔøΩe‘±j]ÔøΩÔøΩ0ÔøΩÔøΩ+ÔøΩ>4ÔøΩ ÔøΩ,ÕÄÔøΩÔøΩ4nÔøΩIHXÔøΩÔøΩÔøΩÔøΩ,3ÔøΩ20KÔøΩtÔøΩÔøΩÔøΩﬁ•ÔøΩÔøΩÔøΩ*ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩMa#4&ÔøΩÔøΩ ÔøΩÔøΩFÔøΩ‚ßå+ÔøΩÔøΩÔøΩÔøΩMÔøΩllQÔøΩÔøΩ""0ÔøΩ`ÔøΩÔøΩ<ÔøΩÔøΩt?ÔøΩS)ÔøΩ$ÔøΩ-ÔøΩÔøΩ""ÔøΩ=ÔøΩMÔøΩj<ÔøΩ4ÔøΩ~ÔøΩ}ÔøΩÔøΩ9–É8WYÔøΩl&c	PÔøΩÔøΩÔøΩÔøΩ,ÔøΩÔøΩÔøΩ]0lXAÔøΩÔøΩQBÔøΩ+ÔøΩ?HYÔøΩÔøΩvNÔøΩÔøΩÔøΩÔøΩT5ÔøΩvÔøΩM 7ÔøΩ6AÔøΩÔøΩ3Lƒ¥mÔøΩ{lw/ÔøΩÔøΩ?ÔøΩkLD~ÔøΩ?‹≥ÔøΩVÔøΩqGœ¶AÔøΩ&ÔøΩÔøΩÔøΩÔøΩgÔøΩE?dqÔøΩÔøΩÔøΩ46ÔøΩÔøΩÃ®ÔøΩÔøΩ3%ÔøΩÔøΩÔøΩ>)ÔøΩUmÔøΩnWÔøΩÔøΩ$IÔøΩÔøΩ dÔøΩL<◊ØÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩIÔøΩÔøΩTÔøΩÔøΩXÔøΩÔøΩÔøΩuACÔøΩ7_+ÔøΩÔøΩzE+ÔøΩbÔøΩZÀÆÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ~ÔøΩ`ÔøΩÔøΩÔøΩTiVRÔøΩÔøΩYÔøΩÔøΩÔøΩÔøΩœø&ÔøΩ3tÔøΩÔøΩ5+ÔøΩDÔøΩ',@ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩaÔøΩzÔøΩeÔøΩ$ÔøΩrŸΩp4;ÔøΩE)ÔøΩ!:ÔøΩpÔ•πÔøΩÔøΩ∆¢ÔøΩÔøΩÔøΩÔøΩTlÔøΩÔøΩÔøΩÃÄ0$ÔøΩÔøΩ^IJÔøΩYÔøΩÔøΩ.ÔøΩlGÔøΩÔøΩMÔøΩÔøΩ vN›ÄÔøΩ,ÔøΩÔøΩÔøΩ}ÔøΩÔøΩ#ÔøΩDsÔøΩÔøΩﬁªÔøΩkÔøΩSÔøΩXÔøΩÔøΩ«éÔøΩÔøΩ;Y|o0 ÔøΩHzAW÷≥ÔøΩ-ÔøΩvÔøΩÿä€ëÔøΩÔøΩnÔøΩrÔøΩ' ÔøΩc3	ÔøΩ%hNÔøΩlZ[uÔøΩÔøΩÔøΩ}ÔøΩÔøΩ""a3ÔøΩÔøΩÔøΩL DÔøΩ_ÔøΩPÔøΩÔøΩLÔøΩÔøΩÔøΩÔøΩVÔøΩNÔøΩÔøΩÔøΩÔøΩ–ö,ÔøΩAPÔøΩ:ÔøΩÔøΩ‹ÖÔøΩÔøΩoe2d;:OÔøΩDÔøΩtÔøΩÔøΩQ4Dk^ÔøΩ$&\@ÔøΩÔøΩ_«üÔøΩÔøΩwÔøΩ[ÔøΩÔøΩ ÔøΩLÔøΩ/3!<ÔøΩÔøΩÃø$irÔøΩmÔøΩF{;FqÔøΩJÔøΩYÔøΩHÔøΩÔøΩÔøΩÔøΩM3ÔøΩ[YÔøΩÔøΩ@ ÔøΩÔøΩÔøΩÔøΩbÔøΩ	ÔøΩuBÔøΩOÔøΩÔøΩO'ÔøΩÔøΩÔøΩq7Dt$90ÔøΩÔøΩtÔøΩ`-BÔøΩ$ÔøΩ*NÔøΩÔøΩY√úÔøΩMÔøΩ|ÔøΩKÔøΩÔøΩVLÔøΩÔøΩ@u.ÔøΩÔøΩÔøΩÔøΩrÔøΩÔøΩÔøΩ}dÔøΩÔøΩ]|ÔøΩTÔøΩFÔøΩ\ÔøΩÔøΩbÔøΩÔøΩsÔøΩ #CÔøΩÔøΩÔøΩÔøΩÔøΩG8a-ÔøΩ∆£ÔøΩÔøΩ#ÔøΩÔøΩÔøΩ>F∆Ä(ÔøΩt`ÔøΩkÔøΩ“òÔøΩﬂçq%ÔøΩ8ÔøΩ2ÔøΩYÔøΩÔøΩ\JÔøΩÔøΩ xeÔøΩÕûaÔøΩqbÔøΩÔøΩÔøΩÔøΩfoP%_ÔøΩ?ÔøΩÔøΩ—ú?uÔøΩRfÔøΩÔøΩÔøΩÔøΩAÔøΩAÔøΩÔøΩÔøΩÔøΩeÔøΩÔøΩÔøΩS7=ÔøΩÔøΩYÔøΩ2=ÔøΩ2 ÔøΩÔøΩ]+1*6ÔøΩÔøΩÔøΩU^ÔøΩ:ÔøΩÔøΩjÔøΩ<ÔøΩ>TÔøΩ%ÔøΩ1ÔøΩÔøΩÔøΩÔøΩfÔøΩ%ÔøΩÔøΩdÔøΩÔøΩÔøΩÔøΩÔøΩ}ÔøΩ\ÔøΩ$ÔøΩ ÔøΩh9eeeÔøΩÔøΩÔøΩSÔøΩ ÔøΩÔøΩbÔøΩTNÔøΩ€∏÷öÔøΩÔøΩÔøΩÔøΩeÔøΩÔøΩŒñ4eÔøΩ[QÔøΩBv–ÆuÔøΩgJ—†GÔøΩU!ÔøΩ<ÔøΩÔøΩÔøΩ0SÔøΩ6ÔøΩr%rYÔøΩÔøΩ_AÔøΩdÔøΩÔøΩÔøΩ9ÔøΩp,	jÔøΩÔøΩ `œºKÔøΩYÔøΩiKÔøΩGÔøΩ`ÔøΩ!ÔøΩ;2ÔøΩa	ÔøΩÔøΩ.ÔøΩa%ÔøΩ‘áÔøΩÔøΩp@ÔøΩ«ªÔøΩ!ÔøΩÔøΩ,ÔøΩÔøΩ`4ÔøΩÔøΩÔøΩ%pÔøΩ[ViÔøΩ◊êLNT`FÔøΩZRRhRÔøΩ)bÔøΩhÔøΩ;ÔøΩÔøΩÔøΩKÔøΩ	ÔøΩ	)‘úÔøΩZÔøΩÔøΩ{ÔøΩTÔøΩTQ&ÔøΩ`ÔøΩPÔøΩsPEÔøΩÔøΩjÔøΩZÔøΩcDw-ÔøΩa!ÔøΩÔøΩÔøΩSÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ^B99gÔøΩHÔøΩ+	 ÔøΩÔøΩ?ÔøΩÔøΩÔøΩ4bÔøΩÔøΩ-;ÔøΩI(TÔøΩCVÔøΩÔøΩ :ÔøΩ{ÔøΩHÔøΩ""cBÔøΩ)ÔøΩ`ÔøΩ}`ÔøΩÔøΩPsqÀà=ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩKYÔøΩ ÔøΩV√ô 4ÔøΩ,ÔøΩÔøΩÔøΩ!M1*ÔøΩBÔøΩÔøΩVdÔøΩh⁄øHÔøΩÔøΩS5ÔøΩHÔøΩvrÔøΩÔøΩ3""ÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩ`S4tÔøΩ2ÔøΩÔøΩÔøΩdÔøΩUÔøΩÔøΩhKÔøΩ›ëÔøΩÔøΩBbÔøΩgKÔøΩÔøΩ;rÔøΩÔøΩOeTÔøΩÔøΩ1ÔøΩÔøΩQÔøΩÔøΩÔøΩÔøΩƒ§ÔøΩÔøΩÔøΩÔøΩÔøΩ'ÔøΩMmÔøΩ)ÔøΩÔøΩ*ÔøΩÔøΩÔøΩÔøΩ_ÔøΩ:pÔøΩÔøΩÔøΩFlÔøΩÔøΩÔøΩ$+ÔøΩ}ÔøΩÔøΩwZ%ÔøΩÔøΩRÔøΩÔøΩÔøΩÔøΩ&N ÔøΩpCÔøΩÔøΩÔøΩÔøΩ{XÔøΩpÔøΩ$ÔøΩ–ò”•ÔøΩÔøΩÔøΩÔøΩ0ÔøΩ'	^(ÔøΩ yÔøΩ~ÔøΩ.bCÔøΩoÔøΩÔøΩv=6'`tÔøΩÔøΩEÔøΩXÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩw/7L ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩ3ÔøΩaÔøΩ’úÔøΩÔøΩÔøΩÔøΩÔøΩaÔøΩÔøΩÔøΩ∆óba&eÔøΩ dTPyadÔøΩAÔøΩÔøΩÔøΩBÔøΩ8 _ÔøΩ+ÔøΩ@QRÔøΩ`ÔøΩÔøΩIÔøΩÔøΩ+ÔøΩQÔøΩRxD ÔøΩv{Úåº¨sÔøΩ+ÔøΩÔøΩ>)98ƒí}ÔøΩ`ÔøΩ	ÔøΩ_AÔøΩG_ÔøΩÔøΩÔøΩdLÔøΩB1ÔøΩÔøΩÔøΩÔøΩÔøΩpÔøΩxÔøΩÔøΩ4ÔøΩÔøΩÔøΩÔøΩÔøΩ {ÔøΩÔøΩlÔøΩJÔøΩÔøΩ ÔøΩÔøΩ[1Dc NÔøΩÔøΩtq,nEÔøΩ[&qÔøΩFÔøΩVÔøΩ5yÔøΩBÔøΩbÔøΩkÔøΩk,j$bÔøΩÔøΩÔøΩxÔøΩPÔøΩGÔøΩÔøΩ-iÔøΩ{ÔøΩ2vÔøΩÔøΩÔøΩ!ÔøΩ1ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩÔøΩ&dﬂ∏RÔøΩ@d»â|RY,ÔøΩ(6ÔøΩÔøΩ@@‰∫êÔøΩÔøΩMrÔøΩgFqvÔøΩ*ÔøΩÔøΩIÔøΩÔøΩ""ÔøΩ:ÔøΩÔøΩ+ÔøΩs&ÔøΩ{ÔøΩÔøΩeÔøΩÔøΩÔøΩÔøΩqÔøΩ08)ÔøΩÔøΩ”íÔøΩÔøΩ!""o,]ÔøΩCuÔøΩÔøΩc\ÔøΩ@ÔøΩ@ÔøΩlÔøΩtRÔøΩ-ÔøΩÔøΩÔøΩÔøΩÔøΩ”ô]ÔøΩE\ÔøΩ$ ÔøΩOÔøΩÔøΩcÔøΩcÔøΩÔøΩÔøΩ`ÔøΩÈëßÔøΩEÔøΩ*Y+ÔøΩÔøΩ8ÔøΩ)ÔøΩ ÔøΩÔøΩAÔøΩ[ÔøΩÔøΩCÔøΩTÔøΩÔøΩaÔøΩ`XÔøΩÔøΩÔøΩÔøΩÔøΩoÔøΩdÔøΩÔøΩÔøΩw]#ÔøΩÔøΩVÔøΩoGŒéÔøΩÔøΩ_◊ºÔøΩNÔøΩ«™1ÔøΩÔøΩ)4f6OÔøΩÔøΩ8\ÚÖõ´;ÔøΩÔøΩÔøΩÔøΩÔøΩ]4ÔøΩ@ÔøΩ;ÔøΩÔøΩÔøΩÔøΩ?sÔøΩÔøΩ%ÔøΩ◊¥	ÔøΩDduÔøΩÔøΩÔøΩÔøΩ0ÔøΩGbEÔøΩÔøΩRlÔøΩ$#ÔøΩƒ©ÔøΩÔøΩÔøΩÔøΩVÔøΩÔøΩÔøΩbhÀïÔøΩ4ÔøΩÔøΩJÔøΩoP–ØÔøΩÔøΩÔøΩ]ÔøΩEÔøΩ“πÔøΩÔøΩÔøΩ,ÔøΩT&ÔøΩcÔøΩ ≠ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩxaÔøΩ	ÔøΩ|∆∞!ÔøΩÔøΩÔøΩÔøΩxyÔøΩÔøΩÔøΩÔøΩ<ÿÅJMÔøΩÔøΩ5ÔøΩeÔøΩÔøΩqnÔøΩzcÔøΩÿáÔøΩREÔøΩHsCÔøΩYÔøΩÔøΩ?ÔøΩdk&ÔøΩiÔøΩÔøΩe8ÔøΩÔøΩ7ÔøΩÔøΩ5ÔøΩÔøΩjÔøΩÔøΩDÔøΩc»©n:ÔøΩ`!!ÔøΩDKÔøΩSÔøΩÔøΩ )aC{ÔøΩÔøΩ<$SC=ÔøΩÔøΩ^ÔøΩD 1ÔøΩ\!ÔøΩ[#ÔøΩe9ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩRÔøΩ‘âRWÔøΩÔøΩÔøΩÔøΩÔøΩ+ÔøΩÔøΩcÔøΩÔøΩÔøΩÔøΩfÔøΩÔøΩ$gÔøΩ9ÔøΩgÔøΩÔøΩpnÔøΩÔøΩÔøΩoAfNÔøΩÔøΩÔøΩJÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩ92^ÔøΩoyBÔøΩpÔøΩÔøΩ~dÔøΩÔøΩm~ÔøΩAÔøΩoÔøΩÔøΩÔøΩqBÔøΩÔøΩr#ÔøΩÔøΩjÔøΩrÔøΩZRÔøΩÔøΩÔøΩ(ÔøΩoÔøΩnÔøΩÔøΩÔøΩCDÔøΩÔøΩ2M%ÔøΩÔøΩÔøΩÔøΩWoFÔøΩeLÔøΩÔøΩÔøΩÔøΩ^ÔøΩÔøΩﬁºY}H!ÔøΩÔøΩÂëßÔøΩÔøΩR ÔøΩÔøΩKÔøΩ7ÔøΩbVr LÔøΩÔøΩHÔøΩj1ÔøΩ!-ÔøΩÔøΩÔøΩÔøΩÔøΩ I|ÔøΩÔøΩÔøΩmÔøΩ$lŒ°}ÔøΩÔøΩÔøΩÔøΩT?ÔøΩKFÔøΩ›ê6qÔøΩVÔøΩÃèS6_ÔøΩGÔøΩÔøΩÔøΩÔøΩ–íÔøΩmv^ÔøΩÔøΩNMÔøΩÔøΩZ∆Ö6ÔøΩmÔøΩÔøΩÔøΩ;ÔøΩÔøΩ –îXÔøΩÔøΩÔøΩwÔøΩÔøΩ\ÔøΩÔøΩJ7ÔøΩÔøΩÔøΩy.`fÔøΩ7^ÔøΩ20ÔøΩ*ÔøΩUvÕåÔøΩÁß∫<ÔøΩbÔøΩ›ÅÔøΩÔøΩ7ÔøΩRÔøΩ÷íÔøΩÔøΩÔøΩÔøΩÔøΩxP⁄îJPAIÔøΩÔøΩÔøΩBÔøΩHÔøΩÔøΩÔøΩFIÔøΩÔøΩcÔøΩÔøΩ.3ÔøΩÔøΩÔøΩM)ÔøΩÔøΩ<'«¥E'ƒö5ÔøΩk8ÔøΩ8“ífÔøΩÔøΩ~8ÔøΩCÔøΩÔøΩÔøΩÔøΩ:ÔøΩÔøΩÔøΩ[ÔøΩÔøΩÔøΩulÔøΩTÔøΩPÔøΩÔøΩjuÔøΩxYÔøΩcÔøΩÔøΩ8ÔøΩtL;ÔøΩÔøΩKU$sÔøΩoÔøΩ?z*ÔøΩAcÔøΩN8ÔøΩÔøΩÔøΩÔøΩ’∞#@ÔøΩÔøΩj,XÔøΩLÔøΩÔøΩuÔøΩ8MÔøΩÔøΩÔøΩ,ÔøΩ: ,ÔøΩ ÔøΩÔøΩp%ÔøΩÔøΩeSÔøΩÔøΩ|)kÔøΩÔøΩY6ÔøΩÔøΩÔøΩ !oÔøΩ,ÔøΩ]nÔøΩYkaÔøΩD6ÔøΩbkÔøΩ’íÔøΩÔøΩÔøΩÔøΩ)(ÔøΩBÔøΩWÔøΩoÔøΩ;ÔøΩÔøΩÔøΩœ©;LÔøΩÔøΩÔøΩ=+fÔøΩÔøΩ;ÔøΩ[ÔøΩ ÔøΩy ~\ÔøΩÔøΩ 6ÔøΩÔøΩÔøΩÔøΩÔøΩAO endstream endobj 8 0 obj << /Annots [ 303 0 R 304 0 R ] /Contents 9 0 R /MediaBox [ 0 0 612 792 ] /Parent 176 0 R /Resources 305 0 R /Type /Page >> endobj 9 0 obj << /Filter /FlateDecode /Length 4141 >> stream xÔøΩÔøΩ[KÔøΩÔøΩ6ÔøΩœØÔøΩe 7ÔøΩfÔøΩ&ÔøΩ ÔøΩdÔøΩÔøΩvÔøΩ^ÔøΩ!ÔøΩAcÔøΩÔøΩÔøΩÔøΩrGÔøΩÔøΩwÔøΩÔøΩÔøΩÔøΩbÔøΩzÔøΩÔøΩg“ÉÔøΩLÔøΩUÔøΩ*V}ÔøΩ ÔøΩ«á7ﬂºÔøΩVÔøΩÔøΩÔøΩÔøΩJpÔøΩÔøΩN3ÔøΩÔøΩÔøΩaÔøΩÔøΩyÔøΩ7ÔøΩ|ÔøΩÔøΩÔøΩ^j]nÔøΩsÔøΩÔøΩÔøΩyÔøΩÔøΩÔøΩÔøΩ8ÔøΩXU>ÔøΩÔøΩÔøΩÔøΩÔøΩ~WÔøΩOÔøΩSs'ÔøΩÔøΩÔøΩh‡π¨ÔøΩ4ÔøΩnÔøΩÔøΩ`wÔøΩVÔøΩÔøΩÔøΩnÔøΩÔøΩY[nzÔøΩÔøΩÔøΩaÔøΩÔøΩÔøΩÔøΩcOtv%NÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩ/\ÔøΩM]	ÔøΩÔøΩÔøΩ~}ÔøΩÔøΩÔøΩÔøΩÔøΩ`ÔøΩ1$ÔøΩÔøΩÔøΩv_ÔøΩtÔøΩÔøΩ5RzÔøΩÔøΩ	ÔøΩ ""ÔøΩ6ÔøΩÔøΩOÔøΩÔøΩÔøΩmÔøΩ ÔøΩ5ÔøΩWÔøΩZÔøΩWÔøΩÔøΩÔøΩb}ÔøΩ_o ÜÔøΩÔøΩ}wÔøΩÔøΩÔøΩzB|ÔøΩÔøΩÔøΩ ÔøΩÔøΩWSw/ÔøΩÔøΩ|ÔøΩ7ÔøΩAÔøΩÔøΩ>ÔøΩiÔøΩÔøΩ—éÔøΩ|ÔøΩ∆∫ÔøΩIÔøΩÔøΩﬂ¢fƒ∫QfWÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩv<<Ô´∞ÔøΩ(ÔøΩ}NZCÔøΩuÔøΩvPÔøΩbÔøΩÔøΩÔøΩQ_¬ØÔøΩ[WÔøΩÔøΩÔøΩÔøΩ>ÔøΩix$@LÔøΩeÔøΩ÷éÔøΩ? ÜTÔøΩ7ÔøΩÔøΩhÔøΩnwÔøΩÔøΩÔøΩ–∂G|ÔøΩÔøΩ4IÔøΩ0ÔøΩÔøΩÔøΩt]ÔøΩGÔøΩ]lÔøΩ-=ÔøΩMÔøΩ,JÔøΩÿ®wGzÔøΩÔøΩ3ÔøΩÔøΩÔøΩÔøΩsÔøΩLm$ ÔøΩ9SÔøΩ- ÔøΩÔøΩÔøΩCÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ""\qWÔøΩOUÔøΩ1RoÔøΩ-ÔøΩÔøΩÔøΩÔøΩÔøΩ[YV8ÔøΩÔøΩmAv∆Ω])fEÔøΩÔøΩÔøΩ,ÔøΩV$ÔøΩÔøΩyÔøΩi""<0ÔøΩ5MÔøΩLSBÔøΩÔøΩ?ÔøΩcÔøΩ)ÔøΩÔøΩmÔøΩÔøΩxÔøΩ4ÔøΩÔøΩdÔøΩ)_ÔøΩÔøΩ0ÔøΩÔøΩ?HÔøΩ[7ÔøΩÔøΩi$ÔøΩ_%ÔøΩ·åõÔøΩÔøΩÔøΩLÔøΩ¬óÔøΩ(ÔøΩÔøΩ,ÔøΩAÔøΩÔøΩi P ÔøΩ-X)ÔøΩÔøΩÔøΩOsNmÔøΩÔøΩÔøΩÔøΩ*M@ÔøΩ4	aÔøΩ>ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩlÔøΩÔøΩ:Hx<ÔøΩÔøΩ4>2ÔøΩÔøΩ–ÜvÔøΩ6<ÔøΩOŸ©ÔøΩ@qÔøΩXÔøΩ=ÔøΩÔøΩÔøΩz8ÔøΩkYL;ÔøΩ&ÔøΩÔøΩm[uÔøΩÔøΩÔøΩÃ±ÔøΩÔøΩ ÔøΩÔøΩ(ÔøΩ”Ö)>4€è—∏ÔøΩÔøΩÔøΩ)ÔøΩB+Ê∞êÔøΩoMÔøΩÔøΩÔøΩÔøΩ’´ÔøΩÔøΩÔøΩgÔøΩÔøΩ[ÃÉiÔøΩAB‘£ÔøΩÔøΩ ÔøΩ G=ÔøΩÔøΩ‘ÜvÔøΩÔøΩÔøΩﬂ†r)ÔøΩÔøΩ-XÔøΩÔøΩÔøΩÔøΩ""ÔøΩpÔøΩÔøΩÔøΩÔøΩÔøΩmuÔøΩ|5ÔøΩGFÔøΩfÔøΩÔøΩÔøΩÔøΩ@ ÔøΩ$ÔøΩ1ÔøΩTÔøΩÔøΩÔøΩwPX>BEÔøΩYzÔøΩ≈°…∞	ÔøΩÔøΩÔøΩ@ÔøΩÔøΩ]^}ÔøΩÔøΩËÅøSbQN#ÔøΩ.qÔøΩ◊ÉÔøΩÔøΩÔøΩ2xÔøΩ<ÔøΩÔøΩidÔøΩh ,""ÔøΩ>ÔøΩ^ÔøΩÔøΩÔøΩ”òÔøΩÔøΩ	wÔøΩdÔøΩÔøΩ#,ÔøΩÔøΩÔøΩaÔøΩ-ÔøΩÔøΩ RaÔøΩÔøΩ""&ÔøΩ2ÔøΩÔøΩcfÔøΩÓåÖyÔøΩXÔøΩÔøΩÔøΩÔøΩ6ÔøΩrÔøΩÔøΩ0ÔøΩÔøΩ/:&_ÔøΩ⁄¥ÔøΩ9ÔøΩK9ÔøΩU#ÔøΩÔøΩvi9gÔøΩÔøΩrÔøΩÔøΩvÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ)ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩS.ÔøΩÔøΩdÔøΩÔøΩ/ÔøΩÔøΩ/ÔøΩ4ÔøΩ^ƒ§ÔøΩ) ãÔøΩÔøΩLÔøΩCp:sÔøΩ0ÔøΩ>ƒßÔøΩ	ÔøΩWÔøΩzÔøΩÔøΩÔøΩ [ÔøΩU""ÔøΩvÔøΩrÔøΩnÔøΩZ W)ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩlÔøΩ]Wj.ÔøΩÔøΩU,ÔøΩÔøΩÔøΩÔøΩÔøΩwÔøΩ%&ÔøΩG+ÔøΩcÔøΩ&ÔøΩÔøΩ]@ÔøΩÔøΩÔøΩo6ÔøΩÔøΩ|⁄ó}ÔøΩÔøΩ~ÔøΩwÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩ'cc9xÔøΩU =-]ÔøΩÔøΩHq[%mÔøΩH""SWb!'=TÔøΩuÔøΩ€∂ÔøΩÔøΩÔøΩ&`!ÔøΩÔøΩ$~ÔøΩmÔøΩ0 5ÔøΩÔøΩÔøΩÔøΩ}ÔøΩÔøΩÔøΩÔøΩ8ÔøΩB""ÔøΩ.fÔøΩ0vÔøΩc]bÔøΩÔøΩ≈∫ÔøΩ^ÔøΩÔøΩÔøΩyŸÄ◊∏DÔøΩ4ÔøΩL;ÔøΩhbÔøΩÔøΩÔøΩÔøΩ6ÔøΩÔøΩÔøΩ~ÔøΩÔøΩKÔøΩDÔøΩCÔøΩÔøΩÔøΩ√°ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩl6ÔøΩÔøΩÔøΩ4ÔøΩwÔøΩ>ÔøΩ^ÔøΩqÔøΩCÔøΩGU,ÔøΩRÔøΩÔøΩ>TuÔøΩRÔøΩEÔøΩÔøΩmZ1ÔøΩÔøΩ&7AI"" MÔøΩMÔøΩR–ìÔøΩCUvÔøΩÔøΩ|–äVÔøΩÔøΩ)ÔøΩ'ÔøΩÔøΩÔøΩÔøΩÔøΩ7ÔÑûyÔøΩÔøΩ2ZÔøΩ<”Ö fÔøΩÔøΩ1TCEeÔøΩ_iiÔøΩ0ÔøΩ03GP!ÔøΩÔøΩÔøΩ@ÔøΩCÔøΩÔøΩÔøΩ<|(ÔøΩ?ÔøΩÔøΩÔøΩtNÔøΩÔøΩp&ÔøΩÔøΩDPÔøΩ2ÔøΩÔøΩei#ÔøΩÔøΩÔøΩZ5d""SÔøΩÔøΩÔøΩmÔøΩÊêûKJÔøΩ(ÔøΩ…îHÃªÔøΩÔøΩÔøΩÔøΩÔøΩ3ÔøΩÔøΩÔøΩ	ÔøΩ;ÔøΩIÔøΩ<8ÔøΩ%2ÔøΩÔøΩ""ﬂ£ÔøΩÔøΩÔøΩÔøΩÔøΩgcNL\ÔøΩsÔøΩ""$iB4TÔøΩÔøΩÔøΩKa;ÔøΩPj#ÔøΩÔøΩXwhÔøΩ]ÔøΩÔøΩÔøΩÔøΩlÔøΩÔøΩÔøΩÔøΩÔøΩHÔøΩÔøΩÔøΩÔøΩ/ÔøΩ‚°£ÔøΩÔøΩÔøΩ¬™0=ÔøΩkÔøΩ„âîÔøΩzÔøΩÔøΩUÔøΩ Îøà*4 ÔøΩ4ÔøΩÔøΩÔøΩÔøΩ-@ÔøΩÔøΩ,,\ÔøΩbÔøΩbzÔøΩPL(mÔøΩcc#DÔøΩÓöéÔøΩ3ÔøΩPÔøΩÔøΩÔøΩe8ÔøΩ@ÔøΩLDÔøΩYBÔøΩÔøΩ.0ÔøΩÔøΩÔøΩÔøΩÔøΩp`ÔøΩÔøΩÔøΩZ8ÔøΩWZ_ÔøΩÔøΩ`ÔøΩ?ÔøΩ'e+cÔøΩÔøΩ6 eÔøΩÔøΩÔøΩnÔøΩ9ÔøΩsJÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ\ohÔøΩEÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩH	>sÔøΩJÔøΩ3 ÔøΩÔøΩÔøΩ1nmÔøΩÔøΩHÔøΩbÔøΩ‹äÔøΩÀÄ%ÔøΩbQ‘ùÔøΩ;`bÔøΩ‹Ö(WxÔøΩÔøΩÔøΩÔøΩÔøΩ|ÔøΩÔøΩzoÔøΩÔøΩzÔøΩÔøΩÔøΩÀ£ÔøΩÔøΩ“†ZqPÔøΩB""ÔøΩ#ÔøΩÔøΩZDÕë6ÔøΩÔøΩ,ÔøΩ8ÔøΩÔøΩÔøΩ=m$-9 8ÔøΩÔøΩzÔøΩ≈òÔøΩÔøΩÔøΩD!oÔøΩÔøΩBÔøΩYÔøΩÔøΩÔøΩ(ÔøΩjkunÔøΩ!∆ñÔøΩÔøΩzÔøΩÔøΩIwzÔøΩ»úÔøΩÔøΩÔøΩÔøΩÔøΩIÔøΩYÔøΩN5ÔøΩv>dfÔøΩÔøΩÔøΩC!ÔøΩÔøΩÔøΩÔøΩÔøΩdÔøΩtÔøΩÔøΩLivÔøΩnÔøΩsÔøΩs	ÔøΩCbÔøΩXÔøΩÔøΩÔøΩÔøΩÔøΩ\ÔøΩX3eÔøΩÔøΩÔøΩÔøΩ%ÔøΩÔøΩ>!:f1≈¢@ÔøΩÔøΩÔøΩ>IÔøΩÔøΩÔøΩÔøΩSÔøΩÔøΩÔøΩÔøΩ$!ÔøΩÔøΩÔøΩ ñNÔøΩCÔøΩMnÔøΩU\FBÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩi8'Kg◊≠ÔøΩLÔøΩÔøΩO+ÔøΩx—àÔøΩÔøΩ~DÔøΩÔøΩ√ûKÔøΩÔøΩ@KcÔøΩ\ÔøΩÔøΩ<ÔøΩÔøΩÔøΩÔøΩÔøΩ*cÔøΩIÔøΩ“¶<84vb MD.0#ÔøΩÔøΩ5 ÔøΩÔøΩfÔøΩ ÔøΩÔøΩÔøΩ]?ÔøΩÔøΩÔøΩ'ÔøΩ\ÔøΩlÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ$@ÔøΩ1ÔøΩxÔøΩr}(ÔøΩÔøΩÔøΩD8‹∞WnÔøΩÔøΩuÔøΩÔøΩ}wÔøΩ}ÔøΩ@ÔøΩ<ÔøΩ lv,ÔøΩg0KÔøΩrOÔøΩÔøΩS'ÔøΩk+0oÔøΩMÔøΩsÔøΩÔøΩÔøΩ ÔøΩ5ÔøΩ\ZÔøΩLÔøΩ) L3oÔøΩYÔøΩPE['!0ÔøΩwÔøΩÔøΩÔøΩ8d3 û=0ÔøΩ]ÔøΩ,÷¶zI*ÔøΩmÔøΩÔøΩ ÔøΩÔøΩ =ÔøΩÔøΩ*ÔøΩdBÔøΩÔøΩPEÔøΩ=ÔøΩÔøΩ )TÔøΩMÔøΩÔøΩÔøΩÔøΩ<ÔøΩÔøΩÔøΩ|ÔøΩ.ÔøΩÔøΩÔøΩÔøΩBaÔøΩH√£'ÔøΩ?vÔøΩÔøΩ:(ÔøΩÔøΩ‚µπÔøΩÔøΩ‹≤ÔøΩ:ÔøΩÔøΩÔøΩÔøΩx ÔøΩ5ÔøΩÔøΩÔøΩmÔøΩÔøΩÔøΩ}LÔøΩ∆ãNeÔøΩ1BÔøΩÔøΩbÔøΩÔøΩyEÔøΩÔøΩÔøΩL&}ÔøΩq%ÔøΩÔøΩÔøΩ6ÔøΩ,t8ÔøΩÔøΩCM}ÔøΩÔøΩqÔøΩÔøΩ0ÔøΩ!ÔøΩ]ÔøΩ=ÔøΩ\ÔøΩ4cÔøΩ2ÔøΩÔøΩRcÔøΩÔøΩÔøΩW .ÔøΩTÔøΩ}ÔøΩÔøΩk$u[,{ÔøΩ9ÔøΩÔøΩ > ÔøΩÔøΩÔøΩMÔøΩsÔøΩÔøΩÔøΩÔøΩ3‹ÇÔøΩÔøΩAn$ÔøΩpÔøΩvrÔøΩiÔøΩÔøΩ $uÔøΩÔøΩ_UÔøΩÔøΩjÔøΩ2ÔøΩÔøΩÔøΩ`ÔøΩEÔøΩÔøΩÔøΩ0()')ÔøΩ.;ÔøΩÔøΩq[,ÔøΩÔøΩÔøΩ‹∞tÔøΩB{√îx]2ÔøΩÔøΩÔøΩÔøΩ'J!ÔøΩÔøΩÔøΩÔøΩÔøΩÿüÔøΩ	 EÔøΩ/""_""u[ÔøΩ|ÔøΩ%y0ÔøΩYkÔøΩvÔøΩÔøΩ'sRÔøΩÔøΩ(ÈßàÔøΩÔøΩbs	ÔøΩ& ÔøΩxÔøΩÔøΩÔøΩ)ÔøΩAÔøΩÔøΩÔøΩÔøΩb]ÔøΩ3uÔøΩ g(7ÔøΩ<ÔøΩCBÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ[wÔøΩJÔøΩ9ÔøΩ.~dxÔøΩ~99ÔøΩÔøΩPwZ^ÔøΩ_VÔøΩxÔøΩ=ÔøΩ}ÔøΩÔøΩÔøΩÔøΩÔøΩ `w ÔøΩÔøΩÔøΩÔøΩL""-ÔøΩÔøΩ ÔøΩ“ùÔøΩHhÔøΩsvÔøΩmÔøΩÔøΩ_8.ÔøΩHÔøΩÔøΩÔøΩxÔøΩ+ ÔøΩcÔøΩ)OxÔøΩBÔøΩÔøΩÔøΩÔøΩÔøΩJÔøΩ""\ÔøΩKÔøΩÔøΩ9^ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩgÔøΩÔøΩÔøΩtÔøΩÔøΩÔøΩEQÔøΩ+E>ÔøΩ=ÔøΩ9TÔøΩ@ÔøΩq$t	ÔøΩ2>a\Z,ÔøΩÔøΩÔøΩÔøΩÔøΩiÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ-c#z`(ÔøΩy/7ÔøΩ)\OÔøΩÔøΩZ’ãZÔøΩCÔøΩÔøΩÔøΩÔøΩu_?ÔøΩ…û.qÔøΩÔøΩÔøΩ6ÔøΩ6ÔøΩM ÔøΩÔøΩ8ÔøΩÔøΩ‹ãÔøΩfÔøΩÔøΩÔøΩPÔøΩ~ÔøΩÔøΩÔøΩn∆¨ÿë≈µMOÔøΩÔøΩÔøΩ2)ÔøΩÔøΩNqnÔøΩ8ÔøΩs:ÔøΩ1(ÔøΩF'MÃÇ»†ÔøΩÔøΩÔøΩÔøΩÔøΩ1ÔøΩpÔøΩÔøΩ7ÔøΩÔøΩÔøΩ5$ÔøΩ9ÔøΩfÔøΩ}>4ÔøΩRÔøΩÔøΩK(&ÔøΩvÔøΩ5ÔøΩmÔøΩÔøΩ*WÔøΩÔøΩU*|ÔøΩ ±4ÔøΩt>–öÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩJdÔøΩEÔøΩ_ÔøΩ^œúVÔøΩ'/ÔøΩf(@ÔøΩ1nÔøΩÔøΩ\ÔøΩe}ÔøΩkÔøΩÔøΩÔøΩÔøΩcÔøΩ0oI^¬âÔøΩ&ÔøΩÔøΩÔøΩÔøΩUÔøΩUÔøΩÔøΩÔøΩC ÔøΩ7aB⁄èCÿú/ÔøΩ5ÔøΩW[ÔøΩÔøΩvÔøΩÔøΩ/8›òÔøΩÔøΩ;ÔøΩÔøΩVÔøΩÔøΩÔøΩÔøΩPn6ÔøΩÔøΩÔøΩ@ÔøΩÔøΩ+ÔøΩÔøΩÔøΩÔøΩ/BÔøΩﬂ™ÔøΩ„áôÔøΩ„∑©ÔøΩÔøΩÔøΩ_ÔøΩÔøΩÔøΩÔøΩ1FÔøΩ-ÔøΩ.ÔøΩÔøΩ8]ÔøΩIÔøΩuLb||ÔøΩwÔøΩÔøΩH,ÔøΩpÔøΩÔøΩkÔøΩHÔøΩÔøΩ~ÔøΩ;ÔøΩzÔøΩ!ÔøΩ'7ÔøΩÔøΩ !DÔøΩx5ÔøΩÔøΩHÔøΩZÔøΩÔøΩÔøΩ~ÔøΩÔøΩ/ÔøΩÔøΩ√ät?ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩt#ÔøΩ7ÔøΩÔøΩÔøΩVÀ°ÔøΩOÔøΩÔøΩcLÔøΩÔøΩ&ÔøΩNÔøΩ endstream endobj 10 0 obj << /Filter /FlateDecode /Length1 1375 /Length2 5977 /Length3 0 /Length 6922 >> stream xÔøΩÔøΩtTÔøΩÔøΩÔøΩ.]ÔøΩÔøΩH:( !CÔøΩÔøΩt7ÔøΩÔøΩ0ÔøΩ30›çÔøΩÔøΩ ÔøΩH*ÔøΩ“ùÔøΩtwÔøΩÔøΩÔøΩ{ÔøΩÔøΩÔøΩÔøΩuŒöÔøΩÔøΩyÔøΩÔøΩÔøΩÔøΩ|ÔøΩÔøΩeeÔøΩÔøΩ·ñ≤DX@ÔøΩp7ÔøΩÔøΩW ÔøΩÔøΩc(ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ#be’ÖÔøΩÔøΩÔøΩDÔøΩzPÔøΩ3ÔøΩ_ $ÔøΩBÔøΩdÔøΩ(4N (ÔøΩÔøΩ@ÔøΩ ÔøΩÔøΩ(HXÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ_@R vÔøΩYÔøΩx ÔøΩ8‘ôÔøΩUÔøΩËÅÑY€†ÔøΩeÔøΩÔøΩ `ÔøΩp @ÔøΩ?ÔøΩÔøΩrÔøΩ""a0ÔøΩFÔøΩ@ÔøΩ!`{ÔøΩÔøΩÔøΩ<ÔøΩÔøΩÔøΩ]ÔøΩÔøΩrÔøΩÔøΩÔøΩxÔøΩÔøΩ<ÔøΩÔøΩÔøΩ#ÔøΩe–Ü:CÔøΩÔøΩPKÔøΩÔøΩÔøΩÔøΩ`ÔøΩÔøΩxÔøΩXÔøΩ60ÔøΩ?vÔøΩÔøΩ ÔøΩÔøΩÔøΩ{ wFGÔøΩÔøΩ-ÔøΩH ÔøΩ8@GIÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ<ÔøΩÔøΩ  ÔøΩÔøΩwÔøΩÔøΩ—øÔøΩ‡øÉÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩV0{(@C^ÔøΩÔøΩz ÔøΩ-ÔøΩÔøΩÔøΩt<ÔøΩÔøΩ[ÔøΩÔøΩ;‰•¥ `ÔøΩÔøΩsÔøΩ aÔøΩ(ggÔøΩÔøΩÔøΩÔøΩÔøΩ“†ÔøΩ,ÔøΩÔøΩA88@ÔøΩ(gÔøΩ_ÔøΩÔøΩ¬êPzÔøΩÔøΩ?7kGÔøΩÔøΩÔøΩÔøΩÔøΩ`pKÔøΩ_CXÔøΩ8ÔøΩÔøΩaN.P%ŸøÔøΩÔøΩÔøΩ?6k( ÔøΩÔøΩXHH@ u@ÔøΩ!6ÔøΩ_ÔøΩu=ÔøΩÔøΩÔøΩÔøΩ_fÔøΩ>^ÔøΩGÔøΩzÔøΩÔøΩ ÔøΩÔøΩ#ÔøΩrÔøΩB(ÔøΩÔøΩÔøΩÔøΩ;ÔøΩy""ÔøΩ ÔøΩ0 `ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩmÔøΩZÔøΩ9ÔøΩ/	sÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9ÔøΩ^ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩg(ÔøΩÔøΩgÔøΩÔøΩÔøΩÔøΩÔøΩ /nÔøΩ ÔøΩÔøΩÔøΩ  ÔøΩC?ÔøΩEÔøΩ >ÔøΩLÔøΩ	ÔøΩÔøΩmÔøΩÔøΩ?ÔøΩJp+ÔøΩÔøΩnÔøΩkÔøΩW«Æ	ÔøΩÔøΩWÔøΩÔøΩRGÔøΩYÔøΩÔøΩÔøΩÔøΩ&ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩMÔøΩÔøΩ!ÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩ""ÔøΩ7$ÔøΩboÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ0{ÔøΩÔøΩ 4i]PhÔøΩ!ÔøΩ2ÔøΩÔøΩ7TÔøΩGÔøΩjPKÔøΩÔøΩÔøΩ{ÔøΩP`ÔøΩÔøΩÔøΩÔøΩh2sÔøΩxxÔøΩÔøΩaÔøΩÔøΩ0wÔøΩÔøΩ&ÔøΩÔøΩCÔøΩ?ÔøΩgÔøΩÔøΩfÔøΩC5Œ∞_ÔøΩt/ÔøΩÔøΩÔøΩÔøΩÔøΩÿ°ÔøΩÔøΩh^ÔøΩvAÔøΩÔøΩÔøΩg]98aÔøΩKg|ÔøΩB 0	ÔøΩ ÔøΩE”âOPÔøΩBÔøΩÔøΩÔøΩÔøΩÔøΩ  ÔøΩBÔøΩ ÔøΩ3ÔøΩ ÔøΩHÔøΩ_ÔøΩ ÔøΩÔøΩHÔøΩÔøΩÔøΩÔøΩÔøΩ=DÔøΩÔøΩqA""ÔøΩ*ÔøΩMtÔøΩÔøΩK uÔøΩBÔøΩ&ÔøΩÔøΩ'ÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩRÔøΩn‹´xÔøΩ/b ;ÔøΩQloÔøΩlTÔøΩSFÔøΩÔøΩÔøΩ-KÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ.tx‹õÔøΩsÔøΩ|ÔøΩ›§%=`.I1ÔøΩ!◊±,}ÔøΩÔøΩÔøΩsqÔøΩb eÔøΩDÔøΩY	ÔøΩ~ÔøΩLÔøΩÔøΩÔøΩxÔøΩÔøΩÔøΩÔøΩaÔøΩÔøΩÔøΩÔøΩÔøΩVÔøΩÔøΩ“µ‹´FÔøΩuÔøΩÔøΩÔøΩ @ÔøΩwRÔøΩ$zTÔøΩTfÔøΩ6VÔøΩ!3ÔøΩ""ÔøΩÔøΩ–Ñ4ÔøΩiÔøΩÏ¢´ÔøΩlÔøΩ +s&ÔøΩE{ÔøΩlÔøΩÔøΩ;;€ùÔøΩÔøΩÔøΩÔøΩÔøΩJ[ÔøΩPI(-ÔøΩÔøΩ2sf_|-U\ÔøΩrÔøΩ3ÔøΩÔøΩÔøΩwÔøΩwÔøΩÔøΩÔøΩiÔøΩBÔøΩÔøΩ*ÔøΩ@,1ÔøΩÔøΩÔøΩÔøΩÔøΩ>)X8fYÔøΩÔøΩÔøΩÔøΩ·ΩòÔøΩ|€èXÔøΩoKÔøΩE^ÔøΩÔøΩÔøΩÔøΩ>dÔøΩDJÔøΩ|ÔøΩ¬ûbIÔøΩ\eVÔøΩ4HÔøΩÔøΩÔøΩpÔøΩJÔøΩ\ÔøΩÔøΩÔøΩ3ÔøΩQÔøΩÔøΩÔøΩÔøΩv&ÔøΩ√ÆÔøΩEÔøΩÔøΩÔøΩÔøΩ6ÔøΩÔøΩKBRÔøΩ<ÔøΩ:YÔøΩXÔøΩÔøΩÔøΩs[<ÔøΩbÔøΩÔøΩÔøΩ#ÔøΩB Ê¨Æ89<ÔøΩUÔøΩ≈õÔøΩÔøΩkÔøΩÔøΩ}ÔøΩÔøΩÔøΩ:aPlÔøΩtÔøΩ!ÔøΩ>ÔøΩ3fÔøΩÔøΩ wÔøΩ	ZAÔøΩT«¢ÔøΩ+ÔøΩÔøΩÔøΩ‹≠ÔøΩ!ÔøΩÔøΩÔøΩÔøΩ_ÔøΩÔøΩÔøΩÔøΩÔøΩ!;ÔøΩ@ÔøΩÔøΩÔøΩ.bÔøΩv|%,eÔøΩ' ÆB ÔøΩ-T4ÔøΩÔøΩM[ÔøΩ2IiÔøΩƒôKÔøΩÔøΩÔøΩÔøΩyÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ	vÔøΩQÔøΩÔøΩÔøΩÔøΩ‹ûÔøΩOÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ«∫ÔøΩÔøΩÔøΩB>ÔøΩÔøΩ=HÔøΩIÔøΩÔøΩ &cÔøΩÔøΩ|ZÔøΩM.ÔøΩÔøΩ}ÔøΩtÔøΩ3ÔøΩMÔøΩ{ÔøΩÔøΩ`ÔøΩwÔøΩÔøΩÔøΩ…ØÔøΩO!ÔøΩÔøΩÔøΩÔøΩp!GÔøΩoÔøΩFÔøΩVÔøΩÔøΩGÔøΩ*ÔøΩÔøΩÔøΩ('i/YÔøΩ /jÔøΩÔøΩÔøΩÔøΩÔøΩ~“¶WÔøΩÔøΩ8QkG{<ÔøΩ ÔøΩ√¶ÔøΩOÔøΩ$ÔøΩ îÔøΩdÔøΩn>~ÔøΩÔøΩ""ÔøΩÔøΩ=ÔøΩÔøΩÔøΩwÔøΩÔøΩNJÔøΩ_xÔøΩ,\+ÔøΩ'ÔøΩÔøΩ6ÔøΩÔøΩÔøΩ]ÔøΩÔøΩÔøΩ5ÔøΩÔøΩÔøΩÔøΩÔøΩ?ÔøΩÔøΩÔøΩKÔøΩIÔøΩRhÔøΩÔøΩÔøΩ D{ÔøΩÔøΩOÔøΩvÔøΩÔøΩÔøΩ|ySNÔøΩÔøΩÔøΩSÔøΩoÔøΩ@ÔøΩÔøΩR4ÿ≥HÔøΩ6ÔøΩ}rÔøΩÔøΩÔøΩÔøΩÔøΩy[ÔøΩÔøΩIÔøΩÔøΩ>ÔøΩ…≠ÔøΩL2ÔøΩ8nÔøΩP~QL!11`p{JÔøΩÔøΩÃãÔøΩœ¢ÔøΩ48U€≤ÔøΩSyÔøΩÔøΩÔøΩÔøΩ–éÔøΩulÔøΩYtÔøΩ√¢=nÔøΩDÔøΩ9uÔøΩ1ÔøΩtÔøΩÔøΩÔøΩ.ÔøΩÔøΩÔøΩUlÔøΩR-Fﬁòz/ÔøΩ$ÔøΩÔøΩ7Y_1ÔøΩÔøΩFWÔøΩÔøΩ ÔøΩÔøΩRﬂãÔøΩÔøΩ[ÔøΩ]#ÔøΩAÔøΩÔøΩÔøΩ%ÔøΩ«ç3ÔøΩ=ÔøΩVÔøΩÔøΩ ÔøΩ{ÔøΩÔøΩÔøΩ0|jA!pÔøΩﬁÄ#ÔøΩ 2ÔøΩÔøΩ#ÔøΩÔøΩÔøΩp»òoÔøΩ3ÔøΩ;[ÔøΩ""ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩTÔøΩÔøΩÔøΩÔøΩuÔøΩ ™ÔøΩ TÔøΩ)Ôâé*ÔøΩÔøΩÔøΩMÔøΩÔøΩÔøΩMÔøΩŒãÔøΩ›¨ÔøΩÎ∏®3ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩÔøΩMÔøΩ;ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩm2%nÔøΩ:ÔøΩqÔøΩÔøΩ(7ÔøΩÔøΩQ0ÔøΩVÔøΩÔøΩ/|b(Z»¨ÔøΩÔøΩÔøΩ 	}ÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ((ÔøΩYÔøΩQ[ÔøΩqÔøΩÔøΩÔøΩÔøΩZ*ÔøΩÔøΩQÔøΩÔøΩÔøΩÔøΩE ñBÔøΩFshÔøΩÔøΩFÔøΩ'uSÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ.ÔøΩÔøΩ0ÔøΩ]\ÔøΩÔøΩOÔøΩxÔøΩƒóÔøΩ1ÔøΩV?ÔøΩvPÔøΩ ÔøΩ^?SFœ¶ÔøΩEÔøΩyÔøΩaÔøΩS¬¢ÔøΩL8ÔøΩ+slÔøΩÔøΩs|ÔøΩÔøΩÔøΩ [b«íÔøΩM^ÔøΩÔøΩÔøΩ(ÔøΩjÔøΩÔøΩÔøΩ‹ÆÔøΩ6ÔøΩkÔøΩjÔøΩB%rÔøΩÔøΩdqÔøΩ'ÔøΩÔøΩlÔøΩÔøΩsgÔøΩ>ÔøΩÔøΩxÔøΩÔøΩpÔøΩÔøΩƒöFÔøΩ:ÔøΩJQÔøΩRÔøΩpÔøΩÔøΩÔøΩ9¬º< ÔøΩTÔøΩﬁùÔøΩÔøΩYÔøΩ8ÔøΩÔøΩ>ÔøΩ!mÔøΩÔøΩÔøΩÔøΩ∆õÔøΩÔøΩÔøΩÔøΩÔøΩYjÔøΩÔøΩ,ÔøΩÔøΩ6'ÔøΩÔøΩ=ÔøΩÔøΩÔøΩ`JÔøΩDKÔøΩu"" 6+‘©ÔøΩ'ÔøΩ83ÔøΩÔøΩÔøΩ@ÔøΩNÔøΩÔøΩÔøΩb wÔøΩÔøΩ|ÔøΩ>KÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ€Ø>ZÔøΩÔøΩDÔøΩ""ÔøΩÔøΩÔøΩÔøΩJOÔøΩhy~iÔøΩz""|ÔøΩÔøΩÔøΩa0HÔøΩÔøΩÔøΩÔøΩBÔøΩEÔøΩ?T qÔøΩ~zÔøΩÔøΩÔøΩ|'ÔøΩa	tÔøΩYÔøΩ ÔøΩkQÔøΩÔøΩ<ÔøΩ/5‹§ÔøΩÔøΩÔøΩI\ÔøΩÔøΩ ÔøΩÔøΩf1V~ÔøΩÔøΩoÔøΩÔøΩÔøΩFZUÔøΩ<ÔøΩÔøΩÔøΩÔøΩ}:|ÔøΩÔøΩ'9ÔøΩ;ÔøΩÔøΩÔøΩÔøΩ`ÔøΩfÿ•ÔøΩsÔøΩÔøΩÔøΩNi`ÔøΩ&ÔøΩu=CÔøΩ?u:;ÔøΩKÔøΩÔøΩPYÔøΩUÔøΩ cÔøΩÔøΩÔøΩGÔøΩeÔøΩÔøΩVÔøΩ#wÔøΩ:ÔøΩÔøΩAÔøΩÔøΩÔøΩQ*ÔøΩÔøΩÔøΩ!ÔøΩ¬öqÔøΩÔøΩÔøΩÔøΩÔøΩaÔøΩ1&ÔøΩÔøΩXiiÔøΩlÔøΩebZÔøΩwÔøΩÔøΩ|ÔøΩ◊üÔøΩw;+?’èÃûÔøΩÔøΩÔøΩÔøΩ7’†N (!{ÔøΩznIÔøΩÁí™.ÔøΩ#ÔøΩÔøΩÔøΩÔøΩÔøΩ[ÔøΩZÔøΩ@ÔøΩuÔøΩ`ÔøΩÔøΩsCÔøΩÔøΩÔøΩ%ÔøΩ[ÔøΩx;ÔøΩV9ÔøΩ8ÔøΩRÔøΩÔøΩOÔøΩÔøΩWÔøΩXÔøΩÔøΩvÔøΩÔøΩÀíBÔøΩÔøΩDÔøΩÔøΩÔøΩ/7-ÔøΩ~ÔøΩiÔøΩqo>ÔøΩ}'ÔøΩbÔøΩJÔøΩxhÔøΩ]ÔøΩmxÔøΩeÔøΩ œå3ÔøΩÔøΩbÔøΩÔøΩÔøΩ ÔøΩ‘≠D\ÔøΩÔøΩIÔøΩÔøΩÔøΩtÔøΩdG?iu,	Áê¶ÔøΩÔøΩÔøΩaKRmcÔøΩÔøΩ]ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩ^ÔøΩÔøΩ,\,/i7ÔøΩÔøΩBTÔøΩ#‘ã!ÔøΩÔøΩB_ÔøΩÔøΩ HVÔøΩ{ÔøΩÔøΩ:|ÔøΩ«µ(ÔøΩ ÔøΩÔøΩÔøΩﬂâÔøΩ(.juÔøΩÔøΩBWÔøΩÔøΩdÔøΩÔøΩ4""T\ÔøΩ·û£ÔøΩ=ÔøΩVÔøΩ ÔøΩ‘¶ÔøΩ/ÔøΩIuÔøΩÔøΩ√´ÔøΩ9ÔøΩÔøΩÔøΩÔøΩUÔøΩÔøΩ}rSÔøΩÔøΩW,XÔøΩNﬁ¥U\L&ÔøΩÔøΩmÔøΩÔøΩÔøΩG+ÔøΩÔøΩ.g ÔøΩ[œæÔøΩÔøΩÔøΩÔøΩÊ≠Ü›ÆÔøΩÔøΩczÔøΩÔøΩ{fÔøΩÔøΩÔøΩ0EÔøΩ2qWÔøΩÔøΩÔøΩ5IÔøΩkÔøΩÔøΩÔøΩ~ÔøΩÔøΩB<ÔøΩV4ÔøΩÔøΩJÔøΩÔøΩ'ÔøΩÔøΩlLbÔøΩ6ÔøΩ ÔøΩÔøΩw;]ÔøΩ‘Ä	ÔøΩÔøΩÔøΩ3ÔøΩ<ÔøΩÔøΩÔøΩ.d2BÔøΩÔøΩÔøΩuÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ0qÔøΩ?—ñÔøΩ4-ÔøΩÔøΩÔøΩÔøΩ\ÔøΩ<ÔøΩ4ÔøΩÔøΩVgÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩJÔøΩPÔøΩÔøΩ«¶vÔøΩÔøΩÔøΩÔøΩÔøΩeÔøΩ ÔøΩÔøΩ) ÔøΩÔøΩÔøΩÔøΩbRuÔøΩÔøΩJEÔøΩsÔøΩÔøΩÔøΩÀÅoMÔøΩÔøΩ""ÔøΩÔøΩ3JeÔøΩ^ÔøΩ='ÔøΩ.6ÔøΩ	ÔøΩÔøΩÁÉí1ÔøΩuoÔøΩÔøΩo◊º`ÔøΩbÔøΩÔøΩÔøΩÔøΩ?ÔøΩ<ÔøΩÔøΩÔøΩÔøΩ5ÔøΩdYÔøΩ>ÔøΩS2ÔøΩ..ÔøΩ7ÔøΩAÔøΩlÔøΩ.ÔøΩÔøΩ-IÔøΩK–É ÔøΩ:jGQÔøΩÔøΩÔøΩÔøΩmÔøΩ%ÔøΩS‘ÆÔøΩÔøΩÔøΩÔøΩ j!	+}ÔøΩÔøΩ ÔøΩÔøΩ`fÔøΩÔøΩgÔøΩÔøΩLÔøΩÔøΩÔøΩÔøΩ{GBÔøΩﬁ¶ÔøΩS#ÔøΩ@ÔøΩÔøΩÔøΩ÷≠	ÔøΩS3UÔøΩw209IÔøΩÔøΩÔøΩ¬§ÔøΩÔøΩÔøΩxÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩbÔøΩÔøΩÔøΩÔøΩzÔøΩÔøΩÔøΩ…ø·çÅÔøΩiÔøΩÔøΩpeÔøΩÔøΩcjÔøΩ`s6ÔøΩÔøΩ$TzÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9œ∑ÔøΩÔøΩÁ®æM=ÔøΩ^ÔøΩÔøΩÔøΩ$ÔøΩ)PÔøΩÔøΩÔøΩtÔøΩÔøΩÔøΩÔøΩBÔøΩ:ÔøΩÔøΩÔøΩÔøΩÔøΩHÔøΩ\ÔøΩz…©NÔøΩUÔøΩ)vdÔøΩÔøΩ ÔøΩWÔøΩÔøΩw{ÔøΩÔøΩÔøΩvÊΩ¶7ÔøΩÔøΩÔøΩ5HÔøΩqÔøΩÔøΩÔøΩÔøΩo""ÔøΩ4ÔøΩEÔøΩÔøΩÔøΩ=ÔøΩ$JÔøΩÔøΩÔøΩqgÔøΩÔøΩ	ÔøΩÔøΩ0ÔøΩÔøΩ5ÔøΩJ_FÔøΩÔøΩ""ÔøΩGÔøΩÔøΩÔøΩÔøΩ}+dÔøΩÔøΩfÔøΩ+ÔøΩ6ÔøΩwYÔøΩÔøΩjÔøΩÔøΩbjÔøΩÔøΩaÔøΩe.ÔøΩÔøΩ.ÔøΩÔøΩVÔøΩ yÔøΩÔøΩpÔøΩ6ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩJ@cRsWËÇáÔøΩÔøΩÔøΩÔøΩÔøΩ=…Å:pÔøΩÔøΩÔøΩ&ÔøΩÔøΩ6pÔøΩÔøΩÔøΩ-ÔøΩNWÔøΩfÔøΩÔøΩ’îÔøΩ1#ÔøΩ◊¥ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9kÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩCÔøΩFﬂ∫ÔøΩ⁄Ç%ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ(ÔøΩP(ÔøΩqkKqj>ÔøΩevizqPÔøΩÔøΩÔøΩ;ÔøΩ6ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩYHrSlÔøΩÔøΩÔøΩyÔøΩÔøΩÔøΩÔøΩ*ÔøΩsÔøΩ>9bÔøΩQUqÔøΩ=YÔøΩ5ÔøΩÔøΩSÔøΩÔøΩƒäÔøΩÔøΩÔøΩ2ÔøΩ:ÔøΩW<ÔøΩÔøΩÔøΩ6ÔøΩ∆ÖÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩx]ÔøΩÔøΩÔøΩÔøΩÎ™ôÔøΩ~ÔøΩMupDs’ãz_ÔøΩ|gHBTÔøΩ;ÔøΩxaÔøΩ |]ÔøΩÔøΩu2ÔøΩ_vÔøΩÔøΩ7'=ÔøΩÔøΩm^ÔøΩ rÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩsÔøΩ}bÔøΩF&«®ÔøΩÔøΩ+ÔøΩ8ÔøΩ/,ÔøΩ(+ÔøΩÔøΩ""ÔøΩLÔøΩHÔøΩ'ÔøΩIW0ÔøΩÔøΩ44ÔøΩq$ÔøΩuÔøΩ+`ÔøΩbÔøΩÔøΩpÔøΩÔøΩÔøΩÔøΩ@ ÔøΩlÔøΩmÔøΩÔøΩÔøΩ}%ÔøΩÔøΩÔøΩoÔøΩ	ÔøΩ/ÔøΩÔøΩ5ÔøΩÔøΩYÔøΩcÔøΩB ÔøΩtÔøΩ ÔøΩÔøΩÔøΩgÔøΩab4ÔøΩÔøΩÔøΩÔøΩÔøΩ\6,3ÔøΩ ÔøΩÔøΩDÔøΩtÔøΩ ÔøΩ*b[ÔøΩÔøΩÔøΩAV-ÔøΩHÔøΩÔøΩfÔøΩÔøΩÔøΩsÔøΩ&ÔøΩÔøΩ“≤` CNÔøΩÔøΩÔøΩœùPÔøΩAQÔøΩO(A[)ÔøΩÔøΩ<ÔøΩÔøΩgljÔøΩp,ÔøΩXSÔøΩÔøΩ	xPÔøΩpDtcÔøΩOÔøΩÔøΩ;ÔøΩL‘ûfi!wÔøΩH~ÔøΩÔøΩÔøΩÔøΩJ€Ç*}ÔøΩÔøΩÔøΩÔøΩqwÔøΩ:M|TSS/<\ÔøΩÔøΩÔøΩIÔøΩ<Í£∑÷ØZÔøΩPÔøΩcÔøΩ&=ÔøΩÔøΩÔøΩfÔøΩY{ÔøΩÔøΩqcÔøΩ;ÔøΩÔøΩ|ÔøΩ-ÔøΩ(ÔøΩÔøΩÔøΩ2@[[RXSÔøΩ<ÔøΩaUÔøΩ*ÔøΩ6n$ÔøΩ⁄ÖP`ÔøΩÔøΩIÔøΩ1OÔøΩÔøΩÔøΩAUcÔøΩ8ÔøΩ-KÔøΩiÔøΩanÔøΩÔøΩ?ÔøΩbFÔøΩtÔøΩNÔøΩWÔøΩp3ÔøΩ&HKÔøΩvÔøΩ|ÔøΩÔøΩNfQz/ÔøΩ&ÔøΩﬁßÔøΩÔøΩ%ÔøΩÔøΩÔøΩRÔøΩ8RÔøΩ‚úºÔøΩ^ÔøΩY% ÔøΩo,:ÔøΩ[ÔøΩÔøΩtÔøΩ 	_JÔøΩ!ÔøΩÓπ§ÔøΩÔøΩÔøΩ_M1ÔøΩÔøΩÔøΩÔøΩA8ÔøΩÔøΩÔøΩsÔøΩÀ¶ÔøΩÔøΩÔøΩ◊Ö9ÔøΩÔøΩÔøΩÔøΩÔøΩ“ÇEÔøΩuXtÔøΩÔøΩÔøΩÔøΩÔøΩ6ÔøΩÔøΩmÔøΩÔøΩ1ÔøΩ4_ÔøΩhÔøΩyÔøΩ6ÔøΩÔøΩ$ÔøΩÔøΩuÔøΩÔøΩw!ÔøΩ^lÔøΩÔøΩ⁄øÔøΩdÔøΩ`DÔøΩ~ÔøΩÔøΩ óL ÔøΩÔøΩmÃÄiÔøΩ º#ÔøΩKn}ÔøΩÔøΩÔøΩ	ÔøΩÔøΩÔøΩÔøΩ+=UÔøΩ}\ÔøΩÔøΩÔøΩjÔøΩ<ÔøΩÔøΩBOÔøΩg1VÔøΩÔøΩÔøΩÔøΩ-ÔøΩcÔøΩÔøΩÔøΩÔøΩÔøΩ%:[ nuÔøΩÔøΩ\LÔøΩ yÔøΩÔøΩÔøΩœâM;ÔøΩÔøΩÔøΩ~*ÔøΩ?ÔøΩsÔøΩLÔøΩÔøΩVxÔøΩwOIÔøΩs ÔøΩt ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩIÔøΩÔøΩ~hÔøΩÔøΩG2OÔøΩÔøΩvÔøΩÔøΩJÔøΩO?#SUÔøΩÔøΩÔøΩj&;ÔøΩGnyÔøΩ$0ÔøΩÔøΩÔøΩÔøΩO>KÔøΩCÔøΩ3O4ÔøΩ-ÔøΩÔøΩÔøΩÔøΩ6ÔøΩrÔøΩÔøΩÔøΩG'lÔøΩ*ÔøΩ…ØÔøΩÔøΩkPÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩnÔøΩWÔøΩÔøΩcC2ÔøΩÔøΩ+Œ¢ÔøΩ>ÔøΩ>ÔøΩÔøΩÔøΩÔøΩ9<ÔøΩx/uﬂãÔøΩS`ÔøΩÔøΩÔøΩwÔøΩ ÔøΩ‹±ÔøΩÔøΩ>zÔøΩQS«úÔøΩUFÔøΩiÔøΩÔøΩFÔøΩVÔøΩAjÔøΩ6ÔøΩÔøΩ2ÔøΩÔøΩVMxÔøΩ@O@ÔøΩÔøΩ$ÔøΩWÔøΩÔøΩÔøΩxÔøΩ6ÔøΩÔøΩÔøΩeÔøΩ?LÔøΩÔøΩ›Æ ÔøΩÔøΩ?eRzÔøΩ=ÔøΩhZÃ£ÔøΩÔøΩ~3,ÔøΩ\""ÔøΩÔøΩf ‡∑ßrÔøΩÔøΩÔøΩÔøΩ;–¶ÔøΩJÔøΩvÔøΩÔøΩk≈ú.ÔøΩVÔøΩÔøΩÃâÔøΩÔøΩ ÔøΩÔøΩG`ÔøΩ#?TÔøΩÔøΩ.ÔøΩÔøΩÔøΩvÔøΩjÔøΩÔøΩÔøΩÔøΩgÔøΩÔøΩcÔøΩÔøΩÔøΩ!ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ7DÔøΩ&3ÔøΩÔøΩÔøΩTÔøΩÔøΩL4ÔøΩÔøΩZ#ÔøΩ≈ª KÔøΩkNW:r3C{ÔøΩ`""ÔøΩÔøΩ_cÔøΩPjYÔøΩÔøΩ}ÔøΩ◊öÔøΩÔøΩ}ÔøΩÔøΩC–ô0`y–ÆwÔøΩÔøΩ,ÔøΩ2ÔøΩM~ÔøΩÔøΩ^,ÔøΩÔøΩÔøΩÔøΩÔøΩ3ÔøΩÔøΩÔøΩ^ÔøΩA4'ÔøΩÔøΩ]|ÔøΩ+hF^dÔøΩÔøΩ2ÔøΩrÔøΩU\ÔøΩÔøΩÔøΩ+ÔøΩŸ∏` ÔøΩ9ÔøΩpÔøΩb`psÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩXÔøΩKÔøΩ[FbÔøΩÔøΩÔøΩ$&ÔøΩÔøΩÔøΩÔøΩEfÔøΩtIÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ:ÔøΩIx0lÔøΩJÔøΩ&}LpÔøΩÔøΩÔøΩ29ÔøΩÔøΩÔøΩÔøΩÔøΩ+ÔøΩ[wU0[1ÔøΩ◊∏€∏ÔøΩ!ÔøΩYÔøΩÔøΩ  ÔøΩÔøΩ9ÔøΩÔøΩÔøΩ7TÔøΩÔøΩ‹æÔøΩÔøΩÔøΩÔøΩD$ÔøΩF ÔøΩÔøΩÔøΩZlPkÔøΩ[ÔøΩ`ÔøΩÔøΩÔøΩ'AÔøΩaÔøΩ`_ÔøΩÔøΩÔøΩÔøΩ?ÔøΩÔøΩt)HftT]]=ÔøΩÔøΩÔøΩlŸ∞ÔøΩN.ÔøΩ[ÔøΩÔøΩÔøΩpÔøΩÔøΩeÔøΩi}ÔøΩÔøΩ`“¶ÔøΩ\ÔøΩ?ÓñµÔøΩ1I#ÔøΩÔøΩÔøΩÔøΩRÔøΩxGÔøΩÔøΩÔøΩ@0ÔøΩÔøΩÔøΩÔøΩwj^ÔøΩÔøΩÔøΩÔøΩEV<ƒêÔøΩÔøΩhÔøΩÔøΩ	/]ÔøΩÁåîÔøΩ ÔøΩÔøΩÔøΩÔøΩNÔøΩ>ÔøΩ‘ÉlÀ±ÔøΩ ÔøΩSÔøΩ\ÔøΩh[CÔøΩÔøΩÔøΩAÔøΩ6ÔøΩÔøΩÔøΩ!ÔøΩÔøΩfÔøΩ9KÔøΩÔøΩPÔøΩÔøΩHÔøΩÔøΩ?ÔøΩÔøΩQk(a≈ìtÔøΩEÔøΩNÔøΩk)ÔøΩÔøΩÔøΩÔøΩ=ÔøΩwÔøΩ>Ô©∏Hc5KmÔøΩxrÔøΩÔøΩ ÔøΩÔøΩ >“æ)ÔøΩQQÔøΩ4ÔøΩÔøΩbGÔøΩxÔøΩÔøΩÔøΩÔøΩxÔøΩÔøΩ ∏ÔøΩÔøΩ~ÔøΩÔøΩÔøΩp{ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ3 rÔøΩ6ÔøΩn yÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ[ÔøΩÔøΩÔøΩS∆™ÔøΩ\ÔøΩÔøΩ	ÔøΩÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩÔøΩÔøΩJU6yÔøΩÔøΩ;JÔøΩÔøΩUÔøΩÔøΩfÔøΩÔøΩÔøΩ7ÔøΩÔøΩÔøΩÔøΩpÔøΩÔøΩScdÔøΩÔøΩFÔøΩ…∑ÔøΩkÔøΩN<ÔøΩÔøΩÔøΩFdÔøΩEÔøΩhÔøΩÔøΩ+#ÔøΩÔøΩÔøΩ ÔøΩ|ÔøΩoÔøΩ%.ÔøΩÔøΩÔøΩg◊âouÔøΩÔøΩ>–≤9ÔøΩ'.ÔøΩÔøΩqÔøΩÔøΩœîa\PÔøΩJÔøΩb#ÔøΩÔøΩÔøΩÔøΩCÔøΩÔøΩÔøΩ\PÔøΩ«∏`:ÔøΩÔøΩ q#yVqÔøΩ◊ßÔøΩ‹ø|j =ÔøΩ5ÔøΩ4ÔøΩÔøΩÔøΩyÔøΩ ÔøΩtÔøΩÔøΩÔøΩ+tmNÔøΩÔøΩ\{+ÔøΩÔøΩ1]ÔøΩÔøΩ.›∏ÔøΩÔøΩ5ÔøΩ	ÔøΩ\«öÔøΩÔøΩquR1[ÔøΩhÔøΩÔøΩ^(ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩƒü{ÔøΩ;ÔøΩÔøΩÔøΩTÔøΩdnÔøΩÔøΩbÔøΩ9ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩy$ÔøΩ»õÔøΩOÔøΩHLÔøΩÔøΩ ÔøΩ7ÔøΩÔøΩmÔøΩ9yTÔøΩÔøΩÔøΩnÔøΩÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩÔøΩÔøΩÔøΩ(ÔøΩÔøΩÔøΩ0ÔøΩCs ÔøΩÔøΩwÔøΩDÔøΩÔøΩ∆ëÔøΩÔøΩÔøΩgŸâÔøΩtÔøΩJÔøΩ	FÔøΩeÔøΩ 9ÔøΩÔøΩH>=ÔøΩÔøΩ$ÔøΩÔøΩ|ÔøΩWo ÔøΩ\ÔøΩyÔøΩÔøΩÔøΩÔøΩeRwÔøΩÔøΩ8NÔøΩdÔøΩÔøΩÚºô∏ÔøΩ&b?ÔøΩsÔøΩÔøΩ@ÔøΩÔøΩÔøΩÔøΩMÔøΩÔøΩ!gÔøΩ ÔøΩÔøΩ# ÔøΩƒØÔøΩC1ÔøΩÔøΩLÔøΩÔøΩbcJ5aÔøΩÔøΩÔøΩtyÔøΩÔøΩÔøΩÔøΩM&ÔøΩKCÔøΩÔøΩÔøΩ5AÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ OÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ1ÔøΩÔøΩÔøΩ’µ#ÔøΩÔøΩNÔøΩ.ÔøΩÔøΩC5TÔøΩ4""3ÔøΩÔøΩ√∂eÔøΩIÔøΩ.F-ÔøΩ:«Ä0`LÔøΩÔøΩÔøΩzÔøΩF∆¥]ÔøΩÔøΩ ÔøΩqf endstream endobj 11 0 obj << /Annots [ 312 0 R ] /Contents 12 0 R /MediaBox [ 0 0 612 792 ] /Parent 176 0 R /Resources 313 0 R /Type /Page >> endobj 12 0 obj << /Filter /FlateDecode /Length 3104 >> stream xÔøΩÔøΩŸéÔøΩÔøΩÔøΩ}ÔøΩÔøΩ»ãÔøΩHÔøΩÕæx»ÉÔøΩ»∞VÔøΩMÔøΩ`ÔøΩÔøΩwÔøΩÔøΩCÔøΩCÔøΩHŒÆeÔøΩÔøΩSG7ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ:{ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩIÔøΩHUÔøΩl#eÔøΩ»åÔøΩRÔøΩÔøΩ,ÔøΩÔøΩÔøΩ&ÔøΩ9ÔøΩÔøΩÔøΩÔøΩ(EÔøΩs$4""Õ¢ÔøΩÔøΩ0LÔøΩgÔøΩ|ÔøΩL&BkMÔøΩÔøΩÔøΩ9ÔøΩ)U&ÔøΩHarÔøΩD$ÔøΩzssÔøΩÔøΩJF	ÔøΩÔøΩÔøΩ*ÔøΩÔøΩMÔøΩÔøΩÔøΩÔøΩhÔøΩÔøΩÔøΩÔøΩÔøΩ$ÔøΩÔøΩÔøΩÔøΩRÔøΩÔøΩÔøΩÔøΩqjSÔøΩÔøΩÔøΩÔøΩÔøΩ?ÔøΩÔøΩÔøΩÔøΩ0ÔøΩJÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ+ÔøΩhÔøΩÔøΩÔøΩÔøΩÔøΩ√ß""ÔøΩcOÔøΩ~IÔøΩÔøΩFGÔøΩEÔøΩXZQÔøΩÔøΩÔøΩkdÔøΩÔøΩ“ôXrAÔøΩy""ÔøΩE%BYÔøΩ‘πÔøΩ""-ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ:ÔøΩÔøΩvAÔøΩÔøΩÔøΩÔøΩ>AÔøΩtÔøΩÔøΩÔøΩÔøΩi1IDÔøΩAHÔøΩÔøΩiÔøΩ/ÔøΩÔøΩÔøΩjrÔøΩ?bÔøΩSÔøΩÔøΩÔøΩÔøΩ_d&ZÔøΩ$SÔøΩÔøΩ#ÔøΩ?*ÔøΩ\ÔøΩÔøΩ<À£TÔøΩÔøΩÔøΩÔøΩlWÔøΩEÓ∂øÔøΩÔøΩ""ÔøΩ»Ö`ÔøΩ3rÔøΩk6ÔøΩÔøΩÔøΩÔøΩJÔøΩÔøΩÔøΩ@ÔøΩRZHÔøΩe{<ÔøΩW*ÔøΩ€æÔøΩ^iÔøΩÔøΩaGÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩPÔøΩÔøΩ«õ2PVCÔøΩ1ÔøΩÔøΩ8ÔøΩIÔøΩk""ÔøΩÔøΩ5–ºzÔøΩÔøΩ ÔøΩ √í	ÔøΩÔøΩ|ÔøΩ#ÔøΩÔøΩ2ÔøΩ1ÔøΩÔøΩÔøΩoÔøΩqWÔøΩÔøΩÔøΩjÔøΩÔøΩÔøΩÔøΩÔøΩdÔøΩs0.ÔøΩÔøΩ!ÔøΩ0ÔøΩRpÔøΩ,]ÔøΩÔøΩRUÔøΩÔøΩPv*RÔøΩC5ÔøΩÔøΩÔøΩÔøΩsÔøΩÔøΩÔøΩ-hÔøΩÔøΩÔøΩÔøΩÔøΩ;ÔøΩÔøΩ|>\7TÔøΩÔøΩ ÔøΩ7ÔøΩ ÔøΩwn4UÔøΩÔøΩ4AUÔøΩÔøΩÔøΩ0ÔøΩÔøΩÔøΩ@ÔøΩ$^ÔøΩ2ÔøΩÔøΩ ÔøΩA7mÔøΩÔøΩÔøΩj >&)bdÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩvÔøΩG`hÔøΩzÔøΩÔøΩÔøΩÔøΩÔøΩC^ÕÜ),pqÔøΩÔøΩwÔøΩÔøΩwÔøΩwCÔøΩÔøΩ| ÔøΩÔøΩÔøΩ6vÔøΩÔøΩÏóÑÔøΩ‹πÔøΩÔøΩaÔøΩ[V/iÔøΩÔøΩLÔøΩmÔøΩÔøΩÔøΩÔøΩÔøΩcÔøΩqWÔøΩtÔøΩÔøΩcÔøΩÔøΩ=#\PÔøΩÔøΩÔøΩÔøΩÔøΩÕÇÔøΩÔøΩ$IÔøΩÔøΩ	rÔøΩÔøΩÔøΩ%	‹æ$ÔøΩÔøΩÔøΩ8FÔøΩGÔøΩÔøΩÔøΩ""#ÔøΩc`y2ÔøΩÔøΩBÔøΩyÔøΩDBÔøΩbf>ÔøΩMÔøΩ∆úo.eSPÔøΩdaÔøΩÔøΩ	iÔøΩcÔøΩXŸÇnÔøΩÔøΩY:ÔøΩ2- ÔøΩCÔøΩÔøΩxZÔøΩÔøΩdŸãtgUÔøΩÔøΩl‰¥§ÔøΩ/YÔøΩ8gWmÔøΩ<ÔøΩjÔøΩÔøΩÔøΩdÔøΩÔøΩÔøΩÔøΩÔøΩR%ÔøΩ4ÔøΩÔøΩJÔøΩÔøΩuÔøΩR	k8lUSÔøΩEvXMOÔøΩÔøΩaÔøΩ/5ÔøΩÔøΩÔøΩ[ÔøΩÔøΩ\)ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ,""ÔøΩMÌã¥ÔøΩ%NKJÔøΩÔøΩ%ÔøΩ{ÔøΩÔøΩ""TW/bÔøΩÔøΩ«ô>ÔøΩG/(ÔøΩ9^\ÔøΩ7ÔøΩÔøΩÔøΩÔøΩ)ÔøΩÔøΩ<ÔøΩ9_4ÔøΩr.Z)ÔøΩÔøΩ$ÔøΩPÔøΩ(ÔøΩÔøΩ&5)ÔøΩÔøΩ,ÔøΩ-ÔøΩÔøΩÔøΩÔøΩ5ÔøΩ[UÔøΩÔøΩÔøΩRÔøΩ d-cÔøΩZ*nkÔøΩÔøΩPÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ>ÔøΩÔøΩÔøΩÔøΩÔøΩF9ÔøΩ√ëÔøΩrÔøΩÔøΩÔøΩÔøΩÔøΩﬂÜ*ÔøΩ7UÔøΩÔøΩcÔøΩ%H&ÔøΩ{ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ >/ÔøΩ~U?ÔøΩuÔøΩÔøΩÔøΩ 9ÔøΩÔøΩ		ÔøΩ(ÔøΩÔøΩpÔøΩ& *ÔøΩÔøΩc_ÔøΩ:^;,o2ÔøΩ#ÔøΩÔøΩÔøΩÔøΩÔøΩdÔøΩÔøΩÔøΩÔøΩÔøΩ h⁄≠ÔøΩÔøΩ ™c–ü^)zÔøΩMÔøΩÔøΩÔøΩÔøΩOVw ÔøΩ+/dÔøΩkQÔøΩÔøΩjÔøΩJÔøΩl…å ÔøΩbÔøΩ	ÔøΩaÔøΩÔøΩ;ÔøΩK=ÔøΩÔøΩÔøΩÔøΩÔøΩmÔøΩZÔøΩrwÔøΩÔøΩ4ÔøΩrÔøΩÔøΩÔøΩL5ÔøΩÔøΩÔøΩ ÔøΩmÔøΩÔøΩ2AjDÔøΩÔøΩ$DÔøΩ€¢ÔøΩ_ÔøΩz—îLAzÔøΩUÔøΩÔøΩv_ ÔøΩÔøΩ:iÔøΩÔøΩÔøΩf\ÔøΩ7ÔøΩÔøΩÔøΩÔøΩ%ÔøΩ;WoÔøΩÔøΩÔøΩf>»¨]]S9gdJÔøΩÿïÔøΩÔøΩÔøΩÔøΩ%ÔøΩcÔøΩ9\[(ÔøΩ;<·Ö¢ÔøΩÔøΩ jzÔøΩr{lH+XÔøΩÔøΩÔøΩ1nvÔøΩe(€≤ÔøΩ’ûÔøΩÔøΩÔøΩÔøΩn—≤OÔøΩÔøΩÔøΩÔøΩpÔøΩÔøΩKuZXÔøΩOÔøΩV`'ZÔøΩÔøΩÔøΩÔøΩnÔøΩÔøΩÔøΩÔøΩS,1ÔøΩÔøΩ%	ÔøΩÔøΩxÔøΩiB~ÔøΩÔøΩ1(ÔøΩÔøΩ56'ÔøΩ]ÔøΩÔøΩ`ÔøΩPÔøΩKmÔøΩÔøΩ,ﬁ∑uÔøΩUÔøΩÔøΩO/)ÔøΩ ÔøΩ|/ÔøΩKÔøΩÔøΩÔøΩÔøΩÔøΩ.ÔøΩ%ÔøΩYÔøΩÔøΩÔøΩ?ÔøΩÔøΩÔøΩLN>ÔøΩwÔøΩÔøΩÔøΩÔøΩU]}ÔøΩU8""ÔøΩÔøΩÔøΩ(ÔøΩe~hÔøΩ15{twÔøΩÔøΩVÔøΩÔøΩXÔøΩÔøΩÔøΩÔøΩÔøΩ }ÔøΩÔøΩ!""ÔøΩÔøΩ$ÔøΩmGÔøΩÔøΩ–∞ÔøΩHÔøΩSÔøΩÔøΩA}d›π&ÔøΩÔøΩ]5kÔøΩ	ÔøΩ]ÔøΩÔøΩXqÔøΩF=ÔøΩÔøΩÔøΩ_ÔøΩÔøΩÔøΩÔøΩÔøΩjÔøΩÔøΩ>ÔøΩK]nGÔøΩÔøΩsÔøΩÔøΩ4-ÔøΩ ÔøΩ\ÔøΩÔøΩ5ÔøΩNÔøΩÔøΩÔøΩm]2ÔøΩDÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ1&ÔøΩÔøΩÔøΩAÔøΩ1ÔøΩÔøΩÔøΩÔøΩG.ÔøΩÔøΩiyÔøΩwTewÔøΩÔøΩÔøΩÔøΩ""ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ8ÔøΩmÔøΩ|ÔøΩ/ÔøΩÔøΩzÔøΩÔøΩÔøΩÔøΩA-ÔøΩÔøΩÔøΩÔøΩM/$']ÔøΩ< XÔøΩ^CÔøΩKÔøΩ€îÔøΩlÔøΩkŒåÔøΩÔøΩ”ùTÔøΩ9ÔøΩCÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩXhÔøΩ16WÔøΩÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩveÔøΩﬂó{ÔøΩBÔøΩ|ÔøΩ/Rq0ÔøΩnÔøΩ7ÔøΩ⁄êy!ÔøΩMÔøΩwÔøΩ>ÔøΩrÔøΩÔøΩÔøΩÔøΩ'i/wÔøΩÔøΩ	hÔøΩÔøΩkÔøΩ|ÔøΩx ÔøΩÔøΩ;ÔøΩÔøΩÔøΩ\ÔøΩbÔøΩÔøΩwÔøΩPÔøΩOÔøΩÔøΩÔøΩÔøΩI_ÔøΩÔøΩ!ÔøΩ0|ÔøΩ*ÔøΩÔøΩÔøΩÔøΩÔøΩ ﬁ≠3rkD`ÔøΩ_JKÔøΩoÔøΩÔøΩ1ÔøΩÔøΩS-@ÿùÔøΩcÔøΩuk?ÔøΩO/ÔøΩÔøΩyÔøΩuÔøΩQÔøΩÔøΩÔøΩ`ÔøΩÔøΩÔøΩ""lÂÖÅÔøΩ ÔøΩ%ÔøΩÔøΩx0 UÔøΩ'ƒ≥ VÔøΩÔøΩÔøΩ0ÔøΩ-GÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩqÔøΩr“µÔøΩÔøΩ{>]ÔøΩÔøΩÔøΩxÔøΩÔøΩÔøΩb^Q ÔøΩ‘∑ÔøΩ;œäÔøΩÔøΩIÔøΩÔøΩ7ÔøΩÔøΩÔøΩ49ƒ±FÔøΩ 7~)yÔøΩÔøΩzÔøΩ]{$ÔøΩSEp8ÔøΩÔøΩ ÔøΩsÔøΩ’ñ9m⁄∫vÔøΩÔøΩMdÔøΩÔøΩÔøΩÔøΩÔøΩbÔøΩÔøΩRÔøΩ3ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ%'ÔøΩhÔøΩrÔøΩKOÔøΩÔøΩ`ÔøΩ6ÔøΩÔøΩ5*:ÔøΩÔøΩ6ÔøΩÔøΩÔøΩÔøΩdqÔøΩÔøΩ32	ZB|ÔøΩÔøΩ ÔøΩ69q⁄∑ÔøΩÔøΩ$ÔøΩPÔøΩÔøΩsÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩQ-ÔøΩ>-=ÔøΩÔøΩPÔøΩgÔøΩn=ÔøΩ_(ÔøΩrC/ÔøΩ>ÔøΩÔøΩÔøΩf(s;,ÔøΩZÔøΩÔøΩKÔøΩÔøΩQÔøΩq-ÔøΩÔøΩÔøΩÔøΩÔøΩu13ÔøΩÔøΩ9ÿúÔøΩpÔøΩnÔøΩÔøΩÔøΩÔøΩÔøΩ)ÔøΩPNÔøΩ*ÔøΩÔøΩXnŸ∂ÔøΩi?ÔøΩÔøΩÈπáÔøΩ√¢ÔøΩÔøΩÂÜªJÔøΩ<ÔøΩ[yÔøΩmÔøΩÔøΩÀ†ÔøΩÔøΩI1ÔøΩ%HMnYI:y:vÔøΩÔøΩ}ÔøΩÔøΩÔøΩÔøΩZÔøΩÔøΩ≥µåo]_ÔøΩÔøΩB4ÔøΩ≈ßÔøΩOÔøΩÔøΩÔøΩÔøΩ2ÔøΩÔøΩ<zM@mÔøΩÔøΩ3sÔøΩÔøΩ\k÷ΩÔøΩÔøΩÔøΩsÔøΩÔøΩpÔøΩGÔøΩÔøΩ,ÔøΩ H!ÔøΩoÔøΩ~ÔøΩÔøΩÔøΩÃçÔøΩÔøΩbxSÔøΩ5ÔøΩÔøΩuÔøΩÔøΩ D(ÔøΩÔøΩÔøΩSÔøΩyÔøΩYÔøΩ""ÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩT~ÔøΩ@ÔøΩÔøΩNSÔøΩ[ÔøΩ=ÔøΩSÔøΩGfÔøΩÔøΩ0hÔøΩÔøΩÔøΩÔøΩ r=ÔøΩ,ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ6,ÔøΩÔøΩv!ÔøΩb~xEQO≈°ÔøΩcÔøΩnJÔøΩsss8'A)ÔøΩÔøΩyÔøΩÔøΩÔøΩÔøΩ`AÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩÔøΩC]	ÔøΩjÔøΩ;(0BÔøΩÔøΩ94kwU\ÔøΩÔøΩÔøΩÔøΩQ0%ÔøΩtÔøΩ #ÔøΩÔøΩ◊ÅÔøΩÔøΩyÔøΩr|ÔøΩÔøΩ9ÔøΩÔøΩoGÔøΩ8ÔøΩÔøΩÔøΩ5ÔøΩy|`ÔøΩÔøΩCÔøΩVÔøΩ $""@ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ|A/{,ÔøΩÔøΩo5*ÔøΩabÔøΩK9<@«îÔøΩ2ÔøΩÔøΩ‹áÔøΩÔøΩ=ƒ± ÔøΩÔøΩZF”Å»ØÔøΩ~ÔøΩDÔøΩŒùw~ÔøΩ#ÔøΩÔøΩÔøΩÔøΩ3?ÔøΩÔøΩ*ÔøΩÔøΩÔøΩÔøΩ/ÔøΩ#ÔøΩÔøΩ ÔøΩ^QÔøΩwBÔøΩ%/ÔøΩÔøΩ0.ÔøΩMœ†ÔøΩ1ÔøΩ	◊ûÔøΩqjC‘¨ÔøΩÔøΩ*+ÔøΩ1ÔøΩÔøΩÔøΩ-ÔøΩÔøΩ0ÔøΩÔøΩPVÔøΩXÔøΩEk?ÔøΩ{ÔøΩsÔøΩmPÔøΩ)cÔøΩÔøΩÔøΩÕÇwÔøΩtÔøΩÔøΩÔøΩ""ÔøΩyÔøΩHPÔøΩÔøΩÔøΩh◊Üﬂ´p aÔøΩÔøΩ3ÔøΩÔøΩÔøΩ]ÔøΩÔøΩÔøΩ/8ÔøΩÔøΩÔøΩÔøΩÔøΩT ÔøΩÔÅúÔøΩÔøΩÔøΩÔøΩPÔøΩGŸÉÔøΩÔøΩ8~ÔøΩ#mÔøΩeÔøΩaÔøΩ8,ÔøΩN28ÔøΩVÔøΩÔøΩ& PÔøΩt';ÔøΩÔøΩ;@ÔøΩÔøΩÔøΩÔøΩ$ÔøΩ}ÔøΩÔøΩÔøΩ=ÔøΩkÔøΩp‹ù/ÔøΩÔøΩÔøΩÔøΩl\ÔøΩÔøΩÔøΩe ÔøΩ]ÔøΩ3ÔøΩ$ÔøΩÔøΩŒÖÔøΩÔøΩSoÔøΩÔøΩÔøΩÈôº2YQdÔøΩ^YÔøΩÔøΩPÔøΩLÔøΩ<3ÔøΩ3ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩHÔøΩÔøΩÔøΩÔøΩ⁄ë”ìyÔøΩÔøΩ ÔøΩeÔøΩÔøΩ)ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩA@|ÔøΩÔøΩyÔøΩLÔøΩÔøΩÔøΩÔøΩÔøΩ7oﬂ≠2ÔøΩ> endobj 14 0 obj << /Filter /FlateDecode /Length 3374 >> stream xÔøΩÔøΩZ[ÔøΩÔøΩ~ÔøΩ_ÔøΩ""2ÔøΩVDÔøΩÔøΩ%EtÔøΩ,ÔøΩ>h3A6yÔøΩÿöÔøΩÔøΩÔøΩÔøΩÔøΩu&ÔøΩÔøΩs!eIÔøΩgfwS43ÔøΩÔøΩ|ÔøΩBÔøΩÔøΩÔøΩÔøΩÔøΩMÔøΩÔøΩÔøΩ<ÔøΩÔøΩÔøΩÔøΩ~%ÔøΩlÔøΩÔøΩ*ÔøΩÔøΩtuÔøΩ[ÔøΩ ÔøΩfÔøΩÔøΩ3tÔøΩ?dpZÔøΩ,0ÔøΩÔøΩ[ÔøΩÔøΩ5ÔøΩÔøΩ-VÔøΩgÔøΩÔøΩÔøΩÔøΩUÔøΩÔøΩÔøΩÔøΩEkg}ÔøΩÔøΩEÔøΩ7:ÀÇÔøΩ◊∂+ÃéÔøΩÔøΩÔøΩÔøΩ7ÔøΩLmsx’π  éÔøΩÔøΩM_ÔøΩÔøΩÔøΩnÔøΩÔøΩMÔøΩyÔøΩ?ÔøΩÔøΩcÔøΩ6BÔøΩÔøΩÔøΩ|ÔøΩCÔøΩhÔøΩcÔøΩÔøΩlÔøΩÔøΩÔøΩqÔøΩXMÔøΩ-ÔøΩÔøΩ'ÔøΩBÔøΩlÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩCÔøΩÔøΩ5uiÔøΩyÔøΩwÔøΩÔøΩ--ÔøΩÔøΩ‘æÔøΩyÔøΩÔøΩÔøΩAÔøΩwÔøΩ¬©ÔøΩÔøΩÔøΩ»ÜÔøΩÔøΩﬂ§bÔøΩ8ÔøΩÔøΩaÔøΩ'|ÔøΩ8ÔøΩÔøΩX√°tÔøΩeÔøΩÔøΩÔøΩvÔøΩÔøΩ^ÔøΩ@k<ÔøΩÔøΩFÔøΩEÔøΩÔøΩMxÔøΩÔøΩ\)ÔøΩIÔøΩYÔøΩ3ÔøΩg`ÔøΩÔøΩÔøΩ:ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩc@'ÔøΩÔøΩ“µÔøΩÔøΩ*ÔøΩÔøΩ<ÔøΩÔøΩ-vÔøΩvÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ~- qJ;ÔøΩÔøΩÔøΩ)wÔøΩÔøΩ\ÔøΩp…çÔøΩÔøΩaÔøΩoÔøΩ]ÔøΩ≈êÔøΩÔøΩÔøΩH#6GaÔøΩË©ï	ÔøΩJÔøΩE ÔøΩnsÔøΩ/ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ64ÔøΩÔøΩqsI-ÔøΩ:	L[ÔøΩJmÔøΩÔøΩÔøΩ9hÔøΩÔøΩ(; ÔøΩÔøΩeW=ÔøΩW/ÔøΩyÔøΩ!ÔøΩoÔøΩÔøΩÔøΩÔøΩNÔøΩÔøΩÔøΩ.ÔøΩWÔøΩ""dL—àÔøΩ\ÔøΩSÔøΩ#fÔøΩPfÔøΩÔøΩ5ÔøΩÔøΩ/NÔøΩV0<ÔøΩ3lÔøΩaÔøΩ#ÔøΩB?ÔøΩIÔøΩYÔøΩhÔøΩ$L2ÔøΩuÔøΩ)ÔøΩÔøΩKÔøΩ/ÔøΩÔøΩÔøΩnÔøΩ[ÔøΩÔøΩÔøΩÔøΩ	dÔøΩ&ÔøΩ0A/lEÔøΩÔøΩ–ôÔøΩÔøΩWÔøΩÔøΩSÔøΩÔøΩÔøΩcÔøΩ/ÔøΩÔøΩÔøΩRÔøΩÈ±µÔøΩÔøΩÔøΩ}MÔøΩÔøΩƒ∂ÔøΩ>ÔøΩÔøΩÔøΩPaÔøΩ-3c<KJ ÔøΩQÔøΩ?_ÔøΩ< SÔøΩÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩB-ÔøΩOÔøΩÔøΩ`ÔøΩ3ÔøΩxÔøΩ!WNÔøΩÔøΩVÔøΩÔøΩ WÔøΩÔøΩ3ÔøΩDÔøΩÔøΩÔøΩj' mÔøΩyRÔøΩÔøΩ1ÔøΩÔøΩwŸÅiRBBoÔøΩÔøΩuÔøΩÔøΩ`ÃÇP ÔøΩ$ÔøΩ$ÔøΩ:`""THPÔøΩÔøΩp–é=ÔøΩÔøΩÔøΩÔøΩÔøΩ]YÔøΩib0ƒñnoÔøΩrÔøΩ4	ÔøΩÃæ\BÔøΩc5ÔøΩÔøΩÔøΩwKFÔøΩ5ÔøΩÔøΩÔøΩÔøΩ.eÔøΩeÔøΩ á=ÔøΩÔøΩ!ÔøΩcÔøΩJBÔøΩSÔøΩ,ÔøΩRÔøΩ ÔøΩÔøΩWÔøΩÔøΩXÔøΩ9ÔøΩÔøΩÔøΩÔøΩF]ÔøΩÔøΩÔøΩ'63ÔøΩn-7vnÔøΩÔøΩ`ÔøΩ#ÔøΩAÔøΩ VÔøΩÔøΩ;CÔøΩÔøΩÔøΩÔøΩÔøΩ@vÔøΩ◊öÔøΩÔøΩ""ÔøΩÔøΩ#IÔøΩ÷∞/@kÔøΩÔøΩ_ÔøΩn/>GÔøΩe,DÔøΩÔøΩÔøΩrÔøΩ‰ÅëÔøΩÔøΩ`ÔøΩwÔøΩÔøΩekÔøΩÔøΩ+pÔøΩ*/YmÔøΩÔøΩUÔøΩÔøΩ)4ÔøΩÔøΩÔøΩm(ÔøΩ]ÔøΩ<ÔøΩÔøΩ`2ÔøΩÔøΩp\ ÔøΩcNiÔøΩÔøΩ‘ñ]GÔøΩEmÔøΩÔøΩÔøΩlÔøΩƒáQKÔøΩiÔøΩÔøΩÔøΩÔøΩF`ÔøΩ7ÔøΩ.bj-ÔøΩ %¬≠ÔøΩ]ÔøΩÔøΩ&xÔøΩ1ÔøΩÔøΩ4ÔøΩRÔøΩVÔøΩM?mÔøΩÔøΩÔøΩ’ÆÔøΩÔøΩÔøΩ9ÔøΩ&ÔøΩ1mÔøΩL[ÔøΩ)6ÔøΩÔøΩÔøΩOÔøΩ61=ÔøΩÔøΩYKÔøΩ(ÔøΩ/ÔøΩÔøΩ];ÔøΩKxÔøΩ4ÔøΩÔøΩNxÔøΩÔøΩÔøΩ!ÔøΩ@WÔøΩÔøΩWÔøΩ ÔøΩƒî≈êÔøΩ3ÔøΩÔøΩiÔøΩÔøΩw≈êgÔøΩÔøΩÔøΩÔøΩ+ÔøΩÔøΩ|9ÔøΩœë»êeÔøΩ(ÔøΩHÔøΩSÔøΩÔøΩJr @ÔøΩÔøΩÔøΩÔøΩJÔøΩÔøΩjc*ÔøΩ»†ÔøΩAÔøΩ≈πÔøΩÔøΩxh@ÔøΩ	.SÔøΩ%ÔøΩÔøΩcÔøΩÔøΩ)hJKaLBi)ÔøΩÔøΩ<M/ÔøΩOyÔøΩÔøΩÔøΩÔøΩ·Æ†ÔøΩ ÔøΩ ÔøΩÔøΩ'zÔøΩ ÔøΩgAÔøΩX4ÔøΩ*csÔøΩJ5EÔøΩ/ÔøΩ…ßTÔøΩÔøΩÔøΩÔøΩ)bÔøΩ/ÔøΩrÔøΩÔøΩ;ÔøΩÔøΩÔøΩÔøΩÔøΩQ\AÔøΩ/}ÔøΩÔøΩuÔøΩÔøΩ3ÔøΩÔøΩÔøΩ&ÔøΩtÔøΩÔøΩÔøΩÔøΩ""ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩliÔøΩÔøΩ0q_Q*	:ÔøΩ8ÔøΩÔøΩÔøΩÔøΩvÔøΩ7vhÔøΩL≈µÔøΩ?ÔøΩ)ÔøΩj>T:ÔøΩqÔøΩ-ÔøΩÔøΩÔøΩÔøΩÔøΩ}ÔøΩ\ÔøΩYfrÔøΩÔøΩ!ÔøΩEÔøΩ0@dÔøΩÔøΩ^9ÔøΩÔøΩÔøΩƒÄ-ÔøΩeÔøΩÔøΩÔøΩp#pÔøΩ1ÔøΩ∆∫@ÔøΩb$tÔøΩwÔøΩÔøΩ6MﬂπDY_SNÔøΩ:ÔøΩ.N& gPÔøΩHÔøΩÔøΩÔøΩc""8`ÔøΩSO'ÔøΩÔøΩ8ÔøΩ<-ÔøΩÔøΩÔøΩ¬ÖÔøΩ6ÔøΩiaÔøΩYHÔøΩÔøΩ.ÔøΩPÔøΩAw8=ÔøΩ9(ÔøΩÔøΩÂü∂ ÔøΩl8ZÔøΩÔøΩÔøΩ[fÔøΩl≈πXjbÔøΩ$ÔøΩ):ÔøΩUÔøΩÔøΩÔøΩIÔøΩRR.^ÔøΩLÔøΩMÔøΩÔøΩÔøΩr^ÔøΩÔøΩ2ÔøΩÔøΩÔøΩjÔøΩ ÔøΩÔøΩtÔøΩÔøΩ|>6ÔøΩÔøΩÔøΩJÔøΩkÔøΩ{ÔøΩÔøΩÔøΩtsÔøΩoÔøΩÔøΩÔøΩÕÄÔøΩDÔøΩJ_?ÔøΩÔøΩSYUÔøΩd(ÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩÿïÔøΩ{ÔøΩ~ÔøΩÔøΩÔøΩPYÔøΩ=‘ãÔøΩrUÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩIÔøΩXÔøΩTÔøΩPÔøΩÔøΩÔøΩ-HÔøΩsÔøΩ<ÔøΩÔøΩp  ÔøΩyhÔøΩÔøΩuÔøΩR%Q>ÔøΩpÔøΩÔøΩ7ÔøΩÔøΩ""M}{ÔøΩzÔøΩÔøΩm◊ìÔøΩÔøΩnIÔøΩÔøΩÔøΩ5V/TFzÔøΩÔøΩÔøΩvvÔøΩg[t>ÔøΩ>6zÔøΩcÔøΩÔøΩ&%…û-Z&ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ4{.IÔøΩÔøΩ]ÔøΩÔøΩ-jÔøΩkÔøΩ '%ƒ¨ÔøΩÔøΩÔøΩQÔøΩ/.pÔøΩ·æ∂9'],ÔøΩÔøΩÔøΩwÔøΩ{ÔøΩHI-ÔøΩÔøΩÔøΩmsÔøΩÔøΩÔøΩ4ÔøΩÔøΩ-SÔøΩ(ÔøΩÔøΩÔøΩÔøΩ`ÔøΩ ÔøΩ\-hsÔøΩ$i3ÔøΩÔøΩ@ÔøΩ+⁄å-l◊¶TJÔøΩeÔøΩÔøΩ5hÔøΩ√ûk'&W#ÔøΩ v 8wsÔøΩn2'|jH""ÔøΩh#&Z>ÔøΩ$ÔøΩ;ÔøΩÔøΩ4ÔøΩJdÔøΩŸ°ÔøΩÔøΩÔøΩRÔøΩÔøΩÔøΩÔøΩ⁄ÆiÕÉÔøΩnÔøΩÔøΩsQ|ÔøΩuc)ÔøΩÔøΩLÔøΩÔøΩÔøΩ$ÔøΩÔøΩ0ÔøΩÔøΩÔøΩNÔøΩuÔøΩmMoÔøΩÔøΩÔøΩÔøΩjQÔøΩÔøΩÔøΩÔøΩ,ÔøΩÔøΩÔøΩÔøΩÔøΩ@ÔøΩÔøΩ>0>ÔøΩÔøΩÔøΩÂÑ¨ÔøΩC[AÔøΩ%ÔøΩpÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩÔøΩP>v%ÔøΩ7.@KÔøΩÔøΩ∆•ZÔøΩ‘•	ÔøΩÔøΩ'ÔøΩEÔøΩ< cÔøΩ""T◊ùÔøΩ<UÔøΩMÔøΩÔøΩdÔøΩÔøΩPwÔøΩÔøΩÔøΩÔøΩ4YÔøΩÔøΩÔøΩ&ROÔøΩÔøΩ%ÔøΩ)hÔøΩÔøΩ7ÔøΩÔøΩWEÔøΩÔøΩÔøΩ+ÔøΩ}ÔøΩq^√îjÔøΩÔøΩ)ÔøΩÔøΩ#""ÔøΩ'ÔøΩÔøΩÔøΩÔøΩ1?IWLI<ÔøΩCÔøΩ2J]f:ÔøΩ8FÔøΩXÔøΩÔøΩoÔøΩ1ÔøΩÔøΩHÔøΩÔøΩ«ùiw\ÔøΩTÔøΩÔøΩÔøΩ^ÔøΩÔøΩÔøΩŸûTÔøΩr∆ÇÔøΩÔøΩIÔøΩÔøΩ{ÔøΩlÔøΩWÔøΩ\ÔøΩÔøΩ ÔøΩÔøΩÔøΩjI–ìÔøΩÔøΩMÔøΩÔøΩÔøΩ#>ÔøΩÔøΩÔøΩ ÔøΩÂÄâÔøΩnmÔøΩÔøΩmÔøΩ= ÔøΩÔøΩv ´¬∏÷≤ÔøΩ\ÔøΩÔøΩwÔøΩpÔøΩ dÔøΩmÔøΩÔøΩÔøΩ9ÔøΩÔøΩÔøΩi=ÔøΩÔøΩ2ÔøΩÔøΩ|¬πÔøΩÔøΩd=WÔøΩU?ÔøΩÔøΩ ÔøΩpÔøΩ|0ÔøΩFÔøΩ4u1^L8o7ÔøΩÔøΩÔøΩÔøΩÔøΩ‹ëKaÔøΩ%#ÔøΩ9ÔøΩ«≤ÔøΩV=ÔøΩ-ÔøΩÔøΩ¬òc_ÔøΩÔøΩk`7nÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩ”àÔøΩ]ODÔøΩ¬∑ÔøΩÔøΩ-ÔøΩÔøΩÔøΩÔøΩÔøΩuY{ÔøΩÔøΩÔøΩÔøΩMÔøΩxÔøΩÔøΩÔøΩ_ÔøΩÔøΩ,ÔøΩÔøΩaÔøΩqFrÔøΩÔøΩÔøΩ!jÔøΩu|PÔøΩ^ÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩ9ÔøΩ/ÔøΩ#ÔøΩÔøΩÔøΩ) ÔøΩÔøΩÔøΩÔøΩFPÔøΩ€ÅÔøΩÔøΩvÔøΩÔøΩÔøΩUÔøΩÔøΩX8	ÔøΩ7ÔøΩÔøΩÔøΩ^ÔøΩ`%ÔøΩÔøΩÔøΩÔøΩWPÔøΩ\ÔøΩL.VÔøΩÔøΩÔøΩÔøΩÔøΩTÔøΩpÔøΩ'ÔøΩ;ÔøΩLcCÕÇ€∏ÔøΩyÔøΩslÔøΩÔøΩÔøΩÔøΩOjÔøΩdÔøΩÔøΩh÷çCÔøΩAÔøΩ}ÔøΩqÔøΩ◊∂pVÔøΩÔøΩ·ëøÔøΩÔøΩÔøΩoÔøΩÔøΩÔøΩÔøΩﬂ§ÔøΩÔøΩuÔøΩÔøΩÔøΩfOTÔøΩ8ÔøΩÔøΩzÔøΩwÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9D+AÔøΩÔøΩÔøΩÔøΩ ÔøΩZm7oÔøΩV;ÔøΩÔøΩÔøΩ eÔøΩÔøΩ:ÔøΩÔøΩŒ®ÔøΩÔøΩÔøΩ7ÔøΩÔøΩyÔøΩoÔøΩÔøΩ\iÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩ(ÔøΩ0ÔøΩ ÔøΩMnÔøΩÔøΩXÔøΩÔøΩ1ÔøΩÔøΩÔøΩÔøΩFÔøΩÔøΩpyÔøΩÔõéÔøΩ|LÔøΩÔøΩVoÔøΩ'ÔøΩÔøΩÔøΩÔøΩÔøΩ›ÆcÔøΩÔøΩS	 ÔøΩÔøΩ2jÔøΩÔøΩ 73ÔøΩÔøΩ<TÔøΩÔøΩÔøΩÔøΩ`AÔøΩÔøΩeÔøΩ'ÔøΩÔøΩ1ﬁóÔøΩÔøΩYÔøΩÔøΩÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ[ÀúÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩRLÔøΩRguÔøΩÔøΩ)vÔøΩÔøΩÔøΩÔøΩl6ÔøΩL ÔøΩmÔøΩT%ÔøΩÔøΩ0ÔøΩoY6ÔøΩÔøΩ< zÔøΩ#ÔøΩÔøΩ#ÔøΩ'APwÔøΩÔøΩPpÔøΩÔøΩ6ÔøΩ ÔøΩWÔøΩÔøΩKÔøΩÔøΩyÔøΩnÔøΩÔøΩÔøΩu4ÔøΩÔøΩÔøΩÔøΩÔøΩ@\ÔøΩÔøΩÔøΩÔøΩ0ÔøΩ:ÔøΩÔøΩÔøΩB;ÔøΩÔøΩÔøΩJJÔøΩ<ÔøΩ)ÔøΩwTÔøΩÔøΩ%(ÔøΩÔøΩÔøΩÔøΩha[	ÔøΩÔøΩÔøΩÔøΩ,ÔøΩÔøΩ_<ÔøΩÔøΩ\ÔøΩÔøΩ(ÔøΩs7 f9LÔøΩt5ÔøΩÔøΩ1ÔøΩb8ÔøΩÔøΩ%>XÔøΩÔøΩÔøΩ+7ÔøΩÔøΩÔøΩcjÔøΩQÔøΩÔøΩÔøΩÔøΩsx^ÔøΩÔøΩ=B$ÔøΩ ÔøΩÔøΩ8ƒ•/ÔøΩ%ÔøΩ""ÔøΩN&ÔøΩ?!ÔøΩÔøΩÔøΩ|ÔøΩnÔøΩÔøΩBÔøΩ> endobj 16 0 obj << /Filter /FlateDecode /Length 3414 >> stream xÔøΩÔøΩZKÔøΩÔøΩFÔøΩÔøΩWÔøΩ,;bÔøΩ/ÔøΩmÔøΩXƒÅ'ÔøΩÔøΩÔøΩbÔøΩÔøΩsÔøΩHÔøΩaÔøΩTHjÔøΩÔøΩ_ÔøΩÔøΩjÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ~wuÔøΩÔøΩU_5ÔøΩÔøΩÔøΩ’∑?ÔøΩÔøΩÔøΩ\ÁãªÔøΩÔøΩÔøΩ:ÔøΩÔøΩ.ÔøΩ¬¶ÔøΩ)wÔøΩÔøΩo…øÔøΩfÔøΩtÔøΩÀ§ÔøΩÔøΩ,ÔøΩ1…ìÔøΩÔøΩM’ÆÔøΩÔøΩÔøΩÔøΩÔøΩ]ÔøΩFhÔøΩÔøΩ5w7ÔøΩÔøΩÔøΩÔøΩÔøΩ-NÔøΩÔøΩÔøΩ⁄Å;ÔøΩÕáLÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩMiÔøΩÔøΩfiÔøΩJ~ÔøΩ=ÔøΩÔøΩ^ÔøΩÔøΩÔøΩÔøΩÔøΩ{ÔøΩÔøΩ|ÔøΩÔøΩ*^hÔøΩvxÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩRY:ÔøΩRÔøΩÔøΩ;ÔøΩgÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩEÔøΩÔøΩ¬ît\iÔøΩ\ÔøΩ<ÔøΩÔøΩX'EÔøΩmÔøΩXFÔøΩ6ÔøΩÔøΩpfÔøΩ-ÔøΩÔøΩÔøΩYÔøΩd<‹®ÔøΩoÔøΩÔøΩÔøΩ∆πÔøΩÔøΩjÔøΩÔøΩÔøΩ'JÔøΩÔøΩVBÔøΩÔøΩÔøΩzÔøΩuÔøΩÔøΩ◊≠pÔøΩa*cÔøΩpXÔøΩÔøΩAÔøΩÔøΩ’∏ÔøΩ{.ÔøΩ` )ÔøΩ2ÔøΩjÔøΩÔøΩÔøΩFÔøΩÔøΩ<ÔøΩÔøΩ4ÔøΩ	LÔøΩÔøΩÔøΩÔøΩPXÔøΩFÔøΩ]2lÔøΩÔøΩÔøΩYÔøΩp÷ë+2ÔøΩ*ÔøΩHÔøΩgÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩŒ∏>vÔøΩÔøΩ&ÔøΩc}S…¥ÔøΩÔøΩkAa]ÔøΩÔøΩÔøΩ.ÔøΩ ÔøΩÔøΩ54ÔøΩ=ÔøΩaÔøΩ1M&u–ÑÔøΩÔøΩg:ÔøΩ ÔøΩ0ÔøΩhnHÔøΩÔøΩ9ÔøΩv!ÔøΩÔøΩhXÔøΩesÔøΩÔøΩn#ÔøΩ ^ÔøΩ?`ÔøΩÔøΩÔøΩÔøΩ9ÔøΩHIÔøΩK@ÔøΩÔøΩ  ÔøΩÔøΩÔøΩÔøΩÔøΩx~gÔøΩ]ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩpÔøΩÔøΩÔøΩÔøΩÔøΩ&ÔøΩÔøΩaÔøΩ,2ÔøΩpÔøΩÔøΩÔøΩAÔøΩR)ÔøΩÁáõÔøΩ&}ÔøΩÔøΩÔøΩÔøΩ-ZÔøΩÔøΩBÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩFÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩEŒÉÔøΩÔøΩm@√æjdÔøΩUÔøΩZÔøΩÔøΩ]ÔøΩÔøΩÔøΩ cU@ÔøΩÔøΩ=5›∂kÔøΩÔøΩ=ÔøΩQÔøΩÔøΩb3ÔøΩUzi/ÔøΩ[ xÔøΩ-OÔøΩÔøΩ@mÔøΩ=ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ-D#7ÔøΩÔøΩ+ÔøΩaOgIÔøΩÔøΩZÔøΩÔøΩVEÒ∑Åõ>(c7ÔøΩ8|ÔøΩ3sÔøΩÔøΩAÔøΩ""ÔøΩCÔøΩÔøΩÔøΩ–áÔøΩÔøΩ+KÔøΩ7ÔøΩÔøΩ7_~~ÔøΩLÔøΩÔøΩÔøΩ/ÔøΩNÔøΩ+ÔøΩ64ÔøΩÔøΩ[ÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩQÔøΩÔøΩ5ÔøΩÔøΩÔøΩÔøΩ*ÔøΩ$#ÔøΩ/ÔøΩÔøΩ€¢`ÔøΩÔøΩÔøΩÔøΩ(+ÔøΩ`ÔøΩeXÔøΩÔøΩÕä;ÔøΩÔøΩÔøΩÔøΩ“±&≈Ü(5hÔøΩ]QtÔøΩ9ÔøΩ&ÔøΩÔøΩw KÔøΩÔøΩÔøΩgÔøΩÔøΩ«™iÔøΩÔøΩ+1jI6\ÔøΩÔøΩÔøΩX ÔøΩÔøΩ/ÔøΩÔøΩ8 ÔøΩNÔøΩ3ÔøΩBÔøΩÔøΩWÔøΩÔøΩK""7mÔøΩ5,ÔøΩÔøΩaÔøΩmÔøΩ""ÔøΩ2D< XcÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ#ÔøΩ‘§ÔøΩÔøΩbÔøΩÔøΩjÔøΩZ ÔøΩ.“≤ÔøΩ,ÔøΩI-ÔøΩIiÔøΩÔøΩÔøΩ6cSmÔøΩÔøΩUÔøΩHÔøΩÔøΩÔøΩÔøΩÔøΩf ÔøΩÔøΩ(ÔøΩ7ÿÑ(ÔøΩZ-#ÔøΩ`ÔøΩ 9ÔøΩÔøΩ25aÔøΩÔøΩlÔøΩV|ÔøΩÔøΩÔøΩ',ÔøΩ} =ÔøΩÔøΩ\QÔøΩÔøΩ.ÔøΩÔøΩ5ÔøΩÔøΩZÔøΩ ÔøΩFÔøΩkqHq.ÔøΩÔøΩ.87ÔøΩÔøΩ?7ÔøΩH ÔøΩÔøΩ ÔøΩÔøΩkÔøΩÔøΩ`\.ÔøΩÔøΩ]A8\ÔøΩ√øÔøΩÔøΩÔøΩ:ÔøΩ ÔøΩÔøΩ)&ÔøΩqÔøΩÔøΩ	ÔøΩCv!ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩUÔøΩÔøΩÔøΩ`ÔøΩÔøΩj %ÔøΩNLÔøΩÔøΩÔøΩÔøΩ@ÔøΩÔøΩqÔøΩÔøΩÔøΩFÔøΩÔøΩ%xÕÜR*ÔøΩÔøΩ1iÔøΩTÍ°áÔøΩ3ÔøΩÔøΩ,""G6D-UjÔøΩÔøΩApÔøΩÔøΩÔøΩÔøΩ⁄ßPÔøΩhÔøΩKÔøΩÔøΩÔøΩÔøΩÔøΩ<-dÔøΩÔøΩ{ÔøΩ4ÔøΩvÔøΩ)@ ÔøΩÔøΩÔøΩÔøΩzwÔøΩÔøΩW ÔøΩÔøΩ-ÔøΩBÔøΩE NjaKXÔøΩ,ÔøΩ›´ÔøΩ~ÔøΩkÔøΩ+ÔøΩ_.>ÔøΩÔøΩÔøΩÔøΩx8ÔøΩÔøΩÔøΩvÔøΩÔøΩÔøΩzÔøΩÔøΩw&ÔøΩ.ÔøΩÔøΩÔøΩraÔøΩ""ÔøΩÔøΩÔøΩI(X WpÔøΩ;BÔøΩÔøΩ6Z⁄∏ÔøΩÔøΩ|CÔøΩÔøΩÔøΩÔøΩeÍÇÜ gÔøΩÔøΩÔøΩ""◊∑ÔøΩ_ÔøΩ<ÔøΩÔøΩÔøΩÔøΩ>reÔøΩÔøΩÔøΩXGhpÔøΩÔøΩÔøΩtÔøΩp_>ÔøΩÔøΩÔøΩoÔøΩ@>sÔøΩBÔøΩkÔøΩÔøΩQhAÔøΩÔøΩ2!ÔøΩÔøΩ]ÔøΩÔøΩkVÔøΩÔøΩ	ÔøΩÔøΩuWÔøΩÔøΩÔøΩÔøΩÔøΩhwÔøΩ6ÔøΩ+_P ?ÔøΩMÔøΩÔøΩRdÔøΩ}ÔøΩ`PÔøΩ ÔøΩBÔøΩStÔøΩJTÔøΩp""ÔøΩ◊ôc ÔøΩÔøΩÔøΩÔøΩÔøΩMÔøΩ'ÔøΩÔøΩdÔøΩgL!ÔøΩ ÔøΩ ÔøΩÔøΩÔøΩÔøΩ–∞ÔøΩÔøΩ ∞!ÔøΩSÔøΩ=2ÔøΩxÔøΩ=ÔøΩP\ÔøΩÔøΩ[lÔøΩÔøΩhÔøΩjÔøΩ&ÔøΩut!8ÔøΩÔøΩ}ÔøΩÔøΩÔøΩ=ÔøΩÔøΩ5ÔøΩDÔøΩ""ÔøΩA(5ÔøΩuÔøΩHÔøΩÔøΩÔøΩKgÔøΩÔøΩsÔøΩ}ÔøΩÔøΩ	ÔøΩÔøΩnWÔøΩÔøΩÔøΩÔøΩ–µÔøΩÔøΩÔøΩÔøΩÔøΩDÔøΩÔøΩTÔøΩIÔøΩ ÔøΩ ÔøΩÔøΩ>ÔøΩMKÔøΩÔøΩÔøΩupÔøΩÔøΩ ÔøΩÔøΩÔøΩŒâ(nÔøΩZv9ÔøΩÔøΩÔøΩÔøΩ+ÔøΩÔøΩp&ÔøΩÔøΩ!ÔøΩXÔøΩ‹æÔøΩK""ÔøΩÔøΩÔøΩÔøΩ.ÔøΩ5ÔøΩÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ8ÔøΩkÔøΩKUH …Æ57KÔøΩ:+ÔøΩÔøΩÔøΩX#/jKÔøΩÔøΩÔøΩ XÔøΩRÔøΩ;E…†KÔøΩ[ÔøΩ¬ÄÔøΩÔøΩÔøΩÔøΩ""HÔøΩNÔøΩYÔøΩÔøΩÔøΩÔøΩYÔøΩ4ÔøΩÔøΩ""ÔøΩÔøΩÔøΩ.rÔøΩAX9ÔøΩÔøΩÔøΩyÔøΩ-!ÔøΩÔøΩÔøΩ$ÔøΩ  IÔøΩÔøΩ?}ÔøΩÔøΩJÔøΩÔøΩÔøΩÔøΩ∆èÔøΩÔøΩÔøΩÔøΩ÷ûfnÔøΩel>4ÔøΩ9p/ÔøΩYÔøΩp%^ÔøΩÔøΩpÔøΩ|yÔøΩI3mBÔøΩ}ÔøΩo ÔøΩÔøΩ	?ÔøΩf>ÔøΩQSÔøΩ^x*”©ÔøΩ6LÔøΩ+hÔøΩCÔøΩ ÔøΩÔøΩFÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩGÔøΩÔøΩÔøΩ""ÔøΩÔøΩ%d6J(ÔøΩÔøΩK/2XÔøΩ7ÔøΩÔøΩÔøΩR<7OM&ÔøΩÔøΩ_""ÔøΩ2 ÔøΩ0pÔøΩ2ÔøΩ/ÔøΩÔøΩÔøΩw/ÔøΩRY+sÔøΩÔøΩHÔøΩÔøΩÔøΩtFÔøΩO	iÔøΩ*ÔøΩÔøΩÔøΩ*!UÔøΩÔøΩÔøΩ\ÔøΩÔøΩ}ÔøΩl‘• ùÔøΩQsÔøΩÔøΩÔøΩ""ÔøΩÔøΩÔøΩ ! EyÔøΩÔøΩ ÔøΩŒÅ^L!ÔøΩ! ÔøΩ,W9ÔøΩÔøΩPÔøΩgN<ÔøΩÔøΩ0,ÔøΩ|PÔøΩ ÔøΩ^ wkvÔøΩÔøΩÔøΩ""I6'ÔøΩv^ M{1ÔøΩxÔøΩRÔøΩÔøΩ$ÔøΩÔøΩD~ÔøΩÔøΩFÔøΩ@SÔøΩÔøΩÔøΩ;;ÔøΩÔøΩLE)@%ÔøΩÔøΩÔøΩÔøΩÔøΩkÕ°B/ÔøΩ]ÔøΩ#ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ|yÔøΩ+ÔøΩÔøΩbÔøΩ saÔøΩi3icXbAÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩGxhÔøΩqÔøΩ_ÔøΩÔøΩÔøΩ*?>ÔøΩÔøΩ0QcÔøΩÔøΩ'ÔøΩÔøΩjÔøΩ]ÔøΩcÔøΩ-ÔøΩ9J,=ÔøΩ/ÔøΩMBÔøΩÔøΩÔøΩBÔøΩÔøΩbÔøΩ	9ÔøΩÔøΩÔøΩF\ÔøΩr]ÔøΩÔøΩÔøΩ$+ÔøΩÔøΩÔøΩAZz	ÔøΩ7ÔøΩWuÔøΩFÔøΩxÔøΩuaRÔøΩÔøΩeÔøΩÔøΩÔøΩÍñåÔøΩÔøΩÔøΩÔøΩv0ÔøΩÔøΩ/ÔøΩ% YÔøΩÔøΩ{ÔøΩY5ÔøΩÔøΩRÔøΩÔøΩÔøΩÔøΩÔøΩ`H{ÔøΩSS^s0ÔøΩd]jÔøΩÔøΩÔøΩEÔøΩÔøΩ0ÔøΩ;ÔøΩI	>ÔøΩvSIÔøΩ,eÔøΩ3(NÔøΩÔøΩ&(ÔøΩ""M!ÔøΩÔøΩÔøΩÔøΩ_bÔøΩBg*F—©ÔøΩÔøΩaÔøΩ}aÔøΩ=ÔøΩÔøΩÔøΩÔøΩ!xÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ\ÔøΩÔøΩÔøΩn1ÔøΩÔøΩfÔøΩ6ÔøΩŒ±ÔøΩ-ÔøΩm,DÔøΩÔøΩiZH ÔøΩ;J[ÔøΩX(cÔøΩ@[;DÔøΩÔøΩÔøΩÔøΩÔøΩA0w ÔøΩÔøΩ$ÔøΩ@xÔøΩÕóÔøΩ p”ñ·≠ÆGÔøΩ,OÔøΩ-ZÔøΩ4HÔøΩuxO+)ÔøΩÔøΩetÔøΩ/ÔøΩ{zÔøΩ!ÔøΩÔøΩ◊π7ÔøΩc7gY@$ ÔøΩÔøΩ{ÔøΩ7 ÔøΩÔøΩÔï¢]ÔøΩÔøΩÔøΩTÔøΩÔøΩÔøΩ!!pÔøΩ+BEÔøΩÔøΩÔøΩÔøΩeÔøΩÔøΩÔøΩXw]qÔøΩ]ÔøΩ/68NzOÔøΩ6ÔøΩÔøΩÔøΩÔøΩ$zbÔøΩ92ÔøΩZÔøΩDÔøΩÔøΩÔøΩkVÔøΩÔøΩGÔøΩ–∑NÔøΩÔøΩÔøΩcÔøΩwp>$`ÔøΩÔøΩÔøΩUÔøΩÔøΩ√ºJ:$ÔøΩXÔøΩÔøΩÔøΩÔøΩSÔøΩ“Ü-ÔøΩÔøΩÔøΩÔøΩrD<ÔøΩG_ÔøΩVÔøΩÔøΩÔøΩZÔøΩÔøΩmqÔøΩfÔøΩMÔøΩÔøΩÔøΩ1ÔøΩÔøΩÔøΩ>o""-K9ÔøΩ‡≠≤rÔøΩJÔøΩÔøΩÔøΩÔøΩ+ÔøΩ>7 *ÔøΩÔøΩÔøΩÔøΩU ÔøΩÔøΩÔøΩ7\/ÔøΩ]EÔøΩÔøΩÔøΩ!ÔøΩNK%<ÔøΩ;ÔøΩ%ÔøΩ/&ÔøΩ/ÔøΩÔøΩ&ÔøΩ)ÔøΩ√±ÔøΩÔøΩÔøΩ,ÔøΩÔøΩX@≈§ÔøΩÔøΩKÔøΩÔøΩxNkÔøΩÔøΩÔøΩÔøΩ]uDÔøΩp7zÔøΩÔøΩÔøΩÔøΩ3,(ÔøΩÀèÔøΩÔøΩL…î4ÔøΩÔøΩÔøΩ ZÔøΩ…Å2ÔøΩÔøΩÔøΩ)@ÔøΩE `"" ÔøΩP>+aÔøΩÔøΩ◊áU-ÔøΩlQ(–ªÔøΩm6ÔøΩ(ÔøΩÔøΩÔøΩ^""ŒÖdÔøΩÔøΩ&bÔøΩÔøΩÔøΩÔøΩÔøΩMÔøΩOCÔøΩÔøΩÔøΩ{ÔøΩpÔøΩÔøΩ≈êÔøΩÔøΩ8]ÔøΩhÔøΩ{ÔøΩNÔøΩ%ÔøΩrÔøΩÔøΩsÔøΩLÔøΩoÔøΩÔøΩl4QÔøΩ%ÔøΩ/ÔøΩÔøΩÔøΩOmÔøΩ8ÔøΩ]ÔøΩ¬æ\ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩnÔøΩÔøΩV.`mÔøΩÔøΩÔøΩx< %pÔøΩÔøΩ6ÔøΩF9ÔøΩÔøΩ—≤NmQÔøΩÔøΩÔøΩÔøΩaÔøΩÔøΩÔøΩÔøΩ@ÔøΩN78ÔøΩQÔøΩAÔøΩÔøΩÔøΩGÔøΩÔøΩ6@ÔøΩÔøΩsAj,ÔøΩ3ÔøΩs·ªç'ÔøΩaÔøΩgn Ej\ÔøΩÔøΩ+ÔøΩÔøΩÔøΩ@tÔøΩÔøΩÔøΩYÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩÔøΩ#ÔøΩ3[ÔøΩ""ƒª#ÔøΩ!fÔøΩÔøΩ.+ÔøΩÔøΩ€¢ÔøΩÔøΩdÔøΩÔøΩN}ÔøΩÔøΩOÔøΩÔøΩIÔøΩÔøΩÔøΩÔøΩÔøΩq)ÔøΩ9ÔøΩÔøΩ%ÔøΩ3ÔøΩÔøΩÔøΩZqgÔøΩÔøΩTÔøΩÔøΩÔøΩÔøΩÔøΩ¬µÔøΩAÔøΩiÔøΩÔøΩ`F_ÔøΩÔøΩÔøΩÔøΩ/jœûi/ÔøΩÔøΩÔøΩÔøΩQÔøΩ(ÔøΩ{eW@^VÔøΩÔøΩ]ÔøΩ/ÔøΩ ÔøΩÔøΩ4 ÔøΩp/ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ	ÔøΩXÔøΩ“ëX`nÔøΩjP$ÔøΩ JÔøΩmHÔøΩœòÔøΩKÔøΩÔøΩK@qÔøΩ[DÔøΩ?bÔøΩÔøΩ endstream endobj 17 0 obj << /Annots [ 87 0 R 88 0 R 89 0 R 91 0 R 90 0 R ] /Contents 18 0 R /MediaBox [ 0 0 612 792 ] /Parent 194 0 R /Resources 93 0 R /Type /Page >> endobj 18 0 obj << /Filter /FlateDecode /Length 3012 >> stream xÔøΩÔøΩ…éÔøΩ8ÔøΩ^_a4ÔøΩÔøΩjQÔøΩzLzÔøΩÔøΩ`ÔøΩN rHÔøΩKÔøΩm!Z-UÔøΩÔøΩÔøΩy%ÔøΩvÔøΩÔøΩE>>ÔøΩo_ÔøΩÔøΩÔøΩw?ÔøΩÔøΩmr?OÔøΩdsÔøΩﬂ® ÔøΩ$iÔøΩ:ÔøΩ‹óÔøΩÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩÔøΩÔøΩTÔøΩ[ÔøΩUÔøΩ6LÔøΩgÔøΩFÔøΩiÔøΩ3ÔøΩÔøΩÔøΩÔøΩaÔøΩvÔøΩÔøΩ#`ÔøΩÔøΩÔøΩcÔøΩÔøΩCÔøΩmÔøΩg4~ÔøΩ?ÔøΩ^ÔøΩÔøΩÔøΩ0ÔøΩRÔøΩVÔøΩ—ÅÔøΩ«¶(ÔøΩÔøΩSm∆™=»ã=WÔøΩÛΩµÉÔøΩ3QÔøΩÔøΩÔøΩqÔøΩÔøΩÔøΩ_ÔøΩ`ÔøΩSÔøΩÔøΩÔøΩÔøΩÔøΩtTv-l◊µÔøΩO€ùRÔøΩXÔøΩfÔøΩÔøΩ#ÔøΩD ÔøΩ-ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ_ÔøΩÔøΩÔøΩmyÔøΩÔøΩV ÔøΩÔøΩ[ÔøΩTÔøΩÔøΩÔøΩÔøΩaÔøΩGWÔøΩÔøΩÔøΩPÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩÔøΩÔøΩqÔøΩ@ÔøΩÔøΩÔøΩÔøΩÔøΩRÔøΩMÔøΩV,ÔøΩÔøΩ_'ÔøΩÔøΩ|ÔøΩ5ÔøΩPÔøΩﬁµÔøΩzbng}#l8ÔøΩÔøΩ ÔøΩ@ŸùÔøΩÔøΩÔøΩ&: *ÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩQÔøΩPÔøΩ8&ÔøΩÔøΩÔøΩÔøΩÔøΩ»åÔøΩ8ÔøΩPÔøΩZÔøΩÔøΩÔøΩqÔøΩÔøΩÔøΩJG ÔøΩ=0bÔøΩ.ÔøΩP=‘ñÔøΩh8S◊åZWÔøΩÔøΩTÔøΩl¬â ÔøΩÔøΩ*m?0ÔøΩ,^8[ÔøΩÔøΩÔøΩÔøΩBÔøΩ`>ÔøΩ""?ÔøΩÔøΩ5ÔøΩÔøΩLÔøΩÔøΩrÔøΩÔøΩÔøΩ-ÔøΩÔøΩz–êÔøΩÔøΩÔøΩEÔøΩÔøΩHdÔøΩÔøΩ(ÔøΩ!?ÔøΩÔøΩpÔøΩÔøΩÔøΩ)PQ?ÔøΩÔøΩÔøΩ—îo%ÔøΩÔøΩH d;ÔøΩXÔøΩ≈ºÔøΩÔøΩ_lÔøΩÔøΩ^ÔøΩ1ÔøΩÔøΩÔøΩqÔøΩHAIÔøΩÔøΩÔøΩLÔøΩRtl_ÔøΩÔøΩÔøΩ nG` ÔøΩÔøΩ&7%ÔøΩÔøΩ0ÔøΩ0ÔøΩPÔøΩ c»®#6ÔøΩ/v;ÔøΩ'bÔøΩ	ÔøΩÔøΩ*OÔøΩÔøΩÔøΩ@ÔøΩKÔøΩÔøΩsLPÔøΩvÔøΩÔøΩSÔøΩÔøΩ ÔøΩ. ÔøΩeÔøΩ;ÔøΩ3¬•ÔøΩPÔøΩ/ÔøΩ{ÔøΩEÔøΩÔøΩ;ÔøΩÔøΩNÔøΩ|ÔøΩ]oÔøΩÔøΩytÔøΩÔøΩÔøΩX3ÔøΩ#0ÔøΩVOFhZÔøΩZ:!ÔøΩÔøΩÔøΩÔøΩÔøΩ,ÔøΩÔøΩÔøΩÔøΩÔøΩ\6)]ÔøΩÔøΩÔøΩ	Z32R‹®ÔøΩ8FÔøΩvÔøΩUÔøΩvAÔøΩÔøΩMÔøΩxÔøΩ7ÔøΩjÔøΩ0wÔøΩC%ÔøΩKÔøΩÔøΩ2<'ÔøΩHr,JÔøΩÔøΩL[jÔøΩÔøΩÔøΩÔøΩ2pÔøΩ'ÔøΩ^ÔøΩ/uÔøΩÔøΩ,}ÔøΩ~ÔøΩ>ÛÄõëÔøΩ;HL;;ÔøΩPÔøΩÔøΩzÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩsÔøΩÔøΩe*ÔøΩm:KÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩƒëÔøΩÔøΩÔøΩÔøΩÔøΩ00ÔøΩ8ÔøΩ‰áãÔøΩÔøΩHÔøΩ‹≠J&!PÔøΩÔøΩ*ÔøΩŒûÔøΩÔøΩÔøΩÔøΩÔøΩ6ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩsÔøΩrÔøΩ:ÔøΩPÔøΩ.ÔøΩ0ÔøΩaŸºÔøΩFÔøΩhÔøΩÔøΩÔøΩ-ÔøΩr7ÔøΩÔøΩ2ÔøΩJÔøΩgÔøΩÔøΩ%PÔøΩq""ÔøΩlsK…∫L%ÔøΩÔøΩhÔøΩ#I%DÔøΩÔøΩ|ÔøΩÔøΩ-ÔøΩ◊≤1’î0ÔøΩ-OLmÔøΩRÔøΩÔøΩÔøΩÔøΩ$ÔøΩÔøΩ !vÔøΩÔøΩÍ¢îk'ÔøΩVÕ©ÔøΩÔøΩÔøΩPÔøΩÔøΩFÔøΩ&ÔøΩÔøΩ-+ÔøΩÔøΩA4XÔøΩÔøΩÔøΩHtÔøΩÔøΩ/ÔøΩÔøΩÔøΩÔøΩÔøΩ*ÔøΩÔøΩÔøΩÔøΩÔøΩKÔøΩÔøΩ’†{.;')ÔøΩI7ÔøΩÔøΩsuÔøΩqÔøΩÔøΩ#MEkÔøΩEÔøΩnÔøΩ?a|%ÔøΩÔøΩÔøΩB ÔøΩ„Ω§ÔøΩÔøΩÔøΩZÔøΩzÔøΩIÔøΩ=ÔøΩÔøΩJÔøΩ#ÔøΩÔøΩj[ÔøΩV^qpQÔøΩDeÔøΩÔøΩUcÔøΩ›©ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩR.ÔøΩ ÔøΩ3^ÔøΩ.vaÔøΩÔøΩ d√£ÔøΩÔøΩOÔøΩ-ÔøΩjÔøΩf\_ÔøΩ#D|ÔøΩÔøΩd æÔøΩkj+ÔøΩjfI]ÔøΩSÔøΩÔøΩ‹πÔøΩxtÔøΩ^	ÔøΩÔøΩ&	ÔøΩgRÔøΩÔøΩ⁄°ÔøΩÁ≠´ÔøΩÔøΩ–¨Jc_ÔøΩ|”îÔøΩÔøΩjÔøΩÔøΩÔøΩÔøΩ	QÔøΩÔøΩuHÔøΩbÔøΩÔøΩ|ÔøΩAÔøΩÔøΩÔøΩW RÔøΩÔøΩM%.BÔøΩÔøΩÔøΩÔøΩÔøΩu|ÔøΩÔøΩ\ÔøΩ[Ã∑ÔøΩÔøΩYÔøΩÔøΩHÔøΩhuÔøΩÔøΩR5/ÔøΩÔøΩ#? ÔøΩ ÔøΩWÔøΩÔøΩÔøΩLÔøΩÔøΩgJHÔøΩ$ÔøΩÔøΩiI^¬∏vÔøΩÔøΩÔøΩÔøΩŸ≠ÔøΩÔøΩu#ÔøΩ{wÔøΩÔøΩÔøΩl}ÔøΩSyÔøΩÔøΩ(ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩHÔøΩÔøΩŒ≥ÔøΩÔøΩ5g46ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ(ÔøΩÔøΩÔøΩd)ÔøΩ^ÔøΩ~ÔøΩÔøΩÔøΩb`6Z_ÔøΩBwÔøΩfÔøΩÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩ)}ÔøΩzÔøΩŸÖyÔøΩ7ÔøΩÔøΩÔøΩg%ÔøΩÔøΩIÔøΩ56ÔøΩ]#ÔøΩÔøΩovÔøΩÔøΩ ÔøΩE ?W&wÔøΩ8ÔøΩ—Å'ÔøΩmÔøΩÔøΩp9ÔøΩÔøΩÔøΩ+@:W6ÔøΩ>}ÔøΩ≈∏ÔøΩT>ÔøΩÔøΩ3ÔøΩ9ÔøΩwÔøΩ[l›∑ÔøΩH(ÔøΩÔøΩfÔøΩÔøΩQ""ÔøΩ \‘ÜÔøΩrÔøΩÔøΩ=ÔøΩN,NsÔøΩnÔøΩÔøΩÔøΩÔøΩzÔøΩÔøΩÔøΩ]aÔøΩ—ÑÔøΩxh KD#}ÔøΩÔøΩÔøΩÔøΩÔøΩjF^ÔøΩ;ÔøΩd@ÔøΩÔøΩ-ÔøΩxÔøΩg:ÔøΩÔøΩPÔøΩÔøΩÔøΩmK!ÔøΩÔøΩÔøΩ$=p?ÔøΩÔøΩÔøΩ#ÔøΩÔøΩ#ÔøΩK)ÔøΩÔøΩGÓ≤áÔøΩÔøΩ~6ÔøΩÔøΩÔøΩÔøΩÔøΩKÔøΩÔøΩOhRÔøΩ-%3ÔøΩaÔøΩÔøΩ-ÔøΩÔøΩX].ÔøΩÔøΩAÔøΩMÔøΩÔøΩS_ÔøΩu%}ÔøΩÔøΩÔøΩÔøΩjÔøΩ( TÔøΩÔøΩÔøΩÔøΩh$XÔøΩ@ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩhÔøΩÔøΩÔøΩÔøΩOÔøΩ G/ÔøΩÔøΩPÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ|uÔøΩ21ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩc?PÔøΩP@&ÔøΩÔøΩ≈áÔøΩÔøΩ, endstream endobj 19 0 obj << /Annots [ 92 0 R 110 0 R 100 0 R 111 0 R 101 0 R 112 0 R 102 0 R 113 0 R 103 0 R 104 0 R 105 0 R 106 0 R 114 0 R ] /Contents 20 0 R /MediaBox [ 0 0 612 792 ] /Parent 194 0 R /Resources 107 0 R /Type /Page >> endobj 20 0 obj << /Filter /FlateDecode /Length 1781 >> stream xÔøΩÔøΩWÔøΩsÔøΩ6ÔøΩ_ÔøΩGhÔøΩÔøΩ ÔøΩ‹¥NŒπ4ÔøΩi[ÔøΩt&ÔøΩLBjÔøΩTÔøΩÔøΩÔøΩÔøΩÔøΩo mQ‚µΩÔøΩÔøΩX ÔøΩÔøΩÔøΩ~ÔøΩÔøΩÔøΩÔøΩÔøΩuÔøΩLÔøΩTd|ÔøΩÔøΩ.XÔøΩ/2%hÔøΩÔøΩ≈¶\| ÔøΩvk[[ÔøΩ[~‹º]ÔøΩÔøΩÔøΩÔøΩgÔøΩ9YÔøΩ8ÔøΩ9gaÔøΩÔøΩqÔøΩbIÔøΩÔøΩ7fÔøΩsÔøΩXÔøΩzÔøΩ‚úìÔøΩÔøΩÔøΩ;ÔøΩÔøΩÔøΩÔøΩÔøΩ4ÔøΩRÔøΩÔøΩcÔøΩ*ÔøΩSÔøΩlhÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩqÔøΩEÿêfG;’π7ÔøΩÔøΩÔøΩÔøΩ]ÔøΩÔøΩ;SÔøΩÔøΩKÔøΩÔøΩwB)ÔøΩNÔøΩ‘æ€ºÔøΩÔøΩÔøΩ:ÔøΩ~bÔøΩ~ÔøΩ[ÔøΩyÔøΩÔøΩÔøΩÔøΩnÔøΩ~ÔøΩ<+7	ÔøΩÔøΩj)ÔøΩÔøΩÔøΩ`ÔøΩÔøΩÔøΩÔøΩÔøΩsÔøΩÔøΩÔøΩÔøΩJÔøΩ{i`ÔøΩ)*%ÔøΩj!ÔøΩ#DÔøΩ\UÔøΩvÔøΩ,WÔøΩ+rYÔøΩÔøΩÔøΩu8…àÔøΩÔøΩTÔøΩLÔøΩÔøΩr*ÔøΩÔøΩÔøΩ\ÔøΩ	ÔøΩYALmÔøΩÔøΩŒ≥ÔøΩYÔøΩÔøΩJÔøΩYÔøΩÔøΩ9ÔøΩﬁ¥ÔøΩÔøΩÔøΩ1&)ÔøΩUÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ–¥ÔøΩÔøΩÔøΩ9ÔøΩ3IS%«ÉL3ÔøΩ\ÔøΩ9hAÔøΩ4ÕìÔøΩG ŒíJ=ÔøΩ√ßÔøΩÔøΩÔøΩtsÔøΩÔøΩ\$ÔøΩiÔøΩÔøΩÔøΩÔøΩ8UÔøΩ	ÔøΩÔøΩjgÔøΩÔøΩÔøΩnÔøΩÔøΩpÔøΩ4xÔøΩÔøΩlÔøΩTÔøΩ—ΩÔøΩÔøΩ+ÔøΩ$ÔøΩ“∂KÔøΩIÔøΩÔøΩÔøΩ4RIez$20ÔøΩÔøΩjqP""]ÔøΩÔøΩÔøΩ‘∫ÔøΩmÔøΩ.€°SÔøΩÔøΩ%AÔøΩQÔøΩ[ÔøΩDÔøΩ)ÔøΩÔøΩGÔøΩÔøΩDÔøΩ{ÔøΩÔøΩ0ÔøΩÔøΩÔøΩ~lÔøΩ[qfÔøΩsfÔøΩ yÔøΩ_&ÔøΩÔøΩ8ÔøΩFÔøΩfZ7ÔøΩÔøΩqÔøΩZÁóºUqÔøΩÔøΩ{?ÔøΩÔøΩp)!]ÔøΩ)ÔøΩM{ÔøΩÔøΩÔøΩÔøΩÔøΩ50ÔøΩÔøΩÔøΩ\P@VÔøΩ”∞÷öÔøΩÔøΩ$ÔøΩÔøΩÔøΩ€¶-ÔøΩÔøΩTÔøΩÔøΩÔøΩÔøΩTÔøΩ6HÔøΩ)> PÔøΩÔøΩÔøΩÔøΩ ÔøΩjÔøΩ0ÔøΩÔøΩÔøΩÕÆŸõÔøΩÔøΩfgnÔøΩrsÔøΩÔøΩÔøΩÔøΩdÔøΩ	ÔøΩQJ]ÔøΩ('W◊òm_!ÔøΩÔøΩ4ÔøΩÔøΩÔøΩ:”õÔøΩ4mÔøΩ3VA>ÔøΩ'ÔøΩÔøΩÔøΩzEÔøΩ""ÔøΩÔøΩÔøΩÔøΩBh*”øP1ÔøΩ0ÔøΩ3ÔøΩÔøΩÔøΩiÔøΩDÔøΩÔøΩÔøΩÔøΩYÔøΩÔøΩÔøΩÔøΩ\ÔøΩÔøΩÔøΩÔøΩrÔøΩÔøΩ‘≤ÔøΩhÔøΩkxÔøΩÔøΩBÔøΩÔøΩÔøΩEÔøΩo^2'XÔøΩRÔøΩÔøΩÔøΩÔøΩÕõog ÔøΩR,ÔøΩ ÔøΩÔøΩÔøΩÔøΩaÔøΩÔøΩ,?5*O5MX6UZÔøΩJÔøΩÔøΩÔøΩ6ÔøΩÔøΩm3ÔøΩÔøΩÔøΩSÔøΩÔøΩÔøΩ·ÄøÔøΩA ÔøΩ+ÔøΩ3ÔøΩ[""ÔøΩÔøΩlFÔøΩÔøΩJÔøΩ)ÔøΩ‘ôÔøΩsÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ`Y'_ÔøΩÔøΩcR}-ÔøΩÔøΩÔøΩeb+ÔøΩÔøΩ öR'yZ(ÔøΩ?ÔøΩ""ÔøΩÔøΩkqÔøΩTÔøΩ=j9< øÿå>ÔøΩÔøΩsÔøΩuÔøΩTMÔøΩÔøΩePÔøΩ/ÔøΩÔøΩÔøΩYÔøΩÔøΩu}uÔøΩT$FÔøΩÔøΩ&2#-ÔøΩÔøΩÔøΩ {ÔøΩÔøΩCKÔøΩ0ÔøΩÔøΩÔøΩ`ÔøΩg%ÔøΩÔøΩÊòÜvtÔøΩ,ÔøΩmƒü$sÔøΩa&  s3qÔøΩZÔøΩWXAÔøΩÔøΩRÔøΩÔøΩ<1ÔøΩ	ÔøΩÔøΩqH⁄Æ+*ÔøΩÔøΩÔøΩÔøΩ39ÔøΩÔøΩÔøΩ;cÔøΩÔøΩy@IrÔøΩÔøΩÔøΩÔøΩ\ÔøΩÔøΩtÔøΩ0ÔøΩÔøΩÔøΩÔøΩÔøΩcÔøΩUpÔøΩvozÔøΩÔøΩÔøΩÔøΩpÔøΩÔøΩl<ÔøΩÔøΩÔøΩ#ÔøΩrlÔøΩTBÔøΩÔøΩÔøΩlÔøΩ=qWÔøΩDzÔøΩÔøΩ]ÔøΩzÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩ€ÆÔøΩ[?ÔøΩÔøΩ""ÔøΩrÔøΩÔøΩ)\gEBÔøΩÔøΩoÔøΩIkÔøΩÔøΩeÔøΩxKÔøΩTÔøΩ ÔøΩ~^ÔøΩpÔøΩ|qxÔøΩÔøΩ–íDÔøΩ^ÔøΩÔøΩ0AY öOdÔøΩÔøΩÔøΩÔøΩÔøΩ5CU""j=ÔøΩ_ÔøΩhÔøΩÔøΩÔøΩdÔøΩlFŒ∑FÔøΩÔøΩÔøΩÔøΩ}XB–òj- 4|ÔøΩL6ÔøΩÔøΩÔøΩ;^ZÔøΩ!qÔøΩÔøΩAÔøΩ""ÔøΩÔøΩÔøΩgÔøΩX\/mÔøΩ:ÔøΩÔøΩÔøΩ	ÔøΩQ'ÔøΩÍîùÔøΩœ±ÔøΩVÔøΩÔøΩGÔøΩÔøΩKÔøΩÔøΩÔøΩÔøΩ(ÔøΩ!ÔøΩ ÔøΩ~DÔøΩÔøΩÔøΩﬁ°ÔøΩÔøΩÔøΩq_oÔøΩÔøΩ`yÔøΩUÔøΩrÔøΩÔøΩcÔøΩ&ÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩZq""bÔøΩ4ÔøΩÔøΩÔøΩ@{$mÔøΩÔøΩy1ÔøΩÔøΩ3b(ÔøΩÔøΩÔøΩÔøΩ7Œ∂ÔøΩÔøΩÔøΩjÔøΩ~◊¥q5tÔøΩ0pÔøΩÔøΩ{SÔøΩ»°ÔøΩÔøΩÔøΩÔøΩTÔøΩ)ÔøΩ}lMÔøΩÔøΩÔøΩq%ÔøΩÔøΩÔøΩYÔøΩÔøΩÔøΩÔøΩ*oÔøΩÔøΩÔøΩÔøΩÔøΩ,ƒ®""ÔøΩÔøΩÔøΩ ÔøΩ-l◊ôÔøΩUÔøΩÔøΩÔøΩzgA$ÔøΩ,8NÔøΩzEqÔøΩÔøΩÔøΩÔøΩmÔøΩcaÔøΩÔøΩÔøΩ/ÔøΩR1NÔøΩB=ÔøΩKÔøΩÔøΩÔøΩ<LnÔøΩÔøΩ3:ƒ∏(QÔøΩPTÔøΩNÔøΩÔøΩÔøΩÔøΩEoÔøΩXÔøΩÔøΩÔøΩÔøΩ⁄ºÔøΩ[/ÔøΩ endstream endobj 21 0 obj << /Filter /FlateDecode /Length1 1426 /Length2 6537 /Length3 0 /Length 7500 >> stream xÔøΩÔøΩtTÔøΩÔøΩ6ÔøΩJÔøΩÔøΩÔøΩÔøΩt.ÔøΩHHJÔøΩ "",ÔøΩ,ÔøΩÔøΩÀ≤4“çtÔøΩ(ÔøΩH*ÔøΩÔøΩ(ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ|ÔøΩ9ÔøΩ{ÔøΩÔøΩ{Ôôπf~3ÛªÆõÔøΩÔøΩÔøΩXPÔøΩÔøΩÔøΩÔøΩ#ÔøΩ(A!ÔøΩ,@UWÔøΩXU ≈ÑÔøΩ@QNNÔøΩÔøΩwÔøΩÔøΩÔøΩÔøΩtÔøΩ!ÔøΩÔøΩQEB@(ÔøΩÔøΩÔøΩAÔøΩ""ÔøΩ mwgÔøΩÔøΩ@DRVDJÔøΩÔøΩ2HYÔøΩ=ÔøΩ ÔøΩpÔøΩ	ÔøΩ*ÔøΩÔøΩ	ÔøΩ:ÔøΩ0ÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩH	ÔøΩN(ÔøΩ@ÔøΩ0;ÔøΩB9@\0'⁄ÅÔøΩÔøΩ;ÔøΩÔøΩÔøΩ<ÔøΩ(ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩMÔøΩÔøΩ*ÔøΩ  <`(ÔøΩÔøΩ ÔøΩDCÔøΩÔøΩ_CÔøΩ@.ÔøΩÔøΩf""ÔøΩÔøΩ8ÔøΩÔøΩÔøΩÔøΩ#ÔøΩQ $ÔøΩq8ÔøΩÔøΩ p7LÔøΩ;A0ÔøΩÔøΩÔøΩt ÔøΩÔøΩÔøΩ`ÔøΩ? ÔøΩ?ÔøΩÔøΩÔøΩ‹üŸø ÔøΩ‡øìAvvWÔøΩÔøΩÔøΩaÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ%  ÔøΩÔøΩÔøΩÔøΩ g7&ÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩÔøΩA ueC 3ÔøΩÔøΩÔøΩ!aÔøΩ(7!7ÔøΩÔøΩ!ÔøΩÔøΩÔøΩÔøΩY VEÔøΩÔøΩ@ÔøΩ(7ÔøΩ_ÔøΩ›É!!vÔøΩÔøΩ{	ÔøΩuÔøΩNpÔøΩÔøΩÔøΩoÔøΩÔøΩÔøΩÔøΩÔøΩ*l ÔøΩ=qÔøΩhÔøΩÔøΩÔøΩqÔøΩÔøΩÔøΩBP 	ÔøΩÔøΩÔøΩ8P yÔøΩxÔøΩ9ÔøΩ:ÔøΩÔøΩÔøΩÔøΩ;(ÔøΩÀçÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩC0$>n 4ÔøΩBÔøΩCÔøΩ|ÔøΩ3ÔøΩoÔøΩDD ÔøΩŸ° ÔøΩ(NÔøΩOuÔøΩbÔøΩÔøΩÔøΩÔøΩ ÔøΩ	ÔøΩb( ÔøΩÔøΩÔøΩÔøΩfÔøΩ!wÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ5TÔøΩ4UÔøΩÔøΩÔøΩÔøΩÔ®ä ÔøΩÔøΩ#""ÔøΩ DÔøΩRR )ÃãﬂøÔøΩÔøΩ`ÔøΩÔøΩÔøΩZp{ÔøΩWÔøΩ_ÔøΩbÔøΩWÔøΩÔøΩ?iÔøΩÔøΩHxÔøΩ.ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÏèÄ@;ÔøΩCÔøΩÔøΩLÔøΩÔøΩ)ÔøΩ?ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ[RwwvÔøΩ ÔøΩÔøΩÔøΩÔøΩ @.0gÔøΩ?!ÔøΩÔøΩÔøΩ0RÔøΩE`ÔøΩoÔøΩÔøΩ÷ÖÔøΩaÔøΩ.ÔøΩÔøΩBÔøΩ0ÔøΩPÔøΩCÔøΩÔøΩÔøΩ%ÔøΩMÔøΩ	ÔøΩPvpÔøΩÔøΩÔøΩ/ÔøΩ9ÔøΩÔøΩÔøΩÔøΩÔøΩ' (ÔøΩW#2;'ÔøΩgÔøΩ CÔøΩ?B 7ÔøΩÔøΩPÔøΩoÔøΩ ÔøΩhÔøΩÔøΩ-ÔøΩÔøΩÔøΩÔøΩ_ÔøΩÔøΩÔøΩÔøΩÔøΩHÔøΩ	ÔøΩÔøΩ1ÔøΩÔøΩÔøΩÔøΩ!ÔøΩÔøΩÔøΩ ÔøΩ#PÔøΩ f\?ÔøΩ=IÔøΩÔøΩEÔøΩÔøΩ aÔøΩ_ÔøΩ?LwÔøΩÔøΩÔøΩaJÔøΩÔøΩÔøΩÔøΩ:ÔøΩÔøΩÔøΩƒ¥ÔøΩÔøΩ+ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÿëÔøΩ~DÔøΩ…Ö8VÔøΩ4ÔøΩV)3yÔøΩ ÔøΩÔøΩÔ•üÔøΩÔøΩ >&BuÔøΩÔøΩ[/'gÔøΩÔøΩtÔøΩD}ÔøΩSDÔøΩÔøΩcÔøΩÔøΩ ìÔøΩÔøΩÔøΩ>_jXkÔøΩƒèYÔøΩ7ÔøΩÔøΩÔøΩÔøΩcO&ÔøΩÔøΩÔøΩfÔøΩHﬁÄÔøΩÔøΩ UÔøΩEÔøΩŸÖeÔøΩMÔøΩJ|ÔøΩ2ÔøΩ$ÔøΩÔøΩÔøΩIÔøΩÔøΩyÔøΩ.ÔøΩ⁄®ÔøΩÔøΩZÔøΩÔøΩÔøΩÔøΩmÔøΩÔøΩ#ÔøΩ;ÔøΩ^ÔøΩ5ÔøΩÔøΩ[ÔøΩ9+.qÔøΩÔøΩ1ÔøΩ""ÔøΩÔøΩ2ÔøΩÔøΩÔøΩ7ÔøΩÔøΩ$zTR,ÔøΩÔøΩÔøΩÔøΩQv2ÔøΩEjÔøΩÔøΩÔøΩÔøΩ9ÔøΩPÔøΩjrÔøΩÔøΩÔøΩVÔøΩÔøΩÔøΩﬂºÔøΩ)BogPÔøΩÔøΩjP+mÔøΩÔøΩJÔøΩÔøΩ|!< >ÔøΩEÔøΩÔøΩÔøΩGÔøΩwyC’ûÔøΩBÔøΩÔøΩkÔøΩ@ÔøΩBXaﬁ¥ÔøΩxÔøΩÔøΩ ÔøΩ|ÔøΩÔøΩTjÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ66ÔøΩ2ÔøΩÔøΩrfÀ¢ÔøΩ“ØÔøΩT_ÔøΩe'ÔøΩCÔøΩcÔøΩ='ÔøΩrÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ	xoÔøΩÔøΩÔøΩtÔøΩCQÔøΩhÔøΩSÔøΩqLvÔøΩr+ÔøΩeÔøΩMÔøΩÔøΩÔøΩ`ÔøΩ=ÔøΩÔøΩIÔøΩÔøΩÔøΩ⁄æÔøΩÔøΩÔøΩÔøΩÔøΩC|ÔøΩÔøΩÔøΩÔøΩÔøΩ\ÔøΩÔøΩÔøΩrE`ÔøΩÔøΩtJ5ÔøΩ+ÔøΩÔøΩÔøΩ2o>ÔøΩJ.NÔøΩÔøΩÔøΩ`ÔøΩXÔøΩ{HÔøΩÔøΩ-ÔøΩÔøΩÔøΩ8lŸ§^,us""ÔøΩ!ÔøΩÔøΩÔøΩHlqÔøΩdhÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩaÔøΩ$ÔøΩÔøΩ}nÔøΩÔøΩÔøΩ7ÔøΩÔøΩÔøΩ]mXÔøΩÔøΩÔøΩÔøΩÔøΩ5ÔøΩÔøΩ<ÔøΩArÔøΩ)b>ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ$ÔøΩ(ÔøΩ*ÔøΩÔøΩÿâ1iÔøΩﬂûÔøΩÔøΩ÷æ≈∂ÔøΩÔøΩÔøΩÔøΩÔøΩ]3}ÔøΩ""ÔøΩ#ÔøΩ vÔøΩÔøΩÔøΩÔøΩÕöÔøΩlDÔøΩÔøΩTÔøΩ!:ÔøΩŒ°8Nln)`ÔøΩRÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ{{ÔøΩÔøΩÔøΩloÔøΩ9W/ÔøΩÔøΩÔøΩÔøΩÔøΩCwÔøΩÔøΩTÔøΩÔøΩÔøΩ0ÔøΩ8ÔøΩGÔøΩ_ÔøΩÔøΩÔøΩRnÔøΩ>8Z3ÔøΩÔøΩk8jÔøΩuÔøΩÔøΩÔøΩÔøΩQÔøΩÔøΩÔøΩwpÔøΩ“ÅJÔøΩÔøΩÔøΩÔøΩ!""“óshÔøΩÔøΩÔøΩD	÷ã! 0qÔøΩÔøΩ;Ra	ÔøΩÔøΩk5ÔøΩÔøΩgGÔøΩÔøΩÔøΩ◊ô ÔøΩﬂã+:ÔøΩÔøΩÔøΩ{[.ÔøΩb,lgÔøΩÔøΩ…úÔøΩyÔøΩ?ÔøΩ ;ÔøΩÔøΩMÔøΩ}J[ÔøΩ	[PÔøΩÔøΩÔøΩ1/xÔøΩW-JÔøΩaÔøΩÔøΩÔøΩÔøΩKU_-ÔøΩVmmg	~ÔøΩÔøΩ/ÔøΩ#ÔøΩF$ÔøΩÔøΩÔøΩÔøΩÔøΩ8ÔøΩTÔøΩÔøΩÔøΩBi$ÔøΩ0}ÔøΩW PrÔøΩ6ÔøΩMÔøΩnRkÔøΩ2ÔøΩÔøΩ_ÔøΩpÔøΩr?10!ÔøΩeÔøΩÔøΩ0ÔøΩ-ÔøΩsÔøΩÔøΩÔøΩÔøΩ‘ëyÔøΩJ›ÉxÔøΩÔøΩÔøΩÔøΩm5fÔøΩÔøΩÔøΩÔøΩ@AÔøΩÔøΩÔøΩ&ÔøΩÿàÔøΩ.ÔøΩYÔøΩ5vi}=ÔøΩBcÔøΩÔøΩ[ÿ¶ÔøΩÔøΩwgÔøΩÔøΩÔøΩÔøΩÔøΩvÔøΩÔøΩSÔøΩÔøΩ""nz€åÔøΩÔøΩ!O⁄àÔøΩÔøΩc'ÔøΩ,ÔøΩCÔøΩ1Ê¶ºÔøΩ@ÔøΩ 0ÔøΩYL7ÔøΩÔøΩmÔøΩÔøΩÔøΩÔøΩTyÔøΩÔøΩÔøΩ2ÔøΩÔøΩ+ÔøΩ""ÔøΩÔøΩÔøΩÔøΩFTzÔøΩÔøΩÔøΩÔøΩiÔøΩXe7ÔøΩÔøΩÔøΩ;SÔøΩÁøÖXÔøΩIÔøΩÔøΩ6ÔøΩmÔøΩ0“¨(hgÔøΩTÔøΩ ÔøΩ@ÔøΩ≈É7ÔøΩÔøΩfÔøΩÔøΩ/ÔøΩÔøΩÔøΩ~%ÔøΩÔøΩ;ÔøΩÔøΩÔøΩÔøΩÔøΩL@ÔøΩIÔøΩtoÔøΩÔøΩi+`WxÔøΩ÷¥ÔøΩmyÔøΩÔøΩÔøΩ8dÔøΩuÔøΩÔøΩ ^ÔøΩŒöJaÔøΩÔøΩÔøΩÔøΩYpaÔøΩ-ÔøΩ TÔøΩÔøΩd]%ÔøΩÔøΩgÔøΩÔøΩÔøΩ'O‹à÷∞:.ÔøΩF∆æÔøΩ^ÔøΩeÔøΩﬂ≠ÔøΩÔøΩY> ÔøΩZÔøΩaÔøΩÔøΩxÔøΩ¬¶2|HÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ%}ÔøΩÔøΩ=IuÔøΩÔøΩÔøΩnÔøΩÔøΩAJÔøΩ^\ÔøΩ+@ÔøΩqÔøΩÔøΩÔøΩ=ÔøΩD…Ä	GÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩvÔøΩÔøΩÔøΩ$ÔøΩI+hÔøΩÔøΩ@ÔøΩBÔøΩtÔøΩEÔøΩÔøΩÔøΩÔøΩ&ÔøΩÔøΩÔøΩ(œ©ÔøΩ]ÔøΩÔøΩgÔøΩ[3ÔøΩÔøΩÔøΩÃü:ppC4ÔøΩ-ÔøΩqys>[ÔøΩÔøΩWtÔøΩÔøΩÔøΩH?[ÔøΩÔøΩÔøΩs”ïÔøΩ.$ÔøΩUÔøΩÔøΩX*ÔøΩBÔøΩÔøΩÔøΩcÔøΩp&ÔøΩy""ÔøΩÔøΩÔøΩÀªÔøΩRÔøΩYZÔøΩJ[ÔøΩÔøΩÔøΩGÔøΩÔøΩ\ÔøΩ{uSÔøΩÔøΩÔøΩ1ÔøΩÔøΩÔøΩÔøΩTﬂéfÔøΩÔøΩ≈õÔøΩwO%ÔøΩn|T€®ORBÔøΩ]ÔøΩ/ÔøΩ”≤ÔøΩT _ÔøΩÔøΩ}JÔøΩÔøΩp>ÔøΩ.ÔøΩÔøΩzÔøΩhÔøΩKÔøΩÔøΩjSYÔøΩÔøΩQ342ÔøΩÔøΩ·ÆçÔøΩD“§pÔøΩÔøΩRÔøΩ/ÔøΩÔøΩlÔøΩ ÔøΩÔøΩÔøΩÔøΩo/ÔøΩÔøΩ]#€è[ÔøΩÔøΩ”ñDÔøΩÔøΩÔøΩZÔøΩ[ÔøΩGÔøΩ$k; ÔøΩÔøΩdÔøΩÔøΩÔøΩÔøΩÔøΩFÿéÔøΩÔøΩrÔøΩ&>YYÔøΩ mÔøΩ’üfLSÈëóÔøΩÔøΩÔøΩIÔøΩ?ÔøΩgÔøΩÔøΩx#ÔøΩÔøΩ?ÔøΩÔøΩl9/ÔøΩ^ÔøΩ\ÔøΩW.ÔøΩÔøΩ/ÔøΩ)dÔøΩÔøΩÔøΩ›£""%ÔøΩÔøΩÔøΩ8ÔøΩÔøΩ	ÔøΩ%ÔøΩ+ÔøΩÔøΩbÔøΩÔøΩÔøΩÔøΩ	9+nÔøΩÔøΩ8ÔøΩÔøΩÔøΩIÔøΩ8“îÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩCwÔøΩÔøΩÔøΩ@œ∫ÔøΩkﬂ∂ÔøΩbEkÔøΩÔøΩ`ÔøΩ4vÔøΩÔøΩÔøΩﬂØ&qÔøΩÔøΩ_ÔøΩÔøΩ<ÔøΩÔøΩARgÔøΩÔøΩÔøΩP0ÔøΩXAÕµÔøΩKÔøΩÔøΩyCStÔøΩÔøΩ\ÔøΩjÔøΩUÔøΩÔøΩÔøΩUÔøΩ.~,{wÔøΩOFÔøΩg|""Py	du7zÔøΩÔøΩ*<ÔøΩÔøΩÔøΩ=\ÔøΩkÔøΩÔøΩÔøΩ6ÔøΩDÔøΩ!xoÔøΩÔøΩÔøΩ 3ÔãÖÔøΩÔøΩ€õÔøΩ""ÔøΩuƒâÔøΩfÔøΩÔøΩYNÔøΩÔøΩÔøΩÔøΩdÔøΩDLÔøΩÔøΩ:ÔøΩkÔøΩxÔøΩH<@ÔøΩÔøΩ1‘∞iMK2JN”ózwÔøΩÔøΩ:ÔøΩ@ÔøΩÔøΩ/BLeoÔøΩÔøΩ[ÔøΩ9VSÔøΩ	ÔøΩŸö gvÀ∑ÔøΩÔøΩ\ÔøΩÔøΩQe*ÔøΩÔøΩÔøΩ}ÔøΩÔøΩÔøΩ/ÔøΩ-‹ãÔøΩÔøΩHÔøΩÔøΩPÔøΩrÔøΩT9ÔøΩaÔøΩR[]UﬁÖR{/M8ÔøΩÔøΩÔøΩ8{ÔøΩÔøΩÔøΩDÔøΩb)ÔøΩcWXœ∞gÔøΩÃ†ÔøΩÔøΩ25ÔøΩÔøΩÔøΩÔøΩ‹ΩPi›æÔøΩxÔøΩÔøΩÔøΩÔøΩwÔøΩ(ÔøΩ4ÔøΩÔøΩÔøΩÔøΩ]ÔøΩÔøΩÔøΩ(ÔøΩMÔøΩAQb9ÔøΩÔøΩcÔøΩ.ÔøΩ ÔøΩ4LÔøΩÔøΩÔøΩZ7ÔøΩkÔøΩÔøΩbÔøΩÔøΩÔøΩK&WÔøΩ€áÔøΩl}ÔøΩÔøΩÔøΩ—ó5≈¢OÔøΩÔøΩÔøΩ_ÔøΩztwÔøΩV62◊∏ÔøΩ3ÔøΩEÔøΩMÔøΩA(ÔøΩ%mhÔøΩÔøΩÔøΩÔøΩÔøΩ""zÔøΩB\ÔøΩÔøΩTÔøΩKÔøΩÔøΩÔøΩÔøΩB?ÔøΩÔøΩÔøΩÔøΩŒ≤_ÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩ9s` ûÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩ< À≤ÔøΩv%'JÔøΩa3Z{1ÔøΩJe3ÔøΩÔøΩÔøΩÔøΩwÔøΩrRÔøΩÔøΩ1ÔøΩ6s—∫ÔøΩ3qNÔøΩ23ÔøΩÔøΩlÔøΩyÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩHÔøΩTkﬂ¶""ÔøΩMJMÔøΩo-ÔøΩ[ÔøΩ◊ΩÔøΩeÔøΩlhÔøΩ(r]ÔøΩÔøΩÔøΩÀÇ[ÔøΩÔøΩ/ÔøΩbÔøΩtiÔøΩÔøΩHÔøΩXu*JÔøΩ$ÔøΩ;ÔøΩ*ÔøΩÔøΩSÔøΩÔøΩÔøΩ)A1j	ÔøΩÔøΩÔøΩÔøΩ…¨?!hÔøΩÔøΩÔøΩÔøΩWoÔøΩ‡µìXOÔøΩaQÔøΩaÔøΩdaÔøΩÔøΩ5W>""HÔøΩÔøΩ)I;zÔøΩ5H'ÔøΩUz(ÔøΩ),ÔøΩÔøΩPÔøΩÔøΩ ÔøΩYÔøΩÔøΩÔøΩ„çÆ^ÔøΩÔøΩÔøΩ5ÔøΩÔøΩuxÔøΩÔøΩÔøΩÔøΩ}\ÀîÔøΩÔøΩ—ªÔøΩÓ∑à*ÔøΩ≈áÔøΩDDUÔøΩÔøΩÔøΩ66ZKÔøΩÔøΩ?ÔøΩÿß<ÔøΩVÔøΩÔøΩ ÔøΩ3ÔøΩ%ÔøΩÔøΩÔøΩ]t5rÔøΩÔøΩÔøΩ#`xÔøΩYuDÔøΩaÔøΩ?6ÔøΩ#ÔøΩ\lÔøΩkEÔøΩ8FÔøΩÔøΩRRZwÔøΩ√∏ÔøΩ ÔøΩpÔøΩfÔøΩeÔøΩlÔøΩ{ÔøΩÔøΩ$ÔøΩpÔøΩÔøΩztÔøΩKlÔøΩsÔøΩ^ÔøΩÔøΩ ÔøΩÔøΩ1ÔøΩÔøΩOÔøΩÔøΩ-6ÔøΩYÔøΩÔøΩW’´ÔøΩ3lÔøΩÔøΩaÏèØÔøΩÔøΩﬁ∏ÔøΩÔøΩÔøΩ5D$Õì»≤EUÔøΩiÔøΩWZÔøΩÔøΩVÔøΩÔøΩÔøΩDÔøΩÔøΩÔøΩÔøΩ] {SÔøΩÔøΩÔøΩÔøΩzXÔøΩMÔøΩƒåÔøΩÔøΩ{*ÔøΩgcÔøΩiÔøΩuÔøΩi:YÔøΩÃêRu,0ÔøΩÔøΩÔøΩÔøΩÔøΩrÔøΩ'ÔøΩ»äÔøΩi)ÔøΩÔøΩÔøΩÔøΩÔøΩ’∫ÔøΩwÔøΩM ÔøΩonÔøΩÔøΩ?iÔøΩv–∂Œ¶ÔøΩÔøΩÔøΩ ÔøΩÿØÔøΩÔøΩsEÔøΩ⁄£ 2ÔøΩÔøΩ ÔøΩÔøΩgÔøΩÔøΩYÔøΩ2ÔøΩ|ÔøΩÔøΩÔøΩÔøΩÔøΩGÔøΩJÔøΩﬂÖ>ÔøΩÔøΩÔøΩq	@mkd;ÔøΩÔøΩÔøΩU={ÔøΩpÔøΩÔøΩP9/ÔøΩ?ÔøΩWla/y8AF9ÔøΩÔøΩÔøΩ""f<ÔøΩÔøΩÔøΩBÔøΩÔøΩÔøΩ-ÔøΩ4ÔøΩzÔøΩÔøΩaÔøΩÔøΩF='ÔøΩÔøΩVÔøΩÔøΩÔøΩÔøΩ{≈£ÔøΩÔøΩ2ÔøΩLÔøΩiÔøΩt94ÔøΩÔøΩÔøΩhÔøΩ$ÔøΩ`bÔøΩ!ÔøΩVÔøΩ3>[›®ÔøΩRAÔøΩ:ÔøΩÔøΩ úÔøΩ∆ùÔøΩÔøΩ5QÔøΩEBÔøΩÔøΩ5ÔøΩ&rmÔøΩÔøΩjI’£6=ÔøΩKÔøΩ'ÔøΩkÔøΩzsÔøΩÔøΩÔøΩwÔøΩ%IÔøΩÔøΩÔøΩÔøΩg'ÔøΩÔøΩ¬∞ÔøΩJÔøΩHÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩUÔøΩ⁄àÔøΩÔøΩÔøΩÔøΩÔøΩWEÔøΩcÔøΩÔøΩÔøΩÔøΩÔøΩ8ÔøΩ>ÔøΩÔøΩUÔøΩD#ÔøΩÔøΩTÔøΩÔøΩ7›öÔøΩs ÔøΩ U NÔøΩÔøΩÔøΩZgÔøΩÔøΩ5ÔøΩ=ÔøΩÔøΩ[ÔøΩÔøΩXÔøΩ?XÔøΩ ÔøΩxÔøΩ(h ØÔøΩÔøΩBÔøΩLÔøΩgÔøΩMÔøΩÔøΩÔøΩU<|ZÔøΩÔøΩmKÔøΩZÔøΩÔøΩÔøΩÔøΩÔøΩ=^NÔøΩ&2ÔøΩÔøΩÔøΩ/	ÔøΩÔøΩQÔøΩUÔøΩÔøΩÔøΩÔøΩÀ∞~6ÔøΩÔøΩÔøΩÔøΩ}∆õLoDZ=ÔøΩ11xÔøΩÔøΩÔøΩÔøΩqJÔøΩÔøΩNÔøΩa8(ÔøΩÔøΩÔøΩÔøΩsbÔøΩÔøΩdL«• ¶ÔøΩÔøΩ>ÔøΩ ëÔøΩ/3ÔøΩÔøΩFÔøΩZÔøΩ_ÔøΩÔøΩÔøΩÔøΩMrÔøΩ ÿÆgÔøΩÔøΩ9ÔøΩ;S9[ÔøΩÔøΩÔøΩh2ÔøΩÔøΩÔøΩÔøΩÔøΩ‘∏ÔøΩCÔøΩÔøΩbÔøΩ$E]_ÔøΩ ÔøΩvÔøΩGÔøΩÔøΩÔøΩ*ÔøΩmi8ÔøΩÔøΩÔøΩÔøΩo9ÔøΩ~ÔøΩÔøΩ8GÔøΩnÔøΩJÔøΩÔøΩ'ÔøΩMÔøΩﬂïÔøΩÔøΩÔøΩÔøΩ$n?!qA$~^ÔøΩrDÔøΩÔøΩ∆û-ÔøΩdÔøΩ%ÔøΩÔøΩÔøΩ%`&ÔøΩÔøΩÔøΩMÔøΩXÔøΩÔøΩ*}(ÔøΩ”âÔøΩÔøΩÔøΩÔøΩÔøΩ$1nÔøΩl◊î=.NÔøΩÔøΩÔøΩÔøΩhzÔøΩÔøΩÔøΩ5ÔøΩ-|ZpÔøΩZÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ/OÔøΩhÔøΩÔøΩÔøΩÔøΩ ÔøΩ8ÔøΩ`ÔøΩÔøΩ»ßJbÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ0ÔøΩ>RÔøΩ8 ∂ÔøΩÔøΩÔøΩÔøΩ~ek&ÔøΩOF;gÔøΩÔøΩÔøΩOÔøΩW.ÔøΩ~ÔøΩÔøΩÔøΩ‘êÔøΩÔøΩRÔøΩÔøΩ9ÔøΩÔøΩÔøΩÔøΩCÔøΩmÔøΩÔøΩLÔøΩÔøΩA ÔøΩÔøΩQuÔøΩÔøΩÔøΩÔøΩ{ÔøΩÔøΩ!ÔøΩÔøΩLÔøΩÔøΩ3ÔøΩ+Œ∑ÔøΩ∆•CÔøΩÔøΩYÔøΩÔøΩ[ÔøΩy∆óÔøΩÔøΩÔøΩ¬≤ÔøΩÔøΩÔøΩÔøΩÔøΩ`ÔøΩÔøΩÔøΩÔøΩ&-%5ÔøΩÔøΩZEqWÔøΩÔøΩDÔøΩ4≈∑ÔøΩ3QÔøΩvÔøΩ<ÔøΩFÔøΩÔøΩÔøΩÔøΩ/ÔøΩÔøΩGÔøΩbÔøΩÔøΩÔøΩoÔøΩ~ÔøΩ/.xÔøΩÔøΩÔøΩ]ÔøΩGÔøΩÔøΩÔøΩ ÔøΩQÔøΩÔøΩMÔøΩÔøΩ—πÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩN:enÔøΩ+ÔøΩÔøΩÔøΩÔøΩS,ZÔøΩ4o?+ÔøΩUzAÔøΩ#/kÔøΩﬂïÔøΩÔøΩHÔøΩÔøΩhÔøΩÔøΩ BÔøΩ#ÔøΩÔøΩ-1MÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩA*ÔøΩkVjB:%EÔøΩÔøΩ|ÔøΩÔøΩe ÔøΩÔøΩÀÖ/{ oÔøΩÔøΩgÔøΩ@ÔøΩÔøΩÔøΩÔøΩf+wÔøΩÔøΩ\2‘ñ”áÔøΩ-ÔøΩAÔøΩÔøΩÔøΩSÔøΩRÔøΩÔøΩh]rÔøΩPÔøΩÔøΩcQÔøΩG+ÔøΩCÔøΩÔøΩÔøΩÔøΩRÔøΩÔøΩBv ÔøΩÔøΩÔøΩ€ÆÔøΩÔøΩ<ÔøΩÔøΩÔøΩPÔøΩFÔøΩ7 ÔøΩÔøΩX>	:/ÔøΩ—ÆÔøΩÔøΩ4RÔøΩT+ÔøΩÔøΩ¬ëjÔøΩFŸ∑WÔøΩÔøΩ*ÔøΩWÔøΩuÔøΩÔøΩÔøΩ8ÔøΩÔøΩÔøΩKycC/ÔøΩt}ÔøΩÔøΩÔøΩ\ÔøΩÔøΩ#ÔøΩ 1ÔøΩÔøΩÔøΩ xÔøΩÔøΩlÔøΩdÔøΩÔøΩ	ÔøΩÔøΩÔøΩÔøΩ~ÔøΩGAZ–Üy’∂tÔøΩÔøΩÔøΩÔøΩ*VÔøΩsÔøΩÔøΩÔøΩÔøΩz6ÔøΩ$h-KÔøΩÔøΩvp1FÔøΩÔøΩÔøΩÔøΩoH>zÔøΩaÔøΩ*ÔøΩTÔøΩÔøΩÔøΩ;ÔøΩÔøΩSÔøΩÔøΩFÔøΩv}ÔøΩ%ÔøΩÔøΩPÔøΩÔøΩOÔøΩIciÔøΩI'ÔøΩÔøΩfÔøΩHÔøΩÔøΩÔøΩÔøΩQNÔøΩÔøΩÔøΩWnsÔøΩÔøΩÔøΩ4ÔøΩÔøΩÔøΩ9ÔøΩ8E]?k@‘ëuﬂ∂ÔøΩÔøΩ;)ÔøΩÔøΩ2ÔøΩÔøΩÔøΩÔøΩÔøΩ ^ÔøΩ+ÔøΩ^cÔøΩjÔøΩÔøΩvÔøΩFÔøΩlv\ÔøΩÔøΩMÔøΩÔøΩ6ÔøΩÔøΩ$IÔøΩ~uÔøΩÔøΩ?{ÔøΩÔøΩÔøΩÔøΩ0O{¬©ƒ¢""MÔøΩ3ÔøΩÔøΩPÔøΩÔøΩ't'ÔøΩv\EÔøΩÔøΩÔøΩÔøΩiÔøΩÔøΩÔøΩÔøΩÔøΩi\ÔøΩÔøΩ9ÔøΩGÔøΩ_V(ÔøΩFqÔøΩ4€æ hÔøΩz/OÔøΩWÔøΩCÔøΩ]hÔøΩÔøΩÔøΩ^ÔøΩ!ÔøΩc ÔøΩÔøΩÔøΩZÔøΩ./ÔøΩr&ÔøΩZÔøΩvÔøΩyÔøΩÔøΩ1ÔøΩÂéòÔøΩÔøΩÔøΩÔøΩÔøΩS-TLo#mÔøΩÔøΩÔøΩÔøΩÔøΩx&ÔøΩÔøΩÔøΩÔøΩÔøΩ[ÔøΩÔøΩzÔøΩyÔøΩ-ÔøΩÔøΩÔøΩ>ÔøΩÔøΩÕ°|ÔøΩ	ÔøΩdYB}4ÔøΩ0ÔøΩsÔøΩÃÄ5Eœ§ÔøΩ,ÔøΩÔøΩÔøΩÔøΩ	3ÔøΩÔøΩÔøΩwÔøΩ NÔøΩ ÷ùÔøΩPÔøΩÔøΩÔøΩÔøΩOÔøΩÔøΩÔøΩÔøΩz{ÔøΩ[x(Œ∫EÔøΩOÔøΩÔøΩsÔøΩÔøΩF5ÔøΩÔøΩyÔøΩkmÔøΩÔøΩnÔøΩnÔøΩ;ÔøΩÔøΩTÔøΩk|ÔøΩOo4gÔøΩ.nFÔøΩÔøΩÔøΩÔøΩ«åÔøΩÔøΩ	wh]WÔøΩHÔøΩ2ÔøΩ*ÔøΩM:mÔøΩ8ÔøΩÔøΩLÔøΩ…≤YÔøΩÔøΩÔøΩ*|ÔøΩEƒôÔøΩÔøΩÔøΩZÔøΩ÷ãOl⁄¶ƒÉ""ÔøΩÔøΩ/ÔøΩHxÔøΩ\ÔøΩcOÔøΩÔøΩgÃßsÔøΩÔøΩ1$ÔøΩ9QcsÔøΩÔøΩÀß""ÔøΩJYÔøΩfoÔøΩuÔøΩ7*>ÔøΩÔøΩÔøΩuÔøΩc ÔøΩ4ﬂ•1ÔøΩ[ÔøΩ	HÔøΩ1xÔøΩÔøΩÔøΩ0e4[ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ3ÔøΩ”≠ÔøΩ[/ÔøΩT—¥s5&`ÔøΩC‚Ç©ÔøΩqÔøΩhÔøΩBÔøΩ=(TÔøΩ6dÔøΩÔøΩX|ÔøΩ 'wÔøΩ]ƒπÔøΩÔøΩMÔøΩÔøΩBÔøΩÔøΩÔøΩÔøΩÔøΩ3QÔøΩÔøΩÔøΩÔøΩﬁÇ:ÔøΩLDÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩVDkyXÔøΩ^ÔøΩÔøΩÔøΩÔøΩÔøΩ8ÔøΩÔøΩ'ÔøΩÔøΩÔøΩIgÔøΩ'ÔøΩO^ÔøΩÔøΩDÔøΩÔøΩ◊õÔøΩl:ÔøΩ+ÔøΩÔøΩÔøΩÔøΩ=ÔøΩÔøΩÔøΩiÔøΩA/.^ÔøΩÔøΩÔøΩÔøΩ)u$ÔøΩ?ÔøΩ3<ÔøΩqÔøΩ+ÔøΩÔøΩÔøΩ{ÔøΩÔøΩÔøΩ{TduÔøΩ{ÔøΩa7ÔøΩ)IÔøΩÔøΩ-ÔøΩÔøΩÔøΩŒ≠ÔøΩcÔøΩÔøΩÔøΩWuÔøΩÔøΩÔøΩB 9G	ÔøΩ—úc{ÔøΩÔøΩÿíCÔøΩ/ÔøΩ\{ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩDÔøΩ.ÔøΩÔøΩ€ö	⁄õ&""wÔøΩÔøΩ{ÔøΩÔøΩÔøΩÔøΩÔøΩ2ÔøΩJÔøΩ~;ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ:*RÔøΩCW>ÔøΩÔøΩIÔøΩdÔøΩÔøΩ_◊òÔøΩÔøΩ;ÔøΩrX ÔøΩCÔøΩiw~ÔøΩÔøΩAÔøΩ#ÔøΩÔøΩÔøΩÔøΩœØ/ÔøΩJÔøΩ8ÔøΩqcÔøΩÔøΩÔøΩkÔøΩEF‰úÄÔøΩÔøΩyÔøΩ|ÔøΩ)ƒô»¨2ÔøΩÔøΩ{rÔøΩrÔøΩ]jGÔøΩÔøΩ cÔøΩWÔøΩ/ÔøΩ-ÔøΩÔøΩ ÔøΩÔøΩ„Ä¶J*:0AÔøΩÔøΩÔøΩsÔøΩÔøΩR?ÔøΩIY,*ÔøΩÔøΩ{OÔøΩ&bMC8ÔøΩÔøΩ÷•ÔøΩlÔøΩUCOÔøΩSAWÔøΩÔøΩfÔøΩÔøΩ {]BÔøΩÔøΩ3ÔøΩ6[QÔøΩFÔøΩÔøΩÔøΩ%ÔøΩÔøΩÔøΩÔøΩÔøΩY68Á°µ?yÔøΩ!ÔøΩÔøΩÔøΩcAtA4ÔøΩhÔøΩÔøΩ-ÔøΩÔøΩ}ÔøΩÔøΩÔøΩRÔøΩÔøΩr‚ü¥ÔøΩyÔøΩÔøΩÔøΩPÔøΩÔøΩÔøΩFdUÔøΩ,ÔøΩÔøΩÔøΩÔøΩ|ÔøΩÔøΩ)ÔøΩiÔøΩÔøΩ4ÔøΩÔøΩÔøΩKÔøΩÔøΩ`ÔøΩÔøΩÔøΩÔøΩaÔøΩÔøΩÔøΩÔøΩkÔøΩÔøΩÔøΩzÔøΩNÔøΩv&ÔøΩbÔøΩ+$ÔøΩÔøΩÔøΩ‘óÔøΩÔøΩ◊µÔøΩÔøΩ?Q{MÔøΩÔøΩ úSÔøΩÔøΩÔøΩ9ÔøΩygSWÔøΩÔøΩ9ÔøΩ8ÔøΩÔøΩÔøΩlÔøΩ ÔøΩJÔøΩ'ÔøΩÔøΩ8<ÔøΩS{ÔøΩw3}""UÔøΩPÔøΩÔøΩ;ÔøΩÔøΩÔøΩÔøΩÔøΩ9=ÔøΩ_ÔøΩÔøΩ""ÔøΩÔøΩ:ÔøΩnÔøΩÔøΩ*ÔøΩ1ÔøΩÔøΩ3ÔøΩÔøΩ3ÔøΩmÔøΩÔøΩ{ÔøΩÔøΩÔøΩlpgÔøΩ6=ÔøΩÔøΩ>ÔøΩÔøΩvgÔøΩÔøΩÔøΩGC ($+C-TÔøΩÔøΩSb=ÔøΩI}ZÔøΩÔøΩ|PÔøΩÔøΩuÔøΩÔøΩÔøΩÔøΩƒóÔøΩÔøΩÔøΩwÔøΩ}9ÔøΩÔøΩ4ÔøΩÔøΩR,`@ÔøΩÔøΩdsÔøΩ,;ÔøΩqDÔøΩÔøΩ.jÔøΩÁé´XÔøΩÔøΩvÔøΩÔøΩÔøΩÔøΩlÔøΩÔøΩ<ÔøΩ{ÔøΩqÔøΩÔøΩqÔøΩ9ÔøΩmMÔøΩÔøΩ:gRAKÔøΩÔøΩEnÔøΩ:{H ÔøΩ‹óÔøΩpÔøΩ#9ÔøΩUD.ÔøΩ⁄∑ÔøΩP ¶)ÔøΩÔøΩÔøΩcm|ÔøΩMÔøΩ ÔøΩÔøΩuÔøΩ ÔøΩ[3^NPDw#√âÔøΩSÔøΩÔøΩ=!ÔøΩÔøΩ5VÔøΩHÔøΩnÔøΩÔøΩ^ÔøΩaFÔøΩOIS2ÔøΩÔøΩÔøΩÔøΩZÔøΩÔøΩÔøΩ◊£ÔøΩ—ü} ÔøΩ6ÔøΩwÔøΩÔøΩ-ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩoLÔøΩWAÔøΩÔøΩZÔøΩÔøΩ9ÔøΩQLD:ÔøΩÔøΩTNÔøΩEÿüÔøΩ	eTÔøΩÔøΩÔøΩÔøΩÔøΩHUÔøΩVhUÔøΩÔøΩÔøΩÔøΩÔøΩ[F„ÄædÔøΩJMÔøΩf}ÔøΩÔøΩÔøΩÔøΩIÿÇÔøΩÔøΩFiÔøΩÔøΩGÔøΩÔøΩ`7'^ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÊ†í0ÔøΩÔøΩlB3ÔøΩÔøΩ# ÔøΩ'{1ÔøΩ0ÔøΩÔøΩÔøΩ_ÔøΩ{ÔøΩ3eÔøΩjÔøΩÔøΩÔøΩ ÔøΩÔøΩ$ÔøΩÔøΩXÔøΩm7ÔøΩ)RÔøΩÔøΩ|ÔøΩFÔøΩÔøΩIÔøΩ7pÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ≈ô^ÔøΩlÔøΩ|2ÔøΩxFÔøΩPÔøΩ7YRÔøΩÔøΩqÔøΩnÔøΩÔøΩÔøΩ`ÔøΩ^hÿ¨cÔøΩvWÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ`ÔøΩÔøΩ6ÔøΩ~ÔøΩÔøΩ(7ÔøΩÈç°ÔøΩÔøΩwÔøΩj75IÔøΩ+lœ§hÔøΩÔøΩ=ÔøΩ^t:^%x6ÔøΩÔøΩÔøΩ$ÔøΩJY?ÔøΩ]ÔøΩSÔøΩ◊ä""ÔøΩÔøΩÀ´JÔøΩ\ÔøΩSÔøΩÔøΩÔøΩÔøΩbaz%z\ÔøΩSÔøΩmÔøΩÔøΩÔøΩjÔøΩ8dÔøΩQT0.?ÔøΩÔøΩTÔøΩIBÔøΩÔøΩÔøΩ~ÔøΩ}ÔøΩÔøΩÔøΩÿãSÔøΩ*ÔøΩÔøΩ4⁄ñÔøΩzÔøΩÔøΩÔøΩLw>ÔøΩ7«∑ÔøΩyÔøΩÔøΩÔøΩ9ÔøΩÔøΩÔøΩÔøΩaIÔøΩÔøΩ ,wÔøΩYÔøΩ1ÔøΩÔøΩ_bÔøΩÔøΩ+|ÔøΩKÔøΩVÔøΩ.b	A ~fÔøΩÔøΩÔøΩ*ÔøΩu[ÔøΩÔøΩddGÔøΩ[ÔøΩkÔøΩÔøΩ3ÔøΩ 1yÔøΩÔøΩ endstream endobj 22 0 obj << /Filter /FlateDecode /Length1 1735 /Length2 11702 /Length3 0 /Length 12813 >> stream xÔøΩÔøΩÔøΩPÔøΩÔøΩc-ÔøΩRÔøΩÔøΩÔøΩÔøΩÔøΩ,Hp/ÔøΩÔøΩ›°≈ãÔøΩÔøΩÔøΩ@qw ÔøΩHÔøΩGÔøΩ=ÔøΩÔøΩ?ÔøΩ}ÔøΩÔøΩd?ÔøΩÔøΩ^ÔøΩÔøΩ3ÔøΩyÔøΩÔøΩÔøΩ""a	1ÔøΩBÔøΩ,ÔøΩÔøΩ )I=v ;;+;;' ÔøΩjÔøΩÔøΩÔøΩFÔøΩÔøΩ ÔøΩ8 ÔøΩÔøΩBÔøΩÔøΩÔøΩ»§ÔøΩÔøΩCÔøΩ#@ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩdgpÔøΩÔøΩÔøΩÔøΩÔøΩ""ÔøΩÔøΩÔøΩ-*ÔøΩ EÔøΩ#ÔøΩÔøΩF ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ@oÔøΩ ÔøΩÔøΩcÔøΩÔøΩ ÔøΩ r[ *@ÔøΩ ÔøΩÔøΩ%ÔøΩÔøΩÔøΩ	ÔøΩ ÔøΩÔøΩ^ÔøΩÔøΩ^ÔøΩ udcÔøΩÔøΩÔøΩ`:ÔøΩÔøΩB\ÔøΩEÔøΩ`ÔøΩ @ÔøΩ rqYÔøΩhÔøΩ t ÔøΩÔøΩ+ @ÔøΩÔøΩÔøΩÔøΩBbÔøΩ ÔøΩÔøΩ /{ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩxÔøΩÔøΩTPÔøΩs9ÔøΩeÔøΩÔøΩÔøΩ3ÔøΩÔøΩÔøΩpÔøΩrÔøΩ7ÔøΩÔøΩÔøΩ;ÔøΩÔøΩÔøΩÔøΩÔøΩ88ÔøΩÔøΩÔøΩÔøΩ +ÔøΩ=ÔøΩNVÔøΩÔøΩ	e -ÔøΩ0⁄ªB^ÔøΩÔøΩÔøΩ@ÔøΩ=ÔøΩÔøΩÔøΩÔøΩÔøΩ“Å Y	u ÔøΩ√øÔøΩsÔøΩp;A]Y]ÔøΩÔøΩÔøΩÔøΩÔøΩGÔøΩÔøΩkÔøΩqÔøΩÔøΩÔøΩ88ÔøΩÔøΩÔøΩ(ÔøΩ' vYÔøΩ‹ªÔøΩÔøΩ√µsÔøΩx8ÔøΩÔøΩYÔøΩ-ÔøΩÔøΩhÔøΩÔøΩÕâMÔøΩÔøΩÔøΩRÔøΩÔøΩÔøΩÔøΩEÔøΩÔøΩÔøΩ∞≥≥ÔøΩÔøΩÔøΩ@ÔøΩ ÔøΩÔøΩÔøΩ ÔøΩ	ÔøΩÔøΩÔøΩ@*9ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩqXÔøΩÔøΩÔøΩ[ÔøΩ^~P|\ÔøΩÔøΩ  ÔøΩÔøΩ ÔøΩÔøΩÔøΩoÔøΩÔøΩ""ÔøΩ%ÔøΩ 0YÔøΩQÔøΩÔøΩÔøΩ""YÔøΩÔøΩ_ÔøΩÔøΩÔøΩÔøΩÔøΩ–èÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩYBÔøΩÔøΩÔøΩ1ÔøΩsÔøΩl⁄íJjÔøΩÔøΩÔøΩnÔøΩÔøΩJIIÔøΩ'ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ7ÔøΩÔøΩwÔøΩÔøΩUpÔøΩÔøΩ ÔøΩ*ÔøΩÔøΩÔøΩSÔøΩÔøΩÔøΩÔøΩÔøΩ{A ÔøΩKÔøΩÔøΩ\ÔøΩÔøΩÔøΩÔøΩÔøΩ[ÔøΩ|qÔøΩÔøΩÔøΩÔøΩ.ÔøΩÔøΩXÔøΩGÔøΩÔøΩWÔøΩÔøΩﬂädÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩeÔøΩÔøΩÔøΩ:ÔøΩÔøΩÔøΩÔøΩÔøΩxaÔøΩÔøΩeT /ÔøΩÔøΩÔøΩMuAÔøΩÔøΩ$ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ]ÔøΩpÔøΩÔøΩÔøΩÔøΩ5ÔøΩ]eÔøΩÔøΩ K50ÔøΩÔøΩÔøΩ/ÔøΩÔøΩ%ÔøΩÔøΩcÔøΩÔøΩÔøΩÔøΩ 5ÔøΩ+ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩt/ÔøΩeaÔøΩÔøΩ|ÔøΩÔøΩpÔøΩOÔøΩeyÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩ-ÔøΩ|ÔøΩ0ÔøΩÔøΩÔøΩÔøΩ2ÔøΩÔøΩÔøΩÔøΩxYGKÔøΩÔøΩ,ÔøΩÔøΩ:BÔøΩ/.ÔøΩÔøΩÔøΩÔøΩ VÔøΩ?&ÔøΩÔøΩ`ÔøΩÔøΩCÔøΩ'ÔøΩgÔøΩÔøΩÔøΩ	ÔøΩÿÄÔøΩ  ÔøΩÔøΩÔøΩÔøΩÔøΩYÔøΩr ÔøΩ@ÔøΩÔøΩÔøΩ 6ÔøΩÔøΩÔøΩ,ÔøΩA^ ÔøΩÔøΩÔøΩÔøΩKÔøΩÔøΩÔøΩDÔøΩÔøΩ.ÔøΩ9ÔøΩÔøΩ$ÔøΩÔøΩrÔøΩÿæÔøΩÔøΩÔøΩÔøΩcÔøΩÔøΩ7ÔøΩÔøΩdÔøΩGÔøΩÔøΩÔøΩ/2ÔøΩWÔøΩRÔøΩÔøΩ!ÔøΩÍÉÉÔøΩÔøΩÔøΩ/ÔøΩRÔøΩÔøΩÔøΩÔøΩÔøΩ?ÔøΩ/lfÔøΩ⁄∏ÔøΩÔøΩIÔøΩ2%6ÔøΩÔøΩ_/ÔøΩÔøΩÔøΩ9_<ÔøΩÔøΩÔøΩÔøΩ3D7ÔøΩÔøΩÔøΩÔøΩÔøΩÀÑÔøΩÔøΩÔøΩ|7A OÔøΩÔøΩÔøΩÔøΩB(ƒ∂.ÔøΩÔøΩFÔøΩ‘ÉeoRdÔøΩfO7ÔøΩÔøΩÔøΩg…•ÔøΩÔøΩ1ÔøΩÔøΩ:ÔøΩÔøΩÔøΩÀçDÔøΩhÔøΩÔøΩÔøΩÔøΩÔøΩ2≈£ÔøΩIkbx[ÔøΩzÔøΩÔøΩÔøΩoÔøΩÔøΩÔøΩÔøΩvÔøΩoÔøΩCSÔøΩ'ÔøΩÔøΩdÔøΩoXÔøΩÔøΩÔøΩ}ÔøΩ}uÔøΩÔøΩÔøΩ[aÔøΩiÔøΩÔøΩÔøΩ1ÔøΩ qo=ÔøΩ<ÔøΩÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩyÔøΩPÔøΩœ≤ÔøΩjÔøΩÔøΩ|ÔøΩ)0œô'ÔøΩ| e!CbƒπÔøΩÔøΩÔøΩz}3ÔøΩÔøΩ7ÔøΩLÔøΩÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩÔøΩÔøΩ`ÔøΩ3ÔøΩnÔøΩ{ÔøΩRÔøΩ”µÔøΩÔøΩÔøΩÿÄÔøΩÔøΩg|ÔøΩÔøΩGÔøΩ0UÔøΩp—ßÔøΩSÃÜÔøΩb._‰áëÂêÅÔøΩy%bJ5""ÔøΩÔøΩ2ÔøΩÔøΩ@ÔøΩn\ÔøΩ<ÔøΩ,{ÔøΩ)U -E=ÔøΩO(MÔøΩÔøΩUÔøΩgÔøΩÔøΩR”ú7ÔøΩÔøΩÔøΩG*2ÔøΩD=XKÔøΩÔøΩ^ÔøΩÔøΩ3ÔøΩnFÔøΩÔøΩDÔøΩÔøΩÔøΩÔøΩ7""ÔøΩÔøΩ]9ÔøΩÔøΩÔøΩÔøΩ^ÔøΩU gÔøΩ_ÔøΩXÔøΩÔøΩS-ÔøΩÔøΩ#ÔøΩÔøΩÔøΩ,ÔøΩÔøΩuÔøΩm(ÔøΩ1|.`ÔøΩÔøΩÔøΩÔøΩ6ÔøΩÔøΩÔøΩÔøΩh]p ’ìÔøΩPmÔøΩÔøΩ\ÔøΩÔøΩ0ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩxÔøΩQÔøΩÔøΩÔøΩkÔøΩÔøΩi,ÔøΩ.ÔøΩÔøΩÔøΩi(ÔøΩWRﬂèfNBIÔøΩÔøΩ9ÔøΩ#ÔøΩÔøΩÔøΩÔøΩxÔøΩoÔøΩÔøΩtÔøΩÔøΩÔøΩ-ÔøΩNﬂæÔøΩ√ò{ÔøΩÔøΩÔøΩ^.ÔøΩÔøΩ~ÔøΩsÔøΩÔøΩÔøΩ-ÔøΩj<≈öÔøΩ`:=ÔøΩF,;hÔøΩÔøΩ,Wr$ÿ¨MÔøΩV,ÔøΩd`ÔøΩaÔøΩ6lÔøΩ[ÔøΩXÔøΩNCjÔøΩÔøΩÔøΩIÔøΩ'ÿÉ*ÔøΩÔøΩRÔøΩfÔøΩVz(ÔøΩq‘êzÔøΩmÔøΩÔøΩ3'ÔøΩ	zlÔøΩ?ÔøΩ0ÔøΩÔøΩÔøΩÔøΩ:kP>NWÔøΩRÔøΩÔøΩÔøΩÔøΩÔøΩ5ÔøΩÔøΩ=ÔøΩ2P PÔøΩÔøΩHpÔøΩÔøΩÔøΩ%ÔøΩXXÔøΩÔøΩ)DÔøΩ9√™ÔøΩRÔøΩ3W„å§ÔøΩÔøΩd:ÔøΩd;◊∞ÔøΩ}ÔøΩwWZ*ÔøΩÔøΩÔøΩ!e(_ÔøΩ;ÔøΩ	ÔøΩ$*H,ÔøΩÔøΩÔøΩ	 ;MÔøΩÔøΩhÔøΩeÔøΩÔøΩÔøΩtÔøΩ?ﬁâÔøΩÔøΩEÔøΩB[XeÔøΩÔøΩzWtÔøΩÔøΩÔøΩrUkÔøΩÔøΩ)QÔøΩÔøΩÔøΩS^ ÔøΩ`ÔøΩÔøΩK,ÔøΩu-ÔøΩÔøΩRVÔøΩÔøΩBOSG=ÔøΩgÔøΩ""ÔøΩyPÔøΩQeeÔøΩ%uwÔøΩ9B5ÔøΩÔøΩ> ÔøΩs26ÔøΩÔøΩÔøΩÔøΩ:aFÔøΩ/ÔøΩÔøΩÔøΩÔøΩ^ÔøΩÔøΩÔøΩ%DÔøΩÔøΩJÔøΩ–£ÔøΩd{ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩxÔøΩ,ÔøΩkÔøΩÔøΩÔøΩR$ÔøΩ)ÔøΩÔøΩÔøΩÔøΩÔøΩuÔøΩ}v:HÔøΩRÔøΩ$pÔøΩ8ÔøΩ}ÔøΩaÔøΩ80ÔøΩ:’∫ÔøΩÔøΩÔøΩÔøΩ&ÔøΩÔøΩa ""ÔøΩ2ÔøΩwrÔøΩ∆î	6}ÔøΩoeB[lÔøΩ/o<ÔøΩ9€©ÔøΩÔøΩÔøΩlQÔøΩF?ÔøΩhÔøΩ|WFLN2ÔøΩÔøΩÔøΩÔøΩ+1{ÔøΩÔøΩdÔøΩKÔøΩÔøΩmÔøΩÔøΩ]ÔøΩUÔøΩÔøΩ<ÔøΩ^mÔøΩ4ÔøΩÎë≠ÔøΩEE RÔøΩ,ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩdÔøΩ=ÔøΩ Î≥ÜÔøΩÔøΩÔøΩswÔøΩÔøΩxÔøΩ~ÔøΩ=ÔøΩxÔøΩYS}ÔøΩÔøΩS{ÔøΩC%-]ÔøΩcÔøΩÔøΩYÔøΩÔøΩztHÔøΩÔøΩ!ÔøΩÔøΩZkÔøΩ=ÔøΩ#ÔøΩÔøΩ@ÔøΩÔøΩqÔøΩÔøΩÔøΩÔøΩÔøΩ“èFÔøΩ‘º$ÔøΩLAÔøΩ2QTC-1*ÔøΩNÔøΩ—ßÔøΩXÔøΩo)WoÔøΩ]3nÔøΩÔøΩzs—ï|ÔøΩÔøΩNÔøΩÔøΩrÔøΩÔøΩÔøΩÔøΩ:ÔøΩÔøΩÔøΩ}ÔøΩUÔøΩ]ÔøΩYÔøΩÔøΩÔøΩ[ÔøΩ\ÔøΩ=ÔøΩhbÔøΩÔøΩt,ÔøΩjÔøΩŸç…ëdÔøΩ}8ÔøΩÔøΩ|ÔøΩÔøΩ|ÔøΩÔøΩÔøΩ>ÔøΩÔøΩMŸóƒÜ'|ÔøΩ\ÔøΩLzÔøΩÔøΩÔøΩ(ÔøΩÓãÆÔøΩ~ÔøΩÔøΩÔøΩÔøΩ”õ>;ÔøΩÔøΩa8ÔøΩ']'ÔøΩÔøΩUB2ÔøΩoiÔøΩYÔøΩÔøΩÔøΩÔøΩEÔøΩFeÔøΩÔøΩÔøΩÔøΩ5`ÔøΩbÔøΩB 6ÔøΩ\ÔøΩ|yRTJZx(ÔøΩÔøΩ3vUcvÔøΩÔøΩ.ÔøΩÔøΩLÔøΩHÔøΩÔøΩÔøΩ3ÔøΩ+_ZÔøΩ2%'ÔøΩÔøΩuuvÔøΩÔøΩ9ÔøΩÕ°ÔøΩdÔøΩÔøΩeC_ÔøΩÔøΩf(ÔøΩÔøΩuÔøΩDÔøΩÔøΩ2jÔøΩÔøΩ √àÔøΩÔøΩÔøΩÔøΩ7ÔøΩtgÔøΩzÔøΩ""ÔøΩ!ÔøΩ'ÔøΩÔøΩÔøΩÔøΩÔøΩVÔøΩge)ÔøΩÔøΩ_K≈ß |ÔøΩ(SÔøΩ!hÔøΩFÔøΩuÔøΩVÔøΩÔøΩÔøΩÔøΩ'E[ÔøΩnÔøΩÔøΩ(ÔøΩËø∂=ÔøΩtÔøΩ-ÔøΩbÔøΩÔøΩÔøΩzÔøΩƒúÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ~ ÔøΩÔøΩM0gÔøΩÎ¥∫ÔøΩxÔøΩÔøΩÔøΩﬁìÔøΩ@hGÔøΩ#ÔøΩC+ÔøΩÔøΩ/:ÔøΩj""ÔøΩ÷îÔøΩoÔøΩÔøΩÔøΩUÔøΩ-ÔøΩEÔøΩIÔøΩÔøΩPÔøΩÔøΩOÔøΩÔøΩÔøΩ[ÔøΩÔøΩK4ÔøΩgX@pYÔøΩ~ÔøΩOwÔøΩ&ÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩn;ÔøΩÔøΩ@7ÔøΩƒÄÔøΩ“∂ÔøΩ4WÔøΩ'7ÔøΩP ÔøΩÔøΩÔøΩÔøΩ?KÔøΩ %ZÔøΩ]&ZÔøΩ}ÔøΩ+ÔøΩﬂÇ ÔøΩ1uÔøΩd[7ÔøΩÔøΩÔøΩ]ÔøΩÔøΩoCÔøΩÔøΩ	ÔøΩœé}RÔøΩTÔøΩTZÔøΩ6VÔøΩ+ÔøΩÔøΩ""ÔøΩÔøΩcÔøΩÔøΩÔøΩÔøΩÔøΩhnÔøΩ ÔøΩÔøΩ#ÔøΩﬂëÔøΩÔøΩdwBfeÔøΩxqgÔøΩÔøΩ|u`eÔøΩÔøΩÔøΩÔøΩyŸäÔøΩÔøΩÔøΩ8GÔøΩ=KÔøΩÔøΩÔøΩÔøΩÔøΩ2CÔøΩD8ÔøΩÔøΩÔøΩÔøΩÔøΩhP[>T$ÔøΩAÔøΩ5ÔøΩmÔøΩO!ÔøΩÔøΩ[bÔøΩÔøΩÔøΩÔøΩxjÔøΩ`ÔøΩÔøΩÔøΩÈìèÔøΩ+ÔøΩ:ÔøΩÔøΩF6vÔøΩÔøΩÔøΩÔøΩœØ6ÔøΩÔøΩÔøΩ(^ÔøΩe ÔøΩÔøΩ3ÔøΩÔøΩ""ÔøΩTU Qw/ÔøΩÔøΩÔøΩnÔøΩÔøΩ^ÔøΩÔøΩÔøΩ	pÔøΩg ÔøΩÔøΩ9ÔøΩ07^ÔøΩE|>ÔøΩ–¶ÔøΩﬁªÔøΩvÔøΩN_lÔøΩÔøΩ3-ÔøΩÔøΩÔøΩÔøΩhÔøΩ€úÔøΩÔøΩÔøΩk""-ÔøΩÔøΩÔøΩjÔøΩ[SÔøΩÔøΩÔøΩhÔøΩpÔøΩ.ÔøΩÔøΩÔøΩÔøΩÔøΩ6zZÔøΩoÔøΩÔøΩÔøΩÔøΩ›ûÔøΩÔøΩVQÔøΩnP^	ÔøΩzÔøΩ4K&ÔøΩÔøΩÔøΩÔøΩÔøΩ2ÔøΩÔøΩ8ÔøΩkE$] ;ÔøΩÔøΩZ)ÔøΩÔøΩC(ÔøΩÔøΩÔøΩ*1WlÔøΩE\ÔøΩdÔøΩ6ÔøΩRÃæ_CÔøΩÃ≠ZQÔøΩ ÔøΩX‹êÔøΩÔøΩÔøΩk4O,ÔøΩÔøΩ6^owÔøΩtÔøΩhÔøΩ|ÔøΩW@ÔøΩ’≤j%]ÔøΩANFÔøΩ~ÔøΩÔøΩÔøΩF”µtÔøΩVÔøΩ97ÔøΩÔøΩÔøΩÔøΩRÔøΩ{ÔøΩÔøΩ`ÔøΩxkÔøΩ_ÔøΩÔøΩQ!ÔøΩÔøΩÔøΩÔøΩmIÔøΩÔøΩÔøΩÔøΩaÔøΩMÔøΩ%ÔøΩÔøΩÔøΩQÔøΩÔøΩnÔøΩ3ÔøΩJÔøΩ-ÔøΩÔøΩÔøΩƒπÔøΩÔøΩ‘≠ÔøΩ5@gÔøΩ$ÔøΩÔøΩqÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩOÔøΩÔøΩÔøΩÔøΩÔøΩwOÔøΩÔøΩÔøΩMÔøΩÔøΩÔøΩÔøΩ”≠3zÔøΩ*e5ÔøΩ 1U8ÔøΩJÔøΩqÔøΩ(NqÔøΩÔøΩÔøΩÔøΩ.ÔøΩehÔøΩÔøΩÔøΩkÔøΩÔøΩÔøΩ}ÔøΩ2ÔøΩÔøΩ,ÔøΩÔøΩMÔøΩx?ÔøΩYÔøΩ0ÔøΩÔøΩ8MÔøΩÔøΩ^|ÔøΩÔøΩÔøΩÔøΩoÔøΩkÔøΩ""ÔøΩFÔøΩÔøΩhÔøΩLÔøΩCÔøΩsTgﬂàÔøΩÔøΩÔøΩÔøΩÔøΩUJ ÜwÔøΩ3+ÔøΩ|uÔøΩ~ÔøΩÔøΩqÔøΩÔøΩ 	 ÔøΩ`ÔøΩÔøΩÔøΩpÔøΩxnq)ÔøΩÔøΩÔøΩ.uÔøΩÔøΩ {cC”≠ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩcÔøΩrÔøΩÔøΩ_€∂^&ﬁáÔøΩ'DÔøΩÔøΩnÔøΩÔøΩN€ÄÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩ&ÔøΩÔøΩÈ∞âÔøΩX÷æJÔøΩ5ÔøΩy}ÿ∫ÔøΩWÔøΩ]\XÔøΩÔøΩjÔøΩÔøΩÔøΩ|Gd8ÔøΩ8ij$ÔøΩÔøΩ""<ÔøΩ&ÔøΩÔøΩÔøΩHÔøΩÔøΩÔøΩÔøΩaÔøΩÔøΩs^ÔøΩÔøΩ2ÔøΩ,ÔøΩ8#ÔøΩ]ÔøΩﬁπÔøΩDHÔøΩÔøΩi\ÔøΩÔøΩÔøΩÔøΩ%ÔøΩÔøΩÔøΩ.ÔøΩeÎ†£ÔøΩ)E1ÔøΩÔøΩÔøΩÔøΩRrÔøΩ?ÔøΩÔøΩÔøΩÔøΩÔøΩ6fÔøΩÔøΩt^ÔøΩÔøΩo>ÔøΩÔøΩ‚ñûiÔøΩÔøΩ—í,ÔøΩ ÔøΩÔøΩ ÔøΩf,.ÔøΩÔøΩKÔøΩ€ùaÔøΩgÔøΩÔøΩYjÔøΩU ECPÔøΩÔøΩÔøΩÔøΩEt4WDÔøΩÔøΩWnpÔøΩ@ÔøΩ<ÔøΩr`ÔøΩc2  _ÔøΩÔøΩÔøΩSÔøΩÔøΩyPÔøΩÔøΩÔøΩÔøΩÔøΩXGsÔøΩ5UÔøΩÔøΩ?ÔøΩÔøΩ6]H%_AÔøΩ ÔøΩjÔøΩÔøΩvÔøΩ‘ÖJ	HÔøΩﬁæ2ÔøΩ]TÔøΩÔøΩ‘ähÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩ8L€ü@ÿæ{ÔøΩÔøΩÔøΩÔøΩU:LW ÔøΩÔøΩÔøΩÔøΩbÔøΩML”ôÔøΩÔøΩÔøΩÔøΩyQÔøΩÔøΩËÅ¥(ÔøΩDÔøΩÔøΩQ[Ãº'lÔøΩÔøΩÔøΩÔøΩ9ÔøΩÔøΩ4ÔøΩÔøΩÔøΩTÔøΩÔøΩÔøΩÔøΩÔøΩiQ_ÔøΩÔøΩÔøΩBÔøΩÔøΩÔøΩF&ÔøΩÔøΩÔøΩ492NÔøΩÔøΩÔøΩ}ÔøΩÔøΩnÔøΩ&`JÔøΩÔøΩÔøΩPÔøΩÔøΩxÔøΩÔøΩÔøΩ`dÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩCÔøΩfÃ§ÔøΩÔøΩÔøΩÔøΩLK#ÔøΩJvÔøΩÔøΩÔøΩ<ÔøΩÔøΩÔøΩc ÔøΩÔøΩ_~ÀÑÔøΩ0ÔøΩb8√¨ÔøΩÃßÔøΩ ÔøΩmÔøΩ8ZsÔøΩÔøΩÔøΩ&dÔøΩ>NbÔøΩs[AÔøΩFL9ÔøΩ4ÔøΩnÔøΩ ÔøΩ `HTÔøΩoﬂπ3ÔøΩÔøΩÔøΩÔøΩVÔøΩÔøΩmOÔøΩd*%[ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ+ÔøΩÔøΩSjvi(ÔøΩÔøΩ}ÔøΩviÔøΩﬂíÔøΩÔøΩIÔøΩEÔøΩÔøΩÔøΩÔøΩÔøΩ5)ZNœñÔøΩÔøΩÔøΩÔøΩIÔøΩ ÔøΩ>ÔøΩ'	v/kÔøΩ)OÔøΩÔøΩÔøΩÔøΩÔøΩ}gÔøΩÔøΩÔøΩÔøΩgÔøΩM|ÔøΩÔøΩÔøΩÀ≤8“¥ÔøΩÔøΩÔøΩ}MÔøΩXG+ÔøΩ›Å«õÔøΩ{iB|ÔøΩ4ÔøΩvBÔøΩ;ÔøΩhÔøΩÔøΩfgPÔøΩb?dÔøΩÔøΩ=ÔøΩÔøΩ@ÔøΩy ÔøΩÔøΩ	JŸåÔøΩÔøΩzX5·æ´^SÔøΩnÔøΩ{ÔøΩÔøΩ6vÔøΩÔøΩÔøΩ:ÔøΩsÔøΩÔøΩÔøΩÔøΩG8JÔøΩmÔøΩ9ÔøΩ?JÔøΩÔøΩÔøΩpÔøΩ`ÔøΩÔøΩÔøΩÔøΩ|K`ÔøΩÔøΩÔøΩDÔøΩNÔøΩ:ÔøΩÔøΩzÔøΩÔøΩÔøΩÔøΩœÜÔøΩÔøΩÔøΩzÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩ6ÔøΩÔøΩÔøΩÔøΩ5ÔøΩÔøΩbMÔøΩz ÔøΩcÔøΩÔøΩÔøΩÔøΩGd[ÔøΩÔøΩÔøΩNU0ÔøΩ«çÔøΩH:5ÔøΩÔøΩMÔøΩÔøΩjfrÔøΩ?ÔøΩ1ÔøΩÔøΩIÔøΩ8ÔøΩuGÃ∑OÔøΩÔøΩc«µÔøΩÔøΩÔøΩ)c-ÔøΩaAZzIÔøΩÔøΩÔøΩ~ÔøΩ""ÔøΩÔøΩF&◊âÔøΩt`ÔøΩÔøΩÔøΩÔøΩEÔøΩÔøΩgÔøΩMKÔøΩN1ÔøΩMÔøΩÔøΩ6Ã©OÔøΩ?ÔøΩhÔøΩ}C4ÔøΩ≈àb=ÔøΩÔøΩCÔøΩÔøΩÔøΩzÈî∑ÔøΩBw15WÔøΩÔøΩ{ÔøΩ0ÔøΩÔøΩ=mi	ÔøΩÔøΩU÷ôÔøΩÔøΩÕ∂»¶lCÔøΩ%ÔøΩQÔøΩ1ÔøΩnÔøΩ\ÔøΩÔøΩÔøΩÔøΩÔøΩ^ÔøΩÔøΩq0JÔøΩÔøΩÔøΩRÔøΩÔøΩ7ÔøΩbÔøΩZ'M1ÔøΩÔøΩÔøΩÔøΩ;ÔøΩ/ÔøΩ!ÔøΩ/sÔøΩ;R>ÔøΩÔøΩÔøΩY>BÔøΩÔøΩiÔøΩFÔøΩÔøΩÔøΩXM3ÔøΩÔøΩÔøΩÔøΩXÔøΩÔøΩ=ÔøΩlÔøΩgÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩÔøΩ%\ÔøΩÔøΩkrÔøΩ0lNÔøΩÔøΩ}4ÔøΩ)dKBU–§}tÔøΩ4AÔøΩ""ÔøΩÔøΩcÔøΩcÔøΩÔøΩ>?ÔøΩL|l6ÔøΩSÔøΩÔøΩEÔøΩÔøΩei;ÔøΩo vÔøΩƒÖÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ<:ÔøΩR&ÔøΩ!-ÔøΩb%ÔøΩÔøΩÔøΩÔøΩ Z>ÔøΩBÔøΩYÔøΩÔøΩXÔøΩuÔøΩCKtGLoÔøΩ≈ΩÔøΩÔøΩ5OÔøΩ∆∞œìÔøΩÔøΩÔøΩÔøΩrÔøΩÔøΩÔøΩ<ÔøΩ""ÔøΩJocÔøΩ\›¢ÔøΩ-ÔøΩÔøΩD\ÔøΩÔøΩjÔøΩÔøΩ.ÔøΩ;ÔøΩSÔøΩut-ÔøΩÔøΩVx1ÔøΩÔøΩgÔøΩVOÔøΩOfnQ5ÔøΩÔøΩm4◊îZwcZÔøΩ_ÔøΩ.ﬁóÔøΩDÔøΩ4⁄∑ÔøΩoÔøΩ^ÔøΩÔøΩ<ÔøΩÔøΩÔøΩ*ÔøΩ4ÔøΩÔøΩ4ÔøΩÔøΩÊø¢ÔøΩÔøΩÔøΩ'|ÔøΩ_ÔøΩ.ÔøΩ(ÔøΩ5=ÔøΩZuÔøΩÔøΩz,XÔøΩÔøΩÔøΩÔøΩAÔøΩ,ÔøΩŸö8ÔøΩÔøΩWBÔøΩÔøΩÔøΩÔøΩCPMp;NCÔøΩÔøΩÔøΩÔøΩÔøΩbÔøΩÔøΩÔøΩqyÔøΩÔøΩgÔøΩ4]CÔøΩuJilBÔøΩƒéÔøΩÔøΩoU)ÔøΩoIÔøΩK8uÔøΩxÔøΩQÔøΩ8 ÔøΩÔøΩm7ÔøΩÔøΩtÔøΩÔøΩÔøΩlEÔøΩ#.ÔøΩ\ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩMÔøΩÔøΩÔøΩŒªÔøΩ*UÔøΩÔøΩfÔøΩkS$SÔøΩÔøΩ|ÔøΩ–®ÔøΩÔøΩ,rczÔøΩÔøΩÔøΩÔøΩLrÔøΩÔøΩHVÔøΩÔøΩ.ÔøΩ2r	+@ÔøΩÔøΩ8ÔøΩÔøΩÔøΩyÔøΩF«¢ÔøΩ4$wÔøΩÔøΩ:ÔøΩÔøΩÔøΩeeÔøΩ ÏÄ£ÔøΩEÔøΩÔøΩÔøΩ%ÔøΩ*ÔøΩÔøΩ,11ÔøΩbÔøΩÔøΩÔøΩ÷ìÔøΩÔøΩÔøΩJÔøΩsÔøΩuÔøΩÔøΩÔøΩfÔøΩYÔøΩgÔøΩÔøΩÔøΩtÔøΩoÔøΩÔøΩiÔøΩ]	EÔøΩ4uÔøΩÔøΩb4gGKÔøΩuÃïlÔøΩÔøΩÔøΩÔøΩ7ÔøΩ	3ÔøΩrEÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ’´ÔøΩ92ÔøΩÔøΩuÔøΩEÔøΩÔøΩXÔøΩ«ëcÔøΩCÔøΩRÔøΩÔøΩO1I*NÔøΩ¬ÜbŸßÔøΩJAÔøΩBpZÔøΩWÔøΩBÔøΩ4ÔøΩnÔøΩÔøΩJbÔøΩÔøΩÔøΩÔøΩgÔøΩÔøΩÔøΩBÔøΩ)Àù1LjÔøΩ.jÔøΩ6ÔøΩFÔøΩw~?ÔøΩÔøΩÔøΩ:]ÔøΩÔøΩÔøΩYPÔøΩKÔøΩjÔøΩÔøΩ^moÔøΩÔøΩUyÔøΩÔøΩ\ÔøΩÔøΩÔøΩÔøΩ.ÔøΩÔøΩ*	ÔøΩÔøΩ2ÔøΩ1ÔøΩU&ÔøΩ~ÔøΩ -ÔøΩÔøΩs#ÔøΩCwÔøΩ]ÔøΩNÔøΩÔøΩeÔøΩÔøΩs$%NÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩrÔøΩÔøΩÔøΩZEÔøΩ""ÔøΩÔøΩ_9xÔøΩUÔøΩ À°8ÔøΩÔøΩ#ÔøΩcÔøΩÔøΩr9ÔøΩ=[ÔøΩÔøΩjUQ[ÔøΩÔøΩÔøΩBÔøΩeÔøΩÔøΩVs?ÔøΩÔøΩÔøΩÔøΩ ÔøΩyzÔøΩPÔøΩÔøΩ%<ÔøΩFXÔøΩÔøΩÔøΩÔøΩÔøΩtÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩaÔøΩtÔøΩÔøΩÔøΩuÔøΩÔøΩÔøΩ,TJznÔøΩÔøΩÔøΩB+ÔøΩ{ÔøΩÔøΩ+2ÔøΩCuÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩsÔøΩÔøΩr}ÔøΩÔøΩSoÔøΩÔøΩÔøΩ;ÔøΩ_ÔøΩ3ÔøΩÔøΩ}ÔøΩÔøΩrÔøΩÔøΩÔøΩcqÔøΩÔøΩL8ÔøΩWÔøΩAAÔøΩÔøΩÔøΩZNFÔøΩtdÔøΩÔøΩ;8ÔøΩÔøΩU7ÔøΩVÔøΩ|o€≤I	h""ÀÑ&ÔøΩW'T]ÔøΩÔøΩ√í\ÔøΩj7ÔøΩrÔøΩÔøΩÔøΩ/aÔøΩÔøΩ8\vÔøΩﬂîÔøΩ+]IWÔøΩTÔøΩwÔøΩÀñ$ÔøΩl{ÔøΩ{ÀêÔøΩÔøΩA ÔøΩÔøΩ-?? 	ÔøΩKÔøΩÔøΩÔøΩhjÔøΩÒØ∂≤ÔøΩÔøΩ4ÔøΩÔøΩocÔøΩ`K)ÔøΩn:ÔøΩofŒöÔøΩÏùΩexÔøΩ7ÔøΩ]ÔøΩ|ÔøΩYÔøΩÔøΩvÔøΩDÔøΩ]""lÔøΩÔøΩ4xÔøΩ]ÔøΩ9OÔøΩÔøΩÔøΩŒûrÔøΩÔøΩzÔøΩÔøΩÔøΩo)ÔøΩÔøΩUÔøΩ&eÔøΩÔøΩ|RÔøΩqY9ÔøΩÔøΩ1/0√™\j4ÔøΩÔøΩÔøΩ4h=ÔøΩÔøΩÔøΩZThÔøΩ)ÔøΩÔøΩÔøΩqÔøΩ√Æ\ÔøΩÔøΩR!ÔøΩ4ÔøΩÔøΩ&ÔøΩÔøΩWÔøΩpIxÔøΩÔøΩ>ÔøΩ[ÔøΩÔøΩEÔøΩ*ÔøΩ7@&ÔøΩÔøΩÔøΩLÔøΩeoÔøΩ—ìÔøΩ:rmÔøΩÔøΩÔøΩÔøΩÔøΩv~ÔøΩÔøΩÔøΩÔøΩ0CÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ( ÔøΩÔøΩ,ÔøΩYÔøΩcaÔøΩÔøΩ.]B`xwfÔøΩ$aShÔøΩÔøΩÔøΩÔøΩRFGÔøΩÔøΩÔøΩEMÔøΩ.ÔøΩ{,.ÔøΩ?:ÔøΩ=ÔøΩ.ÔøΩÔøΩ3ÔøΩÔøΩ`)ÔøΩÔøΩÔøΩÔøΩ$hÔøΩÔøΩ\crÔøΩ ë*ÔøΩ2&ÔøΩ<ÔøΩÔøΩÔøΩÔøΩtÔøΩÔøΩe>ÔøΩÔøΩ7/«£mÔøΩgÔøΩZÔøΩÔøΩdÔøΩÔøΩÔøΩÃöÔøΩgX2ÔøΩÔøΩÔøΩ_ÔøΩÔøΩ 'VÃ¨oÔøΩUm~z◊ú}ÔøΩIiRÔøΩ""ÔøΩ4&lNkÔøΩRÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩz]ÔøΩFÔøΩpÔøΩÔøΩ[ÔøΩfÔøΩÔøΩÔøΩÔøΩÔøΩUÔøΩmwÔøΩlÔøΩÔøΩÔøΩB⁄Ø/ÔøΩÔøΩÔøΩ#lÔøΩÔøΩ\ÔøΩÔøΩÔøΩ◊í'YÔøΩ^ÔøΩ<ÔøΩ(ÔøΩœúÔøΩ/}ÔøΩÔøΩ~√¶ÔøΩÔøΩ&ÔøΩÔøΩÔøΩÔøΩaÔøΩÔøΩÔøΩÔøΩÔøΩV7ÔøΩ}T*ÔøΩÔøΩÔøΩ{XÔøΩÔøΩ!TÔøΩXÔøΩÔøΩ]ÔøΩÔøΩ!zÔøΩe(:#ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩADÔøΩÔøΩÔøΩMÔøΩ-À¢ÔøΩ=ÔøΩS{ÔøΩ{BlÔøΩÔøΩ|$ÔøΩÔøΩÔøΩhiÔøΩ*+ÔøΩÔøΩÔøΩsÔøΩ]Œ®ÔøΩ.B+7RUkÔøΩÔøΩÔøΩÔøΩ~ÔøΩÔøΩ”∫fÔøΩp.ÔøΩ/Õ≤ÔøΩÔøΩ8ÔøΩ~ÔøΩÔøΩ>^og6oÔøΩiuÔøΩ)$ÔøΩ.ÔøΩ0ÔøΩWIÔøΩwRÔøΩQÔøΩ«¥ÔøΩÔøΩ_ÔøΩ~_ÔøΩjÔøΩÔøΩ&`~ÔøΩÔøΩÔøΩxÔøΩÔøΩ^ÔøΩÔøΩÔøΩÔøΩ7ÔøΩÔøΩÔøΩ#=ÔøΩ!"" ÔøΩÔøΩ5ÔøΩ#I+]$ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ1TÔøΩÔøΩCÔøΩ8CÔøΩÔøΩÔøΩcÔøΩTÔøΩÔøΩ`ÔøΩ<ÔøΩÔøΩF;RTÔøΩCDÔøΩ'ÔøΩW?ÔøΩ*|ÔøΩtÔøΩ9ÔøΩmÔøΩGÔøΩÔøΩX>-ÔøΩwÔøΩyÔøΩ~YÔøΩscÔøΩÔøΩÔøΩzÔøΩ~œ° ÔøΩLo^ÿ¨ZÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ;1«¢FÔøΩ–∏ÔøΩÔøΩ_ÔøΩ—ìÔøΩvÔøΩL\ÔøΩÔøΩiiÔøΩÔøΩbÔøΩÔøΩÔøΩ}ÔøΩFÔøΩÔøΩÔøΩ∆ò+ÔøΩVjÔøΩÔøΩÔøΩÔøΩIsWÔøΩÔøΩ!ÔøΩo]ÔøΩÔøΩÔøΩ}aÔøΩÔøΩ$ÔøΩ›±4ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩaÔøΩSÔøΩE“ô4ÔøΩÔøΩÔøΩÔøΩJÔøΩ6iÔøΩLÔøΩ	ÔøΩÔøΩ	ÔøΩ3,TÔøΩR1KÔøΩ\ÔøΩK«∑a pÔøΩÔøΩ&:kLÔøΩ iÔøΩOCJÔøΩÔøΩÔøΩAÔøΩÔøΩBÔøΩIa@ÔøΩÔøΩÔøΩÔøΩyÔøΩ ÔøΩÔøΩqQÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩ9ÔøΩZÔøΩÔøΩRaÔøΩÔøΩÔøΩ◊ØÔøΩÌäµ{ÔøΩÔøΩÔøΩ}ÔøΩ:-ÔøΩ[ÔøΩ2ÔøΩvÔøΩÔøΩÀÇÔøΩÔøΩÔøΩHÔøΩÔøΩÔøΩ}ÔøΩ'FÔøΩÔøΩmÔøΩ^ÔøΩ4ÔøΩÔøΩÔøΩTÔøΩRÔøΩt ÔøΩÔøΩ+ÔøΩÔøΩBÔøΩ ÔøΩÔøΩ\zÔøΩÔøΩ>ÔøΩ<ÔøΩ(ÔøΩXAÔøΩ>ÔøΩ}lKÔøΩÔøΩÔøΩÔøΩÔøΩfÔøΩÔøΩLÔøΩq ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩdÔøΩgWÔøΩ UÔøΩ\@'zX3ÔøΩÔøΩ[ÔøΩnL[ÔøΩrÔøΩÔøΩB^ÔøΩuÔøΩÔøΩy`ÔøΩÔøΩÔøΩzÔøΩÔøΩÔøΩÔøΩ))„áöÔøΩÔøΩÔøΩÔøΩPkÔøΩÔøΩH ÔøΩÔøΩ5V≈ûÔøΩÔøΩ≈§jVyÔøΩ9ÔøΩ#WÔøΩ?ÔøΩ1ÔøΩÔøΩ}ÔøΩl@ÔøΩ*ÔøΩ#P0ÔøΩBÔøΩMg+QÔøΩ√∫}|IÔøΩ7O$$ÔøΩFÔøΩÔøΩFEFÔøΩÔøΩÔøΩÔøΩOÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩhRÔøΩ|X7hhÔøΩeÔøΩÔøΩÔøΩÔøΩ@ÔøΩÔøΩkÔøΩÔøΩ` ÔøΩ–îÔøΩWÔøΩFÔøΩÔøΩÔøΩv»õ;ÔøΩÔøΩ|4ÔøΩ~ÔøΩLÔøΩ<`).NÔøΩÔøΩÔøΩ~PÔøΩÔøΩqÔøΩÔøΩnKv5ÔøΩÔøΩMÔøΩÔøΩOÔøΩÔøΩ2ÔøΩÔøΩ}ÔøΩbNÔøΩFa	~ÔøΩ ~ÔøΩÔøΩÔøΩÔøΩmÔøΩÔøΩÔøΩ?ÔøΩÔøΩ-4aÔøΩ{ÔøΩ&)ÔøΩÔøΩ&uÔøΩ ÔøΩÔøΩAÔøΩ5t@ÔøΩAÔøΩBoÔøΩÔøΩOÔøΩ$ÔøΩÔøΩÔøΩ9(ÔøΩ;ÔøΩ…âÔøΩÔøΩÔøΩ=ÔøΩsÔøΩKÔøΩ9	ÔøΩÔøΩÔøΩÔøΩ7ÔøΩÔøΩ*ÔøΩ7Go1ÔøΩÔøΩÔøΩ)ÔøΩ8ÔøΩ ÔøΩ8ÔøΩLÔøΩÔøΩO@i÷¶kÔøΩÔøΩ7ÔøΩ0wÔøΩÔøΩLÔøΩzÔøΩd_zpÔøΩTjÔøΩZsÔøΩÔøΩ^ÌööÔøΩÿªÔøΩE]LÔøΩcÔøΩÔøΩÔøΩ^ÔøΩÔøΩÔøΩEÔøΩÔøΩ7@h""ÔøΩA{kÔøΩ◊ÅcÔøΩÔøΩÔøΩ›üWxN8ÔøΩÔøΩLxLÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩgÔøΩ’™_eÔøΩÔøΩ»ñ ÔøΩÔøΩÔøΩ=<ÔøΩÔøΩ8ÔøΩÔøΩÔøΩÔøΩÔøΩ;aÔøΩÔøΩÔøΩj[BYÔøΩcÔøΩ8yÔøΩTsÔøΩJÔøΩG'ÔøΩJOÔøΩ~lZÔøΩÕûLÔøΩÔøΩ.ÔøΩ{`ÔøΩ'ÔøΩf5ÔøΩÔøΩÔøΩuÔøΩQÔøΩÔøΩ4UÔøΩÔøΩaÔøΩÔøΩCX/E“ø ,#<-’∏ÔøΩÔøΩÔøΩÔøΩUÔøΩH‰´Ç}M:qÔøΩz{9ÔøΩÔøΩÔøΩÔøΩAÔøΩÔøΩLnÔøΩÔøΩÔøΩ~gÔøΩAœùÔøΩCÔøΩÔøΩ(ÔøΩÔøΩÔøΩc8ÔøΩ``ÔøΩgÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩV$=ÔøΩÔøΩÔøΩÔøΩUgÔøΩÔøΩ%oÔøΩÔøΩxÔøΩ9zÔøΩ^1kÔøΩÔøΩ=ÔøΩ&ÔøΩÔøΩC7nÔøΩÔøΩeÔøΩÔøΩ	ÔøΩiÔøΩ%›óŸ±ÔøΩ*`◊êÔøΩ4ÔøΩxI;?_ÔøΩÔøΩÔøΩ	FÔøΩ&ÔøΩ{L“†ÔøΩÔøΩÔøΩ;ÔøΩÔøΩ2ÔøΩ8-ÔøΩ«∏ÔøΩÔøΩÔøΩ>ÔøΩÔøΩk:ÔøΩ5ÔøΩ<ÔøΩÔøΩ&ÔøΩ}4%mÔøΩÔøΩÔøΩÔøΩf ÔøΩÔøΩ?1ÔøΩ!ÔøΩÔøΩgÔøΩÔøΩÔøΩLÔøΩXÔøΩÔøΩYÔøΩ^ÔøΩPL;=*ÔøΩÔøΩÔøΩÔøΩVÔøΩÔøΩ7~H/>ÔøΩkÔøΩWÔøΩÔøΩ’çË∑Ω~ÔøΩÔøΩÔøΩÔøΩÔøΩNG$ÔøΩp4?^FÔøΩ;7ÔøΩÔøΩÔøΩ1ÔøΩÔøΩmXÔøΩ(c_'FEÔøΩÔøΩÔøΩÔøΩÔøΩQgÔøΩÿéÔøΩ«Ñ2eÔøΩÔøΩÔøΩ""V,7vu>,,RwÔøΩÔøΩtÔøΩÔøΩÔøΩnÔøΩÔøΩHŸ©4”®ÔøΩÔøΩÔøΩBÔøΩÔøΩÔøΩÔøΩ[NÔøΩÔøΩl{kÔøΩ.ÔøΩ◊µÔ±µ)ÔøΩ,6dÔøΩÔøΩ2*Luq~7ÔøΩÔøΩ[ÔøΩÔøΩo1UÔøΩÔøΩÔøΩÔøΩÔøΩﬂäQÔøΩÔøΩDU€ª_6ÔøΩ6ÔøΩÔøΩKÔøΩÔøΩ ÉÔøΩhÔøΩÔøΩÔøΩÔøΩÔøΩHEÔøΩÔøΩ6ÔøΩTÔøΩÔøΩÔøΩ2ÔøΩÔøΩN_√∏ÔøΩÔøΩqzÔøΩÔøΩVÔøΩ›ÇÔøΩÔøΩQÔøΩeÔøΩpÔøΩÔøΩÔøΩ!ÔøΩÔøΩ7:ÔøΩ‘§0ÔøΩÔøΩ kÔøΩÔøΩ&ÔøΩdÔøΩc87UoÔøΩÔøΩOÔøΩaIF]ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩxÔøΩÔøΩÔøΩ+ÔøΩ}ÔøΩ^HÔøΩÍ∑ÇÔøΩÔøΩ,ÔøΩ√± ÔøΩÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩpÔøΩ/ÔøΩÔøΩÔøΩ:!v2~ÔøΩ3ÔøΩU%(;ÔøΩÔøΩÔøΩÔøΩ}ÔøΩÔøΩeÔøΩÔøΩÔøΩWeTpÔøΩÔøΩÔøΩÔøΩÔøΩZ3<ÔøΩÔøΩ5sWÔøΩÔøΩÔøΩ›ÜÔøΩ&ÔøΩÔøΩÔøΩÔøΩÔøΩq—ò~	ÔøΩÔøΩcÔøΩp{ÔøΩÔøΩÔøΩD!ÔøΩÔøΩÔøΩÔøΩÕ°ÔøΩ4ÔøΩ/uÔøΩ2ÔøΩÔøΩÔøΩyewu2ÔøΩ#ÔøΩ""<#ÔøΩÔøΩ%ygDÔøΩÔøΩÔøΩNÔøΩÔøΩÔøΩÔøΩyÔøΩÔøΩaÔøΩ:7ÔøΩD-)ÔøΩÔøΩ æÔøΩÔøΩMÔøΩÔøΩÔøΩ◊•ÔøΩÔøΩÔøΩ[rÔøΩÔøΩÔøΩ{ÔøΩÔøΩ[ÔøΩaÔøΩ?ÔøΩ,ÔøΩOÔøΩÔøΩs}ÔøΩeÔøΩsÔøΩÔøΩkÔøΩÔøΩc Ω*yBÔøΩjÔøΩ^jrÔøΩ;ÔøΩ,ÔøΩmÔøΩ;SÔøΩiÔøΩ]/ÔøΩyÔøΩ+1QÔøΩÔøΩ5VÔøΩÔøΩÔøΩÔøΩŸ¶1H9ÔøΩÔøΩVÔøΩÔøΩÔøΩdﬂò5ÔøΩÔøΩÔøΩrÔøΩ1ÔøΩgsÔøΩÔøΩÔøΩ⁄ë—£ÔøΩ<ÔøΩÔøΩÔøΩCÔøΩ…Ç| {ÔøΩ3ÔøΩ ÔøΩÔøΩd+ÔøΩÔøΩ ÔøΩÔøΩNÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ‰û∫9ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩj2ÔøΩÔøΩÔøΩÔøΩÔøΩN$KÔøΩÔøΩ/ÔøΩÔøΩiÔøΩzÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩÔøΩuÔøΩ1o'_ÔøΩÔøΩÔøΩÔøΩ[ÔøΩ`ÔøΩCÔøΩ?{|ÔøΩÔøΩIÔøΩÔøΩ~ÔøΩUÔøΩÔøΩvÔøΩÔøΩÔøΩ5ÔøΩ/ÔøΩ:ÔøΩÔøΩ.xÔøΩÔøΩÔøΩÔøΩ[ÔøΩÔøΩÔøΩngÔøΩzÔøΩÔøΩBqÔøΩd:ÔøΩÔøΩBÔøΩUÔøΩ]tÔøΩC r}ÔøΩ{Qnd∆úÔøΩÔøΩfÔøΩRÔøΩÔøΩmSÔøΩÔøΩ`ÔøΩ\ÔøΩ=ÔøΩÔøΩ6FÔøΩCAUÔøΩÔøΩÔøΩKÔøΩ-%ÔøΩÔøΩ ÔøΩ;ÔøΩJÔøΩ~_ÔøΩaCÔøΩ6ÔøΩƒ°ÔøΩrÔøΩÔøΩÔøΩÔøΩ#fzÔøΩHÔøΩÔøΩÔøΩPÔøΩÔøΩÔøΩ{ÔøΩKÔøΩx~{ÔøΩÀ≠ÔøΩ ÔøΩ""\ÔøΩ##ÁΩè""ÔøΩÔøΩEaÔøΩUs‹∂ÔøΩÔøΩ4ƒµ	5ÔøΩÔøΩnÔøΩTMÔøΩoÔøΩÔøΩÔøΩ_P<ÔøΩÔøΩÔøΩZNDn`ÔøΩÔøΩÔøΩÔøΩÔøΩzÔøΩÔøΩÔøΩÔøΩ%}ÔøΩÔøΩaÔøΩN%kqÔøΩ1ÔøΩÔøΩkÔøΩÔøΩÔøΩÔøΩtÔøΩI-ÔøΩYÔøΩÔøΩ.ÔøΩÔøΩpÔøΩÔøΩ-aÔøΩÔøΩ4SÔøΩÔøΩRÏÆñ›ïÔøΩÔøΩQ5*4ÔøΩÕÇÔøΩÔøΩÔøΩ9ÔøΩ ÖRÔøΩÔøΩC	ÔøΩÔøΩÔøΩ)C-ÔøΩÚÖëûÔøΩÔøΩ.ÔøΩÔøΩÔøΩZÔøΩÔøΩÔøΩmÔøΩÔøΩÔøΩ	ÔøΩ;ÔøΩÔøΩU,’ã5{ÔøΩNUÔøΩÔøΩ'KpÔøΩÔøΩ{~x…ΩÔøΩ=$hÔøΩSP""ÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩrÔøΩÔøΩlÔøΩ^oÔøΩKÔøΩÔøΩgÔøΩÔøΩlÔøΩÔøΩIÔøΩT|DÔøΩb|ÔøΩÔøΩÔøΩ|ÔøΩ ÔøΩÔøΩ\DÔøΩÔøΩ#ﬁ¶3SÔøΩ{€ÅLÔøΩ–Å7ÔøΩ2ÔøΩÔøΩÔøΩÔøΩ('AÔøΩr!ÔøΩÔøΩÔøΩÔøΩsqN`ÔøΩcÔøΩ5ÔøΩÔøΩÔøΩÔøΩÔøΩf\eÔøΩÔøΩÔøΩgÔøΩr""ÔøΩÔøΩÔøΩlÔøΩ–ûÔøΩ⁄íÔøåDiÔøΩC5ÔøΩ>mÔøΩ,L8zÔøΩQÔøΩ*LÔøΩÔøΩIÔøΩÔøΩÔøΩÔøΩÔøΩG#6ÔøΩÔøΩÔøΩÔøΩBÔøΩÔøΩd~ÿîÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ%;~RtÔøΩuSUÔøΩ3ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩ^bÔøΩ\lÔøΩ ÔøΩÔøΩL`-ÔøΩÔøΩÔøΩnÔøΩLDÔøΩ$_ÔøΩS{ÔøΩ=ÔøΩRSÔøΩ ÔøΩÔøΩP:ÔøΩrÔøΩÔøΩ3ÔøΩAnÔøΩlÔøΩmvuDÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩnÔøΩ—é,ÔøΩÔøΩÔøΩÔøΩR$ÔøΩ>nÔøΩ⁄ù!ÔøΩÔøΩ;ÔøΩpÔøΩ0ÔøΩtÔøΩ3ÔøΩA_ÔøΩÔøΩgÔøΩ‘à€ßÔøΩeÔøΩÔøΩ?ÔøΩ#ÔøΩeÔøΩyÔøΩÔøΩqÔøΩJÔøΩÔøΩK7-‘éÔøΩÔøΩKÔøΩ9«≥ÔøΩ@xjÔøΩÔøΩÔøΩ$ÔøΩrÔøΩÔøΩÔøΩÔøΩwÔøΩj√ëÔøΩuÔøΩÔøΩÔøΩ?ÔøΩÔøΩb.9iÔøΩÔøΩ_f)+<.sfvÔøΩ»∏ÔøΩ ~ﬂ´+?#ÔøΩ2ÔøΩÔøΩpqÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩc<ÔøΩm7ÔøΩRÔøΩRÔøΩrÔøΩÔøΩ>ÔøΩÔøΩÔøΩu.eÔøΩÔøΩNÔøΩÔøΩÔøΩÔøΩJ?.ÔøΩÔøΩGÔøΩÔøΩIDÔøΩ&ÕóÔøΩÔøΩÔøΩÔøΩXÔøΩTÔøΩbÔøΩÔøΩKÔøΩ9\ÔøΩeÔøΩﬂºÔøΩQÀ™ÔøΩT/ÔøΩ=uÔøΩ(VJ{uÔøΩÔøΩÔøΩÔøΩÔøΩYÔøΩq|	!ÔøΩÔøΩXÔøΩu8ÔøΩÔøΩLÔøΩYÔøΩÔøΩhÔøΩ}-ÔøΩMÔøΩX–µÍ©äÔøΩ7fÔøΩ~ÔøΩÔøΩmkV”êXÔøΩ'ÔøΩlkÔøΩÔøΩ=dÔøΩÔøΩ'HÔøΩÔøΩ*ÔøΩÔøΩÔøΩNÔøΩ`<ÔøΩ:{f+ÔøΩÔøΩÔøΩÔøΩÔøΩ*MÔøΩÔøΩy9ÔøΩÔøΩÔøΩÔøΩÔøΩ;%ÔøΩÔøΩ·èÑtÔøΩÔøΩb-ÔøΩÔøΩ}ÔøΩ>ÔøΩSrC/ÔøΩ>ÔøΩCÔøΩoÔøΩJÔøΩÓ≥¢aÔøΩÔøΩÔøΩÔøΩÔøΩxURÔøΩp:ÔøΩH\ÔøΩÔøΩÔøΩcuÔøΩO.bfÔøΩXÔøΩÔøΩÔøΩ+~g^Î´ÅwVÔøΩ>@JQÔøΩ–¨6.`t ÔøΩÔøΩƒª ÔøΩÔøΩC{SrÔøΩÔøΩÔøΩqF?hvÔøΩÔøΩ}dÔøΩ;ÔøΩÔøΩ~ÔøΩÔøΩÔøΩÔøΩ0‡Æ≤ÔøΩÔøΩpÔøΩÔøΩ=ÔøΩ7_hÔøΩUÔøΩCGÔøΩÔøΩqÔøΩÔøΩXÔøΩJÔøΩ""ÔøΩÔøΩÔøΩÔøΩ«éÔøΩX(ÔøΩÔøΩ\ÔøΩÔøΩZR2ÔøΩÔøΩj1ÔøΩÔøΩRÔøΩÔøΩQ	TÔøΩqLÔøΩÔøΩÔøΩ5WEÔøΩÔøΩdYÔøΩrÔøΩ1ÔøΩ,ÔøΩÔøΩÔøΩÔøΩ=ÔøΩvÔøΩÔøΩzÔøΩÔøΩÔøΩq;BÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩRÔøΩFÔøΩÔøΩmÔøΩÔøΩZÔøΩÔøΩÔøΩ ÔøΩ«êyÔøΩ#ÔøΩ:ÔøΩÔøΩ=*ÔøΩÔøΩÔøΩSÔøΩ'ÔøΩZ6ÔøΩÔøΩÔøΩgÔøΩÔøΩCÔøΩr‘∫ÔøΩÔøΩ""ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩzÔøΩÔøΩÔøΩwÔøΩ\ÔøΩÔøΩÔøΩ?ÔøΩ!ÔøΩÔøΩÔøΩy6VÔøΩÔøΩÔøΩ	ÔøΩ>ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÌëØÔøΩÔøΩÔøΩyÔøΩtÔøΩk9ÔøΩÔøΩ3ÔøΩmÔøΩÔøΩvÔøΩGs6ÔøΩ	ÔøΩÔøΩ’≥ÔøΩcJÔøΩÔøΩQÔøΩ@ÔøΩÔøΩÔøΩ√∫ÔøΩ9/dÔøΩÔøΩÔøΩE(∆ì+FÔøΩh$ÔøΩÔøΩQÔøΩÔøΩ\%FVÔøΩXÔøΩ]ÔøΩZÔøΩÔøΩÔøΩyÔøΩÔøΩd	ÔøΩfÔøΩÔøΩjÔøΩ/ÔøΩÔøΩ@ÔøΩr}ÔøΩÔøΩ'ÔøΩ!c2BÔøΩÔøΩÔøΩQ cÔøΩgkÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩunÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩMÔøΩœáÔøΩÔøΩ,ÔøΩ2(ÔøΩÔøΩf[ÔøΩÔøΩd~ÔøΩ-ÔøΩfGÔøΩqsÔøΩfÔøΩj' ÔøΩÔøΩÔøΩÔøΩÔøΩ>ÔøΩÔøΩÔøΩ9(TÔøΩZ{$zÔøΩÔøΩÔøΩ}ÔøΩÔøΩÔøΩÔøΩ]ÔøΩ ÔøΩdÔøΩÔøΩÔøΩj{fKÔøΩ3f""ÔøΩvÔøΩ$ÔøΩÔøΩÔøΩÔøΩÔøΩ:3RÔøΩ#ÔøΩ""d{ÔøΩoorÔøΩ5ÔøΩ√ºcÔøΩ?ÔøΩÔøΩyÔøΩRÔøΩ}ÔøΩÔøΩE.ÔøΩ iÔøΩNHÔøΩb>: ;W=yÔøΩÔøΩÔøΩ%ÔøΩÔøΩÔøΩeÔøΩhÔøΩÔøΩamnÔøΩÔøΩ!ÔøΩE8Œ≥ÔøΩÔøΩrÔøΩÔøΩ>ÔøΩÔøΩ.""ÔøΩgÔøΩÔøΩFGrÔøΩW ÔøΩÔøΩÔøΩÔøΩÔøΩw>8ÔøΩ6ÔøΩÔøΩA\ÔøΩÔøΩÔøΩn”øÔøΩÔøΩG!'AIÔøΩÔøΩÔøΩ+j5 ÔøΩÔøΩÔøΩÔøΩEB$bKgÔøΩÔøΩÔøΩ.Ãñb`b6Z#NÔøΩtÔøΩÔøΩÔøΩ_ÔøΩÔøΩYÔøΩÔøΩwÔøΩDÔøΩ8!jÔøΩ^pÔøΩÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩ#KÔøΩÔøΩ(ÔøΩ3ÔøΩ%g!aÔøΩaÔøΩWÔøΩÔøΩ)ÔøΩÔøΩÔøΩÔøΩ*Œ¶C""?ÔøΩÔøΩMÔøΩ&iÔøΩÔøΩ…óÔøΩ =NÔøΩWÔøΩ)O;ÔøΩÔøΩ.ÔøΩzÔøΩÔøΩÔøΩ#ÔøΩkÔøΩÔøΩ[B#rBÔøΩÔøΩÔøΩm|ÔøΩÔøΩY?ÔøΩÔøΩ&|ÔøΩÔøΩWpzÔøΩÊå∏ÔøΩqÔøΩcÔøΩÔøΩDÔøΩ=ÔøΩ<ÔøΩÔøΩ«É7ÔøΩAÔøΩMVÕå<ÔøΩ·ÇãOÔøΩÔøΩÔøΩÔøΩXÔøΩWÔøΩ{ÔøΩTÔøΩ%]ÔøΩEÔøΩnÔøΩÔøΩ@ÔøΩÔøΩEÔøΩÔøΩÔøΩbAÔøΩq:ÔøΩÔøΩuW8ÔøΩ`ÔøΩÔøΩÔøΩ!ÔøΩ#ÔøΩdÔøΩÔøΩ}]}ÔøΩ:ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩZÔøΩ∆´ÔøΩUÔøΩuW`-HÔøΩ|ÔøΩÔøΩÔøΩÔøΩ3gÔøΩGa<ÔøΩHÔøΩÔøΩÔøΩ{ÔøΩÔøΩGÔøΩ”üÔøΩ7F HÔøΩ@ÔøΩ!ﬁà|AÔøΩÔøΩiÔøΩinpŸ•ÔøΩÔøΩÔøΩR›åÔøΩÔøΩÔøΩÔøΩ_ÔøΩ~,ÔøΩ'ÔøΩv=ÔøΩÔøΩÔøΩ_ÔøΩK5'ÔøΩÔøΩDÔøΩ1ÔøΩ>ÔøΩÔøΩ0ÔøΩrÔøΩÔøΩ|*ÔøΩÔøΩ!ÔøΩ;ÔøΩ—´ÔøΩÔøΩÔøΩgpo%/Aj|ÔøΩÔøΩK'fÔøΩÔøΩRÔøΩÔøΩÔøΩSÔøΩ∆É ÔøΩLÔøΩ)ÔøΩ2ÔøΩÔøΩRÔøΩÔøΩ|ÔøΩ!ÔøΩÔøΩÔøΩÔøΩÔøΩbÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ=ÔøΩcÔøΩÔøΩ]ÔøΩm?<ÔøΩÔøΩGÔøΩyÔøΩÔøΩƒ®ÔøΩ""ÔøΩÔøΩkÔøΩÔøΩ_ÔøΩev(ÔøΩrGGqÔøΩÔøΩÔøΩ[UÔøΩdÔøΩM-J ÔøΩÔøΩl7lyÔøΩ~ÔøΩxÔøΩUÔøΩÔøΩqÔøΩÔøΩÔøΩ@ÔøΩFÔøΩÔøΩHBÔøΩ30ÔøΩaÔøΩy(AÔøΩ%YÔøΩÔøΩOs8kÔøΩRKEXA""oÔøΩUÔøΩÔøΩ#fÔøΩÔøΩ{EGÔøΩÔøΩÔøΩ#.WUÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ8ÔøΩÔøΩCJ0ÔøΩ}Tﬂ´uÔøΩÔøΩxJÔøΩÔøΩ'ÔøΩGHÔøΩ;;%#ÔøΩÔøΩ9ÔøΩÔøΩIo-ÔøΩÔøΩhÔøΩÔøΩÔøΩÔøΩÔøΩlÔøΩÔøΩ`ÔøΩJÔøΩ=ÔøΩÔøΩÔøΩ:M~4vÔøΩ> 4ÔøΩÔøΩTÔøΩsÔøΩÔøΩÔøΩvÔøΩYLÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩgJ|!aÔøΩ1XÔøΩÔøΩ^ÔøΩÔøΩÔøΩÔøΩ#pÔøΩkDÔøΩ	 ÔøΩ€Ω¬ôÔøΩTWÔøΩÔøΩÔøΩÔøΩÔøΩ»∑ÔøΩÔøΩ|ÔøΩÔøΩAÔøΩÔøΩbÔøΩHÔøΩÔøΩÔøΩÔøΩÔøΩmÔøΩ%ÔøΩhÔøΩÔøΩÔøΩÔøΩbÔøΩnÔøΩ1GDÔøΩ8ÔøΩÔøΩRlYO$*€™9|ÔøΩÔøΩ?ÔøΩ-ÔøΩ$ÔøΩÔøΩ|ÔøΩkF'ÔøΩ|/%ÔøΩÔøΩ:ÔøΩ^ÔøΩÔøΩ'O""YÔøΩ,JÂØô8ÔøΩÔøΩrZÔøΩ@nÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩIWÔøΩ\ÔøΩJBÔøΩpJ^ÔøΩÔøΩy;ÔøΩ!ÔøΩbÔøΩÔøΩÔøΩ+ÔøΩoÔøΩSYÔøΩ""Ó∑êÔøΩÔøΩÔøΩÔøΩVfÔøΩÔøΩW28>ÔøΩÔøΩÔøΩQÔøΩÔøΩ?9ÔøΩÔøΩ< endstream endobj 23 0 obj << /Filter /FlateDecode /Length1 1582 /Length2 8306 /Length3 0 /Length 9352 >> stream xÔøΩÔøΩÔøΩTÔøΩÔøΩ6ÔøΩÔøΩÔøΩÔøΩ ÔøΩ‘êÔøΩ3twwÔøΩÔøΩ ÔøΩ0ÔøΩ %ÔøΩ)-ÔøΩ%)ÔøΩÔøΩ4HHÔøΩHKÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩoÔøΩZ3ÔøΩuÔøΩsÔøΩu?ÔøΩfzm=.[ÔøΩ5DÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ44Tx@ ÔøΩÔøΩÔøΩÔøΩcf÷áÔøΩ`ÔøΩÔøΩÔøΩÔøΩ !H7(ÔøΩEÔøΩ_rHu'ÔøΩÔøΩÔøΩ5ÔøΩ. UwÔøΩÔøΩÔøΩ#(ÔøΩ#$ xA ÔøΩÔøΩ¬ëÔøΩ yÔøΩÔøΩÔøΩÔøΩ PÔøΩÔøΩ@ÔøΩÔøΩÔøΩÔøΩo$ÔøΩÔøΩuwÔøΩÔøΩ6l !ÔøΩ?ÔøΩ2ÔøΩ$ÔøΩÔøΩÔøΩ ÔøΩ ÔøΩw'⁄Äa =ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ(BÔøΩÔøΩÔøΩÔøΩ;ÔøΩq√ëÔøΩÔøΩlÔøΩ O(ÔøΩÔøΩqÔøΩ = ÔøΩÔøΩÔøΩ%4ÔøΩŒêÔøΩJÔøΩÔøΩcÔøΩ;@ÔøΩÔøΩTÔøΩÔøΩÔøΩPÔøΩ`$p'ÔøΩAm .nw.ÔøΩ.ÔøΩ$ÔøΩÔøΩtÔøΩÔøΩÔøΩ:@qÔøΩÔøΩXÔøΩONÔøΩ_ÔøΩÔøΩpÔøΩÔøΩÔøΩ/ÔøΩﬂÅÔøΩ.8ÔøΩmlÔøΩÔøΩÔøΩÔøΩ7ÔøΩÔøΩ`ÔøΩA ZÔøΩÔøΩÔøΩ(/' ÔøΩbÔøΩÔøΩsÔøΩÔøΩÔøΩÔøΩ=ÔøΩPÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ E ÔøΩÔøΩ¬øÔøΩsÔøΩAB(7n7(ÔøΩwÔøΩÔøΩÔøΩaÔøΩ⁄¨ÔøΩb+wvÔøΩÔøΩÔøΩÔøΩÔøΩ~ÔøΩ'EBlÔøΩÔøΩÔøΩ ÔøΩkÔøΩN.pOÔøΩÔøΩ ;ÔøΩÔøΩÔøΩÔøΩÔøΩ2lÔøΩ@ÔøΩÔøΩ;DEÔøΩ/ÔøΩ;ÔøΩ?2{  ÔøΩ @\/ÔøΩÔøΩÔøΩÔøΩÔøΩ?ÔøΩ<ÔøΩÔøΩw5ÔøΩÔøΩ""ÔøΩÔøΩÔøΩ]ÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩ+ÔøΩÔøΩÔøΩÔøΩ lÔøΩ6(ÔøΩ5ÔøΩÔøΩÔøΩOÔøΩ;1ÔøΩÔøΩO|7$ÔøΩ` ÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩlÔøΩ.0ÔøΩÔøΩÔøΩ1P__MAIÔøΩ„ØíÔøΩVÔøΩÔøΩ¬Ω ÔøΩ\|ÔøΩ .^ÔøΩÔøΩ/ÔøΩ{ÔøΩÔøΩÔøΩ8ÔøΩ`ÔøΩ_yÔøΩÔøΩWÔøΩÔøΩÔøΩÔøΩwÔøΩwÔøΩÔøΩOÔøΩÔøΩÔøΩÔøΩÔøΩ aÔøΩw0MÔøΩu! ÔøΩÔøΩn ÔøΩÔøΩ}ÔøΩÔøΩ?ÔøΩÔøΩÔøΩÔøΩ?ÔøΩÔøΩÔøΩÔøΩeÔøΩÔøΩfÔøΩÔøΩÔøΩÔøΩÔøΩgÔøΩÔøΩÔøΩÔøΩÔøΩ;CaÔøΩYÔøΩQÔøΩuÔøΩÔøΩepÔøΩ_S#»üÔøΩÔøΩÔøΩÔøΩÔøΩ;ÔøΩÔøΩVÔøΩ[ÔøΩ;JsÔøΩÔøΩsÔøΩÔøΩÔøΩÔøΩCÔøΩÔøΩ^[m(ÔøΩÔøΩÔøΩOÔøΩÔøΩ)7ÔøΩÔøΩp0ÔøΩDÔøΩÔøΩ}ÔøΩÔøΩyÔøΩ@ÔøΩÔøΩÔøΩÔøΩ2ÔøΩÔøΩkÔøΩÌéõÔøΩÔøΩnw+ÔøΩÔøΩcÔøΩÔøΩ1ÔøΩnÔøΩÔøΩ;ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩHÔøΩ7ÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩnMm!^ÔøΩ ÔøΩvÔøΩÔøΩÔøΩ\ w5ÔøΩÔøΩÔøΩHÔøΩﬂÉ ÔøΩÔøΩE""a ÔøΩÔøΩoÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩÔøΩÔøΩw◊±LÔøΩÔøΩÔøΩÔøΩÔøΩ<w6ÔøΩÔøΩÔøΩÔøΩ]8ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ@w""ÔøΩ<ÔøΩÔøΩÔøΩÔøΩ  ÔøΩÔøΩ@ÔøΩ?ÔøΩÔøΩÔøΩÔøΩÔøΩ_ÔøΩ ÔøΩÔøΩÔøΩWOl‹ë»ªÔøΩÔøΩAÊªÜÔøΩÔøΩq=A ^ÔøΩÔøΩYÔøΩÔøΩÔøΩsÔøΩÔøΩÔøΩ?keÔøΩ<ÔøΩ6ÔøΩ≈±ÔøΩÔøΩrÔøΩYÔøΩÔøΩÔøΩ,ÔøΩÔøΩrÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ(Z8vk ∫ÔøΩÔøΩ]ÔøΩtÔøΩÔøΩ@ÔøΩÔøΩÔøΩÔøΩEÔøΩÔøΩmOg?ÔøΩÔøΩÔøΩÔøΩLÔøΩÔøΩ95ÔøΩ,Q+ÔøΩ+ÔøΩTYZÔøΩRd?ÔøΩ6M4qÔøΩÔøΩÔøΩ}ÔøΩ3ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩIÔøΩ,deÔøΩBÔøΩaÔøΩ]=ÔøΩeÔøΩÔøΩÔøΩÔøΩ""ÔøΩﬂæÔøΩ⁄¨ÔøΩÔøΩ7N(ÔøΩÔøΩ}qÔøΩ]ÔøΩ1ÔøΩLÔøΩÔøΩdPÔøΩÔøΩKÔøΩÔøΩ!^Z$yGÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ)EÔøΩ 6D-œè]cÔøΩX@xÔøΩWÍ±óÔøΩÔøΩÔøΩZÔøΩTzœ∂ÔøΩbÔøΩ-ÔøΩgÔøΩÔøΩÔøΩÔøΩ—û9=krÔøΩÔøΩÔøΩUÔøΩ]ÔøΩ7ÔøΩÔøΩ""ÔøΩl:2ÔøΩp+ÔøΩv!7ÔøΩÔøΩeP2ÔøΩÔøΩÕ∞/ÔøΩÔøΩvÔøΩÔøΩÔøΩÔøΩjDÔøΩÔøΩÔøΩÔøΩLÔøΩÔøΩÍµªZÔøΩÔøΩÔøΩÔøΩÔøΩsVNÔøΩDÔøΩÔøΩ çoÔøΩMÃùÔøΩvÔøΩÔøΩÔøΩOkSI68»≥ÔøΩvÔøΩÔøΩBÔøΩ`9ÔøΩgÔøΩa3FÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ%ÔøΩ""ÔøΩ€ÉÔøΩIÔøΩÔøΩx@”´ ÔøΩM_ÔøΩÔøΩMÔøΩ|}ÔøΩoÔøΩÔøΩÔøΩdYÔøΩ]kÔøΩ]bÔøΩÔøΩÔøΩ6,ÔøΩeÔøΩÔøΩ<ÔøΩÔøΩoÔøΩ…®ÔøΩÔøΩÔøΩÔøΩt^;ÔøΩÔøΩZ3WtÔøΩÔøΩWÔøΩt8ÔøΩ~""yÔøΩÔøΩÔøΩÔøΩzKÔøΩÔøΩÔøΩPÔøΩÔøΩÔøΩÔøΩÔøΩ)m%zÔøΩ-ZÔøΩf~ÔøΩÔøΩI0ÔøΩÔøΩ ÔøΩÔøΩœ£,8ÔøΩrÔøΩÔøΩf=ÔøΩÔøΩÔøΩhÔøΩÔøΩ*ÔøΩ~$f8ÔøΩm/8X–èÔøΩ.9ÔøΩÔøΩÔøΩPÔøΩ=M+HÔøΩÔøΩY4zÔøΩÔøΩÔøΩ<ÔøΩÔøΩN6ÔøΩÔøΩÔøΩQ@ﬁæÔøΩPÔøΩd-ÔøΩ9ÔøΩÔøΩÔøΩÔøΩ%MÔøΩÔøΩÔøΩEÔøΩÔøΩÔøΩÔøΩAÔøΩÔøΩPÔøΩNb\LÔøΩÔøΩÔøΩI[^4ÔøΩtÔøΩÔøΩ>AGÔøΩD0ÔøΩÔøΩÔøΩÔøΩ{'|ÔøΩTOÔøΩÔøΩ%ÔøΩLÔøΩ,ÔøΩ~YÔøΩÔøΩ[>ÔøΩ!KmXÔøΩr92ÔøΩÔøΩ|dÔøΩ@ÔøΩOÔøΩÔøΩ—úÔøΩÔøΩv|ÔøΩÔøΩË¶ïÔøΩÔøΩ<ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ3FÔøΩM’¥ÔøΩ‰©ºÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ~ÔøΩ¬éÔøΩÔøΩ:ÔøΩg’°ÔøΩeÔøΩÔøΩÔøΩyÔøΩÔøΩ⁄≤UÔøΩÔøΩ~V]ÔøΩÔøΩ÷ÅlÔøΩÔøΩ&ÔøΩ6ÔøΩ, ÔøΩÔøΩÔøΩÔøΩhBÔøΩ?ÔøΩÔøΩHÔøΩ(ÔøΩZÔøΩ XÔøΩÔøΩ""nÔøΩÔøΩvÔøΩf- ÔøΩYKÔøΩ~*ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩj7ÔøΩe,DÔøΩÔøΩÔøΩÔøΩÔøΩ/5!ÔøΩÔøΩÔøΩ""2ÔøΩÔøΩr0#K6\ÔøΩÔøΩÔøΩD\ÔøΩS>ÔøΩEÔøΩubÔøΩÔøΩÔøΩ60ÔøΩHÔøΩÔøΩÔøΩÔøΩÔøΩ]RÔøΩÔøΩÔøΩWÔøΩ<ÔøΩÔøΩ$ÔøΩÔøΩÔøΩÔøΩ5ÔøΩÔøΩ#ÔøΩÔøΩÔøΩWÔøΩÔøΩ]^ÔøΩÔøΩvÔøΩÔøΩ.MÔøΩÔøΩÔøΩÔøΩz3uÔøΩÔøΩÔøΩWÔøΩ‰ªÄÔøΩtÔøΩ%ÔøΩÔøΩÔøΩÔøΩÔøΩb""ÔøΩÔøΩ$/+GÔøΩÔøΩÔøΩ|1ÿ∂ÔøΩÔøΩ9HÃñÔøΩÔøΩPÔøΩÔøΩhN@ÔøΩsÔøΩ“ÉÔøΩÔøΩF-ÔøΩ}qVÔøΩÔøΩgÔøΩÔøΩqLÔøΩCÔøΩNÔøΩÔøΩE:ÔøΩ+ÔøΩÔøΩÔøΩ`ÔøΩkÔøΩMÔøΩXÔøΩÀ∂q5bÔøΩ0)»áÔøΩÔøΩ	/vÔøΩ⁄öÔøΩ8ÔøΩ]ÔøΩÔøΩfrjÔøΩÔøΩ-3[ÔøΩ83ÔøΩgÔøΩÔøΩsÔøΩÔøΩÔøΩ|ÔøΩV	|ÔøΩxÔøΩÔøΩ?ÔøΩÔøΩÔøΩÔøΩ!ÔøΩÔøΩ	ÔøΩK~ÔøΩÀèÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩvÔøΩ√øÔøΩÔøΩWÔøΩFÔøΩOÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ6ÔøΩY.YÔøΩ<ÔøΩﬁ¥"")L:ÔøΩ—®ÔøΩÔøΩyÔøΩ]ÔøΩ3szM/ÔøΩ6ÔøΩvÔøΩ<¬çlﬂ¶ÔøΩÔøΩ ÔøΩÔøΩÔøΩo%ÔøΩÔøΩÔøΩ⁄ö7.mg :rE=_ÔøΩÔøΩÔøΩÔøΩyÔøΩ5ÔøΩÔøΩV.ÔøΩÔøΩÔøΩ;mÔøΩÔøΩÔøΩÔøΩÔøΩxÔøΩ[#ÔøΩcÔøΩÔøΩEÔøΩZh;1sAÔøΩAN{ÿ™ÔøΩÔøΩL,0ÔøΩÔøΩÊµú3|e4ÔøΩ\ÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9ÔøΩdÔøΩÔøΩ(lOÔøΩÔøΩÔøΩÔøΩ[ÔøΩwÔøΩ`ÔøΩÔøΩ…§≈™twÔøΩÔøΩ ÔøΩ'F],ÔøΩÔøΩ&CÔøΩÔøΩÔøΩ<9%ÔøΩÔøΩdÔøΩRÔøΩÔøΩŸ≤ÔøΩÔøΩ;ÔøΩÔøΩ~ÔøΩÔøΩÔøΩ(bÔøΩ&m}?rÔøΩ]4«à ÔøΩœîa0N .	ÔøΩÔøΩÔøΩÔøΩ}ÔøΩ'JÔøΩÔøΩB5$nÔøΩ4ÔøΩÔøΩÔøΩÛóç° e-ÔøΩ ÔøΩ%RÔøΩÔøΩg$*ÔøΩ6((tÔøΩ\s/ÔøΩÔøΩÔøΩ ^;ÔøΩ?ÔøΩ%q@3ÔøΩÔøΩxÔøΩÔøΩPÔøΩ`ÔøΩﬁ´ÔøΩ6WÔøΩgvÔøΩÔøΩ$“ìÔøΩÔøΩÔøΩ^!'{”ª(ÔøΩÔøΩbÔøΩÔøΩ«µyÔøΩÔøΩÔøΩFBÔøΩÔøΩNÔøΩ<ÔøΩÔøΩk^ÔøΩPÔøΩwKÔøΩZÔøΩÔøΩ71ÔøΩÔøΩÔøΩRÔøΩÔøΩÔøΩÔøΩH–ëÔøΩl‚ãÅ[ÔøΩwIÔøΩÔøΩeÔøΩ]ÔøΩ/ÔøΩ&ÔøΩÔøΩÔøΩ^;IÔøΩÔøΩ6ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩYÔøΩ|ÔøΩÔøΩutÔøΩQb ÔøΩÔøΩ;ÔøΩEÔøΩÔøΩrÔøΩÔøΩ74)ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ_dÔøΩÔøΩ4,ÔøΩrÔøΩaœ≤ÔøΩÔøΩÔøΩÔøΩ)ÔøΩÔøΩÔøΩe-ÔøΩ*6\ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩz{LZÔøΩgÔøΩÔøΩdÔøΩE—î5ÔøΩÔøΩ:ÔøΩ""ÔøΩÔøΩDjÔøΩ""ÔøΩÔøΩÔøΩÔøΩÔøΩnyRÔøΩM2eÔøΩÔøΩcÔøΩÔøΩ}ÔøΩ,ÔøΩÔøΩÔøΩÔøΩtÔøΩÔøΩLÔøΩfÔøΩ8%x?UvÔøΩÔøΩÔøΩ3np◊äÔøΩÔøΩÔøΩrÔøΩoÔøΩ∆πÔøΩÔøΩ ÔøΩQGrIÔøΩÔøΩÔøΩÔøΩzzÔøΩÔøΩÔøΩÔøΩÔøΩÊüØÔøΩjœ≤ÔøΩÔøΩK}eÔøΩ!ÔøΩÔøΩ[ÔøΩwÔøΩÔøΩÔøΩ_ÔøΩna2ÔøΩÔøΩÔøΩQÔøΩ0>ÔøΩq?s:@ÔøΩyÔøΩÔøΩÔøΩO[ÔøΩf5K ìdÔøΩÔøΩ<ÔøΩMÔøΩÔøΩ@tÔøΩÔøΩIÔøΩ{ÔøΩÔøΩ>ÔøΩL%]AÔøΩÔøΩjÔøΩÔøΩOvÔøΩ^ÔøΩÔøΩÔøΩ4ÔøΩÔøΩxÔøΩÔøΩÔøΩu!ÔøΩÔøΩÔøΩvÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩkÔøΩ:oÔøΩ◊áfÔøΩÔøΩÔøΩi^ÔøΩÔøΩzÔøΩÔøΩfÔøΩMl.ÔøΩÔøΩÔøΩs ÔøΩCTÔøΩ)i/ÔøΩsÔøΩ Q9ÔøΩÔøΩÔøΩMÔøΩ}GÔøΩÔøΩÔøΩÔøΩ}ÔøΩSa_2ÔøΩÔøΩÔøΩ@ÔøΩxHÔøΩ7ÔøΩÔøΩÔøΩqÔøΩÔøΩÔøΩ8…µÔøΩÔøΩYÔøΩÔøΩ€åÔøΩ}%mÔøΩjÔøΩ25RÔøΩ,ÔøΩÔøΩFGÔøΩ0PÔøΩÔøΩZÔøΩ(9.ÔøΩÔøΩÔøΩ≈πÔøΩÔøΩgÔøΩ÷≠ÔøΩÔøΩÔøΩF*—îOÔøΩÔøΩÔøΩÔøΩÔøΩR	MÔøΩ√è5Â™∑ÔøΩ4ÔøΩ>B>>ÔøΩÔøΩL!$ÔøΩ8ÔøΩIÔøΩyÔøΩÔøΩÔøΩ…ë—®/G~Wx;ÔøΩÔøΩhÔøΩÔøΩ(ÔøΩÔøΩE1jex4ÔøΩÔøΩÔøΩÔøΩŒºzÔøΩÔøΩe ÔøΩÔøΩNÔøΩÔøΩ Ss{jÔøΩÔøΩÔøΩg rg]ÔøΩmÔøΩÔøΩBUSÔøΩÔøΩ ÔøΩYbÔøΩÔøΩ ÔøΩÔøΩ/ÔøΩ-y.ÔøΩ<ÔøΩoÔøΩ^SÔøΩqbIÔøΩÔøΩIÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩxÔøΩXCÔøΩÔøΩÔøΩMÔøΩÔøΩÔøΩÔøΩaÔøΩ?ÔøΩÔøΩmÔøΩÔøΩÔøΩÔøΩYzÔøΩÔøΩÔøΩ*^ÔøΩL$~AÔøΩ ÔøΩÔøΩHÀûk>uÔøΩ7ÔøΩÔøΩVyÔøΩEAVÔøΩOÀÄcÔøΩStÔøΩ85MÔøΩ\ÔøΩÔøΩÔøΩ7ÔøΩ'ÔøΩg4TÔøΩ.ÔøΩPÔøΩfJÔøΩÔøΩHÔøΩÔøΩ'hÔøΩx=ÔøΩÔøΩ|3 ÔøΩÔøΩQÔøΩv'ÔøΩPÔøΩÔøΩgÔøΩoÔøΩGV5ÔøΩcÀ¥ÔøΩÔøΩÔøΩÔøΩ#ÔøΩ’çGÔøΩ-ÔøΩj@ÔøΩahTÔøΩuÔøΩÔøΩÔøΩ‘ÑÔøΩÔøΩÔøΩÔøΩS[UÔøΩÔøΩÔøΩÔøΩ0ÔøΩy1ZÔøΩÔøΩÔøΩ ÔøΩÔøΩ	ÔøΩnÔøΩÔøΩuÔøΩVZ^;ÔøΩÔøΩÔøΩ$ÔøΩ%[Œ≥ÔøΩÔøΩKÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩÔøΩÔøΩ1ÔøΩ5ÔøΩÔøΩxÔøΩ Ò†ó∫ÔøΩXÔøΩLzTsÔøΩMÔøΩf	ÔøΩ]ÔøΩzÔøΩ~ÔøΩ›ÄÔøΩÔøΩ3heÔøΩÔøΩÔøΩ( ÔøΩGÔøΩÔøΩÔøΩ!.ÔøΩ◊≠A	3ÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩfŸ≠ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩMÔøΩ&ÔøΩcUPÔøΩÔøΩÔøΩg*ÔøΩZÔøΩÔøΩ.R-ÔøΩÔøΩmÔøΩÔøΩtÔøΩÔøΩÔøΩpÔøΩ6iÔøΩqÔøΩ/ÔøΩ3{ÔøΩRÔøΩÔøΩÔøΩ>ÔøΩÔøΩÔøΩ ÔøΩ…ØmÔøΩÔøΩÔøΩB!ÔøΩÔøΩ	20*ÔøΩ_ÔøΩPuÔøΩNÔøΩÔøΩÔøΩÔøΩÔøΩMÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ,|ÔøΩZJ>(ÔøΩÔøΩÔøΩÔøΩ}ÔøΩÔøΩÔøΩzÔøΩYÔøΩ-ÔøΩ	ÔøΩrH.%jdR(OTTÔøΩuFc[yÔøΩ\ƒáUÔøΩZÔøΩ›ÑfÔøΩÔøΩ@ÔøΩ^NÔøΩ7rÔøΩA"";_-«πÔøΩÔøΩ;ÔøΩOJ›Ø|ÔøΩ`DIÔøΩEÔøΩÔøΩÔøΩ]6ÔøΩÔøΩÔøΩ6(ÔøΩÔøΩÔøΩtÔøΩOi7ÔøΩÔøΩ?ÔøΩÔøΩ~q'ÔøΩÔøΩÔøΩQhÔøΩÔøΩg>ÔøΩÔøΩÔøΩXÔøΩÔøΩHÔøΩÔøΩÔøΩÔøΩÔøΩ'ÔøΩ ÔøΩÔøΩBÔøΩÔøΩÔøΩ]rcaÔøΩg3ÔøΩ 'xÔøΩV NÔøΩÔøΩÔøΩ fPÔøΩÔøΩnÔøΩÔøΩA4ÔøΩ\ÔøΩÔøΩqKÔøΩÔøΩ1ÔøΩJaÔøΩÔøΩL:&ÔøΩÔøΩlÔøΩÔøΩmÔøΩÔøΩ__ÔøΩt!p+ÔøΩƒµvÔøΩÔøΩcÔøΩ‘∑ÔøΩÔøΩÔøΩlÔøΩÔøΩrÔøΩÔøΩ◊ΩÔøΩm3ÔøΩ:CÔøΩÔøΩ;ÔøΩ/ÔøΩ…ß#fÔøΩ3ÔøΩÿ†ÔøΩDBÔøΩKLvÔøΩo\5ÔøΩQ+ÔøΩÔøΩ4ÔøΩÔøΩ[ÔøΩÔøΩÔøΩÔøΩÔøΩG@!&ÔøΩ“áÔøΩ6dÔøΩf4ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩPÔøΩtÔøΩÔøΩ|aÔøΩÔøΩ:ÔøΩtÔøΩÔøΩÔøΩ6ÔøΩÔøΩÔøΩ0√≤-ÔøΩ(4PHÔøΩZMeÔøΩÔøΩÔøΩ.-MÔøΩ7ÔøΩVOÎßôÔøΩÔøΩÔøΩtÔøΩ<}ÔøΩÔøΩ{n Œ•0ÔøΩd3,	ÔøΩFÔøΩÔøΩÔøΩRÔøΩÔøΩFMKÔøΩu'orÔøΩdÔøΩ75/WÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩRÔøΩÔøΩÔøΩÔøΩÔøΩ~ÔøΩFÔøΩÔøΩ_ÔøΩ G%ÔøΩÔøΩk⁄ìÔøΩx-VÔøΩ ≈¢yÔøΩ4 íÔøΩÔøΩÔøΩyÔøΩ—•ÔøΩÔøΩÔøΩÔøΩœÉÔøΩ^=ÔøΩw6ÔøΩÔøΩÔøΩ:lÔøΩXÔøΩÔøΩqÔøΩrÔøΩÔøΩÔøΩœçÔøΩÔøΩÔøΩskÔøΩ&ÔøΩLrÔøΩ ÔøΩÔøΩÔøΩ+ÔøΩÔøΩ~NÔøΩÔøΩÔøΩÔøΩ"" ÔøΩ=zÔøΩÔøΩLÔøΩÔøΩÔøΩÔøΩÔøΩVÔøΩ(ÔøΩÔøΩÔøΩuÔøΩhÔøΩ¬ÄÔøΩÔøΩÔøΩ5ÔøΩqÔøΩÔøΩ`ÔøΩXÔøΩÔøΩÔøΩGwtÔøΩÔøΩ-	ZÔøΩTzÔøΩÔøΩÔøΩÔøΩtÀñ wÔøΩÔøΩhÔøΩÔøΩ ÔøΩÔøΩ2ouXgÔøΩÔøΩÔøΩÔøΩﬁÜÔøΩÔøΩÔøΩ-ÔøΩvÔøΩÔøΩ	=ÔøΩpaÔøΩÔøΩÔøΩÔøΩ3ÔøΩ	p0ÔøΩZ<<%iÔøΩÔøΩÔøΩ ÔøΩÔøΩrg2ÔøΩ5ÔøΩOÔøΩ<nl cÔøΩ[ÔøΩÔøΩ3I$bÔøΩÔøΩÔøΩÔøΩ@ÔøΩ∆°ÔøΩt •ÔøΩÔøΩ[&ÔøΩÔøΩ=*ÔøΩÔøΩÔøΩÔøΩvPJ‘óyÔøΩ0ÔøΩÔøΩÔøΩ yÔøΩiFa1ÔøΩÔøΩWGÔøΩÔøΩÔøΩÔøΩ0iÔøΩ,vk%ÔøΩÔøΩ~$4/I]lÔøΩ}ÔøΩÔøΩÔøΩÔøΩ4OÔøΩ@ÔøΩÔøΩOUNÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ^)ŸølKÔøΩxO%Jt!+!ÔøΩtÔøΩ}8ÔøΩGÔøΩÔøΩÔøΩÔøΩ""ÔøΩpz9ÔøΩ$:ÔøΩ≈•ÔøΩTÔøΩmÔøΩMÔøΩsÔøΩÔøΩÔøΩ+›ÇÔøΩÔøΩÔøΩq—äÔøΩÔøΩy6ÔøΩÔøΩcÔøΩÔøΩÔøΩQÔøΩÔøΩ	ÔøΩÔøΩ5ÔøΩUƒ≥ÔøΩÔøΩÔøΩEÔøΩÔøΩ<ÔøΩÔøΩWfÕ≤ÔøΩx]ÔøΩÔøΩÔøΩJÔøΩr.VkÔøΩ<ÔøΩ==ÔøΩoÔøΩ!ÔøΩÔøΩ{WÔøΩYp0CÔøΩzÔøΩÔøΩioÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩ`hÔøΩbÔøΩDs$@?ÔøΩÔøΩÔøΩAÔøΩwÔøΩÔøΩÔøΩÔøΩ,ÔøΩ%ÔøΩjÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩixmÔøΩoÔøΩÔøΩtÔøΩÔøΩV1ÔøΩÔøΩÔøΩHÔøΩÔøΩ#ÔøΩ*∆ÇÔøΩ√üÔøΩukÔøΩÔøΩvÔøΩÔøΩÔøΩÔøΩ,OÔøΩ:ÔøΩztÔøΩÔøΩÔøΩDÔøΩÔøΩfÔøΩÔøΩÔøΩg‘ç>Iƒ∑C9ÔøΩ,seÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩ6c)ÔøΩ]dPÔøΩ\⁄ØrCF+ÔøΩÔøΩ:ÔøΩÔøΩÔøΩ]3ÔøΩÔøΩb\~AÔøΩÔøΩÔøΩ+ÔøΩÔøΩÔøΩvPiÔøΩ~ÔøΩG/ÔøΩpÔøΩÔøΩÔøΩÔøΩÔøΩ√∫'/.ÔøΩÔøΩXÔøΩnÔøΩÔøΩreNeÔøΩ◊çÔøΩÔøΩÔøΩyÔøΩJÔøΩÔøΩ>\)iLSo0ÔøΩfÔøΩwÔøΩÔøΩÔøΩ!wÔøΩ“∫ÔøΩGÔøΩÔøΩrÔøΩÔøΩkÔøΩ€µdKÔøΩÔøΩIÔøΩÔøΩ#ÔøΩlÔøΩk+ÔøΩÔøΩRwÔøΩ&ÔøΩ*Gm;ÔøΩ@ÔøΩMÔøΩt ÔøΩÔøΩz~ÔøΩoÔøΩ~DHÔøΩÔøΩÔøΩJ;@ÔøΩÔøΩÔøΩÔøΩÔøΩ/)ÔøΩÔøΩ-5ÔøΩÔøΩ,ÔøΩÔøΩÔøΩÔøΩBÔøΩ/.ÔøΩÔøΩÔøΩÔøΩ,ÔøΩÔøΩmÔãâÔøΩÔøΩJÔøΩPÔøΩ&vtÔøΩ|$ÔøΩÔøΩÔøΩ~UÔøΩÔøΩÔøΩÔøΩ`?<ÔøΩÔøΩF@}ÔøΩ@ÔøΩÔøΩÔøΩTj-ÔøΩÔøΩÔøΩq<*ÔøΩÔøΩ„íõÔøΩÔøΩ=^CÔøΩ|ÔøΩŸüÔøΩÕ∂ÔøΩÔøΩg5CÔøΩPÔøΩ ÔøΩ'k1ÔøΩ)ÔøΩ.ÔøΩÔøΩÔøΩIrÔøΩÔøΩÔøΩIy}ÔøΩ}*ÔøΩ;ÔøΩÔøΩÔøΩÔøΩV?ÔøΩ'ÔøΩÔøΩz,'ÔøΩÔøΩcÔøΩÔøΩÔøΩÔøΩÔøΩw(cÔøΩiÔøΩWÔøΩÔøΩÕõ ÔøΩÔøΩ4ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩbÔøΩ9xÔøΩ-5ÔøΩ*ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩvÔøΩÔøΩwT—≤ÔøΩ;CBzÔøΩDvﬂîÔøΩÔøΩ»ºÔøΩÔøΩÔøΩ,lÔøΩ⁄ÄU2ÔøΩ|N@ÔøΩÔøΩ ÔøΩÔøΩIÔøΩÔøΩrÔøΩÔøΩjfÔøΩKG[R ÔøΩÔøΩÔøΩ.SÔøΩ)ÔøΩkNÔøΩKy'ÔøΩÔøΩzÔøΩÔøΩ~ÔøΩÔøΩlÔøΩNÔøΩÔøΩ0ÔøΩÔøΩÔøΩs&OyH…ãÔøΩÔøΩÔøΩÔøΩeÔøΩ}OyÔøΩ#ÔøΩÔøΩÔøΩÔøΩ“áAÔøΩÔøΩ$,ÔøΩÔøΩL}ÔøΩmÔøΩÔøΩ5ÔøΩhÔøΩLar~ÔøΩÔøΩ_mK7cÔøΩÔøΩÔøΩÔøΩÔøΩ,tÔøΩÔøΩÔøΩqaÔøΩaZhÔøΩÔøΩ}qÎãîÏº∂{xÔøΩy/8hÔøΩ$da*-ÔøΩÔøΩ!,ÔøΩÔøΩLÔøΩNÔøΩcÔøΩÔøΩ8M%ÔøΩÔøΩ`ÔøΩÔøΩoSÔøΩ1ÔøΩCÔøΩÔøΩÔøΩOÔøΩkÔøΩÔøΩfÔøΩÔøΩÔøΩ#ÔøΩ'ÔøΩ@iÔøΩ/ÔøΩ&ÔøΩwÔøΩÔøΩhÔøΩV\?l+ÔøΩÔøΩpSÔøΩÔøΩÔøΩ%ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ|.ÔøΩÔøΩÔøΩÔøΩÔøΩD|√ëV3ÔøΩ%ÔøΩ.ÔøΩ?JÔøΩÔøΩÔøΩ€ÇÔøΩSÔøΩÔøΩ2ÔøΩÔøΩÔøΩ ÔøΩM\ÔøΩÔøΩ+A-ÔøΩGÔøΩÔøΩuaÔøΩ0ÔøΩÔøΩ_7ÔøΩÔøΩƒ¢%PÔøΩÔøΩ<ÔøΩOÔøΩÔøΩÔøΩv6*ÔøΩdLÔøΩÔøΩÔøΩJÔøΩÔøΩd#QÔøΩZ%ÔøΩÍÉÇÔøΩ~ÔøΩÔøΩN.nÔøΩ}ﬂêÔøΩ4ÀñÔøΩtÔøΩ>ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩaÔøΩ=ÔøΩpÔøΩYjÔøΩ	ÔøΩ~ÔøΩÔøΩ)ÔøΩ(9ÔøΩPÔøΩÔøΩÔøΩOÔøΩ 7ÔøΩÔøΩÔøΩPÔøΩ{ NÔøΩlÔøΩÔøΩ.SÔøΩ_÷ÖÔøΩ:!ÔøΩ6]ÔøΩuÔøΩÔøΩi◊ºÔøΩ%NÔøΩÔøΩ=^`^+MÔøΩÔøΩ◊öÔøΩ}ÔøΩÔøΩ…ò9ÔøΩÔøΩÔøΩbÔøΩÔøΩ:ŒÆÔøΩVÔøΩgÔøΩÔøΩÔøΩGÔøΩÔøΩwÔøΩÔøΩ ÔøΩuÔøΩÔøΩ(ÔøΩÔøΩ+ÔøΩvÔøΩZ)ÔøΩcÔøΩfÔøΩhÔøΩÔøΩ-4ÔøΩ+J∆µÔøΩXo-ÔøΩÔøΩÔøΩÔøΩÔøΩ|ÔøΩVÔøΩwÔøΩ	ÔøΩÔøΩJÔøΩÔøΩ-T‹†ÔøΩ!#ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ|bÔøΩÔøΩ""#ÔøΩiÔøΩG ÕïÔøΩÔøΩ7ÔøΩÔøΩjÿá‹¢ÔøΩÔøΩÔøΩ^ÔøΩt?ÔøΩZubÔøΩÔøΩ'ÔøΩÔøΩÔøΩ$yÔøΩ}ÔøΩHH–≥QÔøΩ_>	ÔøΩ)ÔøΩRÔøΩxÔøΩ3ÔøΩ'SÔøΩ’Ω+—äÔøΩÔøΩ2ÔøΩ/T!œò>ÔøΩ:ÔøΩ Ky+LÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩÔøΩ7ÔøΩÔøΩÔøΩÔøΩ1ÔøΩÔøΩÔøΩ&;ÔøΩÔøΩ*ÔøΩÔøΩÔøΩf*	ÔøΩÔøΩk9ÔøΩms7lÔøΩDÔøΩÔøΩJ>EÔøΩNÔøΩHzÔøΩÔøΩU÷∑ÔøΩpAÔøΩ*^ÔøΩhÔøΩÔøΩÔøΩ VLÔøΩfÔøΩ#ÔøΩ|ÔøΩÔøΩÔøΩgÔøΩzÔøΩÔøΩqÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩZÔøΩÔøΩ+D?ÔøΩÔøΩÔøΩT‹∫ÔøΩ@’∑,O’¢Ùç¥¨¬©ÔøΩ~ÔøΩsky1y%z}%9|ÔøΩ”∏ÔøΩ2ÔøΩrÔøΩ^XMÔøΩÔøΩÔøΩ;ÔøΩÔøΩ>x~ÔøΩSbÔøΩct*:xﬂ®ÔøΩÔøΩ3MÔøΩÔøΩÔøΩÔøΩzVÔøΩÔøΩÔøΩk7ÔøΩÔøΩÔøΩ.ÔøΩAÔøΩÔøΩÔøΩzÔøΩÔøΩÔøΩI‘ªÔøΩÔøΩÔøΩÔøΩ}yQÔøΩÔøΩÔøΩdLdÔøΩvÔøΩÔøΩ+ÔøΩÔøΩfÔøΩÔøΩ4EÔøΩ_ÔøΩ?ÔøΩÔøΩÔøΩ)YÔøΩ1ÔøΩZf€ò—µfÔøΩÔøΩÔøΩÔøΩ«¥ÔøΩoKF	>X7ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩWÔøΩzÔøΩÔøΩS`ÔøΩ0ÔøΩÔøΩÔøΩQÔøΩ ÔøΩdR,ÔøΩVt)·∑Æ&ÔøΩÔøΩÔøΩÔøΩRÔøΩ4NÔøΩÔøΩIÔøΩÔøΩwGÔøΩÔøΩÔøΩtÔøΩY%ÔøΩÔøΩÔøΩ/qÔøΩ æ ÔøΩ ÔøΩpÔøΩÔøΩ>hÔøΩSÔøΩpÔøΩÔøΩÔøΩ.<ÔøΩ aÔøΩ:|ÔøΩÔøΩÔøΩ3ÿºÔøΩzÔøΩ}Œü$@ÔøΩÔøΩ`QÔøΩÔøΩ<ÔøΩLcÔøΩÔøΩÔøΩG@ÔøΩÔøΩJjLWQÔøΩÔøΩÔøΩj_ÔøΩÔøΩÔøΩQÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩtÔøΩ[ÔøΩ.ÔøΩ""ÔøΩ ¢ÔøΩÔøΩ}ÔøΩw{MÔøΩÔøΩ[]qe{ÔøΩÔøΩÔøΩÔøΩÔøΩRÔøΩ‹°7ÔøΩ[ÔøΩÔøΩÔøΩTxÔøΩ<ÔøΩÔøΩv ÔøΩÔøΩÔøΩJEÔøΩÔøΩ)""ÔøΩvÔøΩ;k.ÔøΩ{ÔøΩ=ÔøΩTÔøΩmÎó°ÔøΩCÔøΩ9ÔøΩeaÔøΩbﬂíhÔøΩ[bÔøΩÔøΩ&∆°(zyÔøΩ2ÔøΩhÔøΩ0f6tl20ÔøΩzÔøΩÔøΩWÔøΩÔøΩÔøΩ ÔøΩÔøΩz⁄•ÔøΩ[€áÏó¢ÔøΩÔøΩ^s!/ÔøΩoÔøΩÔøΩÔøΩjmÔøΩvjnLÔøΩ\ÔøΩkÔøΩ”ó ÔøΩÔøΩ:ÔøΩÔøΩÔøΩÔøΩjÔøΩ)ÔøΩ8ZÔøΩ%!ÔøΩ\ÔøΩÔøΩÔøΩÔøΩÔøΩ[9ÔøΩjJ""ÔøΩÔøΩWAÔøΩa‚ÉÅIÔøΩ J]ÔøΩGL}ÔøΩTÔøΩÔøΩyÔøΩÔøΩÔøΩ[ÔøΩÔøΩÔøΩÔøΩÔøΩm05ÔøΩÔøΩ[ÔøΩ ÔøΩÕèÔèúx9 ÔøΩÔøΩ{oiÔøΩ:_gÔøΩÔøΩe$ÔøΩ&ÔøΩ)TÔøΩ ÔøΩR9ÔøΩÔøΩi÷ÜnÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ“¢ÔøΩ:ÔøΩÔøΩ_UÔøΩÔøΩ`YÔøΩÔøΩ+ÔøΩ%ÔøΩÔøΩ:ÔøΩÔøΩÔøΩh yxÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩZnÔøΩM\ÔøΩ@ÔøΩ—æÔøΩÔøΩPÔøΩSÔøΩBiÔøΩ;ÔøΩW	ÔøΩÔøΩtÔøΩÔøΩ…ò‘àÔøΩÔøΩ7ÔøΩjÔøΩqÔøΩÔøΩÔøΩ;ÔøΩÔøΩÔøΩÔøΩÔøΩMXKÔøΩVÔøΩÔøΩÔøΩdÔøΩÔøΩÔøΩ6ÔøΩÔøΩvÔøΩÔøΩÔøΩRÔøΩs|ÔøΩÔøΩÔøΩ ¢ÔøΩtÔøΩUEÔøΩ\ÔøΩÔøΩ?ÔøΩÔøΩ\ÔøΩÔøΩÔøΩÔøΩdgL%ÔøΩÔøΩ /;ÔøΩyÔøΩuÔøΩÔøΩZZÔøΩÔøΩ:0ÔøΩ`ÔøΩÔøΩÔøΩÔøΩisÔøΩÔøΩjÔøΩÔøΩÔøΩ6ÔøΩm2m*TÔøΩÔøΩÔøΩbcmÔøΩKaÔøΩÔøΩ ÔøΩVurÔøΩ Œ§ÔøΩÔøΩÔøΩ}XR#@ÔøΩ¬Ø)ÔøΩ÷äVÔøΩÔøΩÔøΩÔøΩÔøΩoÔøΩt äÔøΩÔøΩQuÔøΩÔøΩ#ÔøΩÔøΩ}ÔøΩCÔøΩÔøΩR⁄ÉÔøΩÔøΩ—ÅgÔøΩCÔøΩÔøΩÔøΩ2ÔøΩq91ÔøΩoÔøΩC ÔøΩP+ ÔøΩXÔøΩ_ÔøΩÔøΩGTÔøΩÔøΩÔøΩu—®ÔøΩJÔøΩÔøΩÔøΩBÔøΩÔøΩÔøΩÔøΩ.ÔøΩÔøΩÔøΩÔøΩN!ÔøΩÔøΩŒ¥E%ÔøΩÔøΩiÔøΩÔøΩ‰ôùÔøΩÔøΩÔøΩwÔøΩÔøΩ÷ÇÔøΩrÔøΩÔøΩ[D:ÔøΩÔøΩ3ÔøΩÔøΩÔøΩÔøΩÔøΩjÔøΩ.ÔøΩDÔøΩÔøΩÔøΩTÔøΩ ÔøΩ&ÔøΩÔøΩÔøΩÔøΩÔøΩ8QÔøΩbJLxY/ÔøΩÔøΩÔøΩÔøΩÔøΩVÔøΩÔøΩÔøΩÔøΩ2ÔøΩÔøΩÔøΩÔøΩd-oHÔøΩa ÔøΩ'iÔøΩÔøΩÔøΩÔøΩJÔøΩÔøΩÔøΩÔøΩ`J{T!PVÔøΩ""+[ÔøΩÔøΩ1[ÔøΩ{QxY*}ÔøΩ\56ÔøΩ#ÔøΩÔøΩÔøΩTÔøΩÔøΩ(ÔøΩÔøΩwE]IÔøΩÔøΩHÔøΩÔøΩÔøΩ—æÔøΩ~≈öÔøΩÔøΩÔøΩÔøΩM!ÔøΩ,0	ÔøΩ◊ÜÔøΩÔøΩ8jÔøΩ«æÔøΩÔøΩÔøΩ 4=ÔøΩdOÔøΩlC!,ÔøΩ9ÿ¶ÔøΩÔøΩÔøΩG$@ÔøΩK/C	/ÔøΩÔøΩÔøΩ6-Z⁄åÔøΩ0=ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ5ÔøΩÀ¶lÔøΩÔøΩÔøΩÔøΩÔøΩ–åW #OÔøΩÔøΩÔøΩbÔøΩÔøΩÔøΩÔøΩ;ÔøΩÔøΩnÔøΩ ÔøΩ«ΩÔøΩÔøΩmÔøΩÔøΩ&9!WÔøΩŸïÔøΩ‹´ZcYÔøΩ4mÔøΩÔøΩÔøΩŒ®…îÔøΩÔøΩ~ÔøΩÔøΩÔøΩ#ÔøΩ)ÔøΩBÔøΩÔøΩÔøΩ$ÔøΩ]|dÔøΩÔøΩÔøΩ8ÔøΩÔøΩ*ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩU7'ÔøΩ¬üoÔøΩS=ÔøΩÔøΩN2qÔøΩÔøΩTlÔøΩ%ÔøΩxÔøΩ÷µÔøΩÔøΩYlÔøΩÔøΩtÔøΩÔøΩÔøΩ«≠^ÔøΩÔøΩ;ÔøΩQXIÔøΩ≈áÔøΩÔøΩÔøΩsW8ÔøΩÔøΩ\ÔøΩÔøΩvÔøΩÔøΩ)~NbA{ÔøΩcL%}ÔøΩ	T}ÔøΩÔøΩÔøΩÔøΩÔøΩUÔøΩÔøΩÔøΩÔøΩ	ÔøΩS3!{ÔøΩ$ÔøΩ-<ÔøΩ]ÔøΩÔøΩjÔøΩÔøΩÔøΩ*uGC;3ÔøΩ<ÔøΩ#{ÔøΩ	ÔøΩÔøΩÔøΩNÔøΩXUÔøΩ>xÔøΩÔøΩÔøΩÔøΩcxE;ÔøΩp 49ÔøΩÔøΩÔøΩ""?ÔøΩÔøΩ+ÔøΩÔøΩ1ÔøΩZÔøΩ;84fÔøΩZÔøΩxÔøΩÔøΩWÔøΩÔøΩ=ÔøΩÔøΩ«™ÔøΩÔøΩJG43ÔøΩ)ÔøΩÔøΩÔøΩ=ÔøΩWJ.ÔøΩ{ÔøΩO_ÔøΩÔøΩÔøΩÔøΩ €≥ÔøΩMÔøΩÔøΩÔøΩÔøΩ*IÔøΩOÔøΩÔøΩnÔøΩÔøΩ/ÔøΩ—ΩNÔøΩcÔøΩÔøΩ_ﬂ≤:MÔøΩ2h4GÔøΩŒå ÔøΩÔøΩSO3ÔøΩ`ÔøΩKA\ÔøΩÔøΩÔøΩÔøΩÔøΩXÔøΩÔøΩ5ÔøΩÔøΩÔøΩQj\ÔøΩÔøΩ ÔøΩ3ÔøΩ⁄ñÔøΩ83ÔøΩÔøΩÔøΩÔøΩ9;ÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩ,ÔøΩÔøΩÔøΩÔøΩo,ÔøΩg1ÔøΩÔøΩaÔøΩc9DÔøΩYÔøΩRÔøΩ,ÔøΩÔøΩIÔøΩFÔøΩ”ØÔøΩÔøΩÔøΩo.ÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩkÔøΩ|qÔøΩÔøΩE+DÔøΩ âÔøΩÔøΩÀÇ]ÔøΩ?ÔøΩÓ†ø\ ,ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ;ÔøΩ\BVÔøΩtÔøΩSÔøΩÔøΩg;ÔøΩoAÔøΩÔøΩÔøΩ;5ÔøΩ Ã£ÔøΩmÔøΩSÔøΩÔøΩÔøΩdZÔøΩYbSiÔøΩÔøΩDÔøΩ ÔøΩÔøΩ~~ÔøΩ6zƒßy5ÔøΩuRÔøΩÔøΩ #YÔøΩV&' rÔøΩÈ¥©ÔøΩÔøΩ“ÑÔøΩÔøΩÔøΩ‹éÔøΩ,ÔøΩÔøΩÔøΩ~ÔøΩÔøΩÔøΩÔøΩ'q8ÔøΩÔøΩÔøΩpHvÔøΩ""ÔøΩÔøΩ|ÔøΩÔøΩÔøΩjÔøΩ)ÔøΩÔøΩÔøΩpÔøΩGÔøΩD€™QŸ¨/ÔøΩÔøΩÔøΩÔøΩpÔøΩ2ÔøΩ`ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ#cxÔøΩ{dÔøΩÔøΩ}ÔøΩDÔøΩÔøΩÔøΩÔøΩÂ§ÉhÔøΩ~Tdlﬁü‘úÔøΩnÔøΩBÔøΩÔøΩÔøΩ? ÔøΩÔøΩÔøΩ-9ÔøΩ2.m^v5ÔøΩGÔøΩ¬∞≈ΩÔøΩ c9ÔøΩ5ÔøΩÔøΩ!ƒ≤ÔøΩ,ÔøΩ&]EÔøΩÔøΩ2ÔøΩtÔøΩQÌÇóD. ±ÔøΩÔøΩÔøΩÔøΩ6 +zÔøΩcÔøΩÔøΩ'vÔøΩRÔøΩ“íÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩo$\MnÔøΩÔøΩÔøΩxﬂ≥√∏ÔøΩÔøΩG yiaÔøΩÔøΩvÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ)UÔøΩÔøΩÔøΩ…∞KÔøΩl{ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ¬ÉÔøΩÔøΩÔøΩÔøΩT#ÔøΩT	ÔøΩ/dQÔøΩÔøΩ ÔøΩrÔøΩqÔøΩÔøΩbÔøΩÔøΩÔøΩÔøΩ^kÔøΩÔøΩÔøΩÔøΩ=MÔøΩÔøΩ$ÔøΩOÔøΩÔøΩsÔøΩ.ÔøΩÔøΩÔøΩ*ÔøΩÔøΩÔøΩD7ÔøΩm$""+ÔøΩ,ÔøΩzw{SWOÔøΩY ÔøΩÔøΩÔøΩ/qÔøΩÔøΩP]/ÔøΩ7ÔøΩrDÔøΩÔøΩÔøΩDÔøΩÔøΩÔøΩÔøΩhÔøΩ5Rp:e#ÔøΩAfÔøΩÔøΩ“ñÔøΩÔøΩÔøΩH}!e=ÔøΩ(ÔøΩdÔøΩÔøΩÔøΩNÔøΩÔøΩ ÔøΩUÔøΩÔøΩÔøΩÔøΩb6ÔøΩZrÔøΩÔøΩœòsÔøΩ“•yhÔøΩIÔøΩÔøΩÔøΩÔøΩE>ÔøΩÔøΩÀôÔøΩkÔøΩ#ÔøΩÔøΩ3ÔøΩÔøΩÔøΩGÔøΩOƒàÔøΩÔøΩVPÔøΩeO~ÔøΩ∆áÔøΩÔøΩÔøΩÔøΩY'f>ÔøΩÔøΩ»ã/`ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩlh(ÔøΩÔøΩ<%ÔøΩ.ÔøΩUYÔøΩ1ÔøΩ"".1mpÔøΩV^ÔøΩ$ÔøΩ}ÔøΩÔøΩÔøΩ≈ù∆§–∏ÔøΩnÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩBÔøΩ}ÔøΩ13iIÔøΩÔøΩÔøΩ@ÔøΩÔøΩ2ÔøΩPÔøΩÔøΩÔøΩaÔøΩ-}ÔøΩÔøΩxÔøΩÔøΩÔøΩt]ÔøΩ`ÔøΩÔøΩL^l]ÔøΩÕ°ÔøΩOÔøΩR–ô_K1zÔøΩawUÔøΩÔøΩÔøΩÔøΩÔøΩOÔøΩÔøΩÔøΩ""ÔøΩPÔøΩ8ÔøΩÔøΩL7SÔøΩÔøΩ>ÔøΩÔøΩÔøΩﬁúÔøΩÔøΩÔøΩmIAÔøΩÔøΩoÔøΩf9SÔøΩB÷ß9ÔøΩÔøΩ^ r/ÔøΩÔøΩ=ÔøΩÔøΩxÔøΩﬁ≤ÔøΩ7tÔøΩÔøΩg8ÔøΩÔøΩ<ÔøΩÔøΩwLXÔøΩ/} ÔøΩ#ÔøΩ9L*ÔøΩ> stream xÔøΩÔøΩt4ÔøΩm”æÔøΩ%ÔøΩ[AmÔøΩ.ÔøΩÔøΩ ÔøΩZÔøΩÔøΩÔøΩZÔøΩwÔøΩÔøΩ^ÔøΩwÔøΩEÔøΩ-ÔøΩAÔøΩ-DÔøΩ	ÔøΩmÔøΩÔøΩ}ÔøΩÔøΩyÔøΩÔøΩsÔøΩÔøΩ8gÔøΩfÊöπÔøΩÁöõÔøΩA]ÔøΩSÔøΩnÔøΩaHN.ÔøΩ(@VUUQ ÔøΩqÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩPÔøΩÔøΩ/7.ÔøΩ.ÔøΩÔøΩÔøΩDÔøΩ ÔøΩÔøΩÔøΩ!Q>93$ ÔøΩ ÔøΩÔøΩÔøΩÔøΩ <| AQ!Q ÔøΩÔøΩÔøΩGÔøΩÔøΩÔøΩ\ÔøΩ U.ÔøΩqÔøΩeÔøΩÔøΩ;ÔøΩ#ÔøΩVÔøΩHÔøΩ1ÔøΩÔøΩÔøΩÔøΩÔøΩ <""""BÔøΩÔøΩÔøΩÔøΩlÔøΩÔøΩ!ÔøΩ!ÔøΩÔøΩÔøΩfv -8 AÔøΩÔøΩÔøΩÔøΩÔøΩ5ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩefÔøΩÔøΩGXIÔøΩq \ÔøΩHkÔøΩ&ÔøΩ	ÔøΩpÔøΩX ~ÔøΩÔøΩÔøΩCÔøΩ0ÔøΩÔøΩeh[CÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩHW3ÔøΩrÔøΩAÔøΩÔøΩ*ÔøΩfA PÔøΩÔøΩU ÔøΩ ÔøΩ?`ÔøΩ? ÔøΩ_wÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩÔøΩÔøΩÔøΩ~'ÔøΩÔøΩÔøΩp{3ÔøΩ;fÔøΩÔøΩÔøΩA ÔøΩA*\H7$ÔøΩfÔøΩhfÔøΩGÂõπÔøΩAÔøΩÔøΩÔøΩQÔøΩﬂùÔøΩ@ÔøΩ 3ÔøΩÔøΩÔøΩ9ÔøΩPÔøΩÔøΩÔøΩÔøΩEÔøΩ_ePÔøΩ,ÔøΩÔøΩÔøΩÔøΩÔøΩC`H'ÔøΩ_ÔøΩÔøΩA0ÔøΩÔøΩ›πÔøΩLÔøΩwÔøΩyÔøΩeXBaÔøΩÔøΩHX8;pÔøΩÔøΩÔøΩÔøΩÔøΩEÔøΩÔøΩ (ÔøΩÔøΩ>+  ÔøΩÔøΩ@7ÔøΩ5ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩnoOÔøΩÔøΩEÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩz:ÔøΩÔøΩ@ HÔøΩ3ÔøΩÔøΩÔøΩ?ÔøΩÔøΩpyx P0`ÔøΩÔøΩÔøΩpÔøΩÔøΩÔøΩrC,ÔøΩÿ®ÔøΩ#ÔøΩn C J{< ‡ØøÔøΩDÔøΩÔøΩÔøΩsÔøΩÔøΩ{ÔøΩÔøΩÔøΩ2ÔøΩZr:ÔøΩÔøΩ;&#wxÔøΩÔøΩÔøΩÔøΩ xxÔøΩy BÔøΩÔøΩVQ7ÔøΩÔøΩÔøΩÔøΩÔøΩTEÔøΩ%ÔøΩÔøΩÔøΩ-ÔøΩÔøΩ’±ÔøΩ_`ÔøΩk9ÔøΩ ÔøΩ,ÔøΩGÔøΩ`ÔøΩ[ÔøΩF@ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩUÔøΩÔøΩDÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩ~ÔøΩYÔøΩÔøΩÔøΩÔøΩÔøΩ=ÔøΩÔøΩÔøΩ/ JÔøΩÔøΩHÔøΩÔøΩÔøΩQk ÔøΩoÔøΩÔøΩÔøΩ“™B,ÔøΩÔøΩÔøΩÔøΩUDÔøΩÔøΩAfÔøΩ3'?ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩA,‘°HÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩZ5;(ÔøΩwÔøΩÔøΩz[PY@ÔøΩÔøΩPÔøΩÔøΩEÔøΩN(]ÔøΩ	ÔøΩ9ÔøΩÔøΩ ÔøΩ{ÔøΩÔøΩljÔøΩÔøΩŸá<ÔøΩÔøΩÔøΩwÔøΩÔøΩ 3ÔøΩÔøΩ5zÔøΩ%ÔøΩRjA- nÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩ7ÔøΩÔøΩÔøΩÔøΩ5fÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩDIÔøΩÔøΩ&ÔøΩÔøΩoS@ÔøΩÔøΩ$ÔøΩÔøΩ?ÔøΩ nÔøΩÔøΩB nÔøΩÔøΩÔøΩ?ÔøΩ;#(ÔøΩ’ÖÔøΩÔøΩ/ÔøΩÔøΩ[ÔøΩÔøΩAÔøΩÔøΩÔøΩpÔøΩXÔøΩMmPÔøΩeÔøΩ4ÔøΩ+ÔøΩ∆òÔøΩÔøΩÔøΩÔøΩK}^Œ±cdÔøΩÔøΩÔøΩÔøΩjÔøΩVVÔøΩrhÔøΩÔøΩdl”©&ÔøΩxÔøΩÔøΩÔøΩÔøΩÔøΩ:ÔøΩzwÔøΩsNz–∂ÔøΩyÔøΩÔøΩÔøΩsÔøΩ	ÔøΩ4ÔøΩf	ÔøΩÔøΩ^ÔøΩ%ÔøΩ–â#ÔøΩÔøΩÔøΩi#tÔøΩ{ja’ØÔøΩLÔøΩÔøΩRÔøΩ;ÔøΩÔøΩÔøΩÔøΩÔøΩ$ÔøΩ‹¶ÔøΩÔøΩUSÔøΩÔøΩBF#ÔøΩÔøΩÔøΩÔøΩÔøΩl6ÔøΩÔøΩ8ÔøΩ`ÔøΩYÔøΩÔøΩ	\ÔøΩ4 OQKÔøΩ,ÔøΩqÔøΩÔøΩZÔøΩ`epxhÔøΩamwÔøΩÔøΩÔøΩKÔøΩÔøΩ!SÔøΩÔøΩÔøΩ?vÔøΩÔøΩbÔøΩÔøΩÔøΩbÔøΩÔøΩt""OsbY2-ÔøΩÔøΩÔøΩÔøΩCÔøΩyÔøΩÔøΩF◊åÔøΩÔøΩ6ÔøΩÔøΩÔøΩ	ÔøΩÔøΩÔøΩÔøΩyÔøΩ[ÔøΩÔøΩpÔøΩÔøΩ+>ÔøΩÔøΩ@·îúÔøΩBÔøΩ^yZÔøΩ/ÔøΩ4ÔøΩ:ÔøΩ?ÔøΩOÔøΩ_ÔøΩÔøΩYÔøΩbÔøΩÔøΩ5ÔøΩ öÔøΩÔøΩe]QrÔøΩÔøΩÔøΩ^Z+ÔøΩ&ÔøΩ lÔøΩ…•ÔøΩÔøΩ%~ÔøΩGÔøΩÔøΩƒªhVÔøΩIwÔøΩÔøΩ/8NÔøΩ’±f1ÔøΩÔøΩSFÔøΩLÔøΩ	ÔøΩÔøΩ]ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ›ÆÔøΩÔøΩ1ÔøΩÔøΩfÔøΩRÔøΩÔøΩmÔøΩÔøΩ|;fqÔøΩ o(ÔøΩ97ÔøΩÔøΩÔøΩaJÔøΩÔøΩUÔøΩÔøΩÔøΩ%ÔøΩÔøΩÔøΩNÔøΩ8ÔøΩÔøΩg8ÔøΩÔøΩÔøΩjHÔøΩ„ªåÔøΩmÔøΩc,ÔøΩ~ÔøΩÔøΩÔøΩq<ÔøΩÔøΩ	gÔøΩIÔøΩÔøΩbÔøΩpÔøΩÔøΩ$ÔøΩÔøΩÔøΩÔøΩSÔøΩR ÔøΩ,ÔøΩS*L	lÔøΩ9ÔøΩ«∏| 'ÔøΩÔøΩÔøΩÔøΩÔøΩZÔøΩ2l»£$ÔøΩÔøΩÔøΩ|,›É@ihÔøΩjÔøΩbV!?[ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ.ÔøΩÔøΩÔøΩZÔøΩ<ÔøΩÔøΩsÔøΩÔøΩÔøΩÔøΩÔøΩ+ÔøΩ-D<ÔøΩ∆ï~ÔøΩÔøΩRÔøΩÔøΩÔøΩsÔøΩÔøΩR)›ÑÔøΩÔøΩÔøΩ58RtÔøΩÔøΩÔøΩÔøΩTÔøΩÔøΩÔøΩKÔøΩ3aÔøΩZ xÔøΩÔøΩQ>ÔøΩÔøΩÔøΩÔøΩÔøΩn5ÔøΩ.ÔøΩÔøΩÔøΩO#|y4IÔøΩ;?@ÔøΩÔøΩ1&‚ïÖ-KÔøΩÔøΩÔøΩxÔøΩTÔøΩÔøΩ2fÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ#ÔøΩN/{=iÔøΩ*lKÔøΩÔøΩÔøΩÔøΩÔøΩ7ÔøΩSÔøΩUY,ÔøΩÔøΩ$ÔøΩEÔøΩÔøΩ\ÒòÇçŸ∫X	S<ÔøΩÔøΩHÔøΩ[1cpÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩiHÔøΩKÔøΩV@ÔøΩÔøΩZ@_ÔøΩ;6ÔøΩ;vÔøΩQÔøΩÔøΩ|{ÔøΩÔøΩÔøΩÔøΩÿ¨ÔøΩÔøΩsÔøΩa[TTÔøΩMnrÀè`ÔøΩxÔøΩÔøΩD ÔøΩV3v;ÔøΩÔøΩx2>% x^4ÔøΩQÔøΩ6ÔøΩÔøΩraIÔøΩFoÔøΩÔøΩÔøΩÔøΩ:cÔøΩÔøΩ⁄øÔøΩpÔøΩ”ãn[yÔøΩFÔøΩ UÔøΩÔøΩIy&ÔøΩHC?ÔøΩ4:ÔøΩ^TmBTÔøΩÔøΩUÔøΩMwÔøΩÔøΩﬂôÔøΩÔøΩÔøΩ‘ÅÔøΩÔøΩÔøΩBr|ÔøΩÔøΩÔøΩD""ÔøΩhSÔøΩÔøΩX0ÔøΩÔøΩ;6&Nb^ow1ÔøΩ=ÔøΩÔøΩ;wÔøΩ2ÔøΩ\#^wÔøΩyÔøΩLÔøΩgÔøΩ!ÔøΩa*{ÔøΩ ]BÔøΩÔøΩ'ÔøΩ”úFYLÔøΩÔøΩÔøΩMhÔøΩÔøΩÔøΩHÔøΩÔøΩ3ÔøΩÔøΩÔøΩYÔøΩÔøΩe:ÔøΩZ;4ÔøΩ$ÔøΩÔøΩÿ∞)ÔøΩ ^(F'!MÔøΩÔøΩÔøΩÔøΩÔøΩ.ÔøΩÔøΩÔøΩ~#XÔøΩÔøΩf|ÔøΩ6 wRÔøΩ[ÔøΩ`ZÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩHXÔøΩ(ÔøΩÔøΩ“•ÔøΩ$]ÔøΩÔøΩÔøΩÔøΩCÔøΩlÔøΩÔøΩ$ÔøΩÔøΩZ ÔøΩ[nÔøΩ\ÔøΩanÔøΩ*ÔøΩ=ÔøΩ#CÔøΩoÔøΩÔøΩR«ûÔøΩ^≈ê2ÔøΩÔøΩ#ÔøΩÔøΩÔøΩrÔøΩ’≠ÔøΩ<%ÔøΩ €∏ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ?8ÔøΩÔøΩzÔøΩ5ÔøΩÔøΩMkÔøΩÔøΩÔøΩÔøΩ-~ÔøΩÔøΩÔøΩqÔøΩU]ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩz~ÔøΩÔøΩ`OÔøΩ&IÔøΩB{YÔøΩ.hÔøΩ1ÔøΩÔøΩÔøΩ}n:ÔøΩÔøΩvÔøΩÔøΩbÔøΩuÔøΩXlÔøΩÔøΩÔøΩ	ÔøΩxÔøΩ ÔøΩÔøΩ2}-ZÔøΩÔøΩÔøΩÔøΩ‘úaÔøΩÔøΩÔøΩAbJÔøΩÔøΩ]5ÔøΩfÔøΩÔøΩÔøΩ∆ôÔøΩ9ÔøΩ-""ÔøΩÔøΩ?ÔøΩ~ÔøΩÔøΩÔøΩxÔøΩÔøΩ\mÔøΩcYSÔøΩÔøΩBÔøΩÔøΩÔøΩ?ÔøΩ| ÔøΩÔøΩ-ÔøΩMÔøΩ=ÔøΩ»ùN=xÔøΩÔøΩX?ÔøΩÔøΩ`ÔøΩÔøΩMÔøΩÔøΩÔøΩÔøΩhÔøΩÔøΩÔøΩcyCÔøΩ7#*ÔøΩÔøΩﬂ≠ÔøΩlÔøΩÔøΩV[)uÔøΩÔøΩﬂ∞XÔøΩk=ÔøΩÔøΩN?ÔøΩŒÆÔøΩ€ßÔøΩfÔøΩ]i1ÔøΩÔøΩ_6tT[ÔøΩ/.dÔøΩÔøΩÔøΩÔøΩÔøΩ\ÔøΩ«íÔøΩ0 ÔøΩÔøΩp.ÔøΩSc/ÔøΩÔøΩvÔøΩ!ÔøΩIÔøΩÔøΩÔøΩYÔøΩÔøΩYp_ÔøΩ∆ÖÔøΩVoa7clÔøΩÔøΩÔøΩCOÔøΩL:ÔøΩ\ÔøΩÔøΩOÔøΩÔøΩ}ÔøΩ#ÔøΩÔøΩÔøΩ+DMiÔøΩWzÔøΩÔøΩsÔøΩ+6cÔøΩÔøΩÔøΩÔøΩ]ÔøΩmÔøΩ√•ÔøΩÔøΩUÔøΩÔøΩ''ÔøΩbÔøΩÔøΩwÔøΩÔøΩlÔøΩOÔøΩÔøΩ<ÔøΩaÔøΩ>lÔøΩdÔøΩ1ÔøΩsÔøΩÔøΩN’µÔøΩ3=ÔøΩÔøΩÔøΩÔøΩf$ÔøΩÔøΩ&kÔøΩ]ÔøΩ2ÔøΩyÔøΩ¬©ÔøΩÔøΩ%’è8,ÔøΩ7ÔøΩÔøΩÔøΩIÔøΩÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩÔøΩ8ÔøΩ""≈©ÔøΩÔøΩÔøΩkÔøΩnÔøΩ^*ÔøΩÁ≥üÔøΩÔøΩÔøΩ∆êÔøΩ'zÔøΩÔøΩÔøΩ3ÔøΩÔøΩdR⁄úÔøΩ6>ÔøΩÔøΩdvs.ÔøΩ6)ÔøΩTÔøΩ5NÔøΩPÔøΩÔøΩÔøΩÔøΩ mÔøΩ^ÔøΩÔøΩÔøΩÔøΩ fÔøΩÔøΩBÔøΩÔøΩGlÔøΩÔøΩ	ÔøΩ/ÔøΩÔøΩ4ÔøΩVÔøΩÔøΩ$ÔøΩT⁄üÔøΩfZÔøΩ{<_ÔøΩqÔøΩ)ÔøΩÔøΩÔøΩ})’´{ÔøΩ^=cÔøΩ/jI^ÔøΩÔøΩPÔøΩ{ÔøΩÔøΩT^ÔøΩ:a^ÔøΩÔøΩ_ÔøΩ;%|ÔøΩÔøΩÔøΩÔøΩ$ÔøΩÔøΩJ%€£4ÔøΩÔøΩ{~ÔøΩÔøΩÔøΩÔøΩÔøΩ1ÔøΩUgÔøΩiAÔøΩZIÔøΩg ÔøΩÔøΩÔøΩ$ÔøΩ6=ÔøΩKŸõÔøΩniFÔøΩÔøΩ)ÔøΩ2ÔøΩÔøΩa~ÔøΩÔøΩ◊¥X:ÕâÔøΩÔøΩ3FhÔøΩÔøΩGÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩÔøΩzÔøΩÔøΩÔøΩÔøΩ(]ÔøΩ\ÔøΩÔøΩÔøΩ:ÔøΩÔøΩÔøΩo“ªÔøΩÔøΩ, fÔøΩ»ûÔøΩÔøΩ⁄™%_ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ-ÔøΩÔøΩÔøΩlÔøΩ3ÔøΩkÔøΩÔøΩHÔøΩÔøΩÔøΩ!ÔøΩ-ÔøΩÔøΩÔøΩ;ÔøΩÔøΩÔøΩ:%%ÔøΩ8sÃ©ZÔøΩ~GÔøΩÔøΩÔøΩ=ÔøΩÔøΩÔøΩÔøΩ~◊°ÔøΩWÔøΩÔøΩl},ÔøΩzoÔøΩWÔøΩAjÔøΩÔøΩnÔøΩR-ÔøΩÔøΩÔøΩz{ÔøΩŒ™ÔøΩ?PZR(ÔøΩcT›ÉÔøΩ$ÔøΩÔøΩÔøΩÔøΩÔøΩ€ëÔøΩÔøΩ&ÔøΩÔøΩx1\q/ÔøΩ6Á©≠ÔøΩÔøΩ$ÔøΩlD_ÔøΩ…èÔøΩ*ÔøΩÔøΩGÔøΩÔøΩ+ Ñ (	ÔøΩÔøΩ7ÔøΩe3ÔøΩÔøΩpÔøΩÔøΩÔøΩ6!ÔøΩ^ÔøΩÔøΩÔøΩhÔøΩ5ÔøΩT=ÀÄÔøΩÔøΩPMÔøΩÔøΩKÔøΩGoÔøΩÔøΩÔøΩ€ÑÔøΩÔøΩaÔøΩÔøΩÔøΩzf78ÃüÀõÔøΩ4ÔøΩuKÔøΩ	ÔøΩÔøΩÔøΩ_}{ÔøΩ|ÿ∏`ÔøΩÔøΩjÔøΩ=ÔøΩ4ÔøΩÔøΩ{ÔøΩWhj^BÔøΩ.ÔøΩ{w0ÔøΩÔøΩWÔøΩ‹íÔøΩÔøΩ,LzÔøΩ,ÔøΩYÔøΩÔøΩÔøΩ6ÔøΩ0ÔøΩ3ÔøΩ{6ÔøΩÔøΩÔøΩ%M	CÔøΩ*ÔøΩ 8ÔøΩ[jÔøΩÔøΩÔøΩnR›°ÔøΩÔøΩÔøΩbÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ\/ HÔøΩtÔøΩÔøΩÔøΩSivTGÔøΩIÔøΩÔøΩ6ÔøΩÔøΩ{ÔøΩÔøΩKt5`ÔøΩ|ÏΩæÔøΩNÔøΩÔøΩwÔøΩÔøΩ◊£yGÔøΩLÔøΩ4nÔøΩUtÔøΩE^÷´ÔøΩÔøΩ ÔøΩ«µG›ºÔøΩÔøΩ3\ÔøΩ mÔøΩLÔøΩÔøΩjÔøΩ""ÔøΩÔøΩAÔøΩ:ÔøΩÔøΩ≈ã+ÔøΩ»∫zzZÔøΩÔøΩÔøΩ{ÔøΩÔøΩdiiZ&ÔøΩHÔøΩÔøΩMqÔøΩ=ÔøΩfÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÿáDPÔøΩ^ÔøΩÔøΩfÔøΩÔøΩÔøΩ15ÔøΩ5 ÔøΩÔøΩ:ÔøΩ$ÔøΩ?ÔøΩÔøΩÔøΩÔøΩCÔøΩ@ÔøΩYÔøΩÔøΩaÔøΩÔøΩK+.lXoÔøΩÔøΩÔøΩCÔøΩÔøΩ…∞ÔøΩÔøΩO%yÔøΩÔøΩÔøΩÔøΩÔøΩUÔøΩB6R?`lÔøΩ]x:/ÔøΩ0$dÔøΩ,ÔøΩ]-ÔøΩ;rÏ™ä ÔøΩ*QÔøΩbv.ÔøΩqPÔøΩÔøΩÔøΩ1ÔøΩk^ÔøΩÔøΩ!ÔøΩ4ÔøΩÔøΩÔøΩeÔøΩ${nZÔøΩÔøΩk4ÔøΩÔøΩÔøΩÔøΩÔøΩuÔøΩ]ÔøΩu{zÔøΩÔøΩÔøΩÔøΩoCÔøΩ0ÔøΩÔøΩ-ÔøΩÔøΩÔøΩ/ÔøΩÔøΩ[tÔøΩ_aot3ÔøΩÔøΩqŸõ|rÔøΩÔøΩÔøΩ[Gz-ÔøΩÔøΩ€®]ÔøΩÔøΩ# $ÔøΩOÔøΩÔøΩ	ÔøΩJeZ&ÔøΩ ÔøΩAÔøΩ:/ÔøΩp`ÔøΩÔøΩHÔøΩÔøΩYÔøΩÔøΩTÔøΩiÔøΩÔøΩÔøΩÔøΩÔøΩvo+c=>_ÔøΩÔøΩ1ÔøΩÔøΩÔøΩÔøΩÔøΩ!vh	ÔøΩÔøΩS)RÔøΩwÔøΩÔøΩ'ÔøΩÔøΩÔøΩ'lÔøΩÔøΩÔøΩ’êhÔøΩAaÔøΩÔøΩÔøΩÔøΩÔøΩoTÔøΩÔøΩÔøΩÔøΩ1	6>ZÔøΩÔøΩÔøΩR|ÔøΩÔøΩ ÔøΩIkÔøΩÔøΩZd=ÔøΩdÔøΩÔøΩÔøΩoÔøΩY`_xÔøΩ–¨Ae`ÔøΩÔøΩ ÔøΩmÔøΩÔøΩ<ÔøΩ)Êã¨ÔøΩÔøΩÔøΩX+|qÔøΩOuBÔøΩYÔøΩÔøΩ~d:ÔøΩ[ÔøΩ49}}ÔøΩ	ÔøΩÔøΩMÔøΩyKÔøΩÔøΩ>fGQÔøΩV0ÔøΩÔøΩd4\ÔøΩ=ÔøΩyW1~ gÔøΩ=mÔøΩwÔøΩÔøΩÔøΩÔøΩmÔøΩmÔøΩ~oÔøΩÔøΩ@lÔøΩ)ÔøΩÔøΩeÔøΩ&[ÔøΩdpÔøΩKrÔøΩERÔøΩÔøΩÔøΩÔøΩrÔøΩÔøΩn∆íÔøΩ9ORÔøΩ÷ëÔøΩÔøΩrÔøΩcÔøΩr;ÔøΩﬁ¢ÔøΩÔøΩZÔøΩÔøΩÔøΩSÔøΩÔøΩÔøΩÔøΩ,ÔøΩ%ÔøΩÔøΩ""Ë£ühKÔøΩÔøΩv«à!E1ÔøΩ/ÔøΩ>ÔøΩÔøΩ-ÔøΩÔøΩrÔøΩÔøΩ(3ÔøΩnÔøΩnÔøΩÔøΩ	MÔøΩzÔøΩÔøΩIÔøΩÔøΩÔøΩJÔøΩÔøΩÔøΩÔøΩ)UÔøΩÔøΩ8BÔøΩÔøΩÔøΩxÔøΩÔøΩÔøΩ<ÔøΩxÔøΩÔøΩÔøΩ5ÔøΩQÔøΩÔøΩEÔøΩ“ÑÔøΩÔøΩÔøΩvpÔøΩzxÔøΩÔøΩÔøΩ–πÔøΩÔøΩÔøΩ8mÔøΩÔøΩÔøΩÔøΩÔøΩ-ÔøΩÔøΩÔøΩ&ÔøΩÔøΩpÔøΩÔøΩ7Q–πÔøΩÔøΩÔøΩHÔøΩÔøΩLÔøΩÔøΩÔøΩÔøΩÔøΩvae`ÔøΩÔøΩÔøΩZÔøΩÔøΩÔøΩ*ÔøΩ[VÔøΩ1ÔøΩÔøΩÔøΩy+ÔøΩÔøΩÔøΩcÔøΩÔøΩÔøΩlÔøΩÔøΩqÔøΩ8:ÔøΩNQuÔøΩhŸ¨ÔøΩ&ÔøΩÔøΩxÔøΩÔøΩÔøΩ&ÔøΩ ÆÔøΩ—ø>ÔøΩ ÔøΩÔøΩÔøΩ,ÔøΩÔøΩ*ÔøΩmÔøΩÔøΩ≈á+GÔøΩÔøΩÔøΩÔøΩÔøΩVÔøΩfK'fÔøΩÔøΩCnÔøΩH!ÔøΩÔøΩJÔøΩXÔøΩÔøΩnXÔøΩpÔøΩÔøΩEzb@ÔøΩmÔøΩ€ª}3qÔøΩrwÔøΩ<ÔøΩÔøΩÔøΩU^ÔøΩJÔøΩ/K_ÔøΩÔøΩÔøΩX$iS}ﬂàÔøΩqmÔøΩ0ÔøΩÔøΩÔøΩ	ÔøΩÔøΩ	ÔøΩ}rAÔøΩÔøΩÔøΩsÔøΩÔøΩ[ÔøΩÔøΩ""ÔøΩ'TÔøΩIÔøΩÔøΩÔøΩi#hÔøΩÔøΩÔøΩ?ÔøΩÔøΩÔøΩLÔøΩ~DÔøΩSLtÔøΩÔøΩbÔøΩ^5zLÔøΩÔøΩfÔøΩ{tÔøΩÔøΩlÙãçÉ—º\ %}cH≈≥ÔøΩ4ÔøΩÔøΩÔøΩF-!ÔøΩvvÔøΩnÔøΩÔøΩMÔøΩjÔøΩ#ÔøΩw9CÔøΩiÔøΩeÔøΩ/ÔøΩÔøΩ=;ÔøΩ""D`WuÔøΩÔøΩbÔøΩm9hÔøΩ@OÔøΩ4xTÔøΩÔøΩEIsÔøΩywÔøΩÔøΩÔøΩÔøΩÔøΩ<ÔøΩKÔøΩÔøΩVÔøΩÔøΩ|ÔøΩ1FœÖL ÔøΩÔøΩFnÔøΩ.ÔøΩ8|ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩ~tZ√¨ÔøΩÔøΩPÔøΩÔøΩg{20ÔøΩQcUÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩ{qYÔøΩ}ÔøΩÔøΩoÔøΩÃùÔøΩÔøΩ6jÔøΩÔøΩ«≠ÔøΩÔøΩqÔøΩÔøΩÔøΩÔøΩ ÔøΩ#ÔøΩ&dÔøΩtÔøΩQÔøΩÔøΩÔøΩÔøΩnÔøΩÔøΩ+4ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ?ÿ≠ÔøΩZÔøΩ%ÔøΩÔøΩfhÔøΩkMÔøΩÔøΩÔøΩÔøΩÔøΩ?◊üÔøΩÔøΩpu{ÔøΩEÔøΩÔøΩÔøΩ;ÔøΩJÔøΩÔøΩÔíΩÔøΩÔøΩ&]œÆÔøΩ]ÔøΩ{ÔøΩÔøΩjW+ÔøΩÔøΩÔøΩÔøΩÔøΩ[:ÔøΩÔøΩGj'ÔøΩÔøΩÔøΩPDÔøΩ+ 0ÔøΩÔøΩfÔøΩ>ÔøΩd?8gÔøΩ^ÔøΩ ÔøΩÔøΩcÔøΩ*ÔøΩ+ÔøΩ	ÔøΩÔøΩÔøΩÔøΩ{ZÔøΩÔøΩÔøΩ‹©ÔøΩÕåzÔøΩ):ÔøΩbJrpTÔøΩBÔøΩeÔøΩÔøΩe9ÔøΩÔøΩÔøΩÔøΩ+^iÔøΩYoÔøΩÔøΩBÔøΩUÔøΩÔøΩ/^ÔøΩ’∑ÔøΩ[bÔøΩ JÔøΩ~;sÔøΩZ@ÔøΩÔøΩef>3ÔøΩZÔøΩJÔøΩÔøΩF=JÔøΩÔøΩ:ÔøΩÔøΩ?m◊®lÔøΩ%,ÔøΩ.CÔøΩÔøΩq»πÔøΩÔøΩÔøΩ^Z`]ÔøΩaÔøΩÔøΩzqÔøΩ1cÔøΩÔøΩ,ÔøΩÔøΩÔøΩÔøΩÔøΩpÔøΩSÔøΩJÔøΩÔøΩGÔøΩÔøΩF€îÔøΩMÔøΩkÔøΩÔøΩÔøΩ_sfÔøΩÔøΩ+^zÔøΩ∆àÔøΩÔøΩFÔøΩhÔøΩpEÔøΩCŒâ1}ÔøΩ2i^ÔøΩÔøΩÔøΩÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩa≠í¥;ÔøΩÔøΩdYMNCÔøΩÔøΩzÔøΩÔøΩ$YÔøΩÔøΩ`ÔøΩ\ÔøΩ&jÔøΩÔøΩÔøΩYÔøΩÔøΩRÔøΩÔøΩÔøΩÔøΩ4ÔøΩÔøΩÔøΩ>ÔøΩWO4ÔøΩ -nÔøΩ“ºXÔøΩÔøΩÔøΩÔøΩœ¶ÔøΩpÔøΩÔøΩÔøΩÔøΩ`vÔøΩ;ÔøΩÔøΩ€µÔøΩ‘ØÔøΩGÔøΩÔøΩÔøΩm!A!RÔøΩ7loGTÔøΩÔøΩQ2k}ÔøΩÔøΩ\lÔøΩ6ÔøΩÔøΩÔøΩwÔøΩUÔøΩÔøΩÔøΩÔøΩ&jÔøΩÔøΩ'2O_ÔøΩÔøΩf%ÔøΩ.}7ÔøΩÔøΩdÔøΩ[ÔøΩ1ÔøΩŸäÔøΩÔøΩÔøΩiÔøΩÔøΩÔøΩ	s÷éÔøΩÔøΩÔøΩÔøΩ ÔøΩe~0ÔøΩÔøΩÔøΩÔøΩVÔøΩ}ÔøΩÔøΩVx&ÔøΩÔøΩ@S%ÔøΩÔøΩÔøΩ„©ëÔøΩÔøΩ`ÔøΩlÔøΩÔøΩ'ÔøΩ'ÔøΩ2ÔøΩÔøΩ¬ò◊îuÔøΩÔøΩÔøΩfÔøΩsÔøΩÔøΩÔøΩÔøΩ_ÔøΩÔøΩyAÔøΩÂã´ÔøΩÔøΩ/ÔøΩ-ﬂï3 ÔøΩ`O]ÔøΩyÔøΩÔøΩÔøΩ""=ÔøΩÔøΩ|ÔøΩ$QÔøΩMÔøΩSÔøΩÔøΩZÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩwÔøΩqs€íÔøΩÔøΩzC\`œ≠ÔøΩÔøΩ)ÔøΩjÔøΩ!ÔøΩ!ÔøΩÔøΩGÔøΩÔøΩwiUÔøΩl	yÔøΩ5ÔøΩÔøΩÔøΩOÔøΩÔøΩÔøΩÔøΩœß'mÔøΩW“¥+N <ÔøΩ+ÔøΩÔøΩyÔøΩY6ÔøΩdrÔøΩrfÔøΩ7ÔøΩCÔøΩ,ÔøΩÔøΩ]UÔøΩG{>}ÔøΩÔøΩ~JbmzÔøΩS,ÔøΩÔøΩBMÔøΩÔøΩÔøΩÔøΩ%ÔøΩÔøΩ*ÔøΩÔøΩÔøΩÔøΩiÔøΩÔøΩ ÔøΩÔøΩoÔøΩ,ÔøΩÔøΩ[ÔøΩÿµr65ÔøΩx2yW ÔøΩ}ÔøΩÔøΩÔøΩÔøΩﬂÄu5ÔøΩ)uÔøΩ”ÑÔøΩBÔøΩÔøΩQ1ÔøΩ1ÔøΩÔøΩÔøΩÔøΩÔøΩ[^L’∏u[ÔøΩ	HNÔøΩ%ÔøΩUoÔøΩCÔøΩÔøΩÔøΩD≈¥,ÔøΩIÔøΩ ®ÔøΩp:ÔøΩ~ÔøΩÔøΩÔøΩ9wcÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ	-)&ÔøΩÔøΩFÔøΩOÔøΩoÔøΩÔøΩÔøΩ4i„ê©ÔøΩÔøΩÔøΩ.nkÔøΩ…µCSÔøΩKÔøΩRAÔøΩgÔøΩ-ÔøΩ1dÔøΩÔøΩCﬁì9ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ~>u}c=ÔøΩÔøΩÔøΩkÔøΩÔøΩÔøΩ1	.XÔøΩÔøΩtÔøΩÔøΩa&Z1ÔøΩ:!ÔøΩÔøΩ—†}|ÔøΩ: #ÔøΩÔøΩÔøΩÔøΩYÔøΩ5ÔøΩÔøΩ;oÔøΩ%CRÔøΩÔøΩÔøΩÔøΩÔøΩe2ÔøΩÔøΩuÔøΩeÔøΩÔøΩ DÔøΩae[ÔøΩÔøΩÔøΩÔøΩ;ÔøΩ7+ZÔøΩÔøΩIÔøΩ~ÔøΩÔøΩÔøΩO5ÔøΩÔøΩbÃ©=(ÔøΩÔøΩÔøΩÔøΩkÔøΩÔøΩ`ÔøΩÔøΩÔøΩFÔøΩrÔøΩSd—†)◊àÔøΩÔøΩÔøΩÔøΩDeÔøΩKÔøΩÔøΩdO}ÔøΩ`ÔøΩÔøΩÔøΩlÔøΩhÔøΩÔøΩ&HmﬂîÔøΩÔøΩ""ÔøΩÔøΩAÔøΩ*ÔøΩÔøΩÔøΩ3ÔøΩÔøΩ+ÔøΩÔøΩÔøΩÔøΩÔøΩ_lÔøΩÔøΩÔøΩÔøΩeR‘àÔøΩÔøΩÔøΩ ^ÔøΩ2ÔøΩ$ÔøΩÔøΩhÔøΩÔøΩÿΩÔøΩÔøΩÔøΩÔøΩ:ÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩÔøΩÔøΩÔøΩ÷¶)QÔøΩH*ÔøΩCcÔøΩÔøΩÔøΩErQVÔøΩÔøΩÔøΩ7ÔøΩxÔøΩ+LÔøΩFÔøΩ*ÔøΩ ÔøΩrÔøΩÔøΩDÔøΩzI_ÔøΩkÔøΩÔøΩ%7ÔøΩÔøΩÔøΩ{ÈΩ†ÔøΩ{ÔøΩÔøΩGÔøΩ=ÔøΩ1ÔøΩP1ÔøΩÔøΩ<	S ÔøΩl^FÔøΩlÔøΩÔøΩgÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩjuÔøΩÔøΩcXÔøΩKÔøΩÔøΩÔøΩ kÔøΩÔøΩÔøΩÔøΩ&NÔøΩ""HÔøΩLÔøΩÔøΩÔøΩRÔøΩ~`OFdZÔøΩÔøΩÔøΩÔøΩ+OFÔøΩÔøΩÔøΩaqÔøΩrÔøΩ$ÔøΩbÔøΩÔøΩqMÔøΩ]RÔøΩrÎ™É~ÔøΩÔøΩÔøΩqÔøΩbÔøΩÔøΩÔøΩ:ÔøΩ'ÔøΩÔøΩ}ÔøΩÔøΩ~K/ÔøΩhÔøΩyÔøΩTÔøΩÔøΩÔøΩÔøΩaÔøΩÔøΩ9YÔøΩuÔøΩÔøΩÔøΩ`C-ÔøΩÔøΩbÔøΩÔøΩÔøΩÔøΩÔøΩ>K tÔøΩÔøΩN5BÔøΩ|EÔøΩ]ÔøΩÔøΩÔøΩŸÉÔøΩQ8ÔøΩbÔøΩ#-ÔøΩÃ¥lÔøΩÔøΩÔøΩ ÔøΩÔøΩ⁄ÉnÔøΩ0ÔøΩÔøΩÔøΩ6ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ⁄éÔøΩÔøΩÔøΩÔøΩKÔøΩÔøΩ∆•ÔøΩÔøΩÔøΩ*Óáª=ÔøΩ""jÔøΩÔøΩÔøΩÔøΩ}ÔøΩÔøΩRŒüÔøΩzÔøΩÔøΩVÔøΩWÔøΩÔøΩÔøΩ^uÔøΩÔøΩ ÔøΩ>ÔøΩpÔøΩÔøΩÔøΩYÔøΩÔøΩÔøΩCÔøΩÔøΩfÔøΩt$ÔøΩwÔøΩÔøΩcÔøΩÔøΩ+IÔøΩ++tQ%qÔøΩT@ÔøΩ2mÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩjÔøΩÔøΩkÔøΩEÔøΩÔøΩcÔøΩÔøΩÔøΩÔøΩcÔøΩÔøΩOÔøΩÔøΩ]ÔøΩlÔøΩYÔøΩ,|VÔøΩrÔøΩViBÔøΩkÔøΩÔøΩÔøΩÔøΩÔøΩ&ÔøΩÔøΩ1vÔøΩÔøΩÔøΩtÔøΩÔøΩÔøΩÔøΩxÔøΩ5ÔøΩÔøΩaÔøΩYÔøΩAK""l_ÔøΩÔøΩc7ÔøΩ8WLÔøΩÔøΩ\ÔøΩ2ÔøΩÔøΩ(ÔøΩÔøΩ['GMÔøΩEÔøΩÔøΩeÔøΩÔøΩÔøΩÔøΩ1ÔøΩlAÔøΩÔøΩÔøΩd⁄ñIÔøΩÔøΩgDÔøΩc,md›üupwp|jÔøΩa)knÔøΩoKÔøΩÔøΩgÔøΩ_jÔøΩtbÔøΩÔøΩd]ÔøΩ9<_Õ¥jÔøΩÔøΩt807ÔøΩsÔøΩ≈≠ÔøΩqÔøΩÔøΩÔøΩfÔøΩaÔøΩÔøΩ*ÔøΩÔøΩJ2ÔøΩx|ÔøΩÔøΩÔøΩdÔøΩQxÔøΩÔøΩ^ÔøΩ28ÔøΩÔøΩ@ÔøΩÔøΩÔøΩ$ÔøΩÔøΩ:ÔøΩfmÂ≤ôÔøΩ(ÔøΩODÔøΩÔøΩ8n'ÔøΩÔøΩ0;D*ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ?xÔøΩlÔøΩ endstream endobj 25 0 obj << /Filter /FlateDecode /Length1 1612 /Length2 9053 /Length3 0 /Length 10108 >> stream xÔøΩÔøΩÔøΩTÔøΩÔøΩ6LÔøΩt72ÔøΩtwwIw7ÔøΩ C5tIÔøΩÔøΩÔøΩÔøΩ›ç -% 84JÔøΩ4ÔøΩÔøΩÔøΩÔøΩ}ÔøΩÔøΩÔøΩÔøΩÔøΩZﬂ∑fÔøΩwÔøΩÔøΩÔøΩÔøΩ~ÔøΩ5ÔøΩŸ§ÔøΩÔøΩÔøΩ@ÔøΩÔøΩ(;ÔøΩ0@FUUQ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ…çFGÔøΩÔøΩ:ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ»∏ÔøΩ,ÔøΩO2YKËìùÔøΩ3ÔøΩÔøΩÔøΩÔøΩÔøΩpÔøΩs	srÔøΩ99ÔøΩÔøΩeÔøΩÔøΩ&ÔøΩÔøΩÔøΩ[TÔøΩJÔøΩÔøΩ;ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩtÕøÔøΩ F ÔøΩKHHÔøΩÔøΩ/wÔøΩÔøΩÔøΩ ÔøΩÔøΩ T-ÔøΩv ÔøΩÔøΩÔøΩÔøΩÔøΩ mg ÔøΩÔøΩÔøΩÔøΩÔøΩvPÔøΩÔøΩ0ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ;ÔøΩÔøΩÔøΩÔøΩ8+ÔøΩÔøΩhÔøΩÔøΩAnÔøΩ kÔøΩÔøΩjÔøΩNÔøΩ?ÔøΩÔøΩÔøΩÔøΩtÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ6P/K7ÔøΩIÔøΩÔøΩ ÔøΩOkÔøΩÔøΩÔøΩrÔøΩÔøΩÔøΩ @ÔøΩÔøΩcÔøΩÔøΩ«ÄÔøΩwo \ÔøΩ\ÔøΩÔøΩÔøΩÔøΩÔøΩ@`ÔøΩ_Œñ@ÔøΩÔøΩÔøΩÔøΩ%ÔøΩÔøΩÿÄA uyvÔøΩ7ÔøΩ`	ÔøΩÔøΩmhÔøΩÔøΩÔøΩÔøΩÔøΩoÔøΩi	vÔøΩÔøΩz2ÔøΩ+sKÔøΩÔøΩÔøΩ&ÔøΩÔøΩÔøΩÔøΩÔøΩsÔøΩÔøΩ]ÔøΩÔøΩÔøΩÔøΩ`ÔøΩÔøΩ%rÔøΩÔøΩÔøΩe9ÔøΩÔøΩÔøΩÔøΩÔøΩuGÔøΩÔøΩÔøΩ,ÔøΩ |jÔøΩ«üÔøΩ:@ÔøΩÔøΩ ~0ÔøΩÔøΩÔøΩwÔøΩ.ÔøΩÔøΩÔøΩHQÔøΩoÔøΩ'ÔøΩdÔøΩ (ÔøΩÔøΩSPÔøΩGÔøΩ rÔøΩÔøΩÔøΩvÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩRrÔøΩ?UÔøΩÔøΩÔøΩÔøΩÔøΩy* ÔøΩ=ÔøΩÔøΩÔøΩÔøΩ[zÔøΩ P7PÔøΩÔøΩ?ÔøΩÔøΩ–∏ÔøΩ ÔøΩ` `ÔøΩCÔøΩÔøΩÔøΩIÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩs>qÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩ>ÔøΩ1ÔøΩkÔøΩJÔøΩjÔøΩ ÔøΩ,*ÔøΩÔøΩNZÔøΩÔøΩÔøΩÔøΩÔøΩ`ÔøΩÔøΩÔøΩpq	pÔøΩÔøΩEÔøΩÔøΩwÔøΩÔøΩqUÔøΩÔøΩ8ÔøΩ8ÔøΩdÔøΩ‘¶eÔøΩÔøΩ7ÔøΩ^&ÔøΩSs~b-ÔøΩÔøΩÔøΩÔøΩpÔøΩqÔøΩ>\ÔøΩÔøΩTÔøΩÔøΩÔøΩÔøΩÔøΩ·ø£ÔøΩÔøΩHÔøΩÔøΩ	ÔøΩ{8:ÔøΩÔøΩfÔøΩKÔøΩÔøΩQ[:ÔøΩ}ÔøΩ6x""ÔøΩÔøΩiTÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩ?KÔøΩ ÔøΩ{8ÔøΩÔøΩVjÔøΩÔøΩRÔøΩ'2ÔøΩqÔøΩsÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ k 0hÔøΩÔøΩ2‰∫øWÔøΩi8ÔøΩÔøΩÔøΩ-O^ÔøΩÔøΩÔøΩÔøΩ{ÔøΩ/ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ?*KÔøΩÔøΩeÔøΩÔøΩ5ÔøΩÔøΩÔøΩÔøΩNÔøΩÔøΩÔøΩÔøΩlÔøΩ{ÔøΩÔøΩÔøΩÔøΩnnÔøΩ>hOÔøΩB| ?ÔøΩÔøΩÔøΩyÔøΩÔøΩl ;ÔøΩÔøΩÔøΩxÔøΩ9 `ÔøΩÔøΩÔøΩ{ÔøΩB ÔøΩﬂ¢?HÔøΩaÔøΩoÔøΩ'ÔøΩxZlÔøΩÔøΩÔøΩgÔøΩaÔøΩÔøΩÔøΩ ÔøΩÔøΩ 8lÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ;ÔøΩ>qÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩdÔøΩbÔøΩÔøΩÔøΩ\ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ–øÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ€øÔøΩÔøΩÔøΩÔøΩÔøΩ/ÔøΩD[ÔøΩsÔøΩÔøΩÔøΩ7ÔøΩu]ÔøΩKÔøΩ{ÔøΩmOÔøΩ""ÔøΩÔøΩ_pÔøΩMÔøΩ=ÔøΩÔøΩÕòÔøΩ'iÔøΩd/)WÔøΩ/r…õÔøΩÔøΩÔøΩIÔøΩ^ÔøΩ~ÔøΩ?ÔøΩÔøΩjÔøΩjÔøΩÔøΩdÔøΩÔøΩÔøΩnKeÔøΩ0ÔøΩÔøΩÔøΩÔøΩwEA3ÔøΩÔøΩWÔøΩÔøΩ*ÔøΩBÔøΩÔøΩmNÔøΩ2ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ6ÔøΩ?CÔøΩÔøΩBÔøΩ=AÔøΩÔøΩÔøΩRxÔøΩ⁄áÔøΩÔøΩÔøΩl"" !ÔøΩÔøΩ -hÔøΩ’àÔøΩ6ÔøΩ	CﬁÜS|ÔøΩÔøΩÔøΩÔøΩ4ÔøΩLeÔøΩ7hI^u8kÔøΩc#+ÔøΩÔøΩÔøΩ}ÔøΩÔøΩJÔøΩ!€ß/#ÔøΩÔøΩr""#ÔøΩÔøΩÔøΩuz+ÔøΩXÔøΩyeÔøΩÔøΩx~V ÔøΩ“ØÔøΩÔøΩgÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ""ÔøΩ∆úvÔøΩÔøΩxÔøΩÔøΩÔøΩÔøΩ?ÔøΩÔøΩœñÔøΩÔøΩL…èÔøΩmÔøΩÔøΩÔøΩÔøΩÔøΩqSÔøΩyÔøΩÔøΩÔøΩ’Ø1ÔøΩ`ÔøΩÔøΩÔøΩZÔøΩSÔøΩÔøΩÔøΩÔøΩ?^uqRÔøΩ9Vat7(ƒ¥o!\ÔøΩÔøΩÔøΩÔøΩ|uÔøΩ„®´ÔøΩÔøΩÔøΩ–∂?uP√óÔøΩÔøΩÔøΩP[ÔøΩ3ÔøΩÔøΩÔøΩMÔøΩZ?sSÔøΩf{`ÔøΩÔøΩcM,ÔøΩÔøΩL-}ÔøΩÔøΩ|ÔøΩNÔøΩÔøΩÔøΩÔøΩ80ÔøΩ[ÔøΩTÔøΩÔøΩÔøΩBgÔøΩ ÔøΩÔøΩ[ÔøΩ!! ÔøΩÔøΩ6*tÔøΩ3ÔøΩÔøΩÔøΩkÔøΩÔøΩÔøΩÔøΩÔøΩ5rÔøΩCÔøΩÔøΩÔøΩÔøΩƒÅ6_ÔøΩrÔøΩoÔøΩÔøΩjn1ÔøΩ-:ÔøΩ%ÔøΩ3>ÔøΩL0|ÔøΩÔøΩÔøΩÔøΩ%ÔøΩÔøΩ^ÔøΩxÔøΩ;lÔøΩÔøΩ8OÔøΩÔøΩÔøΩÔøΩTÔøΩ&ÔøΩ;ÔøΩÔøΩbÔøΩ7ÔøΩS-ÔøΩ5x€àÔøΩÔøΩ:ÔøΩÔøΩa*?ÔøΩÔøΩÔøΩÔøΩQÔøΩÔøΩgÔøΩÔøΩÔøΩ'ÔøΩ""ÔøΩÔøΩUD5ÔøΩD01ÔøΩu7ÔøΩÔøΩBÔøΩHÔøΩÔøΩÔøΩÔøΩ}TZÔøΩÔøΩ_ÔøΩ	EWÔøΩÔøΩÔøΩÔøΩR{ÔøΩÔøΩŒ∞÷´yÔøΩeÔøΩ ÔøΩ)ÔøΩÔøΩzÔøΩDcÔøΩZ&ÔøΩƒÜojWbYÔøΩ1WÔøΩ\“±ÔøΩZÔøΩÔøΩÔøΩÔøΩaAÔøΩ’ï&ÔøΩ-ÔøΩ~ÔøΩÔøΩÔøΩ ÔøΩÔøΩBÔøΩoÔøΩÔøΩÔøΩ?ÔøΩlÔøΩÔøΩ t1ÔøΩÔøΩ=ÔøΩAÔøΩgÔøΩÔøΩÔøΩÔøΩqÔøΩ7:ÔøΩHÔøΩÔøΩÔøΩDm%$ÔøΩGx‹ôÚ§∏æÔøΩ0OÔøΩFÔøΩÔøΩYz]q4ÔøΩÔøΩ-:ÔøΩÔøΩaÔøΩ""ÔøΩY0r3ÔøΩÔøΩÔøΩ	ÔøΩÔøΩÔøΩ:^ÔøΩ%ÔøΩY$aÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÀÆ9yÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ»≤<:ÔøΩÔøΩ*[ uÔøΩc_nÔøΩÔøΩÔøΩÔøΩs[_ÔøΩÔøΩÔøΩÔøΩÔøΩ3bÔøΩIÔøΩH%7MÔøΩÔøΩlÔøΩ ÔøΩ&)ÔøΩxÔøΩÔøΩÔøΩHvÔøΩ3ÔøΩÔøΩWÔøΩÔøΩÔøΩ,]6ÔøΩSÔøΩtÔøΩÔøΩÔøΩ(ÔøΩYt-ÔøΩVÔøΩÔøΩ*ÔøΩD_ÔøΩÔøΩ-l}ÔøΩyÔøΩÔøΩ,.ÔøΩÔøΩ#5ÔøΩÔøΩ)!ÔøΩ EÔøΩÔøΩÔøΩ@pÔøΩglÔøΩfÔøΩnÔøΩÔøΩsÔøΩÔøΩÔøΩ%ÔøΩÓ∞†Bc	ÔøΩ{ÔøΩlÔøΩQ'ÔøΩUUÔøΩÔøΩ9[ÔøΩÔøΩÔøΩLgÔøΩlÔøΩa}ÔøΩOÕ£+4ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩf4ÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩZ2ÔøΩA—±""MÔøΩÔøΩÔøΩÔøΩUQÔøΩ:)ÔøΩÔøΩÔøΩDÔøΩv}ÔøΩÔøΩ1ÔøΩÔøΩÔøΩÔøΩÔøΩ7ÔøΩ)ÔøΩJÔøΩÔøΩÔøΩÔøΩÔøΩ(>p–±ÔøΩRÔøΩÔøΩ›âc5ud—è_ÔøΩvufO$ÔøΩ!ÔøΩÔøΩ]#6NÔøΩÔøΩRÔøΩ`ÔøΩÔøΩÔøΩÔøΩ[ÔøΩÔøΩ‰é∏ÔøΩiÔøΩhÔøΩ\#^bumÔøΩEÔøΩÔøΩÔøΩE<\ÔøΩÔøΩÔøΩ1ÔøΩeÔøΩÔøΩÔøΩÔøΩ3MÔøΩyÔøΩRÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩqÔøΩj1j2ÔøΩÔøΩhU/lÔøΩrÔøΩ‡¨óÔøΩNÔøΩÔøΩÔøΩÔøΩ%ÔøΩÔøΩÔøΩÔøΩ^#>ÔøΩcÔøΩÔøΩbWÔøΩ2|ÔøΩÁûêÔøΩ#ÔøΩ8ÔøΩÔøΩÔøΩ]iDkrvÔøΩ]‘† ÔøΩÔøΩÔøΩÔøΩgv7ÔøΩÔøΩYXÔøΩ>y7ÔøΩZ?ÔøΩJÔøΩÔøΩ/ÔøΩÔøΩFÔøΩ!ÔøΩÔøΩÔøΩ'yÔøΩÔøΩ:ÔøΩ2ÔøΩÔøΩB#VY]9ÔøΩoÔøΩwgÔøΩÔøΩ3 bÔøΩ~\4DBW""BÔøΩ/pÔøΩÔøΩzÔøΩÔøΩÔøΩl+!HÔøΩi.&CK%ÔøΩÔøΩÔøΩ›Ü>ÔøΩÔøΩÔøΩuhGÔøΩÔøΩ""ÔøΩÔøΩV}ÔøΩ ÔøΩÔøΩÔøΩkÔøΩÔøΩÔøΩrÔøΩ8C4.ÔøΩÔøΩ∆ïÔøΩJ/WÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ[ÔøΩÔøΩbÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩKÔøΩÔøΩ..EÔøΩÔøΩŒé`ÔøΩÔøΩ-MmÔøΩJ8–≠ÔøΩ<ÔøΩX@›¨5wcRÔøΩÔøΩv)t@ÔøΩ%B^?ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩBg_'ÔøΩnÔøΩ8ÔøΩ%cMÔøΩÔøΩ8ÔøΩÔøΩ+UÔøΩÔøΩÔøΩÔøΩÔøΩÕ£hÔøΩÔøΩÔøΩÔøΩ8{-qÔøΩÔøΩbMÏâ∏ÔøΩÔøΩKasÔøΩ|ÔøΩxÔøΩlÔøΩ?FÔøΩÔøΩzÔøΩEÔøΩÔøΩ_ÔøΩ◊øÔøΩÔøΩÔøΩRÔøΩÔøΩ#\ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩKÔøΩÔøΩ=NÔøΩﬁëÔøΩ,eÔøΩ	! ÔøΩÔøΩ4%ÔøΩÔøΩÔøΩÔøΩÔøΩ\5ÔøΩÔøΩÔøΩÔøΩÕπ'ÔøΩ4ÔøΩ\<>tHÔøΩÔøΩ7o{ÔøΩÔøΩXÔøΩÔøΩÔøΩ""ÔøΩÔøΩo;tÔøΩR[‘ÆAnÔøΩGÔøΩ	ÔøΩ`;ÔøΩ&qÔøΩÔøΩÃ©ÔøΩÔøΩﬂÅÔøΩÔøΩtÔøΩCÔøΩÔøΩ~ÔøΩXkÔøΩw`ÔøΩ0”∂kGH""*ÔøΩ(ÔøΩÔøΩK^ÔøΩÔøΩ—ÅÔøΩIÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩnÔøΩÔøΩÔøΩL2ÔøΩZÔøΩÔøΩÃéa`4ÔøΩ5 ÔøΩAÔøΩÔøΩ'bi;ÔøΩÔøΩ)ÔøΩÔøΩÔøΩÔøΩZÔøΩVÔøΩÔøΩÔøΩÔøΩYOWtÔøΩÔøΩÔøΩÔøΩÔøΩaÔøΩÔøΩz>Br3ÔøΩÔøΩÔøΩ	≈éÔøΩÔøΩÔøΩÔøΩ%ÔøΩ(…≥ÔøΩÔøΩPÔøΩ‘∫ÔøΩÔøΩ)ÔøΩÔøΩÔøΩÔøΩ_1!ÔøΩ%ÔøΩÔøΩÀæÔøΩÔøΩ1|=ÔøΩvÔøΩT<ÔøΩÔøΩÔøΩÔøΩ&zÔøΩÔøΩÔøΩÔøΩ7ÔøΩÔøΩ=r*|ÔøΩ>ÔøΩÔøΩÔøΩÔøΩÔøΩX[ÔøΩdŒÇÔøΩÔøΩ4ÔøΩu÷ßWÔøΩ`ÔøΩNÔøΩÔøΩRÔøΩÔøΩÔøΩÕ≥0|%ÿéuÔøΩ ÔøΩ›µÔøΩ*ÔøΩ#»¥7ÔøΩZ_wÔøΩ.ÔøΩ?ÔøΩÔøΩwYÔøΩÔøΩÔøΩ:ÔøΩ4:\ÔøΩ}oÔøΩ{ÔøΩÔøΩÔøΩFjÔøΩfÔøΩB-ÔøΩC0ÔøΩhÔøΩHÔøΩNÔøΩÔøΩÔøΩ`2yh.€¥A)ÔøΩ!hNÔøΩÔøΩMÔøΩÔøΩ%4ÔøΩÔøΩÔøΩÔøΩÔøΩTXÔøΩ4–©ÔøΩ~ÔøΩÔøΩ,ÔøΩÔøΩÔøΩÔøΩÔøΩaÔøΩÔøΩ5ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩzÔøΩÔøΩÔøΩg,ÔøΩÔøΩlHÔøΩ$ÔøΩ ÔøΩÔøΩNÔøΩÔøΩIÔøΩX	(ÔøΩuÔøΩfFÔøΩÔøΩXzKÔøΩ^ÔøΩ['ÔøΩLÔøΩ}hÔøΩÔøΩÔøΩÔøΩÔøΩ+,6ÔøΩÔøΩVN5vÔøΩÔøΩÔøΩfÔøΩÔøΩ^0ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ2ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ}ÔøΩ^*RÔøΩ*ÔøΩÔøΩÔøΩ`ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩ~ÔøΩÔøΩÔøΩÔøΩÔøΩ""«Ü|ÔøΩ[ÔøΩÕ≥wÔøΩZzÔøΩÔøΩÔøΩfÔøΩHÔøΩÔøΩÔøΩÔøΩ/?ÔøΩVÔøΩÔøΩsYÔøΩV8z8AÔøΩÔøΩ~ÔøΩÔøΩ$ÔøΩÔøΩÔøΩkÔøΩÔøΩ@ÔøΩÔøΩXÔøΩy}ÔøΩœöÔøΩM>ÔøΩDÔøΩ^ÔøΩÔøΩ!ÔøΩ*#_ÔøΩÔøΩjÔøΩnÔøΩ~(ÔøΩÔøΩÔøΩtÔøΩ}ÔøΩ3ÔøΩDÔøΩ‹Ü⁄îba^	7ÔøΩÔøΩÔøΩCÔøΩIÔøΩﬁ¨&Q‹åÔøΩL|WÔøΩÔøΩÔøΩ""ÔøΩ&ÔøΩ@ÔøΩ}tcÔøΩÔøΩ9ÔøΩÔøΩÔøΩkÔøΩÔøΩÔøΩÔøΩsÔøΩÔøΩoÔøΩÔøΩA/ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩz:ÔøΩ^2ÔøΩeÔøΩÔøΩ6	^'ÔøΩbÔøΩZÔøΩ ÔøΩ ÔøΩUdZÔøΩÔøΩÔøΩÔøΩ>[ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩCjczÔøΩÔøΩ/~ ÔøΩjÔøΩmÔøΩÔøΩ#ÔøΩÔøΩÔøΩw'ÔøΩÔøΩ)' ÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩqgÔøΩÔøΩjnÔøΩ*ÔøΩÔøΩÔøΩe/ÔøΩuÔøΩQk)HUÔøΩw-8AÔøΩÔøΩ*)~ÔøΩÔøΩ-%ÔøΩ Q[=ÔøΩÔøΩ:aÔøΩdbMOlÔøΩ{ÔøΩ-\J?ÔøΩ#ÔøΩÔøΩÔøΩOÔøΩÔøΩÔøΩL1fÔøΩÔøΩÔøΩÔøΩÔøΩÿØ?KRÔøΩÔøΩÔøΩbÔøΩ.q}xÔøΩ)ÔøΩÔøΩÔøΩÔøΩÔøΩ5ÔøΩÛ¥î∞/ÔøΩEÔøΩrNÔøΩÔøΩÔøΩ4Ê¶éÔøΩ""1ÔøΩE„´¶[ÔøΩL?ÔøΩ:cdÔøΩÔøΩÔøΩU:ÔøΩÔøΩÔøΩ$ÔøΩ ÔøΩÔøΩ!ÔøΩÔøΩIÔøΩÔøΩÔøΩÔøΩI C'ÔøΩÔøΩ}ÔøΩÔøΩLÔøΩoNÔøΩcÔøΩpÔøΩÔøΩÔøΩ ÔøΩÔøΩ?ÔøΩÔàÉÔøΩÔøΩu0ÔøΩÔøΩzWÔøΩÔøΩÔøΩÔøΩ:ÔøΩHÔøΩÔøΩÔøΩZIÔøΩlÔøΩÔøΩiip\ÔøΩYÔøΩÔøΩÔøΩ8ÔøΩOÔøΩ[ÔøΩ1ÔøΩOÔøΩ= ÔøΩÔøΩÔøΩÔøΩÔøΩx.ÔøΩjÔøΩÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩLÔøΩwÔøΩÔøΩÔøΩRÔøΩ"" ÔøΩ0ÔøΩÔøΩÔøΩQ,ÔøΩÔøΩÔøΩ7ÔøΩ-ÔøΩÔøΩLfb>>ÔøΩuSoÔøΩ7ÔøΩNgÔøΩ4JÔøΩÔøΩÔøΩ,ÔøΩÔøΩÔøΩ12ÔøΩ5ÔøΩeÔøΩhÔøΩ]ÔøΩÔøΩÔøΩÔøΩ$reI2ÔøΩhÔøΩÔøΩÔøΩÔøΩAU9ÔøΩÔøΩÔøΩ!ÔøΩÔøΩÔøΩÔøΩlÔøΩÔøΩY)ÔøΩÔøΩÔøΩBk	fÔøΩÔøΩÔøΩÔøΩTÔøΩÔøΩÔøΩÔøΩ.}v‡ß∫*H%ÔøΩ‹®ÔøΩzÔøΩEÔøΩVÔøΩXÔøΩÔøΩ5ÔøΩm.ÔøΩ|ÔøΩPÔøΩwHÔøΩÔøΩÔøΩ*ÔøΩ+ LÔøΩI*ÔøΩ`ÔøΩKÔøΩÔøΩÔøΩhÔøΩÔøΩÔøΩÔøΩ&*@kÔøΩuPXÔøΩÁ≠ñ""ÔøΩ'ÔøΩaÔøΩÔøΩlÔøΩÔøΩÔøΩÔøΩÔøΩYÔøΩYÔøΩFeN>√¨ÔøΩ&ÔøΩÔøΩÔøΩÔøΩ6ÔøΩ""kÔøΩÔøΩdq{ÔøΩÔøΩ}tÔøΩÔøΩÔøΩÔøΩKÔøΩ–æÔøΩÔøΩ3&WtÔøΩÔøΩÔøΩC~OÔøΩ`(ÔøΩoÔøΩoÔøΩÔøΩÔøΩÔøΩBÔøΩu1ÔøΩÔøΩÔøΩ,ÔøΩÔøΩÔøΩ>ÔøΩÔøΩKÔøΩhÔøΩÔøΩÔøΩ;#ÔøΩ^ÔøΩÔøΩÔøΩY6ÔøΩQ—∏ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ)~ÔøΩhÔøΩÔøΩboÔøΩÔøΩÔøΩp`tÃäÔøΩÔøΩ=NÔøΩÔøΩ|ÔøΩUÔøΩ}ÔøΩÔøΩ]ÔøΩQ9ÔøΩÔøΩÔøΩU[ÔøΩy_B|A&!D*ÔøΩV&ÔøΩÔøΩÔøΩÔøΩPus1gÔøΩ#ÔøΩÔøΩÔøΩ`ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ'8ÔøΩ5fD[ÔøΩ,eÔøΩ‘∞/JVk2GKÔøΩcRDÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩyÔøΩHGÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩ) j@} ÔøΩzÔøΩÔøΩ{ÔøΩ-ÔøΩgÔøΩÔøΩÔøΩÔøΩ>vLÔøΩcÔøΩ""gÔøΩ""ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ0ÔøΩ]VÔøΩÔøΩÔøΩÔøΩÔøΩYÔøΩÔøΩÔøΩÔøΩ#JAÔøΩXWCÁ®∑[ÔøΩl+,`zGÔøΩ04ÔøΩÔøΩBÔøΩÔøΩcÔøΩsrÔøΩ""kTÔøΩÔøΩYÔøΩÔøΩ⁄≠ÔøΩÔøΩÔøΩKÔøΩ·º• ÔøΩX&ÔøΩ$doWNÔøΩ[ÔøΩ{ÔøΩ+ÔøΩÔøΩÔøΩ–öÔøΩ|hVrBi 4ÔøΩC58ÔøΩfoÔøΩÔøΩÔøΩÔøΩÔøΩ4ÔøΩ(ÔøΩ ÔøΩ5ÔøΩ>U`ÔøΩO+FÔøΩÔøΩÔøΩ(ÔøΩEÔøΩÔøΩÔøΩ}ÔøΩ-ÔøΩÔøΩrÔøΩﬁ¨ÔøΩ[aÔøΩÔøΩÔøΩYÔøΩ*aÔøΩ	ÔøΩÔøΩ_ÔøΩ=ÔøΩwÔøΩÔøΩÔøΩÔøΩÔøΩ(ÔøΩ+ÔøΩÔøΩÔøΩÔøΩBÔøΩ]uÔøΩ‹∞ÔøΩÔøΩqÔøΩK_wYÔøΩ ∂ÔøΩÔøΩÔøΩlÔøΩj]ÔøΩy*ÔøΩÔøΩ›ÇÔøΩÔøΩQﬂ∂ÔøΩÔøΩt47ÔøΩÔøΩÔøΩ`'ÔøΩÔøΩ~ÔøΩMÔøΩWÔøΩÔøΩÔøΩM>O;ÔøΩlÔøΩ?—µ5tÔøΩ ÔøΩ>⁄çÔøΩÔøΩÔøΩHm^=’ü ÔøΩÔøΩÔøΩÔøΩw}:/1PÔøΩS9ÔøΩÔøΩ{ÔøΩC)ÔøΩÔøΩÔøΩFd3%`ÔøΩÔøΩÔøΩ&«á)_ÔøΩOA""mÔòÖÔøΩ/<+ZÔøΩÔøΩÔøΩAyÔøΩÔøΩÔøΩÔøΩÔøΩFÔøΩ^PÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ}ÔøΩÔøΩ.ÔøΩÔøΩÔøΩ+bÔøΩl“ùw2ÔøΩIÔøΩÔøΩÔøΩ(d1ÔøΩÔøΩÔøΩeÔøΩ~DÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩÔøΩYv^⁄âÔøΩÔøΩÔøΩÔøΩVz12ÔøΩÔøΩÔøΩS:ÔøΩWÀ¨»ªÔøΩoÔøΩÔøΩ&ÔøΩÀ´2ÔøΩdrÔøΩÔøΩ 7ÔøΩ1ÔøΩvÔøΩÔøΩ7lÔøΩÔøΩÔøΩÔøΩn[@sÔøΩ^ÔøΩ.C~?O',ÔøΩÔøΩÔøΩÔøΩJÔøΩÔøΩiÔøΩÔøΩÔøΩkÔøΩaÔøΩ!ÔøΩœìÔøΩi&ÔøΩ$ÔøΩÔøΩ,O%W""ÔøΩÔøΩ?ÔøΩÔøΩQdÔøΩ’àÔøΩdÔøΩb~9VÔøΩÔøΩ--bÔøΩÔøΩ+F.`ÔøΩ%fÔøΩ>:◊òÔøΩDÔøΩÔøΩÔøΩÔøΩÔøΩKQÔøΩÔøΩIÔøΩÔøΩÔøΩnÔøΩÔøΩÔøΩvcÔøΩ\wÔøΩÔøΩÔøΩÔøΩÔøΩ*n""s}kÔøΩÔøΩUÔøΩ=ÔøΩr7hÔøΩ.ÔøΩ7/~Ex6ÔøΩÔøΩ""ÔøΩ#ÔøΩÔøΩ {ÔøΩÔøΩP%ÔøΩÔøΩÔøΩÔøΩWGÔøΩÔøΩÔøΩÔøΩ_""D?<ÔøΩXÔøΩ&>ÔøΩ!9ÔøΩÔøΩh:3ÔøΩ6_ÔøΩRWWÔøΩÔøΩe/?ÔøΩÔøΩxxÔøΩ7ÔøΩqÔøΩ)\4ÔøΩKIÔøΩÔøΩsÔøΩMÔøΩÔøΩ∆ÜÔøΩÔøΩ*ÔøΩÔøΩ=ÔøΩÔøΩBÔøΩ~ÔøΩÔøΩfUsÔøΩÔøΩÔøΩ	ÔøΩÔøΩ∆±ÔøΩ~ÔøΩrÔøΩÔøΩ ÔøΩÔøΩWÔøΩ?KÔøΩÔøΩŸç√ê	ÔøΩÔøΩ*ÔøΩ?%ÔøΩ+vq&'!qÔøΩ""ÔøΩÔøΩÔøΩÔøΩ5| ÔøΩ ÔøΩ1ÔøΩÔøΩ ÔøΩÔøΩWÔøΩRÔøΩÔøΩÔøΩ(ÔøΩ[ÔøΩÔøΩÔøΩÔøΩm%]’úÔøΩÔøΩÔøΩÔøΩP`ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ(ÔøΩCÔøΩÔøΩÔøΩÔøΩÔøΩ,h5t:ÔøΩÔøΩÔøΩÔøΩQÔøΩXiSÔøΩ/ÔøΩÔøΩÔøΩ 	ÔøΩQNH9ÔøΩRÔøΩ%>jÔøΩPÔøΩ :%ÔøΩt ÔøΩÔøΩ^ÔøΩÔøΩÔøΩ	$/ÔøΩgR\ÔøΩOÔøΩLÔøΩÔøΩSÔøΩÔøΩÔøΩ(VnÔøΩÔøΩÔøΩÔøΩÔøΩjÔøΩÔøΩclÔøΩS√ú#qÔøΩÔøΩ@bÔøΩÔøΩ#ÔøΩÔøΩ(ÔøΩÔøΩÔøΩXDÔøΩM3ÔøΩnrva'/&5ÔøΩ∆äÔøΩQ-ÔøΩWÔøΩÔøΩ=ÔøΩÔøΩ|ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ}{7(ÔøΩ|\/ÔøΩÔøΩÔøΩ2ÔøΩ.RÔøΩÔøΩÔøΩÔøΩ=ÔøΩÔøΩÔøΩ#ÔøΩŒÖnd7»±<ÔøΩÔøΩÔøΩsfÔøΩOv7ÔøΩÔøΩ[ÔøΩÔøΩÔøΩÔøΩÔøΩCÔøΩJ4ÔøΩÔøΩm.ÔøΩpÔøΩ~ÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩ-a5ÔøΩÔøΩÔøΩÔøΩÔøΩcQ !ÔøΩÔøΩÔøΩÔøΩ1ÔøΩÔøΩTT%ÔøΩrÔøΩÔøΩpÔøΩÔøΩÔøΩ&Z87ÔøΩÔøΩÔøΩ 1]ÔøΩÔøΩN=lÔøΩ[ÔøΩÔøΩ'K3lÔøΩZQÔøΩ1ÔøΩÔøΩÔøΩERKÔøΩ0nÔøΩYÔøΩ–∞ÔøΩÔøΩnEQÔøΩÔøΩÔøΩ|ÔøΩzSvÔøΩIÔøΩÔøΩGÔøΩÔøΩ_{Mp!ÔøΩÔøΩÔøΩJÔøΩ◊å.ÔøΩ7ÔøΩHÔøΩ&1ÔøΩÔøΩ^ÔøΩ]iÔøΩÔøΩÔøΩXÔøΩÔøΩJ6ÔøΩÔøΩcÔøΩÔøΩÔøΩ#ÔøΩ`HÔøΩ)+mÔøΩÔøΩÔøΩÔøΩO\|hÔøΩÔøΩ+bÔøΩlXÔøΩÔøΩ!L‹ã ÔøΩÔøΩ{ÔøΩ&.ÔøΩ–¢ÔøΩ	QÔøΩe_ÔøΩ(`ÔøΩÔøΩF|dJÔøΩ#MÔøΩtiÔøΩÔøΩÔøΩÔøΩ%~ÔøΩ?ÔøΩcÔøΩFÔøΩÔøΩÔøΩÔøΩ+.ÔøΩÔøΩ{ÔøΩ\ ÔøΩeÔøΩ-E26PÔøΩÔøΩÔøΩÔøΩdÔøΩÔøΩÔøΩkÔøΩÔøΩÔøΩ-ÔøΩFŸïÔøΩÔøΩiÔøΩÔøΩaÂùÑÔøΩefÔøΩÔøΩ0ÔøΩ~^ÔøΩÔøΩÔøΩQ;ÔøΩzÔøΩÔøΩgÔøΩvAGÔøΩÔøΩÔøΩÔøΩÔøΩqM*ÔøΩAÔøΩÔøΩ,ÔøΩÔøΩÔøΩTBÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩX8ÔøΩ9cÔøΩ-;ÔøΩqÔøΩ0ÔøΩfÔøΩÔøΩÔøΩOÔøΩÔøΩÔøΩÔøΩvÔøΩRÔøΩÔøΩ<'ÔøΩÔøΩSÔøΩJc.ÔøΩÔøΩÔøΩJMW>}!9ÔøΩl*jp0*eÔøΩS-CÔøΩÔøΩ√±oSsÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩYÔøΩÔøΩs4pZÔøΩÔøΩuÔøΩÔøΩ<ÔøΩÔøΩÔøΩh]ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩfWÔøΩÔøΩ0ÔøΩy6ÔøΩÔøΩÔøΩ)ÔøΩÔøΩ]ÔøΩÔøΩÔøΩ!8ÔøΩhÔøΩÔøΩÔøΩ{,ÔøΩZÔøΩÔøΩMÔøΩÔøΩD%ÔøΩÔøΩlÔøΩ#5ÔøΩKOHÔøΩvGÔøΩGgXÔøΩ}ÔøΩÔøΩz…Å∆πÔøΩÔøΩÔøΩk=|ÔøΩÔøΩ!V3U\GÔøΩÔøΩÔøΩBEwÔøΩÔøΩgAÔøΩ‹óDÔøΩÔøΩ)ÔøΩÔøΩÔøΩÔøΩÔøΩ…±ÔøΩyH_	ÔøΩTTMÔøΩÔøΩ–®^m’ΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩ!ÔøΩ[X<⁄óÔøΩ;ÔøΩÔøΩÔøΩÔøΩÔøΩSÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩBDÔøΩ“ØUÔøΩÔøΩ ÔøΩ{ÔøΩÔøΩyfjÔøΩÔøΩG. rÔøΩÔøΩA:ÔøΩÔøΩÔøΩ-ÔøΩÔøΩKyÔøΩ)ÔøΩ5ÔøΩ’≠Œ¶ÔøΩÔøΩ7ÔøΩeÔøΩÔøΩÔøΩyÔøΩaÔøΩsÔøΩkÔøΩMZÔøΩÔøΩ]ÔøΩÔøΩ”≠iÀõoÔøΩÔøΩMÔøΩhÔøΩNÔøΩZÔøΩÔøΩÔøΩÔøΩOÔøΩÔøΩÔøΩZ|81zÔøΩÔøΩÔøΩP+dMYÔøΩ<ÔøΩ6ÔøΩÔøΩÔøΩ‰ÑèTÔøΩÔøΩ(ÔøΩÔøΩÔøΩtÔøΩk)ÔøΩ_ÔøΩe!ÔøΩÔøΩm]ÔøΩ€Ñ&DÔøΩtÔøΩI: 5yÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩlÔøΩÔøΩ$OÔøΩwÔøΩÔøΩ;hÔøΩÔøΩQÔøΩÔøΩÔøΩ:‘ºÔøΩycÔøΩ3f%ÔøΩÔøΩÔøΩ^ÔøΩÔøΩBÔøΩ4ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ’£m+)4ÔøΩaÔøΩ’ñÔøΩ\`9M)ÔøΩÔøΩD|ÔøΩ8SÔøΩ!ÔøΩÔøΩnÔøΩR6!ÔøΩdÔøΩÔøΩ'ÈªÄÔøΩÔøΩ ÔøΩÔøΩÔøΩpÔøΩÔøΩ&ÔøΩÔøΩ&ÔøΩwÔøΩÔøΩÔøΩmÔøΩv9ÔøΩKŒáÔøΩ/CÔøΩÔøΩhn~ÔøΩÔøΩÔøΩT:ÔøΩÔøΩKÔøΩÍë∏ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩÔøΩdÔøΩ ±ÔøΩdCÔøΩÔøΩÔøΩ~ÔøΩ_ÔøΩÔøΩMSVÔøΩK]	|ÔøΩÔøΩyÔøΩyÔøΩ.LÔøΩ/MpÔøΩÔøΩlGÔøΩ9ÔøΩÔøΩŸπÔøΩÔøΩGÔøΩS.4ÔøΩÔøΩ?ÔøΩBAEÔøΩVÔøΩÔøΩÔøΩÔøΩÔøΩ»´ÔøΩÔøΩBÔøΩrÔøΩsÔøΩÔøΩÔøΩÔøΩpÔøΩ:ZAÔøΩÔøΩÔøΩ[/ÔøΩRnsÔøΩÔøΩ@iÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ{CoÔøΩ|b89ÔøΩÔøΩSrOÔøΩ∆∂ÔøΩÔøΩ;ÔøΩxÔøΩ7ÔøΩSÔøΩÔøΩÔøΩÔøΩÔøΩ}}S=ÔøΩI;ÔøΩÔøΩÔøΩ/YÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩ	!ÔøΩÔøΩnÔøΩÔøΩÔøΩÔøΩ""VÔøΩÔøΩÔøΩÔøΩ""ÔøΩÔøΩÔøΩÔøΩ2ÔøΩÔøΩÔøΩÔøΩÔøΩBVÔøΩÔøΩﬂàÔøΩ 6ÔøΩÔøΩrÔøΩÔøΩ*tÔøΩ* ÔøΩÔøΩ{ÔøΩlÔøΩÔøΩ(ÔøΩo$ÔøΩÔøΩÔøΩÔøΩ}qÔøΩÔøΩ/ÔøΩTJÔøΩÔøΩp13PÔøΩÔøΩ,ÔøΩÔøΩÔøΩÔøΩÔøΩ,ÔøΩÔøΩd<ÔøΩÔøΩÕêuÔøΩÔøΩJÈ¥ìÔøΩÔøΩvCÔøΩÔøΩÔøΩÔøΩÔøΩ7"" OÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9ÔøΩ)Ó•ÆÔøΩzÔøΩÔøΩ@zv#A ÔøΩ7qÔøΩ%ÔøΩÔøΩTÔøΩ'YÔøΩÔøΩ#ÔøΩ ÔøΩJ@gÔøΩe«ØÔøΩÔøΩ-ImÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩKÔøΩLkq3aÔøΩÔøΩÔøΩ{ÔøΩÔøΩÔøΩÔøΩbjFÔøΩ‹Ö]ÔøΩÔøΩÔøΩÔøΩ&ÔøΩÔøΩ6ÔøΩÔøΩÔøΩCmÔøΩÔøΩÔøΩÔøΩgG<`CÔøΩÔøΩJÔøΩÔøΩUÔøΩmSÔøΩ7ÔøΩÔøΩÔøΩ6ÔøΩEd$ ÔøΩÔøΩ}ÔøΩÔøΩYÔøΩoÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩpÔøΩÔøΩÔøΩYc5WÔøΩÔøΩÔøΩÀµOfÔøΩÔøΩÔøΩKÔøΩÔøΩÔøΩHmÔøΩ0ÔøΩ_ÔøΩWÔøΩÔøΩÔøΩ:ÔøΩÔøΩÔøΩÔøΩ1ÔøΩVGÔøΩÔøΩÔøΩÔøΩÔøΩhÿö;ÔøΩ ÔøΩ&ÔøΩqÔøΩsgÔøΩÔøΩÔøΩZÔøΩ(ÔøΩÔøΩeTÔøΩ¬πÔøΩÔøΩÔøΩÔøΩÔøΩ8BÔøΩ|ÔøΩmÔøΩÔøΩÔøΩN»ºÔøΩÔøΩÔøΩÔøΩÔøΩF:TÔøΩÔøΩ ÖÔøΩ;?ÔøΩÔøΩ&ÔøΩÔøΩÀØÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩœ¶`ÔøΩÔøΩÔøΩ5 ÔøΩ;ÔøΩqÔøΩF$zÔøΩÔøΩÔøΩÔøΩÔøΩ?WÔøΩÔøΩÔøΩÔøΩzÔøΩÔøΩ^—ºÔøΩÔøΩRÔøΩ;ÔøΩÔøΩHln0ÔøΩÔøΩ ÔøΩÔøΩGAÔøΩ^ÔøΩÔøΩ  ÔøΩ<_ÔøΩÔøΩjÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ=ÔøΩÔøΩ=NÔøΩRÔøΩA{ÔøΩ6Sh√ìNÔøΩ{-ÔøΩ6ÔøΩÔøΩÔøΩ“íÔøΩVÔøΩw`#ÔøΩÔøΩÔøΩyÔøΩÔøΩMÔøΩ*-ÔøΩuÔøΩÔøΩÔøΩyÔøΩÔøΩ[LÔøΩjÔøΩÔøΩÔøΩÔøΩÔøΩj>ÔøΩPÔøΩ^qÔøΩ2ÔøΩÔøΩÔøΩÔøΩ=4jR»Ö$ÔøΩX≈™lÔøΩ2qNÔøΩÔøΩWÔøΩÔøΩ%ÔøΩÔøΩSÔøΩi$ÔøΩ◊´nDÔøΩÔøΩÔøΩ5ÔøΩqd&ÔøΩÔøΩÔøΩ>ÔøΩÔøΩÔøΩÔøΩZÔøΩbsÔøΩÔøΩÔøΩÔøΩÔøΩUÔøΩUhÔøΩÔøΩÔøΩXÔøΩÔøΩAXNeEÔøΩcmÔøΩDÔøΩÔøΩPÔøΩÔøΩ5ÔøΩC!sWX{ÔøΩÔøΩÔøΩ^rB1qÔøΩÔøΩ~—¶BÔøΩÔøΩÔøΩÔøΩÔøΩPIÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩtÔøΩm!ÔøΩÔøΩRwÔøΩ~WÔøΩÔøΩnÔøΩﬁÑAÔøΩÔøΩ5ÔøΩb#ÔøΩYÔøΩ.ÔøΩÔøΩÔøΩsÔøΩÔøΩÔøΩ≈õÔøΩÔøΩÔøΩÔøΩ~PÔøΩ_<ÔøΩfÔøΩ8ÔøΩÔøΩ÷ë$okÔøΩ.+ZÔøΩÔøΩ√èÔøΩcV;ÔøΩ’ÆÔøΩbGÔøΩÔøΩrxÔøΩ}vÔøΩw Áâ∏6ÔøΩÔøΩFCÔøΩoÔøΩÔøΩ=ÔøΩ'ÔøΩ.ÔøΩÔøΩ%ÔøΩ ÔøΩÔøΩÔøΩ'ÔøΩÔøΩ,OÔøΩ[o$XÔøΩ»ªÔøΩÔøΩ)QlÔøΩIÔøΩQ√éÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÍÖ∏}BFE-UÔøΩ	ÔøΩz@CÔøΩLÔøΩ?EÔøΩ1ÔøΩÔøΩ>ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ8mÔøΩrÔøΩr<ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩR!_ÔøΩ4q&ÔøΩ=9ÔøΩ‘úÔøΩE_ÔøΩÔøΩÔøΩÔøΩCÔøΩD‘∏ÔøΩÔøΩÔøΩ,r0ÔøΩÔøΩ2ÔøΩÔøΩÔøΩ&ÔøΩk ÔøΩuÔøΩÔøΩÔøΩÔøΩÔøΩR|ÔøΩÔøΩl ]ÔøΩCÔøΩv!ÔøΩÔøΩrÔøΩA|ÔøΩÔøΩÔøΩÔøΩ-uUÔøΩÔøΩHÔøΩ	ÔøΩÔøΩ ÔøΩXeÔøΩÔøΩÔøΩÔøΩÔøΩ0:ÔøΩÔøΩTÔøΩ$ÔøΩl∆îfkfÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ}/mÔøΩÔøΩSÔøΩÓπÑMÔøΩd)ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩsaÔøΩ*ÔøΩfÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩedÔøΩ""ÔøΩX”¨""ÔøΩÔøΩF`ÔøΩÔøΩ0yÔøΩÔøΩƒókÔøΩÔøΩÔøΩÔøΩ1ÔøΩ‰†âÔøΩÔøΩkÔøΩÔøΩÔøΩK_ÔøΩÀïZÔøΩ[ÔøΩi0ÔøΩÔøΩ1ÔøΩxÔøΩÌî§]ZjÔøΩÔøΩ U7ÔøΩÿïÔøΩÔøΩÔøΩÔøΩMÔøΩÔøΩeÔøΩ ÔøΩ}I?YÔøΩÔøΩ} »ãÔøΩcÔøΩAFÔøΩD ÔøΩ“π/ÔøΩ""C,""ÔøΩ}ÔøΩÔøΩ,ÔøΩtÔøΩ%ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩgÔøΩÔøΩÔøΩ2_DÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩhÔøΩÔøΩhÔøΩ0[ÔøΩÔøΩÔøΩG”∫ZÔøΩÔøΩiÔøΩÔøΩÔøΩBB7ÔøΩL4cRÔøΩÔøΩÀìuxRv]ÔøΩÔøΩ$ÔøΩÔøΩ√óÔøΩCÔøΩeKÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩ;,VÔøΩÔøΩÔøΩcÔøΩ-ÔøΩÔøΩ,ÔøΩÔøΩJ-ÔøΩÔøΩŸ£ÔøΩ2ÔøΩ5aÔøΩ+WÔøΩt≈•ÔøΩŒõÔøΩx#VÔøΩÔøΩ$jÔøΩÔøΩ	ÔøΩÔøΩSsÔøΩÔøΩZÔøΩÔøΩÔøΩgpqÔøΩÔøΩk#AxÔøΩ sÔøΩyÔøΩÔøΩÔøΩÔøΩ	ÔøΩ#vÔøΩÔøΩYQRÔøΩ!ÔøΩÔøΩÿ™ÔøΩÔøΩÔøΩvÔøΩYhYÔøΩÔøΩÔøΩÔøΩ&FÔøΩ]ﬁÇÔøΩhÔøΩÔøΩ5:ÔøΩ*ÔøΩÔøΩ.ÔøΩÔøΩXÔøΩ◊µÔøΩFMÔøΩÔøΩGÔøΩÔøΩx`ÔøΩwÔøΩÔøΩ9iÔøΩqÔøΩ»¶2W1ÔøΩÔøΩÔøΩÔøΩfOLÔøΩt%_yÔøΩÔøΩÔøΩÔøΩÔøΩbÔøΩkBÔøΩÔøΩÔøΩCFoEÔøΩÔøΩKÔøΩÔøΩJ	ÔøΩÔøΩÔøΩrO÷ésÔøΩCÔøΩiÔøΩ)ÔøΩÔøΩx#ÔøΩwÔøΩ_ÔøΩJÔøΩÔøΩÔøΩ≈öÔøΩÔøΩdu>YÔøΩmHÔøΩÔøΩÔøΩ!ÔøΩÔøΩÔøΩQ^ÔøΩÔøΩ5ÔøΩ9∆ïÔøΩÔøΩDÔøΩÔøΩo=ÔøΩLÔøΩÔøΩTF:E7ÔøΩ“ò59ÔøΩÔøΩÔøΩÔøΩx]iÔøΩÔøΩ4ÔøΩ‰æéVnFÔøΩÔøΩZiÔøΩÔøΩÔøΩÔøΩ OÔøΩ!ÔøΩ\	-OÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩOÔøΩGÔøΩ›´f2=ÔøΩYÔøΩLÔøΩamÔøΩce5&[ÔøΩyÔøΩÔøΩ»îÔøΩg.DÔøΩÔøΩÔøΩÔøΩGd,ÔøΩÔøΩ.—òÔøΩÔøΩÔøΩÔøΩdÔøΩ:p.tÔøΩÔøΩÔøΩÎπ¢D(ÔøΩÔøΩÔøΩ5KÔøΩÔøΩÔøΩ1sÔøΩÔøΩAÔøΩ :ÔøΩ0ÔøΩj`wd ÔøΩÔøΩiÔøΩÔøΩz^ÔøΩÔøΩLÔøΩÔøΩK> ÔøΩ3ÔøΩÔøΩPÔøΩmiÔøΩÔøΩÔøΩÔøΩ)bÔøΩÔøΩ“Æ áÔøΩzÔøΩﬁåfÔøΩÔøΩVÔøΩyﬂôÔøΩ5ÔøΩÔøΩÔøΩ!ÔøΩ#ÔøΩ(zhÔøΩ7?V tFÔøΩÔøΩÔøΩlÔøΩrÔøΩ<4&ZhÔøΩÔøΩ!~3ÔøΩ^gÔøΩ≈úÔøΩÔøΩÔøΩcÔøΩÔøΩÔøΩ€çs@ÔøΩÔøΩÔøΩÔøΩÔøΩ>tÔøΩfÔøΩ_ÔøΩÔøΩxÔøΩÔøΩmGFjÔøΩ÷ßÔøΩCÔøΩÔøΩÔøΩzZdw?O›®ÔøΩ+ktÔøΩÔøΩÔøΩGÔøΩÔøΩ>ÔøΩIÔøΩÔøΩoÔøΩÔøΩ≈ëÀåk e$ eÔøΩHO3 ÔøΩÔøΩLGÔøΩfÔøΩOÔøΩ-⁄∑ÔøΩ5&ÔøΩmlÔøΩeGH(ÔøΩWÔøΩ&ÔøΩÔøΩÔøΩUÔøΩÔøΩÔøΩdÔøΩF_\ÔøΩV jÔøΩ#ÔøΩ/	bÔøΩv,ÔøΩﬁ∂^R{OÔøΩ.ÔøΩgEsÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩ7ÔøΩKC<8D}&ÔøΩ.$	G‹•`8ÔøΩYÔøΩÔøΩ|- ÔøΩt ys+ÔøΩUÔøΩG@yÔøΩÔøΩÔøΩ)ÔøΩÔøΩÔøΩ@ÔøΩÔøΩ«â=0\ÔøΩvÔøΩÔøΩj5ÔøΩÔøΩÔøΩÔøΩÔøΩ0*m-ÔøΩÔøΩ0ÔøΩÔøΩ#LÔøΩXÔøΩÔøΩRÔøΩvÔøΩ◊ØÔøΩ2=ÔøΩGÔøΩ""ÔøΩÔøΩÔøΩÔøΩÕ¥OÔøΩ8ÔøΩÔøΩ6-ÔøΩ7ÔøΩÔøΩiBÔøΩBzÔøΩAÔøΩÔøΩÔøΩ<ÔøΩÔøΩÔøΩKÔøΩÔøΩW ÔøΩÔøΩÔøΩ>ÔøΩÔøΩ%ÔøΩRÔøΩÔøΩCÔøΩ.8ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ4vÔøΩÔøΩ%ÔøΩQÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩ“°ÔøΩÔøΩIoÔøΩÔøΩfKP(rmÔøΩW ,^ÔøΩNÔøΩ`ÔøΩ%ÔøΩÔøΩÔøΩÔøΩÔøΩ◊æÔøΩÔøΩ2ÔøΩ>ÔøΩ5ÔøΩ6ÔøΩ\ÔøΩÔøΩKF%ÔøΩiwÔøΩÔøΩÔøΩ4$ ÔøΩ6LÔøΩ&ÔøΩÔøΩpRœ£ÔøΩyÔøΩ2 ÔøΩ…™ÔøΩ7ÔøΩ|Â©§}ÔøΩu} ÿèIÔøΩ-Áß®ÔøΩ3=ÔøΩbÔøΩÔøΩlÔøΩoÔøΩÔøΩaÔøΩÔøΩJd_ÔøΩÔøΩÔøΩH;ÔøΩÔøΩÔøΩWÔøΩvÔøΩmÔøΩÔøΩDP7ÔøΩ%ÔøΩÔøΩsÔøΩÔøΩÈ∫∂ÔøΩÔøΩAÔøΩcÔøΩWÔøΩÔøΩ}!ÔøΩÔøΩ(ÔøΩÔøΩYPsÔøΩÔøΩÔøΩ]ÔøΩÔøΩÔøΩ%ÔøΩ$=ÔøΩœõ >“©G+hÔøΩÔøΩÔøΩÔøΩÔøΩ3~ÔøΩiQÔøΩÔøΩÔøΩÔøΩ`ÔøΩpjÔøΩÔøΩÔøΩ3X+ÔøΩLB÷•ÔøΩÔøΩ]^M%Q(ÔøΩqÔøΩhÔøΩIvGÔøΩOBÔøΩtsjÔøΩÔøΩÔøΩztÔøΩÔøΩÔøΩ4xÔøΩÔøΩtÔøΩÔøΩ«†lpÔøΩ–óÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩÔøΩ?4ÔøΩ-]ÔøΩ ∆úÔøΩ|”Ω},ÔøΩÔøΩÔøΩVA5ÔøΩÔøΩÔøΩ}NwÔøΩsÔøΩ9CÔøΩÔøΩ’°ÔøΩÔøΩÔøΩKÔøΩÔøΩÔøΩÔøΩmÔøΩÔøΩÔøΩ6ÔøΩÔøΩ(ÔøΩ2ÔøΩÔøΩ%;jŒΩrdvÔøΩÔøΩÔøΩÔøΩrÔøΩÔøΩÔøΩÔøΩinLÔøΩ%ÔøΩ ÜÔøΩ!}_,ÔøΩ&5ÔøΩÔøΩ	ÔøΩÔøΩ 'kÔøΩoÔøΩ4ÔøΩÔøΩÔøΩYÔøΩ+.ÔøΩmÔøΩ’¥ÔøΩ=ÔøΩÔøΩDÔøΩŸÜÔøΩIsÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩExÔøΩÔøΩlbÔøΩIk:ÔøΩÔøΩÔøΩÔøΩNÔøΩPiÔøΩlKGÔøΩ3‹≤EiR]ZÔøΩÔøΩÔøΩq1ÔøΩÔøΩÔøΩ LÔøΩ }HoÔøΩ⁄∑-ÔøΩ=rÔøΩÔøΩÔøΩGÔøΩ õ d{oÔøΩSÔøΩNÔøΩÔøΩy)ÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩ]ƒøÔøΩ›¢ÔøΩÔøΩCuÔøΩÔøΩÔøΩÔøΩLÔøΩK endstream endobj 26 0 obj << /Filter /FlateDecode /Length1 1420 /Length2 6351 /Length3 0 /Length 7325 >> stream xÔøΩÔøΩtTÔøΩÔøΩÔøΩ6ÔøΩÔøΩ`PJHÔøΩÔøΩ0tÔøΩÔøΩ%ÔøΩÔøΩ]0ÔøΩ0CKÔøΩÔøΩÔøΩÔøΩtÔøΩ ÔøΩ ÔøΩ %ÔøΩ) ÔøΩÔøΩÔøΩÔøΩ7ÔøΩ{ÔøΩ{ÔøΩÔøΩÔøΩk}ﬂöÔøΩÔøΩyÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÃ†ÔøΩÔøΩ%mÔøΩÔøΩÔøΩ+ÔøΩÔøΩ.(7DÔøΩUWW >nÔøΩÔøΩÔøΩC`ÔøΩÔøΩÔøΩÔøΩÔøΩpw4ÔøΩÔøΩÔøΩÔøΩ;ÔøΩÔøΩÔøΩÔøΩ`,NÔøΩT<ÔøΩ( ÔøΩ ÔøΩB  /""ÔøΩ/ ÔøΩ]ÔøΩÔøΩy""lun@ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ(WwÔøΩÔøΩ{Ãø^V6 *""""ÔøΩÔøΩ;ÔøΩvÔøΩÔøΩ#l`H@ÔøΩqÔøΩÔøΩ`OÔøΩÔøΩ9ÔøΩ(ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ(ÔøΩÔøΩÔøΩ7ÔøΩÕçrÔøΩÔøΩ`ÔøΩÔøΩ@ÔøΩÔøΩÔøΩ{ÔøΩmÔøΩ_0ÔøΩÔøΩ…∏ÔøΩÔøΩÔøΩÔøΩÔøΩ«ØÔøΩÔøΩÔøΩxÔøΩÔøΩÔøΩ ÔøΩ·å∞ÔøΩ#ÔøΩÔøΩÔøΩ-ÔøΩÔøΩÔøΩ*ÔøΩÔøΩÔøΩpÔøΩÔøΩÔøΩ 'ÔøΩÔøΩÔøΩ PnÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ;fcÔøΩrqÔøΩ!}H{ÔøΩÔøΩ4‘∏1ÔøΩN ÔøΩÔøΩÔøΩÔøΩ9ÔøΩQÔøΩ|ÔøΩ'ÔøΩÔøΩÔøΩ~wÔøΩÔøΩvÔøΩÔøΩÔøΩC€∏#\1hn4ÔøΩÔøΩ◊à<ÔøΩÔøΩ`oYi+ÔøΩrqÔøΩ#1hÔøΩ_ÔøΩÔøΩ!ÔøΩÔøΩ6ÔøΩkÔøΩÔøΩÔøΩÔøΩY'$ÔøΩÔøΩÔøΩÔøΩaÔøΩ@ÔøΩÔøΩÔøΩÔøΩÔøΩ√ïGÔøΩpÔøΩ+ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ1ÔøΩ DXÔøΩOÔøΩÔøΩÔøΩpoÔøΩ_ÔøΩÔøΩ|\·øÉÔøΩ_nÔøΩÔøΩ~ÔøΩ(WÔøΩ;ÔøΩaÔøΩÔøΩÔøΩÔøΩaÔøΩp ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ?-""(ÔøΩEÔøΩ` kÔøΩ=IÔøΩwuÔøΩnÔøΩÔøΩÔøΩ.ÔøΩÔøΩ ÔøΩBÔøΩ‹ÉÔøΩ_ÔøΩÔøΩÔøΩcÔøΩeÔøΩB:ÔøΩÔøΩ ÔøΩÔøΩ_C55EÔøΩ?ÔøΩ;&#ÔøΩÔøΩÔøΩÔøΩxÔøΩ.^ ÔøΩB!ÔøΩÔøΩÔøΩÔøΩÔøΩeÔøΩ`ÔøΩÔøΩ⁄ÄÔøΩÔøΩÔøΩÔøΩÔøΩCXÔøΩÔøΩvÔøΩÔøΩÔøΩÔøΩÔøΩ=ÔøΩb ÔøΩ_ÔøΩ`ÔøΩYLÔøΩÔøΩ-`ÔøΩÔøΩÔøΩfÔøΩ ÔøΩÔøΩ?sÔøΩwÔøΩÔøΩÔøΩ‚ø™ÔøΩo,ÔøΩÔøΩ<ÔøΩÔøΩÔøΩYÔøΩÔøΩÔøΩ0ÔøΩÔøΩÔøΩÔøΩ ÔøΩZVÔøΩ(ÔøΩÔøΩÔøΩ 5ÔøΩÔøΩQÔøΩ:ÔøΩÔøΩÔøΩÔøΩÔøΩQeÔøΩiÔøΩ=ÔøΩÔøΩ\P~nÔøΩ?ÔøΩÔøΩÔøΩÔøΩÔøΩj!068ÔøΩ«ØÔøΩKkÔøΩ$\ÔøΩFÔøΩÔøΩÔøΩ`ÔøΩ ÔøΩÔøΩÔøΩafÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩjÔøΩÔøΩ^ÔøΩ/ÔøΩÔøΩÔøΩ?ÔøΩÔøΩG⁄†l	ÔøΩW@ÔøΩÔøΩÔøΩÔøΩ|ÔøΩÔøΩÔøΩÔøΩZÔøΩÔøΩP[ÔøΩÔøΩoj<ÔøΩHÔøΩ`gÔøΩÔøΩPÔøΩDÔøΩÔøΩ, ÔøΩbwÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩB ÔøΩÔøΩ0ÔøΩ ÔøΩÔøΩoÔøΩ'ÔøΩxÔøΩÔøΩc[ÔøΩMl[ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩLÔøΩlÔøΩÔøΩ_ÔøΩ5ÔøΩÔøΩHÔøΩxqÔøΩ~ÔøΩÔøΩI?1ÔøΩÔøΩÔøΩPdqÔøΩ)?jÔøΩÔøΩD7;kVÔøΩ\aÔøΩÔøΩ`ÔøΩÿ¢!ÔøΩvÔøΩÔøΩ0uÔøΩR{ÔøΩŒáÔøΩÔøΩÔøΩ¬∫ÔøΩ}ÔøΩÔøΩÀ£+ÔøΩI~«¥ÔøΩÔøΩƒØqÔøΩ SeÔøΩEKÔøΩ;qÔøΩÔøΩbHZ	%mÔøΩ;uÔøΩÔøΩY^ÔøΩÔøΩNÔøΩbÔøΩSÔøΩ ÔøΩﬁ§ÔøΩÔøΩZSÔøΩÔøΩFA+bÔøΩmYÔøΩ∆∫GoUÔøΩ;KÔøΩK|ÔøΩÔøΩXÔøΩGiÔøΩÔøΩÔøΩÕßDOÔøΩÔøΩIÔøΩÔøΩzÔøΩH;ÔøΩÔøΩbÔøΩU<CVwÔøΩ""0ÔøΩÔøΩb=ÔøΩrÔøΩÔøΩsÔøΩÔøΩz~ÔøΩ ÔøΩV$ÔøΩÔøΩÔøΩUÔøΩg–°""ÔøΩ-H~ÔøΩCeÔøΩD`ÔøΩÔøΩÔøΩ!ÔøΩÔøΩ+ÒªÇå/ÔøΩÔøΩÔøΩÔøΩS>ÔøΩÔøΩPÔøΩÔøΩqÔøΩHÔøΩh?[ÔøΩyÔøΩÔøΩÔøΩ7SÔøΩ}ÔøΩÔøΩÔøΩ3xÔøΩ}+ÔøΩ7ZÔøΩYÔøΩ@ÔøΩÔøΩÔøΩÔøΩKÔøΩÔøΩ8ÔøΩWŸòpqÔøΩÔøΩ'ÔøΩÔøΩ;ÔøΩÿΩl 7ÔøΩÔøΩ(BÔøΩƒΩs:ÔøΩÔøΩ”õÔøΩEÔøΩÔøΩcÔøΩÔøΩÔøΩjiÔøΩ>VÔøΩ^ÔøΩeÔøΩÔøΩÔøΩ\4ÔøΩNkÔøΩ“ûÔøΩmqqÔøΩÔøΩKÔøΩÔøΩÔøΩ|AÔøΩ2ÔøΩÔøΩ1ÔøΩw?G~/'ÔøΩ4ÔøΩÔøΩZÔøΩY~ÔøΩeRÔøΩÔøΩ4RxÔøΩÃØZ#:1ÔøΩÔøΩÔøΩ8ÔøΩa%ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩrlÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ&3ÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩ«üÔøΩgbÔøΩENp=ÔøΩ8ÔøΩÔøΩEÔøΩÔøΩHhLÔøΩgÔøΩ?BGÔøΩl3ÔøΩ	4ÔøΩÔøΩR}ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ<--V/dIÔøΩÔøΩÔøΩ83ÔøΩÔøΩn$ÔøΩZÔøΩOPjÔøΩÔøΩÔøΩT	lrt¬ÑÔøΩÔøΩE øÔøΩÔøΩÔøΩ~ÔøΩÔøΩPÔøΩÔøΩTÔøΩ4ÔøΩXIojr1ÔøΩ1ÔøΩqÔøΩÔøΩ~:QgÔøΩ>ÔøΩ88ÔøΩÔøΩÔøΩw0ÔøΩÔøΩRÔøΩnÔøΩÔøΩ\ŒîÔøΩÔøΩÔøΩwÔøΩÔøΩÔøΩyJÔøΩ4ÔøΩmTlI3?ÔøΩÔøΩ»íÔøΩÔøΩ1ÔøΩ7ÔøΩK@?wÔøΩ)C9ÔøΩfÔøΩÔøΩÔøΩ ÔøΩÔøΩ ÔøΩIÔøΩÔøΩ%?h]dyÔøΩ^& ÔøΩ<y].FÔøΩÔøΩÔøΩÔøΩC|ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ≈†8ÔøΩ5ÔøΩ’≥,xÔøΩpVÔøΩ=ÔøΩÔøΩÔøΩ=⁄à+ÔøΩÔøΩL#ÔøΩÔøΩÔøΩÔøΩIÔøΩ5ÔøΩ–∞ÔøΩÔøΩ#“∑;OÔøΩ,ÔøΩ√ûÔøΩ9ÔøΩÕ¨;ÔøΩÔøΩÔøΩÔøΩu·∞úP~>ÔøΩÔøΩÔøΩÔøΩÔøΩdÔøΩÔøΩ 0ÔøΩÔøΩ#ÔøΩÔøΩSÔ©àfÔøΩÔøΩy1ÔøΩ,–ùÔøΩFGÔøΩÔøΩÔøΩm~ÔøΩ ~XÔøΩ=gÔøΩÔøΩ”ârÔøΩÔøΩLMÔøΩÔøΩo^^/!*OfÔøΩ]ÔøΩÔøΩÔøΩÔøΩoZÔøΩÔøΩﬂ∂ÔøΩÔøΩ""ÔøΩ""%ÔøΩ ÔøΩicÔøΩZ<$l L}6ÔøΩÔøΩ[ÔøΩÔøΩ>ÔøΩÔøΩ+>WÔøΩ^T],ÔøΩÔøΩ=ÔøΩÔøΩ;rY›ú7ÔøΩÔøΩ)ÔøΩ_epÔøΩÔøΩÔøΩv/ÔøΩÔøΩÿêÔøΩcÔøΩ48ÔøΩ5ÔøΩÔøΩÔøΩÔøΩ.SÔøΩÔøΩÔøΩÔøΩ4\gÔøΩpÔøΩÔøΩÔøΩÔøΩRÔøΩÔøΩÔøΩ5ÔøΩx6ÔøΩ—ß%ÔøΩŒ•54eÔøΩÔøΩ/ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÍ≠µH]WÔøΩÔøΩ3mÔøΩÔøΩVÔøΩjÔøΩ\ÔøΩÔøΩÔøΩ9ÔøΩÔøΩ¬ê…ïÔøΩÔøΩ2}ÔøΩ[ÔøΩÔøΩÔøΩÔøΩ‹¨ÔøΩ1ÔøΩÔøΩKÔøΩÔøΩoÔøΩjFÔøΩ ÔøΩÔøΩÔøΩÔøΩ`obÔøΩÈ´£O=ÔøΩÔøΩÔøΩÔøΩÔøΩ,ÔøΩbŒì| :WÔøΩGÔøΩ2ÔøΩÔøΩ‹≥EÔøΩ?ÔøΩxÔøΩÔøΩ⁄¥ÔøΩ$'ÔøΩNÔøΩ.ÔøΩ^ÔøΩÔøΩztÔøΩqgÔøΩ6 HYÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩÔøΩÔøΩÔøΩ4ÔøΩgÔøΩÔøΩquÔøΩÔøΩÔøΩU,ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ<ÔøΩoUÔøΩlÔøΩÔøΩÔøΩIlÔøΩÔøΩPﬁº2E<eÔøΩuÔøΩ9ÔøΩqÔøΩOÔøΩÔøΩÔøΩIMmÔøΩ)5ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩfÔøΩ*V`ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ3ÔøΩÔøΩ[ÔøΩÔøΩÔøΩqTM^GÔøΩFÔøΩ8JiÔøΩÔøΩÔøΩ1ÔøΩFÔøΩÔøΩÔøΩÔøΩ_ÔøΩÔøΩQ‹û>}ÔøΩ5ÔøΩiÔøΩÔøΩÔøΩÔøΩeÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩﬁ°LÔøΩ2?ÓÜÉÔøΩÔøΩÔøΩFh‹âÔøΩÔøΩÔøΩ1Ÿ°WÔøΩÔøΩÔøΩÔøΩÔøΩ{ÔøΩ\ÔøΩÔøΩÔøΩ`|ÔøΩ&ÔøΩxl_y^ÔøΩYÔøΩoUÔøΩÔøΩ9ÔøΩ∆ÅÔøΩ2cÔøΩ)#^OÔøΩÔøΩÔøΩÔøΩEÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩy(ÔøΩ4ÔøΩZÔøΩ!ÔøΩÔøΩYÔøΩÔøΩÔøΩÔøΩÔøΩXÔøΩu71ÔøΩ◊ôÔøΩ%/ÔøΩÔøΩÔøΩÔøΩ>ÔøΩÔøΩÔøΩ~vÔøΩÔøΩÔøΩ^ÔøΩÔøΩÔøΩ’ªÔøΩ\'ÔøΩÔøΩÔøΩÔøΩ;[ÔøΩÔøΩÔøΩsÔøΩÔøΩÔøΩ ’Ø^#ÔøΩÔøΩÔøΩ¬°|ÔøΩÔøΩÿí ÔøΩ#ÔøΩ0ÔøΩ>ÔøΩFÔøΩZÔøΩÔøΩÔøΩÔøΩÔøΩ’ëAÔøΩaÔøΩÔøΩÔøΩd1fRÔøΩÔøΩDVBu|ÔøΩ9']÷®+ÔøΩÔøΩÔøΩU GÔøΩÔøΩÔøΩ+ÔøΩÔøΩÔøΩPAÔøΩ:ÔøΩjQÔøΩÔøΩÔøΩÔøΩ{ÔøΩÔøΩ/WÔøΩvÔøΩÔøΩÔøΩÔøΩ6]zÔøΩeÔøΩ6HÔøΩÔøΩ5ÔøΩ⁄Å6/	ÔøΩÔøΩqÔøΩÔøΩÔøΩ!eÔøΩ⁄πÔøΩfT-s&$Y4ÔøΩÔøΩÔøΩÔøΩ„†èÔøΩ.IhH.ÔøΩ+GH4~ÔøΩnÔøΩ”è~""ÔøΩÔøΩ0.ÔøΩ%ÔøΩN@pÔøΩÔøΩÔøΩÔøΩÔøΩdAÔøΩÔøΩÔøΩ%ÔøΩhÔøΩ⁄ü4ÔøΩÔøΩÔøΩÔøΩÔøΩ/ÔøΩÔøΩÔøΩjÔøΩÔøΩÔøΩÔøΩÔøΩoÈéÖNnmÔøΩÔøΩÔøΩÔøΩtÔøΩÔøΩmÔøΩÔøΩÔøΩ=ÔøΩŸ¨ÔøΩ:ÔøΩÔøΩÔøΩÔøΩO{W^ÔøΩÔøΩÔøΩrÔøΩÔøΩÔøΩÔøΩÔøΩ3/JÔøΩtÔøΩÔøΩÔøΩ'ÔøΩ)%eÔøΩ`ÔøΩÔøΩÔøΩ3xGÔøΩÔøΩeÔøΩ+’ø’éÔøΩ≈üÔøΩ,r:vÔøΩO ŸßÔøΩÔøΩÔøΩpÔøΩnCÔøΩ~ÔøΩÔøΩ1ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩmÔøΩ1ÔøΩCÔøΩ–§ÔøΩÔøΩ ÔøΩﬂçIs)ÔøΩI4ÔøΩƒ•ÔøΩÔøΩÔøΩÔøΩL`Èùèm#ÔøΩ4ÔøΩ(;mÔøΩQÔøΩÔøΩÔøΩXÔøΩÔøΩ+VxÔøΩV?sÔøΩ5ÔøΩHGÔøΩÔøΩLÔøΩŸµÔøΩXÔøΩÔøΩÔøΩÔøΩﬁæBÔøΩ0Õ≤Œü4!ÔøΩ {ÔøΩÔøΩ◊ûhtKÔøΩ0+ÔøΩÔøΩÔøΩ@ŒßoÔøΩÔøΩÔøΩKÔøΩÔøΩÔøΩÔøΩÔøΩR3N}ÔøΩ}bÔøΩEiÔøΩ7ÔøΩ!ÔøΩmÔøΩÔøΩÔøΩAÔøΩ3ÔøΩÔøΩÔøΩÔøΩ2XÔøΩÔøΩ=ÔøΩÔøΩc*ÔøΩÔøΩÔøΩ3@ÔøΩ]ÔøΩÔøΩ2i4mÔøΩAÔøΩÔøΩ%ÔøΩb_""7ÔøΩ(QgÔøΩÔøΩÔøΩ`ÔøΩÔøΩÔøΩ%ÔøΩÔøΩÔøΩv2ÔøΩyÔøΩÔøΩÔøΩ-~ÔøΩNL2^BÔøΩÔøΩÔøΩ>yNÔøΩÔøΩÕóÔøΩNÔøΩJÔøΩB|ÔøΩ1_ÔøΩMÔøΩÔøΩÔøΩ‰õÑ$ÔøΩÔøΩÔøΩSg+ÔøΩ9ÔøΩ{ÔøΩeÔøΩ0DÔøΩg >ÔøΩO:ÔøΩÔøΩ{TÔøΩ °!ÔøΩ~JÔøΩÔøΩ\ÔøΩÔøΩ.udÔøΩÔøΩÔøΩfÔøΩÔøΩ]VÔøΩ *ÔøΩ;ÔøΩ5sÔøΩÔøΩ/ÔøΩ_'cÔøΩÔøΩY|!ÔøΩÔøΩÔøΩÔøΩÔøΩ(ÔøΩ aÔøΩÔøΩ#ÔøΩÔøΩÔøΩ(÷û5_R:WÔøΩ'<|2{ÔøΩÔøΩmÔøΩÔøΩÔøΩHLX<ÔøΩÔøΩÔøΩÔøΩﬁæKÔøΩÔøΩÿ≥ÔøΩÔøΩ@ÔøΩÔøΩXÔøΩKÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩAÔøΩ ÔøΩÔøΩvÔøΩÔøΩ$ÔøΩÔøΩÔøΩÔøΩ8yÔøΩÔøΩIÔøΩl uj,*KmÔøΩ lÔøΩkÔøΩÔøΩÔøΩÔøΩÔøΩ*Œ©Kx=pÔøΩÔøΩÔøΩK+>ÔøΩ{ÔøΩ.?ÔøΩNÔøΩzÔøΩCÔøΩsÔøΩ–ÜÔøΩd1ÔøΩ,ÔøΩIlÔøΩÔøΩÔøΩÔøΩ!ÔøΩ~uJxtis8ÔøΩÔøΩÔøΩ'WÔøΩÔæìIÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ|ÔøΩÔøΩÔøΩÔøΩKÔøΩ!zfÔøΩÔøΩ(tÔøΩÔøΩÔøΩx_{ÔøΩ2ÔøΩÔøΩÔøΩÔøΩÔøΩCÔøΩ÷ï9ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ)6ÔøΩIqÔøΩÔøΩvjRÔøΩÔøΩÔøΩÔøΩDÔøΩ#ÔøΩÔøΩÔøΩÔøΩÔøΩuÔøΩÔøΩŒàÔøΩÔøΩÔøΩrÔøΩÔøΩ6.HÔøΩ9ÔøΩB5iÔøΩÔøΩ$ÔøΩÔøΩ[qaÔøΩÔøΩÔøΩJ.ÔøΩŸõÔøΩ/Õús&	ÔøΩ$lÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ…ªÔøΩÔøΩy[ÔøΩÔøΩ/,rÔøΩvÔøΩÔøΩÔøΩWÔøΩwÔøΩÔøΩÔøΩ.ÔøΩÔøΩ@ÔøΩ:ÔøΩÔøΩÔøΩ#<^ÔøΩÔøΩNÔøΩgÔøΩ7kÔøΩ A`ÔøΩ[ÔøΩ AjÔøΩFsÔøΩŸ†EÔøΩSVÔøΩ(ÔøΩ'ÔøΩ[ÔøΩ‚∫∫ %ÔøΩ|OÔøΩnÔøΩÔøΩnÔøΩÔøΩoÔøΩ hÔøΩÔøΩÔøΩÔøΩ;MqÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩvÀÅƒüÔøΩÔøΩ’ÇmxTÔøΩÔøΩÔøΩSÔøΩÔøΩrÔøΩÔøΩÔøΩUÔøΩÔøΩÔøΩZqÔøΩ8ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩti`gm—™vÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ‘éÔøΩQE;ÔøΩÔøΩÔøΩÔøΩÀ≤‰Åº@ÔøΩ	<ÔøΩÔøΩÔøΩÔøΩ?KkICeÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩB\ÔøΩÔøΩ#ÔøΩÔøΩtÔøΩÔøΩÔøΩÔøΩ SÔøΩQnFÔøΩÔøΩaÔøΩÔøΩÔøΩÔøΩDÔøΩÔøΩN&ÔøΩÔøΩ_,NÔøΩÔøΩ8ÔøΩ ÔøΩ*ÔøΩZ ØÔøΩÔøΩqÔøΩ ÔøΩÔøΩ^ÔøΩÔøΩ2ÔøΩEmÔøΩHÔøΩÔøΩ…¥6ÔøΩÔøΩÔøΩ<TTÔøΩ ÔøΩÔøΩ_RÔøΩÔøΩ⁄ùcÔøΩa6ÔøΩUÔøΩMÔøΩaWÔøΩUÔøΩÔøΩÔøΩ ÔøΩjÔøΩ8ÔøΩÔøΩÔøΩTmÔøΩÔøΩÔøΩÔøΩ|ÔøΩÔøΩOÔøΩÔøΩÔøΩ6ÔøΩ&ÔøΩÔøΩ5}ÔøΩ7SÔøΩÔøΩÔøΩÔøΩJÔøΩsÔøΩ+4ÔøΩÔøΩÔøΩÔøΩÔøΩWOÔøΩÔøΩÔøΩÔøΩÔøΩ/ÔøΩÔøΩg:ÔøΩ/ÔøΩÔøΩÔøΩÔøΩ^pÔøΩÔøΩÔøΩ$ÔøΩZ^DJ7ÔøΩsÔøΩÔøΩÔøΩﬂäÔøΩÔøΩÔøΩÔøΩÔøΩJÔøΩÔøΩkZÔøΩÔøΩ0ÔøΩ.>:ÔøΩ ‹≤ÔøΩÔøΩÔøΩ=ÔøΩ,RÔøΩ1ÔøΩ\qYÔøΩÔøΩdÔøΩOÔøΩÔøΩÔøΩÔøΩÔøΩ7ÔøΩ-ÔøΩ&VÔøΩ8ÔøΩEÔøΩ^Âå¥ÔøΩ,ÔøΩAqMÔøΩÔøΩ)#{ÔøΩÔøΩ3ÔøΩ!'/ÔøΩ>9iÔøΩÔøΩÔøΩL9iT◊ûpÔøΩÔøΩyÔøΩEÔøΩÔøΩÔøΩ8ÔøΩ,ÔøΩH*+%ÔøΩ_{ÔøΩg7ÔøΩKÔøΩÔøΩ}ÔøΩ	ÔøΩÔøΩÔøΩÔøΩgÔøΩU+ÔøΩÔøΩÔøΩÔøΩ Z(ÔøΩÕÆÔøΩÔøΩ^D 5ÔøΩÔøΩÔøΩƒÆ-ÔøΩÔøΩÔøΩ^L‹ÇuÔøΩﬁôÔøΩWÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩNÔøΩÔøΩ={–¥ÔøΩrÔøΩMÔøΩÔøΩ-ÔøΩÔøΩÔøΩ$ÔøΩÔøΩÔøΩS ÔøΩ'ÔøΩfÔøΩ,ÔøΩÔøΩ0ÔøΩQ)ÔøΩÔøΩÔøΩ'>ÔøΩL1,ÔøΩuÔøΩÔøΩpÔøΩ?ÔøΩ}ÔøΩ)gvÔøΩDÔøΩÔøΩÔøΩWyÔøΩÔøΩÔøΩ'ÔøΩÔøΩxF—îÔøΩ{ÔøΩmG|qEÔøΩ«ïÔøΩ1""ÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩ=ÔøΩÔøΩÔøΩÎåægvKGÔøΩÔøΩoH—ÅrÔøΩÔøΩÔøΩ‘£ÔøΩ ÔøΩ]qÔøΩiÔøΩLﬂòIzBÔøΩÔøΩÔøΩÔøΩ!ÔøΩÕ©ÔøΩXÔøΩÔøΩÔøΩÔøΩÔøΩI‹°b IÔøΩN7I|ÔøΩ}W5;>ÔøΩÔøΩÔøΩÔøΩjwj2ÔøΩÔøΩ0lÔøΩÔøΩÔøΩZÔøΩÔøΩWMÔøΩ aÔøΩoÔøΩW|ÔøΩÔøΩ0ÔøΩÔøΩ~ÔøΩÔøΩ8nÔøΩfÔøΩÔøΩRÔøΩÔøΩÔøΩCÔøΩÔøΩ\ÔøΩœØÔøΩÔøΩÔøΩÔøΩÔøΩroxÔøΩÔøΩÔøΩÔøΩ3ÔøΩ-ÔøΩVl7ÔøΩÔøΩq>ÔøΩÔøΩX{‚ÉÉ+ÔøΩ1')wÔøΩgPÔøΩM FUÔøΩmÔøΩÔøΩSÔøΩÔøΩÔøΩÔøΩiÔøΩÔøΩÔøΩKy6wÔøΩ0ÔøΩ2ÔøΩWRÔøΩÔøΩÔøΩFSÔøΩuÔøΩÔøΩÔøΩOÔøΩc\ÔøΩKÔøΩÔøΩÔøΩO3NÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩr_<ÔøΩ>ÔøΩÔøΩ-ÔøΩÔøΩRÔøΩF/ÔøΩ,;ÔøΩMÔøΩÔøΩ[ÔøΩÔøΩÔøΩC=ÔøΩ≈ìÔøΩÔøΩÔøΩnRÔøΩÔøΩÔøΩÔøΩeÔøΩÔøΩYÔøΩÔøΩEÔøΩÔøΩÔøΩ $ÔøΩ(ÔøΩ!0MŒ≠ÔøΩÔøΩhÔøΩmsÔøΩ!ÔøΩ:v lÔøΩBÔøΩBÔøΩ⁄áÔøΩÔøΩÔøΩyYtvÔøΩÔøΩÔøΩT ÔøΩcÔøΩUÔøΩB3ÔøΩÔøΩÔøΩœ®tf1ÔøΩÔøΩGdÔøΩ-hl4FÔøΩÔøΩ]{2ÔøΩÔøΩÔøΩ`JoÔøΩÔøΩÔøΩVÔøΩÔøΩÔøΩr`ÔøΩÔøΩZ\!7!ÔøΩSÔøΩœãÔøΩu◊ï1xÔøΩÔøΩÔøΩÔøΩ$uPÔøΩyIÔøΩÔøΩÔøΩOÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩRÔøΩÔøΩ5ÔøΩÔøΩ4BÔøΩÔøΩ[ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ1ÔøΩ	9ÔøΩÔøΩÔøΩÔøΩvÔøΩÔøΩLÔøΩnXxwÔøΩÔøΩlÔøΩÔøΩZE<ÔøΩ>ÔøΩZ6ÔøΩÔøΩÔøΩ9ÔøΩwÔøΩ}ÔøΩSÔøΩe^ÔøΩÔøΩlÔøΩÔøΩÔøΩ[ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩlp0}ÔøΩnÔøΩÔøΩdÔøΩQÔøΩÔøΩ`ÔøΩ{vlMÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ#ÔøΩÔøΩ◊ñzÔøΩsiÔøΩÔøΩ>/ÔøΩÔøΩMGÔøΩW9ÔøΩÔøΩ]BÔøΩ%ÔøΩÔøΩÔøΩÔøΩÔøΩgÔøΩZ^ÔøΩÔøΩÔøΩ:IÔøΩÔøΩÔøΩÔøΩfVVÔøΩ ÅÔøΩ_(pÔøΩ(}ÔøΩÔøΩLNkmÔøΩ|ÔøΩ+2hÔøΩLBÔøΩ\ÔøΩÔøΩÔøΩÔøΩ&ÔøΩÔøΩ5sÔøΩÔøΩÔøΩ#mÔøΩ\ÔøΩÀüÔøΩSKC9ÔøΩÔøΩ""KÔøΩQ{ÔøΩÔøΩÔøΩ{GÔøΩ$ÔøΩmÔøΩÔøΩjÔøΩÔøΩÔøΩp78ÔøΩYÔøΩj1yÔøΩ)ÔøΩÔøΩKÔøΩkÔøΩ	ÔøΩ""zA6ÔøΩÔøΩ~wÔøΩ'hÔøΩwÔøΩ-ÔøΩÔøΩJQmPÔøΩÔøΩu/ÔøΩÔøΩÔøΩÔøΩÔøΩ√è/À≠ÔøΩRÔøΩ[ÔøΩ◊µÔøΩQ)}/ÔøΩÔøΩÔøΩ YÔøΩ|IÔøΩÔøΩ>$ÔøΩXÔøΩÔøΩuOpyÔøΩqykk0ÔøΩÔøΩÔøΩÔøΩPeÔøΩvÔøΩÔøΩÔøΩÔøΩÔøΩ' ÔøΩÔøΩUÔøΩ IÔøΩÔøΩ0XN:]ÔøΩXÔøΩÔøΩ.∆óswÔøΩÔøΩUv«û,ÔøΩÔøΩÔøΩÔøΩÔøΩP$}'O:IÔøΩnÔøΩÔøΩn}ÔøΩÔøΩr)ÔøΩsÔøΩ(ÔøΩÔøΩgÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩYÔøΩÔøΩÔøΩÔøΩ!ÔøΩFÔøΩÔøΩÔøΩvÔøΩÿòÔøΩÔøΩj;ÔøΩ(7L<ÔøΩdﬁ™ÔøΩVLÔøΩÔøΩhÔøΩÔøΩÔøΩÔøΩuÔøΩœÜÔøΩ|9ÔøΩÔøΩÔøΩÔøΩÔøΩ41ÔøΩÔøΩÔøΩgTOÔøΩÔøΩÔøΩEÔøΩV(F3ÔøΩÔøΩÔøΩ«çÔøΩÔøΩÔøΩrÔøΩÔøΩÔøΩ1[ÔøΩÔøΩAÔøΩYÔøΩÔøΩ2GTÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ'ÔøΩZÔøΩ,ÔøΩÔøΩ&ÔøΩ QÔøΩ3ÔøΩ9yÕïÔøΩ1ÔøΩÔøΩÔøΩÔøΩÔøΩ:ÔøΩÔøΩÔøΩICÔøΩÔøΩ6ePbÔøΩO“ÅÔøΩÔøΩÔøΩ`2nÔøΩ~ÔøΩÔøΩ6.SÔøΩ}WK€¥ÔøΩeÔøΩÔøΩÔøΩÔøΩONÔøΩwZÔøΩQlÔøΩ0ÔøΩÔøΩÔøΩÔøΩ/aÔøΩNÔøΩ;ÔøΩrÔøΩ-{ÔøΩ(	\)siÔøΩfÔøΩÔøΩÔøΩÔøΩÔøΩ;€¥ÔøΩEÔøΩ*E5!ÔøΩoÔøΩÔøΩzÔøΩÔøΩ4E–£bÔøΩcÔøΩ]wÔøΩUÔøΩÔøΩT ÔøΩÔøΩ;ÔøΩÔøΩÔøΩsÔøΩpPw<ÔøΩ""VÔøΩÔøΩÔøΩhÔøΩÔøΩs7+ÔøΩyzÔøΩ_ÔøΩVÔøΩ;""WÔøΩÔøΩ[0ÔøΩ5~HÔøΩIÔøΩÔøΩÔøΩÔøΩ0ÔøΩlfÔøΩ8ÔøΩÔøΩ„ë±8mcÔøΩÔøΩ""uÔøΩÔøΩ%ÔøΩÔøΩQj[ÔøΩ_/JÔøΩ\ÔøΩ\ÔøΩhÔøΩ6ÔøΩÔøΩ9ÔøΩbÔøΩCÔøΩÔøΩ?0ÔøΩÔøΩ""ÔøΩÔøΩ€ªÔøΩtÔøΩÔøΩ»¢2ÔøΩwÔøΩ=ÔøΩrOHÔøΩÔøΩbÔøΩÔøΩ	}ÔøΩÔøΩÔøΩ ÔøΩY1ÔøΩÔøΩOÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩSÔøΩT0=ÔøΩ]1ZÔøΩÔøΩÔøΩ>ÔøΩd(ÔøΩ_ÔøΩÔøΩ:LÔøΩ2ÔøΩ.ÔøΩ<kÔøΩ6?ÔøΩ Lg%ÔøΩIÔøΩ?^IaÔøΩÔøΩÔøΩÔøΩ|ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩx=ÔøΩÔøΩ##u2ÔøΩÔøΩÔøΩﬂØ6ÔøΩqd/GÔøΩÔøΩÔøΩÔøΩuRnÔøΩ0ÔøΩ	^ÔøΩÔøΩÔøΩÔøΩÔøΩ_ﬁªOÔøΩ9ŒóJÔøΩÔøΩÔøΩEÔøΩÔøΩÔøΩÔøΩJÔøΩlÔøΩ bÔøΩÔøΩ>ÔøΩ€•LÔøΩeÔøΩÔøΩnÔøΩÔøΩÔøΩ[ÔøΩfÔøΩÔøΩ""ÔøΩÔøΩÔøΩÔøΩ[pÔøΩÔøΩX*OÔøΩÔøΩrÔøΩ:1ÔøΩ|""JÔøΩÔøΩxÔøΩi$ÔøΩLMÔøΩÔøΩ ÔøΩŒáÔøΩÔøΩÔøΩ	ÔøΩ(""ÔøΩb\ÔøΩvbARÕ£#ÔøΩÔøΩƒëGÔøΩzÔøΩDÔøΩ∆ùÔøΩkNÔøΩu[%;VnÔøΩÔøΩBI8ÔøΩ""3ÔÜ≤ÿñhd|ÔøΩyÔøΩ[ÔøΩÔøΩÔøΩZ^%ÔøΩ;+GeaÔøΩTÔøΩÔøΩ{}ÔøΩÔøΩMÔøΩÔøΩÔøΩQ@ÔøΩÔøΩTÔøΩÃç(ÔøΩÔøΩÔøΩÔøΩÔøΩbFÔøΩ}ÔøΩÂ≠π$iÔøΩÔøΩmÔøΩÔøΩÔøΩncÔøΩ)7=WOÔøΩBÔøΩS‘íÔøΩoÔøΩÔøΩÔøΩÔøΩ=ÔøΩD}ÔøΩpÔøΩÔøΩÔøΩBÔøΩlÔøΩAÔøΩÔøΩÔøΩÔøΩÔøΩjÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩeÔøΩÔøΩÔøΩÔøΩGzÔøΩ_pﬁà2ÔøΩx-wXÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ7ÔøΩtÔøΩÔøΩ|ÔøΩ«èvÔøΩÔøΩNÔøΩÔøΩtÔøΩAÔøΩgÔøΩL7ÔøΩ/xÔøΩuÔøΩ$)ÔøΩÔøΩ|ÔøΩÔøΩ\PÔøΩI;eÔøΩÔøΩ<\BkÔøΩ–ùÔøΩÔøΩrÿáÔøΩÔøΩÔøΩ5ÔøΩgHÔøΩÔøΩÔøΩ‚™ée]ÔøΩ3ÔøΩÔøΩÔøΩ~ &„äçwMÔøΩ(ÔøΩkn;ÔøΩÔøΩ?ÔøΩÔøΩÔøΩÔøΩÔøΩ0#ÔøΩf'ÔøΩÔøΩ~ÔøΩ+;9ÔøΩÔøΩlÔøΩ5`ÔøΩÔøΩÔøΩÔøΩÔøΩPÔøΩ√§ÔøΩ]FfÔøΩ=ÔøΩ>ÔøΩÔøΩÔøΩ6ÔøΩÔøΩ[^ÔøΩ2ÔøΩÔøΩ?ÔøΩUÔøΩÔøΩ 2>ÔøΩÔøΩ7ÔøΩO1jYÛò¢é.xÔøΩp+ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩdÔøΩsNÔøΩRÔøΩmb≈∞ÔøΩrÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩfÔøΩÔøΩÔøΩ=ÔøΩÔøΩÔøΩ‘±R'ÔøΩÔøΩQÔøΩÔøΩ“µÔøΩh)m…åÔøΩÔøΩWZÔøΩTrAÔøΩfÔøΩ1gÔøΩ6ÔøΩÔøΩÈºïÔøΩ‚ö∞jÔøΩZÔøΩÔøΩÔøΩÔøΩumÔøΩÔøΩÔøΩQoÔøΩÔøΩÔøΩÔøΩrÔøΩÔøΩÔøΩÔøΩÔøΩySGgUÔøΩ%K*ÔøΩÔøΩoÔøΩÔøΩ@sÔøΩÔøΩi¬ßÔøΩÔøΩÔøΩÔøΩ}OSÔøΩQÔøΩTÔøΩÔøΩÔøΩÔøΩ0MÔøΩ""q""ÔøΩpÔøΩmnÔøΩ]iÔøΩ7ÔøΩÔøΩÔøΩÔøΩ\ÔøΩÔøΩÔøΩÔøΩ0dÔøΩoÔøΩÔøΩ ÔøΩÔøΩÔøΩt92ÔøΩ:ÔøΩ+/IQc2ÔøΩ;?ÔøΩ^ÔøΩOÔøΩ\ÔøΩ~ÔøΩÔøΩÔøΩÔøΩEÔøΩ ΩÔøΩ«àÔøΩ.ÔøΩÔøΩÔøΩÔøΩU4ÔøΩÔøΩjÔøΩbXÔøΩN1NÔøΩ^ÔøΩÔøΩ	8K]ÔøΩÔøΩY^gNÔøΩÔøΩÔøΩcÔøΩÔøΩ ÔøΩÔøΩÔøΩ#ZÔøΩÔøΩÔøΩn3ÔøΩ=:ÔøΩ[ÔøΩEÔøΩ2ÔøΩÔøΩÔøΩ|ÔøΩ7ÔøΩq&ÔøΩÔøΩNÔøΩÔøΩj{ÔøΩ|IÔøΩRÔøΩXAIÔøΩVÔøΩÔøΩv`yÔøΩ4Y‡≤á*ÔøΩLÔøΩnÔøΩÿëC h :ÔøΩ0gÔøΩc%]ÔøΩD–≠+ÔøΩÔøΩZi9uZÔøΩCÔøΩÔøΩ\ÔøΩÔøΩ9ÔøΩRÔøΩ^ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩfÔøΩf}ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩgÔøΩ@ÔøΩÔøΩÔøΩKÔøΩ?ÔøΩÔøΩ:ÔøΩÔøΩ{'ÔøΩ}ÔøΩÔøΩÔøΩx/}ÔøΩÔøΩÔøΩÔøΩ‹ôÔøΩ'ÔøΩÔøΩÿ≠]NÔøΩÔøΩ3ÔøΩ#ÔøΩÔøΩÔøΩÔøΩÔøΩM—ç!1ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ BÔøΩ41[ÔøΩÔøΩÔøΩF2ƒô]ZÔøΩ6ÔøΩ÷ütÔøΩÔøΩ3≈•ﬂîÁ¥âÔøΩÔøΩMÔøΩÔøΩÔøΩÔøΩÕµÔøΩ ÔøΩÔøΩÔøΩdÔøΩÔøΩ9>ÔøΩÔøΩGoUÔøΩ›Ä.A?:ÔøΩhWŒûÔøΩÔøΩtÔøΩEÔøΩvxÔøΩeÔøΩÔøΩÔøΩÔøΩ(GjÔøΩÔøΩÔøΩ_d\wÔøΩ$>QÔøΩÔøΩfDÔøΩÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ&eÔøΩÔøΩÔøΩ%/ÔøΩx4KjÔøΩÔøΩÔøΩAZAÔøΩÔøΩÔøΩHrMnÔøΩ√≤0ÔøΩÔøΩÔøΩÔøΩLÔøΩÔøΩÔøΩuÔøΩg)&ÔøΩ#ÔøΩ!ÔøΩÔøΩh+3ÔøΩÔøΩxÔøΩÔøΩ>ÔøΩÔøΩ~ÔøΩ0ÔøΩÔøΩpÔøΩÔøΩhÔøΩ*AÔøΩ+bÔøΩÔøΩBÔøΩÔøΩÔøΩDÔøΩbyC8ÔøΩx2GÔøΩÔøΩÔøΩÔøΩÔøΩ.ÔøΩ`uFÔøΩ/UÔøΩmRÔøΩl7eÀ∂ÔøΩÔøΩÔøΩbÔøΩNÔøΩﬂñÔøΩ&ÔøΩÔøΩPÔøΩÔøΩ=ÔøΩpÔøΩJÔøΩgÔøΩÿñÔøΩ~9ZÔøΩﬁ¶0]~ÔøΩENÔøΩÔøΩÔøΩy^ÔøΩÔøΩÔøΩ(5NmeCÔøΩIÔøΩÔøΩÔøΩÔøΩFmÔøΩ=ÔøΩ!ÔøΩÔøΩ6mÔøΩÔøΩÔøΩ—ßÔøΩÔøΩ""ÔøΩhÔøΩDÔøΩÔøΩÔøΩ^”£ÔøΩÔøΩÔøΩ@ÔøΩ[ÔøΩ5IÔøΩ5⁄ÜÔøΩÔøΩ|ÔøΩ/ÔøΩYÔøΩ{-ÔøΩÔøΩ7BÔøΩÔøΩÔøΩZÔøΩQ)1ÔøΩw>mÔøΩ}K2MnÔøΩ#ÔøΩÔøΩÔøΩlz| hMj…∞ÔøΩuXÔøΩqÔøΩecÔøΩv91ÔøΩzÔøΩ""'r%&&ÔøΩÔøΩÔøΩEjÔøΩLDÔøΩ~ÔøΩÔøΩÔøΩ40\ÔøΩCÔøΩiƒúZpb> ÔøΩjJ1ÔøΩÔøΩÔøΩ)[h+ÔøΩ 	6ÔøΩÔøΩ\ÔøΩ]QÔøΩÔøΩÔøΩÔøΩckÔøΩIdLÔøΩÔøΩ	SË¶óÔøΩ*=UÔøΩÔøΩzÔøΩy_ÔøΩ7ÔøΩÔøΩÔøΩ7ÔøΩCÔøΩoÔøΩtWÔøΩuÔøΩÔøΩÔøΩjÔøΩÔøΩÔøΩÔøΩ€ß~;œ¢ÔøΩÔøΩu9ÔøΩQFÔøΩÔøΩKÔøΩÔøΩÔøΩ&7ÔøΩ)ÔøΩ$“àÔøΩœâÔøΩ/-ÔøΩ*ÔøΩ<cIF‘îl+nÔøΩAs(ÔøΩÔøΩB?ÔøΩÔøΩ/z”ΩÔøΩQÔøΩx][ÔøΩ ÔøΩaÔøΩtK ÔøΩ	*mmÔøΩEÔøΩÔøΩvÔøΩÔøΩÔøΩÔøΩbÔøΩÔøΩV\T2√éÔøΩ2OÔøΩÔøΩ\ÔøΩ'ÔøΩÔøΩÔøΩÔøΩdÀáÔøΩJÔøΩ""ÔøΩiÓèÖÔøΩM+ÔøΩÔøΩd!ÔøΩ}√ö…á1ÔøΩ]ÔøΩqÔøΩB:oXÔøΩÔøΩÔøΩ	ÔøΩUÔøΩÔøΩÔøΩHF3ÔøΩÔøΩWYhÔøΩ]ÔøΩ]4?◊ú%ÔøΩÔøΩ#n€ô9wÔøΩf?IÔøΩ:ÔøΩhÔøΩÔøΩÔøΩ~ÔøΩc8ÔøΩ @ÔøΩzÔøΩd #3#ÔøΩ$%wÔøΩ ÔøΩ2> endstream endobj 27 0 obj << /Filter /FlateDecode /Length1 1373 /Length2 6101 /Length3 0 /Length 7047 >> stream xÔøΩÔøΩvTÔøΩÔøΩ.!RÔøΩÔøΩCÔøΩÔøΩ “çtH#ÔøΩÔøΩ 3ÔøΩÔøΩ ÔøΩÔøΩtÔøΩÔøΩHÔøΩ4“çt ÔøΩ!%J+]ÔøΩÔøΩÔøΩÔøΩsÔøΩÔøΩ‹ª÷Ωk÷öywÔøΩÔøΩÔøΩÔøΩy◊∞3ÔøΩÔøΩ)ÔøΩ!lÔøΩ*8ÔøΩOÔøΩ(	xÔøΩÔøΩ/ ÔøΩÔøΩÔøΩ@!BvvC(ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÏÜÑ""ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ BÔøΩuJ ÔøΩMhÔøΩ;ÔøΩÔøΩÔøΩÔøΩÔøΩbÔøΩ@ @ÔøΩÔøΩÔøΩ#ÔøΩMÔøΩÔøΩÔøΩÔøΩÔøΩ8IÔøΩÔøΩÔøΩÔøΩÔøΩuÔøΩÔøΩÔøΩUÔøΩupÔøΩr%$ÔøΩxÔøΩÔøΩ``7ÔøΩ-ÔøΩÔøΩ `ÔøΩÔøΩ-ÔøΩ`ÔøΩÔøΩÔøΩÔøΩQÔøΩÔøΩHÔøΩ% AÔøΩ\$<==ÔøΩA0$?ÔøΩÔøΩAÔøΩÔøΩÔøΩ	EA ÔøΩ`$ÔøΩÔøΩlÔøΩ=.ÔøΩ	ÔøΩ3?!;ÔøΩEÔøΩÔøΩ6@ÿ£<An` ZÔøΩÔøΩ√ëÔøΩ wÔøΩÔøΩ ÔøΩÔøΩ 0PÔøΩË∏ÄÔøΩ9kÔøΩÔøΩÔøΩÔøΩÔøΩj ÔøΩÔøΩÔøΩÔøΩNÔøΩwÔøΩÔøΩDPÔøΩÔøΩ`ÔøΩÔøΩ-ÔøΩÔøΩ{CÔøΩ {ÔøΩ3ÔøΩÔøΩÔøΩ≈èÔøΩBÔøΩ@pÔøΩﬂé g$ÔøΩ AÔøΩA6hÔøΩ?ÔøΩÔøΩ * z zÔøΩÔøΩÔøΩC⁄∫A]PH~$ÔøΩÔøΩÔøΩÔøΩÔøΩ”†/YnÔøΩÔøΩÔøΩÔøΩ($ÔøΩÔøΩÔøΩÔøΩÔøΩn`[ÔøΩÔøΩ{ÔøΩYÔøΩÔøΩ	ÔøΩÔøΩÔøΩlÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩEÔøΩuuÔøΩ+ÔøΩÔøΩVÔøΩGÔøΩ FDÔøΩ@ÔøΩÔøΩÔøΩ8 ÔøΩ  {ÔøΩB~'7ÔøΩvÔøΩ1 ÔøΩVÔøΩÔøΩÔøΩÔøΩuAÔøΩ ÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩ`ÔøΩÔøΩ/ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩOÔøΩPP`ÔøΩElÔøΩP8ÔøΩÔøΩÔøΩÔøΩ`ÔøΩÔøΩdÔøΩÔøΩ›†^ 3 xÔøΩ ÔøΩÔøΩœøOhlÔøΩ!ÔøΩÔøΩÔøΩÔøΩqÔøΩÔøΩ\}5#5uÔøΩ?ÔøΩ€§ÔøΩÔøΩÔøΩÔøΩÔøΩ	|B""@4VÔøΩÔøΩ bÔøΩÔøΩ?ÔøΩËÇ†wÔøΩOÔøΩ:ÔøΩÔøΩÔøΩÔøΩYÔøΩ-ÔøΩÔøΩaÔøΩÔøΩÔøΩÔøΩÔøΩ71ÔøΩÔøΩÔøΩÔøΩÔøΩF,ÔøΩÔøΩÔøΩÔøΩEÔøΩÔøΩÔøΩ/ÔøΩÔøΩoÔøΩÔøΩ	ÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩÔøΩÔøΩÔøΩwgÔøΩ?VÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩAÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩBc_ÔøΩf ÔøΩÔøΩ]ÔøΩÔøΩÔøΩÔøΩÔøΩ6ÔøΩÔøΩÔøΩoÔøΩ: ÔøΩÔøΩÔøΩÔøΩÔøΩﬂóEÔøΩ@ÔøΩÔøΩvÔøΩPÔøΩ-ÔøΩ/ÔøΩÔøΩÔøΩ7ÔøΩM0g(ÔøΩÔøΩ@B?( ÔøΩÔøΩeCÔøΩÔøΩÔøΩ	ÔøΩh ÔøΩxÔøΩcÔøΩIÔøΩœíÔøΩp[ÔøΩÔøΩov	ÔøΩÔøΩ@nn oBÔøΩ—íÔøΩWMC;ÔøΩÔøΩÔøΩÔøΩ:ÔøΩÔøΩ`ÔøΩp#ÔøΩÔøΩÔøΩG ÔøΩÔøΩÔøΩ[ÔøΩGFÔøΩ@y""ÔøΩÔøΩÔøΩ(dÔøΩÔøΩÊÜ¶ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ`ÔøΩÿñpna+ÔøΩXÔøΩr^ÔøΩÔøΩÔøΩ…∑1*ÔøΩ}ÔøΩi7ÔøΩÔøΩ[ÔøΩÔøΩ%)^2wEfÔøΩ€©BÔøΩ@ÔøΩÔøΩ2◊âÔøΩÔøΩÔøΩkﬂùÔøΩxaMÔøΩzÔøΩW~ÔøΩÔøΩÔøΩÔøΩÔøΩ7ÔøΩ	g?QÔøΩÔøΩÔøΩÔøΩ(ÔøΩÔøΩ0ÔøΩÔøΩ3ÔøΩÔøΩÔøΩwÔøΩÔøΩgÔøΩ›àŸÆÔøΩÔøΩÔøΩÔøΩ.NÔøΩÔøΩCyÔøΩŸ≠ÔøΩUÔøΩSÔøΩ0ÔøΩrzCÔøΩ[ÔøΩÔøΩ&—ØÔøΩ	ÔøΩhÔøΩ(ÔøΩÔøΩIÔøΩw6oÔøΩhYpQ|ÔøΩÔøΩ)~z›ù<9ÔøΩLÔøΩvÔøΩÔøΩÔøΩF<ÔøΩÔøΩnÔøΩpÔøΩÔøΩÔøΩPÔøΩ≈îÔøΩRÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩŒîÔøΩÔøΩÔøΩbxÔøΩÔøΩWq3EÔøΩf∆∑(ÔøΩw÷´Q:ÔøΩÔøΩ[ÔøΩÔøΩE>2ÔøΩMÔøΩÔøΩPÔøΩWÔøΩÔøΩÔøΩUÔøΩsmÔøΩ_ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ_ÔøΩÔøΩÎ©¨ÔøΩXtÔøΩU4[ÔøΩÔøΩDU	;ÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩNÔøΩÔøΩwÔøΩÔøΩQbÔøΩÔøΩÔøΩÔøΩÔøΩE	ÔøΩÔøΩÔøΩÔøΩÔøΩ	ÔøΩ|ÔøΩÔøΩÔøΩ ÔøΩ)ÔøΩZÔøΩÔøΩÔøΩ+/ÔøΩÔøΩ{ÔøΩÔøΩÔøΩ0 ◊üÔøΩ@ÔøΩO‹ΩÔøΩ0ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩy›£ÔøΩ4FÔøΩBAÔøΩ‰ºõÔøΩÔøΩÔøΩÔøΩ8ÔøΩÔøΩÔøΩÁ££ÔøΩQÔøΩCÔøΩÔøΩQÔøΩ%ÔøΩ0u_ÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩ""zÔøΩÔøΩÔøΩYÔøΩ<luÔøΩÔøΩ&gÔøΩG:pkÔøΩÔøΩÔøΩÔøΩ5Q?:ÔøΩÔøΩÔøΩFQQaÔøΩnTxuÔøΩÔøΩ+ÔøΩÔøΩJÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩb‚§ëÔøΩDIÔøΩÔøΩFteÔøΩwhÔøΩaÔøΩÔøΩÔøΩy- kHÔøΩRÔøΩCNÔøΩÔøΩ9ÔøΩÔøΩ?x;9⁄èÔøΩ(g ÔøΩ~%ÔøΩ~◊ÇÔøΩÔøΩÔøΩ+HÔøΩ{.evÔøΩÔøΩb?(ÔøΩ:ÔøΩzyÔøΩÔøΩÔøΩLÔøΩWÔøΩl]ÔøΩ@:cÔøΩsUÔøΩY?ÔøΩÔøΩ]rÔøΩoÔøΩÔøΩ/ÔøΩÔøΩÔøΩpp 4ÔøΩÔøΩÔøΩÔøΩOÔøΩÔøΩ6»≤ÔøΩÔøΩ/V|ÔøΩgÔøΩ9ÔøΩ7""{mF^ÔøΩ}}ÔøΩÔøΩÔøΩ9!DÔøΩÔøΩÔøΩS:ÔøΩX7ÔøΩÔøΩÔøΩ6ÔøΩÔøΩÔøΩÔøΩOÔøΩÔøΩÔøΩDÔøΩI3FÔøΩSYÔøΩ)ÔøΩg)UÔøΩÔøΩÔøΩILÔøΩ<ﬂôÔøΩÔøΩ$ÔøΩÔøΩÔøΩZWSw8ÔøΩÀºoT–£?=~7ÔøΩdÔøΩpÔøΩ|ÔøΩÔøΩzvÔøΩÔøΩÔøΩ6ÔøΩÔøΩÔøΩUÔøΩ_ÔøΩÔøΩÔøΩÔøΩÔøΩoÔøΩ<N;],-xÔøΩ…ùÔøΩ”ék5ÔøΩ ZÔøΩÔøΩÔøΩSÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ,6oÔøΩÔøΩÔøΩÔøΩÔøΩ»õÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩtR'ÔøΩÔøΩ,ÔøΩÔøΩ…°)ÔøΩ;CRB	ÔøΩSx*ÔøΩVÔøΩÔøΩÔøΩÔøΩNÔøΩ2ÔøΩÔøΩÔøΩÔøΩ⁄∏ÔøΩ.ÔøΩÔøΩ>ÔøΩÔøΩ\ÔøΩKgÏÆ≠ÔøΩ9ÔøΩÔøΩ""ÔøΩ/!xÔøΩxÔøΩZ2%ÔøΩ:R ÔøΩÔøΩ4VÔøΩMEÔøΩÔøΩÔøΩ=ÔøΩSmi-ÔøΩÔøΩKÔøΩdcÔøΩÔøΩ`ÔøΩÔøΩ0ÔøΩÔøΩCÃëR5ÔøΩ|JOÔøΩÔøΩNdr}ÔøΩÔøΩs/ÔøΩ)ﬂÄ4cÔøΩFÔøΩqÔøΩLMBÔøΩÔøΩÔøΩ	ÔøΩÔøΩ`ÔøΩro“°ÔøΩÔøΩ[ÔøΩ ÔøΩTÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩk5!ÔøΩÔøΩwÔøΩFNxVÔøΩfy8ÔøΩÔøΩZUI<xÔøΩWp[ÔøΩÔøΩÔøΩ%MÔøΩÔøΩÔøΩÔøΩ8ÔøΩÔøΩÔøΩJÔøΩ[tÔøΩÔøΩÔøΩ_ÔøΩkfÔøΩÔøΩuŸäeÔøΩÔøΩÔøΩeÔøΩÔøΩ7$ÔøΩÔøΩÔøΩlÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩÔøΩuÔøΩÔøΩÔøΩÔøΩ(GÔøΩÔøΩÔøΩÔøΩ =:ÔøΩ	=ÔøΩ2ÔøΩ$÷≥K-}6-,ÔøΩ$ÔøΩÔøΩÔøΩydÔøΩ/ÔøΩKÔøΩiÔøΩ5ÔøΩd8}ÔøΩeÔøΩ/hÔøΩÔøΩÔøΩÔøΩ◊àÔøΩÔøΩ{2ÔøΩÔøΩÔøΩ{⁄¢FÔøΩÔøΩ/""ÔøΩ/YÔøΩÔøΩxgYÔøΩcb2ÔøΩÔøΩDÔøΩÔøΩ0ÔøΩÔøΩÔøΩF`ÔøΩdÔøΩÔøΩ,ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ2ÔøΩÔøΩyUiS][J%ÔøΩÔøΩÔøΩ]ÔøΩ{EÔøΩj3iÔøΩÔøΩdÔøΩÔøΩmÔøΩDo-›ú2dfÔøΩZqÔøΩÔøΩ%vrÔøΩ`ÔøΩRÔøΩÔøΩJ!ÔøΩtÔøΩmMx-pÔøΩÔøΩÔøΩ1ÔøΩÔøΩÔøΩÔøΩ&ÔøΩÔøΩ=m2ÔøΩÔøΩO.ÔøΩ ÔøΩ_ÔøΩ…ØÔøΩWÔøΩTDÔøΩÔøΩ~ÔøΩIq,ÔøΩÔøΩ!ÔøΩÔøΩÔøΩMÔøΩ{6-8RÔøΩjÔøΩﬁñRÔøΩÔøΩ\ÔøΩÔøΩÔøΩ‹êÔøΩÔøΩ<ÔøΩÔøΩ\CÔøΩÔøΩ3ÔøΩ4ÔøΩtÔøΩoHyÔøΩÔøΩ@)‹òuÔøΩ>pÔøΩÔøΩN5ÔøΩÔøΩÔøΩb[%|ÔøΩW5ÔøΩ4ÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩCÔøΩ:ŒªÔøΩÔøΩÔøΩ ÔøΩOÔøΩ\ÔøΩÔøΩ%ÔøΩFÔøΩ‡™ÆÔøΩÔøΩ0b}'ÔøΩﬁπÓëπ]cÔøΩ;ÔøΩ+[ÔøΩ?=)ÔøΩyÔøΩÔøΩjiÔøΩoÔøΩ[ÔøΩ/ÔøΩnÔøΩÔøΩ!ÔøΩ]ÔøΩ7ÔøΩÔøΩnÔøΩ=ÔøΩÔøΩb;IÔøΩÔøΩ ,ÔøΩÔøΩwiYÔøΩﬁòÔøΩÔøΩÔøΩÔøΩvzDÔøΩaÔøΩjrWÔøΩ19ÔøΩÔøΩ√íiÔøΩ=v>ÔøΩÔøΩP>ÔøΩÔøΩÔøΩDÔøΩÔøΩÔøΩÔøΩ{yÔøΩÔøΩ;ÔøΩz;ÔøΩSÔøΩÔøΩYÔøΩ ÔøΩ9ÔøΩ.XÔøΩ=ÔøΩÔøΩzÔøΩÔøΩ‹¢ÔøΩ2	ÔøΩÔøΩ_h) ÔøΩÔøΩÔøΩÔøΩÔøΩÀ∏ÔøΩÔøΩH=a$ÔøΩ>NÔøΩÔøΩÔøΩÔøΩ3+a ÔøΩÔøΩe#ÔøΩÔøΩÔøΩQÔøΩÔøΩX1wÔøΩ_4ÔøΩÔøΩÔøΩÔøΩÔøΩXÔøΩZÔøΩÔøΩÔøΩ∆πÔøΩFÔøΩjÔøΩDÔøΩ?ÔøΩ{ÔøΩÔøΩÔøΩÔøΩtÔøΩyRÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩvÔøΩÔøΩnk#AÔøΩmÔøΩÔøΩ#+bcuÔøΩÔøΩÔøΩ'ÔøΩ^gM(iTÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩUHÔøΩiÔøΩÔøΩpÔøΩTÔøΩ* ÔøΩÔøΩ7ÔøΩÔøΩ^ÔøΩÔøΩÔøΩE@]rSÔøΩÔøΩÔøΩr›µÔøΩÔøΩ7ÔøΩÔøΩCYeÔøΩÔøΩ*0nÔøΩKÔøΩ;ÔøΩ%d?]ÔøΩÔøΩyÔøΩS2ÔøΩÔøΩÔøΩÔøΩGÔøΩÂΩö'4ÔøΩÔøΩÔøΩÔøΩY>ÿ°2!QGb…º ÔøΩ.ÔøΩHÔøΩDiÏØ°>ÔøΩÔøΩÔøΩe8KÔøΩÔøΩ=ÔøΩ)ÔøΩÔøΩÔøΩÔøΩsÔøΩXWÔøΩ2\ÔøΩÔøΩ-ÔøΩ70bÔøΩ‘æÔøΩÔøΩuWMÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ“≤ÔøΩYÔøΩ1OEÔøΩ»äÃòÔøΩÔøΩÔøΩPÔøΩb ÔøΩÔøΩÔøΩÔøΩÔøΩiÔøΩ7ÔøΩ,[iÔøΩnÔøΩÔøΩÔøΩ2ÔøΩIÔøΩl3ÔøΩ(ÔøΩ=ÔøΩÔøΩÔøΩvaÔøΩÔøΩPÔøΩ@ÔøΩ`RÔøΩ‹ïÔøΩ4VÔøΩUzÔøΩ{MÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩaÔøΩÔøΩ_VÔøΩÔøΩÔøΩÔøΩÔøΩ<[ÔøΩÔøΩIBÔøΩx]e#ÔøΩÔøΩhÔøΩ:ÔøΩÔøΩ@<!ÔøΩÔøΩ÷Ü&qÔøΩÔøΩ5ÔøΩÔøΩÔøΩÔøΩÔøΩ+ÔøΩÔøΩÔøΩÔøΩÔøΩs-ÔøΩXrÔøΩ/ÔøΩp MÔøΩÔøΩ◊™ÔøΩÔøΩ_ÔøΩÔøΩ""ÔøΩ`LÔøΩRkFÔøΩÔøΩœ®ÔøΩuÔøΩNÔøΩÔøΩÔøΩÔøΩ^‹∏ÔøΩÔøΩ~ÔøΩÔøΩWÔøΩÔøΩÔøΩ,ÔøΩ”ºv`uÔøΩ	fXuO›†ÔøΩ ÔøΩGÔøΩK]]b^MÔøΩÔøΩÔøΩÔøΩ\ÔøΩ1ÔøΩÔøΩ-ÔøΩÔøΩ%ÔøΩÔøΩÔøΩÔøΩÔøΩqwÔøΩÔøΩs!wÔøΩÔøΩ ºÔøΩt{ÔøΩÔøΩQo""ÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩw(I&wRcÔøΩÔøΩeÔøΩÔøΩÔøΩÔøΩÔøΩ BÔøΩ_ÔøΩÔøΩ1ÔøΩÔøΩ+ÔøΩÔøΩÔøΩ[ÔøΩOdÔøΩÔøΩ3iÔøΩP	ÔøΩÔøΩ>fÃûy6ÔøΩVÔøΩÔøΩIÔøΩ%ÔøΩ›°ÔøΩÔøΩÔøΩŸæÔøΩ5\ÔøΩ:ÔøΩÔøΩqB>^ﬁÑÔøΩSh<ÔøΩÔøΩÔøΩÔøΩ:ÔøΩMe*/hHÔøΩÔøΩ&ÔøΩÔøΩ75uGÔøΩÔøΩdÔøΩ#ÔøΩÔøΩv|ÔøΩT(ÔøΩlÔøΩ≈ãÔøΩIÔøΩQÔøΩÔøΩÔøΩÔøΩÔøΩbÔøΩÔøΩiÔøΩÔøΩLÔøΩQÔøΩrÔøΩL⁄üÔøΩÔøΩ<ÔøΩ’ó‘≥ÔøΩ:ÔøΩ{ÔøΩQxÔøΩÔøΩ9yÔøΩnÔøΩÔøΩÔøΩÔøΩ }_=ÔøΩAÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ'ÔøΩiÔøΩÔøΩÔøΩ~ÔøΩÔøΩÔøΩÔøΩsHÔøΩÔøΩÔøΩXÔøΩ=ÔøΩ#ÔøΩÔøΩÔøΩyUÔøΩƒæÔøΩÔøΩÔøΩ ÔøΩ/ÔøΩÔøΩ ÔøΩÔøΩÔøΩ‘¶ÔøΩ7Í´ù~E%9,ÔøΩ‹ªA	”âﬁøÔøΩÔøΩÔøΩ`XÔøΩÔøΩÔøΩÔøΩÔøΩ#ÔøΩÔøΩI/eÔøΩ#ÔøΩ<ÔøΩaÔøΩÔøΩrwrÔøΩÔøΩP	ÔøΩqcÔøΩ ÔøΩ*ÔøΩÔøΩ*6""ÔøΩ<ÔøΩÔøΩuoÔøΩÔøΩÔøΩe_;!ÔøΩÕ±QVÔøΩÔøΩÔøΩƒûÔøΩÔøΩOÔøΩ}ÕõXÔøΩÔøΩ_ÔøΩÔøΩÔøΩ{O*ÔøΩÔøΩ`ÔøΩÔøΩ“§ÔøΩ6wb%LÔøΩÔøΩp#&ÔøΩlÔøΩÔøΩÔøΩÔøΩÔøΩPÔøΩiXYœ´]ÔøΩ""XÔøΩÔøΩjÔøΩWÔøΩa_ÔøΩpÔøΩ>qF\ÔøΩ_ÔøΩ:ÔøΩyÔøΩÔøΩÔøΩ]ÔøΩXÔøΩ)QÔøΩÔøΩ$9IÔøΩÔøΩ|ÔøΩÔøΩjÔøΩXÔøΩÔøΩÔøΩ/J}0+?ÔøΩ3ÔøΩÔøΩÔøΩÔøΩ(9ÔøΩÔøΩÔøΩkÔøΩÔøΩÔøΩÔøΩÔøΩ0 ""ÔøΩ~ÔøΩ'+eÔøΩ2-ÔøΩOÔøΩ~cSÔøΩÔøΩÔøΩÔøΩÔøΩSÔøΩ4ÔøΩ)ÔøΩÔøΩ◊íÔøΩ,<ÔøΩFÔøΩ5ÔøΩÔøΩÔøΩ5+ÔøΩÔøΩl+<fÊπ≤›îÔøΩÔøΩ0ÔøΩ|ÔøΩ)8(ÔøΩÔøΩ9PÔøΩO:XÔøΩ+.NÔøΩÔøΩ4Z6NÔøΩlKÔøΩm&44ÔøΩÔøΩŸ±PÔøΩÔøΩ≈¥hÔøΩÔøΩlÔøΩÔøΩÔøΩ”∞ÔøΩÔøΩÔøΩsÔøΩI(ÔøΩ◊∑ÔøΩNÔøΩqÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ/‡£∫ÔøΩÔøΩÔøΩÔøΩ)JW,< ÔøΩÔøΩlÔøΩÔøΩmÔøΩ4ÔøΩÔøΩmÔøΩVÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩjNÔøΩÔøΩÔøΩÔøΩÔøΩqjTÔøΩÔøΩ9ÔøΩÔøΩÔøΩkÔøΩÔøΩÔøΩ«ÆÔøΩTMÔøΩÔøΩÔøΩÔøΩÔøΩ!‹ß»±<|t‹ÑÔøΩ0ÔøΩÔøΩ&ÔøΩÔøΩpg «ü MÔøΩ.ÔøΩÔøΩLÔøΩÔøΩÔøΩÔøΩVÔøΩÔøΩRl+ÔøΩÔøΩ>MÔøΩÔøΩdÔøΩ'ÔøΩÔøΩÔøΩÔøΩVÔøΩ ?,*FÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ-ÔøΩ>WÔøΩÔøΩÔøΩÔøΩŸ¢ÔøΩÔøΩ~Qt;ÔøΩÔøΩÔøΩ*0teÔøΩÔøΩ WÔøΩ.p÷üÔøΩÔøΩ.ÔøΩÔøΩ\ÔøΩV ÔøΩ*ÔøΩÔøΩÔøΩh<XÔøΩÔøΩÔøΩDEF\ÔøΩP èrÔøΩÔøΩsTÔøΩZÔøΩkÔøΩÔøΩÔøΩÔøΩqÔøΩ#ÔøΩn)ÔøΩﬁ≤fI	«ªÔøΩÔøΩÔøΩÔøΩz–ºÔøΩ3ÔøΩÔøΩÔøΩ ÔøΩ4ÔøΩe5ﬂÅÔøΩÔøΩÔøΩiÔøΩÔøΩÔøΩmÔøΩÔøΩÔøΩmÔøΩÔøΩ|.UAzÔøΩÔøΩÔøΩÔøΩÔøΩ∆ñÔøΩ{2rÔøΩÔøΩÔøΩ>)DÔøΩÔøΩÔøΩ{ÔøΩS5Z8&hÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ""GÃâ’ßBd3ÔøΩÔøΩ|lIÔøΩÔøΩœûÔøΩO-—ºÔøΩÔøΩ[ÔøΩÔøΩÔøΩ'ÔøΩRÔøΩÔøΩ?ÔøΩÔøΩ5ÔøΩAX&ÔøΩÔøΩÔøΩ4MÔøΩÔøΩÔøΩZÔøΩ<ÔøΩ5ÔøΩÔøΩÔøΩtpÔøΩ ∫ÔøΩlDÔøΩÔøΩ4ÔøΩ ÇÔøΩﬁçoÔøΩÔøΩqÔøΩÔøΩÔøΩÔøΩ2V?Ãê.jÔøΩÔøΩoÔøΩÔøΩXZ5mÿØNÔøΩ(ÔøΩ8ÔøΩeu~)<ÔøΩfxÔøΩ$›•ÔøΩ\ÔøΩÔøΩÔøΩz?YÔøΩÔøΩÔøΩ8ÔøΩrTÔøΩ\ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩNrEqÔøΩÔøΩÔøΩÔøΩXÔøΩÔøΩÔøΩ6ÔøΩÔøΩÔøΩ]@ÔøΩM_ÔøΩÔøΩÔøΩk""ÔøΩÃßz9Â¨Ø0ÔøΩK4ÔøΩÔøΩÔøΩyxÔøΩ?ÔøΩÔøΩ8{ÔøΩHÔøΩÔøΩsJ:ÔøΩ]ÔøΩÔøΩ&ÔøΩÔøΩÔøΩÔøΩ$mPÔøΩ/ÔøΩ=?ÔøΩÔøΩÔøΩÔøΩÔøΩC,cb⁄≠'ÔøΩvÔøΩ1ÔøΩ'‰ééÔøΩ;F_-3	ÔøΩhÔøΩ.ÔøΩÔøΩEÔøΩ]ÔøΩÔøΩrRÔøΩk.lÈæù]ÔøΩÔøΩÔøΩÔøΩÔøΩyiÔøΩÔøΩO)ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩXÔøΩÔøΩJÔøΩ (ÔøΩ_ÿ≠ ZÔøΩ9LÔøΩ√≥ÔøΩÔøΩÔøΩÔøΩU@ÔøΩ""ÔøΩÔøΩÔøΩÔøΩ ÔøΩ5:ÔøΩrÔøΩbÔøΩjMÔøΩ'#ÔøΩ7ÔøΩÔøΩtkÔøΩÔøΩÔøΩE*ÔøΩ}⁄™ÔøΩMÔøΩÔøΩÔøΩ≈∞ÔøΩÔøΩÔøΩIrÔøΩdÔøΩRÔøΩ+ÔøΩFGvwJÔøΩÔøΩÔøΩﬁßjÿ¨ÔøΩRwÔøΩœ∂ÔøΩ@J?{jÔøΩÔøΩfEÔøΩoÔøΩ>C/ÔøΩÔøΩp BÔøΩtÔøΩvÔøΩsÔøΩÔøΩÔøΩPÔøΩpÔøΩEKÔøΩbÔøΩÔøΩf>fbÔøΩ0DÔøΩU7ÔøΩgÔøΩ ÔøΩ?ÔøΩÔøΩÔøΩeÔøΩ1ÔøΩBÔøΩÔøΩDÔøΩÔøΩywÔøΩÔøΩÔøΩÔøΩÔøΩaÀül_ÔøΩ ÔøΩÔøΩkƒ¶UM+IÔøΩpÔøΩÔøΩÔøΩÔøΩ_D!%ÔøΩ\PqÔøΩVÔøΩÔøΩOqTÔøΩÔøΩÔøΩ{ÔøΩÔøΩÔøΩtÔøΩÔøΩoÔøΩ]S{sÔøΩÔøΩQÔøΩ^ÔøΩÔøΩÔøΩÔøΩÔøΩ,0x=VÔøΩezswÔøΩ=ÔøΩÔøΩÔøΩEÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩCMrÔøΩÔøΩÔøΩÔøΩÔøΩ:ÔøΩÔøΩa5d8ƒöÔøΩÔøΩÔøΩÔøΩÔøΩ;luÔøΩŒúÔøΩÔøΩÔøΩÔøΩpRÔøΩÔøΩoÔøΩNÔøΩÔøΩÔøΩ]ÔøΩqÔøΩÔøΩKjÔøΩrÔøΩ◊íÔøΩt|ÔøΩÔøΩR%Cul8cÔøΩ⁄πÔøΩ~ÔøΩm8ÔøΩi""ÔøΩdÔøΩÔøΩQÔøΩ›ßRÔøΩGÔøΩÔøΩÔøΩ2ÔøΩÔøΩÔøΩxÔøΩÔøΩMÔøΩŸ§nfÔøΩÓñ´x~ÔøΩ_ÔøΩltÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩwÔøΩ{GÔøΩ}ÔøΩÔøΩÔøΩÔøΩtÔøΩÔøΩ<ÔøΩÔøΩPÔøΩIÔøΩ5eqÔøΩÔøΩÔøΩ+ÔøΩ@ÔøΩÔøΩ\ÔøΩrÔøΩb-ÔøΩYŸ¨$PÔøΩ&ÔøΩÔøΩÔøΩ]ÔøΩVÔøΩÔøΩÔøΩZÔøΩÔøΩÔøΩ%ÔøΩsÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ:tWÔøΩÔøΩÔøΩÔøΩÔøΩ8]ÔøΩÔøΩi ;-SÔøΩÔøΩÔøΩ[C#ÔøΩoÔøΩÔøΩtÔøΩÔøΩtÔøΩÔøΩVÔøΩÔøΩÔøΩÔøΩ.ÔøΩvÔøΩÿã*ÔøΩÔøΩ¬∞ÔøΩ÷ò<ÔøΩ&ﬁ∂ÔøΩsÔøΩJŒ®ÔøΩÔøΩÔøΩJÔøΩT/ÔøΩlÔøΩÔøΩ#>=ÔøΩ9\ÔøΩSÔøΩ8mÔøΩ.V597ÔøΩnÔøΩÔøΩ?ÔøΩ5ÔøΩÔøΩ9ÔøΩwÔøΩÔøΩ	ÔøΩrvfNÔøΩÃ†ÔøΩÔøΩ,ÔøΩÔøΩw+]]ÔøΩ[ÔøΩÃ´*(G	cÔøΩwiMÔøΩ=ÔøΩÔøΩ2€æÔøΩL\ÔøΩ ¢kÔøΩÔøΩ]ÔøΩ:ÔøΩ…ãÔøΩ<wÔøΩMÔøΩppÔøΩ3ÔøΩÔøΩJÔøΩ	\ÔøΩxÔøΩÔøΩÔøΩ	AWÔøΩIÔøΩ}ÔøΩ›ªÔøΩÔøΩDÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩ0ÔøΩ0{UÔøΩÔøΩÔøΩ:ÔøΩmÔøΩe-ÔøΩÔøΩÔøΩaDÔøΩ ÔøΩÔøΩÔøΩ}G”ªÔøΩÔøΩÔøΩPÔøΩd!ÔøΩ/h7p:ÔøΩ!zÔøΩÔøΩÔøΩP{tÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩZÔøΩÔøΩÔøΩÔøΩÔøΩ‘ÆÔøΩO%{ÔøΩÔøΩuÔøΩ#ÔøΩÔøΩlÔøΩ>ÔøΩÔøΩÔøΩÔøΩIÔøΩnÔøΩZxÔøΩ~iÔøΩÔøΩGÔøΩÔøΩ ÔøΩÔøΩÔøΩr îÔøΩdÀµ?edPjÔøΩÔøΩPNÔøΩWÔøΩyÔøΩLÔøΩ1ÔøΩCÔøΩÔøΩÔøΩ65qÔøΩ?RÔøΩYÂôµÔøΩÔøΩ""KÔøΩ!ÔøΩÔøΩ""ÔøΩÔøΩj<ÔøΩÔøΩÔøΩÔøΩp)ÔøΩÔøΩgvjHKÔøΩSÔøΩÔøΩQÔøΩÔøΩ`ÔøΩlÔøΩK8nÔøΩÔøΩGÔøΩÔøΩ—ØE	ÔøΩ+7ÔøΩ?+B3ÔøΩÔøΩtÔøΩa'@ÔøΩÔøΩÔøΩOÔøΩ	ÔøΩ}XÔøΩ!eGÔøΩ8MaEÔøΩÔøΩÔøΩÔøΩÔøΩ=%-ÔøΩÔøΩÔøΩ^fWÔøΩOÔøΩÔøΩJ@{ÔøΩ≈ªÔøΩÔøΩÔøΩGÔøΩeÔøΩw$-ÔøΩ-ÔøΩCh‚ÖèÔøΩÔøΩÔøΩ:,ÔøΩ\ÔøΩ(TÔøΩaÔøΩÔøΩvIÔøΩÔøΩvJÔøΩÔøΩÔøΩÔøΩÔøΩ#	NÔøΩ<nSgÔøΩyXÔøΩÔøΩhÔøΩ,ÔøΩÔøΩx)lÔøΩÔøΩQÔøΩÔøΩ\ÔøΩÔøΩwÔøΩÔøΩÔøΩUÔøΩ<ÔøΩtÔøΩÔøΩÔøΩxÔøΩÔøΩÔøΩÔøΩUÔøΩobÔøΩq""=ÔøΩ""ÔøΩ«åÔøΩVÔøΩÔøΩÔøΩÔøΩ(ÔøΩÔøΩW@q:-ÔøΩDÔøΩÔøΩZÔøΩ√òMÔøΩ5ÔøΩÔøΩ9SÔøΩÔøΩ>ÔøΩÔøΩÔøΩnÔøΩÔøΩ;ÔøΩÔøΩbÔøΩ(€ó;aNÔøΩÔøΩotAÔøΩÔøΩpÔøΩÔøΩGnÔøΩ&◊ëÔøΩEU%ÔøΩÔøΩÔøΩgÔøΩÁ¥çÔøΩÔøΩÔøΩOÔøΩÔøΩÔøΩzÔøΩ.ÔøΩ‹™ÔøΩBN@	-ÔøΩ)ÔøΩÔøΩgÔøΩjqÔøΩÔøΩrh;7ÔøΩTÔøΩÔøΩÔøΩ¬∞bÔøΩerÔøΩÔøΩ&kÔøΩÔøΩ+	ÔøΩ{ÔøΩÔøΩœ∂BuÔøΩÔøΩÔøΩDﬂÇfÔøΩ”Å@5+ÔøΩÔøΩ?YÔøΩÔøΩ{ÔøΩpÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ_ÔøΩÔøΩÔøΩxËî©sÔøΩvÔøΩDÔøΩÔøΩÔøΩdÔøΩ1ÔøΩ;*ÔøΩTÔøΩÔøΩÔøΩ1_ÔøΩÔøΩzÔøΩÔøΩÔøΩ…Åf,7ÔøΩÔøΩÔøΩ~]ÔøΩÔøΩÔøΩ-gÔøΩÔøΩvÔøΩÔøΩÔøΩÔøΩÔøΩ=9n9ZsÔøΩbÔøΩÔøΩyUÔøΩÔøΩrÔøΩ2uÔøΩmb ÔøΩ?Œé13≈ã@ÔøΩÔøΩÔøΩ3*ÔøΩÔøΩÔøΩƒæÔøΩÔøΩIÔøΩﬁ´gdÔøΩQ=ÔøΩ] ÔøΩÔøΩ8ÔøΩ ÔøΩ#ÔøΩ|ÔøΩÔøΩ)ÔøΩ5ÔøΩqpÔøΩÔøΩ.ÔøΩÔøΩ_„´ç/%ÔøΩCxqWÔøΩuÔøΩÔøΩ:@ÔøΩeÔøΩÔøΩ…∏ÔøΩ[tÔøΩkYÔøΩ|ÔøΩmÔøΩhÔøΩÔøΩÔøΩeÔøΩnAMÔøΩ\ÔøΩ<8~ÔøΩÔøΩ6ÔøΩsÔøΩe'ÔøΩ&w6ÔøΩÔøΩrÔøΩÔøΩÔøΩtdÔøΩÔøΩÔøΩÔøΩJÔøΩTÔøΩÔøΩ9>ÔøΩQ/ÔøΩÔøΩtqÔøΩÔøΩÔøΩÔøΩ?&ÔøΩÔøΩ;]«âÔøΩhSÔøΩÔøΩ7ÔøΩÔøΩÔøΩ ÔøΩÔøΩxFyÔøΩwTÔøΩÔøΩÔøΩÔøΩÔøΩ\ÔøΩÔøΩÔøΩÔøΩq8FÔøΩÔøΩÔøΩÔøΩÔøΩDÔøΩÔøΩ»•CÔøΩNÔøΩXÔøΩXÔøΩÔøΩ= @’ØÔøΩÔøΩ6ÔøΩ—µIcoÔøΩÔøΩÔøΩMÔøΩÔøΩÔøΩ`RÔøΩÔøΩJÔøΩeÔøΩaÔøΩÂæ©ÔøΩLÔøΩÔøΩfÔøΩ)ÔøΩR7ŒÉÔøΩÔøΩÔøΩ^ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÈçïÔøΩiRÔøΩ]Jczc{qÔøΩÔøΩS4 ÔøΩqZÔøΩÔøΩk>Õ¶*	ÔøΩÔøΩÔøΩÚëùãÔøΩÔøΩMv}7ÔøΩypÔøΩcÔøΩÔøΩÔøΩjSÔøΩÔøΩÔøΩ]ÔøΩgqÔøΩÔøΩ)ÔøΩÔøΩÔøΩlo◊ßDÔøΩÔøΩ]ÔøΩmÔøΩÔøΩ'ÔøΩTÔøΩÔøΩ-vfÔøΩÔøΩ_∆≠L ÔøΩcÔøΩÔøΩÔøΩÔøΩ0=ÔøΩÍæöÔøΩÔøΩÔøΩ	Mg-cI'ÔøΩÔøΩÔøΩCÔøΩÔøΩÔøΩQLÔøΩÔøΩkÔøΩ/LÔøΩÔøΩVzÔøΩÔøΩÔøΩÔøΩÔøΩ>ÔøΩ/dÔøΩMÔøΩÔøΩÔøΩ~ÔøΩÔøΩÿµﬂó√öÔøΩ~ÔøΩÔøΩÔøΩlÔøΩÔøΩEÔøΩOYÔøΩ-ÔøΩmwwÔøΩÔøΩ 2ÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩ'Œ•ŸºÔøΩÔøΩÔøΩW(ÔøΩ `1LÔôßÔøΩqÔøΩ|~Âß∞ÔøΩÔøΩÔøΩy+ÔøΩtÔøΩ-zÔøΩÔøΩÔøΩÔøΩMÔøΩÔøΩ/ÔøΩ'ÔøΩIÔøΩ$R:ÔøΩÔøΩ6}Qu8ÔøΩk≈µÔøΩÔøΩÔøΩÔøΩ+ÔøΩÔøΩ)ÔøΩÔøΩÔøΩ ÔøΩ3ÔøΩÔøΩ2ÔøΩkcÔøΩ:ÔøΩbÔøΩÔøΩrm/ÔøΩÔøΩ¬°ÔøΩÔøΩSÔøΩIÔøΩÔøΩRÔøΩÔøΩ”ΩIWhÔøΩÔøΩÔøΩÔøΩ*wÔøΩÔøΩgÔøΩ~ÔøΩ\+NGÔøΩÔøΩTÔøΩÔøΩÔøΩkÔøΩÔøΩ*ÔøΩDÔøΩÔøΩÔøΩÔøΩc3ÔøΩÔøΩ{ÔøΩ'PÔøΩGÔøΩ1KTqÔøΩÔøΩÔøΩ;ÔøΩÔøΩ	gÔøΩÔøΩ{ÔøΩÔøΩ+;4ÔøΩbÔøΩÔøΩWÔøΩ‹ïÔøΩÔøΩÔøΩAVÔøΩÔøΩÔøΩÔøΩ4ÔøΩÔøΩÔøΩ/gÔøΩH)K6 ÔøΩÔøΩÔøΩÔøΩbneÔøΩ(ÔøΩÔøΩ'FÔøΩ_ÔøΩNÔøΩÔøΩÔøΩÔøΩyÔøΩÔøΩ'ÔøΩ^LQ1ÔøΩ:ÔøΩÔøΩÔøΩXÔøΩa:ÔøΩ≈ÄL	ÔøΩyÔøΩÔøΩ3AÔøΩÔøΩÔøΩ,IRlÔøΩi]ÔøΩÔøΩQ~IÔøΩ2?OÔøΩÔøΩÔøΩ]QjzRÔøΩÔøΩHÔøΩW√ºuj4Y""ÔøΩÔøΩÔøΩÔøΩ1ÔøΩ—ñÔøΩgÔøΩÔøΩÔøΩÔøΩ8ÔøΩÔøΩObÔøΩÔøΩƒãÔøΩÔøΩÔøΩr%ÔøΩTTÔøΩÔøΩ\>ÔøΩLÔøΩd	,6ÔøΩÔøΩT€åP»≤4:VÔøΩd?ÔøΩÔøΩ50>ÔøΩdNÔøΩÔøΩÔøΩ ÔøΩÔøΩCÔøΩXÔøΩzÔøΩÔøΩÔøΩZÔøΩDÔøΩÔøΩÔøΩ!{ÔøΩÔøΩÌö£ÔøΩÔøΩÔøΩaÔøΩ‰∑ß|ÔøΩÔøΩÔøΩjŸæÔøΩÔøΩfÔøΩ]qÔøΩÔøΩ1ÔøΩÔøΩ]ÔøΩÔøΩÔøΩ—òÔøΩEÔøΩÔøΩ!ÔøΩZÔøΩKÔøΩxLÔøΩÔøΩeÔøΩÔøΩf(ÔøΩÔøΩD ÔøΩÔøΩÔøΩÔøΩÔøΩcÔøΩÔøΩ'ÔøΩsÔøΩ	ÔøΩXÔøΩÔøΩ-ÔøΩÔøΩ|#ÔøΩeÔøΩf%-4273fkÔøΩaÔøΩ>i|ŒöÔøΩÔøΩÔøΩÔøΩÔøΩ{¬º%kÔøΩ(JÔøΩ8Z[ÔøΩÔøΩÔøΩ#$:ÔøΩgÔøΩÔøΩÔøΩ}ÔøΩAÔøΩÔøΩÔøΩKÔøΩ}ÔøΩÔøΩÔøΩUÔøΩKNÔøΩÔøΩÔøΩÔøΩSKÔøΩS^ÔøΩÔøΩUTÔøΩUcÔøΩÔøΩ'ÔøΩqÔøΩ.fÔøΩH~ÔøΩÔøΩ≈òcÿö-ÔøΩrÔøΩÔøΩÔøΩS^RÔøΩmÔøΩIÔøΩÔøΩ5ÔøΩÔøΩÔøΩﬁ≠ ÔøΩÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩÔøΩF)~mÔøΩÔøΩLÔøΩW!=8UÔøΩÔøΩomÔøΩÔøΩ>ÔøΩr+ÔøΩÔøΩÔøΩZÔøΩÔøΩÔøΩI2'i<ÔøΩÔøΩÃÖ‹ôf&iVZHÔøΩdÔøΩ^ÔøΩÔøΩ.l‚îº~ÔøΩ6VÔøΩk})ÔøΩs.ÔøΩ$ÔøΩpÔøΩzÔøΩÔøΩÔøΩ/ÔøΩÔøΩ%yÔøΩ[ÔøΩÔøΩ#ÔøΩKIÔøΩQ6JÔøΩÔøΩÔøΩTÔøΩoÔøΩÔøΩ ÔøΩbbÔøΩÔøΩ|ÔøΩ endstream endobj 28 0 obj << /Filter /FlateDecode /Length1 1511 /Length2 7479 /Length3 0 /Length 8495 >> stream xÔøΩÔøΩÔøΩTÔøΩ6LÔøΩÔøΩH(0ÔøΩHÔøΩÔøΩ ÔøΩÔøΩ%%0ÔøΩ30ÔøΩ)-]ÔøΩ4HÔøΩÔøΩÔøΩHÔøΩtÔøΩ""ÔøΩ4ﬂ®ÔøΩsÔøΩÔøΩÔøΩÔøΩÔøΩoÔøΩZ3ÔøΩ~vÔøΩ;ÔøΩÔøΩÔøΩ5@z-]NikÔøΩ%DCrÔøΩpÔøΩDÔøΩÔøΩ:ÔøΩ ÔøΩÔøΩÔøΩ% ÔøΩÔøΩHGÔøΩÔøΩ h AÔøΩBÔøΩ0ÔøΩÔøΩÔøΩÔøΩ"" `$ ÔøΩ#QfÔøΩp@ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩ ÔøΩÔøΩÔøΩQÔøΩÔøΩj PÔøΩÔøΩÔøΩaWÔøΩ,ÔøΩÔøΩÔøΩÔøΩCÔøΩnÔøΩÔøΩÔøΩbÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩvÔøΩ ÔøΩV`@ÔøΩÔøΩÔøΩ8ÔøΩnÔøΩ;tÔøΩVPÔøΩÔøΩ_!XÔøΩÔøΩHgQnn.ÔøΩÔøΩ+a+ÔøΩÔøΩÔøΩÔøΩ""ÔøΩ :WÔøΩb ÔøΩU.@ÔøΩÔøΩ]ÔøΩguÔøΩÔøΩÔøΩmÔøΩ`ÔøΩÔøΩVÔøΩ+ÔøΩÔøΩ f A PwtÔøΩÔøΩ ÔøΩÔøΩÔøΩcÔøΩ?ÔøΩÔøΩZÔøΩÔøΩÔøΩÔøΩ;ÔøΩ_ﬁøAaÔøΩÔøΩÔøΩVVp'g0ÔøΩ ÔøΩÔøΩ@! M5.ÔøΩ'ÔøΩ ÔøΩYÔøΩ2;ÔøΩÔøΩQÔøΩ`w0ÔøΩlÔøΩ2ÔøΩÔøΩ8ÔøΩ ÔøΩ  ÔøΩÔøΩÔøΩÔøΩ:W+ÔøΩÔøΩÔøΩÔøΩ uÔøΩU!ÔøΩÔøΩ0ÔøΩ&ÔøΩ√¨eÔøΩNN“ïÔøΩW~rPÔøΩ ÔøΩu/ÔøΩÔøΩcuÔøΩÔøΩ=`>ÔøΩ6PÔøΩÔøΩÕØÔøΩ›úÔøΩÔøΩaP7ÔøΩÔøΩÔøΩ_(ÔøΩÔøΩÔøΩÔøΩÔøΩ@ !a ÔøΩ ÔøΩÔøΩÔøΩ\ÔøΩÔøΩÔøΩ[ÔøΩÔøΩFÔøΩÔøΩÔøΩÔøΩwÿ†JÔøΩÔøΩAm ÔøΩWÔøΩ;ÔøΩDÔøΩAÔøΩ|ÔøΩ[ÔøΩoÔøΩÔøΩÔøΩ` ÔøΩB,!ÔøΩPÔøΩ?ÔøΩQ0ÔøΩÊèåÔøΩ<ÔøΩ	0ÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩ}2CqÔøΩsÔøΩÔøΩÔøΩÔøΩÔøΩpÔøΩTÔøΩuÔøΩÔøΩÔøΩÔøΩJFÔøΩ	ÔøΩÔøΩÔøΩ8y@ >ÔøΩÔøΩÔøΩÔøΩÔøΩ(Z`ÔøΩ_YÔøΩÔøΩÔøΩUÔøΩÔøΩÔøΩ""ÔøΩEuÔøΩ?	ÔøΩÔøΩ5}ÔøΩÔøΩÔøΩÔøΩÔøΩXpc! ÔøΩn  YÔøΩÔøΩxÔøΩÔøΩiÔøΩÔøΩÔøΩÔøΩÔøΩ›øÔøΩÔøΩ_ÔøΩÔøΩÔøΩ(ÔøΩ9:ÔøΩ÷≤ÔøΩRÔøΩÔøΩ`'ÔøΩÔøΩÔøΩ_z_›ê(ÔøΩÔøΩQ ÔøΩ_SC»üuUÔøΩXC›úÔøΩWÔøΩÔøΩÔøΩv@fÔøΩÔøΩwÔøΩÔøΩ POÔøΩÔøΩieÔøΩÔøΩ*pÔøΩ_ÔøΩÔøΩAÔøΩÔøΩÔøΩ_ ÔøΩÔøΩÔøΩjÔøΩÔøΩPÔøΩÔøΩ+ÔøΩÔøΩÔøΩUÔøΩÔøΩÔøΩÔøΩJyÔøΩÔøΩÔøΩÔøΩvÔøΩ ÔøΩÿã 5bÔøΩ$ ÔøΩÔøΩAÔøΩÔøΩ5ÔøΩÔøΩ7ÔøΩÔøΩ\08ÔøΩ@ÔøΩÔøΩÔøΩÔøΩ#~ÔøΩÔøΩÔøΩÔøΩÔøΩ$ÔøΩÔøΩpÔøΩ@Q$ÔøΩÔøΩEp7ÔøΩ?ÔøΩÔøΩÔøΩÔøΩÔøΩoÔøΩ_ÔøΩ ÔøΩ/u7ÔøΩ+ÔøΩÔøΩfÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩy ÔøΩH;ÔøΩ|@(ÔøΩÔøΩOLa ÔøΩ7ÔøΩÔøΩWÔøΩVnjÔøΩS’èÔøΩ»ø_ÔøΩbE0?ÔøΩÔøΩÔøΩm;ÔøΩÔøΩ~ÔøΩÔøΩÔøΩÔøΩQbÔøΩnÔøΩÔøΩÔøΩÔøΩ3ÔøΩhwÔøΩ$ÔøΩMaÔøΩÔøΩ ^EÔøΩJÔøΩÔøΩÔøΩ[ÔøΩ""ÔøΩrÔøΩdÔøΩÔøΩÔøΩgÔøΩÔøΩÔøΩykÔøΩÔøΩ€üÔøΩWÔøΩ	:ÔøΩÔøΩo	ÔøΩÔøΩ(ÔøΩFÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ?ÔøΩÔøΩ{ÔøΩÔøΩ{ÔøΩÔøΩkÔøΩŸÇﬁ©ÔøΩuq&ÔøΩÔøΩ'=ÔøΩÔøΩUÔøΩÔøΩ_ÔøΩÔøΩ!|f]{ÔøΩZPÔøΩÔøΩlÔøΩ3V?ÔøΩ4ÔøΩd ÔøΩgÔøΩ=M…ÄÔøΩÔøΩÔøΩcÔøΩÔøΩI<ur:y?gÔøΩÔøΩN%ÔøΩÔøΩÔøΩo'ÔøΩÔøΩÔøΩÔøΩxÔøΩ7ÔøΩbÔøΩ{ÔøΩBÔøΩ◊µÔøΩÔøΩÔøΩ òÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ>2ÔøΩÔøΩ*f}^ÔøΩ"">ÔøΩMSÔøΩÔøΩ|rJÔøΩqÔøΩdÔøΩ^ÔøΩÔøΩ9G|ÔøΩÔøΩÔøΩ1pTÔøΩÔøΩÔøΩÔøΩÔøΩL9:fÔøΩU)—©ÔøΩ>ÔøΩ?ÔøΩ`IeÔøΩSÔøΩÔøΩPÔøΩÔøΩ+ÔøΩf""ÔøΩVÔøΩQÔøΩÔøΩbÔøΩÔøΩ~√íÔøΩÔøΩ≈≥ÔøΩ’çÒÜèú[ÔøΩD|%H1EÔøΩÔøΩu1ÔøΩCÔøΩwÔøΩÔøΩEÔøΩÔøΩ)ÔøΩÔøΩ?ÔøΩiJÔøΩiÔøΩ]ÔøΩÔøΩÔøΩÔøΩv\s?ÔøΩ<ÔøΩnÔøΩÔøΩÔøΩsÏü•8ÔøΩ /[Ja45W#ÔøΩLÔøΩ|2ÔøΩÔøΩRÔøΩ3ÔøΩPrÔøΩ9QÔøΩ:ÔøΩ&ÔøΩÔøΩÔøΩÔøΩbTK2ÔøΩK|M8~ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩPkÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩgÔøΩaÔøΩ/≈¨ÔøΩWÔøΩÔøΩ…ôÔøΩÔøΩÔøΩ¬óÔøΩ/wxÔøΩqÔøΩDÔøΩÔøΩ+ÔøΩÔøΩÔøΩ{)ÔøΩ}ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ`ÔøΩÔøΩÔøΩÔøΩXŸÉe^ÔøΩÔøΩÔøΩ857ÔøΩÔøΩe‚µ∑rÔøΩÔøΩÿàÔøΩeÔøΩKhÔøΩÔøΩ3ÔøΩ]ÔøΩÔøΩÔøΩBÔøΩÔøΩ(ÔøΩÔøΩÔøΩÔøΩ(ÔøΩ,ÔøΩÔøΩ3mTNÔøΩf,m4ÔøΩ~ÔøΩt\ÔøΩÔøΩ|ÔøΩ6ÔøΩŸëhÔøΩÔøΩÔøΩÌãé#ÔøΩÔøΩXpÔøΩÔøΩ2(ÔøΩÔøΩÔøΩÔøΩuÔøΩm%ÔøΩÔøΩÔøΩhJÔøΩÔøΩŸãÔøΩ+-_z»≠=tÔøΩkÔøΩjÔøΩÔøΩÔøΩÔøΩ)÷∞ÔøΩ‘óÔøΩ#ÔøΩ BÔøΩÔøΩlK1ÔøΩ2a-#ÔøΩY29]`ÔøΩÔøΩÔøΩMÔøΩ-ÔøΩ^;ÔøΩ8ÔøΩÔøΩXÔøΩÔøΩÔøΩ2MÔøΩÔøΩÔøΩ”çÔøΩÔøΩÔøΩJÔøΩÔøΩÔøΩB'ÔøΩÔøΩÔøΩÔøΩ‚á§ÔøΩŸá∆ùÔøΩÔøΩ##ÔøΩÔøΩÔøΩ!8ÔøΩ99ÔøΩ9ÔøΩ.)ÔøΩÔøΩ8ÔøΩÔøΩ&ÔøΩ<ÔøΩÔøΩ=l9T+ÔøΩÔøΩÔøΩÔøΩN3ÔøΩÔøΩÔøΩ b5ÔøΩR@ÔøΩÔøΩS2LÔøΩFÔøΩÔøΩÔøΩ$ÔøΩdÔøΩsÔøΩ‹°ÔøΩ[:O&ÔøΩÔøΩ}-ÔøΩdÔøΩÔøΩÔøΩFÔøΩÔøΩkTÔøΩhÕ± ™0ÔøΩÔøΩ3<ÔøΩ⁄áBœíÔøΩZÔøΩ[ÔøΩ'ÔøΩÔøΩwÔøΩiDÔøΩ0ÔøΩÔøΩÔøΩN[{ÔøΩ9""iÔøΩÔøΩrI$r(33ÔøΩ$cHÔøΩTÔøΩ&ÔøΩÔøΩxÔøΩMÔøΩXÔøΩÔøΩ_(ÔøΩÔøΩiÔøΩ_ÔøΩD0ÔøΩk|Hh\ÔøΩgÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ Ø?ÔøΩ9ÔøΩ(YÔøΩdÔøΩkÔøΩ!ÔøΩu%ÔøΩÔøΩÔøΩ%4Z#PÔøΩe%QdÔøΩÔøΩÔøΩÔøΩ9ÔøΩ`:_ÔøΩ>ÔøΩÔøΩ4ÔøΩÔøΩÔøΩÔøΩ<ÔøΩa8ÔøΩ-tQHÔøΩÔøΩÔøΩÔøΩvÔøΩZÔøΩÔøΩÔøΩpÔøΩÔøΩÔøΩwÔøΩxÔøΩÔøΩÔøΩÔøΩÔøΩpÔøΩ !ÔøΩMÔøΩWƒπx/bÔøΩ6ÔøΩÔøΩ<h@ÔøΩy%QÔøΩÔøΩ>FÔøΩ0ÔøΩ!sOÔøΩNÔøΩÔøΩÔøΩÔøΩbm3jÔøΩ7	ÔøΩX}ÔøΩÔøΩc8I'›üÔøΩz|=ÿ®ÔøΩGVfÔøΩQf%ÔøΩÔøΩÔøΩ&ÔøΩlÔøΩOÔøΩ ÔøΩÔøΩ‹ΩÔøΩÔøΩzÔøΩ%mjÔøΩÔøΩf5	GW ÔøΩÔøΩ>K?ÔøΩÔøΩKzÔøΩÔøΩÔøΩ+ÔøΩÔøΩ√ÜÔøΩÔøΩ—Ç2ÔøΩÔøΩÔøΩÔøΩÔøΩnÔøΩÔøΩuÔøΩÔøΩCÔøΩÔøΩQBw&TÔøΩ(ÔøΩ""x;lÔøΩ+e_ÔøΩAAÔøΩÔøΩN<nRÔøΩ!ÔøΩÔøΩ#ÔøΩÔøΩm[HÔøΩÔøΩÔøΩU\rvÔøΩ""ÔøΩm÷ø_Ml◊ú;YÔøΩÔøΩMÔøΩÔøΩQdZÔøΩbÔøΩ+ÔøΩﬁ•ÔøΩ+/QÔøΩÔøΩ4ÔøΩÔøΩ4lÔøΩ ÔøΩ\ÔøΩÔøΩÔøΩÔøΩÔøΩQ2ÔøΩÔøΩy'7 ∫ÔøΩ;ÔøΩ'ÔøΩo+D<ÔøΩ ÔøΩÔøΩÔøΩ6^ÔøΩpÔøΩÔøΩ}ÔøΩÔøΩ'ÔøΩÔøΩÔøΩÔøΩ +ÔøΩ<^ÔøΩÔøΩTÔøΩfÔøΩÔøΩÔøΩ2fa^ÔøΩÔøΩlÔøΩ7ÔøΩKNÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ%Ôè∏oÔøΩÔøΩÔøΩÔøΩhÔøΩ YÔøΩ;Wv_b\ÔøΩÔøΩÿíÔøΩÔøΩ9ÔøΩÔøΩÔøΩVÔøΩM{ÔøΩYuK»ôXÔøΩ>ÔøΩZb!ORY_ÔøΩ'FÔøΩœßIK\h0ÔøΩÔøΩÔøΩÔøΩNsÔøΩ$ÔøΩ+ÔøΩÔøΩÔøΩÔøΩÔøΩ:ÔøΩÔøΩÔøΩxÔøΩjÔøΩ|ÔøΩ-ZÔøΩ/>eTÔøΩÔøΩÔøΩÔøΩBfÔøΩ€î ÔøΩRÔøΩ]gzOÔøΩÔøΩ.\WÔøΩÔøΩÔøΩÔøΩÔøΩsuÔøΩhxi^ÔøΩ)ÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩ(ÔøΩÔøΩwÔøΩÔøΩÔøΩÔøΩÔøΩ#ÔøΩkÔøΩÔøΩÔøΩ=ÔøΩÃªÔøΩLÔøΩÔøΩP4&J4ÔøΩÔøΩÔøΩ=2*oÔøΩÔøΩTÔøΩÔøΩÔøΩbÔøΩÔøΩVÔøΩIn	ÔøΩÔøΩHÔøΩ-ÔøΩ`ÔøΩaÔøΩEZÔøΩÔøΩÔøΩÔøΩ6ÔøΩt7CÔøΩRZÔøΩÔøΩÔøΩxÔøΩ:ÔøΩ=7$SÔøΩLÔøΩ7hf_ÔøΩÔøΩÔøΩtÔøΩ>ÔøΩ7ÔøΩ<?ÔøΩÔøΩgq1ÔøΩeÔøΩÔøΩÔøΩÔøΩÔøΩe<>?C4ÔøΩ?+	ÔøΩÔøΩÔøΩÔøΩÔøΩUy&ÔøΩÔøΩÔøΩÔøΩ7ÔøΩbÔøΩ1ÔøΩÔøΩ'TAÔøΩwÔøΩ2ÔøΩÔøΩlDÔøΩWj9HÔøΩÔøΩzÔøΩuÔøΩÔøΩJ*ÔøΩ}ÔøΩÔøΩr0ÔøΩÔøΩ""!ÔøΩÔøΩ8xÔøΩÔøΩÔøΩÔøΩzÔøΩÔøΩÔøΩÔøΩÔøΩhPÔøΩG[8XÔøΩÔøΩw5“íÔøΩ¬ªÔøΩÔøΩ ÔøΩÔøΩÔøΩX|elz/ÔøΩÔøΩÔøΩ_z'ÔøΩÔøΩkÔøΩkgÔøΩÀ≠f:^ÔøΩrÔøΩ{vjÔøΩÔøΩ”¨[ﬁÇÔøΩÔøΩÔøΩHoÔøΩ[457SoÔøΩPÔøΩÔøΩÔøΩÔøΩeOaÔøΩ7yÔøΩW#>ÔøΩÔøΩ6ÔøΩ«êÔøΩÔøΩiÔøΩÔøΩÔøΩ;ÔøΩAÔøΩ:	ÔøΩÔøΩ,ÔøΩÔøΩeÔøΩÔøΩw?BÔøΩ^ÔøΩoÔøΩÔøΩÔøΩg	\*ÔøΩEÔøΩE{ÔøΩÔøΩÔøΩ|}ÔøΩÔøΩ{ÔøΩÔøΩ3ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ[ÔøΩVMÔøΩÔøΩÔøΩÔøΩ[ÔøΩÔøΩÔøΩÔøΩÔøΩ-ÔøΩ@ÔøΩOg""9ÔøΩÔøΩ$ÔøΩÔøΩxÔøΩ;ÔøΩÔøΩjÔøΩÔøΩKXÔøΩ»î8bÔøΩ$'ÔøΩ¬écq6$c0ÔøΩÔøΩÔøΩ5!ÔøΩÔøΩÔøΩÔøΩpÔøΩÔøΩ7TzTﬁà|[_ÔøΩÔøΩ#ÔøΩ=ÔøΩÔøΩÔøΩvÔøΩ-/HÔøΩÔøΩÔøΩÔøΩ)@›óRÔøΩe{kÔøΩÔøΩÿèÔøΩ`ÔøΩ ÔøΩl%KXÔøΩÔøΩÍ®ïÔøΩq÷é&ÔøΩUvIÔøΩdÔøΩÔøΩÔøΩ^ÔøΩÔøΩÔøΩÔøΩORÔøΩÔøΩGr,ﬂáÔøΩ0&EÔøΩÔøΩÔøΩ]!ÔøΩTaÔøΩÔøΩ:œÖÔøΩÔøΩÔøΩÔøΩ>ÔøΩÔøΩ\[(-ÔøΩÔøΩwÔøΩeÔøΩ5 ÔøΩÔøΩŒªÔøΩÔøΩÔøΩÔøΩÔøΩ2ÔøΩÔøΩ?ÔøΩÔøΩ&_ÔøΩÔøΩ@?ÔøΩ$ÔøΩ$ÔøΩ_ÔøΩ-ÔøΩULNNLÔøΩÔøΩ«ì&ÔøΩÔøΩ0ÔøΩlÔøΩÔøΩÔøΩÔøΩ“ÉÔøΩ6ÔøΩoHÔøΩÔøΩÔøΩqÔøΩJiÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩ ÔøΩÔøΩ-ÔøΩkÔøΩÔøΩ2	%hÔøΩ+nÔøΩÔøΩÔøΩÔøΩ.eÔøΩvÔøΩÔøΩkÔøΩÔøΩHjÔøΩÔøΩZÔøΩ)ÔøΩ`mÔøΩÔøΩz1;ÔøΩ>ÔøΩmGcÔøΩo`ÔøΩÔøΩÔøΩKÔøΩ-@ÔøΩ[ÔøΩ+KLÔøΩÔøΩÔøΩuO6ÔøΩÔøΩ3ÔøΩ]4ÔøΩ.=ÔøΩYk=ÔøΩ5'mh,y3ÔøΩ8\}ÔøΩCÔøΩÔøΩ)ÔøΩÔøΩÔøΩsÔøΩÔøΩÔøΩj+ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩif ØWÔøΩÔøΩMuÔøΩÔøΩÔøΩÔøΩp6‹âr\ÔøΩq]ÔøΩÔøΩÔøΩpFÔøΩÔøΩn|o1}ÔøΩÔøΩÔøΩÔøΩVVÔøΩe@ÔøΩGÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩg+ YÔøΩÔøΩÔøΩÔøΩÔøΩmÔøΩAaÔøΩÕ∑ÔøΩiﬂàÔøΩÔøΩlÔøΩÔøΩÔøΩ3ÔøΩÔøΩÔøΩ‹ôÔøΩVkXÔøΩvÔøΩ~ÔøΩÔøΩÔøΩ JÔøΩÔøΩÔøΩÔøΩ`PÔøΩÔøΩÔøΩÔøΩ|(ÔøΩm~ÔøΩ2ÔøΩÔøΩbLMÔøΩÔøΩÔøΩAÔøΩjgÔøΩÔøΩÔøΩ ÔøΩÔøΩo@ÔøΩÔøΩJAPÔøΩjÔøΩ:qtÔøΩÔøΩZ⁄ùTÔøΩÔøΩ~ÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩ’ÆÔøΩ*1ÔøΩÔøΩÔøΩÔøΩV≈çS^ÔøΩZÔøΩÔøΩ!ÔøΩ$ÔøΩ$ÔøΩÔøΩ‹Ω|_RÔøΩÔøΩhGÔøΩcÔøΩcÔøΩSÔøΩpÔøΩwÔøΩl""ÔøΩÔøΩaÔøΩ3UÔøΩÔøΩÔøΩPÔøΩ ÔøΩl√∂ÔøΩpÔøΩPg)ÔøΩÔøΩ$OÔøΩÔøΩÔøΩXÔøΩ]riSÔøΩÔøΩÔøΩ8ÔøΩÔøΩÔøΩkÔøΩ~ÔøΩÔøΩÔøΩÓõíÊ¨µ }8ÔøΩÔøΩÔøΩ.- ÖÔøΩ?={gmÔøΩpH=@ÔøΩÔøΩpÔøΩgŒë!3ÔøΩ⁄ÅÔøΩ4zÔøΩÔøΩ{ÔøΩÔøΩÔøΩ4IÔøΩÔøΩI9!@ÀãÔøΩ‹£dÔøΩ{IGÔøΩOTEÔøΩsÔøΩ`ÔøΩÔøΩÔøΩÔøΩ ÔøΩFÔøΩzÔøΩSÔøΩ:ÔøΩ5ÔøΩAÔøΩwÔøΩÔøΩ mYÔøΩÔøΩLcÔøΩ;ÔøΩÔøΩÔøΩÔøΩÔøΩXÔøΩ|ÔøΩ[2|ÔøΩÔøΩ3ÔøΩ^(ÔøΩ SNkÔøΩÔøΩqpyÔøΩ{ÔøΩlÔøΩ6~ÔøΩÕúÔøΩ#ÔøΩÔøΩÔøΩ(tÔøΩKÔøΩÔøΩÔøΩÔøΩÔøΩ+ÔøΩH`ÔøΩ@ÔøΩuÔøΩt{5ÔøΩÔøΩ\ÔøΩÔøΩW%?XÔøΩQÔøΩBÔøΩÔøΩÔøΩÔøΩÔøΩE;ÔøΩWOÔøΩWÔøΩÔøΩÔøΩÔøΩf>ÔøΩÔøΩ4ÔøΩÔøΩÔøΩ6ÔøΩÔøΩz7uxZÔøΩAoÔøΩ}WÔøΩÔøΩ~ÔøΩÔøΩoÔøΩZ–£HÔøΩ*ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ>ÔøΩÔøΩPwÔøΩÔøΩÔøΩÔøΩÔøΩHÔøΩ8ÔøΩv|#c–úÔøΩÔøΩÔøΩÔøΩ-ÔøΩÔøΩ&ÔøΩÔøΩ3ÔøΩÔøΩ%_ÔøΩ:2ÔøΩÔøΩŒè,ÔøΩEÔøΩdÔøΩ^sP*ÔøΩ	ÔøΩÔøΩtÔøΩÔøΩ,%ÔøΩÔøΩF>ÔøΩ€ÉqÔøΩÔøΩn%ÔøΩKaÔøΩÔøΩÔøΩÔøΩÔøΩmÔøΩÔøΩT	∆øÔøΩÔøΩLÔøΩÔøΩÔøΩrÔøΩ«•ÔøΩVÔøΩkÔøΩQÔøΩ\ÔøΩÔøΩvÔøΩÔøΩ~ÔøΩ:ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩIÔøΩI-ÔøΩ1ÔøΩÔøΩIl$2ebÔøΩ\b3V_ÔøΩf""cN>ÔøΩÔøΩjÔøΩKÔøΩÔøΩ.ÔøΩ6ÔøΩA.gÔøΩOÔøΩÔøΩ&f ≥ÔøΩJÔøΩÔøΩ/ÔøΩ—©1EÔøΩfÔøΩSÔøΩ.ÔøΩÔøΩ3lmÔøΩÔøΩ@2ÔøΩ€ël>FÔøΩÔøΩÔøΩ %|6#ÔøΩÔøΩVÔøΩ:ÔøΩÔøΩÔøΩƒæ~ÔøΩ%T:ÔøΩ5ÔøΩÔøΩÔøΩNÔøΩPÔøΩÔøΩÔøΩaVOÔøΩÔøΩ^mÔøΩ ÔøΩÔøΩnÔøΩ>ÔøΩvÔøΩÔøΩÔøΩAÔøΩ`ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ+ÔøΩ$ÔøΩmÔøΩÔøΩ|ÔøΩÔøΩNÔøΩÔøΩÔøΩxÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ2RQÔøΩWÔøΩÔøΩ-L4ÔøΩK*ÔøΩ~+ÔøΩÔøΩIÔøΩÔøΩÔøΩÔøΩ6AÔøΩ<ÔøΩ!jÔøΩÔøΩKnhÔøΩÔøΩLÔøΩÔøΩÔøΩ]oÔøΩÔøΩÔøΩUÔøΩÔøΩ5{ÔøΩBÔøΩ.tÔøΩÔøΩÔôòÔøΩ+ÔøΩÔøΩÔøΩ76=.ÔøΩdh|lÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩhÔøΩu#ÔøΩÔøΩ&]ÔøΩJDOÔøΩ}*gÔøΩÔøΩfAÔøΩ@ÔøΩÔøΩÔøΩÔøΩOÔøΩ÷•duÔøΩ ÔøΩÔøΩÔøΩÔøΩcÔøΩÔøΩ2ÔøΩÔøΩIÔøΩRÔøΩ{6IÔøΩanÔøΩÿÅÔøΩwÔøΩkO,ÔøΩÔøΩÔøΩ@ÔøΩ,ÔøΩÔøΩaÔøΩIY>/DÔøΩsG=XÔøΩÔøΩÔøΩÔøΩ!|'cÔøΩÔøΩÔøΩ€ÆÔøΩMÔøΩY~x8ÔøΩ0CÔøΩÔøΩ\ÔøΩ*ÔøΩÔøΩ1Yb3ÔøΩ:ÔøΩ0ÔøΩÔøΩÔøΩÔøΩ_$FM'‹ä[eRpÔøΩÔøΩÔøΩ»∫ÔøΩazH)ÔøΩÔøΩÔøΩ#oÔøΩÔøΩÔøΩr )=ÔøΩÔøΩÔøΩÔøΩ!ÔøΩÔøΩQÔøΩZÔøΩ&ÔøΩÔøΩhÔøΩ‹±uÔøΩyÔøΩMÔøΩÔøΩUÔøΩÔøΩk MÔøΩ9DÔøΩCÔøΩÔøΩÔøΩaÔøΩÔøΩÔøΩJÔøΩÔøΩÔøΩÔøΩlkÔøΩÔøΩ3ÔøΩÔøΩÔøΩÔøΩ`uÔøΩ{M+?ÔøΩ%ÔøΩYal_YrÔøΩÔøΩÔøΩ9ldﬁ¨ÔøΩÔøΩÔøΩ	2ÔøΩ/~ÔøΩÔøΩÔøΩbWÔøΩÔøΩÔøΩ@ÔøΩ)ÔøΩÔøΩz	8ÔøΩF>oÔøΩÔøΩÔøΩ—èKhÔøΩÔøΩÔøΩN;ÔøΩnL(ÔøΩÔøΩÔøΩÔøΩsÔøΩÔøΩ-ÔøΩZÔøΩeQÔøΩÔøΩÔøΩO*/ÔøΩEo[ÔøΩAÔøΩ5ÔøΩ~ÔøΩ«Æ ÔøΩÔøΩ77ÔøΩÔøΩ%DÔøΩyÔøΩK6>ÔøΩP‘∑ÔøΩÔøΩ\ÔøΩÔøΩO+~ÔøΩ;ÔøΩ!ÔøΩ/ÔøΩtÔøΩÔøΩÔøΩÔøΩ/1ÔøΩ7ÔøΩl%ÔøΩ""lÔøΩÔøΩÔøΩSFÔøΩÔøΩÔøΩ ÔøΩÔøΩZ,JÔøΩ;ÔøΩoÔøΩÔøΩÔøΩ/ÔøΩPhÔøΩÔøΩÔøΩÔøΩniÔøΩV'ÔøΩÔøΩÔøΩ$ÔøΩÔøΩÔøΩSÔøΩ.kÔøΩÔøΩÔøΩ	ÔøΩ–≥QÔøΩÔøΩ?ÔøΩÔøΩ}ÔøΩD}CÔøΩQÔøΩÔøΩÔøΩgqÔøΩEÔøΩWÔøΩWÔøΩÔøΩÔøΩÔøΩE“Ñ@SÔøΩbhÔøΩÔøΩÔøΩÔøΩÔøΩ`ÔøΩA ÔøΩÔøΩ}ÔøΩÔøΩÔøΩ]vCÔøΩZ]jÔøΩ-'>ÔøΩ-'ÔøΩÔøΩÔøΩ$ÔøΩÔøΩ…∫ÔøΩcÔøΩÔøΩÔøΩ%ÔøΩz;yÔøΩÔøΩ^'ÔøΩtƒôÔøΩGÔøΩ.ÔøΩÔøΩÔøΩ=ÔøΩ8mÔøΩÔøΩ	ÔøΩÔøΩ(ÔøΩÔøΩÔøΩ=›ØÔøΩÔøΩÔøΩÔøΩÔøΩP#cYÔøΩgÔøΩÔøΩ>ÔøΩËììÔøΩ%ÔøΩÔøΩ.ÔøΩoÔøΩÔøΩ:ÔøΩ#-ÔøΩÔøΩÔøΩduÔøΩÂ•≥fÔøΩI]ÔøΩÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩhÔøΩfÔøΩ)rÔøΩÔøΩ tDÔøΩ;◊Ω+◊èÔøΩYÔøΩÔøΩÔøΩ3ÔøΩÔøΩÔøΩNqÔøΩÔøΩ*_ÔøΩz>ÔøΩ5`ÔøΩM,ÔøΩbÔøΩtÔøΩÔøΩ[ÔøΩ]5ÔøΩÔøΩÔøΩÀô~ÔøΩÔøΩt{BƒÇV;ÔøΩÔøΩÔøΩÔøΩÔøΩ|!ÔøΩh?ÔøΩpq\ÔøΩF8UÔøΩIMÔøΩl-WÔøΩÔøΩtÔøΩ=ÔøΩ]:ÔøΩkÔøΩÔøΩÔøΩ<ÔøΩÔøΩÔøΩLÔøΩwÔøΩsÔøΩdv,OerÔøΩZÔøΩÔøΩcÔøΩVÔøΩ\ÔøΩÔøΩYÔøΩÔøΩ2#ÔøΩ∆ºÔøΩœ≠Õô-ÔøΩWÔøΩfÔøΩÔøΩlÔøΩÔøΩÔøΩ""_H""ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ""8ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ	voaÔøΩÔøΩÔøΩ~ÔøΩÔøΩÔøΩÔøΩ8K%ÔøΩlÔøΩ0EfÔøΩfÔøΩÔøΩwqÔøΩ<ÔøΩU.ÔøΩÔøΩtÔøΩÔøΩCÔøΩ1ÔøΩÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩDÔøΩÔøΩEÔøΩW M/""ÔøΩÔøΩÔøΩaxJÔøΩ'oÔøΩÔøΩÔøΩÔøΩ@ÔøΩ1ÔøΩÔøΩdÔøΩÔøΩÔøΩ|YÔøΩHÔøΩÔøΩB ?⁄ñcRÔøΩ7;:3bO!ÔøΩÔøΩÔøΩÔøΩmZÔøΩbÔøΩjmRfÔøΩ3ÔøΩÔøΩÔøΩeÔøΩz0<ÔøΩq—≥Ã£ÔøΩÔøΩÔøΩ`ÔøΩhÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩ2wÔøΩcÔøΩ<dOwÔøΩ		o 7kÔøΩÕ®h""ÔøΩr9a1/ÔøΩnÔøΩÔøΩmÔøΩeÔøΩÔøΩÔøΩ5«ßÔøΩ¬≤ÔøΩAÔøΩÔøΩÔøΩ8(ÔøΩÔøΩÔøΩ“öwÔøΩÔøΩÔøΩÔøΩÔøΩpÔøΩ^cÔøΩfÔøΩ/ÔøΩÔøΩÔøΩg:kÏπ≠tÔøΩÔøΩÔøΩ.>ÔøΩÔøΩs_ÔøΩÔøΩÔøΩÔøΩ9ÔøΩÔøΩtMÃ≤SslÔøΩÔøΩÕºÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ$ÔøΩÔøΩÔøΩ>gÔøΩ&UbÔøΩz_+ÔøΩCÔøΩ}ÔøΩÔøΩ1:ÔøΩNÔøΩU~ÔøΩÔøΩ/GÔøΩÔøΩDÀæÔøΩÔøΩÔøΩ,:ŸàÔøΩÔøΩ,/A#""-ÔøΩÔøΩÔøΩÔøΩIÔøΩÔøΩ.a\ ÔøΩÔøΩÔøΩ*ÔøΩgÔøΩUSÔøΩPÔøΩÔøΩÔøΩZOpÔøΩÔøΩÔøΩhÔøΩeÔøΩÔøΩÔøΩÔøΩ#k%ÔøΩÔøΩÔøΩÔøΩVR=ÔøΩÔøΩÔøΩÂôÜ}ÔøΩQÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ\6ÔøΩ7ÔøΩ4bÔøΩvvKÔøΩBÔøΩy≈™eÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ:.ÔøΩaÔøΩÔøΩœ§ÔøΩKÔøΩ\eÔøΩÔøΩqÔøΩ2ÔøΩ'ÔøΩ84¬ÄMÔøΩIÔøΩÔøΩÔøΩÔøΩUÔøΩUtÔøΩXÔøΩ◊∞{`ÔøΩÔøΩÔøΩ2ÔøΩ2>}BÔøΩ4ÔøΩÔøΩ7ÔøΩ'ÔøΩDÔøΩ|/ÔøΩÔøΩÔøΩÔøΩ}ÔøΩ""bqÔøΩ2zÔøΩÔøΩlÔøΩÔøΩnH{pÔøΩÔøΩlpÔøΩÔøΩtMÔøΩ’ò„¶ûÔøΩÔøΩI*ÔøΩyÔøΩÔøΩÔøΩÔøΩÔøΩLÔøΩÔøΩÔøΩ*ÔøΩsY~ÔøΩÔøΩQC@E 9/ÔøΩ5B{ÔøΩuÔøΩ""ÔøΩÔøΩ[ÔøΩ;!7~!ÔøΩÔøΩOÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩÔøΩBÔøΩwÔøΩÔøΩÔøΩÔøΩTÔøΩxÔøΩÔøΩ◊ä.ÔøΩiÔøΩÔøΩÔøΩ`zqÔøΩÔøΩyRÕ°ÔøΩÔøΩÔøΩÔøΩÔøΩoƒÅ‘ÉÔøΩÔøΩƒåÔøΩÔøΩÔøΩqÔøΩÔøΩD…íÔøΩÔøΩÔøΩ+ÔøΩ<[ﬂ∫ÔøΩÔøΩ#ÕøTÔøΩÔøΩTÔøΩÔøΩZÔøΩ7#))ÔøΩ1ÔøΩmÔøΩÔøΩÔøΩmÔøΩ:ÔøΩy""^ÔøΩÔøΩÔøΩo@YcÔøΩÔøΩH8ÔøΩTÔøΩÔøΩ+ÔøΩÔøΩxÔøΩÔøΩfÕ≠0ÔøΩÔøΩÔøΩŒ¨ÔøΩÔøΩÔøΩpl>pÔøΩÔøΩÔøΩ6/]ÔøΩF_zÔøΩFÔøΩVÔøΩ»êÔøΩFÔøΩÔøΩÔøΩgÔøΩÔøΩ,ÔøΩÔøΩQÔøΩ1ÔøΩPÔøΩ ÔøΩÔøΩ5ÔøΩÔøΩÔøΩÔøΩ≈•ÔøΩÔøΩÔøΩ]ÔøΩ[rÔøΩWÔøΩ^K,EÔøΩÔøΩl]?%;+ÔøΩWÔøΩÔøΩÔøΩD‹•ÔøΩÔøΩjÔøΩÔøΩlÔøΩÔøΩyÔøΩÔøΩ”£ÔøΩ”õÔøΩYÔøΩmÔøΩ#ÔøΩÔøΩXÔøΩÔøΩÔøΩ6oÔøΩÔøΩÔøΩÔøΩ:)ÔøΩ√é_rÔøΩÔøΩbGÔøΩBYÔøΩGK:L*ÔøΩi µuÔøΩD-Z3ÔøΩÔøΩÔøΩ ÔøΩWÔøΩ%ÔøΩÔøΩXÔøΩÔøΩrÔøΩ|ÔøΩV^ÔøΩÔøΩÔøΩÔøΩ=pÔøΩÔøΩÔøΩM,Rcl$	ÔøΩhÔøΩ@ÔøΩÔøΩÔøΩÔøΩÔøΩqÔøΩgÔøΩ&	%&,ÔøΩ_ÔøΩ7ÔøΩXjÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩIÔøΩÔøΩÔøΩ—ótÔøΩulÔøΩÔøΩFbÔøΩÔøΩÔøΩSÔøΩw¬õUÔøΩ:JyÔøΩ10ÔøΩf^wÔøΩÔøΩÔøΩÔøΩÔøΩ7MÔøΩ#;ÔøΩN)ÔøΩyÔøΩ&\ÔøΩ'pÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ1ÔøΩÔøΩÔøΩ3ÔøΩ2ÔøΩÔøΩjÔøΩTÔøΩ""ÔøΩ}.ÔøΩQ'ÔøΩUÔøΩF7ÔøΩÔøΩxÔøΩÔøΩnÔøΩÔøΩÔøΩ)SÔøΩM%bÔøΩÔøΩ+ÔøΩt(ƒäÔøΩZÔøΩÔøΩÔøΩÔøΩ3AhÀ≠1ÔøΩÔøΩ«≠⁄≥’§ÔøΩvÔøΩ?sMÔøΩiÔøΩÔøΩ uÔøΩÔøΩ–ÖX=÷èAÔøΩÔøΩ[ÔøΩsÔøΩxÔøΩÔøΩ|ÔøΩÔøΩÔøΩÔøΩÔøΩf9)ÔøΩÔøΩERoÔøΩÔøΩÔøΩÔøΩ#ÔøΩÔøΩ–ûÔøΩÔøΩÔøΩtÔøΩÔøΩÔøΩZÔøΩÔøΩÔøΩÔøΩÔøΩUÔøΩÔøΩÔøΩMÔøΩÔøΩ-5ÔøΩXÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ>ÔøΩÔøΩÔøΩÔøΩŒ∫ÔøΩÔøΩÔøΩÔøΩÔøΩD%ÔøΩm,FÔøΩÔøΩeÔøΩÔøΩdzÔøΩÔøΩ4ÔøΩQ/nYÔøΩÔøΩQÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩHÔøΩÔøΩDO”én?ÔøΩÔøΩÔøΩÔøΩ#ÔøΩÔøΩ	l:›ÖÔøΩ;t	ÔøΩ}V)ÔøΩlÔøΩhBp,ÔøΩ$>xÔøΩYSÔøΩ YWCzÔøΩ-ÔøΩHHz4jÔøΩÔøΩ0]ÔøΩ'œü;ÔøΩ-]ÔøΩÔøΩBdÔøΩÔøΩÔøΩ+ÔøΩbFiÔøΩŸ∏ÔøΩÔøΩYbÔøΩ'ÔøΩÔøΩÔøΩÔøΩÔøΩ#sÔøΩIÔøΩÔøΩ:ÔøΩfÔøΩ^ÔøΩ⁄èw)ÔøΩLÔøΩmÔøΩÔøΩ}ÔøΩYÔøΩIk$ÔøΩÔøΩÔøΩYb>ÔøΩÔøΩs+H›ïn6ÔøΩtÀûqÔøΩ*/tYNÔøΩ7ÔøΩÔøΩWÔøΩÔøΩ+$w7ÔøΩ!4ÔøΩM*AaÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ2ÔøΩÔøΩ_2*_ÔøΩÔøΩ@Àæ^<ÔøΩLf~ÔøΩk]ÔøΩlÔøΩHÔøΩgÔøΩÔøΩÔøΩu0ÔøΩ^yÔøΩ8]RÔøΩÔøΩÔøΩ(÷∂ÔøΩ1p:ÔøΩÔøΩÔøΩÔøΩ[4y<' ÔøΩÔøΩÔøΩÔøΩ(oÔøΩ,ÔøΩ*ÔøΩSÔøΩÔøΩaÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩ/ÔøΩ*4ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ&ÔøΩ=ÔøΩÔøΩÔøΩZcÔøΩ;ÔøΩSÔøΩO.&ÔøΩ}ÔøΩÔøΩÔøΩÔøΩ5ÔøΩÔøΩÔøΩ-ÔøΩÔøΩÔøΩIÔøΩUÔøΩÔøΩlÔøΩaÔøΩ9ÔøΩÔøΩrZCÔøΩÔøΩŒÅ]FÔøΩÔøΩ.ÔøΩ}sÔøΩ 3uÔøΩHd◊∫(Y%‹ÜWÔøΩŸéÔøΩÔøΩ)x…õÔøΩ>ÔøΩÔøΩ8ÔøΩÔøΩ:ÔøΩÔøΩ5B0rƒëÔøΩv	K'ÔøΩÔøΩ~ÔøΩ)WÔøΩÔøΩÔøΩÔøΩÔøΩ*ÔøΩ,WÔøΩÔøΩÔøΩÔøΩÔøΩKÔøΩÔøΩÔøΩÔøΩ#ÔøΩ""3Ô©πÿ§ÔøΩÔøΩ%S9ÔøΩCÔøΩ/,+qÔøΩÔøΩmÔøΩÔøΩÔøΩkv,]ÔøΩdÔøΩpÔøΩÔøΩ ëÔøΩJÔøΩ;dÔøΩ:(ntV3ÔøΩÔøΩ:ÔøΩÔøΩ)+k\aSÔøΩÔøΩÔøΩÔøΩÔøΩ_ÔøΩÔøΩÔøΩsEy@ÔøΩÔøΩzwnNÔøΩÔøΩÔøΩ|ÔøΩmÔøΩÔøΩÔøΩ0ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ QÔøΩKpÔøΩÔøΩ ÔøΩÁäÇÔøΩ9ÔøΩkÔøΩa	SÔøΩ }ÔøΩÔøΩsYgÔøΩœäÔøΩÔøΩT=[ÔøΩÔøΩÔøΩÔøΩ1r—îsUÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9∆†ÔøΩÔøΩÔøΩzÔøΩÔøΩÔøΩwÔøΩ1ÔøΩÔøΩÔøΩÔøΩÔøΩ+JD¬∑ÔøΩaÔøΩu$@]^gÔøΩÔøΩ mÔøΩDÔøΩÔøΩÔøΩ8|*ÔøΩ2ÔøΩÔøΩ&ÔøΩÔøΩÔøΩÔøΩmÔøΩ3AÔøΩÔøΩÔøΩjÔøΩÔøΩ{—û\aÔøΩ÷úÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ\ÔøΩIKÔøΩÔøΩ÷≤ÔøΩÔøΩÔøΩZÔøΩ#ÔøΩmÔøΩÔøΩaÔøΩÔøΩJÔøΩkÔøΩÔøΩ;<ÔøΩAjÔøΩgÔøΩ4ÔøΩÔøΩÔøΩÔøΩ#hi""ÔøΩÔøΩÔøΩÔøΩyÔøΩF/x	ÔøΩÔøΩnloÔøΩÔøΩ7@ ÔøΩ…∑3ÔøΩ_ÔøΩtDÔøΩÔøΩÔøΩaÔøΩBÔøΩÔøΩÔøΩÔøΩÔøΩsS)dÔøΩÔøΩF?ÔøΩÔøΩÔøΩQÔøΩÔøΩ@ÔøΩhkÔøΩÔøΩÔøΩÔøΩkÔøΩwÔøΩÔøΩk1ÔøΩ\ÔøΩÔøΩG∆ûÔøΩÔøΩ~wÔøΩ/d4ÔøΩÔøΩÔøΩÔøΩGÔøΩnƒ∞c…æÔøΩﬂèq!ÔøΩTÔøΩÔøΩD8ÔøΩ^v=ÔøΩT@%)-u+hlÔøΩ(ŒÆoÔøΩÔøΩÔøΩÔøΩf	ÔøΩ!7^~ÔøΩ kÔøΩT”ûÔøΩW@ÔøΩÔøΩO sÔøΩ’∑ÔøΩÔøΩÔøΩ%ÔøΩwÔøΩ<ÔøΩ5F=jÔøΩ]ÔøΩOÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩPÔøΩÔøΩdÔøΩÔøΩÔøΩ{ÔøΩ«ØÔøΩÔøΩw6z(ÔøΩENÔøΩÔøΩ1wÔøΩÔøΩ>UÔøΩÔøΩœºÔøΩÔøΩTÔøΩÔøΩ^ÔøΩÔøΩdÔøΩ7ÔøΩRYZiÔøΩÔøΩÔøΩÔøΩÔøΩ!|eÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩ=>ÔøΩÔøΩÔøΩÔøΩ ÔøΩ WVÔøΩ yÔøΩÔøΩÔøΩÔøΩW\ÔøΩolÔøΩ=}SÔøΩaÔøΩÔøΩbzÔøΩ—âÔøΩÔøΩ;ÔøΩi/8ÔøΩÔøΩÔøΩÔøΩz $ÔøΩÔøΩÔøΩÔøΩoÔøΩ;jÔøΩÔøΩÔøΩ	WÔøΩyÔøΩPs<ÔøΩKÔøΩÔøΩÔøΩ8ÔøΩ!P?OÔøΩ-ÔøΩÔøΩÔøΩœóÔøΩ/ÔøΩeÔøΩ2À≠ÔøΩ.ﬁÆÔøΩEÔøΩ!nÔøΩÔøΩÔøΩÔøΩd*ÔøΩÔøΩ ÔøΩzÔøΩ{<*ÔøΩ]ÔøΩm◊ÄÔøΩÔøΩGÔøΩNÔøΩÔøΩÔøΩ6  UÔøΩÔøΩ0h÷°]ÔøΩÔøΩÔøΩÔøΩ/`sÔøΩe>NÔøΩ<ÔøΩÔøΩÔøΩkÔøΩÔøΩ'ÔøΩo¬éÔøΩÃæCÔøΩ0ÔøΩZ,ÔøΩFÔøΩÔøΩÔøΩÔøΩ|ÔøΩÔøΩ{ÔøΩ_WÔøΩoÔøΩ ÔøΩGÔøΩÔøΩÔøΩÔøΩbLÔøΩjÔøΩÔøΩ2UÔøΩ·§çÔøΩÔøΩ""ÔøΩ1ÔøΩ9.!ÔøΩlÔøΩÔøΩÔøΩkÔøΩÔøΩŸ™`}ÔøΩtWÔøΩÔøΩÔøΩÔøΩi[X8*ÔøΩÔøΩlÔøΩ1ÔøΩÔøΩÔøΩ VIÔøΩÔøΩÔøΩ1ÔøΩÔøΩ0ÔøΩÔøΩ$r,œØ0ÔøΩ^z-ÔøΩÔøΩHKÔøΩÔøΩÔøΩLUÔøΩ [ÔøΩÔøΩ ÔøΩÔøΩUÔøΩ nÔøΩÔøΩ8ÔøΩÔøΩÔøΩÔøΩÔøΩ:ÿæÔøΩKÔøΩ…∑ÔøΩ;[ÔøΩÔøΩ>ÔøΩÔøΩ%ÔøΩY~;*ÔøΩÿúLlÔøΩOÔøΩ(&ÔøΩÿ±yEÔøΩÔøΩÔøΩÔøΩœØD|ÔøΩ2ÔøΩaÔøΩjÔøΩcÔøΩÔøΩÃõ7ÔøΩDYÔøΩ%YÔøΩÔøΩTÔøΩÔøΩÔøΩ`#ÔøΩÔøΩÔøΩÔøΩ@ÔøΩÔøΩÔøΩÔøΩÔøΩnLÔøΩcÔøΩ;ÔøΩÔøΩWÔøΩÔøΩÔøΩ4ÔøΩÔøΩÔøΩ¬≤[%?ÔøΩV{mÔøΩﬂ©ÔøΩÔøΩ/yÔøΩÔøΩÔøΩ3ÔøΩÔøΩpn7zÔøΩ:ÔøΩÔøΩÔøΩxÔøΩtg}ph&}ÔøΩÔøΩ`ÔøΩPÔøΩ OyP>Àà/yÔøΩÔøΩR'ÔøΩ ∂ÔøΩz~FÔøΩÔøΩÔøΩÔøΩÔøΩsÔøΩÔøΩÔøΩPÔøΩ--5i}uÔøΩSÔøΩsÔøΩÔøΩÔøΩGÔøΩ«∑ÔøΩÔøΩÔøΩW VÔøΩÔøΩoÔøΩ3 >`EÔøΩ!ÔøΩÔøΩJÔøΩS	WY} BÔøΩ?ÔøΩÔøΩÔøΩL)ÔøΩO	ÔøΩ'ÔøΩ2M`’∫ÔøΩOiBÔøΩÔøΩÔøΩT=ÔøΩ1uÔøΩEÔøΩOÔøΩGÔøΩÔøΩÔøΩ> ÔøΩÔøΩ_%ÔøΩÔøΩÔøΩJ0ÔøΩrÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ=?ÔøΩÔøΩDÔøΩÔøΩfWÔøΩÔøΩeÔøΩ2	=\ÔøΩ}AÔøΩÔøΩÔøΩÔøΩ:ÔøΩÔøΩÔøΩÔøΩYÔøΩ/gÔøΩÔøΩQOÔøΩÔøΩÔøΩFb_/ÔøΩuÔøΩnJÔøΩ-MÔøΩdyk\ÔøΩ\–øÔøΩstÔøΩÔøΩJ>ÔøΩ""~F|ÔøΩjÔøΩOÔøΩHÔøΩLÔøΩÔøΩQ7qÔøΩ◊∫ÔøΩanuÿÅZDÔøΩÔøΩV	^ÔøΩ TUÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ$ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ√ûg_px `Evn5ÔøΩgÔøΩÔøΩ/bÔøΩ~5EZÔøΩ!ÔøΩÔøΩÔøΩÔøΩ m$;2ÔøΩ^ÔøΩÔøΩÔøΩÔøΩÿñ[O ÔøΩr–á8ÔøΩ~ÔøΩÔøΩ)qsÔøΩÔøΩf+ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩhdQnC‘ÄÔøΩÔøΩ'ÔøΩcBÔøΩÔøΩ?ÔøΩU:ƒ∞[	ÔøΩ. ÔøΩ""ÔøΩAsB3ÔøΩﬂÅÔøΩ ÔøΩÔøΩÔøΩrTÔøΩSwÔøΩÔøΩÔøΩÔøΩÔøΩ>»≤ÔøΩÔøΩÔøΩÔøΩ?ÔøΩÔøΩlÔøΩIÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩx	ÔøΩÔøΩyÔøΩD.ÔøΩHÔøΩ[m2ÔøΩ]ÔøΩ9wÔøΩÔøΩÔøΩÔøΩfoÔøΩ €ª[4nGÔøΩ&ÔøΩÔøΩÔøΩ9OÔøΩ_PÔøΩ1tÔøΩÔøΩ~`-ÔøΩÔøΩJ#ÔøΩ6ÔøΩÔøΩÔøΩÔøΩ?rÔøΩa endstream endobj 29 0 obj << /Filter /FlateDecode /Length1 1529 /Length2 7572 /Length3 0 /Length 8599 >> stream xÔøΩÔøΩÔøΩTl7ÔøΩÔøΩÔøΩÔøΩnÔøΩtoÔøΩAÔøΩNÔøΩFl0ÔøΩQÔøΩRÔøΩÔøΩÔøΩ )ÔøΩÔøΩÔøΩ -!!-%ÔøΩHÔøΩ|SÔøΩÔøΩyÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩsÔøΩÔøΩÔøΩ]q_ÔøΩÔøΩ3ÔøΩ[ÔøΩFBÔøΩNHÔøΩÔøΩ+ÔøΩ ÔøΩu %ÔøΩ`ÔøΩÔøΩ0,ÔøΩÔøΩ2ÔøΩÔøΩzÔøΩÔøΩÔøΩ .SÔøΩÔøΩDÔøΩÔøΩÔøΩ^ÔøΩÔøΩb0ÔøΩ/ÔøΩLÔøΩ jÔøΩy !ÔøΩ@ÔøΩÔøΩDRÔøΩÔøΩÔøΩÔøΩÔøΩ1DÔøΩdÔøΩ*PÔøΩPWÔøΩÔøΩDÔøΩ| \ÔøΩHÔøΩ ÔøΩÔøΩÔøΩsÔøΩÔøΩ@^G> DZZRÔøΩ;PÔøΩÔøΩÔøΩ;B@]ÔøΩÔøΩ+ÔøΩsÔøΩ#ÔøΩhÔøΩtÔøΩÔøΩ|ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩFÔøΩ\ÔøΩÔøΩÔøΩp_WÔøΩ!ÔøΩÔøΩÔøΩ9ÔøΩ‘ÉzÔøΩ~&ÔøΩÔøΩÔøΩ}ÔøΩÔøΩFHgÔøΩ ( ÔøΩ pGÔøΩÔøΩÔøΩÔøΩpÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩFÔøΩ:ÔøΩÔøΩ^0ÔøΩcÔøΩ?ÔøΩÔøΩÔøΩZÔøΩCÔøΩÔøΩÔøΩÔøΩÔøΩ@pÔøΩogÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩ#\ÔøΩÔøΩpÆöéÔøΩoÔøΩÔøΩ ÔøΩpÔøΩeÔøΩÔøΩAbÔøΩÔøΩÔøΩPÔøΩÔøΩcÔøΩ;q(PMÔøΩ ÔøΩÔøΩÔøΩWu>ÔøΩ(ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩ_a0MVE8)#==a_ÔøΩÔøΩÔøΩTÔøΩ(ÔøΩ#ÔøΩÔøΩAÔøΩÔøΩcuG ÔøΩ?gg8ÔøΩÔøΩÔøΩW	N~^ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ|ÔøΩÔøΩ`0XRÔøΩyaÔøΩÔøΩÔøΩÔøΩ_ÔøΩÔøΩÔøΩÔøΩ`ÔøΩÔøΩÔøΩ_0&ÔøΩPÔøΩÔøΩÔøΩ) wÔøΩa~ hÔøΩ?ÔøΩÚÉÖ¢ÔøΩ[ÔøΩo	 ÔøΩ ÔøΩÔøΩÔøΩÔøΩ@ÔøΩÔøΩ':ÔøΩ9ÔøΩÔøΩ1ÔøΩGÔøΩÔøΩV`ÔøΩ @ÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩhÔøΩdnh(ÔøΩÔøΩUJJÔøΩ@ ZHD($""B """"@IÔøΩ!ÔøΩÔøΩQÔøΩÔøΩÔøΩ ÔøΩ„´âpFÔøΩÔøΩ$ÔøΩÔøΩÔøΩÔøΩÔøΩkÔøΩÔøΩ-ÔøΩﬂ±ÔøΩÔøΩÔøΩ¬ÄÔøΩÔøΩÔøΩ,vÔøΩ|AÔøΩÔøΩiÔøΩÔøΩÔøΩÔøΩÔøΩ›øÔøΩÔøΩ_ÔøΩÔøΩÔøΩÔøΩÔøΩyxÔøΩÔøΩÔøΩÔøΩRÔøΩÔøΩPOÔøΩGÔøΩ_z_ÔøΩ|1ÔøΩÔøΩEb6 ÔøΩfÔøΩ?ÔøΩsÔøΩÔøΩyÔøΩÔøΩVÔøΩÔøΩÔøΩEÔøΩÔøΩÔøΩÔøΩMÔøΩÔøΩÔøΩÔøΩaNÔøΩp_GÔøΩ?TÔøΩÔøΩÔøΩÔøΩZ08ÔøΩÔøΩÔøΩÔøΩzPÔøΩB0ÔøΩtÔøΩÔøΩrtÔøΩ<>>ÔøΩVÔøΩ0KÔøΩÔøΩ+UÔøΩHÔøΩ_ÔøΩ%"".ÔøΩÔøΩPÔøΩ  fÔøΩIÔøΩÔøΩ`ÔøΩÔøΩ	ÔøΩÔøΩÔøΩ@ÔøΩ0ÔøΩqbÔøΩ:#QÔøΩ_ÔøΩÔøΩ8ÔøΩÔøΩÔøΩÔøΩÔøΩ#ÔøΩÌáôÔøΩqQ ÔøΩÔøΩÔøΩÔøΩﬂÄ@ÔøΩÔøΩÔøΩ$ÔøΩ &ﬂø1i ÔøΩ_2&ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩaÔøΩÔøΩÔøΩ1ÔøΩÔøΩÔøΩÔøΩ`ÔøΩÔøΩÔøΩ ÔøΩbJAÔøΩ0ÔøΩÔøΩ_MpÔøΩCÔøΩ0OÔøΩoÔøΩb:ÔøΩÔøΩÔøΩ{ÔøΩÔøΩÔøΩÔøΩHÔøΩÔøΩÔøΩÔøΩ^ÔøΩ{VÔøΩÔøΩ ÔøΩ>"";ÔøΩÔøΩnÔøΩÔøΩ'ÔøΩÔøΩEÔøΩÔøΩ]ÔøΩÔøΩÔøΩÃâ\BÔøΩ(ÔøΩ tÔøΩZSÔøΩ=VÔøΩcÔøΩBÔøΩ4ÔøΩÔøΩÔøΩ4ÔøΩÔøΩ\ÔøΩÔøΩÔøΩK6_oÃå—æ}ÔøΩÔøΩXÔøΩÔøΩBÔøΩ,dÔøΩÔøΩrÔøΩbzÔøΩÔøΩÔøΩFÔøΩWÔøΩÔøΩÔøΩÔøΩ~!ÔøΩY@ÔøΩz`moÔøΩÔøΩPÔøΩÔøΩÔøΩÔøΩÔøΩK	mÔøΩÔøΩMÔøΩÔøΩNr8<ÔøΩÔøΩgÔøΩÔøΩb!ÔøΩ<$ÔøΩ<>ÔøΩÔøΩÔøΩÔøΩfÔøΩJ ÔøΩÔøΩ&ÔøΩÔøΩ-ÔøΩEÔøΩO/TÔøΩÔøΩt0p2X“≥ÔøΩSÔøΩsÔøΩÔøΩÔøΩ“µÔøΩ>ÔøΩÀäÔøΩ&ÔøΩÔøΩJÔøΩD?u`Ÿ®ÔøΩMÔøΩJÔøΩ	ÔøΩ'KÔøΩÔøΩÔøΩ«πÔøΩÔøΩrÔøΩÔøΩNÔøΩ8ÔøΩTÔøΩÔøΩÔøΩKÔøΩq%X^ÔøΩ-ÔøΩÔøΩÔøΩ|ÔøΩÔøΩNÔøΩÔøΩÔøΩfÔøΩÔøΩlxÔøΩÔøΩÔøΩ„π§ÔøΩY]Õ™D\ÔøΩÔøΩ-FYÔøΩcÔøΩTÔøΩCÔøΩÔøΩ96ÔøΩ96ÔøΩÔøΩÔøΩ’∑ÔøΩA$l$jÔøΩÔøΩuaÔøΩÔøΩ OV&ÔøΩÔøΩCÔøΩ\ÔøΩ[ÔøΩÔøΩÔøΩ<ÔøΩvÔøΩ8ÔøΩqoÔøΩBÔøΩA-ÔøΩÔøΩÔøΩLÔøΩÔøΩÔøΩÔøΩ6ÔøΩÔøΩÔøΩÔøΩÔøΩM::ÔøΩÔøΩLÔøΩÔøΩÔøΩbÔøΩ]ÔøΩ'ÔøΩÔøΩÔøΩlÔøΩ~ÔøΩÔøΩÔøΩ&<tÔøΩLŸ∞ÔøΩÔøΩÔøΩÔøΩ9ÔøΩÔøΩ ûÔøΩÔøΩ?)ÔøΩ2ÔøΩMÔøΩÔøΩMIÔøΩzÔøΩFÔøΩÔøΩ8¬ÇSBÔøΩÔøΩﬁùÔøΩÔøΩfÔøΩÔøΩhÔøΩÔøΩMj7ÔøΩÔøΩc#JÔøΩtÔøΩaÔøΩÔøΩzÔøΩpÔøΩÔøΩœ©ÔøΩfÔøΩ.»∂ÔøΩÔøΩÔøΩ)ÔøΩÔøΩ’Ø:ÔøΩRÔøΩ0ÔøΩÔøΩÔøΩ2ÔøΩÔøΩÔøΩÔøΩf1>ÔøΩÔøΩÔøΩs*ÔøΩÔøΩÔøΩ'O#ÔøΩMÔøΩÔøΩÔøΩhgÔøΩ:ÔøΩÔøΩÔøΩ…çÔøΩnSÔøΩÔøΩÔøΩ;ÔøΩÔøΩ;U+MÔøΩÔøΩÔøΩ_ÔøΩÔøΩÔøΩ‹îÔøΩÔøΩvÔøΩw4FÔøΩ'ÔøΩÔøΩ5ÔøΩ|ÔøΩÔøΩqlÔøΩÔøΩ ÔøΩSqÔøΩÔøΩÔøΩ}d@pÔøΩÔøΩÔøΩ`iÔøΩÔøΩ'FÔøΩÔøΩ[ÿµ\“ºÔøΩ4ÔøΩw~ÔøΩg^dÔøΩÔøΩÔøΩjÔøΩÔøΩÔøΩ{ÔøΩ$›ÑfvÔøΩ”èÔøΩ–âpÔøΩÔøΩÔøΩÔøΩqÔøΩ5_y ÔøΩ&ÔøΩ»µÔøΩÔøΩ}MÔøΩZ!] îÔøΩ-ÔøΩ@ÔøΩ“ÆÔøΩÔøΩ]ÔøΩ≈∑ÔøΩÔøΩ9TÔøΩKZÔøΩ/VÔøΩd]ÔøΩjÔøΩFÔøΩÔøΩdÔøΩÔøΩ9ÔøΩÔøΩÔøΩÔøΩÕãÔøΩ`XÔøΩÔøΩÔøΩwÔøΩÔøΩÔøΩ]ÔøΩ,ÔøΩÔøΩÔøΩÔøΩÔøΩ«éÔøΩ/ÔøΩÔøΩ—ΩÔøΩÔøΩÔøΩXÔøΩKg NÔøΩÔøΩ/ÔøΩOyÔøΩ›êÔøΩ N#*aAÊ®∂4ÔøΩÍªñIeÔøΩ¬£IÔøΩdwRxÔøΩlÔøΩZA""ÔøΩÔøΩt|ÔøΩmÔøΩœæ|ÔøΩÔøΩÔøΩÃªtÔøΩÔøΩyÔøΩÔøΩÔøΩÔøΩÃÄÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ~1Óç±ÔøΩÔøΩw–çÔøΩÔøΩTÔøΩtÔøΩÔøΩgÔøΩ$	÷ûÔøΩeÔøΩ|ÔøΩ6\ÔøΩÔøΩ8ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩv„¥øbÔøΩ[ RuÔøΩz [ÔøΩ?ÔøΩÔøΩÔøΩÔøΩ@EÔøΩ#ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩSrÔøΩsÔøΩ]ÔøΩ;ÔøΩÔøΩQÔøΩÔøΩnLÔøΩnÔøΩÔøΩSÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ|*ÔøΩÔøΩu}};ÔøΩRD 2ÔøΩ[ÔøΩÕêÔøΩRÔøΩ ÔøΩÔøΩLÔøΩxÔøΩXÔøΩLP+TÔøΩ_FÔøΩÔøΩÔøΩÔøΩ<ÔøΩÔøΩÔøΩHÔøΩTÔøΩ/ÔøΩ|ÔøΩRÔøΩi1) FÔøΩ	_\ÔøΩGÔøΩ çÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ{”ßÔøΩuÔøΩÔøΩ pÔøΩÔøΩQfÔøΩÔøΩBDÔøΩÔøΩDB—¢ÔøΩÔøΩ?ÔøΩ‹™wÔøΩ≈é'-ÔøΩﬁã ÔøΩ^kÔøΩÔøΩÔøΩkÔøΩÔøΩyÔøΩ;ÔøΩÔøΩ}ÔøΩÔøΩÔøΩÔøΩh\ÔøΩ ÔøΩÔøΩÔøΩuÔøΩÔøΩ7ÔøΩÔøΩÔøΩÔøΩI∆Ü~ÔøΩÔøΩÔøΩÔøΩcRÔøΩœôÔøΩÔøΩÔøΩ/HÔøΩÔøΩ	ÔøΩÔøΩ¬ªcjÔøΩÔøΩÔøΩ6lÔøΩ8ÔøΩÔøΩ9ÔøΩjÔøΩÔøΩ:ÔøΩYÔøΩFÔøΩÔøΩ7=mJÔøΩnÔøΩÔøΩÔøΩo„ªç2Ìì¨mÔøΩÔøΩÔøΩ^ ÔøΩÔøΩrB{ÔøΩyÔøΩÔøΩÔøΩRÔøΩÔøΩÔøΩa iNÔøΩÀäÔøΩÔøΩ#ciÔøΩÔøΩdywÔøΩ56\>:ÔøΩ ÔøΩÔøΩÔøΩÔøΩ:ÔøΩÔøΩÔøΩ>8ÔøΩcÔøΩ""ÔøΩÔøΩÔøΩ(ÔøΩ$tyYÔøΩÔøΩ@xdEÔøΩÔøΩ`XÔøΩ/.ÔøΩÔøΩiC(‹´ÔøΩÔøΩ2ÔøΩ,ÔøΩÔøΩ};pÔøΩ ©ÔøΩÔøΩÔøΩÔøΩ&wÔøΩÔøΩ.4NÔøΩÔøΩÔøΩwafÔøΩ9L.ÔøΩÔøΩÔøΩ0b<@ÔøΩ≈ΩI;ÔøΩÔøΩ\IÔøΩ&ÔøΩMÔøΩÔøΩ+ÔøΩ*ÔøΩÔøΩÔøΩ.#ÔøΩÔøΩÔøΩÔøΩtÔøΩÔøΩ'ÔøΩÔøΩT@M*%9nÔøΩÔøΩÔøΩ>ÔøΩÔøΩdg,ﬂ™ÔøΩÔøΩÔøΩÔøΩt ÔøΩ›ÖcÔøΩÔøΩÔøΩÔøΩnÔøΩhoQ3[%ÔøΩrÔøΩgÔøΩWTÔøΩÔøΩXÔøΩÔøΩÔøΩYÔøΩÔøΩÔøΩcÔøΩy,?ÔøΩsÔøΩÔøΩÔøΩ+ÔøΩÔøΩÔøΩ^ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩdDÔøΩÔøΩÔøΩ{ÔøΩÔøΩÔøΩ∆πÔøΩÔøΩLÔøΩÔøΩtÔøΩÔøΩKÔøΩ-OÔøΩÔøΩ{ÔøΩiÔøΩ~ÔøΩÔøΩzÔøΩl3x ÔøΩ;ÀºÔøΩI>$ÔøΩÔøΩ-4)ÔøΩÃØp.tcÔøΩÔøΩPÔøΩ!hÔøΩÔøΩÔøΩ(ÔøΩXÔøΩÔøΩÔøΩÔøΩÔøΩhWÔøΩoBÔøΩÔøΩÔøΩdÔøΩ	ÔøΩdAbÔøΩŸ™'ÔøΩÔøΩÔøΩ”ÜÔøΩÔøΩzbÔøΩÔøΩKÔøΩÔøΩXTÔøΩMÔøΩ`ÔøΩsÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩkUÔøΩxÔøΩZÔøΩzÔøΩnÔøΩ ÔøΩÔøΩÔøΩjoÔøΩw/hÔøΩÔøΩq	ÔøΩG&wÔøΩÔøΩ.ÔøΩ	ÔøΩÔøΩxÔøΩÔøΩË§£ÔøΩ`ÔøΩÔøΩU)ÔøΩÔøΩÔøΩ;ÔøΩIÔøΩIÔøΩ:—∫cÔøΩ(ÔøΩÔøΩ^ÔøΩsÔøΩ≈¶ÔøΩÍ©îÔøΩE7ISÔøΩtÔøΩÔøΩÔøΩ]Õ±7ÔøΩGÔøΩQÔøΩ$tÔøΩp""ÔøΩÔøΩÔøΩp7cÔøΩÔøΩ+≈æ∆ãÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩsÔøΩ;-ÔøΩ=◊•ÔøΩ&.ywÔøΩÔøΩKÔøΩtÔøΩkÔøΩ*7ÔøΩÔøΩÔøΩUM4SÔøΩÔøΩNk&ÔøΩsÔøΩlSÔøΩÔøΩÔøΩÔøΩygpUxy ÔøΩ""@L$ÔøΩÔøΩÔøΩÔøΩ~ZÔøΩÔøΩÔøΩÔøΩÔøΩyÔøΩO]SÔøΩm<ÔøΩS≈âÔøΩ6ÔøΩÔøΩQÔøΩgÔøΩoÔøΩn[KÔøΩÔøΩÔøΩÔøΩÔøΩ[…∞	ÔøΩ+GÔøΩ|ÔøΩ&ÔøΩÔøΩGÔøΩ`ﬂâÔøΩÔøΩÔøΩdÔøΩPÔøΩU0 ÔøΩ=ÔøΩÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩÔøΩÔøΩ3ÔøΩÔøΩ[ÔøΩrÔøΩÔøΩÔøΩÔøΩfo)n3qÔøΩÔøΩlÔøΩÔøΩÔøΩÔøΩoejÔøΩ{ÔøΩ&\ÔøΩÔøΩÔøΩRÔøΩ}[(jÔøΩ!ÔøΩÔøΩ"",ÔøΩÔøΩÔøΩÔøΩyÔøΩÔøΩulÔøΩÔøΩÔøΩ?ÔøΩ,ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩAÿ§ÔøΩ#ÔøΩÔøΩÔøΩQÔøΩÔøΩÔøΩu(ÔøΩÔøΩÔøΩ,ÔøΩyiÔøΩÔøΩ3ÔøΩÔøΩ9.<ÔøΩÔøΩ_ÔøΩrKÔøΩ^+[ÔøΩÔøΩÔøΩ ÔøΩTÔøΩÔøΩ«ëo ZÔøΩÔøΩHÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩ\8lÔøΩÕºÔøΩs,ÀíÔøΩZ""ÔøΩv""&&ÔøΩqÔøΩmÔøΩÔøΩÔøΩÔøΩvÔøΩÔøΩ[ÔøΩÔøΩŒöFÔøΩÔøΩÔøΩÔøΩmVÔøΩŸåÔøΩÔøΩÔøΩ=+aÔøΩPÔøΩ=ÔøΩ""0ÔøΩ<ÔøΩÔøΩÔøΩÔøΩicÔøΩTÔøΩÔøΩÔøΩÔøΩGÔøΩm8ÔøΩjq*TÔøΩ<dmÔøΩÔøΩK ÔøΩÔøΩRÔøΩÿñpH{ENAÔøΩÔøΩG6zÔøΩ[ÔøΩ)ÔøΩzkGÔøΩÔøΩÔøΩ7CXÔøΩ⁄éÔøΩ\1ÔøΩ@-ÔøΩ‰°∏ÔøΩRÔøΩ-6yhÔøΩÔøΩÔøΩÔøΩHÔøΩÔøΩ4ÔøΩ ÔøΩÔøΩÔøΩpÔö®ÔøΩ&ÔøΩ\ÔøΩÔøΩÔøΩ(ÕÅÔøΩÔøΩOlÔøΩÔøΩr>ÔøΩÔøΩ{ÔøΩEx7ÔøΩ5 eÔøΩÔøΩÔøΩeÔøΩÔøΩ[ÔøΩo–öÔøΩÔøΩfÔøΩÂ®ÜÔøΩnnFÔøΩFÔøΩ)ÔøΩ-ÔøΩFÔøΩ)ÔøΩÔøΩv(ÔøΩÔøΩÔøΩÔøΩÔøΩd7ÔøΩÔøΩÔøΩtÔøΩÔøΩ ÔøΩ5\ÔøΩzÔøΩÔøΩ »°ÔøΩcÔøΩÔøΩpyÔøΩxÔøΩ!ÔøΩÔøΩÔøΩÔ°æÔøΩÔøΩ‹éÔøΩ8ÔøΩÿìsÔøΩotF!a;ÔøΩ):NÔøΩ√°ÔøΩEÔøΩÕéÔøΩ)ÔøΩwÔøΩJE	ÔøΩÔøΩr ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÃÜXÔøΩÔøΩÔøΩ›óÔøΩÔøΩÔøΩrxÔøΩ1?ÔøΩÔøΩÔøΩ5»†ÔøΩÔøΩyÔøΩ2QÔøΩVÔøΩYZÔøΩﬁó'r,_ÔøΩUÔøΩÔøΩÔøΩÔøΩÔøΩ|«êÔøΩGÔøΩÔøΩiI:ÔøΩ<ÔøΩÔøΩÔøΩoXÔøΩÔøΩ	?1/ÔøΩÔøΩ?ÔøΩÔøΩÔøΩ6¬ìÔøΩÔøΩzÔøΩ0ÔøΩÔøΩÔøΩÔøΩÔøΩvÔøΩ»™ÔøΩ!g}ÔøΩÔøΩaÔøΩÔøΩw@ÔøΩÔøΩÔøΩaqÔøΩÔøΩ|ÔøΩVxÔøΩÔøΩtzAM`0@ÔøΩj!/ÔøΩ3ÔøΩÔøΩ9KcÔøΩyÔøΩtÔøΩOÔøΩÔøΩWÔøΩ8ÔøΩÔøΩÔøΩd8:ÔøΩ\GÔøΩhÔøΩÔøΩXX+n<ÔøΩÔøΩÔøΩ ÔøΩ'ÔøΩ}ÔøΩNÔøΩÔøΩEÔøΩ>ÔøΩ!ÔøΩÔøΩÔøΩÔøΩ*ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩB*ÔøΩzYÔøΩÈóíÔøΩÔøΩÔøΩPÔøΩÔøΩ ÷§ÔøΩs0[`ÔøΩÔøΩÔøΩÔøΩ`ÔøΩmÔøΩ)ÔøΩTÔøΩÔøΩÔøΩ6ÔøΩ(ÔøΩÔøΩP`dm!ÔøΩ$= ÔøΩÔøΩ8ÔøΩÔøΩ""ÔøΩ4@ÔøΩÔøΩÔøΩÔøΩÔøΩcÔøΩÔøΩÔøΩ|RÔøΩRW<ÔøΩ*GT=TÔøΩÔøΩÔøΩ3[})0ÔøΩ""ÔøΩÔøΩﬁéÔøΩÔøΩÔøΩÔøΩ 8 ∞'ÔøΩdÔøΩÔøΩÔøΩTzÔøΩ#ÔøΩÔøΩÔøΩÔøΩÔøΩqÔøΩ1ÔøΩÔøΩn3cÔøΩ~POmxÔøΩwÔøΩÔøΩvÔøΩ…¶NRÔøΩ#ÔøΩE{ÔøΩa PÔøΩzÔøΩÔøΩÔøΩ*mÔøΩxMQÔøΩÔøΩ‹ôÔøΩÔøΩÔøΩ2ÔøΩÔøΩÔøΩƒµÔøΩfÔøΩd?ÔøΩÔøΩ|]gÔøΩÔøΩÔøΩ.ÔøΩÔøΩÔøΩ_ÔøΩzÔøΩ{ÔøΩÔøΩÔøΩÔøΩZ}WÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩK…ádÔøΩXÔøΩÔøΩÕñÔøΩ‘≤ÔøΩÔøΩrÔøΩÔøΩÔøΩÔøΩYÔøΩÔøΩÔøΩ9ÔøΩgE4-ÔøΩFÔøΩÔøΩÔøΩÔøΩÔøΩr""=ÔøΩxQwÔøΩÔøΩ=ÔøΩÿΩyÔøΩÔøΩUÔøΩ‹çÔøΩ9ÔøΩs?ÔøΩÔøΩeÔøΩÔøΩÔøΩÔøΩ('ÔøΩ*ÔøΩÔøΩkÔøΩÔøΩ ÔøΩUÔøΩGÔøΩÔøΩÔøΩ)ÔøΩWÔøΩ*ÔøΩYÔøΩÔøΩtÔøΩ—æK ]@[oÔøΩ›äÔøΩLÔøΩÔøΩ|ÔøΩAZ8ÔøΩœ∞hÔøΩ,ÔøΩÔøΩ_ÔøΩÔøΩÔøΩÔøΩS{jÔøΩ|>JQIÔøΩb:lÔøΩ¬Ø%^ÔøΩ[ÔøΩÔøΩ(=DÔøΩÔøΩ_ÔøΩÔøΩLRÔøΩÔøΩoÔøΩÔøΩvwÔøΩ-)To8›Æ2(ÔøΩÔøΩœéÔøΩAÔøΩÔøΩÔøΩÔøΩ-*ÔøΩÔøΩÔøΩÔøΩÔøΩn{ÔøΩÔøΩ_o6ÔøΩÔøΩ6\ÔøΩÔøΩ:!ÔøΩÔøΩÔøΩ*U9ÔøΩKÔøΩÔøΩÔøΩ:ÔøΩÔøΩ;ÔøΩÔøΩÔøΩ.ÔøΩÔøΩ<NÔøΩÔøΩ+ÔøΩÔøΩÔøΩ	+ÔøΩZXÔøΩÔøΩÔøΩSHÔøΩÔøΩ ÑwÔøΩÔøΩÔøΩNÔøΩeÔøΩiÔøΩÔøΩÔøΩ4…ÜÔøΩ5ÔøΩ÷ÉÔøΩÔøΩÔøΩvRYrÔøΩÔøΩÔøΩÔøΩ0VÔøΩÔøΩH]ÔøΩFÔøΩÔøΩÔøΩO‘ïÔøΩ{ÔøΩ5 ÔøΩxÔøΩ)nÔøΩCÔøΩÔøΩW”∂ÔøΩÔøΩ-ÔøΩÔøΩ-ÔøΩpUÔøΩÔøΩPÔøΩy}=]<<ÔøΩ÷∏KÔøΩbÔøΩÔøΩÔøΩÔøΩÔøΩ%v\BÔøΩ<ÔøΩjyÔøΩ<@MÔøΩÀâÔøΩÔøΩÔøΩÔøΩÔøΩ}ÔøΩBÔøΩ\ÔøΩÔøΩTÔøΩfÔøΩ~ÔøΩÔøΩtÔøΩ;ÔøΩ3ÔøΩÔøΩc%ÔøΩÔøΩÔøΩÔøΩÔøΩqÔøΩÔøΩÔøΩqÔøΩÔøΩ»≥ÔøΩGÔøΩÔøΩeÔøΩÔøΩ9q–üÔøΩ ÔøΩÔøΩÔøΩwÔøΩÔøΩ.g&ÔøΩÔøΩQXIÔøΩÔøΩÔøΩÔøΩ|?ÔøΩÔøΩÔøΩ[ÔøΩ$ÔøΩ%ÔøΩÔøΩÔøΩ:ÔøΩÔøΩ_~ÔøΩG N_5JÔøΩGÔøΩ)ÔøΩÔøΩŸ¶ÔøΩÔøΩÔøΩ/?ÔøΩÔøΩtÔøΩÔøΩÔøΩjÔøΩÔøΩb?ÔøΩÔøΩCrÔøΩÔøΩÔøΩÔøΩU◊æmÔøΩ\pvÔøΩÔøΩ\ÔøΩx^ÔøΩ&ÔøΩÔøΩÔøΩK<ReÔøΩÔøΩB/ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩkÔøΩÔøΩQtÔøΩy/ÔøΩÔøΩ dÔøΩ»ò[ÔøΩÔøΩ@ŸèÔøΩÔøΩ ÔøΩÔøΩÔøΩQkI	ÔøΩe’∫ÔøΩÔøΩÔøΩ:!ÔøΩ|FÔøΩ|wÔøΩÔøΩ8]ÔøΩf>ÔøΩÔøΩxÔøΩÔøΩÔøΩÔøΩ`[_cÔøΩÔøΩWfÔøΩÔøΩÔøΩnÔøΩXy^NÔøΩﬂæ4fÔøΩ6@ÔøΩÔøΩLyaÔøΩÔøΩ=NÔøΩBcÔøΩ<5IÔøΩsGkÔøΩÔøΩx2%ÔøΩnÔøΩÔøΩÔøΩÔøΩ=fÔøΩÔøΩ#a"".ÔøΩO{ÔøΩÔøΩÔøΩÔøΩÔøΩHÔøΩÔøΩ,oÔøΩÔøΩ92ÔøΩ^N>ÔøΩ.IÔøΩ4~…≠\ÔøΩ;@mEÔøΩdÔøΩÔøΩÔøΩ'ÔøΩVcUÔøΩ.ÔøΩÔøΩsÔøΩÔøΩ""Û∫∑º»âfÔøΩÔøΩ<fÔøΩÔøΩÔøΩÔøΩfÔøΩÔøΩ(ÔøΩÔøΩI!ÔøΩÔøΩÔøΩÔøΩ/ÔøΩÔøΩtÔøΩJÔøΩÔøΩÔøΩÔøΩÊéâÔøΩ1ÔøΩc ÔøΩ\CmÔøΩºñßÔøΩÔøΩ ÔøΩÔøΩ/ÔøΩÔøΩKÔøΩzhÔøΩGvÔøΩÔøΩHÔøΩxÔøΩ=ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩIÔøΩÔøΩÔøΩ)^ÔøΩJLÔøΩL+;XÔøΩÔøΩK~ÔøΩ!ÔøΩ9ÔøΩ{+!TÔøΩ>„âõ)ÔøΩ+ÔøΩ|3ÔøΩ^ÔøΩ –©[ÔøΩ{lcÔøΩm7ÔøΩÔøΩgÔøΩÔøΩqhÔøΩ$ÔøΩÔøΩ~ÔøΩÔøΩmÔøΩÔøΩ ØÔøΩ ÔøΩÔøΩÔøΩÔøΩcÔøΩBfÔøΩÔøΩÔøΩÔøΩÔøΩ+ÔøΩ ÔøΩÔøΩÔøΩÔøΩ'ÔøΩc	>ÔøΩ]ÔøΩ+BÔøΩ,ÔøΩAÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ;ÔøΩ|bÔøΩÔøΩNelIÔøΩÔøΩjx	ÔøΩÔøΩÔøΩV{ÔøΩmÔøΩÔøΩÔøΩeÔøΩ)ÔøΩÔøΩÔøΩÔøΩÔøΩQÔøΩÔøΩ]&ÔøΩ0ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩÔøΩÔøΩJÔøΩÔøΩyYÔøΩÔøΩÔøΩ 	ÔøΩÔøΩÔøΩÔøΩÔøΩcÔøΩoÔøΩÔøΩ|ÔøΩÔøΩÔøΩuÔøΩzÔøΩÔøΩÔøΩÔøΩŒìÔøΩÔøΩUÔøΩÔøΩmÔøΩÔøΩÔøΩ:Eu	%ÔøΩÔøΩÔøΩ>ÔøΩ5ÔøΩÔøΩ5w	ŒèÔøΩqvÂª£ÔøΩÔøΩÔøΩÔøΩ7:5J:ÔøΩÔøΩÔøΩ…æÔøΩ{ÔøΩjÔøΩÔøΩE6ÔøΩU{Áº®HYÔøΩÔøΩÔøΩ BÔøΩÔøΩKÔøΩÔøΩgÔøΩÔøΩOUŒπÔøΩ~ÔøΩ S\ÔøΩÔøΩo ÔøΩÔøΩzÔøΩÔøΩznÔøΩÔøΩÔøΩ9ÔøΩRÔøΩwÔøΩzÔøΩÔøΩ}ÔøΩÔøΩEÔøΩG^ÔøΩ;ÔøΩlL2!ÔøΩvÔøΩÔøΩ2D_ÔøΩ+ÔøΩc1?ÔøΩÔøΩXÔøΩÔøΩÔøΩÔøΩÔøΩ@ÔøΩqÔøΩOÔøΩÔøΩiÔøΩy ÔøΩ!ÔøΩÔøΩÔøΩ	iÔøΩÕÇÔøΩP}5{ÔøΩG6ÔøΩÔøΩÔøΩÔøΩ4ÔøΩÔøΩÔøΩ…ØÔøΩÔøΩKyEÔøΩX≈êl7ÔøΩÔøΩVÔøΩÔøΩXqWÔøΩÔøΩÔøΩÔøΩ<C=ÔøΩÔøΩ&ÔøΩÔøΩÔøΩ,ÔøΩgG)+!|\ÔøΩÔøΩNÔøΩÔøΩÔøΩLÔøΩÔøΩ""^ÔøΩWÔøΩÔøΩÔøΩqx=R	%: ÔøΩÔøΩYeÔøΩ|ÔøΩÔøΩÔøΩs<ÔøΩlrÔøΩ&ÔøΩÔøΩÔøΩÔøΩ-ÔøΩ$QÔøΩ|UVEÔøΩÔøΩÔøΩÔøΩi5ÔøΩÔøΩÔøΩ]JÔøΩÔøΩN'ÔøΩ\ÔøΩÔøΩKÔøΩF@w^ÔøΩ7`ÔøΩ8ÔøΩÔøΩÔøΩpÔøΩÔøΩ7ÔøΩÔøΩ#ÔøΩgÔøΩ-4LÔøΩÔøΩÔøΩ6ÔøΩ1YÔøΩ(Cg:ÔøΩÔøΩÔøΩÔøΩÀûVCÔøΩkRA>ÔøΩÔøΩÔøΩY”íSÔøΩ6ÔøΩÔøΩÔøΩkÔøΩÔøΩ)ÔøΩÔøΩÔøΩi0ÔøΩ#ÔøΩÔøΩÔøΩo+\odÔøΩlÔøΩvÔøΩB[ÔøΩ\ÔøΩ[bÔøΩFÔøΩoÔøΩÔøΩ@FÔøΩ-QÔøΩÔøΩnÔøΩ”µÔøΩ‰ê≥uKÔøΩÔøΩÔøΩÔøΩG;ÔøΩ8ÔøΩH>ÔøΩÔøΩ)◊§ÔøΩjÔøΩÔøΩÔøΩ6ÔøΩLÔøΩDÔøΩÔøΩ\ÔøΩÔøΩUNmÔøΩ/$P:ÔøΩ9voJÔøΩÔøΩ ÔøΩ74T?ÔøΩÔøΩÔøΩ&ÔøΩ6»ôÔøΩsÔøΩ^ÔøΩXÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩTÔøΩÔøΩD0ÔøΩÔøΩH?ÔøΩÔøΩÔøΩLÔøΩMuÔøΩÔøΩ-“álÔøΩÔøΩZÔøΩ4\bÔøΩwÔøΩÔøΩÔøΩÔøΩ<&ÔøΩÔøΩÔøΩDÔøΩRÔøΩÔøΩÔøΩ*ZÔøΩtÔøΩvÔøΩÔøΩ}∆ä_7ÔøΩÔøΩÔøΩÔøΩ3uÔøΩwÔøΩ.ÔøΩÔøΩzﬁ®ÔøΩNÔøΩw<rpy#ÔøΩDÔøΩÔøΩÔøΩ ÔøΩ`1ÔøΩSÔøΩ¬∂ÔøΩ>ÔøΩcÔøΩq-}4€âÔøΩ3ÔøΩÔøΩ?ﬂûbÔøΩÔøΩÔøΩmVÔøΩ#ÔøΩ6B;gIÔøΩQÔøΩ^'UB5?uÔøΩ}ÔøΩP""ÔøΩ8BÔøΩNÁ∑åÔøΩÔøΩjÔøΩﬁ±ÔøΩyÔøΩoGfÔøΩÔøΩ	ÔøΩÔøΩÔøΩ∆æÔøΩwhE9{0ÏÆ∑ÔøΩ(f}sÔøΩÔøΩ,WQ&ÔøΩ,ÔøΩhZÔøΩpIjÔøΩJkÔøΩ; ÔøΩSe2ÔøΩqÔøΩ.3UÔøΩÔøΩÔøΩ\uÔøΩƒØM)ÔøΩ'ÔøΩÔøΩ6ÔøΩ=$ÔøΩÔøΩO?ÔøΩcIxÔøΩÔøΩDcÔøΩÔøΩÔøΩÔøΩÔøΩsÔøΩÔøΩ€≥ÔøΩ≈≤ÔøΩl^Ó•áÔøΩÔøΩGÔøΩEÕâ@ÔøΩÔøΩÔøΩ^=ÔøΩsjÔøΩÔøΩÔøΩTkvWÔøΩ -cAfÔøΩƒùÔøΩ7ÔøΩa9ÔøΩ›ØÔøΩ.ÔøΩÔøΩ#ÔøΩ”õ""ÔøΩVÔøΩÔøΩ#ÔøΩÔøΩÔøΩ:ÔøΩrÔøΩÔøΩFÔøΩBÔøΩ[ÔøΩpÔøΩÔøΩG√îÔøΩvÂ∫©8ÕèÔøΩÔøΩÔøΩ5ÔøΩ8ÔøΩÔøΩÔøΩÔøΩyÔøΩÔøΩ-ÔøΩﬁ° k#ÔøΩJB [ÔøΩ ÔøΩÔøΩJÔøΩ$ÔøΩYtvc9	ÔøΩnvm ÔøΩMÔøΩÔøΩÔøΩmÔøΩÔøΩ|ÔøΩDÔøΩÔøΩ?aÔøΩ(^ÔøΩvIÔøΩZsxÔøΩÔøΩXÔøΩÔøΩÔøΩÔøΩQ,GÔøΩZÔøΩÔøΩÔøΩ|ÔøΩfXÔøΩÔøΩÔøΩ◊ãcfc	KÔøΩÔøΩÔøΩcÔøΩÔøΩÔøΩ?z}ÔøΩ*ÔøΩÔøΩÔøΩÔøΩÔøΩYÔøΩ ÔøΩSÔøΩkAÔøΩfÔøΩbiCÔøΩÔøΩwÔøΩÔøΩÔøΩSÔøΩeÔøΩmÔøΩÔøΩÈäΩd,ÔøΩÔøΩ/mk√âVDÔøΩÔøΩ8+tÔøΩv9ÔøΩxw|RÔøΩ7s,ÔøΩÔøΩ>ÔøΩIÔøΩÔøΩÔøΩÔøΩMÔøΩ;ÔøΩI,ÔøΩ8ÔøΩÔøΩ PfjÔøΩ_ÔøΩÔøΩNÔøΩÔøΩÔøΩÔøΩ…†ÔøΩ""ÔøΩ\Y.1ÔøΩYnÔøΩ}ÔøΩÔøΩÔøΩÔøΩ\ÔøΩÔøΩ<ÔøΩÔøΩÔøΩÔøΩÔøΩkÔøΩœÅÔøΩ*\	ÔøΩÔøΩafwÔøΩM	D{EqÔøΩÔøΩLÔøΩÀëÔøΩÔøΩÔøΩÔøΩb'foÔøΩGyVÔøΩrb3v2ÔøΩ3ÔøΩ?EuÔøΩ%oÔøΩÔøΩ<ÔøΩÔøΩxÔøΩcÔøΩkoÔøΩ-ÔøΩÔøΩÔøΩÔøΩÔøΩp.-ÔøΩÔøΩzÔøΩÔøΩ qÔøΩÔøΩZÔøΩÔøΩÔøΩIPÔøΩÔøΩ;ÔøΩtÔøΩÔøΩ[ÔøΩÔøΩÔøΩ]ÔøΩÔøΩ&ÔøΩ}ÔøΩEÔøΩÔøΩ}ÔøΩÔøΩXÔøΩ5ÔøΩmjGÔøΩ7ÔøΩÔøΩŸöW5ÔøΩ_bÔøΩH5:ÔøΩW Õé,csÔøΩÔøΩﬂΩ7ÔøΩdlÔøΩÔøΩNÔøΩ|ﬁÇNÔøΩÔøΩK+ÔøΩÔøΩ4ÔøΩÔøΩ”´MÔøΩA4ÔøΩlÔøΩÔøΩÔøΩÔøΩ–áx!ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩBÔøΩYIÔøΩÔøΩ*RÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩyhÔøΩÔøΩÔøΩDQÔøΩhÔøΩ*phÔøΩ1;ÔøΩk ÔøΩÔøΩ'jÔøΩÔøΩf|O9”∑ÔøΩ76ÔøΩeÔøΩ”¶ÔøΩÔøΩÔøΩ0vGlÕÅ\ÔøΩ'hÔøΩ◊ãÔøΩzÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩzÔøΩÔøΩ.ÔøΩÔøΩ,ÔøΩNÔøΩÔøΩQÔøΩÔøΩeU(ÔøΩÔøΩuÔøΩFTÔøΩÔøΩ8CÔøΩÔøΩPÔøΩ	ÔøΩ 9ÔøΩ]ÔøΩSÔøΩÔøΩkÔøΩ!5“•ÔøΩÔøΩ$ÔøΩÔøΩÔøΩ;&ÔøΩe&ÔøΩ>ÔøΩp~ÔøΩ1ÔøΩ+ÔøΩÔøΩÔøΩÔøΩ^wÔøΩÔøΩÔøΩÔøΩWo<ÔøΩpjdÔøΩ÷¢ÔøΩÔøΩ7=ÔøΩ–èRWÔøΩE%ÔøΩbÔøΩ<*'ÔøΩÔøΩÔøΩÔøΩFÔøΩ$bOÔøΩÔøΩ;‚éèÔøΩ5 k ÔøΩfYÔøΩMÔøΩÔøΩ:ÔøΩÔøΩ$BÔøΩÔøΩ2~ÔøΩÔøΩÔøΩÔøΩÔøΩaÔøΩ0?5ÔøΩÔøΩÔøΩKÔøΩÔøΩÔøΩÔøΩ+ÔøΩ02yÔøΩÔøΩÔøΩÔøΩÔøΩ‘í8ÔøΩ≈ß8ÔøΩÔøΩÔøΩN(ÔøΩƒô#}GÔøΩÔøΩPÔøΩÔøΩÔøΩ5ÔøΩ>ÔøΩonÔøΩÔøΩBy_ÔøΩh:""WyÔøΩ[	ÔøΩÔøΩÔøΩxÔøΩXÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ~ÔøΩeÔøΩÔøΩ=ÔøΩ1pÔøΩmZÔøΩOmÔøΩÔøΩ,?ÔøΩIÔøΩÔøΩ\>ÔøΩÔøΩÔøΩ,ÔøΩÔøΩÔøΩ_ÔøΩSMlÔøΩ	ÔøΩÔøΩzÔøΩsÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩJÔøΩzKtMÔøΩÔøΩ>ÔøΩaAŒÆÔøΩÔøΩÔøΩ ÔøΩ#ÔøΩ\ÔøΩ!^ÔøΩÔøΩÔøΩÔøΩj`gÔøΩ+oÔøΩbÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩhÔøΩh‹ñWNÔøΩm5ÔøΩ&ZIxÔøΩÔøΩnEJÔøΩÔøΩ>iT,!;ÔøΩb:PÔøΩ8.:ÔøΩÔøΩ_ÔøΩÔøΩzO,Gv 6ÔøΩÃãÔøΩ""\ÔøΩ^ÔøΩ=!8ÔøΩÔøΩÔøΩg,ÔøΩÔøΩÔøΩRÔøΩÔøΩ87ÔøΩhÔøΩÔøΩ$xÔøΩhDÔøΩhÔøΩÔøΩÔøΩÔøΩÔøΩ:U%YÔøΩ/#ÔøΩÔøΩe4ÔøΩÔøΩÔøΩQ<ÔøΩÔøΩ_ÔøΩœ∫ÔøΩ:	qÔøΩÔøΩÔøΩk:ÔøΩDÔøΩ|ÔøΩ5$ÔøΩP""ÔøΩÔøΩÔøΩP6L<ÔøΩBÔøΩÔøΩÔøΩÔøΩkÔøΩÔøΩÔøΩÔøΩ”∂ÔøΩcÔøΩÔøΩÔøΩÔøΩ}ÔøΩJﬁ´XÔøΩÔøΩÔøΩ,\ÔøΩÔøΩ.ÔøΩ«ëUTÕßRÔøΩÀ•7 ﬁöÔøΩJÔøΩÔøΩÔøΩÊèû<ÔøΩÔøΩÔøΩ,Tv}\ÔøΩ=ÔøΩkÔøΩ1ÔøΩÔøΩÔøΩtÔøΩÔøΩÔøΩÔøΩHÔøΩ#÷áÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩAÔøΩ&nOÔøΩ)zFimÔøΩa/ÔøΩÔøΩnFÔøΩ5ÔøΩÔøΩFÔøΩOÔøΩnÔøΩÔøΩUÔøΩÔøΩrÔøΩ&≈°ÔøΩÔøΩOÔøΩOÔøΩÔøΩvÔøΩÔøΩ|OÔøΩ9)ÔøΩœôÔøΩÔøΩ($ÔøΩÔøΩfÔøΩÔøΩv~ÔøΩHÔøΩ/ÔøΩ249ÔøΩBG3ÔøΩÔøΩÔøΩ=ÔøΩo÷õÔøΩOmÔøΩ.3ÔøΩÔøΩÔøΩÔøΩÔøΩ	ÔøΩÔøΩb4`ÔøΩÔøΩk' OÔøΩÔøΩÔøΩ{ÔøΩÔøΩÔøΩdÔøΩ≈à0ÔøΩ|UÔøΩÔøΩc*ÔøΩ(ÔøΩÔøΩÔøΩÊèÉÔøΩ”≠ÔøΩ	ÔøΩÔøΩÔøΩi""ÔøΩ_RU\gtÔøΩŒ∑ÔøΩ	ÔøΩd	ÔøΩ ÔøΩÔøΩÔøΩÔøΩ»Ωo7ÔøΩÔøΩFÔøΩÔøΩÔøΩÔøΩÔøΩY	d hÔøΩb""ÔøΩÔøΩ3ÔøΩMÔøΩÔøΩvÔøΩÔøΩIÔøΩBVÔøΩÔøΩ2ÔøΩzyÔøΩY!gÔøΩ∆£—¥vÔøΩ9oÔøΩEÔøΩÔøΩÔøΩÔøΩÿêÔøΩN*/ÔøΩw{ÔøΩ>ÔøΩÔøΩ OÔøΩ3gPÔøΩÔøΩÔøΩÔøΩ$ÔøΩyÔøΩ	n3ÔøΩfÔøΩGÔøΩ5oÔøΩÀáÔøΩ	QÔøΩ{ÔøΩHÔøΩ7cE:ÔøΩÔøΩÔøΩ2ÔøΩ+#ÔøΩk◊±,ÔøΩBOÔøΩÔøΩÔøΩ:&ÔøΩnzÔøΩÔøΩÔøΩNÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩg`ERÔøΩÔøΩLÔøΩÔøΩÔøΩÔøΩÔøΩSÔøΩÔøΩ[ÔøΩ÷™ÔøΩ l{ÔøΩÔøΩ+ÔøΩÔøΩ;ÔøΩÔøΩÔøΩÔøΩmÔøΩLÔøΩÔøΩÿ™+<ÔøΩJÔøΩÔøΩÔøΩÔøΩÔøΩ\ÔøΩÔøΩÔøΩÔøΩm[ÔøΩeÔøΩÔøΩ$wÔøΩkZ4}ÔøΩ ÔøΩPLÔøΩÔøΩÔøΩÔøΩÔøΩi9*,ÔøΩAÔøΩJlRHÔøΩ0ÔøΩ&YÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩpOÔøΩg%g<!ÔøΩÔøΩx.8yÔøΩÔøΩÔøΩnWÔøΩÔøΩÔøΩ$ÔøΩÔøΩÔøΩz1ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ:ÔøΩfVÔøΩ5{ÔøΩÔøΩJÔøΩfÔøΩÔøΩPÔøΩ	ÔøΩÔøΩ!$ÔøΩÔøΩGÔøΩ	KÔøΩ_bÔøΩIÔøΩÔøΩMÔøΩ?ÔøΩ‹ùÔøΩeÔøΩÔøΩÔøΩu)ÔøΩ(\ÔøΩWÔøΩ(ÔøΩNﬁåÔøΩÔøΩn#jXÔøΩÔøΩÔøΩ\ÔøΩ&[ÔøΩÔøΩ ÔøΩUÔøΩÔøΩÔøΩÔøΩÔøΩhÔøΩÔøΩÔøΩÔøΩ_ÔøΩbIÔøΩHKÔøΩÔøΩyÀ™ eÔøΩÔøΩ[{ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩf pÔøΩ1ÔøΩu{~ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩMÔøΩÔøΩDA#ÿ∑ÔøΩ6	&Íßî]WÔøΩ_ÔøΩCX	ÔøΩ>ÔøΩÔøΩ÷ú ÔøΩ+8ÔøΩ6ÔøΩÔøΩÔøΩ[ÔøΩ;[ÔøΩSÔøΩ.ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ-)AÔøΩ/ÔøΩ6ÔøΩÔøΩÔøΩÔøΩŒã2ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩuÔøΩÔøΩÔøΩÔøΩ&i*N?ÔøΩÔøΩÔøΩÔøΩ7.h""ÔøΩ;{fx%ÔøΩiIÔøΩ+ÔøΩ≈äÔøΩÔøΩÔøΩU%ÔøΩpÔøΩÔøΩÔøΩ+6ÔøΩÔøΩÔøΩS_ÔøΩÔøΩ<ÔøΩ#ÔøΩÔøΩ )ÔøΩaÔøΩ)ÔøΩ Q	SÔøΩÔøΩO/`mÔøΩvÔøΩ’¨_ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩgty@CÔøΩÔøΩÔøΩ(ÔøΩÔøΩjÔøΩNÔøΩÔøΩÔøΩO(.ÔøΩÔøΩqÔøΩÔøΩ{ÔøΩ»∏EÔøΩÔøΩnÔøΩWÔøΩÔøΩÔøΩD""&ÔøΩ7-W=≈ÖÔøΩÔøΩÔøΩÔøΩ?GÔøΩ÷Äﬁ∞ÔøΩÔøΩc3ÔøΩÔøΩÔøΩ‘ÉPlÔøΩ6ÔøΩÔøΩÔøΩÔøΩ,ÔøΩpÔøΩoÔøΩ1ÔøΩÔøΩ'ÔøΩÔøΩÔøΩFÔøΩlÔøΩÔøΩ,hÔøΩÔøΩPÔøΩÔøΩjÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ+bAÔøΩV\ÔøΩc4ÔøΩÔøΩÔøΩÔøΩuÔøΩ1ÔøΩ/1ÔøΩCÔøΩ6cÔøΩÔøΩÔøΩÔøΩ:dÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩEZ EQÔøΩI\1>ÔøΩÔøΩÔøΩ›úAÔøΩÔøΩYLS%-ÔøΩ$iÔøΩgÔøΩÔøΩ#ÔøΩFÔøΩÔøΩ(ÔøΩfEÔøΩÔøΩQ7ÔøΩÔøΩn11ÔøΩG@ÔøΩÔøΩÔøΩrÔøΩÔøΩUÔøΩÔøΩÔøΩÔøΩÔøΩ6 3ÔøΩb€ÅÔøΩt$9ÔøΩÔøΩÔøΩPÔøΩÔøΩ}ÔøΩ ÔøΩÔøΩ'ÔøΩÔøΩGGÔøΩÔøΩaÔøΩÔøΩ,ÔøΩÔøΩÔøΩÔøΩ/ÔøΩI%ÔøΩÔøΩm{ÔøΩOÔøΩÔøΩÔøΩÔøΩuxÔøΩÔøΩÔøΩÔøΩ)ÔøΩÔøΩÔøΩMÔøΩÔøΩhÔøΩÔøΩ+.ÔøΩXÔøΩ]ÔøΩ=t:ÔøΩt]ÔøΩR2ÔøΩÔøΩÔøΩ>MÔøΩmÔøΩÔøΩÔøΩlÔøΩDÔøΩÎΩ©OxÔøΩÔøΩNÔøΩ)ÔøΩ,ÔøΩÔøΩÔøΩv))ÔøΩÔøΩÔøΩrÔøΩySÔøΩÔøΩ>ÔøΩŒàÔøΩÔøΩÔøΩnÔøΩÔøΩ–§'ÔøΩÔøΩÔøΩÔøΩŒ§'TÔøΩ ﬁíbHÔøΩpLli—îÔøΩMÔøΩdÔøΩ#ÔøΩAÔøΩ9z@ÔøΩ`aÔøΩÔøΩÔøΩ#ÔøΩÔøΩJÔøΩgÔøΩÔøΩjpÔøΩ@ÔøΩÔøΩÔøΩy«á,VnÔøΩAÔøΩLÔøΩÔøΩT“ßÔøΩMÔøΩ⁄ñ6ÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩÔøΩOÔøΩ^ÔøΩuÔøΩKÔøΩÔøΩk< ÔøΩÔøΩ3=ÔøΩÔøΩ.ﬂíÔøΩÔøΩ€∞j ÔøΩQ=}gÔøΩÔøΩ◊ªÔøΩÔøΩnÔøΩ?ÔøΩ9ÔøΩ-ÔøΩÔøΩBh-5ÔøΩ$SÔøΩÔøΩÔøΩ@ÔøΩ=1ÔøΩ$xÔøΩNCÔøΩÔøΩ(aÔøΩÔøΩ Ø[CcKuÔøΩWÔøΩcÔøΩÔøΩÔøΩÔøΩ80ÔøΩ`>yÔøΩÔøΩ ÔøΩÔøΩBÔøΩÔøΩ#ÔøΩ=vGewÔøΩ F5CÔøΩÀû\ÔøΩÔøΩÔøΩ&L—±O_ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩS?iZÔøΩÔøΩÔøΩÔøΩÔøΩz)ÔøΩ-ÔøΩ7ÔøΩ6'wÔøΩÔøΩœíÔøΩÔøΩÔøΩÔøΩÔøΩ1ÔøΩÔøΩ endstream endobj 30 0 obj << /Filter /FlateDecode /Length1 2369 /Length2 17287 /Length3 0 /Length 18680 >> stream xÔøΩÔøΩÔøΩP\€∂.ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ›ù ÔøΩCÔøΩ!ÔøΩ	ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩBp ÔøΩÔøΩœπ'ÔøΩÔøΩÔøΩÔøΩzÔøΩÔøΩÔøΩ^ﬂêoÔøΩcÔøΩÔøΩÔøΩ:ÔøΩÔøΩ9ÔøΩ(rpedebÔøΩÔøΩ+ÔøΩÔøΩ XXÿôXXÔøΩ()5ÔøΩ]ÔøΩÔøΩÔøΩ""PjÔøΩ]ÔøΩA|ÔøΩ–ã;M\ÔøΩe&ÔøΩÔøΩfÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ`caÔøΩÔøΩCÔøΩ3@ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9 ](ÔøΩAÔøΩ^ÔøΩ÷ñVÔøΩÔøΩQÔøΩÔøΩ@cF`ÔøΩÔøΩÔøΩfÔøΩÔøΩ jtÔøΩ63q (ÔøΩÔøΩZÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩAfÔøΩ@WÔøΩÔøΩÔøΩÔøΩÔøΩruuÔøΩcfÔøΩÔøΩÔøΩ`2ÔøΩwa9[ ÔøΩ2 <ÔøΩ]ÔøΩ j@ÔøΩÔøΩ;ÔøΩÔøΩWÔøΩ %{ÔøΩﬂÖ1!P4ÔøΩÔøΩ]ÔøΩ%VYÔøΩzÔøΩ8ÔøΩ;k3ÔøΩÔøΩÀªÔøΩÔøΩÔøΩ9ÔøΩÔøΩÔøΩ.ÔøΩ Pv:ÔøΩÔøΩXÔøΩ_ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ{ÔøΩEdÔøΩ∑≥âÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ`am(K)0ÔøΩzÔøΩ2 LÔøΩÔøΩ24ÔøΩsÔøΩÔøΩÔøΩÔøΩÔøΩX€ôÔøΩÔøΩÔøΩÔøΩÔøΩ	@JT`ÔøΩ^ﬂøÔøΩs1sÔøΩvtuarÔøΩÔøΩÔøΩÔøΩBÔøΩhﬁõ,ÔøΩ`.ÔøΩÔøΩ:ÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩ3ÔøΩÔøΩÔøΩ^ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ_ÔøΩÔøΩÔøΩÔøΩ`ÔøΩÔøΩ»¨ÔøΩ`ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ≈ªÔøΩÔøΩÔøΩ ÔøΩdaaÔøΩÔøΩe ÔøΩ @O3+ÔøΩÔøΩ5ÔøΩÔøΩ+ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩrXÔøΩÔøΩ ÔøΩÔøΩÔøΩ ÔøΩ!ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩn@?ÔøΩ*ÔøΩ!ÔøΩÔøΩÃ≠ÔøΩ\ÔøΩ@KkÔøΩ?ÔøΩÔøΩbÔøΩ≈øÔøΩÔøΩÔøΩ;[{ÔøΩYÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ?OÔøΩÔøΩerÔøΩÔøΩÔøΩcÔøΩÔøΩÔøΩ2kÔøΩKÔøΩÔøΩÔøΩÔøΩ]ÔøΩTbb OÔøΩ#;ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ~ÔøΩÔøΩoÔøΩgÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩ]ÔøΩÔøΩÔøΩÔøΩÔøΩ}ÔøΩ4ÔøΩ^ZÔøΩs)ÔøΩÔøΩ'ÔøΩÔøΩ3ÔøΩ,ÔøΩ,fÔøΩXÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ2ÔøΩÔøΩ;)7;ÔøΩÔøΩÔøΩ4ÔøΩÔøΩ?Z{k;ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ}ÔøΩAÔøΩÔøΩÔøΩMÔøΩÔøΩÔøΩZWEÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ∫ÔøΩÔøΩÔÄ®ÔøΩÔøΩÔøΩÔøΩhÔøΩ""eÔøΩ	4WÔøΩv5ÔøΩÔøΩ◊®ÔøΩKÔøΩÔøΩ◊ÇÔøΩY; U@.ÔøΩ]( FVÔøΩÔøΩÔøΩ{ÔøΩ*3ÔøΩÔøΩKÔøΩÔøΩ}ÔøΩVﬂóÔøΩCJ:ÔøΩÔøΩÔøΩÔøΩÔøΩ.6N.ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ#NÔøΩÔøΩÔøΩÔøΩ=ÔøΩÔøΩ` 3ÔøΩÔøΩÔøΩÔøΩÔøΩ^ÔøΩÔøΩÔøΩÔøΩÔøΩyrqÔøΩEÔøΩÔøΩqÔøΩÔøΩÔøΩ n ÔøΩÔøΩÔøΩ`ÔøΩÔøΩÔøΩxÃíÔøΩAÔøΩÔøΩ,ÔøΩÔøΩÔøΩeÔøΩ v ÔøΩÔøΩÔøΩŒ¢ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩUÔøΩÔøΩw?ÔøΩ?ÔøΩÔøΩÔøΩÔøΩÔøΩgÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩGÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ}ÔøΩ4ÔøΩÔøΩÔøΩ-MÔøΩÔøΩÔøΩÔøΩÔøΩ&fÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ(ﬁ©ÔøΩÔøΩÔøΩ8ÔøΩÔøΩÔøΩ@vÔøΩÔøΩÔøΩ?ÔøΩÔøΩ$ÔøΩÔøΩÔøΩuÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩZÔøΩrr{_ÔøΩ?Ôù¥ÔøΩÔøΩ	-,ÔøΩÔøΩ‡ø¥ ÔøΩ_ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ-ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩC+/G+ÔøΩÔøΩ?,ÔøΩeÔøΩÔøΩgyoÔøΩÔøΩ?ÔøΩ{ÔøΩÔøΩLÔøΩ~ÔøΩ?ÔøΩÔøΩÔøΩÔøΩ?TÔøΩÔøΩÔøΩÔøΩÔøΩ{yÔøΩ?ÔøΩﬂùAÔøΩÔøΩ~ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ_GÔøΩÔøΩÔøΩoÔøΩÔøΩ{,GÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ\À¨AÔøΩÔøΩÔøΩÔøΩ G;7ÔøΩÔøΩ|ÔøΩ8ÔøΩÔøΩyOÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩTÔøΩÔøΩÔøΩÔøΩÔøΩ|wrÔøΩ[ÔøΩÔøΩÔøΩsÔøΩetÔøΩgkYÔøΩÔøΩCÔøΩ~ 2ÔøΩZ9ÔøΩ4ÔøΩ}ÔøΩÔøΩ]=@ÔøΩpxÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩq=ÔøΩ1	ÔøΩﬁûÔøΩÔøΩÔøΩÔøΩ^ÔøΩÔøΩÔøΩÔøΩÔøΩ”áw&oÔøΩÔøΩBÔøΩÔøΩebÔøΩÔøΩÔøΩÔøΩ\◊ø/ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩm ÔøΩhÔøΩÔøΩÔøΩ2ÔøΩÔøΩlSÔøΩÔøΩÔøΩVÔøΩ–ÉÔøΩ`ZpÔøΩÔøΩ@;ÔøΩÔøΩÔøΩg’πÔøΩÔøΩ	6ÔøΩÔøΩ&ÔøΩ”∂ÔøΩhÔøΩX?ÔøΩÔøΩwIÔøΩ[ÔøΩ5ÔøΩWÔøΩmÔøΩÔøΩ_ÔøΩU;ÔøΩ}_ÔøΩÔøΩÔøΩÔøΩ:VfqÔøΩg ÔøΩ6ÔøΩ1jÔøΩÔøΩÔøΩ:ÔøΩjÔøΩBÔøΩÔøΩÔøΩÔøΩQÔøΩ:ÔøΩÔøΩÔøΩc>xJ{6ÔøΩÔøΩOÔøΩ.ÔøΩÔøΩpÔøΩ#ÔøΩÔøΩÔøΩ3FkFÔøΩ|ÔøΩÔøΩ3ÔøΩZÔøΩ#ÔøΩqe$ÔøΩÔøΩ√∏ÔøΩDÔøΩv{ÔøΩÔøΩÔøΩ3ÔøΩF*OÔøΩÔøΩwÔøΩ^‰£∑ÔøΩÔøΩÔøΩYÔøΩÔøΩÔøΩ“ãOÔøΩÔøΩÔøΩGyÔøΩ19GÔøΩ#vÔøΩUwŸßÔøΩhÔøΩy2eÔøΩkjÔøΩ>ÔøΩÔøΩÔøΩÔøΩÔøΩ@IÔøΩÔøΩÔøΩÔøΩ àÔøΩrÔøΩÔøΩÔøΩK62jÔøΩ]&ÔøΩÔøΩÔøΩCGÔøΩÔøΩ‹∂ÔøΩÔøΩwÔøΩÔøΩÔøΩrÔøΩÔøΩÔøΩÔøΩw=ÔøΩÔøΩÔøΩÔøΩ\CjÔøΩÔøΩarÔøΩJJ`VJckÔøΩÔøΩ+ÔøΩg#CÔøΩÔøΩÔøΩ\ÔøΩÔøΩ.XÔøΩÔøΩxÔøΩ!ÔøΩ¬≥ÔøΩ∆πy3iÔøΩQÔøΩÃûÔøΩÔøΩ<ÔøΩ$ÔøΩgÔøΩ ÔøΩÔøΩÔøΩs“õBÔøΩÔøΩÔøΩTÔøΩÔøΩÔøΩ,ÔøΩÔøΩÔøΩaGÔøΩÔøΩ@ !ÔøΩÔøΩJÔøΩc2ÔøΩÔøΩÔøΩ2vkuÔøΩÔøΩTÔøΩÔøΩmÔøΩXÔøΩÔøΩÔøΩÔøΩ2Z ÔøΩÔøΩÔøΩ#qtTOÔøΩÔøΩx4jﬂΩÔøΩz]hÔøΩeÔøΩ#ÔøΩÔøΩ€ÉÔøΩÔøΩÔøΩ 	ÔøΩdvÔøΩ}ÔøΩÔøΩTÔøΩÔøΩÔøΩÔøΩ6ÔøΩ^ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩHÔøΩM41ÔøΩA6ÔøΩ>ÔøΩÔøΩjÔøΩlÔøΩÔøΩÔøΩ&0AÔøΩ%ÔøΩÔøΩnÔøΩKÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ’∞ÔøΩÔøΩ ÔøΩC#+ÔøΩ?@ÔøΩRJ+]v/ÔøΩ2ÔøΩw1ÔøΩÔøΩ ÔøΩ'ÔøΩ8ÔøΩÔøΩÔøΩFÔøΩSfcÔøΩYÔøΩÔøΩÔøΩD1ÔøΩJ2ÔøΩÔøΩÔøΩÔøΩÔøΩX<y≈∂<EÔøΩVÔøΩ@ÔøΩ}4ÔøΩ\6 r OÂâçEÔøΩÔøΩ›ÄÔøΩcÔøΩÔøΩ{ÔøΩÔøΩ“§ÔøΩÔøΩh[!pd—ÉÔøΩJPÔøΩÔøΩFÔøΩÔøΩÔøΩAeÔøΩÔøΩÔøΩ=ÔøΩÔøΩNj""ÔøΩÔøΩ	ÔøΩÔøΩSÔøΩÔøΩgÔøΩÔøΩkÔøΩr ÔøΩÔøΩEp ÔøΩÔøΩÔøΩÔøΩÔøΩS-ÔøΩÔøΩ yÔøΩÔøΩÔøΩÔøΩÔøΩPÔøΩo_:hÔøΩzCÔøΩBÔøΩÔøΩAÔøΩoCEÔøΩÔøΩO}ÔøΩ'J@ÔøΩÔøΩS6g5ÔøΩSÔøΩÔøΩ:""ÔøΩW	ÔøΩÔøΩÔøΩÔøΩÔøΩNKÔøΩÔøΩÔøΩÔøΩR<vlÔøΩ6[oÔøΩj=ÔøΩ'u;}ÔøΩÔøΩÔøΩs+ÔøΩ9EÔøΩÔøΩÔøΩ* ßÔøΩD@ÔøΩÔøΩÔøΩZNYÔøΩ\hjÔøΩC'CÔøΩÔøΩ(ÔøΩÔøΩÔøΩnÔøΩÔøΩ3ÔøΩ'7ÔøΩÔøΩÔøΩ^6QÔøΩZÔøΩÔøΩy1j!ÔøΩfÔøΩDﬂúÔøΩ0ÔøΩtÔøΩYÔøΩgjÔøΩÔøΩGÔøΩÔøΩÓÇ∂ÔøΩRL-ÔøΩzÔøΩUÔøΩ ÔøΩWÔøΩl/	\""ÔøΩwOÔøΩ@3ÔøΩÔøΩ{VÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩyÔøΩAÔøΩpÔøΩVÔøΩE%KuÔøΩÔøΩ=ÔøΩÔøΩoÔøΩPgÔøΩÔøΩÔøΩÔøΩ""ÔøΩÔøΩÔøΩÔøΩbJ€ïÔøΩÔøΩ:ÔøΩÔøΩ÷®ÔøΩ dH$dÔøΩÔøΩUÔøΩÔøΩ~uÔøΩu	h}ÔøΩwQÔøΩÔøΩ#ÔøΩÔøΩÔøΩ}◊òuÔøΩFÔøΩÔøΩÔøΩÔøΩcslÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ=ÔøΩ5ÔøΩÔøΩÔøΩÔøΩÔøΩcÔøΩn?ÔøΩÔøΩÔøΩÔøΩ6RÔøΩÔøΩ¬®ÔøΩcÔøΩÔøΩDXKiÔøΩÔøΩu,ÔøΩMÔøΩÔøΩÔøΩuÔøΩ5/2ÔøΩR’•ÔøΩÔøΩ≈ÅÔøΩy]ÔøΩ ÔøΩ':ÔøΩÔøΩÔøΩjxlÔøΩÔøΩÔøΩeÔøΩOÔøΩS(A/1ÔøΩÔøΩ<ÔøΩWjÔøΩÔøΩ_ÔøΩ%:ÔøΩNfœ¢ÔøΩÔøΩÔøΩÔøΩÔøΩO\ÔøΩÔøΩÔøΩÔøΩÔøΩIg&ÔøΩ/ÔøΩgÔøΩÔøΩ⁄±ÔøΩ]ÔøΩ_ ∆∫zÔøΩÔøΩÔøΩÔøΩ2ÔøΩÔøΩÔøΩ30ÔøΩÔøΩ{ÔøΩÔøΩjÔøΩ=pCÔøΩe-ÔøΩÔøΩPÔøΩÔøΩx/ÔøΩÔøΩÔøΩÔøΩÔøΩZ(#ÔøΩÔøΩzÔøΩp|ÔøΩu]~nÔøΩ	ÔøΩeÔøΩÔøΩÔøΩÔøΩQzdÔøΩ5ÔøΩRÔøΩÔøΩÔøΩÔøΩÔøΩ7ÔøΩ ÔøΩÔøΩÔøΩrÔøΩVÔøΩÔøΩÔøΩËµ£3EÔøΩgRÔøΩÍÑ£]XnÔøΩÔøΩÔøΩ[ÔøΩÔøΩÔøΩÔøΩÔøΩƒπÔøΩmÔøΩ;ÔøΩÔøΩ}ÔøΩÔøΩÔøΩHÔøΩ(cÔøΩÔøΩÔøΩcc -ÔøΩÔøΩÔøΩ0ÔøΩ2zÔøΩÔøΩÔøΩÔøΩ5ÔøΩÔøΩÔøΩyÔøΩ	nÔøΩÔøΩÔøΩÔøΩRÔøΩFÔøΩÌêÇÔøΩ`ÔøΩÔøΩXÔøΩﬂ≤FCÔøΩC-ÔøΩR)ÔøΩÔøΩ[z‘Ñ:ÔøΩ""T!!ÔøΩQ]En&F⁄æÔøΩ;7ÔøΩÔøΩÔøΩ\xÔøΩ'JÃÖÔøΩÔøΩ`ÔøΩÔøΩjNÔøΩÔøΩÔøΩ$gÔøΩÔøΩ%CÔøΩo-qÔøΩ—ØÔøΩ÷éÔøΩMÔøΩXÔøΩBfkÔøΩ4ÔøΩÔøΩ `ÔøΩÔøΩD'3ÔøΩ*aÔøΩÔøΩocÔøΩC@ÔøΩ9ÔøΩ ÔøΩ›ëÔøΩÔøΩÔøΩnc$ÔøΩÔøΩÔøΩsskGÔøΩÔøΩXÔøΩÔøΩLcÔøΩ""-$ÈÑë#Ã†ÔøΩÔøΩlY BÔøΩÔøΩ ]ÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩ5!ÔøΩÔøΩU$ÔøΩÔøΩ/ÔøΩe’∏=EÔøΩCÔøΩﬁëÔøΩQ\=ÔøΩÔøΩÔøΩ!8ÔøΩ:wRZIwÔøΩ ûrÔøΩO6RÔøΩ≈üÔøΩhÔøΩu∆∫ ÔøΩgÔøΩDÔøΩ4ÔøΩGÔøΩÔøΩ|ÔøΩÔøΩÔøΩ;ÔøΩbV@wÔøΩ_:^3=ÔøΩÔøΩ”™ÔøΩÔøΩ{?ÔøΩ.R88«àÔøΩOdÔøΩCÔøΩbÔøΩÔøΩÔøΩ[ÔøΩÔøΩÔøΩ&ÔøΩÔøΩBÔøΩy›ºÔøΩÔøΩÔøΩ√âVg{ÔøΩ>ÔøΩÔøΩÔøΩ9BÔøΩÔøΩÔøΩPÔøΩx>JÔøΩAbÔøΩ\{HÔøΩÔøΩÔøΩÔøΩm›ÆÔøΩÔøΩÔøΩbx5ÔøΩVÔøΩÔøΩY·ãüÔøΩ∆•ÔøΩÔøΩÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩ ÔøΩeÔøΩÔøΩyÔøΩÔøΩÔøΩ;ÔøΩA-ÔøΩXÔøΩ”áGÔøΩkÔøΩ$UÔøΩs^ÔøΩÔøΩÔøΩSÔøΩÔøΩ2-BÔøΩÔøΩ<ÔøΩÔøΩPÔøΩÔøΩ*ÔøΩÔøΩÔøΩ]Zu>Ds91ÔøΩ~VDÔøΩÔøΩÔøΩ|ÔøΩÔøΩ]ÔøΩ&cfÔøΩnwÔøΩkÔøΩU/HÔøΩÔøΩÔøΩ|ÔøΩÔøΩz#3:ÔøΩÔøΩ>`œîw◊ÇIKÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩÔøΩcÃ∑ÔøΩÔøΩ5ÔøΩ3}!ÔøΩiÔøΩÔøΩ‹ávqÔøΩNÔøΩ ÔøΩÔøΩÔøΩÔøΩ8ÔøΩMÔøΩÔøΩÔøΩÔøΩbÔøΩÔøΩÔøΩ>ÔøΩÔøΩ_ÔøΩÔøΩÔøΩÔøΩSÔøΩFÔøΩÔøΩÔøΩ1ÔøΩÔøΩ)zG*ÔøΩ;ÔøΩ4ÔøΩ}ÔøΩÔøΩ;eÔøΩN÷∫"" GÔøΩhÔøΩÔøΩÔøΩ8ÔøΩÔøΩAX“®ÔøΩuÔøΩOÔøΩ‘¶szÔøΩÔøΩ}œÑxÔøΩÔøΩCÔøΩÔøΩ=|Vu.!ÔøΩKgÔøΩ'EÔøΩ/ÔøΩ ÔøΩÔøΩmÔøΩ7‰îÇ)ÔøΩÔøΩÔøΩ‚≠â RÔøΩÔøΩ>x6ÔøΩ ÔøΩÔøΩvcÔøΩ7N7ÔøΩJÔøΩ'jÔøΩÔøΩÔøΩÔøΩ6@'ÔøΩÔøΩcÿæÔøΩÔøΩhÔøΩÔøΩNL\ÔøΩÔøΩ«ÖÔøΩUUI7JÔøΩÔøΩc{28pp1DSg']'|7pÔøΩÔøΩ bÀëÔøΩA0ÔøΩBGÔøΩÔøΩÔøΩÔøΩ*ÔøΩ:ÔøΩUUQlsÔøΩÔøΩÔøΩÔøΩÔøΩEÔøΩÔøΩ_A?Umi|ÔøΩgÔøΩÔøΩÔøΩÔøΩÔøΩG'ÔøΩyLÔøΩG)ÔøΩAkÔøΩdÔøΩl1*ÔøΩJlÔøΩÔøΩ8UÔøΩcÔøΩÔøΩÔøΩi#ÔøΩ-ÔøΩÔøΩÔøΩ(.HKÔøΩÔøΩÔøΩM0Ïå¨€®bSÔøΩÔøΩÔøΩI9ÔøΩN“çÔøΩ“≠ÔøΩÔøΩÔøΩÔøΩÔøΩZÔøΩÔøΩ}ÔøΩRÔøΩPJÔøΩLÔøΩqÔøΩ#ÔøΩÔøΩÔøΩÔøΩÔøΩ1ÔøΩzpÔøΩ#nÔøΩy%ÔøΩÔøΩÔøΩÔøΩJÔøΩ_ÔøΩp]ÔøΩ–çEÔøΩÔøΩMÔøΩÔøΩÔøΩÔøΩ""ÔøΩÔøΩsÔøΩ$ÔøΩÔøΩiÔøΩu3ÔøΩÔøΩÔøΩÔøΩÔøΩbÔøΩÔøΩÔøΩÔøΩpÔøΩ+-ÔøΩ4¬êrÔøΩÔøΩÔøΩ@qÔøΩVÔøΩÔøΩ*ÔøΩÔøΩÔøΩ ~ÔøΩÔøΩdBÔøΩÔøΩÔøΩsÔøΩÔøΩ}&ÔøΩ)rÔøΩÔøΩÔøΩÔøΩIGÔøΩÔøΩ$ÔøΩÔøΩÔøΩÔøΩ=ÔøΩ*nÔøΩÔøΩÔøΩ≈àwÔøΩÔøΩÔøΩÔøΩÔøΩ./ÔøΩk/ÔøΩÔøΩÔøΩN/ÔøΩ#ÔøΩÔøΩV_nÔøΩ4( xÔøΩ ÔøΩ,ÔøΩ JqÔøΩÔøΩNÔøΩÔøΩxzÔøΩÔøΩ~4CÔøΩ{ÔøΩÔøΩÔøΩ(ÔøΩpÔøΩÔøΩÔøΩ|ÔøΩÔøΩ5R3ÔøΩ-ÃîÔøΩq*ÔøΩÔøΩÔøΩÔøΩÔøΩwÔøΩ\XÔøΩRÔøΩÏÆß6ÔøΩ ÔøΩÔøΩÔøΩsp`Œå]ÔøΩ*ÔøΩÔøΩFÔøΩÔøΩ`ÔøΩnÔøΩÔøΩlÔøΩF≈ºÔøΩÔøΩÔøΩÔøΩkÔøΩXeÔøΩL~ÔøΩÔøΩ+ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩ#jÔøΩÔøΩÔøΩ“™FÔøΩ/ÔøΩX8ÔøΩÔøΩN8ZÔøΩÔøΩVÔøΩÔøΩOÔøΩmDÔøΩÔøΩÔøΩ2ÔøΩÔøΩÔøΩÔøΩÔøΩB °JÔøΩÔøΩkWKÔøΩÔøΩHqotÔøΩÔøΩÔøΩRÔøΩneÔøΩÔøΩ<ÔøΩÔøΩÔøΩÃ∞⁄§ÔøΩÔøΩ9ÔøΩÔøΩBKÔøΩ3,ÔøΩ0$c`ÿπÔøΩfÔøΩÔøΩÔøΩ$%ÔøΩÔøΩ!ÔøΩ+CÔøΩ1ÔøΩ.ÔøΩ=ÔøΩ;ÔøΩGŸÅ ÔøΩÔøΩ…°ÔøΩ|hlxÔøΩÔøΩÔøΩÿ£√á.u7[/w2Œ∫u	oÔøΩÔøΩÔøΩ BjÔøΩÔøΩÔøΩÔøΩiÔøΩœ™ÔøΩÔøΩTKÔøΩÔøΩÔøΩÔøΩ-ÔøΩjxfÔøΩTÔøΩÔøΩrÔøΩÔøΩHÔøΩÔøΩÔøΩÔøΩÔøΩ+ÔøΩÔøΩÔøΩÔøΩVÔøΩ”ÜƒôÔøΩÔøΩÔøΩ€ìÔøΩrÕ£ÔøΩm$ÔøΩÔøΩÔøΩK,U(ÔøΩÔøΩs,ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ<v{|N:UE[ÔøΩ KÔøΩ⁄§-eeÔøΩFÔøΩJ""?÷¢\«ÉÔøΩÔøΩÔøΩÔøΩZ;9ÔøΩhÔøΩÔøΩM|ÔøΩ(ÔøΩ%ÔøΩuÔøΩiÔøΩmÔøΩÔøΩ:ÔøΩÔøΩ&ÔøΩÔøΩÔøΩÔøΩ3ÔøΩtÔøΩ|B];nÔøΩÃòÔøΩAe/nÔøΩÔøΩKÔøΩPÔøΩÔøΩ\ÔøΩfÔøΩÔøΩ/ÔøΩÔøΩÔøΩÔøΩÔøΩ&ÔøΩ4ÔøΩÔøΩÔøΩQ=ÔøΩ*ÔøΩr\‰ñûÔøΩQwÔøΩÔøΩh«∏ÔøΩÔøΩnÔøΩCÔøΩÔøΩÔøΩneolÔøΩÔøΩÔøΩÔøΩBÔøΩÔøΩJÔøΩzÔøΩÔøΩ%ÔøΩÔøΩ\ÔøΩBÔøΩ/ÔøΩÔøΩ2ÔøΩÔøΩ)ÔøΩx]ÔøΩÔøΩÔøΩ*ÔøΩÔøΩ’πÔøΩÔøΩZJÔøΩ*wÔøΩ[vÔøΩ9ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ$ÔøΩfÔøΩÔøΩÔøΩ$7ÔøΩ8ÃäÔøΩÔøΩ|OÔøΩÔøΩQÔøΩPÔøΩÔøΩÔøΩjÔøΩÔøΩÔøΩ<ÔøΩMÔøΩ/ÔøΩ^. :#ÔøΩÔøΩ.ÔøΩÔøΩÔøΩ4EÔøΩÔøΩÔøΩ=UÔøΩÔøΩÔøΩÔøΩÔøΩrÔøΩÃúÔøΩjl%H6[#(ÔøΩÔøΩD ÔøΩPÔøΩÔøΩÔøΩRaÔøΩÔøΩÔøΩ'”ø_hÔøΩFÔøΩcÔøΩJÔøΩ4YÔøΩ5[ÔøΩÔøΩÔøΩÔøΩ,ÔøΩeÔøΩÔøΩÔøΩÔøΩ»ïÔøΩÔøΩÔøΩJÔøΩ9fhÔøΩÔøΩÔøΩ-vÔøΩÔøΩÔøΩÔøΩtÔøΩXÔøΩ%LÔøΩBBÔøΩÔøΩ⁄¨ÔøΩXÔøΩ ?ÔøΩLnÔøΩÔøΩgÔøΩÔøΩÔøΩ ÔøΩ8ÔøΩÔøΩ/ÔøΩÔøΩÔøΩeÔøΩ>ÔøΩÔøΩÔøΩÂåüÔøΩyÔøΩÔøΩÔøΩÔøΩÔøΩ1F2OÔøΩ ÕæÔøΩÔøΩÔøΩdÔøΩ_-ÔøΩGÔøΩÔøΩfÔøΩSÔøΩÔøΩÔøΩl-…éÔøΩÔøΩoÔøΩ:ÔøΩÔøΩÔøΩ«µX,y√ùÔøΩ ~@ÔøΩ'ÔøΩÔøΩ4<ÔøΩnÔøΩqÔøΩ_ÔøΩJ…≤ÔøΩNzÔøΩÔøΩÔøΩÔøΩ2lj9ÔøΩ4ÔøΩÔøΩl}fkh=ÔøΩÔøΩkÔøΩwÔøΩ ÔøΩ+l2»£KÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ.{“âUÔøΩOÔøΩ""ÔøΩjgÔøΩ#2ÔøΩÔøΩ ÔøΩÔøΩHgÔøΩ)ÔøΩÔøΩÔøΩPQÔøΩQT:ÔøΩ$1ÔøΩlÔøΩ+ek ÔøΩÔøΩÔøΩwÔøΩÔøΩw#ƒåFÔøΩÔøΩz8ÔøΩÔøΩd5@#ÔøΩTlÔøΩÔøΩÔøΩNÔøΩÔøΩÔøΩÔøΩ]ÔøΩÔøΩPÔøΩ÷ºÔøΩW=ÔøΩÔøΩÔøΩ9ÔøΩÔøΩxMÔøΩÔøΩÔøΩy7Z3]ÔøΩ8ÔøΩTÔøΩÔøΩ8!ÔøΩÔøΩiÔøΩﬁòÔøΩÔøΩÔøΩ“ªÔøΩ#ÔøΩHÔøΩÔøΩdÔøΩÔøΩÔøΩ5RÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩ‹ï;ÔøΩUÔøΩeÔøΩ_ÔøΩeÔøΩmÔøΩ8ÔøΩMÔøΩÔøΩ—öÔøΩ""ÔøΩsÔøΩ[ÔøΩÔøΩÔøΩÔøΩnÔøΩ1ÔøΩks HÔøΩLÔøΩ'IÔøΩÔøΩÔøΩN ÔøΩ›á@ÔøΩOÔøΩqÔøΩÔøΩÔøΩÔøΩmÔøΩQ/!6+_B3ÔøΩpJÔøΩÔøΩjVÔøΩÔøΩÔøΩL$VXÔøΩÔøΩÔøΩV0ÔøΩEÔøΩÔøΩJÔøΩÔøΩX‘ôÔøΩ!ÔøΩ'ÔøΩKÔøΩ^ÔøΩÔøΩVÔøΩGÔøΩÔøΩVÔøΩÔøΩÔøΩÔøΩ;ÔøΩÔøΩ[ÔøΩ8ÔøΩRÔøΩv.#ÔøΩVZÔøΩÔøΩBÔøΩzÔøΩÔøΩK}ÔøΩÔøΩÔøΩÔøΩÔøΩÛ•≥ØO""ÔøΩ.KÔøΩ`ÔøΩÔøΩrÔøΩ""ÔøΩÔøΩÔøΩÔøΩÔøΩ3ÔøΩrdÔøΩÔøΩÔøΩ>ÔøΩy –ÑÔøΩIMÔøΩÔøΩ3ÔøΩ ÔøΩÔøΩÔøΩ^ÔøΩ/V|ÔøΩhÔøΩÔøΩÔøΩ=ÔøΩ1ÔøΩZÔøΩcT6ÔøΩÔøΩ]“ïÔøΩ[L5ÔøΩ1U/ÔøΩÔøΩÔøΩmrÔøΩ<%ÔøΩxÔøΩÔøΩtdTÔøΩÔøΩÔøΩÔøΩ*1ÔøΩÔøΩ(~ÔøΩH?^ÔøΩ ÔøΩÔøΩBÔøΩ(ÔøΩ ÔøΩÔøΩÔøΩuUDÔøΩkÔøΩ}ÔøΩÔøΩ6ÔøΩÔøΩFQWÔøΩÔøΩ,@Q ]ÔøΩ3ÔøΩÔøΩ ÔøΩ)eFSÔøΩ|GÔøΩWOÔøΩÔøΩLÔøΩ6~ÔøΩU::7ÔøΩÔøΩ“úlÔøΩÔøΩÔøΩi›ïÔøΩ8ÔøΩtÔøΩ ÔøΩÔøΩuAFLwÔøΩÔøΩÔøΩÔøΩFÔøΩ&{zÔøΩ2ÔøΩÔøΩE: :LGÔøΩÔøΩÔøΩW!ÔøΩV:ÔøΩÔøΩÔøΩmYÔøΩÔøΩ88,SÔøΩgÔøΩ/6f)ÔøΩNÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ÷§NÔøΩÔøΩwhÈççÿ¨ÔøΩÔøΩÔøΩ""ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩmÔøΩÔøΩÔøΩÔøΩ3ÔøΩgÔøΩ_\ÔøΩ]ÔøΩiÔøΩÔøΩ%ÔøΩÔøΩGYÔøΩCÔøΩÔøΩk)ÔøΩAÔøΩÔøΩL>ÔøΩj	ÔøΩtÔøΩUÔøΩÔøΩ ›öÔøΩÔøΩÔøΩ*ÔøΩ}_ÔøΩm`ÔøΩÔøΩÔøΩ&6ÔøΩ,ÔøΩÔøΩÔøΩmÔøΩ|÷ûxYn?@&ÔøΩ2ÔøΩÔøΩÔøΩÔøΩÔøΩ9ÔøΩpÔøΩÔøΩN&ÔøΩÔøΩÔøΩÔøΩÔøΩ+ÔøΩÔøΩÔøΩ_)ÔøΩ{ÔøΩ^P, \ÔøΩÔøΩÔøΩÔøΩÔøΩ^ÔøΩÔøΩyÔøΩÔøΩÔøΩ(.ÔøΩÔøΩ —µtYÔøΩHÔøΩXFQÔøΩz +ÔøΩÔøΩÔøΩÔøΩUÔøΩÔøΩ$ÔøΩÔøΩÔøΩÔøΩ,nÔøΩÔøΩÔøΩKÔøΩfAÔøΩz(sÔøΩÔøΩ|Y{ÔøΩ ÔøΩQÔøΩwsÔøΩ5ÔøΩHjÔøΩÔøΩÔøΩÔøΩ#7ÔøΩ:OÔøΩ}ÔøΩnÔøΩrÔøΩ?ÔøΩ*ÔøΩqÔøΩ ÔøΩÔøΩrmÔøΩÔøΩÔøΩÔøΩJÔøΩgÔøΩÔøΩÔøΩXXÔøΩuÔøΩÔøΩÔøΩaÔøΩÔøΩÔøΩR""ÔøΩ_5ÔøΩÔøΩJ_`}–ëÔøΩO?ÔøΩPÔøΩÔøΩÔøΩÊ∑ìÔøΩU}uac◊âÔøΩÔøΩ$ÔøΩ$8fÔøΩ ÔøΩÔøΩ⁄∂AÔøΩÔøΩ.ÔøΩÔøΩ[6ÔøΩÔøΩ9YÔøΩ(ÔøΩÔøΩÔøΩd`ÔøΩ9ÔøΩyfÔøΩÔøΩ=ÔøΩ◊´ÔøΩÔøΩ”¢ÔøΩ;/stlÔøΩÔøΩUÔøΩrÔøΩYÔøΩÔøΩq7ÔøΩÔøΩ@>=ÔøΩÔøΩÔøΩ:NT#lpÔøΩ+ÔøΩ.~UÔøΩÔøΩeÔøΩÔøΩÔøΩuÔøΩÔøΩiKÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩM'ÔøΩjÔøΩ6ÔøΩÔøΩ]eXÔøΩÔøΩÔøΩiÔøΩÔøΩÔøΩh ÔøΩÔøΩ&ÔøΩ-ÔøΩ∆ñEÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩgÔøΩYÔøΩÔøΩDXÔøΩÔøΩ ÔøΩÔøΩÔøΩ>ÔøΩÔøΩÔøΩÔøΩH2ÔøΩÔøΩ;#ÔøΩhyÔøΩ/ÔøΩÔøΩEÔøΩeÔøΩÔøΩWÔøΩ?@ ÔøΩKÔøΩÔøΩÔøΩÔøΩWÔøΩLÔøΩÔøΩÔøΩPaÔøΩO0ÔøΩ"")ÔøΩf2ÔøΩTÔøΩÔøΩÔøΩÔøΩ,|ÔøΩÔøΩÔøΩÔøΩvÔøΩ(ÔøΩÔøΩh ÔøΩ31ÔøΩÔøΩ{ÔøΩÔøΩÔøΩÔøΩÔøΩ9ÔøΩÔøΩ ∆ãÔøΩBGÔøΩÔøΩÔøΩﬂà¬∑ÔøΩ8ÔøΩÔøΩ~JÔøΩnÔøΩgV)ÔøΩI“âÔøΩÿómx ÔøΩoÔøΩ1ÔøΩÔøΩZ1ÔøΩÔøΩ[txRÔøΩÔøΩ'ÔøΩVÔøΩÔøΩÔøΩMÔøΩz>ÔøΩQÔøΩÔøΩ&ÔøΩIÔøΩVwiÔøΩ	ÔøΩÔøΩÔøΩÔøΩÔøΩ)ÔøΩÔøΩÔøΩ]z^>pv:»ëÔøΩÔøΩ Íâ´ÔøΩTÔøΩÔøΩÔøΩÔøΩ2~ÔøΩ {/sÔøΩRÔøΩq]ÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ›íU ÔøΩÔøΩÔøΩ<o0ÔøΩÔøΩÔøΩT ÔøΩdÔøΩÔøΩÔøΩ]ÔøΩÔøΩÔøΩ/ÔøΩeÔøΩÔøΩ:*ÔøΩÔøΩÔøΩÔøΩÔøΩBÔøΩ3ÔøΩÔøΩÔøΩqVÔøΩ0ÔøΩÔøΩÔøΩHÔøΩ6ÔøΩÔøΩ2ÔøΩ$ÔøΩÔøΩÔøΩTÔøΩÔøΩW8& ÔøΩÔøΩÔøΩ<ÔøΩrÔøΩo+ÔøΩjÔøΩ@=ÔøΩN^RÔøΩrÔøΩfÔøΩPÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9ÔøΩÔøΩÔøΩuYxedL{vÔøΩÔøΩaÔøΩÔøΩÔøΩÔøΩ0~ÔøΩÔøΩÔøΩLeÔøΩ-…ß4ÔøΩÔøΩÔøΩ{/ÔøΩÔøΩJÔøΩXÔøΩccÔøΩ2ÔøΩF^ÔøΩ;ÔøΩÔøΩÔøΩcÔøΩÔøΩÔøΩzaÔøΩi+ÔøΩ*ÔøΩÕâÔøΩ-ÔøΩÔøΩ|ÔøΩÔøΩÔøΩ}ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ0ÔøΩ&|CÔøΩÔøΩÔøΩ0ÔøΩ’∂ÔøΩÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩw.ÔøΩ2`ÔøΩÔøΩKÔøΩÔøΩtÔøΩXÔøΩCKlÔøΩÔøΩÔøΩdx÷ã2ÔøΩsT:ÔøΩÔøΩe:;p!(ÔøΩ«ÄÔøΩÔøΩHÔøΩÔøΩÔøΩÔøΩfÔøΩ{ÔøΩ`ÔøΩÔøΩoÔøΩÔøΩÔøΩ^{ÔøΩTÔøΩ}>ÔøΩÔøΩyÔøΩÔøΩ8ÔøΩÕè^Sl;pyÔøΩÔøΩÔøΩDÔøΩÔøΩ\ÔøΩÔøΩÔøΩr?BNÔøΩ""^∆Æ›Ç~ÔøΩÔøΩÔøΩ“óÔøΩÔøΩgÔøΩFH ÔøΩÔøΩx2ÔøΩxÔøΩÔøΩ<z3dÔøΩ ÔøΩÔøΩS5""ÔøΩ U`EÔøΩy=RÔøΩV ÔøΩ}itÔøΩ/pÔøΩ9ÔøΩlÔøΩÔøΩ&ÔøΩÔøΩ)[ÔøΩÔøΩrÔøΩsC`ÔøΩÔøΩÔøΩ""ÔøΩ@FÔøΩxÔøΩÔøΩYrÔøΩKÔøΩÔøΩÔøΩ{RÔøΩÔøΩÔøΩÔøΩ>YÔøΩptÔøΩj1ÔøΩ/ÔøΩÔøΩÔøΩ–ìÔøΩt*=ÔøΩ6'ÔøΩÔøΩSÔøΩÔøΩÔøΩ;FÔøΩ>ÔøΩ)Õ∞*ÔøΩrÔøΩ^cÔøΩgÔøΩUkÔøΩÔøΩ^D|*ÔøΩ0I ∆´{ÔøΩÔøΩr/	_ÔøΩÔøΩl>~G ÔøΩÔøΩOÔøΩÔøΩÔøΩ[>RÔøΩq]ÔøΩÔøΩ^ÔøΩÔøΩfÔøΩÔøΩÔøΩ	ÔøΩ—è 7^ÔøΩ""ÔøΩ1,.[BoJ$ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩ7ÔøΩ{dÔøΩ3ÔøΩÔøΩ(]ÔøΩjM+ÔøΩÔøΩjÔøΩ ÔøΩfÔøΩÔøΩrÔøΩ;ÔøΩXÔøΩÔøΩÔøΩ$}ÔøΩÔøΩqu|D;RÔøΩÔøΩ-ÔøΩÔøΩvÔøΩÔøΩoÔøΩmb#ÔøΩVÔøΩÔøΩÔøΩ5ÔøΩpÔøΩ`1ÔøΩÔøΩ’îg≈óÔøΩd ÔøΩÔøΩÔøΩ3c\ÔøΩjÔøΩÔøΩÔøΩEHÔøΩÔøΩyÔøΩ6ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩBÔøΩÔøΩ’ûÔøΩÔøΩXÔøΩ3ÔøΩÔøΩÔøΩJ!ÔøΩÔøΩ5ÔøΩ\,√ÅÔøΩT\ÔøΩÔøΩ ÔøΩÔøΩ’ìÔøΩoÔøΩv0ÔøΩÔøΩHW+kÔøΩÔøΩÔøΩhÔøΩeSÔøΩSIEÔøΩ_jÔøΩÔøΩhEÔøΩtÔøΩ9C=ÔøΩhÔøΩ\KÔøΩÔøΩu ß&ÔøΩnÔøΩ{ÔøΩ|ÔøΩMwÔøΩoÔøΩÔøΩÔøΩwÔøΩ&[ÔøΩI}ÔøΩw≈©ÔøΩM_ÔøΩfÔøΩ1)ÔøΩ[^ÔøΩÔøΩÔøΩÔøΩ""ÔøΩÔøΩ@.8ÔøΩÔøΩ'ÔøΩcÔøΩWÔøΩÔøΩÔøΩAÔøΩ”†ÔøΩÔøΩ,rÔøΩÔøΩÔøΩÔøΩÔøΩ&ÔøΩ,ÔøΩ]ÔøΩ	t$ÔøΩFw9cqÔøΩÔøΩYmÔøΩ,#ÔøΩÔøΩ@ÔøΩÔøΩÔøΩ#,ÔøΩPKÔøΩwÔøΩÔøΩp>mÔøΩ:ÔøΩÔøΩbtÔøΩÔøΩÔøΩeÔøΩbÔøΩÔøΩÔøΩaÔøΩrÔøΩÔøΩmÔøΩu>OÔøΩÔøΩÔøΩ^ÔøΩ ÔøΩeDÔøΩÔøΩLÔøΩÔøΩÔøΩO3ÔøΩÔøΩÔøΩÔøΩ*6ÔøΩÔøΩ&ÔøΩÔøΩwÔøΩÔøΩÔøΩKÔøΩ~ÔøΩÔøΩ*ÔøΩÔøΩÔøΩeÔøΩz⁄óÔøΩiÔøΩp ÔøΩÔøΩÔøΩ09npRÔøΩÔøΩÔøΩ`aÔøΩfÔøΩ{œ∏\ÔøΩÔøΩ'ÔøΩÔøΩqÔøΩÔøΩÔøΩÔøΩ3ÔøΩÔøΩ>ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩSzﬂ•~ÔøΩHÔøΩ64ÔøΩÔøΩÔøΩ5 ÔøΩﬁØOÔøΩÔøΩUÔøΩÔøΩÔøΩmÔøΩlÔøΩmt3a'qÔøΩKÔøΩÔøΩT%ÔøΩÔøΩÀπÔøΩ‘∂ÔøΩÔøΩÔøΩXÔøΩÔøΩ.2ÔøΩCÔøΩÔøΩÔøΩ^ÔøΩÔøΩÔøΩ+ÔøΩÔøΩQÔøΩÔøΩÔøΩÔøΩeÔøΩuÔøΩ6ÔøΩÔøΩÔøΩb-ÔøΩb=ÔøΩÔøΩÔøΩÔøΩrÔøΩ7ÔøΩÔøΩ]ÔøΩtÔøΩ}zÔøΩqÔøΩuÔøΩÔøΩoÔøΩÔøΩ2ÔøΩÔøΩDÔøΩÔøΩÔøΩFÔøΩoÔøΩÔøΩXÔøΩxrBd/ÔøΩ8ÔøΩbÔøΩÔøΩÔøΩuA ÔøΩÔøΩvGsÔøΩÔøΩ-ÔøΩWÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩ~~ÔøΩÔøΩÔøΩ7ÔøΩL3ÔøΩhz"":]ÔøΩkÔøΩ3ÔøΩ4ÔøΩÔøΩJÔøΩ&ÔøΩÔøΩWÔøΩ;HtÔøΩÔøΩrLÔøΩ: öÔøΩÔøΩÔøΩnÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩLÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩ{7MNÔøΩSÔøΩÔøΩZÔøΩrÔøΩ>ÔøΩR,»ü=ÔøΩÔøΩVÔøΩÔøΩjÔøΩTsÔøΩ9ÔøΩÔøΩÔøΩp/ÔøΩNÔøΩÔøΩzÔøΩÔøΩ~ÔøΩÔøΩÔøΩÔøΩÔøΩ+ÔøΩÔøΩÔøΩÔøΩ3ÔøΩhÔøΩÔøΩuWÔøΩÕ¨FÔøΩMÔøΩ'ÔøΩ[T|)8ÔøΩ5M^ÔøΩhÔøΩcNÔøΩÔøΩÔøΩBÔøΩÔøΩÔøΩÔøΩÔøΩoSÔøΩ7,M{O$SÔøΩÔøΩoÔøΩÔøΩÔøΩVÔøΩ=g”ÉÔøΩÔøΩ0ÔøΩgP=ÔøΩÔøΩhÔøΩÔøΩ2ÔøΩ6ÔøΩÔøΩÔøΩ2ÔøΩ^/ÔøΩÔøΩÔøΩz~~xy.ÔøΩBÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ÷πUFHDÔøΩ€ùÔøΩÔøΩTVÔøΩ5Z=4'ÔøΩÔøΩÔøΩÔøΩÔøΩ$ÔøΩÔøΩDÔøΩÔøΩQÔøΩ<ÔøΩÔøΩ_ÔøΩ&ÔøΩÔøΩÔøΩ!ÔøΩÔøΩÔøΩ?ÔøΩÔøΩ_h!ÔøΩÔøΩÔøΩ3ÔøΩIÔøΩÔøΩÔøΩ ÔøΩgÔøΩxÔøΩ`nfO9ÔøΩÔøΩpT-€¥	 PenÔøΩL,ÔøΩÔøΩÔøΩEÔøΩÔøΩcmÔøΩsÔøΩÔøΩÔøΩÔøΩhbÔøΩ ÔøΩ”ìÔøΩÔøΩÔøΩÔøΩÔøΩ4ÔøΩ«ë:ÔøΩÔøΩ{M÷ΩÔøΩJÔøΩÔøΩÔøΩ>ÔøΩPÔøΩÔøΩ6ÔøΩmÔøΩ9ÔøΩÔøΩXÔøΩÔøΩfPÔøΩC»ÜJZ<gÔøΩK|ÔøΩÔøΩ1ﬂµÔøΩÔøΩ!ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩ@ÔøΩd0ÔøΩWz""yÔøΩÔøΩuOXbÔøΩÔøΩSÔøΩcÔøΩ0cÔøΩÔøΩ*€¨ÔøΩÔøΩ »ßÔøΩHÔøΩ;fŒÄÔøΩÔøΩiF;ÔøΩ`ÔøΩ,ÔøΩz÷áÔøΩÔøΩTjÔøΩ-OQAÔøΩÔøΩ&UÔøΩÔøΩ@ÔøΩÔøΩÔøΩÔøΩFÔøΩÔøΩ'ÔøΩ5!  L)ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ*""*ÔøΩi+ÔøΩ‘ÇmÔøΩ>ÔøΩIÔøΩÔøΩ}ÔøΩÔøΩIVÔøΩzD3ÔøΩÔøΩjÔøΩÔøΩÔøΩÔøΩ$W⁄®ÔøΩÔøΩLÔøΩÔøΩPÔøΩ$NLÔøΩÔøΩ!ÔøΩDOÔøΩ	!x3ÔøΩ,vÔøΩÔøΩÔøΩyÔøΩ}`,ÔøΩÔøΩÔøΩfÔøΩÔøΩ|ÔøΩo[FjÔøΩÔøΩ.ÔøΩÔøΩiÔøΩÔøΩÔøΩÔøΩœóbÔøΩ%ÔøΩÔøΩ\	T2ÔøΩÔøΩrÿ¢ÔøΩÁ®®2[ÔøΩÔøΩIÔøΩË∑íÔøΩÔøΩÔøΩÔøΩiÔøΩÔøΩÔøΩÔøΩÔøΩ:ÔøΩ*Js`‹òTÔøΩ2ÔøΩ≈≠ÔøΩ-›ñRÔøΩFÔøΩ!ÔøΩÔøΩ|ÔøΩÔøΩ`ÔøΩÔøΩ+#{ÔøΩ}ÔøΩÔøΩ!ÔøΩA+ÔøΩ.(ÔøΩEhÔøΩÔøΩ\ÔøΩ#ÔøΩÔøΩÔøΩÔøΩÀµÔøΩrÔøΩÔøΩ3Ó¥íR8ÔøΩ∆∑q=ÔøΩÔøΩÔøΩÔøΩsV+ÔøΩÔøΩ_ÔøΩdÔøΩÔøΩÔøΩwÔøΩ-eÔøΩ‹§)xd7ÔøΩÔøΩQ&B&ÔøΩÔøΩMuÔøΩÈ™Ö4HÔøΩFÔøΩÔøΩ0ÔøΩÔøΩÔøΩÔøΩ:ÔøΩÔøΩ MÔøΩGÔøΩÔøΩÔøΩQuÔøΩÔøΩÔøΩ‘ìÔøΩUÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ OÔøΩÔøΩ ÔøΩEÔøΩÔøΩ2j3s6XÔøΩÔøΩÔøΩ6ÔøΩdXÔøΩÔøΩ*ÔøΩ!ÔøΩÔøΩGÔøΩÔøΩ""ÔøΩ}ÔøΩO=2ÔøΩ	ÔøΩuÔøΩÔøΩs?ÔøΩÔøΩÔøΩoÔøΩD)?ÔøΩÔøΩFÔøΩÔøΩÔøΩ -ÔøΩ}ÔøΩjÔøΩÔøΩ((ÔøΩÔøΩk,b^BÔøΩ YÔøΩj5ÔøΩÔøΩÔøΩIÔøΩ"" îÔøΩVÔøΩÔøΩ ] xÔøΩ%g~2rÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩn%HÔøΩtiÔøΩÔøΩÔøΩ>ÔøΩÔøΩÔøΩÔøΩ$ÔøΩÔøΩlÔøΩ <’ãÔøΩ.ÔøΩÔøΩYÔøΩÔøΩvlFsCÔøΩ[Xz ºÔøΩÔøΩÔøΩÔøΩ3ENÔøΩ$<ÔøΩ'ÔøΩb\ÔøΩi1ÔøΩÔøΩ67ÔøΩÔøΩÔøΩÎõõÔøΩT⁄ëÔøΩX3BÈ©¥ÔøΩﬁÄBÔøΩÔøΩÔøΩÔøΩAdÔøΩÔøΩ)}ÔøΩoÔøΩfÔøΩU ÔøΩÔøΩsÔøΩÔøΩbÔøΩ,XÔøΩ2ÔøΩCÔøΩc€´sdÔøΩÔøΩ#zMÔøΩÔøΩÔøΩŒèÔøΩÔøΩacwÔøΩÔøΩÔøΩÔøΩk¬åÔøΩr ÔøΩÔøΩM%ÔøΩVÔøΩÔøΩwÔøΩÔøΩÔøΩÔøΩ( ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩHÔøΩ~ÔøΩnÔøΩYÔøΩÔøΩÔøΩÔøΩGÔøΩÔøΩAÔøΩ¬ÑÔøΩÔøΩÔøΩX""G9ÔøΩÔøΩrÔøΩÔøΩƒÇÔøΩÔøΩ|ÔøΩ9ÔøΩhÔøΩ~ÔøΩÔøΩw~k_tÔøΩ	1ÔøΩÔøΩÀÜÔøΩÔøΩhÔøΩÔøΩÔøΩ,ÔøΩÔøΩ3ÔøΩEJk cÔøΩÔøΩÔøΩYÔøΩÔøΩy^%ÔøΩÔøΩÔøΩÔøΩOÔøΩC tÔøΩÔøΩÔøΩ\WÔøΩpÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ›ù""uQÔøΩÔøΩMj!%9&uÔøΩlÔøΩ7tÔøΩ5ÔøΩÔøΩÔøΩ!uGÔøΩÔøΩÔøΩ√æÔøΩ	#CÔøΩÔøΩÔøΩÔøΩ2ÔøΩÔøΩÔøΩM…ÜÔøΩ#&0%ÔøΩÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩm{a[MÔøΩiÔøΩUcÔøΩ#=ÔøΩV ÔøΩ+{ÔøΩ#-utÔøΩ|ÔøΩ ÔøΩÔøΩÔøΩCÔøΩÔøΩWevÔøΩBpÔøΩpÔøΩÔøΩR_2ÔøΩ1	ÔøΩÔøΩÔøΩÔøΩ ÔøΩ,ÔøΩ Lf,bÔøΩ;ÔøΩCÔøΩÔøΩ2 7ÔøΩ…ñÔøΩÔøΩÔøΩ⁄ÇÔøΩÔøΩÔøΩuumÔøΩÔøΩÔøΩ\VÔøΩÔøΩÔøΩÔøΩÔøΩSÔøΩÔøΩZÔøΩÔøΩf{ÔøΩ—â‰≤õÔøΩÔøΩÔøΩÔøΩ(ÔøΩ `ÔøΩ/ÔøΩÔøΩÔøΩWÔøΩJÔøΩ\ÔøΩÔøΩÔøΩ…æ ÔøΩÿêÔøΩÔøΩ÷•CÔøΩ0PÔøΩwÔøΩÔøΩÔøΩÔøΩ/ÔøΩA+lÔøΩ(ÔøΩÔøΩ0?ÔøΩÔøΩÔøΩÔøΩfÔøΩIOQÔøΩÔøΩSÔøΩÔøΩo2:DÔøΩÔøΩoÔøΩÔøΩ2ÔøΩ=ÔøΩÔøΩÔøΩÔøΩK0ÔøΩcÔøΩ^=+['ÔøΩa+ÔøΩ ÔøΩÔøΩ>Ÿ´ÔøΩÔøΩGÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩjeÎäøÔøΩLSjÔøΩ1{<@ÔøΩ5ÔøΩ^ÔøΩ3>sÔøΩIÔøΩÔøΩ{ÔøΩNd'ÔøΩÔøΩ2ÔøΩ=ÔøΩÔøΩ|ÔøΩ|pÔøΩÔøΩQÔøΩC-ÔøΩÔøΩÔøΩa.IH4ÔøΩmÔøΩ:ÔøΩIÔøΩ»ÅÔøΩÔøΩ!uVÔøΩILÔøΩ#ÔøΩMÔøΩO{ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩVÔøΩs$ÔøΩ’êÔøΩjÔøΩ ÔøΩ$ÔøΩÔøΩ[ÔøΩÔøΩ7ÔøΩ.< ~CÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩb9ÔøΩÔøΩÔøΩÔøΩÔøΩYÔøΩÔøΩÔøΩ;ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩyÔøΩQYÔøΩÔøΩÔøΩÔøΩQÔøΩﬂ∑eÔøΩfKKÔøΩÔøΩHÔøΩÔøΩÔøΩuÔøΩYÔøΩÔøΩ4ÔøΩI_(0ÔøΩ#mÔøΩÔøΩ>KÔøΩÔøΩÔøΩÔøΩ8ÔøΩO ºVQÔøΩÔøΩ""!eÔøΩq""ÔøΩ XÔøΩÔøΩ[ÔøΩÔøΩÔøΩ-ÔøΩÔøΩ>MZÔøΩÔøΩÔøΩ3rebm#_eÔøΩÔøΩÔøΩÔøΩjAYÔøΩJÔøΩfTÔøΩÔøΩOÔøΩKÔøΩÔøΩ<tÔøΩ%xPÔøΩÔøΩÔøΩÔøΩy;l-ŒáÔøΩÔøΩE{L~3ÔøΩ+!. ÔøΩ1ÔøΩVÔøΩOth.ÔøΩWc[ÔøΩAM]@WBÔøΩ,ÀòA/ =|d!ﬂ£ÔøΩuÔøΩ“ºÔøΩÔøΩÔøΩÔøΩ`(ÔøΩÔøΩ52ÔøΩ4ÔøΩÔøΩ6wÔøΩÔøΩqÔøΩÔøΩÔøΩVﬂ≤ÔøΩÔøΩÔøΩ[3›¶]F÷¥dÔøΩS=ÔøΩKrE[#TÔøΩÔøΩ<ÔøΩ,ÔøΩÔøΩﬁóÔøΩK;ÔøΩÔøΩ[ÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩmÔøΩJÔøΩZÔøΩCMÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩHÔøΩHÔøΩ zÔøΩG^ÔøΩ4'$ÔøΩÔøΩ»†5ÔøΩÔøΩj…ò:ÔøΩ=XÔøΩ]dÔøΩ]ÔøΩÔøΩPSÔøΩ3+ÔøΩE~BÔøΩJÔøΩxÔøΩÔøΩ›æ*.ÔøΩÔøΩPI-ÔøΩ7ËµélbÔøΩtiÔøΩ}ÔøΩ-0ÔøΩÔøΩÔøΩÛï†íÔøΩTÔøΩ~ÔøΩ6LWÔøΩwÔøΩÔøΩqÔøΩÔøΩÔøΩ\ÔøΩbÔøΩTÔøΩ$RÔøΩdÔøΩ+/7ÔøΩÔøΩHÔøΩ~ooÔøΩÔøΩÔøΩ—≥ ÔøΩÔøΩ-ÔøΩÔøΩÔøΩÔøΩÔøΩ""ZHÔøΩ=gÔøΩvÔøΩÔøΩ‹∫YÔøΩÔøΩ6ÔøΩE‚ô≠EÔøΩn ÅÔøΩÔøΩ‘ìÔøΩ,:ŒèÔøΩ}ÔøΩ{ÔøΩb¬ªÔøΩÔøΩÔøΩrÔøΩÔøΩSÔøΩÔøΩ?ÔøΩÔøΩ""ÔøΩÔøΩpÔøΩÔøΩ!ÔøΩ:}ÔøΩÔøΩÔøΩFÔøΩÔøΩU~ÔøΩBÔøΩ‰¨Ü ÔøΩ2%ÔøΩ_ÔøΩ{fÔøΩÔøΩÔøΩ4ÔøΩÔøΩo}ÔøΩÔøΩVÔøΩÔøΩr3ÔøΩÔøΩÔøΩÔøΩ""3ÔøΩÔøΩ|m}[ÔøΩÔøΩ0@/eÔøΩIÔøΩxÔøΩ—ï√∏ÔøΩÔøΩÔøΩÔøΩÔøΩfcPÔøΩIÔøΩÔøΩBA'U<ÔøΩÀ¥ÔøΩ%ÔøΩÔøΩÔøΩ]ÔøΩhsÔøΩKÔøΩ,ÔøΩÔøΩÔøΩÔøΩxÔøΩ”àÔøΩRÔøΩÔøΩS|lÔøΩvT[PÔøΩÔøΩ¬£z⁄äÔøΩ,ÔøΩ],ÔøΩÔøΩ\ÔøΩ%ÔøΩbMF	LÔøΩÔøΩ ÔøΩÔøΩ|ÔøΩkÔøΩL ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩSÔøΩÔøΩ+ÔøΩÔøΩÔøΩbÔøΩ›øt t$ÔøΩÔøΩsÔøΩ\ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩdoÔøΩÔøΩ|3ÔøΩHÔøΩƒ¶ÔøΩÔøΩÔøΩWÔøΩ""ÔøΩ<ÔøΩ_⁄´~<p.w{ÔøΩÔøΩ^ÔøΩOÔøΩaÔøΩtÔøΩÔøΩÔøΩÔøΩhÔøΩfÔøΩÔøΩÔøΩ%tÔøΩÔøΩÔøΩyÔøΩÿÅwÔøΩÔøΩVÔøΩÔøΩÔøΩ4ÔøΩÔøΩyÔøΩ7eVÔøΩÔøΩ–óÔøΩR0—ôÔøΩÔøΩ.+LÔøΩÔøΩ]ÔøΩÔøΩÔøΩxÔøΩÔøΩ*N[ÔøΩÔøΩ~ÔøΩTÔøΩÔøΩ&ÔøΩX=ÔøΩ""^ÔøΩkÔøΩEÔøΩùÄòÔøΩÔøΩCÔøΩI-ÔøΩÔøΩ'ÔøΩÈúÅÔøΩ	ÔøΩ;ÔøΩOÔøΩ]ÔøΩÔøΩÔøΩÔøΩÔøΩ9@MÔøΩÔøΩÔøΩ+ÔøΩzÔøΩÔøΩ:ÔøΩlA _ÔøΩC-=ÔøΩS>ÔøΩi\9HÔøΩ5√ø.ÔøΩXÔøΩÔøΩÔøΩS=-vÔøΩ-vEÔøΩÔøΩÔøΩŸëÔøΩÔøΩMAÔøΩe[ÔøΩÔøΩÔøΩÔøΩ!ÔøΩc.ÔøΩ#ÔøΩxD ÔøΩÀª?/ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ;ÔøΩÔøΩZPTÔøΩÔøΩÔøΩ(6 	XÔøΩ8ÔøΩÔøΩkÔøΩnÔøΩ>ÔøΩ\ÔøΩÔøΩK DÔøΩO|2‘Å5ÔøΩjÔøΩUÔøΩÔøΩÔøΩIg aÔøΩLS'5ÔøΩÔøΩ‡≤äÔøΩ5ÔøΩPÔøΩOÔøΩÔøΩÔøΩZÔøΩe-√©UÔøΩÔøΩÔøΩQÔøΩ#!jÔøΩ{ÔøΩfÔøΩÔøΩÔøΩp= ÔøΩ	[JR'◊ôÔøΩGÔøΩ äH8ÔøΩÔøΩ8= ÔøΩc5ÔøΩÔøΩyÔøΩÔøΩ'ÔøΩÔøΩÔøΩaÔøΩ'ÔøΩÔøΩÔøΩÔøΩtndjuÔøΩxÔøΩÔøΩw	ÔøΩX ÔøΩ5d=jyÔøΩ ›ßÔøΩtÔøΩI-UÔøΩxT_ÔøΩÔøΩÔøΩÔøΩpÔøΩcÔøΩdHÔøΩÔøΩjÔ©âhÔøΩÔøΩzÔøΩeÔøΩFlÔøΩ€º+ÔøΩ$QBÔøΩ—ØÔøΩÔøΩÔøΩ ÔøΩ#hXxÔøΩﬁÜÔøΩzÔøΩJÔøΩÔøΩZrÔøΩGÔøΩÔøΩL$bÔøΩNQÔøΩÔøΩIÔøΩW#f<ÔøΩ<ÔøΩ}ÔøΩÔøΩb%ÔøΩ^ÔøΩÔøΩÔøΩÔøΩU6ÔøΩPÔøΩ}	wkÔøΩÔøΩÔøΩÔøΩDÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ{G.%oqDi.ÔøΩÔøΩ?THÔøΩSEÔøΩwÔøΩ!ÔøΩÔøΩÔøΩÔøΩ}>ÔøΩÔøΩk*ÔøΩÔøΩUU“ÆÔøΩÔøΩÔøΩ9sÔøΩ(ÔøΩÔøΩX IÔøΩÔøΩÔøΩhuÔøΩeÔøΩÔøΩdÔøΩ}ÔøΩ ¬ÑÔøΩÔøΩxÔøΩJÔøΩ 7ÔøΩVÔøΩÔøΩÔøΩpÔøΩÔøΩ√†ÔøΩZÔøΩÔøΩH)ÔøΩ3ÔøΩÔøΩx*ÔøΩÔøΩ:ÔøΩÔøΩÔøΩÔøΩÔøΩ TÔøΩ ÔøΩ(ÔøΩÔøΩÔøΩÔøΩKÔøΩÔøΩÔøΩÔøΩ_2 ÔøΩ\ÔøΩN+uÔøΩ_CÔøΩDÔøΩ=GÔøΩÔøΩ%ÔøΩM3kX1 [/ÔøΩPBÔøΩ`k¬∑EÔøΩiDÔøΩ?ÿãHÔøΩlaÔøΩÔøΩÔøΩÔøΩsji*|GÔøΩhy|d\ÔøΩ!ÔøΩQÔøΩÔøΩŸõVrÔøΩpÔøΩÔøΩÔøΩÔøΩ#~ÔøΩÔøΩƒ∏ÔøΩ?ce?ÔøΩCÔøΩIÔøΩurÔøΩÔøΩÔøΩ/fÔøΩÔøΩPÔøΩÔøΩz@jÔøΩÔøΩuvÔøΩÔøΩt1%ÔøΩÔøΩ	œÖÔøΩÔøΩÔøΩÔøΩ\‹•ÔøΩ…ÖFÔøΩÔøΩuÔøΩ$ÔøΩÔøΩ÷πlÔøΩÔøΩÔøΩ0ÔøΩÔøΩÔøΩVÔøΩvÔøΩÔøΩDÔøΩÔøΩÔøΩ>ÔåäQÔøΩ=ÔøΩ~ =ÔøΩÀ¢ÔøΩÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩMÔøΩ10eÔøΩﬂØÔøΩÔøΩv2C›´#ÔøΩÔøΩ%MÔøΩÔøΩ""ÔøΩÔøΩÔøΩÔøΩ&ÔøΩ+jÔøΩÔøΩÔøΩ>"";6ÔøΩOJÔøΩÔøΩ>ÔøΩ.{nÔøΩ=$o> ÔøΩxÔøΩkÔøΩÔøΩ@ÔøΩÔøΩÔøΩÔøΩ&ÔøΩnÔøΩ_7ÔøΩ;_ÔøΩÔøΩÕûÔøΩÔøΩxÔøΩÔøΩÔøΩFÔøΩÔøΩg~ÔøΩÔøΩp?ÔøΩÔøΩ!ÔøΩ⁄∑ÔøΩXÔøΩÔøΩUÔøΩÊ¢∞ÔøΩ«ûquÔøΩxÔøΩÔøΩÔøΩN6¬âPÔøΩÔøΩÔøΩ/ÔøΩÔøΩÔøΩCÔøΩIÔøΩÔøΩÔøΩÎùîÔøΩC%ÔøΩ1ÔøΩÔøΩ«∫ÔøΩw.%ÔøΩNXÔøΩÔøΩ&ÔøΩ‹ß~ÔøΩXÔøΩ6;\o4ÔøΩÔøΩÔøΩ@ÔøΩ7ÔøΩÔøΩlÔøΩqOÔøΩÔøΩÔøΩ/ÔøΩ0ÔøΩKÔøΩÔøΩ’æpYÔøΩ?ÔøΩBÔøΩÔøΩÔøΩHKWÔøΩÔøΩÔøΩ üÔøΩÔøΩ”ºH[gÔøΩ)	`ÔøΩÔøΩÔøΩvÔøΩÔøΩÔøΩcrkÔøΩqh>⁄∑lÔøΩÔøΩÔøΩ%UÔøΩ„π∂ÔøΩÔøΩk'ÔøΩS""ÔøΩÔøΩmO7{ÔøΩÔøΩ&ÔøΩJ-?—ÜÔøΩÔøΩÔøΩ""`ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ{ÔøΩiÔøΩÔøΩÔøΩA~ÔøΩÔøΩ,ÔøΩ,ÔøΩLÔøΩI0ÔøΩÔøΩÔøΩv+ DpÔøΩÔøΩAO9.UL6ÔøΩ!kwÔøΩÔøΩÔøΩ:eÃ¢eÔøΩ ÔøΩÔøΩ(ÔøΩÔøΩ ∂ÔøΩ?ÔøΩÔøΩÔøΩNUIÔøΩÔøΩCh$ÔøΩÔøΩÔøΩÔøΩ)y3gÔøΩfÔøΩsÔøΩÔøΩ`ÔøΩ2ÔøΩR-ÔøΩÔøΩBf6ÔøΩÔøΩnÔøΩÔøΩeq$x]ÔøΩN	Y'IÔøΩ]@ÔøΩSGkÔøΩÔøΩKÔøΩÔøΩÔøΩÔøΩnR≈ïNÔøΩÔøΩ[ÔøΩÔøΩ,ÔøΩ>JÔøΩ.ÔøΩÔøΩtAÔøΩÔøΩÔøΩ⁄ñ%,$ÔøΩÔøΩtUÔøΩÔøΩItjÔøΩ^ÔøΩUÔøΩÔøΩBÔøΩ¬ÅÔøΩÔøΩ3ÔøΩÔøΩ_g^~ÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩ;ÔøΩÔøΩeÔøΩÔøΩ>BÔøΩgH88fÔøΩÔøΩ«ôÔøΩ	ÔøΩ8!ÔøΩQ;ybÔøΩÔøΩÔøΩ'ÔøΩÔøΩ,ÔøΩEÔøΩÔøΩÔøΩNJÔøΩÔøΩzÔøΩÔøΩ"".WCÔøΩÔøΩÔøΩ? FÔøΩ.ÔøΩ0ÔøΩ<ÔøΩÔøΩ.<RÔøΩÔøΩmN;ÔøΩÔøΩÔøΩJÔøΩQÔøΩuÔøΩ‹üjÔøΩCÔøΩ85ÔøΩÔøΩÔøΩÔøΩOÔøΩÔøΩ_ÔøΩÔøΩÔøΩ/%Q»§ÔøΩ+ÔøΩÔøΩ?#edNÔøΩO	ÔøΩnÔøΩÔøΩÔøΩÔøΩÔøΩ""ÔøΩfÔøΩÔøΩWÔøΩQÔøΩÔøΩ,ÔøΩdÔøΩrÔøΩÔøΩÔøΩGÔøΩ{ÔøΩ‹°J1\ÔøΩÊΩ•,ÔøΩﬁî|^€Ç@DÔøΩÔøΩÔøΩÔøΩdÔøΩÔøΩ+ÔøΩjÔøΩÔøΩÿÜÔøΩÔøΩÔøΩ`g+ÔøΩAÔøΩOÔøΩ%(ÔøΩÃëÔøΩœ¶`ÔøΩÔøΩS+*Qm eÔøΩÔøΩIÔøΩÔøΩGœçHÔøΩRBb5]<MÔøΩÔøΩ	ÔøΩ6d*FÔøΩf-ÔøΩÔøΩÔøΩmÔøΩv} ÔøΩÔøΩÔøΩWÔøΩÔøΩ*B:ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ-HNÔøΩ)dÔøΩÔøΩÔøΩÔøΩ|ÔøΩO6_»∞rhwWÔøΩCÔøΩÔøΩÔøΩÔøΩRv ÔøΩÔøΩQ^ÔøΩcÔøΩÔøΩHÔøΩ0ÔøΩ÷ú|ÔøΩDÔøΩÔøΩÔøΩÔøΩÔøΩ	nvÔøΩqCGQÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩﬁ∏ÔøΩoÔøΩÔøΩ)ÔøΩÔøΩ|ÔøΩk}nrÔøΩeÔøΩMÔøΩÔøΩÔøΩIÔøΩk`ÔøΩÔøΩeÔøΩÔøΩcLÔøΩmU%⁄´ÔøΩ,ÔøΩÔøΩÔøΩÔøΩÔøΩ u?ÔøΩ;dÔøΩÔøΩÔøΩÔøΩBmÔøΩÔøΩ+ÔøΩ >ÔøΩÔøΩÔøΩdÔøΩVÔøΩSÔøΩ TÔøΩMÔøΩHÔøΩÔøΩ2ÔøΩÔøΩ=ÔøΩÔøΩV,+UÔøΩ0ÔøΩÔøΩ""ÔøΩeÔøΩ%ÔøΩÔøΩÔøΩ=JK:ÔøΩÔøΩÔøΩznÔøΩrÔøΩÔøΩ9ÔøΩÔøΩWq6ÔøΩÔøΩÔøΩÔøΩaÔøΩÔøΩfÔøΩl“∑ÔøΩMÔøΩÔøΩÔøΩÔøΩÔøΩ@#:ÔøΩ![ÔøΩÔøΩlÔøΩ¬ò})ÔøΩÔøΩ≈ΩdÔøΩ9ÔøΩÔøΩÀ±)tlÔøΩP*2 )\ÔøΩzM-FoÔøΩ@&ÔøΩ]ÔøΩÔøΩrÔøΩÔøΩÔøΩmÔøΩÔøΩÔøΩoÔøΩ:uA ÔøΩXÔøΩZ,ÔøΩÔøΩÔøΩ0]ÔøΩnZhÔøΩ=ÔøΩÔøΩÔøΩIÔøΩÔøΩŸè62ÔøΩHCÔøΩÔøΩi$ÔøΩQÔøΩÔøΩqÿõkÔøΩÔøΩc""ÔøΩM}mÔøΩ^grÔøΩ""ÔøΩÔøΩÔøΩBÔøΩ1\$ÔøΩÔøΩ9ÔøΩÔøΩ}ÔøΩÔøΩ=]-ÔøΩÔøΩÔøΩÔøΩaÔøΩuÔøΩeoÔøΩÔøΩ}ÔøΩ\*A5ÔøΩÔøΩbÔøΩÔøΩ59]ÔøΩÔøΩÔøΩÔøΩzÔøΩNÔøΩR{’¢	ÔøΩ3wÔøΩÔøΩÔøΩÔøΩeÔøΩbÔøΩÔøΩÈô¥ÔøΩ[ÎªìsÔøΩvtÔøΩ]ÔøΩÔøΩÔøΩZ>ÔøΩ2ÔøΩÔøΩÔøΩÔøΩMÔøΩÔøΩÔøΩ-’áÔøΩyc€≤TY1~+ÔøΩÔøΩÔøΩÔøΩPÔøΩÔøΩÔøΩÔøΩ8HÔøΩ'7ÔøΩÔøΩÔøΩKÔøΩ>,ÔøΩÔøΩ0oÔøΩÔøΩÔøΩl5<ÔøΩ'NfÔøΩÔøΩjÔøΩÔøΩAGkÔøΩXVÔøΩÔøΩÔøΩYÔøΩ2UvÔøΩÔøΩyÃüÔøΩÔøΩEŸ©DÔøΩÔøΩaryÔøΩÔøΩGtÔøΩÔøΩ6HÔøΩq5÷∑ÔøΩ&27ÔøΩHCƒπÔøΩQÔøΩWXÔøΩÔøΩÔøΩ37uÔøΩÔøΩÔøΩ*VuÔøΩ	=-0ÔøΩÔøΩ)ÔøΩ2ÔøΩcÔøΩÔøΩÔøΩÔøΩÔøΩVXÔøΩ;iqÔøΩ+JÔøΩ#ÔøΩÔøΩÔøΩÔøΩTÔøΩÔøΩhÔøΩH3ÔøΩUÔøΩÔøΩÔøΩ@DÔøΩeÔøΩ€∑ÀçnÔøΩÔøΩ%ÔøΩAsÔøΩÔøΩÔøΩpÔøΩ$”™gÔøΩÔøΩ z÷äCH2ÔøΩ}\ÔøΩjÔøΩcÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩ”ã ÔøΩÔøΩÔøΩhÔøΩÔøΩÔøΩÔøΩÔøΩ""/ÔøΩiÔøΩMÔøΩ ARÔøΩÔøΩQ=E–õÔøΩ *UÔøΩ0ÔøΩTT`ÔøΩ-Zc-ÔøΩÀØÔøΩÔøΩyÔøΩkÔøΩLÔøΩÔøΩÀåÔøΩQCËôπÔøΩÔøΩÔøΩ6ÔøΩ#ÔøΩSzÔøΩÔøΩ-ÔøΩÔøΩ:9ÔøΩÔøΩÔøΩ2yÔøΩ]ÔøΩÔøΩcÔøΩÔøΩxÔøΩg(AÔøΩ‘æY#ÔøΩÔøΩÔøΩ}b ÔøΩ+ÔøΩKÔøΩ;(mvÔøΩÔøΩ%I3ÔøΩqÔøΩ%8ÔøΩ-vÔøΩhÔøΩYÔøΩÔøΩZÔøΩ4LÔøΩ ÔøΩÔøΩÔøΩÔøΩhÔøΩÔøΩ$ÔøΩÔøΩÔøΩÔøΩÔøΩ/hÔøΩÔøΩ(ÔøΩ-ÔøΩÔøΩ!ÔøΩÔøΩ∆ú‡ªúÔøΩÔøΩWaÔøΩ0A\ÔøΩAEOÔøΩÔøΩÔøΩ+.ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩpQÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩw √ÇÔøΩÔøΩÔøΩD4>ÔøΩ‡°úÔøΩ◊éÔøΩG2ÔøΩdÔøΩW≈ùÔøΩÔøΩÔøΩ{jfFÔøΩÔøΩÔøΩ{ÔøΩ'XÔøΩqÔøΩÔøΩ8ÔøΩ|5zGt ÔøΩ_vÔøΩMÔøΩÔøΩ >6ƒùÔøΩpP$ÔøΩÔøΩpÔøΩÔøΩDw%ÔøΩÔøΩÔøΩÔøΩK	ÔøΩÔøΩsÔøΩTÔøΩÔøΩÔøΩÕ∞HÔøΩc\ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩXÔøΩvJÔøΩzÔøΩWWÔøΩÔøΩ÷öÔøΩÔøΩÔøΩ#ÔøΩZÔøΩ;3VÔøΩÔøΩ“≥~cÔøΩÔøΩÔøΩ@ÔøΩ}ÔøΩÔøΩ5ÔøΩ,;.J6pÔøΩSÔøΩÔøΩiMÔøΩRÔøΩ@ÔøΩÔøΩÀèÔøΩÔøΩÔøΩm%ÔøΩÔøΩHÔøΩÔøΩÔøΩ>dÔøΩ\ÔøΩÔøΩÔøΩZodZÔøΩ6ÔøΩÔøΩÔøΩ.ÔøΩÔøΩ~ÔøΩﬁíRÔøΩnÔøΩ5d0ÔøΩÔøΩT#KÔøΩÔøΩbÔøΩTÔøΩQ1ÔøΩiDÔøΩAÔøΩ]ÔøΩÔøΩ[ÔøΩÔøΩÔøΩÔøΩ9ÔøΩoÔøΩÔøΩMÔøΩ6ÔøΩÔøΩaHDÔøΩÔøΩ/Ó¶∑ÔøΩÔøΩÔøΩ. ≈äÔøΩÔøΩÔøΩFÔøΩ""ÔøΩyÔøΩ“ÖÔøΩnÔøΩrc%XIÔøΩFdÔøΩMjYÔøΩÔøΩÔøΩÔøΩpÔøΩjMÔøΩ|ÔøΩÔøΩMÔøΩ|'P""ÔøΩÔøΩg&>1ÔøΩ_""ÔøΩDnCÔøΩÔøΩ<ÔøΩÔøΩÔøΩws4+ÔøΩ*ÔøΩÔøΩ,%29ÔøΩÔøΩV?ÔøΩÔøΩ TÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩJ,ÔøΩÔøΩÔøΩ/ÔøΩ#iJÔøΩÔøΩFÔøΩÔøΩxÔøΩÔøΩÔøΩÔøΩÔøΩ3ÔøΩÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩ'ÔøΩ|ÔøΩÔøΩcVuA›•1ÔøΩ*-eÔøΩh!ÔøΩ/MrYÔøΩÔøΩÔøΩÔøΩ\ÔøΩL+ÔøΩTÔøΩÔøΩrÔøΩ$ÔøΩÔÇçÔøΩÔøΩ 0sÔøΩÔøΩu‹Ä""UÔøΩRÔøΩÔøΩÔøΩÔøΩ,%iÔøΩ[mÔøΩÔøΩÔøΩVÔøΩÔøΩ'ÔøΩZh~YÔøΩkÔøΩ$"">ÔøΩÔøΩÔøΩÔøΩFÔøΩ5ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ(?5wÔøΩEÔøΩÔøΩ—êÔøΩJÔøΩÔøΩÔøΩ}ÔøΩ @!ÔøΩÔøΩ6ÔøΩÔøΩÔøΩcÔøΩÔøΩÔøΩxÔøΩo~BOHG?>ÔøΩÔøΩÔøΩUKÔøΩÔøΩHÔøΩÔøΩ?ÔøΩm{ÔøΩQ/|ÔøΩoÔøΩSbÔøΩÔøΩÔøΩn#.ÔøΩ~~ÔøΩÔøΩRÔøΩ⁄µ`ÔøΩQPÔøΩÔøΩ($o9ÔøΩÔøΩÔøΩuEÔøΩ7LÔøΩ6ÔøΩjLÔøΩ:^ÔøΩ0/ÔøΩe3VÔøΩÔøΩOÔøΩÔøΩÔøΩÔøΩFM4ÔøΩÔøΩÔøΩ5ÔøΩcDGLzÔøΩÔøΩ^/ÔøΩÔøΩÔøΩIÔøΩ3|ÔøΩÔøΩrkÔøΩÔøΩ)j4ÔøΩÔøΩ}ÔøΩÔøΩMTÔøΩSÔøΩ'ÔøΩnÔøΩ ÔøΩÃöÔøΩDÔøΩXÔøΩZÔøΩÔøΩÔøΩ’âÔøΩ,ÔøΩYDKÔøΩÔøΩa_&ÔøΩÔøΩw9m>ÔøΩÔøΩÔøΩOÔøΩÔøΩ1ÔøΩDI>ÔøΩ@ÔøΩÔøΩO\ÔøΩyÔøΩ3ÔøΩÔøΩ#v>ÔøΩ	sÔøΩÔøΩi/UÔøΩkÔøΩÔøΩQŸçÔøΩÿ¥'ÿñUÕ§ÔøΩ:ÔøΩÔøΩ	ÔøΩ"" j,S@ZÔøΩÔøΩÔøΩÔøΩGÔøΩ	NM}ÔøΩ2@ÔøΩÔøΩ»ø+ nÔøΩIÔøΩÔøΩh1ÔøΩhXU!'ÔøΩÔøΩÔøΩoÔøΩÔøΩa`-$zZÔøΩxfÔøΩVTCdÔøΩ+bÔøΩ-ÔøΩÔøΩÔøΩ|ÔøΩÔøΩ2ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩGÔøΩÔøΩÔøΩr3ÔøΩÔøΩxÔøΩ_\XÔøΩ:|ÔøΩÔøΩMÔøΩyNÔøΩQÔøΩ{ÔøΩÔøΩ4ÔøΩ-ÔøΩÔøΩÔøΩÔøΩ+ÔøΩÔøΩdÔøΩÔøΩ}ÔøΩÔøΩÔøΩ=ÔøΩYÔøΩL4ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩSÔøΩ""(ÔøΩ,6ÔøΩÔøΩ◊úÔøΩÔøΩ.ÔøΩ+FÔøΩÔøΩÔøΩÔøΩS<ÔøΩÔøΩD7ÔøΩVÔøΩxÔøΩVÔøΩGÔøΩÔøΩÔøΩd0ÔøΩ)CaÔøΩH_ÔøΩjKO^PCÔøΩ?VÔøΩÔøΩxÔøΩ/ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩrÔøΩXÔøΩÔøΩÔøΩÔøΩ÷© ÔøΩ›£qÔøΩÔøΩﬂßÔøΩWÔøΩ`nÔøΩ7P4ÔøΩÔøΩ'ÔøΩÔøΩs4VÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩC_+!ÔøΩÔøΩM+wÔøΩÔøΩÔøΩÔøΩÔøΩ+?ÔøΩ/ÔøΩj?@tÔøΩÔøΩ4ÔøΩ{ÔøΩÔøΩÔøΩÔøΩ}ÔøΩ+⁄ÄÔøΩÔøΩbR""«õkCbÂ∞°ÔøΩ8Ot1D	vÔøΩÔøΩÔøΩ[eEÔøΩÔøΩ6ÔøΩÔøΩ›ØÔøΩlÔøΩÔøΩÔøΩdLÔøΩ<ÔøΩÔøΩÔøΩvTEYfÔøΩÔøΩ6ÔøΩÔøΩÔøΩÔøΩ6ÔøΩÔøΩÔøΩ«≥QÔøΩm3K5yÔøΩùß§ÔøΩWÔøΩ*ﬂ™[ÔøΩ>ÔøΩG:ÔøΩj?7ÔøΩcÔøΩ ÔøΩ<ÔøΩÔøΩÔøΩ~ÔøΩkÔøΩ+ZÔøΩ(ÔøΩÔøΩkÔøΩÔøΩÔøΩ@ÔøΩÔøΩ3m<WBÔøΩÔøΩYÔøΩÔøΩÔøΩ?ÔøΩWC c/“∫ÔøΩÃ°OPHwÔøΩzÔøΩÔøΩÔøΩÔøΩKÔøΩor!%ÔøΩÔøΩ_ÔøΩ<ÔøΩÔøΩ	ÔøΩs\ ÔøΩƒµÔøΩÔøΩÔøΩÔøΩ~IÔøΩAÔøΩTÔøΩÔøΩpo4kÔøΩ`ÔøΩÔøΩÔøΩ}ÔøΩÔøΩÔøΩÔøΩQ\WÔøΩÔøΩlTc$ÔøΩÔøΩÔøΩ5kÔøΩJX»ñÔøΩaLÔøΩ*—ÆŸÑÔøΩÔøΩÔøΩÔøΩÔøΩOÔøΩRÔøΩ5!0ÔøΩ`VÔøΩ ÔøΩÔøΩÔøΩx[}^ÔøΩPÔøΩuÔøΩNÔøΩÔøΩkÔøΩHÔøΩÔøΩ|KeÕΩÔøΩ_ÔøΩÔøΩÔøΩÔøΩ ÔøΩ-ÔøΩÔøΩ\ÔøΩÔøΩkÔøΩxÔøΩnÔøΩTÔøΩJhÔøΩc	…ÆÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩﬂô*:ÔøΩ:ÔøΩÔøΩoÔøΩ ÔøΩb+[9[^~ÔøΩÔøΩphÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ&ÔøΩ’çÔøΩÔøΩÔøΩÔøΩÔøΩYXZÔøΩÔøΩÔøΩARÔøΩÔøΩÔøΩZtfÔøΩÔøΩVZÔøΩÔøΩÔøΩÔøΩFÈª™bÔøΩB,ÔøΩÔøΩ$1ÔøΩcEÔøΩ»æ}ÔøΩÔøΩ ÔøΩÔøΩqÔøΩÔøΩGƒîÔøΩÔøΩÔøΩFZPÔøΩpnÔøΩEIÔøΩH[{ZÔøΩÔøΩÔøΩXÔøΩt-ÔøΩeyaÔøΩ PÔøΩÔøΩSÔøΩLÔøΩ3ÔøΩgÔøΩOÔøΩ<&ÔøΩD:ÔøΩÔøΩ ï(ÔøΩÔøΩ_:7ÔøΩIÔøΩ>0ÔøΩbÔøΩqÔøΩ""}~ÔøΩÔøΩDÔøΩÿàÔøΩkÔøΩÔøΩRÔøΩpÔøΩkÔøΩÔøΩÔøΩ=\>ÔøΩVÔøΩ+ÔøΩ#ÔøΩÔøΩ7·ñ†wrÔøΩÔøΩh?#-ÔøΩÔøΩÔøΩUUQMÔøΩ;ÔøΩjM»õoÔøΩvÔøΩ}ÔøΩÔøΩ ÔøΩVjÔøΩbÕ±ÔøΩHÔøΩÔøΩMÔøΩ4ÔøΩ<ÔøΩÔøΩÔøΩVÔøΩÔøΩ@ÔøΩÔøΩhr	◊∏ÔøΩÔøΩ'^ÔøΩÔøΩÔøΩÔøΩ>ÔøΩz>ÔøΩX~ÔøΩÔøΩÔøΩc_ 8ÔøΩ~ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ]l ÔøΩ=`ÔøΩy{ÔøΩ ÔøΩ@ÔøΩÔøΩ`ÔøΩÔøΩ÷í*IﬁäÔøΩÔøΩtÔøΩSÔøΩÔøΩÔøΩn|ÔøΩÔøΩ–îÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩCÔøΩÔøΩÔøΩaÔøΩ ÔøΩÔøΩ""ÔøΩ2ÔøΩÔøΩ	ÔøΩlÔøΩÔøΩ⁄ëH<ÔøΩÔøΩ hÔøΩÔøΩÔøΩÔøΩ7ÔøΩZÔøΩjÔøΩÔøΩÔøΩ:ÔøΩÔøΩ¬è( eÔøΩeÔøΩ!-ÔøΩÔøΩÔøΩ(ÔøΩÔøΩt@*UÔøΩÔøΩ]ÔøΩR]ÔøΩM:ÔøΩ>oÔøΩÔøΩÔøΩ›õÔøΩÔøΩÔøΩÔøΩ?ÔøΩL`LP5yÔøΩ)ÔøΩ_ÔøΩÔøΩÔøΩe$WWÔøΩQUÔøΩ,ÔøΩFCtÔøΩ|ÔøΩ(ÔøΩX#ÔøΩÔøΩvFÔøΩGRÔøΩ|?ÔøΩÔøΩ	(ÔøΩTÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩÔøΩfiMÔøΩdmÔøΩÔøΩÔøΩÔøΩ+ÔøΩÔøΩÔøΩÔøΩÔøΩid6HÔøΩÔøΩÔøΩiÔøΩÔøΩÔøΩ[ÔøΩZÔøΩUSkxwÔøΩÔøΩ#2ÔøΩÔøΩÔøΩÔøΩjÔøΩÔøΩÔøΩ0{-ÔøΩX)kKÔøΩQÔøΩOÔøΩÔøΩÔøΩcXÃójÔøΩr5ÔøΩ4/lÔøΩTAÔøΩŒêÔøΩÔøΩÔøΩuÔøΩÔøΩ»ú6ÔøΩSÔøΩd{ÔøΩ~ÔøΩÔøΩ|ÔøΩ5ÔøΩÔøΩ3?	-\1ÔøΩaÔøΩÔøΩ-~	ÔøΩÔøΩÔøΩÔøΩÔøΩx;JÔøΩ1ÔøΩkÔøΩTZpjÔøΩgËôè+ÔøΩ)ÔøΩÔøΩÔøΩÔøΩ_»§ÔøΩDN—âÔøΩÔøΩ@ÔøΩÀê(ÔøΩÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩÔøΩVÔøΩÔøΩÔøΩÔøΩSÔøΩ6ÔøΩÔøΩÔøΩHÔøΩd1ÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩx[ÔøΩ#ÔøΩQÔøΩ“ñÔøΩÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩ`yÔøΩ,ÔøΩKÔøΩÔøΩRÔøΩÔøΩ2ÔøΩ*ÔøΩdÔøΩ*ÔøΩ SuÔøΩÔøΩ0ÔøΩ ÔøΩ/%ÔøΩPC{”òÔøΩÔøΩÔøΩhSpP[ÔøΩÔøΩÔøΩÔøΩ ÔøΩ%3ÔøΩﬁåÔøΩf6$iÔøΩ&O#OÔøΩÔøΩÔøΩj ÔøΩe:U∆∑WuÔøΩÔøΩÔøΩ≈ÖmÔøΩx'ÔøΩÔøΩK[6…í[ÔøΩÔøΩKÔøΩkÔøΩx&ÔøΩ;]ÔøΩÔøΩHvÔøΩÔøΩ$-sÔøΩ5ÔøΩPiÔøΩJLÔøΩeÔøΩVÔøΩÔøΩÔøΩhÔøΩcGÔøΩÀÅÔøΩ~ÔøΩCÔøΩÔøΩÔøΩ?xÔøΩ;ÔøΩÔøΩ6ÔøΩÔøΩÔøΩÔøΩÔøΩLÔøΩTOD9ÔøΩÔøΩ4ÔøΩSÔøΩÔøΩ ÔøΩÔøΩsHÔøΩxcÔøΩdÔøΩ9ÔøΩjÔøΩ, iÔøΩÔøΩ+ÔøΩnÔøΩÔøΩ ÔøΩÔøΩÔøΩ	ÔøΩ#ÔøΩXp%5L÷∞ÔøΩjÔøΩ«Ø@ivzkÔøΩÔøΩÔøΩ	G/ÔøΩÔøΩ_ÔøΩÔøΩÔøΩ<b◊äÔøΩRÔøΩÔøΩpGEÔøΩÔøΩÔøΩaÔøΩÔøΩ)ÔøΩÔøΩÔøΩ:ÔøΩc îÔøΩÔøΩ:ÔøΩm7ÔøΩÔøΩiÔøΩSÔøΩÔøΩﬂñQeÔøΩi&ÔøΩ?ÔøΩKÔøΩÔøΩw,ÔøΩH/N;ÔøΩÔøΩÔøΩ&gÔøΩÔøΩL?ÔøΩÔøΩÔøΩ=ÔøΩÔøΩÔøΩÔøΩb^ÔøΩ\PJ-oÔøΩRÔøΩ	GE' .ÔøΩÔøΩÔøΩW]8iÔøΩ?NÔøΩ`uÔøΩkÔøΩÔøΩr úrl’ü)ÔøΩ{rÔøΩÔøΩÔøΩwÔøΩbÔøΩÔøΩÔøΩÔøΩKÔøΩ?sÔøΩÔøΩ:^ÔøΩCÔøΩÔøΩÔøΩwÔøΩ_\1F`:ÔøΩÔøΩÔøΩ9I[ÔøΩcÔøΩÔøΩ#[ÔøΩBÔøΩÔøΩÔøΩÔøΩ^#ÔøΩ≈ö;ÔøΩ◊úÔøΩ y]ÔøΩÔøΩÔøΩÔøΩGÔøΩÔøΩ IÔøΩ)ÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩ:ÔøΩÔøΩxhfÔøΩÔøΩÔøΩÔøΩLÔøΩ/ÔøΩÔøΩXÔøΩPr7ÔøΩNÔøΩÔøΩÔøΩ|ÔøΩÔøΩÔøΩpÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩQlL&ÔøΩ-ÔøΩÔøΩÔøΩÔøΩ$4ÔøΩÔøΩbÔøΩxF5ÔøΩÔøΩmÔøΩÔøΩ'>ÔøΩÔøΩ}#ÔøΩuÔøΩﬂãoeÔøΩÔøΩÔøΩÔøΩ&zÔøΩÔøΩEÕÆqlÔøΩÔøΩaC]QÔøΩ‘ìÔøΩEÔøΩvÔøΩÔøΩÔøΩdd\ÔøΩÔøΩA^ÔøΩ\ÔøΩÔøΩÔøΩÔøΩÔøΩpÔøΩVWW}ÔøΩ^ÔøΩ@ÔøΩZÔøΩ~ÔøΩÔøΩz:ÔøΩÔøΩÔøΩÔøΩ""ÔøΩ""@;9@`/} ÔøΩ|ÔøΩÔøΩÔøΩÔøΩÔøΩ,ÔøΩ.\2XqÔøΩÔøΩD'A&V%ÔøΩÔøΩ<ÔøΩvÔøΩÔøΩQ⁄∏”ÑÔøΩÔøΩÔøΩÔøΩ{0 D+EX7ÔøΩÔøΩJ5=ÔøΩ[BrzÔøΩ;X~ÔøΩÔøΩqP<(WtÔøΩÔøΩÔøΩ ÔøΩOÔøΩÔøΩÃû^,kÔøΩÔøΩÔøΩÔøΩÔøΩAnÔøΩ}ÔøΩÔøΩÔøΩÔøΩRÔøΩe)ÔøΩe>ÔøΩÔøΩÔøΩ=ÔøΩ—èh{--;ÔøΩq[+ÔøΩÔøΩ÷ªÔøΩÔøΩ%ÔøΩÔøΩyÔøΩÔøΩÔøΩyÔøΩ	ÔøΩ ÔøΩ,	bÔøΩÔøΩÔøΩuÔøΩ,_ÔøΩÔøΩ(ÔøΩÔøΩWvÔøΩ%3|ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩVLÔøΩÔøΩ_r\^KwÔøΩ2ÔøΩCY«•&^ÔøΩÔøΩPÔøΩ^“äÔøΩMÔøΩÔøΩÔøΩÔøΩÔøΩM+ÔøΩÔøΩ8ÔøΩÔøΩaÔøΩÔøΩÔøΩ=ÔøΩ!~ÔøΩXnÔøΩÔøΩÔøΩ4ÔøΩÔøΩ5 ÔøΩ(ÔøΩ@ÔøΩÔøΩ""EAÔøΩÔøΩÔøΩvÔøΩ^ÔøΩw‘µÔøΩF:$ÔøΩÔøΩÔøΩÔøΩmJnÔøΩÔøΩÔøΩ""ÔøΩÔøΩÔøΩ'GDÔøΩÔøΩcÔøΩÔøΩÔøΩÔøΩ>ÔøΩÔøΩk-ÔøΩ>ÔøΩhNDÔøΩÔøΩE.ÔøΩalngÔøΩA^ÔøΩ0ZÔøΩÔøΩz)ÔøΩÔøΩÔøΩXÔøΩÔøΩdÔøΩÔøΩfX÷≥?bÔøΩaÔøΩ$ÔøΩÔøΩ;*ÔøΩw2EÔøΩ8Õé*0ÔøΩÔøΩwÔøΩqÔøΩÔøΩJ#MCgÔøΩÔøΩÔøΩÔøΩÔøΩ6ÔøΩ5/""'ÔøΩÔøΩiÔøΩÔøΩÔøΩHÔøΩ$ÔøΩƒ¶ÔøΩÔøΩÔøΩÔøΩ5ÔøΩ4ÔøΩÔøΩtÔøΩp*W c.;4d ÔøΩÔøΩÔøΩÔøΩÔøΩ=n]ÔøΩÔøΩ*QÔøΩÔøΩÔøΩ^/~^ÔøΩÔøΩVÔøΩÃúÔøΩVÔøΩl*ÔøΩÔøΩyÔøΩÔøΩ◊¥ ÔøΩB-ÔøΩÔøΩCﬂÄÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩQGÔøΩÔøΩjÔøΩÔøΩÔøΩÔøΩÔøΩ{Ùàò∂)ÔøΩÔøΩB#2S[ÔøΩÔøΩBÔøΩFÔøΩ` 4qÔøΩÔøΩÔøΩ3PQÔøΩ?ÔøΩy+BmVÔøΩpÔøΩrÔøΩÔøΩ ÔøΩl`ÔøΩ	ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩg4 IÔøΩZ,ÔøΩ~bBÔøΩÔøΩJ=xQGÔøΩU6kÔøΩ@ÔøΩ7BÔøΩÔøΩeÔøΩiÔøΩÔøΩjÔøΩÔøΩÔøΩÔøΩ”Ø5ÔøΩÔøΩ*ÔøΩ¬µ;&ÔøΩgÔøΩÔøΩÔøΩ-ÔøΩqe/z.[ÔøΩ$ÔøΩUÔøΩ-ÔøΩPÔøΩÔøΩÔøΩrÔøΩÔøΩÔøΩÔøΩ_ÔøΩMÔøΩÔøΩ/ZÔøΩ8ÔøΩÔøΩÔøΩ,ÔøΩ}ÔøΩÔøΩqÔøΩgÔøΩÔøΩlÔøΩpÔøΩLÔøΩÔøΩÔøΩÔøΩmDÔøΩdÔøΩPÔøΩÔøΩÔøΩÔøΩ/ÔøΩJ3UÔøΩ*ÔøΩÔøΩÔøΩh ôÔøΩKxÔøΩÔøΩÔøΩÔøΩÔøΩ›ºgwÔøΩÔøΩwÔøΩ–º!ÔøΩdÔøΩÔøΩP?ÔøΩÔøΩ\i,ÔøΩÔøΩ¬ÖrJÔøΩÔøΩÔøΩ ÔøΩÔøΩBÔøΩÔøΩnÔøΩN;KÔøΩqW7+ÔøΩ>ÔøΩ	QÔøΩwwUÔøΩÔøΩFÔøΩÔøΩÔøΩVW[ÔøΩ“∫:h\ÔøΩÔøΩÔøΩ5ÔøΩ%uf«•}xÔøΩ“íÔøΩÔøΩÔøΩÔøΩzNÔøΩ ;wIÔøΩ{>ÔøΩÔøΩqT◊àÔøΩ0ÔøΩ“ãÔøΩ.~ÔøΩÔøΩSÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩDÔøΩ*ÔøΩÔøΩÃÄ.n10f)FÔøΩÔøΩ|SM}ÔøΩfÔøΩ5HÔøΩF 0ÔøΩV-ÔøΩÔøΩÔøΩ:ÔøΩÔøΩÔøΩ6ÔøΩÔøΩ0HOC]ÔøΩÔøΩÔøΩÔøΩ2JÔøΩtkÔøΩ_ÔøΩÔøΩÔøΩÔøΩ+>ÔøΩKÔøΩ;$ÔøΩÔøΩ(!=uÔøΩ vb(KÔøΩeÔøΩX#7tÔøΩÔøΩÔøΩMÔøΩ@H3‡µé^ÔøΩÔøΩÔøΩOÔøΩTRÔøΩ?> e""g[,ÔøΩiPÔøΩÔøΩÔøΩÔøΩ0'ÔøΩÔøΩÔøΩÔøΩ84ÔøΩÔøΩ&ÔøΩÔøΩ,ÔøΩÔøΩ&ÔøΩAÔøΩ1ÔøΩ(?ÔøΩjMÔøΩKÔøΩ6ÔøΩ}ÔøΩ}ÔøΩ4ÔøΩ|-ÔøΩÔøΩÔøΩÔøΩt-ÔøΩfyÔøΩÔøΩÔøΩÔøΩdÔøΩÔøΩÔøΩ≈î""œèÔøΩ%ÔøΩ""ÔøΩ7ÔøΩtÔøΩ .RÔøΩwÔøΩ8EÔøΩ-4[^R'dÔøΩDÔøΩÔøΩÔøΩÔøΩnq%ÔøΩwÔøΩk9~«óÔøΩÔøΩÔøΩÔøΩÔøΩ- ÔøΩM CÔøΩ	~÷ëJÔøΩ(ÔøΩI<ÔøΩ›π+3ÔøΩqÔøΩÔøΩÔøΩdÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩ#ÔøΩP(ÔøΩÔøΩŒ®< ""ÔøΩpÔøΩ:ÔøΩÔøΩ_ÔøΩÔøΩ{ÔøΩÔøΩr""ÔøΩÔøΩy""ÔøΩÔøΩÔøΩÔøΩJ'ÔøΩYQKÔøΩ	ÔøΩÔøΩÔøΩ](ÔøΩÔøΩÔøΩÔøΩSÔøΩSIb4ÔøΩjÔøΩÔøΩÔøΩÔøΩUssÔøΩQ'ÔøΩ8:ÔøΩ«ÉÔøΩÔøΩÔøΩÔøΩYÔøΩU$ÔøΩ◊õÔøΩÔøΩZÔøΩÔøΩ0FÔøΩÔøΩÔøΩ[?ÔøΩÔøΩ)qÔøΩ8PÔøΩÃåÔøΩgÔøΩLÔøΩÔøΩÔøΩÔøΩ)ÔøΩÔøΩÔøΩLÔøΩÔøΩÔøΩ|b5ÔøΩ%‘üÔøΩ-bsÔøΩZYÔøΩeÔøΩÔøΩÔøΩÔøΩ6ÔøΩ!ÔøΩ{ÔøΩÔøΩÔøΩ»ÆBÔøΩ”üÔøΩÔøΩ@ÔøΩÔøΩÔøΩÔøΩ€êÔøΩ?KÔøΩÔøΩ}cÔøΩﬁúÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩkceÔøΩ?`)ÔøΩÔøΩÔøΩ@ÔøΩÔøΩbÔøΩÔøΩÔøΩÔøΩ=lyxanÔøΩLMJ:ÔøΩ,lÔøΩ=3ÔøΩÔøΩNc0*ÔøΩÔøΩ`TG,IÔøΩXÔøΩÔøΩ√çyÔøΩÔøΩ	ÔøΩ2ÔøΩÔøΩ{VÔøΩÔøΩjÿøÔøΩ4ÔøΩnÔøΩÔøΩÔøΩzÔøΩÔøΩ5 ÔøΩÔøΩ>ÔøΩuÔøΩÔøΩÔøΩÔøΩ {ÔøΩQUFÔøΩ+À†l$ÔøΩÔøΩÔøΩÔøΩoPÔøΩÔøΩÔøΩ)ÔøΩZ-ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩWÔøΩgoÔøΩ⁄£ÔøΩwÔøΩÔøΩÔøΩÔøΩdfÔøΩmY,ÔøΩ.wWÔøΩ,ÔøΩhÔøΩ’§NUÔøΩsÔøΩMÔøΩ ÔøΩtÔøΩ/S2ÔøΩÔøΩÔøΩÔøΩÔøΩ0JÔøΩÔøΩ'ÔøΩÔøΩvuÔøΩ$ÔøΩ?ÔøΩÔøΩ\E LÔøΩ]ÔøΩÔøΩBZ	5ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ3ÔøΩ ∫ÔøΩ+ÔøΩ8 hÔøΩÔøΩÔøΩÔøΩW+ÔøΩ=ÔøΩp7ÔøΩ5ÔøΩÔøΩÔøΩ–ÇNQÔøΩÔøΩÔøΩFÔøΩÔøΩÔøΩÔøΩh$ÔøΩ> ÔøΩÔøΩ^ÔøΩÔøΩÔøΩÔøΩÔøΩZSR?ÔøΩ%rÔøΩ;.Q!kÔøΩk5LÔøΩÔøΩ(ÔøΩÔøΩÔøΩ@/_ vwmNÔøΩÔøΩ""F$ÔøΩvÔøΩÔøΩÔøΩÔøΩ,ÔøΩ9&ÔøΩZÔøΩJÔøΩÔøΩÔøΩÔøΩNU>ÔøΩÔøΩP9P_)ÔøΩ ÔøΩÔøΩÔøΩ’ÜÔøΩÔøΩ5ÔøΩXD-WÔøΩ.>/W/3ÔøΩHfPu""|QÔøΩÔøΩ∆ôÔøΩ4ÔøΩÔøΩ€ôÔøΩÔøΩ@ÔøΩ:ÔøΩÔøΩ óÔøΩ%, CÔøΩÔøΩh=ÔøΩÔøΩÔøΩpÔøΩ)ÔøΩÔøΩÔøΩ{ÔøΩf4ÔøΩÔøΩ+ÔøΩÔøΩÔøΩ/^RÔøΩ/sÊ®≥ ÔøΩÔøΩÔøΩF,ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩCÔøΩÔøΩ<EÔøΩ\LqÔøΩÔøΩÀ†ÔøΩÔøΩ<>ÔøΩÔøΩ$ÔøΩ0ÔøΩÀøoÔøΩT$kCmo∆ô7m<	ÃçÔøΩf8ÔøΩ[wÔøΩÔøΩCÔøΩÔøΩÔøΩ)uÔøΩDsÔøΩ	ÔøΩ[ÔøΩÔøΩÔøΩ1ÔøΩÔøΩÔøΩÔøΩÔøΩUÔøΩB$V ?ÔøΩzÔøΩnZÔøΩnÔøΩrÔøΩs:mÔøΩhÔøΩÔøΩ-ÔøΩÔøΩ0ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ*ÔøΩÔøΩÔøΩrÔøΩÔøΩÔøΩT&ÔøΩ TÔøΩQÔøΩ‰∫¥ÔøΩÔøΩ}ÔøΩÔøΩWÔøΩÔøΩÔøΩqzÔøΩÔøΩÔøΩÔøΩkiÔøΩÔøΩIÔøΩÔøΩÔøΩuB}*""ÔøΩQÀåÔøΩTÔøΩl9ÔøΩÔøΩ/ÔøΩ4ÔøΩÔøΩ€∂}:ÔøΩÔøΩÔøΩ\`VÔøΩ$XÔøΩÔøΩ€õ%p€ØjÔøΩ!ÔøΩÔøΩÔøΩ_ÔøΩÔøΩ9^ÔøΩÔøΩDÔøΩ<ÔøΩÔøΩmÔøΩÔøΩ#awÔøΩÔøΩÔøΩRÔøΩ`xLÔøΩÔøΩÔøΩo{]z&45pÔøΩÔøΩSÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩÔøΩ5*÷•ÔøΩ$ÔøΩ(ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩfÔøΩQÔøΩEÔøΩ9ÔøΩSÔøΩ+ÔøΩo\^{u5""ÔøΩÔøΩEÔøΩÔøΩMÔøΩÔøΩ”ØxO_jÔøΩÔøΩÔøΩ&(ÔøΩÔøΩÔøΩÔøΩ|ÔøΩÔøΩO^Œ¨*'ÔøΩÔøΩÔøΩÔøΩlÔøΩÔøΩqTÔøΩgÔøΩuÔøΩÔøΩÔøΩÔøΩÔøΩy""ÔøΩÔøΩÔøΩ}cÔøΩÔøΩÔøΩMi>^ÔøΩCÔøΩÔøΩÔøΩÔøΩÔøΩnJÔøΩÈ≥öÔøΩÍôüÔøΩÔøΩÔøΩÔøΩÔøΩ.NÔøΩÔøΩÔøΩ*ÔøΩ\ÔøΩZWNvÔøΩMÔøΩÔøΩ\""ÔøΩÀäÔøΩ(ÔøΩIzBÔøΩH&ÔøΩgÔøΩJÔøΩKlMÔøΩcH€É5p1d<6nÔøΩ¬ÆMÔøΩ`ÔøΩÔøΩÔøΩÔøΩ5ÔøΩÔøΩÔøΩÔøΩ""nÔøΩÔøΩÔøΩÔøΩÔøΩjÔøΩ/[""ÔøΩÔøΩÔøΩÔøΩ<ÔøΩ0dSÔøΩ V^WpÔøΩ1ÔøΩiÔøΩÿøB	 ÔøΩÔøΩÔøΩddÔøΩÔøΩwÔøΩuÔøΩÔøΩ1ÔøΩcœπoÔøΩÔøΩÔøΩ|	ÔøΩÔøΩÔøΩÔøΩ.ÔøΩbÔøΩÔøΩÔøΩw-ÔøΩÔøΩ—®2@ÔøΩÔøΩÔøΩKXÔøΩbpy-;ÔøΩÔøΩ!ÔøΩÔøΩDÔøΩÔøΩÔøΩÔøΩ÷µÔøΩÔøΩÔøΩ“∑ÔøΩ]ÔøΩ8ÔøΩ	ÔøΩQ>ÔøΩY\A2ÔøΩuaÔøΩ&x¬ª_Y⁄ãZÔøΩBÔøΩ}.ﬂï&MÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩÔøΩÔøΩ=c'd1ÔøΩÔøΩ #ÔøΩÔøΩÔøΩ7wÔøΩÔøΩÔøΩÔøΩrCaCŒãÔøΩÔøΩÔøΩÔøΩyÔøΩÔøΩÔøΩÔøΩÔøΩ=ÔøΩÔøΩÔøΩÔøΩÔøΩPBÔøΩCÔøΩÔøΩÔøΩ0ÔøΩÔøΩgÔøΩÔøΩÔøΩÔøΩOd)ÔøΩdÔøΩÔøΩÔøΩÔøΩÔøΩ3&zÔøΩÔøΩkÔøΩ/ÔøΩGÔøΩÔøΩÔøΩ9$ÔøΩ>LÔøΩÔøΩÔøΩaÔøΩ@HÔøΩ#ÔøΩÔøΩx,|ÔøΩÔøΩÔøΩGÔøΩY~ÔøΩÔøΩÔøΩ^}ÔøΩÔøΩDÔøΩJÔøΩ5ÔøΩ'KÔøΩÔøΩ >ÔøΩ>ÔøΩ»èPÔøΩ'ÔøΩ~^ÔøΩKBÔøΩÔøΩVoEiÔøΩiÔøΩÔøΩ	GasÔøΩÔøΩ…âBÔøΩÔøΩV~ ÔøΩUÔøΩÔøΩS ÔøΩÔøΩ+ÔøΩ>ÔøΩÔøΩwÔøΩDÔøΩqÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩKÔøΩÔøΩuÔøΩ3‚π°ÔøΩ ≠ÔøΩ` €£2lÔøΩ1WÔøΩS<ÔøΩTÔøΩÔøΩhÔøΩÔøΩ/ÔøΩ 4LHÔøΩÔøΩ%&ÔøΩ&$gÔøΩmdÔøΩF^WuÔøΩÔøΩÔøΩﬂìÔøΩmlÔøΩÔøΩÔøΩWÔøΩÔøΩ5ÔøΩÔøΩÔøΩÔøΩUÔøΩ~/À≥ÃåB/ÔøΩÔøΩÔøΩÔøΩ!ÔøΩ""ÔøΩÔøΩIXMÔøΩF%ÔøΩ	ÔøΩOÔøΩ]ÔøΩÔøΩÔøΩplÔøΩÔøΩ1ÔøΩ@ÔøΩÔøΩÔøΩtÔøΩÔøΩ;jÔøΩ'skÔøΩ{Œä~ÔøΩKÔøΩfLÔøΩ""ÔøΩÔøΩ»ßJÔøΩGÔøΩgÔøΩÔøΩzF?\ÔøΩ9ÔøΩ2k!qpÔøΩtÔøΩÔøΩK6xÔøΩ/uJÔøΩÔøΩÔøΩÔøΩ.ÔøΩÔøΩÔøΩGCRÔøΩÔøΩ1{ÔøΩÔøΩÔøΩpÔøΩWÔøΩÔøΩ9ƒ∏ÔøΩÔøΩP.xQÔøΩ~V`tIKMÔøΩ~ÔøΩÔøΩÔøΩÔøΩÔøΩBÔøΩÔøΩÔøΩÔøΩÔøΩMÔøΩVÔøΩ?ÔøΩÔøΩ_xzÔøΩÔøΩ\TÔøΩUKÔøΩÔøΩmÔøΩ&ÔøΩÔøΩfÔøΩbÔøΩÔøΩÔøΩ ⁄©qÔøΩÔøΩÔøΩcLÔøΩ.ÔøΩVÔøΩÔøΩ5ÔºùÔøΩÔøΩÔøΩgp%ÔøΩb[ÔøΩ;ÔøΩÔøΩ`ÔøΩÔøΩ2ZÔøΩLÔøΩÔøΩVbÔøΩ<IÔøΩÔøΩWÔøΩÔøΩDÔøΩÔøΩh)H_ÔøΩHÔøΩS[ÔøΩ…∞ÔøΩZÈ†òay_ÔøΩÔøΩÔøΩD.kZeÔøΩÔøΩ ÔøΩHÔøΩÔøΩ2Ìõ†ÔøΩ	gÔøΩ_‘íÔøΩc!ÔøΩR/ÔøΩÔøΩKÔøΩw1DÔøΩÔøΩÔøΩMÔøΩQ`ÔøΩÔøΩÔøΩÔøΩ'E QIÔøΩÔøΩ@>ÔøΩcÔøΩÔøΩDÔøΩLÔøΩ&ÔøΩÔøΩÔøΩJnÔøΩÔøΩ∆ÉÔøΩÔøΩiÔøΩ&ÔøΩcÔøΩÔøΩ+ÔøΩÔøΩÔøΩÔøΩ^8ÔøΩÔøΩzÔøΩZ8ÔøΩ:ÔøΩÔøΩÔøΩKÔøΩÔøΩ8ÔøΩwpÔøΩÀé2 endstream endobj 31 0 obj << /Filter /FlateDecode /Length1 1450 /Length2 6316 /Length3 0 /Length 7313 >> stream xÔøΩÔøΩxTÔøΩÔøΩÔøΩ6M@ÔøΩ#H7 ÔøΩÔøΩÔøΩ&ÔøΩ7)!		ÔøΩ–õiÔøΩ{GP:HÔøΩÔøΩRÔøΩwTÔøΩ&])_ÔøΩxÔøΩÔøΩÔøΩÔøΩZﬂ∑ÔøΩVÔøΩÔøΩgÔøΩÔøΩ=ÔøΩÁôùÔøΩÔøΩÔøΩÔøΩÔøΩ+@ÔøΩvPU$ÔøΩÔøΩ(iÔøΩÔøΩ BB""BBÔøΩDÔøΩÔøΩF04ÔøΩ7NÔøΩnuGÔøΩÔøΩÔøΩÔøΩ`(ÔøΩCAhÔøΩBcÔøΩÔøΩHÔøΩ  ÔøΩ$ÔøΩÔøΩBB a!!ÔøΩÔøΩÔøΩHwIÔøΩ2ÔøΩh ""PÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ#ÔøΩÔøΩ  JHÔøΩÔøΩÔøΩv(ÔøΩ@ÔøΩa`ÔøΩ B;B]0;ÔøΩApÔøΩ!ÔøΩÔøΩ}ÔøΩÔøΩKÔøΩÔøΩvÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ| /ÔøΩ` EAÔøΩ=ÔøΩÔøΩÔøΩÔøΩ: ÔøΩÔøΩÔøΩÔøΩFÔøΩ0ÔøΩ_CÔøΩ=ÔøΩÔøΩ` 8EÔøΩ0.ÔøΩÔøΩÔøΩ`ÔøΩÔøΩÔøΩuÔøΩ""ÔøΩ""kÔøΩEÔøΩÔøΩ9 P ÔøΩÔøΩpÔøΩÔøΩ!~;ÔøΩÔøΩ`ÔøΩÔøΩ+ÔøΩC8 ÔøΩap(@WUK ÔøΩÔøΩÔøΩÔøΩ_DÔøΩÔøΩÔøΩÔøΩ<A08ÔøΩCÔøΩÔøΩ:ÔøΩÔøΩÔøΩ a*ÔøΩS ÔøΩsEÔøΩP0ÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩtqÔøΩ""ÔøΩ(ÔøΩ_ÔøΩ)ÔøΩ‹°`ÃπÔøΩÔøΩiÔøΩ3ÔøΩÔøΩÔøΩ{eC@ÔøΩÔøΩÔøΩp4FÔøΩÔøΩ<ÔøΩÔøΩ8ÔøΩÔøΩﬂò ÔøΩÔøΩn ÔøΩ7ÔøΩQÔøΩÔøΩF>ÔøΩÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩ ?WÔøΩ+ÔøΩS4 fÔøΩ|ÔøΩÔøΩ@ÔøΩP ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ@ FÔøΩ0—øÔøΩc`ÔøΩÔøΩ_kLÔøΩÔøΩaÔøΩ K!ÔøΩÔøΩÔøΩ ÔøΩ_ÔøΩ=YaA""ÔøΩ>ÔøΩÔøΩÔøΩnÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔüíÔøΩeTTDzÔøΩÔøΩÔøΩ% ÔøΩbB  (ÔøΩ3ÔøΩÔøΩ'ÔøΩÔøΩÔøΩÔøΩ@ÔøΩ#ÔøΩÔøΩ9ÔøΩÔøΩSÔøΩÔøΩÔøΩÔøΩ?ÔøΩ ÔøΩg,$FÔøΩP ◊øÔøΩÔøΩHHTÔøΩyÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ_QÔøΩWÔøΩÔøΩwFÔøΩpÔøΩo;ÔøΩ_ÔøΩÔøΩÔøΩrÔøΩÔøΩ}ÔøΩ00ÔøΩÔøΩ@cÔøΩ@ÔøΩÔøΩÔøΩSMÔøΩÔøΩÔøΩ6ÔøΩpÔøΩoÔøΩÔøΩÔøΩÔøΩFÔøΩÔøΩÔøΩÔøΩBÔøΩÔøΩÔøΩa(UÔøΩ7ÔøΩCÔøΩÔøΩRÔøΩ_ÔøΩÔøΩyÔøΩÔøΩP=$ ÔøΩÔøΩÔøΩx		ÔøΩÔøΩ 3d`gÔøΩ-ÔøΩÔøΩHÔøΩ	ÔøΩÔøΩÔøΩÓ´Ç #!ÔøΩÔøΩMXT rwÔøΩazÔøΩYÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ@ÔøΩÔøΩ (ÔøΩ@ÔøΩ1. LÔøΩ {ÔøΩ;—ØÔøΩ ÔøΩAÔøΩÔøΩÔøΩHoÔøΩÔøΩÔøΩ	ÔøΩo\ ÔøΩCxÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩ!!ÔøΩÔøΩ«úÔøΩÔøΩÔøΩe ÔøΩAÔøΩÔøΩMÔøΩÔøΩ#AÔøΩÔøΩÔøΩ;ÔøΩ„∑í0ÔøΩÔøΩÔøΩÔøΩ}5@ÔøΩÔøΩP0ÔøΩÔøΩ,ÔøΩÔøΩ*ÔøΩÔøΩÔøΩFÔøΩÔøΩÔøΩ}iÔøΩ#*ÔøΩÔøΩ7RÔøΩ1ÔøΩÔøΩÔøΩQÔøΩ KmÔøΩMÔøΩRE;ÔøΩÔøΩ7W>>ÔøΩÔøΩÔøΩÔøΩÔøΩlÔøΩÔøΩÔøΩ€úÔøΩÔøΩ4ÔøΩ|4ÔøΩJÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩPfÔøΩÔøΩaT<=jÔøΩb?QÔøΩÔøΩÔøΩÔøΩœí3ÔøΩtÔøΩÔøΩxÔøΩÔøΩÔøΩÔøΩ//.;P; @ÔøΩ	9K:V!ÔøΩcÔøΩ9ÔøΩ2zÔøΩÔøΩyÔøΩÔøΩeÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ%ÔøΩSX‹©b[ÔøΩÔøΩUÀ∏ÔøΩÔøΩOÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩjvWÔøΩUÔøΩSÔøΩÔøΩÔøΩ}»í7ÔøΩÔøΩOGÔøΩÔøΩÔøΩÔøΩ5 ÔøΩCQÔøΩDÔøΩ,5ÔøΩÔøΩÔøΩÔøΩ%ÔøΩcÔøΩV|ÔøΩÔøΩda_kbÔøΩÔøΩGÔøΩÔøΩÔøΩRÔøΩ-ÔøΩÔøΩÔøΩÔøΩuHÔøΩÔøΩÔøΩÔøΩÔøΩCFÔøΩÔøΩlÔøΩÔøΩ$ÔøΩMIQÔøΩ|5ÔøΩlÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩjx~7 3 ÔøΩÔøΩÔøΩ√µÔøΩ$ÔøΩÔøΩÔøΩÔøΩ\gÔøΩ1ÔøΩ 0TÔøΩÔøΩÔøΩÔøΩmlV""PÔøΩ*UÔøΩÔøΩÔøΩÔøΩsE1=8ÔøΩÎêΩÔøΩ¬Öt*ÔøΩÔøΩÔøΩÔøΩJOWÔøΩÔøΩiÔøΩcÔøΩÔøΩÔøΩÔøΩÁΩ∞ ÔøΩÔøΩ…àÔøΩÕ¶wmÔøΩ]HÔøΩÔøΩLÔøΩÔøΩ	fÔøΩY;=€âÔøΩ5DOÔøΩ(LxTÔøΩ–µÔøΩÔøΩÔøΩNÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩ<<ÔøΩÔøΩ5)yÔøΩÔøΩ1ÔøΩxÔøΩ#ÔøΩY#ÔøΩ ÔøΩÔøΩÔøΩÔøΩOOÔøΩÔøΩR9-czÔøΩP)ÔøΩÔøΩÔøΩLHÔøΩLÔøΩÔøΩBÔøΩÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩkWoÔøΩwÔøΩÔøΩaÔøΩ`ÔøΩ~ (LhÔøΩÔøΩÔøΩaÔøΩh[ÔøΩÔøΩÔøΩ}?÷∏ÔøΩpÔøΩÔøΩh>| >ÔøΩÔøΩÔøΩxedCUÔøΩ(ÔøΩ>ÔøΩgÔøΩÔøΩÔøΩÔøΩÔøΩ|3ÔøΩÔøΩHxTJÔøΩD–™ÔøΩÔøΩÔøΩLÔøΩ}qÔøΩoÔøΩvÔøΩÔøΩ9S7ÔøΩÔøΩÔøΩOÔøΩÔøΩÔøΩÔøΩ$ÔøΩY√äÔøΩÔøΩÔøΩ-JÔøΩÔøΩÔøΩÔøΩÔøΩ-ÔøΩ@ZmÔøΩMÔøΩÔøΩ]ÔøΩÔøΩÔøΩ-OÔøΩÔøΩÔøΩZo6ÔøΩÔøΩÔøΩ,wSTPÔøΩqÔøΩ=ÔøΩYÔøΩÔøΩ~ÔøΩ!ÔøΩGiÔøΩLÔøΩÔøΩ%	hÔøΩ!Dx!ÔøΩÔøΩhÔøΩHÔøΩÔøΩÔøΩ\ÔøΩ)‹±d{ÔøΩMQwÔøΩÔøΩzpÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩQÔøΩaÔøΩ/ÔøΩÔøΩ(DÔøΩÔøΩOO=ÔøΩÔøΩÔøΩÔøΩtÔøΩÔøΩÔøΩ( ;kÔøΩÔøΩlXÔøΩÔøΩ1(ÔøΩh7ÔøΩGÔøΩÔøΩ_*9 oÔøΩ(4ÔøΩÔøΩ~_hÔøΩÔøΩrÔøΩu)ÔøΩj#ÔøΩ|ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩGÔøΩÔøΩ=Aw{`ÔøΩÔøΩÔøΩÕÉŒøIrvrnÔøΩsÔøΩÔøΩ K%ÔøΩx/ÔøΩ9~ÔøΩÔøΩ'GÔøΩjÔøΩÔøΩÔøΩ5Õ£ - GÔøΩKfÔøΩ<ÔøΩoÔøΩUÔøΩÔøΩpÔøΩ3+@q—á..ÔøΩ0FOÔøΩid(ÔøΩÔøΩ(mÔøΩÔøΩÔøΩÔøΩ›∫ÔøΩSÔøΩ#ÔøΩg1ÔøΩÔøΩkÔøΩuÔøΩAÔøΩÔøΩrÔøΩÔøΩ5ÔøΩ)XIÔøΩfÔøΩÔøΩÔøΩDÔøΩ∆≠ÔøΩWÔøΩÔøΩ~nÔøΩ~7ÔøΩÔøΩÔøΩAOÔøΩJevÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩuÔøΩÔøΩÔøΩjÔøΩÔøΩ?ÔøΩÔøΩÔøΩÔøΩÔøΩ@""Î™•pÔøΩ‘éÔøΩÔøΩxÔøΩ/&ÔøΩIÔøΩ ÔøΩ]U+Ru,&ÔøΩcW$J-ÔøΩÔøΩCMÔøΩuÔøΩ<[ÔøΩvÔøΩÔøΩÔøΩRÔøΩJÔøΩÔøΩÔøΩÔøΩ}ÔøΩÔøΩÔøΩ[-ÔøΩÔøΩxÔøΩZÔøΩ15ÔøΩŒ∏ÔøΩÔøΩ OÔøΩ‘π""ÔøΩ}eG"":ÔøΩIyÔøΩÔøΩ~ÔøΩÔøΩÔøΩvgJÔøΩX;{ÔøΩÔøΩÔøΩ∆ôÔøΩ5Ny]ÔøΩÔøΩ|U1Dc@ÔøΩ◊ô|*ÔøΩÔøΩ3ÔøΩ9z xÔøΩpÔøΩXOÔøΩÔøΩÔøΩOsÔøΩlEÔøΩÔøΩÔøΩÔøΩyu[ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩQÀÇÔøΩsÔøΩMZÔøΩÔøΩ;ÔøΩÔøΩÔøΩ…î“ãzÔøΩqÔøΩ}ÔøΩLÔøΩÔøΩÔøΩcÔøΩgu4.—ñ;ÔøΩ€ë[NvÔøΩ	ÔøΩ$ÔøΩÔøΩ#ÔøΩAÔøΩ XU#KÔøΩÔøΩÔøΩ$j} ÔøΩeÔøΩ^ÔøΩÔøΩÔøΩ%@ÔøΩ_⁄¨ÔøΩVOR)$>ÔøΩeÔøΩÔøΩÔøΩÔøΩÔøΩ05ÔøΩÔøΩIÔøΩœ©ÔøΩÔøΩÔøΩÔøΩ""∆¨)ÔøΩ?KÔøΩÔøΩefÔøΩ(ÔøΩmÔøΩÔøΩÔøΩÔøΩÔøΩC	ÔøΩs*ÔøΩ,ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ|)of~ÔøΩ\ÔøΩÔøΩwÔøΩÔøΩÔøΩÔøΩÔøΩyqÔøΩYWÔøΩÔøΩÔøΩUÔøΩÔøΩÔøΩ1 ÔøΩÔøΩ#ÔøΩÔøΩRÔøΩÔøΩÔøΩ/ÔøΩ8SÔøΩ<ÔøΩÔøΩnÔøΩÔøΩ,ÔøΩÔøΩÔøΩÔøΩGÔøΩ6'![CÔøΩgÔøΩ^sƒ¨ZQ<ÔøΩÔøΩ∆ØÔøΩF5sÔøΩÔøΩÔøΩLXYÔøΩÔøΩÔøΩb1ZÔøΩy""9ÔøΩYÔøΩÔøΩ:?VÔøΩLÔøΩnÔøΩZ ÔøΩÔøΩzÔøΩaÔøΩeEÔøΩ zÔøΩ)ÔøΩ(CÔøΩÔøΩÔøΩ!ÔøΩhÔøΩÔøΩ*3ÔøΩvÔøΩÔøΩÔøΩÔøΩÔøΩiÔøΩÔøΩ ÔøΩ0PÔøΩ_ÔøΩxﬂÄ|ÔøΩdÔøΩSÔøΩ,)ÔøΩe4ÔøΩÔøΩÔøΩZ?ÔøΩy⁄ØÔøΩDÔøΩ,kﬂëÔøΩÔøΩ|ÔøΩ ÔøΩÔøΩ<ÔøΩÔøΩÔøΩ&dmÔøΩÔøΩdamÔøΩ?ÔøΩTÔøΩeuÔøΩ)7ÔøΩGÔøΩÔøΩwhÔøΩ.ÔøΩ'g8ÔøΩÔøΩ%^ÔøΩFzvŸîÔøΩlÔøΩÔøΩÔøΩH0XÔøΩÔøΩÔøΩÔøΩËªûÔøΩ|ÔøΩÔøΩpÔøΩÔøΩ.vÔøΩÔøΩVÔøΩÔøΩÔøΩ""mÔøΩÔøΩoÔøΩsÔøΩY¬ôÿá""ÔøΩÔøΩA=ÔøΩÔøΩUÔøΩ^y`vÔøΩÔøΩDÔøΩÔøΩÔøΩ<0ÔøΩÔøΩÔøΩÔøΩmÁ´¶$ÔøΩÔøΩÔøΩÔøΩTÔøΩ≈≤YÔøΩ6,;TdÔøΩÔøΩÔøΩÔøΩÔøΩuÔøΩÔøΩuÔøΩÔøΩ@{ÔøΩ ΩÔøΩÔøΩ""geÔøΩz's#ÔøΩ;a,AÔøΩ^ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩNÔøΩÔøΩÔøΩÔøΩwÔøΩ]ÔøΩÔøΩT[\ÔøΩÔøΩjÔøΩ>}s<:jEﬁû«©ÔøΩÔøΩÔøΩR/ÔøΩjÔøΩÔøΩx|‘ò«ùÔøΩÔøΩ-ÔøΩwÔøΩÔøΩÔøΩ'ÔøΩwÔøΩÔøΩ(?ÔøΩÔøΩÔøΩFÔøΩ}Ã•-ÔøΩ|ÔøΩÔøΩ	ÔøΩ%ÔøΩqÔøΩhÔøΩÔøΩI⁄∞tÔøΩDÔøΩSÔøΩ5WÔøΩyËìûSgÔøΩÔøΩ7{ÔøΩs“õÔøΩui[ÔøΩuÔøΩ	ÔøΩÔøΩÔøΩÔøΩGÔøΩÔøΩÔøΩÔøΩ…Öp..w]ÔøΩZÔøΩbF»∂ÔøΩÔøΩ.ÔøΩÔøΩÔøΩwÔøΩeÔøΩÔøΩÔøΩÔøΩ[ÔøΩÔøΩÔøΩ |rÔøΩÔøΩÔøΩÔøΩ<ÔøΩRÔøΩÔøΩ&ÔøΩÔøΩgÔøΩIQi ÔøΩMÔøΩÔøΩÔøΩMÔøΩÔøΩ€ôÔøΩ:aÔøΩÔøΩAÔøΩ=ÔøΩÔøΩPÔøΩfÔøΩÔøΩÔøΩ)ÔøΩoyÔøΩ|ÔøΩ`U .ÔøΩ%ÔøΩJÔøΩÔøΩgÔøΩ ,PÔøΩÔøΩÔøΩ&&ÔøΩÔøΩÔøΩÔøΩkÔøΩÔøΩdÔøΩÔøΩRÔøΩZi%\<D”ûÔøΩÔøΩÔøΩÔøΩ{ÔøΩÕûÔøΩO5V?ÔøΩÔøΩÔøΩCÔøΩf⁄ÄbÔøΩNÔøΩÔøΩÔøΩÔøΩÔøΩ}:_ÔøΩÔøΩuÔøΩÔøΩZÔøΩaÔøΩÔøΩQÔøΩÔøΩÔøΩ}ÔøΩÔøΩÔøΩ~,ÔøΩÔøΩ6FÔøΩ[ÔøΩ7)ÔøΩ/GTF÷Ω[ÔøΩÔøΩkRXKi~€éÔøΩw‘éÔøΩ_Xb{ÔøΩFÔøΩÔøΩÔøΩÔøΩEÔøΩÔøΩ?ÔøΩBÔøΩÔøΩÔøΩ;ÔøΩÔøΩÔøΩ""hÔøΩÔøΩ‘ÅÔøΩ‚Ñ•ÔøΩ0ÔøΩÿ±ÔøΩÔøΩ6!ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩn9X'%eÔøΩÔøΩÔøΩ∆ÉÔøΩ^ÔøΩÔøΩ""Y»µÔøΩÔøΩQVlpwÔøΩÔøΩKÔøΩÔøΩÔøΩe:ÔøΩÔøΩÔøΩJÔøΩtÔøΩGÔøΩÔøΩsoZÔøΩÔøΩ%|oÔøΩÔøΩE*-	ÔøΩÔøΩ[{3ÔøΩoÔøΩ ÔøΩxÔøΩÔøΩ%bÔøΩÔøΩGÔøΩ5ÔøΩ ÔøΩÔøΩÔøΩÔøΩ4OÔøΩÔøΩÔøΩ ZnÔøΩÔøΩÔøΩÔøΩÔøΩkf^}#ÔøΩÔøΩ»Ü+kÔøΩÔøΩ[ÔøΩÔøΩÔøΩ6ÔøΩÔøΩ#ÔøΩÔøΩmÔøΩÔøΩÔøΩcÔøΩÔøΩKÔøΩPÔøΩ]ÔøΩÔøΩiLÔøΩxpÔøΩÔøΩÔøΩtHƒ∑»∏4?+ÔøΩrYÔøΩ+\’õÔøΩ,cÔøΩ<œë-XÔøΩ7ÔøΩÔøΩÔøΩÔøΩu~ÔøΩ  W!ÔøΩÔøΩjzÔøΩ;|ÔøΩuÔøΩÔøΩZSÔøΩÔøΩÔøΩDGÔøΩtÔøΩÔøΩkÔøΩDÔøΩÔøΩÔøΩ8s!ÔøΩ ÔøΩÔøΩXÔøΩÔøΩÔøΩ`-ÔøΩMh-ÔøΩyÔøΩÔøΩÔøΩDÔøΩÔøΩÔøΩÔøΩ7ÔøΩyÔøΩÔøΩ ÔøΩÔøΩ#ÔøΩ#`ÔøΩÔøΩ81ÔøΩÔøΩÔøΩÔøΩÔøΩBÔøΩÔøΩ=ÔøΩÔøΩP3ÔøΩ–πÔøΩÔøΩ}ÔøΩ”ßÔøΩÔøΩBBÔøΩÔøΩÔøΩrÔøΩÔøΩLÔøΩw›¢^ÔøΩÔøΩÔøΩLÔøΩÔøΩÔøΩ}ÔøΩ&iÔøΩjÔøΩ3{A_ÔøΩ%ÔøΩÔøΩÔøΩÔøΩÔøΩx.ÔøΩ7y/ÔøΩÔøΩ2ÔøΩÔøΩÔøΩPÔøΩ{*S!IÔøΩÔøΩ’™<ÔøΩÔøΩk3<ÔøΩÔøΩu'!#qƒ≠ÔøΩÔøΩÔøΩ<ÔøΩÔøΩfÔøΩÔøΩ;6dÔøΩ€≤$yÔøΩÔøΩÔøΩÔøΩqÔøΩcÔøΩÔøΩ%ÔøΩ8@INRÔøΩL~‘≠B7ÔøΩÔøΩÔøΩÔøΩk4yÔøΩÔøΩÔøΩ4ÔøΩp>ÔøΩ4rÔøΩÔøΩ[ÔøΩW`Z‡æâÔøΩz2zÔøΩn⁄®-ÔøΩÔøΩ;3ÔøΩÔøΩÔøΩÔøΩ√ùÔøΩÔøΩ-keXÔøΩeÔøΩ$J:ÔøΩcÔøΩpÀ∑€ãÔøΩÔøΩÔøΩÔøΩXiÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÿèGoÔøΩÔøΩÔøΩ^LÔøΩÔøΩ\ÔøΩda~ÔøΩtÔøΩÔøΩÔøΩÔøΩuÔøΩoÔøΩÔøΩ$ÔøΩÔøΩ0ÔøΩÔøΩÔøΩ'ÔøΩ1ÔøΩ:ÔøΩ*<ÔøΩÔøΩ{+ÔøΩÔøΩT!,JÔøΩ4""ÔøΩÔøΩ}ÔøΩ8i?ÔøΩÔøΩ!}ÔøΩÔøΩ<H`KPÔøΩÔøΩÔøΩaÔøΩyHÔøΩ0 mÔøΩÔøΩÔøΩÔøΩ#ÔøΩÔøΩÔøΩ%vÔøΩÔøΩÔøΩ$ÔøΩ{ÔøΩÔøΩ6ÔøΩÔøΩzÔøΩÔøΩaÔøΩ^ÔøΩÔøΩv%-ÔøΩÔøΩÔøΩ`[a""HÔøΩdEÔøΩzÔøΩSÔøΩÔøΩÔøΩ8ÔøΩÔøΩ@BÔøΩÔøΩÔøΩ&ÔøΩIÔøΩË©ïÔøΩb3ÔøΩÔøΩÔøΩFÔøΩ ÔøΩÔøΩÔøΩiÔøΩÔøΩWÔøΩÔøΩŒ∫ÔøΩÔøΩÔøΩÔøΩÔøΩkŸª ÔøΩÔøΩÔøΩÔøΩnÔøΩFÔøΩÔøΩÔøΩ.ÔøΩYÔøΩÔøΩ@ÔøΩÔøΩ""aÔøΩ+ÔøΩ=ÔøΩÔøΩÔøΩÔøΩ#ÔøΩÔøΩÔøΩ|ÔøΩÔøΩ’∂ÔøΩÔøΩÔøΩ_ÔøΩX&~zÔøΩiÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩgÔøΩÔøΩÔøΩ ÔøΩS5ÔøΩÔøΩ|ÔøΩÔøΩÔøΩÔøΩQÔøΩÔøΩÔøΩÔøΩ[ÔøΩS^ÔøΩÔøΩÔøΩ8⁄°:ÔøΩÔøΩÔøΩÔøΩÔøΩJÔøΩÔøΩÔøΩzkÔøΩrÔøΩ.ÔøΩP{ÔøΩ ÔøΩÔøΩÔøΩ~OÔøΩÔøΩÔøΩ.ÔøΩÔøΩÔøΩÔøΩYÔøΩ$ÔøΩvÔøΩn ÔøΩÔøΩÔøΩOÔøΩeÔøΩXﬁπÔøΩBÔøΩ  èÔøΩiHMÔøΩY'LÔøΩÔøΩ7ÔøΩrL9ﬂôNÔøΩ!ÔøΩsÔøΩÔøΩÔøΩAJ!ÔøΩ.*mÔøΩ(ÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩD¬Ö_ÔøΩ79+hXEpÔøΩÔøΩ>#j4,ÔøΩrmÔøΩ6ÔøΩhÔøΩÔøΩÔøΩÔøΩœåÔøΩÔøΩ(Â±écÔøΩOÔøΩ ÔøΩcÔøΩÔøΩÔøΩ^pÔøΩÔøΩ^ÔøΩ}ÔøΩ~ÔøΩÔøΩ<NÔøΩWCyÔøΩ=_Œõ&ÔøΩzÔøΩ(]ÔøΩÔøΩÈ≤ãÔøΩÔøΩ4ÔøΩ ÔøΩpeÔøΩÔøΩÔøΩ)ÔøΩo[ÔøΩÔøΩÔøΩYÔøΩÔøΩÔøΩVÔøΩÔøΩ|#CÔøΩÔøΩÔøΩtÔøΩÔøΩÔøΩU=%ÔøΩHÔøΩLÔøΩaÔøΩÔøΩ‹ºÔøΩÔøΩcÔøΩÔøΩ'ÔøΩÔøΩvÔøΩX?ÔøΩ;vÔøΩ\ÔøΩÔøΩÔøΩx6ÔøΩv;ÔøΩÔøΩÔøΩÔøΩ!WÔøΩœ∞>EÔøΩÔøΩvÔøΩÔøΩ+{ÔøΩ4ÔøΩYÔøΩxLÔøΩŒê@ÔøΩyÊßíD=XÔøΩÔøΩÔøΩ+xÔøΩn9ÔøΩBÔøΩÔøΩÔøΩdy√ëÔøΩsÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩfuÔøΩÔøΩÔøΩ lÔøΩTp^Mﬁ™ÔøΩgÔøΩ&8tÔøΩS$ÔøΩ$ÔøΩÔøΩ.\ÔøΩÔøΩYÔøΩÔøΩÔøΩÔøΩ(<ÔøΩÔøΩRjAÔøΩ#ÏÜ£gÔøΩFÔøΩnÔøΩÔøΩÔøΩlÔøΩÔøΩ(ÔøΩ:;TÔøΩS◊Ö.ÔøΩq~ÔøΩRÔøΩ”ùyÔøΩÔøΩ.ÔøΩÔøΩÔøΩ0ÔøΩÔøΩÔøΩ4ÔøΩ;9œøqÔøΩÔøΩ\ÔøΩÔøΩ=6ÔøΩFÔøΩÔøΩÔøΩcÔøΩ	ÔøΩ Ñ]ÔøΩÔøΩFÌèõÔøΩÔøΩRÔøΩW ÔøΩ|ÔøΩqÔøΩV€≤/ÔøΩÔøΩ3ÔøΩÔøΩÔøΩÔøΩÔøΩ3ÔøΩ qÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ7+x+ÔøΩ›üÔøΩ,ÔøΩ[ÔøΩÔøΩt5cÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩMÔøΩ9d6Gn""/ÔøΩ&ÔøΩ)ÔøΩO#›ûfÔøΩÔøΩbÔøΩÔøΩPgÔøΩÔøΩÔøΩ* ìRÔøΩ<_Œ∏1ÔøΩÔøΩÔøΩNWÔøΩÔøΩtÔøΩÔøΩJAOÔøΩ	~ÔøΩbBÔøΩÔøΩqÔøΩÔøΩ(=JkqÔøΩ∆´ÔøΩ>ÔøΩÔøΩ ±ÔøΩÔøΩEQÔøΩ];ÔøΩÔøΩ|ÔøΩ]ÔøΩpK[ÔøΩÔøΩÔøΩÔøΩ.ÔøΩƒ≠œìÔøΩÔøΩzÔøΩTii]DÔøΩQÔøΩUÔøΩeÔøΩÔøΩÔøΩHÔøΩjkÔøΩ9ÔøΩÔøΩ{ÔøΩÀü[UV`ÔøΩ4ÔøΩVÔøΩÔøΩÔøΩkÔøΩÔøΩHx8oE€ÑyTÔøΩJNÔøΩÔøΩ+ÔøΩÔøΩa`ÔøΩ“™ÔøΩrp&ÔøΩxKÔøΩeÔøΩÔøΩÔøΩÔøΩ}ÔøΩÔøΩÔøΩÔøΩÔøΩ4ÔøΩÔøΩÔøΩ1BuÔøΩÔøΩÔøΩœñÔøΩ’ôÔøΩÔøΩ +ÔøΩÔøΩÔøΩ~M^ÔøΩÔøΩÔøΩÔøΩÔøΩYtÔøΩ|DÔøΩÔøΩTKÔøΩÔøΩ‘ïÔøΩMÔøΩÔøΩ\	|ÔøΩ”õoÔøΩ-ÔøΩÔøΩ ¥ÔøΩtÔøΩÔøΩ)FÔøΩÔøΩÃüÔøΩiÔøΩÔøΩ9ÔøΩÔøΩÔøΩ[6ÔøΩiÔøΩlG>V""<0ÔøΩÔøΩ]ÔøΩÔøΩÔøΩÔøΩqSz2-%ÔøΩ""ÔøΩÔøΩ>ÔøΩ[Y8ÔøΩÔøΩrÔøΩÔøΩmÔøΩÔøΩM|ÔøΩÔøΩÔøΩÔøΩGÔøΩÔøΩ)VtÔøΩÔøΩÔøΩAGHÔøΩÔøΩÔøΩ""ÔøΩAÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ€ùÔøΩAÔøΩLÔøΩrÔøΩ'EÔøΩfÔøΩcÀ¥ÔøΩ~HÔøΩÔøΩI›¶ÔøΩÔøΩÔøΩ<ÔøΩŸä‘ç0≈ªI7ÔøΩJÃ®ÔøΩÔøΩÔøΩ5ÔøΩÔøΩÔøΩYÔøΩ^DnÔøΩFÔøΩÔøΩÔøΩ[ÔøΩÔøΩMÔøΩ7ÔøΩÔøΩÔøΩuÔøΩ$ZÔøΩ&ÔøΩÔøΩÔøΩcmÔøΩÔøΩÔøΩLu8ÔøΩjÔøΩÔøΩnGÔøΩ5I;ÔøΩÔøΩAÔøΩÔøΩÔøΩ ÔøΩÔøΩxÔøΩ[ÔøΩzqÔøΩÔøΩÔøΩÔøΩt.ÔøΩQ+g'ÔøΩ@/ÔøΩCÔøΩ&ÔøΩ9ÔøΩPÔøΩÔøΩtÔøΩÔøΩp4ÔøΩ,ÔøΩ⁄ÉÔøΩuÔøΩNÔøΩÔøΩÔøΩajZÔøΩgÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩ:ÔøΩŒáÔøΩÔøΩÔøΩIÔøΩÔøΩbÔøΩ5BÔøΩÔøΩ8«º5ÔøΩ'√ÑÔøΩX'+ÔøΩevÔøΩÔøΩÔøΩÔøΩÔøΩBÔøΩÔøΩÔøΩÔøΩgÔøΩYÔøΩ{]ÔøΩÔøΩ~xÔøΩÔøΩÔøΩ3$JqPhÔøΩ2TVÔøΩ[IQÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩxtÔøΩ1*$ÔøΩÔøΩLYÔøΩÔøΩÔøΩÔøΩ`O2ÔøΩQ~ÔøΩÔøΩËÖöÔøΩ√ä1~ÔøΩÔøΩ{ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩhÔøΩÔøΩÔøΩOjÔøΩksÔøΩ“∑I ÔøΩÔøΩ=◊óÔøΩÔøΩÔøΩKBWÔøΩ $ÔøΩFÔøΩÔøΩÔøΩÔøΩFÔøΩzÔøΩqﬁõÔøΩ>—ùKÔøΩÔøΩt!ÔøΩyWupÔøΩÔøΩÔøΩÔøΩÔøΩXRGÔøΩÔøΩÔøΩÔøΩ+ŒêÔøΩÔøΩ6`ÔøΩÔøΩÔøΩÔøΩÔøΩdOiÔøΩgÔøΩ$ÔøΩÔøΩr'OÔøΩWÔøΩ,2ÔøΩ3kF:DÔøΩÔøΩÔøΩnÔøΩÔøΩ*ÔøΩ ÔøΩÔøΩÔøΩÔøΩ1ÔøΩLLsÔøΩNXÔøΩÔøΩ4ÔøΩmÔøΩ5>ÔøΩ[=ÔøΩPÔøΩIÔøΩ"" 8ÔøΩx|ÔøΩÔøΩ@BÔøΩrÔøΩÔøΩu√éÔøΩSÔøΩÔøΩÔøΩÔøΩ+G< ZÔøΩÔøΩ86k÷ìC8ÔøΩÔøΩP›êÔøΩÔøΩBÔøΩÔøΩ%ÔøΩÎéÄÔøΩHÔøΩÔøΩÔøΩ\,ÔøΩ>WÔøΩÔøΩ;ÔøΩÔøΩ;ÔøΩÔøΩÔøΩÔøΩUsÔøΩÔøΩÔøΩÔøΩTLÔøΩCFÔøΩ%m\ÔøΩjVÔøΩÔøΩ-$ÔøΩÔøΩjÔøΩTÔøΩ<BÔøΩ8ÔøΩÔøΩÔøΩÔøΩq4ÔøΩY*ÔøΩZÔøΩWEÔøΩÔøΩ@g ÔøΩ0ÔøΩÔøΩÔøΩÔøΩÔøΩ0∆•9W0ÔøΩÔøΩVÔøΩ7ÔøΩÔøΩÔøΩ8ÔøΩ""ÔøΩ'ÔøΩSsÔøΩp|Û¥ì´ÔøΩ^HWÔøΩÔøΩLÔøΩLÔøΩÔøΩ\qU9$ÔøΩhÔøΩÔøΩÔøΩÔøΩÔøΩakÔøΩ[ÔøΩdÔøΩÔøΩ‹òÔøΩÔøΩyÔøΩÔøΩqÔøΩRÔøΩÔøΩÔøΩÔøΩeÔøΩ""?:yoÔøΩ‘Öz ZqÔøΩ^/iÔøΩÔøΩn_ÔøΩÔøΩÔøΩÔøΩCÔøΩlÔøΩÔøΩÔøΩfÔøΩÔøΩYÔøΩ 	ÔøΩÔøΩÔøΩÔøΩÔøΩ)Z◊ÆÔøΩ>ŒìÔøΩ{ÔøΩ?ÔøΩ=Q”ÄÔøΩLÔøΩÎ∏Ük]lwÔøΩyÔøΩrÔøΩuÔøΩÔøΩf[XzÔøΩl8ÔøΩÔøΩÔøΩ|ÔøΩÔøΩU^c9ÔøΩSIÔøΩÔøΩÔøΩLWÔøΩÔøΩvÔøΩFÔøΩÔøΩ	ÔøΩÔøΩaÔøΩ?4|ÔøΩ}ÔøΩÔøΩÔøΩÔøΩxÔøΩÔøΩÔøΩÔøΩ*ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ∆∫ÔøΩÔøΩÔøΩÔøΩ}Z@ÔøΩk ÔøΩÔøΩYOÔøΩ:ÔøΩÔøΩ‚∫•ÔøΩÔøΩ<ÔøΩÔøΩ€üÔøΩÔøΩÔøΩÔøΩÔøΩ◊ÑÔøΩÔøΩÔøΩKÔøΩIÔøΩhÔøΩ|ÔøΩ8sJÔøΩ:ÔøΩ9ÔøΩÔøΩÔøΩ3ÔøΩÔøΩUÔøΩ=ÔøΩ ÔøΩÔøΩGX|ÔøΩÔøΩ#ÔøΩ«®jÔøΩÔøΩ^ÔøΩzÔøΩÔøΩÔøΩ&ÔøΩÔøΩZÔøΩ‹çÔøΩ=«í[ÔøΩbcÔøΩOÔøΩ\ÔøΩÔøΩ ÔøΩM-(ÔøΩIqGÔøΩrÔøΩÔøΩ9ÔøΩ)]ÔøΩË•≥ÔøΩ[ÔøΩÔøΩKFÔøΩÔøΩÔøΩ.È≠Öyu€åEÔøΩEÔøΩh.ÔøΩDÔøΩ ÔøΩZÔøΩÔøΩÔøΩppÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩreÔøΩÔøΩÔøΩÔøΩ d;ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩvÔøΩWÔøΩoÔøΩÔøΩÔøΩÔøΩcK9HX‚öîÔøΩ◊¥TÔøΩ!vG)MÔøΩR	W–´&ÔøΩÔøΩ6AÔøΩÔøΩAÔøΩ)ÔøΩÔøΩÔøΩ?ÔøΩ«ïÔøΩÔøΩÔøΩÔøΩhÔøΩ3ÔøΩn~ÔøΩ(fzÔøΩ⁄¥ÔøΩ}ÔøΩÔøΩ$ÔøΩ5lM%Yv8‹øQÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩ›Öj#ÔøΩ=ÔøΩÔøΩÔøΩ~'ÔøΩU-›òÔøΩ)vÔøΩ?ÔøΩ'ÔøΩ ÔøΩÔøΩ=-ÔøΩÔøΩOÔøΩÔøΩÔøΩÔøΩÔøΩ¬ö\ÔøΩ‹éwÔøΩnÔøΩÔøΩÔøΩÔøΩÔøΩ3ÔøΩÔøΩÔøΩ·™òÔøΩ+%ÔøΩNeMf]ÔøΩÔøΩÔøΩÔøΩ\ÔøΩ^VÔøΩÔøΩ&ÔøΩC]ÔøΩÔøΩAÔøΩ;1@ÔøΩ[ÔøΩÔøΩd ""ÔøΩÔøΩ7ÔøΩWtÔøΩ='ÔøΩÔøΩÔøΩ=ÔøΩÔøΩ|ÔøΩ◊çÔøΩœáÔøΩÔøΩ?›∂ÔøΩwÔøΩÔøΩmÔøΩÔøΩÔøΩ3ÔøΩ4ÕÜV~pÔøΩMÔøΩ(ÔøΩÔøΩrÔøΩ>ÔøΩÔøΩKÔøΩÔøΩÔøΩc*ÔøΩyÔøΩ&{ÔøΩXÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩÔøΩxÔøΩÔøΩÔøΩÔøΩ_ ÔøΩÔøΩRÔøΩ`ÔøΩÔøΩiE;ÔøΩ28ÔøΩw|ÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩTB~HﬁávÔøΩÔøΩÔøΩGX]ÔøΩ8_X3ÔøΩN9=ÔøΩÔøΩSÔøΩÔøΩ~ÔøΩ)T{ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩZÔøΩÔøΩL~ÔøΩ◊∫ÔøΩÔøΩ5ÔøΩ3ÔøΩÔøΩÔøΩÔøΩ]ÔøΩdÔøΩÔøΩ6wÔøΩFÔøΩÔøΩ{):ÔøΩ%ÔøΩÔøΩ]^ÔøΩÔøΩeÔøΩŒñ√≥ÔøΩN|ÔøΩÔøΩk34|ÔøΩÔøΩÔøΩÔøΩx;ÔøΩÔøΩÔøΩ^ÔøΩMÔøΩZ_ÔøΩÔøΩÔøΩÔøΩHjÔøΩ{0 mxÔøΩÔøΩÔøΩÔøΩ)xÔøΩ{SÔøΩ’†ÔøΩlqÔøΩM9+ÔøΩpÔøΩQÔøΩ 4IÔøΩgÔøΩUbqÔøΩIOxÔøΩÔøΩÔøΩÔøΩ{ÔøΩÔøΩ ÔøΩHÔøΩWÔøΩÔøΩ5ÔøΩpÔøΩ|ÔøΩÔøΩ@ÔøΩ/ÔøΩ'ÔøΩÔøΩÔøΩ@v*MÔøΩG:ÔøΩÔøΩÔøΩ6.VOiTÔøΩ	ÔøΩVÔøΩ&ÔøΩ2ÔøΩwÔøΩT‹∑ÔøΩÔøΩÔøΩÔøΩM>ÔøΩÔøΩÔøΩÔøΩ7ÔøΩoÔøΩ FŒæKf%ÔøΩÔøΩ7myÔøΩ{ÔøΩ}<ÔøΩ>ÔøΩÔøΩÔøΩÔøΩp”ë8ÔøΩ¬úÔøΩbÔøΩÔøΩÔøΩÔøΩ(UÔøΩÔøΩÃé8eÔøΩ9mfÔøΩÔøΩŸªÔøΩm>Qƒ†∆íjtÔøΩ`ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩe+JÔøΩ^ÔøΩgÔøΩQK`\""ÔøΩzÔøΩQN∆àyÔøΩÔøΩ3ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ{ÔøΩÔøΩ'‰ìé7ÔøΩgÔøΩÀëOy17ÔøΩvÔøΩMi◊¶'—∞ÔøΩ7FÔøΩÔøΩ[ﬁ≠yS9$DÔøΩqÔøΩKÔøΩFÔøΩ<ÔøΩw ÔøΩ›∂ÔøΩÔøΩgÔøΩ/ÔøΩlÔøΩÔøΩÔøΩÔøΩmÔøΩÔøΩ=ÔøΩ≈ìÔøΩSÔøΩp*ÔøΩÔøΩ‹´ÔøΩsÔøΩ3CÔøΩt?ÔøΩÔøΩ>ÔøΩsÔøΩÔøΩJÔøΩ ë|ÔøΩwÔøΩÔøΩNÔøΩÔøΩOÔøΩÔøΩÔøΩ;ÔøΩ""ÔøΩÔøΩq=ÔøΩÔøΩVÔøΩBÔøΩ?bÔøΩ}—îÔøΩ,YÔøΩFÔøΩ+XÔøΩÔøΩÔøΩÕ∑ÔøΩo5ÔøΩÔøΩÃæÔøΩÔøΩD#eÔøΩ}FzÔøΩ|ÔøΩÔøΩ%ÔøΩŒêÊ†ÑgÔøΩb.ÔøΩÔøΩÔøΩq,xÔøΩÔøΩ)jhvÔøΩdÔøΩÔøΩÔøΩ€±=(qÔøΩi%ÔøΩ<ÔøΩÔøΩpÔøΩÔøΩÔøΩÔøΩfÔøΩ9ÔøΩÔøΩQ`UÔøΩdÔøΩz$ÔøΩÔøΩÔøΩÔøΩ HÔøΩÔøΩÔøΩnÔøΩÔøΩ4DÔøΩ6ÔøΩ+ÔøΩm#^sÔøΩÔøΩ)»èo√é:ÔøΩÔøΩÔøΩTBZÔøΩÔøΩÔøΩY|ÔøΩÔøΩTÔøΩNÔøΩnÔøΩX(ÔøΩÕûÔøΩZ8ÔøΩvÔøΩÔøΩÔøΩCÔøΩÓ≥öHÔøΩEnÔøΩÔøΩÔøΩDÔøΩÔøΩzÔøΩspÔøΩÔøΩ,ÔøΩGÔøΩÔøΩÔøΩuÔøΩÔøΩi.W=ÔøΩpjÔøΩ9zÔøΩÔøΩÔøΩh+:ÔøΩTÔøΩGÔøΩÔøΩY#ÔøΩÔøΩTÔøΩÔøΩ1ÃôNÔøΩd=Uas1ÔøΩ2ÔøΩÔøΩ|bÔøΩÔøΩg\ÔøΩl5“°ShÔøΩÔøΩÔøΩ5ÔøΩÔøΩKgÔøΩ?%ÔøΩ8ZO\ +ÔøΩ8ÔøΩÔøΩKÔøΩ}ÔøΩÔøΩIÔøΩ+aJWÔøΩ@ÔøΩ{=ÔøΩ¬´ÔøΩÔøΩCLÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9ÔøΩÎûèTÔøΩÔøΩÔøΩVÔøΩSXEÔøΩÔøΩÔøΩÔøΩ\ÔøΩÔøΩÔøΩÔøΩÔøΩ }ÔøΩÔøΩiÔøΩÔøΩÔøΩ~ÔøΩuÔøΩÔøΩÔøΩ&'ÔøΩÔøΩÔøΩÔøΩÔøΩ)nÔøΩÔøΩTÔøΩÔøΩÔøΩaÔøΩdp:ÔøΩdÔøΩÔøΩqÔøΩÔøΩÔøΩhÔøΩm}ﬁ®ÔøΩo>ÔøΩÔøΩÔøΩÔøΩ_ÔøΩÔøΩ9ÔøΩ\^—§ÔøΩÔøΩw'trÔøΩKJÔøΩÔøΩÔøΩ…∞[q9ÔøΩÔøΩﬁ¥ÔøΩPÔøΩÔøΩ/ÔøΩÔøΩiÔøΩ0ÔøΩ	~d{ÔøΩÔøΩkÔøΩÔøΩ1ÔøΩ@\ÔøΩ'fÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ[ÔøΩ?ÔøΩJÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩ#?ÔøΩOÔøΩ%wÔøΩÔøΩÔøΩkÔøΩÔøΩÔøΩÔøΩÔøΩsjÔøΩ’üeQ»¥nÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ=ÔøΩÔøΩÔøΩ%'ÔøΩ/ÔøΩ=6ÔøΩ7ÔøΩÔøΩdÔøΩ;W-P endstream endobj 32 0 obj << /Filter /FlateDecode /Length1 1370 /Length2 5904 /Length3 0 /Length 6851 >> stream xÔøΩÔøΩvPÔøΩÔøΩÔøΩ-“´4ÔøΩ ÔøΩ!$@ÔøΩHÔΩ£HÔøΩH ÔøΩPBÔøΩ^ÔøΩÔøΩ"" ÔøΩt)“´""RÔøΩ+(MÔøΩÔøΩÔøΩQÔøΩ|ÔøΩÔøΩ{ÔøΩÔøΩ}oÔøΩÔøΩLÔøΩ;kÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ0ÔøΩp 'ÔøΩ ÔøΩÔøΩÔøΩÔøΩ2 H IRÔøΩÔøΩ!pHÔøΩ_ÔøΩÔøΩÔøΩÔøΩE`ÔøΩ ÔøΩÔøΩÔøΩÔøΩ	ÔøΩÔøΩÔøΩGÔøΩÔøΩcÔøΩ /$ , ÔøΩ(ÔøΩe@ ÔøΩ$$ÔøΩ/""ÔøΩSÔøΩÔøΩFÔøΩ ÔøΩ@ÔøΩ ÔøΩRÔøΩbÔøΩÔøΩWaÔøΩ=ÔøΩÔøΩÔøΩ`yyYÔøΩÔøΩÔøΩ ÔøΩÔøΩEÔøΩÔøΩ8W8ÔøΩÔøΩÔøΩ	0ÔøΩ8!ÔøΩ8ÔøΩ?J)ÔøΩÔøΩpÔøΩ >>>@( ÔøΩxÔøΩ\ÔøΩ pÔøΩ 8ÔøΩÔøΩ ÔøΩ~ 0ÔøΩÔøΩÔøΩ&RÔøΩÔøΩ\ÔøΩ?ÔøΩ)ÔøΩÔøΩÔøΩÔøΩ ÔøΩGc	^hÔøΩ@ÔøΩ`ÔøΩÔøΩ0tÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩ ÔøΩÔøΩ]ÔøΩoÔøΩÔøΩBÔøΩÔøΩdÔøΩÔøΩÔøΩEÔøΩhÔøΩ3	jÔøΩqÔøΩ81  ÔøΩEÔøΩ""ÔøΩB>ÔøΩÔøΩ@B	ÔøΩﬂùC*ÔøΩ (aÔøΩÔøΩÔøΩaÔøΩ<ÔøΩ8,ÔøΩ@ÔøΩQÔøΩWÔøΩ)ÔøΩÔøΩaÔøΩ ÔøΩÔøΩaÔøΩ~ÔøΩÔøΩÔøΩÔøΩÔøΩ;ÔøΩ/ÔøΩÔøΩfÔøΩÔøΩÔøΩÔøΩﬂÖ3 sÔøΩ5ÔøΩÔøΩ]ÔøΩÔøΩÔøΩÔøΩÔøΩkÔøΩÔøΩÔøΩ ÔøΩÔøΩ`.p ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ= p_'WÔøΩ_ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩAÔøΩ/ÔøΩ0AÔøΩÔøΩ;ÔøΩÔøΩLÔøΩpÔøΩ~ÔøΩÔøΩÔøΩPo8 ÔøΩÔøΩÔøΩÔøΩﬂÅÔøΩÔøΩÔøΩ` ÔøΩ8ÔøΩ]hÔøΩÔøΩT'ÔøΩpÔøΩ?kÔøΩÔøΩ{""|ÔøΩ ÔøΩÔøΩÔøΩ –ØœøÔøΩnÔøΩ√†ÔøΩÔøΩÔøΩÔøΩﬂØÔøΩÔøΩ-mu-cÔøΩ?ÔøΩ;vÔøΩÔøΩÔøΩ/. ÔøΩÔøΩÔøΩ#ÔøΩUR +'ÔøΩg#(ÔøΩoÔøΩÔøΩÔøΩjÔøΩÔøΩ1 ÔøΩ?ÔøΩNÔøΩ_ {ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ Z8@ÔøΩ?ÔøΩA@NÔøΩ/ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩKÔøΩÔøΩ›êÔøΩÔøΩ;,ÔøΩ;ÔøΩÔøΩÔøΩ(ÔøΩÔøΩ@–¨ÔøΩÔøΩ}ÔøΩÔøΩÔøΩÔøΩZÔøΩÔøΩxVCxÔøΩÔøΩ;ÔøΩÔøΩÔøΩ|ÔøΩÔøΩv!hY, IÔøΩÔøΩX ÔøΩ/fÔøΩÔøΩ9ÔøΩÔøΩQÔøΩÔøΩÔøΩÔøΩ”ê4ÔøΩÔøΩEÔøΩzÔøΩÔøΩ@ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩFx}`	ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ}ÔøΩÔøΩNÔøΩ/ÔøΩIBd POO(ÔøΩ DPÔøΩ$ÔøΩÔøΩÔøΩÔøΩÔøΩ2@ÔøΩÔøΩÔøΩ) ¬åÔøΩ gÔøΩ'’Øk$PÔøΩÔøΩJÔøΩÔøΩÔøΩN^ÔøΩÔøΩÔøΩÔøΩ aÔøΩÔøΩÔøΩÔøΩÔøΩ;QMOaÔøΩCÔøΩ÷ÑÔøΩ~ÔøΩVÔøΩÔøΩ_""ÔøΩ_lÔøΩJÔøΩÓâÑÔøΩÔøΩ=ÔøΩwÔøΩ#ÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩ<ÔøΩnÔøΩÔøΩYÔøΩÔøΩT ÔøΩÔøΩÔøΩÔøΩ√æv]9ÔøΩÔøΩ“¥ÔøΩqDÔøΩ=ÔøΩomÔøΩÔøΩÔøΩÔøΩÔøΩrÔøΩ_ÔøΩaÔøΩÔøΩÔøΩÔøΩMÔøΩÔøΩÔøΩÔøΩ-—òÔøΩÔøΩÔøΩÔøΩÔøΩV0ÔøΩrÔøΩ$LÔøΩ[jÔøΩrÔøΩÔøΩi;vÔøΩF~ÔøΩ<9dÔøΩIÔøΩÔøΩ≈©ÔøΩoÔøΩXÔøΩ\[ÔøΩÔøΩ[ÔøΩ1ÔøΩ_ÔøΩÔøΩÔøΩ2ÔøΩ6{JÔøΩÔøΩ?ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ6>ÔøΩvÔøΩMÔøΩÔøΩtÔøΩÔøΩB›óU2ÔøΩLÔøΩÔøΩ~:<yIÔøΩÔøΩ,ÔøΩ9: X""ÔøΩ[ÔøΩCÔøΩgÔøΩ	ÔøΩÔøΩ≈®pÔøΩ9TÔøΩÔøΩÔøΩÔøΩZÔøΩ+v PÔøΩyw@y!ÔøΩSÔøΩÔøΩÔøΩÕªÔøΩ ≠JÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ~ÔøΩkk#ÔøΩÔøΩyÊ®ó3ÔøΩa6NÔøΩÔøΩ>ÔøΩÔøΩÔøΩmÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩ7l)2FŸ¨ÔøΩU|;ÔøΩÔøΩ*ÔøΩÔøΩ“àÔøΩG{ÔøΩ7ÔøΩÔøΩÔøΩ	ÔøΩÔøΩÔøΩF4ÔøΩ@ÔøΩÔøΩPÔøΩÔøΩ!ÔøΩÔøΩWÔøΩADMÔøΩnŒäÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ`ÔøΩÔøΩÔøΩ@ÔøΩÔøΩS_tÔøΩ:ÔøΩÔøΩUÔøΩ‘•ÔøΩÔøΩÔøΩÔøΩÔøΩeÔøΩÔøΩ1ÔøΩÔøΩÔøΩÔøΩ=ZF}ÔøΩ\LÔøΩÔøΩ@ÔøΩiScÔøΩzÔøΩÔøΩHÔøΩ(ÔøΩ,ÔøΩÔøΩÔøΩÔøΩÔøΩ{KÔøΩÔøΩbÔøΩÔøΩÔøΩÔøΩÔøΩ&eÔøΩsnÔøΩ@ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩgÿñÔøΩ<ÔøΩÔøΩ<ÔøΩ_ÔøΩRÔøΩÔøΩi{ 	{4ÔøΩÔøΩÔøΩtÔøΩEÔøΩcÔøΩ ÔøΩ:kÔøΩaGsF{ÔøΩwÔøΩÔøΩÔøΩ""ÔøΩÔøΩ ÔøΩ œéÔøΩ’íÔøΩLmÔøΩOÔøΩÔøΩQÔøΩÔøΩÔøΩÔøΩTÔøΩÔøΩl\ÔøΩ√çS/ÔøΩÔøΩgÔøΩÔøΩÔøΩ#ÔøΩÔøΩ2⁄®ÔøΩtÔøΩndÔøΩÔøΩÔøΩ1…ª √üÔøΩÔøΩÔøΩÔøΩÔøΩ}ÔøΩÔøΩqÔøΩ'ÔøΩÔøΩÔøΩ)ÔøΩÔøΩÔøΩM€øÔøΩQ5ÔøΩ6ÔøΩ%ÔøΩÔøΩÔøΩhÔøΩ9ÔøΩt9ÔøΩ*ÔøΩ3ÔøΩÔøΩIÔøΩmKÔøΩ@NlÔøΩ_ÔøΩÔøΩkÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩc√≠ÔøΩÔøΩ/$m7BÔøΩYÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9:ÔøΩÔøΩÔøΩÔøΩÎªûÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩVÔøΩÔøΩÔøΩÔøΩÔøΩ&ÔøΩÔøΩlH ÔøΩ ÔøΩÔøΩÔøΩ+ÔøΩ-DÔøΩ^ÔøΩ_-ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩuÔøΩYdÔøΩÔøΩ{mÔøΩÔøΩÔøΩcÔøΩ/xÔøΩÔøΩJeŒπ”ªÔøΩÔøΩ~!3BÔøΩÔøΩÔøΩÔøΩ)a&AW}^ÔøΩÔøΩSÔøΩÔøΩ}ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩIÔøΩxcÔøΩe^ÔøΩFÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩhku…î ÔøΩÔøΩÔøΩÔøΩÔøΩUÔøΩÔøΩÔøΩÔøΩÔøΩ`{WXÔøΩÔøΩÔøΩÔøΩfÔøΩÔøΩÔøΩoÔøΩSOLEÔøΩÔøΩÔøΩÔøΩZ_#A*YDƒîLÔøΩÔøΩÔøΩLBÔøΩÔøΩ_ÔøΩÔøΩDÔøΩÔøΩ3ÔøΩl”òÎ∞™ÔøΩZS,ÔøΩÔøΩiyÔøΩrpÔøΩÔøΩÔøΩ:0CÔøΩ*2_ÔøΩﬁçl„ñíÔøΩxvÔøΩÔøΩiGÔøΩÔøΩm4ÔøΩÀí’´vK⁄äÔøΩÔøΩ€äÔøΩ(ÔøΩÔøΩIÔøΩÔøΩTÔøΩ •ÔøΩqWÔøΩ6ÔøΩ#ÔøΩ…èÔøΩÔøΩÔøΩz`ÔøΩvo.ÔøΩbrFxwÔøΩÔøΩÔøΩSÀãÔøΩZn~(OÔøΩÔøΩ( euvÔøΩJ[ÔøΩ@ÔøΩ|»°AÔøΩÔøΩz8$'=ÔøΩÓññÔøΩVÔøΩ pVÔøΩ1ÔøΩÔøΩÔøΩÔøΩÔøΩ4ÔøΩÔøΩÔøΩÔøΩÕêÔøΩ\%]GÔøΩÔøΩÔøΩ-;ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩY_ÔøΩ=bÔøΩÔøΩ”£ÔøΩBÔøΩaÔøΩ?ÔøΩÔøΩÔøΩÔøΩnÔøΩÔøΩn_ÔøΩVZÔøΩÔøΩÔøΩ*ÔøΩÔøΩ<ÔøΩÔøΩVÔøΩÔøΩ*ÔøΩ(ÔøΩÔøΩÔøΩ={ÔøΩÔøΩÕÖ ÔøΩ'ÔøΩÔøΩIÔøΩrÔøΩÔøΩrWÔøΩÔøΩÔøΩtV ÔøΩÔøΩ,[VÔøΩÔøΩvqÔøΩÔøΩ}\?ÔøΩQÔøΩPYÔøΩeeÔøΩEÔøΩpÔøΩa>7ÔøΩqxÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩxnk[ÔøΩÔøΩVZÔøΩÔøΩA65ÔøΩÔøΩ*ÔøΩÔøΩ%ÔøΩNÔøΩ'#ÔøΩÔøΩÔøΩ"",WÔøΩIÔøΩÔøΩÔøΩsÔøΩVÔøΩÔøΩOÔøΩ#ÔøΩÕùÔøΩÔøΩÔøΩ0`\y√¥6ÔøΩZÔøΩmjÔøΩÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩ9""?\ÔøΩ\€ØÔøΩ-ÔøΩ_ÔøΩÔøΩ.ÔøΩ[`ÔøΩÔøΩQÔøΩ?3ÔøΩÔøΩVH6ÔøΩÔøΩQÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩkÔøΩÔøΩÔøΩÔøΩ`ﬂÅÔøΩ8ÔøΩAÔøΩCÔøΩCuA ”∏ÔøΩWÔøΩ\WÔøΩÔøΩHÔøΩÔøΩ	ÔøΩPdÔøΩÔøΩÔøΩn>ÔøΩ f{5ÔøΩÔøΩÔøΩÔøΩ-ÔøΩ@JÔøΩÔøΩÔøΩ“ΩyÔøΩÔøΩÔøΩ>*1H5ÔøΩlÔøΩÔøΩzPÔøΩ@gO_ÔøΩ&ÔøΩGÔøΩÔøΩÔøΩJÔøΩuÔøΩÔøΩ{AÔøΩUÔøΩqÔøΩ_¬ÖÔøΩÔøΩﬁâÔøΩÔøΩÔøΩÔøΩ’æÔøΩ}yÔøΩgÔøΩÔøΩÔøΩmÔøΩÔøΩMzÔøΩÔøΩ.*…¢ÔøΩÀ¢ÔøΩÔøΩBÔøΩÔøΩUqÔøΩ1ÔøΩ|YÔøΩÔøΩÃüÔøΩÔøΩÔøΩiÔøΩÔøΩ$}ÔøΩÔøΩÔøΩTÔøΩ^ÔøΩ,CÔøΩÔøΩÔøΩ ÔøΩQÔøΩÔøΩ_ÔøΩÔøΩÔøΩÔøΩtiBÿ≥ÔøΩÔøΩSÔøΩVÔøΩÔøΩÔøΩVÔøΩ‹ßjÔøΩÔøΩ=ÔøΩ;ÔøΩMÔøΩf ÔøΩÔøΩÔøΩtÔøΩeÔøΩÔøΩ€•ÔøΩÓ£îVaﬂ∑ÔøΩÔøΩÔøΩÔøΩ[%ÔøΩ"" 8fBWÔøΩ]e}nÔøΩBH#gŒítÔøΩ\ÔøΩ*8ÔøΩÔøΩÔøΩs|ÔøΩÔøΩÔøΩÔøΩuÔøΩÔøΩIÔøΩ%ÔøΩÔøΩkÔøΩ?_ÔøΩg‹°O)fÔøΩs>/xwÔøΩÔøΩÔøΩÔøΩPÔøΩ,ÔøΩDÔøΩÔøΩ1LÔøΩ2OokÔøΩÔøΩÔøΩÔøΩ«åhÔøΩ3ÔøΩ√¶ÔøΩÔøΩi;ÔøΩÔøΩUÔøΩ:NyFÔøΩÔøΩÔøΩÔøΩcÔøΩÔøΩyÔøΩÔøΩÔøΩLbÔøΩ>CÔøΩÔøΩfÔøΩ`ÔøΩ{ÔøΩÔøΩÔøΩ$ÔøΩ- ÔøΩrÔøΩiÔøΩÔøΩ|ÔøΩHÔøΩÔøΩ5pu~ÔøΩpÔøΩÔøΩ1 ÔøΩ6ÔøΩÔøΩfÔøΩÔøΩEÔøΩÔøΩA@ÔøΩÔøΩ1ÔøΩÔøΩ>dÔøΩF=rÔøΩxGÔøΩÔøΩÔøΩÔøΩO◊ÜÔøΩq""ÔøΩM.ÔøΩ*XYÔøΩ“õÔøΩh<ÔøΩ8ÔøΩÔøΩÔøΩÔøΩÔøΩaÔøΩ~ÔøΩ&ÔøΩÔøΩVÔøΩJ(ÔøΩÔøΩ6dÔøΩKnÔøΩgÊûæÔøΩUlb€∫ÔøΩÔøΩ_ÔøΩV@ÔøΩÔøΩÔøΩWÔøΩ\ÔøΩÔøΩS”ô9)2.ÔøΩÔøΩ{ÔøΩÔøΩ^.wÔøΩÔøΩÔøΩÔøΩeÔøΩ$ÔøΩÔøΩÔøΩÔøΩÔøΩk1ÔøΩ,UÔøΩiÔøΩÔøΩBÔøΩ!ÔøΩÔøΩBuÔøΩ>ÔøΩÔøΩÔøΩmD$[*[nÔøΩVÔøΩyAÔøΩÔøΩÔøΩbÔøΩÔøΩ2ÔøΩAÔøΩ ?ÔøΩ–ú]~gÔøΩ$ÔøΩÔøΩÔøΩÔøΩiÔøΩ=%PÔøΩm?ÔøΩhÔøΩÔøΩÔøΩÔøΩTC[#ÔøΩpl’´ÔøΩ\ÔøΩÔøΩÔøΩÔøΩÔøΩ""gc}ÔøΩÔøΩÔøΩÔøΩÔøΩcÔøΩ[$ÔøΩUœìÔøΩ^ÔøΩHÔøΩÔøΩ4ÔøΩÔøΩ_ÔøΩZZÔøΩi=ÔøΩÔøΩÔøΩÔøΩ–ùz!{ÔøΩÔøΩAQÔøΩs ÔøΩsÔøΩÔøΩKÔøΩsHÔøΩ/ÔøΩÔøΩ|pÔøΩBÔøΩƒ¶ÔøΩ1ÔøΩ.CW[>ÔøΩ@ÔøΩÔøΩÔøΩn'ÔøΩÔøΩÔøΩÔøΩme{=ÔøΩ-ÔøΩÔøΩÔøΩÔøΩEÔøΩ ÔøΩLÔøΩ|qG>4v{~ÔøΩyÔøΩ]ÔøΩÔøΩÔøΩ6\XÔøΩÔøΩy/„îæ|ÔøΩÎå∫`:cÔøΩQzÔøΩl""ÔøΩƒ≤ÔøΩÔøΩzÔøΩÔøΩÔøΩÔøΩ^#ÔøΩ-vÔøΩÔøΩÔøΩ,1ÔøΩÔøΩrÔøΩinÔøΩÔøΩÔøΩÔøΩXEÔøΩ@ÔøΩÔøΩÔª§};ÔøΩ@ÔøΩEWÔøΩÔøΩÔøΩ/jÔøΩMÔøΩÔøΩÔøΩLÔøΩL7ÔøΩJFGÔøΩÔøΩTikÔøΩÔøΩ—óÔøΩAÔøΩÔøΩtUÔøΩ_ÔøΩÔøΩ#ÔøΩ0ÔøΩjÔøΩÔøΩÔøΩbÔøΩÔøΩWHzÔøΩÔøΩ>ÔøΩÔøΩEoÔøΩÕΩnX/ÔøΩ3ÔøΩÀá,|4RgÔøΩQÔøΩÔøΩÔøΩÔøΩ~ÔøΩLÔøΩyÔøΩÔøΩÔøΩ.ÔøΩÔøΩLmÔøΩkÔøΩcÔøΩ{H]ÔøΩR=ÔøΩcÔøΩ OQpdÔøΩ(≈ä2ÔøΩKÔøΩÔøΩ2coÔøΩÔøΩAFÔøΩ$ÔøΩÔøΩÔøΩÔøΩ!OÔøΩÔøΩÔøΩÔøΩiÔøΩ;ÔøΩXÔøΩÔøΩuH=ÔøΩÔøΩLÔøΩÔøΩÔøΩÔøΩÔøΩkyÔøΩ7BÔøΩ9ÔøΩÔøΩne/P0ÔøΩÔøΩyÔøΩÔøΩ0OÔøΩÔøΩwÔøΩÔøΩDYÔøΩÔøΩD;ÔøΩÔøΩ)ÔøΩRÔøΩÔøΩÔøΩÔøΩ""X~ÔøΩÔøΩ""ÔøΩÔøΩÔøΩ!ÔøΩu›•~5cxÔøΩs ÔøΩÔøΩ^ÔøΩÔøΩ ÔøΩ[ZOÔøΩÔøΩÔøΩ< EÔøΩgY ÔøΩPÔøΩÔøΩmnÔøΩ]ÔøΩÔøΩJÔøΩBÔøΩÔøΩÔøΩÔøΩÔøΩ+DÔøΩ3ÔøΩÔøΩIlt4!\NÔøΩÔøΩÔøΩ^ÔøΩ ÔøΩ|ÔøΩMÔøΩÔøΩSKO]ÔøΩ8ÔøΩÔøΩÔøΩ odÔøΩÔøΩhÔøΩÔøΩSÔøΩ3ÔøΩ KbÔøΩÔøΩ0ÔøΩÔøΩÔøΩÔøΩÔøΩbÔøΩTÔøΩZ[ÔøΩMÔøΩÔøΩwÔøΩ*Õ∫pÔøΩÔøΩ,ÔøΩ3hﬂãÔøΩo mÔøΩÔøΩÔøΩQÔøΩyPÔøΩÔøΩÔøΩeÔøΩnÔøΩÔøΩÔøΩX\ÔøΩn>tÔøΩx∆àÔøΩÔøΩÔøΩÔøΩuÔøΩ:dQ5ÔøΩLÔøΩYÔøΩ""ÔøΩÔøΩÔøΩÔøΩÔøΩ@ÔøΩÔøΩÔøΩÔøΩÔøΩTÔøΩwCVÔøΩÔøΩvÔøΩ)ÔøΩjÔøΩÔøΩkÔøΩÔøΩjÔøΩÔøΩÔøΩAUyUÔøΩÔøΩÔøΩ?ÔøΩÔøΩÔøΩ)IvÔøΩ#OÔøΩG¬ànÔøΩPÔøΩ/ÔøΩf[UÔøΩÔøΩi≈¨ÔøΩÔøΩ(]ÔøΩkÔøΩÔøΩ)8IÿöÔøΩÔøΩ«àÔøΩÔøΩÔøΩÔøΩ>c2NÔøΩH/NÔøΩÔøΩKÔøΩ#ÔøΩB$ÔøΩoqÔøΩD ÔøΩ9ZÔøΩV8ÔøΩG$ÔøΩP-yÔøΩÔøΩKÔøΩÔøΩÔøΩdÔøΩÔøΩd ÔøΩÔøΩSÔøΩÔøΩÔøΩÔøΩÔøΩ8X#_ÔøΩÔøΩOrpZÔøΩÔøΩÔøΩÔøΩÔøΩ;ÔøΩjjc'ÔøΩÔøΩﬂ¢ÔøΩÔøΩ◊î»¢+ÔøΩzmÔøΩÔøΩAgÔøΩÔøΩ—ák⁄ìq5ÁÜúÔøΩ)ÔøΩÔøΩÔøΩ/ÔøΩÔøΩÔøΩÔøΩIÔøΩr$ÔøΩÔøΩk@ÔøΩÔøΩÔøΩ'yX ¢""ÔøΩhÔøΩÿ¶lÔøΩ3ÔøΩÔøΩM%ÔøΩ5*}+ÔøΩÔøΩ:W7`√ìÔøΩÔøΩM ÔøΩSbÔøΩ÷ÇÔøΩÔøΩ""ÔøΩÔøΩ‰ºäÔøΩÔøΩÔøΩ3 QÔøΩÔøΩLÔøΩa>ÔøΩhÔøΩÔøΩ9qÔøΩÔøΩGÔøΩÔøΩÔøΩÔøΩ⁄¨&ÔøΩ[B9ÔøΩÔøΩÔøΩŒÆv4<8{ÔøΩÔøΩ{}ÔøΩÔøΩÔøΩ~ÔøΩÔøΩÔøΩÔøΩ(ÔøΩÔøΩÔøΩ_yÔøΩÔøΩÔøΩuÔøΩ{yn%ÔøΩÔøΩ>~ÔøΩÔøΩŒ≥NÔøΩNquAq_.ÔøΩ)ÔøΩÔøΩÔøΩ¬üÔøΩ@?ÔøΩ-ÔøΩÔøΩÔøΩÔøΩT*$ÔøΩÔøΩ2ÔøΩÔøΩÔøΩÊºÅÔøΩ%ÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩ[ÔøΩa	V‘úÔøΩN9ÔøΩÔøΩ%9vÔøΩÔøΩÔøΩcÔøΩZÔøΩÔøΩkÔøΩdÔøΩÔøΩÔøΩÔøΩ0ÔøΩLÔøΩ#ÔøΩËñäGYÔøΩTÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩE(ÔøΩÔøΩkCq^ÔøΩ[fcÔøΩÔøΩÔøΩÔøΩﬂí>÷ªÔøΩÔøΩ$ÔøΩ?T&'jvÔøΩÔøΩKÔøΩZÔøΩÔøΩÔøΩÔøΩ[ÔøΩÔøΩÔøΩÔøΩ;,ÔøΩ»∂Á∂¢`wÔøΩÔøΩ4ÔøΩÔøΩÔøΩ7?ÔøΩÔøΩV_.ƒùÔøΩ9=BÔøΩ·äühNu:ÔøΩ+ÔøΩVvÔøΩÔøΩŸ¨ÔøΩ6ÔøΩ63sÔøΩ#ÔøΩrB+ÔøΩ–§]ÔøΩÔøΩRÔøΩTÔøΩB;ÔøΩK%ÔøΩI*ÔøΩÔøΩÔøΩÔøΩ”ØÔøΩ1:ÔøΩÔøΩL&ÔøΩn9Qm@ÔøΩÔøΩVÔøΩÔøΩÔøΩ=.sÔøΩÔøΩŒá~ÔøΩÔøΩÔøΩÔøΩNÔøΩÔøΩÔøΩ4:ÔøΩ)mÔøΩÔøΩÔøΩ/ÔøΩÔøΩ_ÔøΩ8\GzÔøΩ1e(i<ÔøΩÔøΩ4ÔøΩ5⁄ÑÔøΩlÔøΩGÔøΩ:""*ÔøΩTÔøΩÔøΩÔøΩ~ÔøΩ<ÔøΩnÔøΩÔøΩ-$ÔøΩÔøΩS2MÔøΩ„¢ØÔøΩÔøΩ^ÔøΩÔøΩÔøΩ∆Æ2ÔøΩXÔøΩÔøΩ/pÔøΩvÔøΩÔøΩÔøΩbpÔøΩÔøΩ\ÔøΩÔøΩÔøΩo:cAÔøΩcÔøΩ>ÔøΩyÔøΩSÔøΩF4ÔøΩ&ÔøΩYÔøΩfÔøΩÔøΩ!ÔøΩ:ÔøΩ>ÔøΩYÔøΩÔøΩÔøΩ›µÔøΩaÔøΩ`ÔøΩÔøΩÔøΩIÔøΩ1ÔøΩÔøΩÔøΩÔøΩÔøΩUÔøΩÔøΩÔøΩÔøΩOÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩNÔøΩ2fÔøΩ""ÔøΩt2ÔøΩeiFO:ÔøΩ?8ÔøΩFÔøΩÔøΩÔøΩÔøΩGZÔøΩc?ÔøΩ^ÔøΩeÔøΩ|ÔøΩIoK^ÔøΩ-#ÔøΩÔøΩ}=e≈∑ÔøΩÔøΩl$ÔøΩÔøΩÔøΩÔøΩAÔøΩ;RÔøΩÔøΩaÔøΩVgÔøΩFÔøΩÔøΩÔøΩÔøΩ ÔøΩBÔøΩÔøΩÔøΩÔøΩ/ÔøΩÔøΩPTÔøΩSKSÕ®wÔøΩ'\ÔøΩÔøΩ ÔøΩ+ÔøΩ|BÔøΩS]ÔøΩO+ÔøΩ]3aÔøΩÔøΩÔøΩÔøΩ÷ùZVzÔøΩ=vÔøΩÔøΩo75ÔøΩRÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩzÔøΩÔøΩ|ÔøΩﬂ´ÔøΩÔøΩÔøΩ\xÔøΩÔøΩÔøΩÔøΩÔøΩcYÔøΩÔøΩ;:ÔøΩÔøΩÔøΩÔøΩv/ÔøΩÔøΩÔøΩf_""ÔøΩ)GÔøΩ/ÔøΩÔøΩ?GMÔøΩÔøΩd*ÔøΩÔøΩÔøΩÔøΩo\&ÔøΩ<ÔøΩbÔøΩ3CÔøΩÔøΩÔøΩ)ÔøΩÔøΩÔøΩÔøΩŒîÔøΩ7oÔøΩsÔøΩ\ÔøΩ5ÔøΩÔøΩÔøΩÔøΩÔøΩ9>-KÔøΩksdÔøΩÔøΩ>xÔøΩÔøΩÔøΩ2WÔøΩÔøΩÔøΩÔøΩ>ÔøΩ4ÔøΩÔøΩfÔøΩ*ÔøΩ[@ÔøΩÔøΩ+~ÔøΩÔøΩÔøΩÔøΩ|ÔøΩÔøΩÔøΩÔøΩ`ÔøΩÔøΩ%ÍæÇÔøΩÔøΩfÔøΩÔøΩOÔøΩmcÔøΩÔøΩBÔøΩÔøΩiÔøΩKÔøΩÔøΩm	%uÔøΩ& N–π ÔøΩÔøΩÔøΩ4\ÔøΩÔøΩbAjÔøΩ9ÔøΩÔøΩÔøΩÔøΩ~ÔøΩÔøΩ/sWyÔøΩÔøΩAÔøΩ6ÔøΩKuÔøΩNÔøΩÔøΩ_ ÔøΩÔøΩ ©9ÔøΩÔøΩ9ÔøΩVNÔøΩgÔøΩlÔøΩ1*ÔøΩÔøΩtÔøΩÔøΩjb%ÔøΩÔøΩÔøΩÔøΩoUKÔøΩÔøΩÔøΩÔøΩXDÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩL\ÔøΩqH!ÔøΩÔøΩOÔøΩA◊™tÔøΩ@ÔøΩÔøΩ*[wÔøΩÔøΩkÔøΩGÔøΩ‹®ÔøΩÔøΩ'ÔøΩÔøΩÔøΩÔøΩIihÔøΩÔøΩÔøΩÔøΩ ÔøΩsÔøΩPÔøΩÔøΩB~ÔøΩrÔøΩLÔøΩÔøΩ|ÔøΩÔøΩzÔøΩÔøΩÔøΩ&ÔøΩ TÔøΩÔøΩ|ÔøΩÔøΩÔøΩÔøΩNÔøΩÔøΩ;HÔøΩ>KAÔøΩ|ÔøΩÔøΩÔøΩ’®ÔøΩbE!ÔøΩ«ªZÔøΩpÔøΩyÔøΩ\ÔøΩ ÔøΩÔøΩzÔøΩCÔøΩBÔøΩ@ÔøΩLÔøΩ[ÔøΩMÔøΩM≈áÔøΩÔøΩÔøΩÔøΩÔøΩÕê'ÔøΩwiÔøΩÔøΩp‘õÔøΩ9ÔøΩÔøΩgwÔøΩ%uÔøΩrÔøΩZnÔøΩwRÔøΩ>ÔøΩ5OZÔøΩ\ÔøΩÔøΩ\ÔøΩÔøΩÔøΩÔøΩÔøΩ[WÔøΩ}9ÔøΩ5ÔøΩkÔøΩQvÔøΩ$ÔøΩDÔøΩ){W8ZÔøΩ8ÔøΩÔøΩsBÔøΩuÔøΩBÔøΩwÔøΩvoÔøΩÔøΩÔøΩ)=] ÔøΩ@ÔøΩfÔøΩoÔøΩ""ÔøΩ1~xÔøΩÔøΩÔøΩÔøΩ&oÔøΩ^|?ŒõÔøΩÔøΩYvÔøΩÔøΩMÔøΩRÔøΩÔøΩgEÔøΩÔøΩtpLÔøΩHÔøΩ9ÔøΩÔøΩfjTÔøΩiÔøΩÔøΩ⁄æÔøΩzÔøΩOE5ÔøΩﬁî#ÔøΩÔøΩÔøΩÔøΩYSXÔøΩYQÔøΩ00OÔøΩÔøΩÔøΩdÔøΩÔøΩLÔøΩÔøΩoQÔøΩÔøΩÔøΩ|ÔøΩ[ÔøΩÔøΩOÔøΩÔøΩÔøΩ}ÔøΩÃ£ÔøΩÔøΩ5ÔøΩgÔøΩH~ÔøΩÔøΩHÔøΩÔøΩw5ÔøΩ^;ÔøΩÔøΩÔøΩ]""ÔøΩÔøΩLÔøΩÔøΩÔøΩÔøΩ@wÿ¢l¬èÔøΩ NÔøΩÔøΩxÔøΩQxÔøΩfT&sy?G3>4ÔøΩÔøΩyÔøΩÔøΩÔøΩIÔøΩÔøΩ9ÔøΩÔøΩÔøΩ$ÔøΩuÔøΩhÔøΩÔøΩÔøΩ1ÔøΩAsÔøΩErÔøΩÔøΩ5ÔøΩYÔøΩÔøΩÔøΩÔøΩÔøΩmŒíÔøΩ'ÔøΩ&WÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩyÔøΩÔøΩÔøΩrdÔøΩÔøΩÔøΩ€ÅÔøΩ?ÔøΩÔøΩwY}lÔøΩLÔøΩÔøΩYÔøΩ""]ÔøΩÔøΩÔøΩCÔøΩq'ÔøΩ+VzÔøΩÔøΩQÔøΩ∆ÇÔøΩÔøΩ3ÔøΩPÔøΩÔøΩ$ÔøΩ#ÔøΩÿêÔøΩ28ÔøΩ]ÔøΩ\ÔøΩODÔøΩÔøΩV…≤.>ÔøΩ'0jÔøΩÔøΩÔøΩ«ëÔøΩÔøΩÔøΩZe,√Ä∆ªÔøΩÔøΩ¬∫ÔøΩÔøΩÔøΩ»âÔøΩ\2ÔøΩ30g[ÔøΩÔøΩ4ÔøΩÔøΩÔøΩ""]ÔøΩÔøΩÔøΩV'ÔøΩ""ÔøΩcÔøΩÔøΩmÔøΩŸ∫tÔøΩX~yuÔøΩ:)2;ÔøΩ€ïÔøΩ9ÔøΩÔøΩ	|0ÔøΩÔøΩ9ÔøΩÔøΩÔøΩ2%ÔøΩeÔøΩmGÔøΩ ZÔøΩ7ÔøΩ(HÔøΩÔøΩ3ÔøΩÔøΩ>ÔøΩÔøΩÔøΩ0VÔøΩÔøΩEÔøΩ%ÔøΩf""ÔøΩÔøΩYÔøΩ""^hM=mÔøΩÔøΩÔøΩÔøΩLDÔøΩi ZÔøΩÔøΩÔøΩÔøΩs_=ÔøΩÔøΩÔøΩLÔøΩ(ÔøΩÿ§ÔøΩÔøΩÔøΩfHÔøΩÔøΩÔøΩb*!ÔøΩzÔøΩÔøΩNÔøΩÔøΩ*ÔøΩÔøΩ&WÔøΩF .!eÔøΩÔøΩÔøΩÔøΩ8ÔøΩeÀ§ÔøΩqÔøΩ.ÔøΩO?7rÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩeU0*'ÔøΩyB`v|ÔøΩ=p/xÔøΩÔøΩÔøΩÔøΩ ùÔøΩÔøΩÔøΩ/mMaÔøΩYP“ª>ZÔøΩ-€ôÔøΩYÕ≥RwÔøΩ)ÔøΩÔøΩYÔøΩÔøΩ3ÔøΩÔøΩ\f~ÔøΩÔøΩÔøΩÔøΩP$ÔøΩ ÔøΩ_fÔøΩÔøΩÔøΩa=ÔøΩ{”ÇÔøΩ`ÔøΩÔøΩPÔøΩlÔøΩÔøΩÔøΩ}ÔøΩÔøΩ-ÔøΩÔøΩÔøΩÔøΩuÔøΩÔøΩÔøΩÔøΩÔøΩ 9ÔøΩlÔøΩ‰§´ÔøΩWÔøΩÔøΩÔøΩx}IÔøΩÔøΩÔøΩ}ÔøΩ[zzÔøΩ}?#ÔøΩÔøΩÔøΩ√áÔøΩ;qÔøΩÔøΩdÔøΩ,ÔøΩKÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ@ÔøΩqÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ~	KAJWeÔøΩ3ÔøΩÔøΩÔøΩ-ÔøΩÔøΩ}LÔøΩÔøΩÔøΩl ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ|ÔøΩÔøΩvÔøΩ|ÔøΩ<Ia~C%ÔøΩÔøΩÔøΩcÔøΩ~ÔøΩeÔøΩsFb(ÔøΩ0CÔøΩÔøΩopMuÔøΩÔøΩÔøΩ/	ÔøΩÔøΩN#;ÔøΩÔøΩlf9ÔøΩ.x8GeQÔøΩ5ÔøΩÔøΩ	\9ÔøΩ+ÔøΩÔøΩÔøΩÔøΩk-mRInHÔøΩÔøΩÔøΩbÔøΩ,ÔøΩÔøΩGÔøΩŸÅÔøΩ,ÔøΩﬂ¶ÔøΩ+ÔøΩnÔøΩ7%PÔøΩÃòÔøΩÔøΩ}ÔøΩBÔøΩeÔøΩzMÔøΩÔøΩÔøΩ8CÔøΩVÔøΩÔøΩ$ÔøΩS2ÔøΩvÔøΩWÔøΩÔøΩnÔøΩKÔøΩpÔøΩZjÔøΩ8RXÔøΩÔøΩÔøΩÔøΩÔøΩ""ÔøΩÔøΩÔøΩÔøΩWÿÉÔøΩÔøΩ8ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩcOtÔøΩ82TÕíÔøΩ/ÔøΩR~ÔøΩ?<ÔøΩÔøΩÔøΩy6ÔøΩ'%hÔøΩsÔøΩÔøΩe5.&ÔøΩÔøΩÔøΩ^ÔøΩ{lÔøΩÔøΩÔøΩÔøΩvÔøΩHxÔøΩnÔøΩÔøΩÔøΩÔøΩXÔøΩœíÔøΩYÔøΩÔøΩÔøΩÔøΩ√õÔøΩÔøΩ3ÔøΩ[[{}fÔøΩs:[&E∆äÔøΩÔøΩ	ÔøΩÔøΩCÔøΩÔøΩÔøΩYÔøΩZÔøΩÔøΩÔøΩt.ÔøΩÔøΩÔøΩdrÔøΩ(2ÔøΩÔøΩVrÔøΩÔøΩgcÔøΩ*ÔøΩÔøΩ/ÔøΩ8ÔøΩÔøΩhÔøΩÔøΩÔøΩÔøΩ#1\\ÔøΩœª^Â¥ß[‰®àÔøΩC_jjÔøΩÔøΩ4'ÔøΩ+DÔøΩcvÎ∞ïÔøΩÔøΩJÔøΩL$ÔøΩ6ÔøΩ)ÔøΩGÔøΩ>ÔøΩdÔøΩR;ÔøΩm~ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩZÔøΩÔøΩÔøΩZÔøΩrÔøΩÔøΩÔøΩÔøΩÔøΩ,ÔøΩ'ÔøΩ4ÔøΩÔøΩÔøΩÔøΩÔøΩ—¨ÔøΩ ÔøΩM}@ÔøΩBÔøΩaÔøΩFÔøΩ9&ÔøΩgÔøΩOs⁄èbsÔøΩ{BkqEqÔøΩÔøΩ1ÔøΩÔøΩÔøΩM;74ÿ∑KÔøΩÔøΩﬁ¥/ÔøΩÔøΩÔøΩŒñlÔøΩÔøΩlÔøΩÀñÔøΩj:ÔøΩÔøΩÔøΩÔøΩMJ9%ÔøΩÔøΩÔøΩMÔøΩ^ÔøΩvÔøΩ JeZÔøΩÔøΩ|oHÔøΩÔøΩiqÔøΩÔøΩÔøΩtÔøΩWÔøΩÔøΩÔøΩ”®ÔøΩSÔøΩ/ÔøΩÔøΩ…∏ÔøΩo∆∂ÔøΩÔøΩ[p,ÔøΩTÔøΩÔøΩÔøΩÔøΩÔøΩwrÔøΩÔøΩrÔøΩ2r?rÔøΩÔøΩ…∂v0ƒ©ÔøΩÔøΩ/ÔøΩXÔøΩW8ÔøΩ9aU3ÔøΩ F÷çtAOYÔøΩ;ÔøΩÔøΩÔøΩ] ]ÔøΩÔøΩÔøΩy^ÔøΩÔøΩÔøΩÔøΩÔøΩ.ÔøΩ}#*ÔøΩ~fsÔøΩGvÔøΩNÔøΩÔøΩ[ÔøΩÔøΩ>' LBÔøΩwÔøΩÔøΩjM"">ÔøΩÔøΩ?ÔøΩÔøΩ6'n0wÔøΩCÔøΩÔøΩ>ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩCÔøΩÔøΩÔøΩtÔøΩ}ÔøΩvDSdÔøΩÔøΩ`ÔøΩÔøΩfÔøΩÔøΩ+ÔøΩMKÀ¨ÔøΩÔøΩnTÔøΩ]ÔøΩÔøΩÔøΩ ;¬õÓæüLÔøΩ[ÔøΩÔøΩ#'ÔøΩKÔøΩ!ÔøΩ	ÔøΩÔøΩÔøΩrÔøΩ7ÔøΩYÔøΩlbÔøΩ[ÔøΩÔøΩ""b*ÔøΩ'ÔøΩÔøΩÔøΩÔøΩD[ÔøΩ5xÔøΩ;ÔøΩÔøΩ,ÔøΩÔøΩÔøΩÔøΩ'+ÔøΩÔøΩ32ÔøΩÔøΩÔøΩwÔøΩYsUÔøΩÔøΩÔøΩAaÔøΩÔøΩÔøΩ.UÔøΩ?ÔøΩs-(ÔøΩ' ÔøΩfÔøΩ^ÔøΩÔøΩ&^ÔøΩ’µ%y[Z~ÔøΩ:<>/ÔøΩ.ÔøΩÔøΩÔøΩPÔøΩvÔøΩÔøΩqÔøΩ2ÔøΩÔøΩÔøΩ~ÔøΩ;ÔøΩ[ÔøΩÔøΩÔøΩÔøΩ""ÔøΩ!ÔøΩÔøΩOÔøΩ0“úÔøΩ ÔøΩ ÔøΩ&ÔøΩfÔøΩÔøΩpÔøΩÔøΩÔøΩÔøΩÔøΩ;ÔøΩÔøΩUf1ÔøΩ3ÔøΩÔøΩ}TzÔøΩ/9ÔøΩÔøΩ*TÔøΩuR$ÔøΩÔøΩrxÔøΩ€Æ{¬ΩgÔøΩÔøΩÔøΩÔøΩrTÔøΩ&ÔøΩÔøΩÔøΩo1oMdÔøΩ_ÔøΩ? ÔøΩÔøΩÔøΩÔøΩp$6/ ÔøΩÔøΩÔøΩLz3^ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ*ÔøΩlÔøΩ8ÔøΩTÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩœ•ÔøΩÔøΩÔøΩÔøΩ<ÔøΩ endstream endobj 33 0 obj << /Filter /FlateDecode /Length1 1442 /Length2 6337 /Length3 0 /Length 7324 >> stream xÔøΩÔøΩuTÔøΩÔøΩÔøΩ6-ÔøΩ	etwÔøΩÔøΩÔøΩ4HÔøΩÔøΩÔøΩÔøΩ`›ù""-ÔøΩÔøΩÔøΩ4""ÔøΩ ÔøΩ!! ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ=;gÔøΩÔøΩÔøΩ'ÔøΩO\ÔøΩwÔøΩÔøΩÔøΩFÔøΩJÔøΩÔøΩ}ÔøΩ/, $TÔøΩ52ÔøΩ 	ÔøΩ 	ÔøΩ ÔøΩŸçah'ÔøΩ_0ÔøΩÔøΩÔøΩDÔøΩpÔøΩÔøΩÂ†ÇÔøΩÔøΩÔøΩLÔøΩÔøΩÔøΩÔøΩ""ÔøΩ@-7'ÔøΩÔøΩ(PXBFXRFH(""$$ÔøΩGRÔøΩ rÔøΩAÔøΩÔøΩ@-ÔøΩÔøΩÔøΩ \ÔøΩÔøΩ0;{4ÔøΩÔøΩ<ÔøΩÔøΩÔøΩ@aiiIÔøΩÔøΩÔøΩ@%g(ÔøΩÔøΩÔøΩ ÔøΩ=ÔøΩs#ÔøΩ4BÔøΩaPÔøΩ◊øRpÔøΩŸ£ÔøΩ.2ÔøΩÔøΩ gÔøΩ iÔøΩÔøΩÔøΩÔøΩÌÅÜPÔøΩÔøΩ 5| rÔøΩÔøΩÔøΩL ÔøΩ4ÔøΩÔøΩÔøΩÔøΩÔøΩF[ÔøΩ	b ' Ga""ÔøΩÔøΩ(ÔøΩÔøΩhÔøΩÔøΩÔøΩsÔøΩÔøΩÔøΩ8ÔøΩÔøΩqÔøΩÔøΩ5ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ. ÔøΩnÔøΩÔøΩ9AÔøΩzÔøΩu–ûh> ÔøΩÔøΩrB!0ÔøΩ wÔøΩ	ÔøΩÔøΩÔøΩrÔøΩÔøΩiÔøΩÔøΩP`$ÔøΩÔøΩ@ÔøΩÔøΩ~ÔøΩ(ÔøΩ+ fÔøΩjpÔøΩ ÔøΩÔøΩ GÔøΩ ÔøΩÔøΩSÔøΩ!ÔøΩ`ÔøΩÿΩÔøΩlÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩuÔøΩÔøΩÔøΩ!ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩaÔøΩnPM’ø\0ÔøΩÔøΩÔøΩÔøΩIKHÔøΩIÔøΩÔøΩ@ÔøΩ'ÔøΩ^ÔøΩWzc/ÔøΩoÔøΩÔøΩ/”ÅÔøΩÔøΩÔøΩhÔøΩiÔøΩÔøΩÔøΩb~ >(ÔøΩ;ÔøΩFÔøΩAÔøΩ|ÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩ0ÔøΩÔøΩOÔøΩv08ÔøΩÔøΩÔøΩjÔøΩÔøΩY>ÔøΩ	ÔøΩÔøΩpO(ÔøΩÔøΩÔøΩÔøΩÔøΩ5ÔøΩ^ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩS5751ÔøΩÔøΩÔøΩÔøΩÔøΩ6eeÔøΩ'–á_TÔøΩ/-.ÔøΩJJJÔøΩÔøΩÔøΩFÔøΩÔøΩÔøΩb5ÔøΩÔøΩÔøΩÔøΩj1cÔøΩOÔøΩÔøΩÔøΩÔøΩ/qpÔøΩÔøΩÔøΩÔøΩZ(ÔøΩÔøΩÔøΩ[	ÔøΩÔøΩ1_ÔøΩÔøΩÔøΩTÔøΩÔøΩcÔøΩÔøΩ,ÔøΩ/ÔøΩÔøΩwAÔøΩ›úÔøΩ~ÔøΩÔøΩ~ÔøΩÔøΩ3ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩnhÔøΩ tÔøΩÔøΩÔøΩÔøΩÔøΩGÔøΩÔøΩPÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩhFJp;ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ0ÔøΩ}ÔøΩ'ÔøΩCÔøΩÔøΩÔøΩPÔøΩnÔøΩKjN08TÔøΩÔøΩÔøΩzÔøΩ`ÔøΩÔøΩÔøΩÔøΩÀÜÔøΩÔøΩÔøΩÔøΩ@axÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ/ÔøΩÔøΩÔøΩK AH$ÔøΩ ÔøΩÔøΩÔøΩfÔøΩ>ÔøΩABÔøΩÔøΩÔøΩÔøΩÔøΩ#–ò ÔøΩG?ÔøΩ-	ÔøΩÔøΩVqÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩaVÔøΩ1ÔøΩ∆ÖÔøΩÔøΩÔøΩ0ÔøΩÔøΩo@(ÔøΩÔøΩÔøΩ;fFÔøΩÔøΩÔøΩm ""AÔøΩÔøΩ+ÔøΩÔøΩÔøΩ@ÔøΩÔøΩÔøΩÔøΩÔøΩ#LÔøΩÔøΩ9ÔøΩ~+@ÔøΩÔøΩP0`fÔøΩ uxÔøΩxZÔøΩÔøΩÔøΩÔøΩÔøΩ}ÔøΩ`ÔøΩksTÔøΩyWÔøΩ8ÔøΩcÍïèÔøΩŒçÔøΩ1WÔøΩ«êÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩoÔøΩG'}xÔøΩOÔøΩ<ÔøΩÔøΩ2ÔøΩÔøΩS4^ÔøΩÔøΩ‘∫ÔøΩÔøΩwÔøΩsÔøΩÔøΩÔøΩÔøΩw!zÔøΩaÔøΩ‘®%ÔøΩgwH[ÔøΩYr>7ÔøΩÔøΩÔøΩl]-_…øjFÔøΩZHo ÔøΩÔøΩÔøΩdÔøΩ)ÔøΩJÔøΩÔøΩ81ÔøΩÔøΩl_ÔøΩÕ≠ÔøΩÔøΩ(ÔøΩÔøΩin∆ö&ÔøΩW81ÔøΩÔøΩÔøΩÔøΩXÔøΩ3ÔøΩ%À∏ÔøΩssÔøΩÔøΩÔøΩ]ÔøΩÔøΩÔøΩÔøΩÔøΩeÔøΩtTÔøΩZÔøΩÔøΩÔøΩÔøΩ=tÔøΩÔøΩ2ÔøΩÔøΩPXÔøΩÔøΩÔøΩ*oÔøΩXÔøΩ^;ÔøΩsÔøΩ„Ç∫:f,ÔøΩÔøΩ[ÔøΩÔøΩ ÔøΩÔøΩOwÔøΩﬁØÔøΩœåÔøΩÔøΩ`ÔøΩ<=ÔøΩÔøΩÔøΩ{ÔøΩÔøΩÔøΩvNÔøΩcÔøΩpÔøΩVd8ÔøΩ|nGkÔøΩÔøΩÔøΩÔøΩ""ÔøΩY""Œ∑OL7?ÔøΩÔøΩ`QÔøΩ÷îÔøΩBÔøΩ )!IÔøΩÔøΩÔøΩzœÜ6ÔøΩ&%;HÔøΩ""?k@ÔøΩLI_ŸóÔøΩQÔøΩÔøΩJ'ÔøΩUGÔøΩÔøΩÔøΩÔøΩ1ÔøΩBÔøΩÔøΩ+rÔøΩ9>ÔøΩÔøΩRKgZÔøΩÔøΩnyÔøΩY<8ÔøΩÔøΩ-!O1ÔøΩ–ësquf<{ƒÆu@ ÔøΩXÔøΩEuÔøΩÔøΩÔøΩnÔøΩ2aÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩYÔøΩÔøΩ⁄ÖiÔøΩvÔøΩ8ÔøΩ:ÔøΩÔøΩÔøΩÔøΩÔøΩ%vÔøΩ5qÔøΩÔøΩ>ÔøΩ]h%[ÔøΩ>ÔøΩÔøΩÔøΩu\ÔøΩÔøΩqÔøΩÔøΩÔøΩ(EÔøΩ[ÔøΩÔøΩ8ÔøΩE wnÔøΩÔøΩu*ÔøΩÔøΩœçÔøΩ~ÔøΩ6ÔøΩÔøΩÔøΩÔøΩÔøΩ~xÔøΩtLÔøΩ>ÔøΩGzWlÔøΩb?ÔøΩ ëÔøΩOÔøΩÔøΩŒøÔøΩ%|ÔøΩÔøΩV4ÔøΩYÔøΩ,¬∑nÔøΩ>ÔøΩÔøΩÔøΩ+ÔøΩÔøΩ]ÔøΩÔøΩÔøΩ9ÔøΩKÔøΩ ÔøΩÔøΩÔøΩ)ÔøΩÔøΩgÔøΩÔøΩÔøΩÔøΩBÔøΩ@ÔøΩoÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩLÔøΩ{ÔøΩAÔøΩÔøΩÔøΩÔøΩÔøΩ	""] rR€Ç8e""Gc?hÔøΩ:PÔøΩZÔøΩ{ÔøΩT}ÔøΩÔøΩPÔøΩÔøΩp[ÔøΩI/ÔøΩÔøΩp<ÔøΩÔøΩÔøΩ<nÔøΩlÔøΩ:GmÔøΩ‚ç•ÔøΩ.ÔøΩu|ÔøΩtÔøΩ^GZ,ÔøΩÔøΩÔøΩ*'ÔøΩ%ÔøΩ#QÔøΩkÔøΩ9zE2sÔøΩ2ÿôÔøΩF>)Va\ `	ÔøΩg!ÔøΩÔøΩ…•;ÔøΩ|zUÔøΩÔøΩÔøΩÔøΩ=ÔøΩ=ÔøΩÔøΩBLÔøΩ#ÔøΩ ÔøΩÔøΩÔøΩÔøΩUÔøΩmÔøΩMF[&LÔøΩ5ÔøΩprS>N*SP_ÔøΩP»û}b~ÔøΩÔøΩÔøΩlÔøΩ}ÔøΩÔøΩÔøΩu<dÔøΩÔøΩÔøΩsÔøΩxÔøΩwaÔøΩÔøΩÔøΩ}ÔøΩÔøΩÔøΩÔøΩ$ZÔøΩcÔøΩÔøΩpÔøΩ#ÔøΩÔøΩeÔøΩ&jÔøΩÔøΩHÔøΩÔøΩÔøΩÔøΩ ÔøΩ◊ØÔøΩmd—úq'ÔøΩ_ÔøΩÔøΩ:Iz	Ÿ±UÔøΩÔøΩÔøΩ0ÔøΩ8sÔøΩ#ÔøΩaOÔøΩ}!l…©ÔøΩaÔøΩ#e'JlmÔøΩxÔøΩx(ÔøΩ<ÔøΩ#=ÔøΩÔøΩÔøΩ=6ÔøΩÔøΩÔøΩ#ÔøΩÔøΩNQ&ÔøΩK2;t3AÔøΩÔøΩÔøΩDÔøΩÔøΩœåÔøΩÔøΩaÔøΩT:MÔøΩT,ÔøΩÏë∑4ÔøΩ)N Å/SzÔøΩÔøΩ}ÔøΩÔøΩÔøΩÔøΩÔøΩ;ÔøΩ'2ÔøΩ}siK#%ÔøΩ{]A>^ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ	\ÔøΩa5.|'ÔøΩÔøΩÔøΩÔøΩÔøΩ.EÔøΩ dÔøΩÔøΩT}ÔøΩÔøΩ""8WÔøΩ3yÔøΩÔøΩÔøΩjÔøΩ\:ÔøΩÔøΩA7ÔøΩg)wÔøΩÔøΩÔøΩNkkÔøΩ:*7ÔøΩÔøΩÔøΩÔøΩ'KÀØÔøΩ9ÔøΩEÔøΩLs—™KÔøΩjÔøΩn1ÔøΩÔøΩ…†ÔøΩBÔøΩÔøΩÔøΩ.ÔøΩDÔøΩ~@*`UÔøΩxÔøΩ}ÔøΩePh(ÔøΩ$ÔøΩÔøΩÔøΩzÔøΩ”øÔøΩÔøΩ}nÔøΩqÔøΩ,ÔøΩÔøΩEcÔøΩ<ÔøΩÔøΩÔøΩÔøΩ_ÔøΩÔøΩÔøΩÔøΩF\W6ÔøΩÔøΩÔøΩSÔøΩlÔøΩ!ÔøΩlaQM~ÔøΩÔøΩ7ÔøΩ753ÔøΩyÔøΩqÔøΩÔøΩﬂØ""ÔøΩC9ÔøΩÔøΩÔøΩÔøΩ4ILÔøΩÔøΩÔøΩ$SlÔøΩXÔøΩ;ÔøΩÔøΩ{ÔøΩ’êÔøΩÔøΩÔøΩÔøΩÔøΩ$ÔøΩojÔøΩ=ÔøΩÔøΩYxTÔøΩÔøΩWGfHÔøΩÔøΩÔøΩh}ŸâÔøΩÔøΩUÔøΩCÔøΩAtXÔøΩ~0^ÔøΩJbÔøΩÔøΩ=B,ly""+ÔøΩÔøΩbÔøΩVÔøΩ`ÔøΩÔøΩÔøΩUYHAÔøΩ9u:KÔøΩÔøΩ4b~ÔøΩE ÔøΩÔøΩƒ≥ŒßÔøΩ5ÔøΩÔøΩ+ÔøΩXxÔøΩÔøΩÔøΩ5ÔøΩÎüØ*;ÔøΩÔøΩ""[lÔøΩIÔøΩÔøΩÔøΩGÔøΩbÔøΩÔøΩÔøΩÔøΩYÔøΩs?ÔøΩV wDÔøΩÔøΩÔøΩiÔøΩ5q?rÔøΩ`ÔøΩdÔøΩÔøΩÔøΩcÔøΩÃòÔøΩÔøΩTÔøΩNÔøΩ-%ÔøΩ}ÔøΩÔøΩÔøΩÔøΩYxÔøΩÔøΩKK<ÔøΩﬂæÔøΩ\ÔøΩt‘êÔøΩNÔøΩ{ÔøΩÀÆIÔøΩË¶ë›ßIDHÔøΩ['ÔøΩÔøΩ! SÔøΩgMBÔøΩÔøΩÔøΩWvÔøΩ5ÔøΩÔøΩÔøΩÔøΩ}ÔøΩÔøΩQ6ÔøΩÔøΩÔøΩÔøΩÔøΩ^ÔøΩÔøΩÔøΩÔøΩÔøΩ,ÔøΩ}ÔøΩ¬æÔøΩ7S|oÌôªgBÔøΩDÔøΩNÔøΩÔøΩoÔøΩÔøΩÔøΩVÔøΩjÔøΩ/HÔøΩÔøΩ^ÔøΩÔøΩKÔøΩÔøΩOLtÔøΩ('{ÔøΩÔøΩÔøΩÔøΩÈ™äHÔøΩ2^,ÔøΩÔøΩ{U""ÔøΩÔøΩÔøΩdÔøΩ 1GƒíÔøΩÔøΩ.e)ÔøΩYÔøΩ2ÔøΩ9ÔøΩÔøΩÔøΩT ÔøΩV^(ÔøΩ;#ÔøΩ~ÔøΩJÔøΩK1ÔøΩÔøΩ_ŒÇÔøΩ7ÔøΩÔøΩS ÔøΩÔøΩÔøΩ*ÔøΩwÔøΩ;ÔøΩrƒø}ÔøΩmÔøΩQ 7	ÔøΩÔøΩÔøΩ[~-ÔøΩÔøΩxKÔøΩÔøΩÔøΩÔøΩ‘≥ÔøΩc’©ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ*ÔøΩlÔøΩÔøΩ}ÔøΩÔøΩÔøΩÔøΩÔøΩ4 3ÔøΩÔøΩA=ÔøΩÔøΩÔøΩTﬂ•:ÔøΩÔøΩÔøΩQEÔøΩ2‹ßÔøΩ,ÔøΩÔøΩ$%XÔøΩ{ÔøΩÔøΩ5ÔøΩÔøΩfÔøΩÔøΩÔøΩJ\jÔøΩÔøΩHÔøΩÔøΩÔøΩÔøΩ[ÔøΩC;ÔøΩÔøΩÔøΩÔøΩCÔøΩÔøΩÔøΩÔøΩwÔøΩ=ÔøΩu4ÔøΩÔøΩ[vÔøΩ$uÔøΩ7ÔøΩd o9=&NxNÔøΩp73,ÔøΩiÔøΩ_ÔøΩ4jVÔøΩÔøΩk4)xÔøΩÔøΩ/UiÔøΩ=ÔøΩ ◊£ÔøΩÔøΩÔøΩÔøΩÔøΩ(%F@ÔøΩÔøΩÔøΩÔøΩ8ÔøΩ2ÔøΩvÔøΩZÔøΩUÔøΩÔøΩXÔøΩÔøΩ»≠ÔøΩIÔøΩÔøΩÔøΩÔøΩ{Zx{:tÔøΩlenÔøΩ ÔøΩn2ÔøΩ5ÔøΩÔøΩÃÄ:s}ÔøΩWTÔøΩrÔøΩIÔøΩÔøΩÔøΩÔøΩÔøΩtÔøΩÔøΩdÔøΩÔøΩÔøΩÔøΩ=\ÔøΩ^ÔøΩÔøΩ#9rÔøΩ|ÔøΩ ÔøΩHc\ÔøΩÔøΩÔøΩ*ÔøΩPÔøΩ]b!ÔøΩ6ÔøΩ`nÔøΩ^ÔøΩÔøΩÔøΩ<ÔøΩuyÔøΩLÔøΩCÔøΩÔøΩÔøΩÔøΩ ïÔøΩÔøΩﬁµÔøΩYgXh^sÔøΩÔøΩÔøΩÔøΩÔøΩpÔøΩÔøΩÔøΩÔøΩÔøΩ\ÔøΩÔøΩU[ÔøΩ3ÔøΩDr-ÔøΩ)ÔøΩÔøΩÔøΩÔøΩqÔøΩgÔøΩÔøΩwÔøΩ—§ÔøΩÔøΩ}ÔøΩÔøΩÔøΩ9ÔøΩÔøΩMÔøΩÔøΩÔøΩÔøΩÔøΩrH?byÔøΩ]|ÔøΩÔøΩÔøΩÔøΩkmÔøΩÔøΩÔøΩ	5ÔøΩ<EÔøΩ}‘πÔøΩkÔøΩmCÔøΩ,ÔøΩ1ÔøΩ-ÔøΩÔøΩÔøΩlÔøΩÔøΩÔøΩBÔøΩÔøΩÔøΩ^ÔøΩ ÔøΩÔøΩÔøΩ9ÔøΩ7ÔøΩ;ÔøΩKÈπçÔøΩBJÔøΩ›´ÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩz2ETÔøΩÔøΩ{{ÔøΩL ÔøΩÔøΩ÷ßÔøΩÔøΩ>IH=\l6HÔøΩ{ÔøΩu7ÔøΩÔøΩÔøΩ4ÔøΩÔøΩ8∆±ÔøΩÔøΩ` yvÔøΩ=ÔøΩ=$ÔøΩnÔøΩyÔøΩX&ÔøΩ2LÔøΩ{ÔøΩnÔøΩnCÔøΩÔøΩÔøΩ]DÔøΩKÔøΩÔøΩTt^eÔøΩÔøΩÔøΩ≈åEÔøΩÔøΩÔøΩÔøΩÔøΩ`ÔøΩBÔøΩdÔøΩÔøΩCÔøΩnÔøΩp.8KÔøΩÔøΩT◊îÔøΩÔøΩqYÔøΩÔøΩSHgÔøΩÔøΩÔøΩ2MÔøΩHÔøΩw?ÔøΩxÔøΩDnÔøΩÔøΩÔøΩ ÔøΩ ÔøΩ4nHÔøΩÔøΩÔøΩs%ÔøΩ[ÔøΩÔøΩ’ëÔøΩHNgÔøΩÔøΩ*ÔøΩŒ≥ÔøΩ`vÔøΩZnÔøΩÔøΩÔøΩÃäÔøΩ, ÔøΩÔøΩKÔøΩÔøΩlÔøΩÔøΩÔøΩrRÔøΩÔøΩ–•5axÔøΩbvY^}ÔøΩÃêÔøΩ9ÔøΩx,ÔøΩMÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩZÔøΩÔøΩÔøΩÔøΩÔøΩM=ÔøΩÔøΩÔøΩzÔøΩÔøΩlÔøΩÔøΩ ∆ÅÔøΩxX#ÔøΩÔøΩR@Y	ÔøΩcsÔøΩÔøΩmÔøΩÔøΩÔøΩ&iÔøΩ~;EÔøΩÔøΩ]‹åIlyLÔøΩÔøΩÔøΩÔøΩ?ÔøΩÔøΩ~ÔøΩ3ÔøΩÔøΩ4\ ÔøΩ|ÔøΩJVÔøΩÔøΩLBÔøΩ|cÔøΩxÔøΩZÔøΩÔøΩ<GÔøΩ>ÔøΩÿ¨ YÔøΩÔøΩJyjÔøΩF„¶¢ÔøΩ.ÔøΩ6ÔøΩQPK;ÔøΩXﬁ∞ÔøΩG3/:WÔøΩÔøΩ`ÔøΩ‰¨ßZj{ÔøΩ4^~ ÔøΩHÔøΩÔøΩe:Xm)?ÔøΩ.ÔøΩXÔøΩÔøΩÔøΩGÔøΩ<ÔøΩÔøΩYÔøΩVw5%ÔøΩ.ÔøΩÔøΩ.ÔøΩÔøΩÔøΩÔøΩÔøΩ-ÔøΩnEx $:-2""b^'&ÔøΩ}ÔøΩÔøΩkÔøΩÔøΩ\ÃõÔøΩO7@ EÔøΩÔøΩÔøΩÔøΩÔøΩorÔøΩ.ÔøΩ$ÔøΩZÔøΩ=ÔøΩÔøΩS|ÔøΩ/ÔøΩXlrÔøΩ8ÔøΩÔøΩHÔøΩ.ÔøΩ Gx7ÔøΩ\;ÔøΩÔøΩ_uN2ÔøΩllÔøΩjFÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ-gÔøΩÔøΩVÔøΩuyRÔøΩÔøΩ–ßÔøΩm◊çÔøΩÔøΩGÔøΩSKÕë	UÔøΩÔøΩ9q$ÔøΩxÔøΩÔøΩ_ÔøΩÔøΩ.ÔøΩÔøΩ ÔøΩjÔøΩ$fÔøΩ[¬É	ÔøΩ7ÔøΩÔøΩUÔøΩÔøΩÕñÔøΩÔøΩÔøΩTÔøΩÔøΩ+MÔøΩÔøΩt)>ÔøΩ;XÔøΩ8vÔøΩ^ÔøΩ3ÔøΩRÔøΩÔøΩuÔøΩ[ÔøΩFX-yWÔøΩ pÔøΩÔøΩÔøΩGÔøΩLÔøΩÔøΩ—éÔøΩÔøΩÔøΩÔøΩ%1ÔøΩÔøΩ5ÔøΩÔøΩÔøΩ]ÔøΩÔøΩÔøΩHÔøΩÔøΩÔøΩjÔøΩ>ÔøΩÔøΩFÔøΩÔøΩ[ÔøΩÔøΩÔøΩHÔøΩÔøΩÔøΩÔøΩ€∫‘ÑÔøΩÔøΩrP0ÔøΩiŸÇÔøΩLÔøΩ=vÔøΩoÿ∞ÔøΩ-qtÔøΩzÔøΩFO;O^ÔøΩÔøΩAÔøΩlÔøΩÔøΩÔøΩÓÖÄÔøΩÔøΩRÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩk‰õáÔøΩŸíÔøΩ∆ëÔøΩÔøΩrÔøΩÃîÔøΩÔøΩp-ÔøΩÔøΩ0MÔøΩ:JÔøΩÏ©ΩÔøΩ◊É- ÔøΩzÔøΩÔøΩJÔøΩfJhÔøΩÔøΩDJÔøΩÔøΩ*ÔøΩÔøΩÔøΩÔøΩOÔøΩÔøΩÔøΩtÔøΩÔøΩÔøΩÔøΩ0zÔøΩÔøΩÔøΩ;*nÔøΩÔøΩÔøΩÔøΩÔøΩg|ÔøΩÔøΩÔøΩ	ÔøΩÔøΩDMƒìÔøΩÔøΩ({ÔøΩÔøΩÔøΩDÔøΩqÔøΩS7ÔøΩNÔøΩ[ÔøΩÔøΩ^ÔøΩÔøΩ]ÔøΩ-ÔøΩoÔøΩÔøΩÔøΩÔøΩ_ÔøΩ+ÔøΩÔøΩO""ÔøΩX 8ÔøΩ+ÔøΩrÔøΩÔøΩ”øÔøΩdÔøΩÔøΩÔøΩÔøΩ;ÔøΩ÷ß>ÔøΩÔøΩ_+xÔøΩÔøΩ}yÔøΩkÔøΩwÔøΩ;ÔøΩÔøΩ∆éÔøΩÔøΩÔøΩÔøΩÔøΩiÔøΩÔøΩ]ÔøΩ7""AÔøΩÔøΩÔøΩÔøΩ8ÔøΩ*ÔøΩËë∂ÔøΩÔøΩy9ÔøΩÔøΩÔøΩ’ìÔøΩÔøΩÔøΩÔøΩÔøΩ]ÔøΩ|uÔøΩÔøΩ5""f7ÔøΩTÔøΩO1%ÔøΩ)%ÔøΩ|ÔøΩÔøΩawÔøΩ^ÔøΩÔøΩ@ÔøΩ<;r{ÔøΩÔøΩ!ÔøΩÔøΩjÔøΩÔøΩXÔøΩÔøΩEX>ÔøΩ ›©ÔøΩÔøΩ$j>UHœü:%4\]ÔøΩ#ÔøΩk|ÔøΩÔøΩÔøΩﬁÉexeÔøΩ5ÔøΩÔøΩÔøΩJÔøΩ|ÔøΩpÔøΩÔøΩÔøΩÔøΩ‘óÔøΩÔøΩÔøΩÔøΩÔøΩ'/ÔøΩÔøΩRÔøΩÔøΩ~ÔøΩÔøΩÔøΩ>ÔøΩÔøΩÔøΩ;SÔøΩn'ÔøΩeÔøΩÔøΩÔøΩ∆òÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩpX]H""W]ÔøΩEpÔøΩDÔøΩÔøΩ1CÔøΩÔøΩÔøΩaÔøΩÔøΩ—üÔøΩU9OÔøΩ(ÔøΩ'AÔøΩ*lÔøΩRel^&ÔøΩeGIÔøΩW ÔøΩÔøΩ€êÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩbÔøΩ'ÔøΩÔøΩÔøΩhYaÔøΩWÔøΩÔøΩÔøΩwÔøΩNn>pÔøΩvÔøΩr$ÔøΩ	3^ÔøΩÔøΩÔøΩ«πÔøΩÔøΩ&ZÔøΩÔøΩÔøΩÔøΩwÔøΩd)ÔøΩIÔøΩhÔøΩ@ÔøΩ€ó$|Q+2wIMÔøΩÔøΩÔøΩ3oWÔøΩ6 ÔøΩn!ÔøΩ`ÔøΩ<XÔøΩÔøΩzÔøΩÔøΩ=ÔøΩaÔøΩÔøΩ5ÔøΩ ])n9ÔøΩÔøΩ%ÔøΩÔøΩÔøΩÔøΩ\ÔøΩÔøΩÔøΩ5qÔøΩÔøΩÔøΩÔøΩ\ÔøΩ'ÔøΩÔøΩÔøΩZDZÔøΩÔøΩÔøΩ3^UpÔøΩ1ÔøΩcÔøΩÔøΩSÔøΩVÔøΩ<ÔøΩÔøΩÔøΩ ÔøΩ*ﬁ†ÔøΩÔøΩr4a5ÔøΩS&Q7+ÔøΩ=cÔøΩAÔøΩ$ÔøΩRÔøΩUÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ=ÔøΩYÔøΩÔøΩULÔøΩXUc&ÔøΩÔøΩÔøΩÔøΩÔøΩ)fÔøΩÔøΩyÔøΩÔøΩ_ÔøΩÔøΩÔøΩÔøΩÔøΩmJÔøΩ:…â!Î≥§'ÔøΩÔøΩ7ÔøΩ√îfÔøΩZÔøΩÃúÔøΩ,(«ëb7_	KÔøΩÔøΩU1ÔøΩ0r@ÔøΩÔøΩÔøΩDj7|ÔøΩKÔøΩÔøΩÔøΩzVd…±ÔøΩ$*%ÔøΩÔøΩÀ°÷ùRÔøΩÔøΩoqh(ÔøΩ$hÔøΩÔøΩjKÔøΩ,1ÔøΩ)$_ÔøΩrÔøΩÔøΩÔøΩ88ÔøΩ+-%fÔøΩÔøΩc_ÔøΩÔøΩiT~ÔøΩ+)SÔøΩÔøΩÔøΩEÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩ«∞ÔøΩYYÔøΩ‚ÖêbÔøΩÔøΩ)ÔøΩOÔøΩH$}ÔøΩzKÔøΩÔøΩÔøΩÔøΩ–´c+ÔøΩÔøΩÔøΩMÔøΩÔøΩGÔøΩÔøΩ[ÔøΩÔøΩTÔøΩJÔøΩÔøΩÔøΩÔøΩ îÔøΩÔøΩÔøΩJÔøΩÔøΩÔøΩÔøΩxÔøΩÔøΩÔøΩÔøΩCzÔøΩ`ÔøΩÔøΩ`K≈¥ÔøΩÔøΩRÔøΩEÔøΩwÔøΩÔøΩÔøΩxÔøΩÔøΩÔøΩÔøΩÔøΩÏ¨∫«†QÔøΩUR(ÔøΩ<l#3ÔøΩƒßÔøΩ]ÔøΩTÔøΩd)<aÔøΩÔøΩAÔøΩÔøΩÔøΩWhÔøΩÔøΩKÊáèWBmsÔøΩÔøΩLÔøΩbÔøΩÔøΩ ÑÔøΩ @ÔøΩs3ÔøΩÔøΩÔøΩHmÔøΩÔøΩJÔøΩÔøΩÔøΩQÔøΩK.ÔøΩÔøΩÔøΩu»çÔøΩBÔøΩ}*/ÔøΩÔøΩÔøΩ]ÔøΩÔøΩtÔøΩ…ñkÔøΩ&ÔøΩT=LÔøΩvdÔøΩ;$c?wV÷ÖP ÔøΩ$ÔøΩÔøΩKÔøΩJÔøΩ9SMÔøΩeÔøΩÔøΩMÔøΩ$ÔøΩÔøΩÔøΩhÔøΩlÔøΩWÔøΩÔøΩÔøΩiÔøΩT/ÔøΩ'‰Ω∑ÔøΩ6Z)ÔøΩÔøΩÔøΩAÔøΩw,ÔøΩ‰ΩæÔøΩÔøΩÔøΩAÔøΩ9y*[ÔøΩnÔøΩÔøΩ4A!ÔøΩ|[ÔøΩÔøΩ:cÔøΩy1ÔøΩ)oÔøΩ?qÔøΩ,ÔøΩ/ÔøΩ_ÔøΩDÔøΩ2_uÔøΩQÔøΩ ÔøΩÔøΩÔøΩÔøΩc_ÔøΩ oÔøΩ0ÔøΩÔøΩ’í ÔøΩÔøΩ>ÔøΩÔøΩ·Å®/FÔøΩÔøΩ$ÔøΩÔøΩfÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩsDÔøΩÔøΩ>ÔøΩKÔøΩÔøΩ!ÔøΩÔøΩn;|ÔøΩÔøΩÔøΩMÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ&isÔøΩÔøΩ‘Å0ÔøΩÔøΩÔøΩ-ÔøΩÔøΩxkÔøΩUÔøΩlÔøΩÔøΩÔøΩÔøΩXkFÔøΩVsÔøΩpŒõÔøΩGÔøΩÔøΩÔøΩÔøΩ.z7NX V ÔøΩÔøΩÔøΩC[=ÔøΩkœïÔøΩReÔøΩG]ÔøΩ)/W6xdÔøΩ):WÃÜmcÔøΩÔøΩÔøΩÔøΩÔøΩe ç ÜÔøΩÔøΩ`ÔøΩ4:pÔøΩÍå∫kŒâ{^ÔøΩ ÔøΩ	ÔøΩÔøΩÔøΩÔøΩ<“ÄÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ\ÔøΩÔøΩ/w'ÔøΩ9X~ÔøΩÔøΩÔøΩÔøΩO] ú$»ÇÔøΩ>ÔøΩxÔøΩ-ÔøΩÔøΩ@{uÔøΩÔøΩÔøΩg éÔøΩO^8ÔøΩj~ÔøΩ'JÔøΩ|4%ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ[ÔøΩÔøΩG	RoVÔøΩÔøΩÔøΩ,3WÔøΩ_Yl`#ÔøΩFÔøΩ{\ÔøΩÔøΩÔøΩ_\>ÔøΩx^ÔøΩFVÔøΩÔøΩÔøΩÔøΩuÔøΩ*ÔøΩ>ÔøΩÔøΩÔøΩÔøΩQ>f^ÔøΩÔøΩLÔøΩÔøΩÔøΩ/@ÔøΩÔøΩÔøΩT`ÔøΩzÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ%ÔøΩÔøΩÔøΩÔøΩiKRÔøΩÔøΩ*ÔøΩÔøΩÔøΩ6ÔøΩÔøΩ:ÔøΩsÔøΩ7O ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ%ÔøΩÔøΩÔøΩÀ¨ÔøΩ""ÔøΩ+ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ<fE>?CÔøΩ ÔøΩrÔøΩÔøΩ9j>ÔøΩÔøΩ0ÔøΩÔøΩÔøΩÔøΩÔøΩcS]3|lÔøΩeÔøΩx[ÔøΩ;2ÔøΩÔøΩÔøΩÔøΩ<ÔøΩÔøΩÔøΩÔøΩ;PÔøΩ9tÔøΩcs|ÔøΩLVÔøΩÔøΩAÔøΩSÔøΩÔøΩ*,;)ÔøΩRÔøΩÔøΩÔøΩZÔøΩyyÔøΩ8&ÔøΩÔøΩ<ÔøΩÔøΩtÔøΩ,Z+ÔøΩÔøΩ4ÔøΩÔøΩrÔøΩT{hÔøΩÔøΩ37#CÔøΩÔøΩ!S/jÔøΩÔøΩ`crFV""*ÔøΩÔøΩÔøΩÔøΩ}ÔøΩP[uÔøΩÔøΩ$ÔøΩÔøΩÔøΩ=ÔøΩ/ÔøΩduÔøΩÔøΩ3DnÔøΩÔøΩÔøΩjsrÔøΩA8ÔøΩÔøΩs[JÔøΩÔøΩ;ÔøΩkPhÔøΩÔøΩUÔøΩ!?BÔøΩÔøΩÔøΩIÔøΩÔøΩ2ÔøΩÔøΩ$?!ÔøΩÔøΩÔøΩ—¥_ÔøΩÔøΩOÔøΩ(zÔøΩÔøΩ;ÔøΩﬁôj1xÔøΩ?2ÔøΩÔøΩÔøΩ9ÔøΩiÔøΩÔøΩÔøΩ9CÔøΩÔøΩÔøΩDÔøΩÔøΩÔøΩÔøΩiG;ÔøΩÔøΩ}+ÔøΩ)ÔøΩyÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩAÔøΩ}ÔøΩ\ÔøΩ–∞ÔøΩÔøΩ'ÔøΩÔøΩd‹èÔøΩÔøΩoÔøΩq:ÔøΩqBÔøΩNÔøΩjÔøΩ]-:i1ÔøΩÔøΩ!ÔøΩmGNÔøΩÔøΩÔøΩIÔøΩoÔøΩÔøΩ{ÔøΩÔøΩEÔøΩÔøΩ:ÔøΩÔøΩ5ÔøΩIÔøΩÔøΩÔøΩÔøΩXÔøΩÔøΩ*%ÔøΩÔøΩÔøΩJ 1,ÔøΩÔøΩS‹ºÔøΩ`?/ÔøΩ3ÔøΩÔøΩE7ÔøΩÔøΩÔøΩÔøΩ	ÔøΩÔøΩNÔøΩÔøΩ ÔøΩ⁄≠fÔøΩÔøΩrÔøΩÔøΩeÔøΩÔøΩÔøΩ5QÔøΩÔøΩÔøΩO≈ë\F€¨ÔøΩ`ÔøΩ*KeÔøΩÔòÜÔøΩ‰è§⁄∞+ÔøΩEÔøΩÔøΩ{ÔøΩÔøΩÔøΩ”ä'ÔøΩÔøΩ‹î""/ÔøΩÔøΩÔøΩÔøΩAH ÔøΩFgÔøΩ""ÔøΩÔøΩÔøΩ&YÔøΩBÔøΩMwiÔøΩzo$ÔøΩ5axÔøΩÔøΩo~ÔøΩ7ÔøΩJÔøΩÔøΩÔøΩÔøΩ5?4u:ÔøΩÔøΩ7eÔøΩÔøΩrÔøΩxÔøΩ◊î]ÔøΩÔøΩ^$ayÔøΩn7ÔøΩÔøΩÔøΩ_Fo{$ÔøΩÔøΩÔøΩÔøΩÔøΩxÔøΩÔøΩxP[HÔøΩÔøΩNÔøΩÔøΩÔøΩSUÔøΩÔøΩÔøΩ[ÔøΩHÔøΩlqÔøΩHÔøΩ‘°}ÔøΩÔøΩrQÔøΩ1ÔøΩÔøΩÔøΩ< $ÔøΩj~ÔøΩÔøΩÔøΩÔøΩ(QÔøΩm)*ÔøΩÔøΩ -ÔøΩ=ÔøΩÔøΩÔøΩÔøΩ›¢9wÔøΩÔøΩXÔøΩ7CÔøΩd”ªJ?(moÔøΩÔøΩvÔøΩ@ÔøΩ{ÔøΩ&ÔøΩ=ÔøΩ#ÔøΩWÔøΩÔøΩ&eLÔøΩÔøΩÔøΩ\ÔøΩ6ÔøΩ-ÔøΩÔøΩÔøΩÔøΩcÔøΩcÔøΩ,wÔøΩÔøΩ,ÔøΩ{ÔøΩÔøΩvvJÔøΩÔøΩÔøΩO<sÔøΩÔøΩ 5[+ÔøΩ{ÔøΩ◊ÉÔøΩÔøΩlGÔøΩÔøΩ	IÔøΩ>ÔøΩS{|ÔøΩÔøΩÔøΩÔøΩ&1iv<ÔøΩ>ÔøΩ›∑ÔøΩ=ÔøΩ}YÔøΩÔøΩ2ÔøΩjÔøΩewÔøΩ!ÔøΩ%ÔøΩ~ÔøΩÔøΩÔøΩÔøΩ	=}{sÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩÔøΩzMÔøΩÔøΩÔøΩ÷∂ÔøΩÔøΩTÔøΩPOÔøΩ[(?ÔøΩmÔøΩsÔøΩOÔøΩÔøΩ1ÔøΩÔøΩQKÔøΩ∆™=ÔøΩÔøΩÔøΩÔøΩWP]ÔøΩ,MÔøΩ<w+u}+ÔøΩÔøΩt L#ÔøΩA7ÔøΩÔøΩÔøΩÔøΩ,K#>ÔøΩÔøΩ#{xZÔøΩKÔøΩÔøΩÔøΩ[Jw<?ÔøΩÔøΩÔøΩQ8aÔøΩ9jÔøΩ2 ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ8ÔøΩ,ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ≈ÄÔøΩ=ÔøΩ[ÔøΩnÔøΩÔøΩÔøΩUÔøΩ.ÔøΩÔøΩKonHYÔøΩÔøΩX%aÔøΩ:ÔøΩÔøΩÔøΩÔøΩÔøΩgÔøΩ&ÔøΩ|ÔøΩ^1A#ÔøΩÔøΩÔøΩÔøΩMÔøΩÔøΩ]ÔøΩÔøΩÔøΩÔøΩÔøΩUÔøΩÔøΩÔøΩ""|ÔøΩ""<ECZ{ÔøΩÃèUÔøΩÔøΩÔøΩÔøΩÔøΩK;py2ÔøΩÔøΩÔøΩÔøΩÔøΩVÈªØUÔøΩPÔøΩt|mÔøΩ%ÔøΩ|ÔøΩdÕ≤‚¨îÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩf,ÔøΩyÔøΩ4~AÔøΩÔøΩÔøΩ·µÉŸÆÔøΩÔøΩ^""!›¥)+ÔøΩÔøΩ:ÔøΩÔøΩÔøΩÔøΩÔøΩQÔøΩÔøΩÔøΩÔøΩuKÔøΩDÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩlf1@ÔøΩÔøΩÔøΩÔøΩvﬂäÔøΩuLÔøΩ8ÔøΩÔøΩÔøΩOÔøΩÔøΩ.ÔøΩgÔøΩÔøΩÔøΩ,h ÔøΩ ÔøΩÔøΩÔøΩÔøΩVaÔøΩÃûRÔøΩqÔøΩÔøΩ)ÔøΩÔøΩÔøΩlÔøΩ7PÔøΩ~jg‹ºÔøΩÔøΩ >RÔøΩH]ÔøΩÔøΩ+ÔøΩÔøΩtÔøΩÔøΩ`ÔøΩÔøΩÔøΩÔøΩÔøΩ7ÔøΩpÔøΩÔøΩÔøΩm7HqeÔøΩcÔøΩÔøΩÔøΩ`ÔøΩÔøΩ3ÔøΩÔøΩÔøΩÔøΩiKRÔøΩÔøΩÔøΩOÔøΩw4/ÔøΩMÔøΩÔøΩ9x5hÔøΩ1""9FÔøΩÔøΩL≈ªÔøΩkÔøΩGcjÔøΩ6cÔøΩÔøΩÔøΩE/3ÔøΩ-ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩCÔøΩÔøΩÔøΩ7ÔøΩsÔøΩÔøΩÔøΩÔøΩ|ÔøΩ!ÔøΩÔøΩÔøΩÔøΩnÔøΩuÔøΩÔøΩÔøΩÔøΩFÔøΩ2?4kzÔøΩyÔøΩ€úÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ:ÔøΩ].ÔøΩÔøΩxJyVÔøΩ	ÔøΩdÔøΩA:ÔøΩgM1ÔøΩ	ÔøΩ9ÔøΩÔøΩG=ÔøΩÔøΩ~yÔøΩ(ÔøΩ{FÔøΩÔøΩ[ÔøΩm ÔøΩÔøΩyÔøΩ%ÔøΩÔøΩ¬óMÔøΩ÷Ç*ÔøΩÔøΩÔøΩgÔøΩÔøΩÔøΩÔøΩ;DÔøΩ#7ÔøΩÔøΩMÔøΩ5ÿùŸê[ÔøΩÔøΩÔøΩÔøΩ)]WaiÔøΩPÔøΩV–áÔøΩ◊¢ÔøΩ|]ÔøΩA)hÔøΩÔøΩÔøΩ-fÔøΩÔøΩÔøΩÔøΩ~55eV9ÔøΩFÔøΩ7\ÔøΩ(ÔøΩeÔøΩÔøΩÔøΩ~ﬂèÔøΩ⁄åÔøΩÔøΩÔøΩÔøΩcÔøΩfÔøΩ!ÔøΩÔøΩ[-ÔøΩ=ÔøΩkÔøΩXe0ÔøΩXÔøΩFLÔøΩÔøΩÔøΩÔøΩxÔøΩMDdÔøΩ7oC{~8ÔøΩbÔøΩÔøΩfÔøΩÔøΩ@ÔøΩÔøΩÔøΩÔøΩAvÔøΩ^i UÔøΩÔøΩ>ÔøΩÔøΩÔøΩ>MÔøΩÔøΩÔøΩÔøΩÔøΩ=ÔøΩÔøΩAaÔøΩÔøΩAÔøΩs[q÷ºg~xzÔøΩ»¥ÔøΩÔøΩÔøΩÔøΩœòyGÔøΩ?ÔøΩÔøΩVÔøΩ;!ÔøΩs›ãÔøΩÔøΩÔøΩiKUÔøΩ3ÔøΩ ÔøΩdsÔøΩÔøΩÔøΩ%ÔøΩÔøΩvÔøΩÔøΩVaÔøΩ(CÔøΩÔøΩ 6PÔøΩSbÔøΩyÔøΩÔøΩ4ÔøΩcÔøΩ|vÔøΩAZÔøΩÔøΩ\MÔøΩ[pÔøΩjÔøΩÔøΩÔøΩÔøΩÔøΩ|aÔøΩ}~\^ÔøΩÔøΩÔøΩe4ÔøΩFÔøΩÔøΩÔøΩÔøΩÔøΩÿÜ&ÔøΩÔøΩÔøΩÔøΩMÔøΩZLÔøΩÔøΩÔøΩÔøΩ’¨ÔøΩ	KDÔøΩÔøΩƒ£sÔøΩÔøΩÔøΩÔøΩÔøΩ~ÔøΩseÔøΩky:ÔøΩu«∞<ÔøΩQaY3HÔøΩÔøΩÔøΩ—Ä\ÔøΩÔøΩ≈çÔøΩÔøΩÔøΩÔøΩf.ÔøΩÔøΩÔøΩÔøΩÔøΩÃ≥ÔøΩÔøΩx\ÔøΩ]YwÔøΩ’©ÔøΩ	”àÔøΩNÔøΩÔøΩÔøΩ?MÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩCÔøΩ endstream endobj 34 0 obj << /Filter /FlateDecode /Length1 2089 /Length2 16880 /Length3 0 /Length 18152 >> stream xÔøΩÔøΩÔøΩPÔøΩÔøΩÔøΩ ÔøΩÔøΩA&8ÔøΩÔøΩÔøΩ	ÔøΩÔøΩÔøΩÔøΩÔøΩ]ÔøΩÔøΩIpÔøΩÔøΩw	ÔøΩÔøΩeÔøΩ}ÔøΩÔøΩ>ÔøΩÔøΩWÔøΩ[S≈ºÔøΩ{u?ÔøΩÔøΩÔøΩ~ÔøΩÔøΩzÔøΩÔøΩÔøΩ(bÔøΩ`ÔøΩtÔøΩ3ÔøΩ01ÔøΩÔøΩÔøΩeXÔøΩÔøΩÔøΩlLÔøΩÃ¨HTTÔøΩV`[ÔøΩÔøΩHTAÔøΩ.VÔøΩÔøΩÔøΩ`ÔøΩ9ÔøΩÔøΩÔøΩo6qcÔøΩQÔøΩÔøΩ ÔøΩj`aÔøΩpÔøΩpÔøΩ23XÔøΩÔøΩyÔøΩCtpÔøΩÔøΩÔøΩYÔøΩÔøΩ ÔøΩÔøΩ $*1GOg+KÔøΩÔøΩ9ÔøΩy–öÔøΩXxxÔøΩÔøΩÔøΩ9[ÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩMÔøΩmjÔøΩV ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩyÔøΩ@www&c;&gA:ÔøΩÔøΩÔøΩÔøΩ r9ÔøΩÔøΩÔøΩ I(€ÅÔøΩ-ÔøΩ	ÔøΩ ÔøΩniÔøΩÔøΩCÔøΩÔøΩÔøΩnÔøΩÔøΩlÔøΩLAÔøΩ.o!ÔøΩÔøΩf gÔøΩÔøΩÔøΩ 5yÔøΩÔøΩ#ÔøΩÔøΩoÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ`abÔøΩoÔøΩGÔøΩÔøΩÔøΩÔøΩÔøΩ_ÔøΩ∆¶ÔøΩvÔøΩÔøΩÔøΩÔøΩVÔøΩ s+[@IRÔøΩ	ÔøΩf €õÔøΩE4ÔøΩuqxÔøΩ7v3ÔøΩÔøΩ56y#ÔøΩÔøΩtcÔøΩÔøΩÔøΩ ÔøΩÔøΩMÔøΩÔøΩÔøΩÔøΩ:[9ÔøΩ]ÔøΩ\ÔøΩlÔøΩÔøΩÔøΩ+ÔøΩ[ÔøΩ%ÔøΩÔøΩÔøΩÔøΩÔøΩ@ÔøΩ`ÔøΩÔøΩÔøΩÔøΩrÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÀµÔøΩwpÔøΩÔøΩÔøΩ2ÔøΩÔøΩ73ÔøΩKÔøΩÔøΩÔøΩ#PÔøΩÔøΩÔøΩÔøΩ$#ÔøΩoŒõ	ÔøΩÔøΩp033sÔøΩr@N ÔøΩÔøΩÔøΩ%ÔøΩÔøΩ=AÔøΩrÔøΩÔøΩe~ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩ2ÔøΩ}!yÔøΩÔøΩÔøΩ `gWÔøΩÔøΩÔøΩ?ÔøΩÔøΩÔøΩXX fVÔøΩ`ÔøΩ	ÔøΩÔøΩÔøΩÔøΩOÔøΩ73ÔøΩÔøΩoÔøΩvÔøΩÔøΩV ]ÔøΩÔøΩc0ÔøΩÔøΩÔøΩÔøΩÔøΩ€ÑÔøΩ9ÔøΩÔøΩzÔøΩÔøΩÔøΩÎäÅÔøΩÔøΩ ÔøΩjÔøΩ-ÔøΩÔøΩNQQÔøΩ7#ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩz{ÔøΩÔøΩÔøΩ<ÔøΩÔøΩVÔøΩÔøΩÔøΩÔøΩ2ÔøΩÔøΩ ÔøΩÔøΩÔøΩ}ÔøΩÔøΩJvÔøΩÔøΩÔøΩÔøΩ{AÔøΩ ÔøΩÔøΩKÔøΩÔøΩmrA ÔøΩ?ÔøΩÔøΩÔøΩÔøΩÔøΩlÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ+ÔøΩÔøΩﬂîÔøΩÔøΩÔøΩÔøΩuÔøΩÔøΩoEÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩMÔøΩÔøΩÔøΩÔøΩYÔøΩzÔøΩÔøΩÔøΩ6ÔøΩÔøΩÔøΩ-PpxÔøΩÔøΩÔøΩKÔøΩÔøΩÔøΩÔøΩ 3+WÔøΩÔøΩÔøΩÔøΩmÔøΩÔøΩÔøΩÔøΩÔøΩD3ÔøΩÔøΩ31ÔøΩÔøΩmÔøΩrÔøΩÔøΩÔøΩ ÔøΩ)[ÔøΩM-ÔøΩÔøΩÔøΩÔøΩÔøΩÌõ≠ÔøΩ=HÔøΩÔøΩÔøΩÔøΩ7ÔøΩ[3ÔøΩÔøΩÔøΩ-ÔøΩÔøΩÔøΩÔøΩ[ÔøΩÔøΩm4ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ+aoÔøΩ`ÔøΩ◊≤ÔøΩrpÔøΩÔøΩÔøΩÔøΩ=ÔøΩÔøΩÔøΩÔøΩ q ÔøΩYﬁ∂ÔøΩÔøΩÔøΩa ÔøΩÔøΩÔøΩo!ÔøΩ7ÔøΩÔøΩ sgÔøΩÔøΩ.ÔøΩÔøΩ ÔøΩÔøΩÔøΩ7ÔøΩ ÔøΩÔøΩ  P‚øàÔøΩ ÔøΩÔøΩÔøΩX@ÔøΩ?ÔøΩ  ÔøΩÔøΩ/ÔøΩ~c*ÔøΩAoLÔøΩ?Ëç©ÔøΩÔøΩÔøΩÔøΩÔøΩ[-ÔøΩ[-ÔøΩÔøΩE<oÔøΩÔøΩÔøΩ MÔøΩÔøΩÔøΩ:MÔøΩÔøΩ8ÔøΩ|ÔøΩÔøΩo ÔøΩÔøΩÂØæÔøΩÔøΩY @ÔøΩ?ÔøΩ[ÔøΩÔøΩÔøΩ_ÔøΩÔøΩOÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ?ÔøΩo ,ÔøΩÔøΩ$XÔøΩÔøΩÔøΩIÔøΩÔøΩtÔøΩÔøΩÔøΩÔøΩ7ÔøΩÔøΩ?ÔøΩÔøΩÔøΩÔøΩÔøΩrmÔøΩﬂ¥ÔøΩÔøΩÔøΩoÔøΩÔøΩGÔøΩÔøΩ7ÔøΩÔøΩÔøΩao‹∑ﬂòÔøΩﬂäuÔøΩÔøΩ~ÔøΩu|{ÔøΩÔøΩ€ÇÔøΩÔøΩÔøΩ,ÔøΩÔøΩÔøΩÔøΩÔøΩbÔøΩd9ÔøΩÔøΩÔøΩÔøΩÔøΩ+ÔøΩÔøΩ_ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ`yÔøΩÔøΩS!ÔøΩÔøΩ?ÔøΩÔøΩpÔøΩÔøΩxa ÔøΩÔøΩÔøΩÔøΩNÔøΩÔøΩÔøΩuÔøΩÔøΩÔøΩMÔøΩÔøΩ?ÔøΩÔøΩnÔøΩÔøΩ7ÔøΩ^DÔøΩÔøΩzÔøΩÔøΩÔøΩÔøΩÔøΩ?ÔøΩaÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ	ÔøΩ ÔøΩ""-ÔøΩ;ÔøΩÔøΩ[ÔøΩÔøΩÔøΩ’äÔøΩsg‹õ`eGÔøΩÔøΩÔøΩFÔøΩ‹ï tÔøΩW	„øøb+ÔøΩZÔøΩÔøΩuÔøΩÔøΩuÔøΩZÔøΩÔøΩbÔøΩÔøΩÔøΩlcÔøΩÔøΩ≈ãÔøΩÔøΩÔøΩknÔøΩÔøΩÔøΩ3ÔøΩ%ÔøΩpÔøΩ""ÔøΩÔøΩÔøΩSÔøΩÔøΩK«àÔøΩÔøΩÔøΩÔøΩUuÔøΩÔøΩZxÔøΩÔøΩÔøΩÔøΩbÔøΩGÔøΩÔøΩ?ukÔøΩmÔøΩÔøΩ<MÔøΩ/&ÔøΩÔøΩÔøΩ(xnn6ÔøΩÔøΩÔøΩÔøΩjÔøΩ:ÔøΩŸπNJÔøΩK·âì$ÔøΩÔøΩÔøΩÔøΩÔøΩ1VÔøΩÔøΩÔøΩÔøΩrHÔøΩÔøΩÔøΩwGGÔøΩÔøΩrÔøΩÔøΩGÔøΩÔøΩÔøΩÔøΩDrFSÔøΩYÔøΩÔøΩ^	ÔøΩÔøΩxÔøΩÔøΩÔøΩÔøΩÔøΩOÔøΩ&.ÔøΩ’Ñ(ÔøΩrdvÔøΩ.ÔøΩ/wcdT-ZÔøΩÔøΩ6ÔøΩ“†ÔøΩ6ÔøΩÔøΩÔøΩ7EÔøΩxÔøΩÔøΩlÔøΩÔøΩwÔøΩÔøΩ~ÔøΩ\JQ/ÔøΩbÔøΩ)Ô≠®ÔøΩÔøΩÔøΩDDÔøΩ_DÔøΩÔøΩÔøΩ\ÔøΩÔøΩSÔøΩGÔøΩnd:ÔøΩ@ÔøΩ%%g6ÔøΩÔøΩa,ÔøΩYYÔøΩÔøΩ{ÔøΩeÔøΩq,*ÔøΩ9÷äAÔøΩÔøΩdÔøΩ_5ÔøΩsÔøΩÔøΩÔøΩÔøΩÔøΩZÔøΩ$ÔøΩNÔøΩÔøΩÔøΩ]ÔøΩÔøΩ=zÔøΩÔøΩ#ÔøΩ1EÔøΩÔøΩBbÔøΩÔøΩÔøΩÔøΩR<VyÔøΩiÔøΩÔøΩÔøΩ4ÔøΩÔøΩaÔøΩDÔøΩ1DÔøΩ)ÔøΩPÔøΩÔøΩCÔøΩÔøΩ<ÔøΩÔøΩ`ÔøΩÔøΩXÔøΩÔøΩTxÔøΩ<RoÔøΩÔøΩ:c7yrGchÔøΩÔøΩTÔøΩÔøΩÔøΩ|ÔøΩÔøΩÔøΩ0_ÔøΩÔøΩ-aoBÍî≤)ÔøΩŸõÔøΩÔøΩ ÔøΩÔøΩ|ÔøΩi+ÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩÔøΩ~ÔøΩpÔøΩÔøΩÔøΩ_VÔøΩYÔøΩÔøΩ9ÔøΩiÔøΩ!$uÔøΩÔøΩ""ÔøΩ+|'ÔøΩbLBÔøΩ+SÔøΩÔøΩÔøΩ8{ÔøΩÔøΩ6ÔøΩ""e’∫ÔøΩÔøΩÔøΩÔøΩn(ÔøΩÔøΩÔøΩÔøΩ)/Íï¢ÔøΩÔøΩ3…æ|\RI:ÔøΩX;@`ÔøΩÔøΩÔøΩÔøΩdÔøΩ,w-ÔøΩ,ÔøΩ0ÔøΩ≈™wÔøΩ+ÔøΩoÔøΩÔøΩ&ÔøΩÔøΩ)HÔøΩÔøΩÔøΩÎ´£W(ÔøΩ7g2ÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩÔøΩÔøΩ*E:ÔøΩÔøΩr\ÔøΩkÔøΩSÔøΩÔøΩYÔøΩ;ÔøΩÔøΩ/ÔøΩ cÔøΩ=ÔøΩÔøΩŒÉsÔøΩ‹ïzhÔøΩ~)v""8,BfZ âÔøΩZnDÔøΩÔøΩÔøΩ.1ÔøΩÔøΩ0/KÔøΩ’àÔøΩZ/|DELÔøΩd\ZC3PÔøΩ~ÔøΩ ^ÔøΩ“ÉÔøΩ]ÔøΩ[ÔøΩ)7ÔøΩÔøΩ)BÔøΩÔøΩÔøΩ$[ÔøΩpH?ÔøΩ-ÔøΩÔøΩÔøΩeÔøΩxÔøΩ$ÔøΩiÔøΩÔøΩÔøΩ}ÔøΩÔøΩ;t’õÔøΩ_ÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩ1sÔøΩHrSÔøΩÔøΩÔøΩ ?EÀ™H*ÔøΩ3ÔøΩÔøΩ0ÔøΩÔøΩaÔøΩNÔøΩÔøΩÔøΩ(|	ÔøΩÔøΩÔøΩZMÔøΩÔøΩÔøΩ _!PÔøΩuÔøΩjÔøΩÔøΩÔøΩz?FeÔøΩ$ÔøΩ@IÔøΩÔøΩÕá)YÔøΩÔøΩ4ÔøΩhQJÔøΩÔøΩcrÔøΩXÔøΩ«ÖÔøΩyÔøΩÔøΩÔøΩÔøΩ ÔøΩ^`ÔøΩÔøΩÔøΩ*ÔøΩÔøΩ:ÔøΩWbÔøΩ,ÔøΩÔøΩ’±pÔøΩMnÔøΩÔøΩÔøΩ’å0 ÔøΩBÔøΩÔøΩÔøΩUÔøΩÔøΩ@÷±ÔøΩCÔøΩÔøΩzÔøΩTIÔøΩÔøΩÔøΩÔøΩA8ÔøΩ2xÔøΩ3ÔøΩf2ÔøΩÔøΩÊöµÔøΩÔøΩ ÔøΩÔøΩ{}ÔøΩÔøΩ#6VÔøΩ(ÔøΩÔøΩ√≤œ∞—†ÔøΩÔøΩÔøΩÔøΩÔøΩn ™ÔøΩPÔøΩÔøΩÔøΩÔøΩ-7ÔøΩ\ÔøΩDÔøΩvÔøΩÔøΩÔøΩÔøΩÔøΩ»ß-OÔøΩÔøΩ6ÔøΩ~ÔøΩÔøΩ¬™ÔøΩÔøΩÔøΩMÔøΩxÔøΩÔøΩ>9ÔøΩFÔøΩÔøΩÔøΩ$ÔøΩ»ôÔøΩÔøΩÔøΩÔøΩÃñÔøΩÔøΩ`ÔøΩkÔøΩ{ÔøΩÔøΩPÔøΩÔøΩ)CÔøΩÔøΩFh9mÔøΩ?ÔøΩÔøΩÔøΩCÔøΩcÔøΩoÔøΩ05@yÔøΩeÔøΩuÔøΩÔøΩYÔøΩÔøΩÔøΩ-ÔøΩÔøΩÔøΩÔøΩRÔøΩsÔøΩÔøΩÔøΩDÔøΩÔøΩ,ÔøΩ1K#^ÔøΩw*ÔøΩÔøΩÔøΩÔøΩÔøΩ`ÔøΩÔøΩÔøΩaÔøΩ6ÔøΩ""HqÔøΩ °ÔøΩÔøΩlÔøΩmOOÔøΩ<@)ÔøΩDÔøΩÔøΩÔøΩ'y|ÔøΩÔøΩÔøΩÔøΩ5ÔøΩbÔøΩÔøΩ*ÔøΩÔøΩa>ÔøΩkfD3''oÔøΩÔøΩZ ÔøΩ3kÔøΩ d""fÔøΩ+ÔøΩÔøΩŒÅQ7ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ(hÔøΩÔøΩ~ÔøΩ'vÔøΩbp +ÔøΩwÔøΩaÔøΩÔøΩ|$Wx]m|÷ã;ÔøΩA/ÔøΩÔøΩrÔøΩGÌóóÔøΩy&2ÔøΩc#L}yÔøΩ3ÔøΩPÔøΩÔøΩÔøΩ{q,ÔøΩÔøΩÔøΩ@[ÔøΩÔøΩ@6mMÔøΩÔøΩÔøΩ-ÔøΩÔøΩ?""8sgÊºãŸ≠ÔøΩÔøΩÔøΩÀñ<.Nd@NFÔøΩÔøΩVÔøΩX&T^ÔøΩÔøΩÔøΩRÔøΩ""L ÔøΩf'ÔøΩ ÔøΩÔøΩ#ÔøΩÔøΩÔøΩ{r2-ÔøΩ/ÔøΩXÔøΩÔøΩrÔøΩ>‘ØÔøΩ2&CÔøΩ*aÔøΩÔøΩuÔøΩÔøΩÔøΩÔøΩ[ ÔøΩÔøΩ{ÔøΩÔøΩ_ÔøΩo]—∂NÔøΩ4ÔøΩÔøΩÔøΩÔøΩPÔøΩ7hÔøΩ]ÔøΩÔøΩ""JÔøΩÔøΩIÔøΩÔøΩÔøΩÔøΩBÔøΩÔøΩ8ÔøΩoÔøΩÔøΩ2]ÔøΩÔøΩÔøΩQ!ÔøΩ>ÔøΩÔøΩ/ÔøΩwÔøΩH&ÔøΩÔøΩx}ÔøΩ0:xÔøΩ KÔøΩÔøΩ'ÔøΩ‡¥ñlÔøΩ/$'|}ÔøΩ dÔøΩKÔøΩPÔøΩÔøΩÔøΩZ ÔøΩ7@ ÔøΩ0sÔøΩ[ÔøΩÔøΩ mÔøΩÔøΩ( ÔøΩÔøΩÔøΩfÔøΩÔøΩWCÔøΩt2sÔøΩkÔøΩ.n@›îZÀäC4PÔøΩÔøΩ∆ÇÔøΩgÔøΩÔøΩÔøΩWÔøΩ6ÔøΩÔøΩÔøΩvÔøΩÔøΩTÔøΩÔøΩÔøΩ6O OÔøΩÔøΩ>KH”úÔøΩFÔøΩ&ÔøΩÔøΩÔøΩ ÔøΩÔøΩtJÔøΩp}nÔøΩÔøΩÔøΩ/ÔøΩÔøΩÔøΩÔøΩÔøΩ◊çÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ^ÔøΩÔøΩÔøΩ2ÔøΩy]^+ ?ÔøΩ'|ÔøΩÔøΩ$jÔøΩ}EftV3WÔøΩQ;^ÔøΩÔøΩÔøΩÔøΩÔøΩ…•ÔøΩw\ÔøΩÔøΩÔøΩsÔøΩÔøΩ=vÔøΩÔøΩÔøΩ»õfÔøΩÔøΩÔøΩÔøΩHÔøΩOÔøΩMÔøΩ}ÔøΩ!pŸ´ÔøΩ9ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ7ÔøΩÔøΩjOÔøΩu,ÔøΩÔøΩÔøΩÔøΩ@IÔøΩÔøΩÔøΩ?ÔøΩÔøΩÔøΩÔøΩ\ÔøΩÔøΩSÔøΩx GÔøΩ""*DAÔøΩÔøΩbÔøΩdÔøΩÔøΩ@ÔøΩÔøΩ\ÔøΩÔøΩÔøΩ|ÔøΩÔøΩ#ÔøΩÔøΩSÔøΩ5YÔøΩ^ÔøΩ.ÔøΩ ÔøΩO$ÔøΩ;ÔøΩÔøΩjrBÔøΩPa#CwIÔøΩkÔøΩ{ÔøΩTuŸ§W(ÔøΩ Ü?ÔøΩÔøΩ`&ÔøΩ^{e""ÔøΩÔøΩÔøΩBÔøΩJ=ÔøΩD ÔøΩÔøΩÔøΩÔøΩÔøΩjHÔøΩÔøΩÔøΩ/ÔøΩÔøΩÔøΩPÔøΩ5ÔøΩÔøΩÔøΩÔøΩA2gÔøΩÔøΩÔøΩ27ÔøΩ9""7%ÿñÔøΩmeÔøΩ>MÔøΩ⁄æÔøΩwÔøΩÔøΩ ÔøΩk15lJ5YÁ•®ÔøΩbÔøΩ6ÔøΩ,?ÔøΩSÔøΩÔøΩ[ÔøΩÔøΩ/6ÔøΩ>ÔøΩ\ÔøΩzÔøΩÔøΩ4ÔøΩz>ÔøΩÔøΩÔøΩUÔøΩ÷≠ÔøΩ]g\ÔøΩÔøΩÔøΩÔøΩÔøΩ«∏ÔøΩ4~ÔøΩ\UBÔøΩÔøΩÔøΩÔøΩÔøΩ€ô5-ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩOÔøΩf}ÔøΩ(ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩgÔøΩÔøΩWÔøΩF[ÔøΩiÔøΩÔøΩ’ÖÔøΩ2∆ôpPÔøΩYÔøΩaÔøΩ›õÔøΩ[ÔøΩÔøΩÔøΩKWUÔøΩÔøΩRÔøΩÔøΩ0YÔøΩÔøΩWÔøΩÔøΩÔøΩ!ÔøΩ'ÔøΩKHÔøΩÔøΩ?ÔøΩ·É≤d\%pÔøΩÔøΩ$ÔøΩY ÔøΩrdÔøΩÔøΩÔøΩ'ÔøΩ5ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩvÔøΩÔøΩÔøΩÔøΩÔøΩ	8ÔøΩr%ÔøΩÔøΩ=pÔøΩÔøΩÔøΩÔøΩdÔøΩ{lMbÔøΩÔøΩ-ÔøΩgJÔøΩmCÔøΩtwj{R”ãÔøΩcÎÉâÔøΩÔøΩRÔøΩ ÔøΩÔøΩ[ÔøΩÔøΩ…†eUÔøΩÔøΩG‹≤ÔøΩÔøΩÔøΩÔøΩÔøΩCÔøΩÔøΩÔøΩ{ZÔøΩÔøΩ-HŸäŒ¶ÔøΩaÔøΩu	ÔøΩÔøΩÔøΩÔøΩÌåâÔøΩ$ÔøΩÔøΩ0%""&ÔøΩÔøΩŸñÔøΩ–äÔøΩÔøΩSÔøΩÔøΩÔøΩÔøΩ9RÔøΩ…æÔøΩÔøΩU	ÔøΩ—ø7ÔøΩÔøΩA>96`ÔøΩÔøΩÔøΩy6ÔøΩÔøΩ<BÔøΩ'ÔøΩ◊ñ9ÔøΩ)ÔøΩÔøΩt4ÔøΩÔøΩÔøΩrÔøΩÔøΩA èÔøΩaÔøΩﬂáÔøΩ+=ÔøΩRÔøΩ ÔøΩÔøΩ}ÔøΩÔøΩÔøΩ<ÔøΩÔøΩ`xÔøΩÔøΩ6ÔøΩW_FÔøΩk…ΩsUÔøΩÔøΩ'ÀÖÔøΩÔøΩ8+-ÔøΩcÔøΩ‹ÉÔøΩÔøΩÔøΩlÔøΩÔøΩÔøΩoÔøΩÔøΩ}ÔøΩ“≠2ÔøΩm]ÔøΩWT-sÔøΩÔøΩ@ÔøΩ,GÔøΩy6ƒ¥ÔøΩÔøΩÀÑÔøΩ_=?CÔøΩ;ÔøΩAÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩs0ÔøΩkÔøΩÔøΩ+ÔøΩAÔøΩÔøΩÔøΩÃäW[Èó•]ÔøΩÔøΩÔøΩzÔøΩ}<ÔøΩ.ÔøΩÔøΩI+w)jÔøΩQÔøΩ""Bq~ÔøΩ8ÔøΩÔøΩ)ÔøΩÔøΩ.hÔøΩÔøΩÔøΩÔøΩKdAÔøΩ4ÔøΩÔøΩKÔøΩwsÔøΩ[ÔøΩ`}ÔøΩN ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩxÔøΩÕ¶NÔøΩ	)ÔøΩÔøΩyÔøΩÔøΩÔøΩuÔøΩÔøΩÔøΩÔøΩ CeV<ÔøΩ5cÔøΩ_E#~ÔøΩcÔøΩmÍï∑~ÔøΩ;ÔøΩÔøΩaÔøΩ""ÔøΩÔøΩÔøΩƒçAÔøΩÔøΩ(rÀöKÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩXÔøΩÔøΩÔøΩÔøΩm3ÔøΩE;BÓô¶;ÔøΩÔøΩ	ÿçn=ÔøΩÔøΩ>ÔøΩÔøΩÔøΩÔøΩ`ÔøΩÔøΩ@ÔøΩÔøΩÔøΩ<ÔøΩÔøΩÔøΩIÔøΩAÔøΩwU1ﬂöÔøΩÔøΩÔøΩÁ´ÆuÔøΩÔøΩwlÔøΩÔøΩRÔøΩÔøΩÔøΩÔøΩJjP3sÔøΩ|][EÔøΩÔøΩÔøΩÔøΩÔøΩ~ÔøΩÔøΩ*ÔøΩt ?qPÔøΩ^\ÔøΩ„µ∑ÔøΩhNRÔøΩt)ÔøΩÔøΩ*OÔøΩÔøΩÔøΩ;ÔøΩp/ÔøΩÔøΩ xÔøΩ&lÔøΩ*0ÔøΩi(ÔøΩ""Zt[ÔøΩﬁß8ÔøΩ ÔøΩ+ÔøΩjÔøΩ≈á–ñ0yÔøΩ5ÔøΩÔøΩlÔøΩÍ´±BÔøΩi_ÔøΩÔøΩ10ÔøΩÔøΩÔøΩÔøΩƒÑÔøΩ_ÔøΩnVÔøΩÔøΩzÔøΩÔøΩ9ÔøΩJ`l0FÔøΩ,9ÔøΩÔøΩÔøΩ<ÔøΩÔøΩ02ÔøΩÔøΩ=fÔøΩ“Ä^;?Ÿ∏ÔøΩÔøΩ(;<¬°ÔøΩÔøΩ1rÔøΩ-%ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩaÔøΩ1ÔøΩÔøΩÔøΩ +ÔøΩÔøΩ5ÔøΩÔøΩÔøΩ}ÔøΩE#j ÔøΩyÔøΩÔøΩSÔøΩÔøΩÔøΩÔøΩBÔøΩ\ÔøΩŒèGÔøΩÔøΩ 5ÔøΩ4T.?ÔøΩ3›∂v:ÔøΩWÔøΩÔøΩÔøΩWÔøΩTW,ÔøΩÔøΩÔøΩ*ÔøΩÔøΩ)ÔøΩCÔøΩÕµ ÔøΩÔøΩ‰éÆÔøΩOÔøΩdÔøΩkcUgÔøΩ“çÁßßZlaÔøΩ0ZdÔøΩÔøΩTpÔøΩ÷´ÔøΩsqh‘∏ÔøΩÔøΩÔøΩGÔøΩÔøΩhÔøΩ#ÔøΩÔøΩÔøΩÔøΩÔøΩ3qÔøΩÔøΩÔøΩ>QÔøΩe*HÔøΩ;ÔøΩOIÔøΩ]ÔøΩÔøΩÔøΩ}~ÔøΩRÔøΩ1.nÔøΩÔøΩÔøΩÔøΩI6ÔøΩÔøΩÔøΩ;ÔøΩsÔøΩÔøΩyÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ=)^GdI(ÔøΩgÔøΩÀ¶y0ÔøΩÔøΩOWt6ÔøΩÔøΩÔøΩ^1H^ÔøΩÔøΩ9ÔøΩ;7ZJÔøΩÔøΩ?ÔøΩTÔøΩÔøΩWÔøΩ,eÔøΩHŸòNÔøΩÔøΩ:ÔøΩ.ÔøΩAÔøΩ)QÔøΩzÔøΩ,ÔøΩÔøΩ|ÔøΩ?ÔøΩÔøΩÔøΩ&&by@9ÔøΩNÀëÔøΩÔøΩ#ÔøΩ},ÔøΩÔøΩÔøΩpÔøΩÔøΩ2vWÔøΩV[>ÔøΩÔøΩ6ÔøΩ4ÔøΩ""ÔøΩ&$ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩN[ÔøΩG[7ÔøΩÔøΩÔøΩH(ÔøΩÔøΩÔøΩÔøΩ>ÔøΩC*ÔøΩÔøΩÔøΩAjj/bxÔøΩÔøΩZ4ÕáÔøΩjV""1g>ÔøΩAÔøΩ&RÔøΩÔøΩ&ÔøΩÔøΩÔøΩHÔøΩ<ÔøΩÔøΩÔøΩ}ÔøΩNÔøΩ60ÔøΩr$ÔøΩ~ÔøΩÔøΩÔøΩÔøΩ ∏%bÔøΩÔøΩ;ÔøΩ:0«îkoÔøΩÔøΩÔøΩ-OÔøΩ+ÔøΩÔøΩÔøΩb ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩCœ°ggÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ:p~ÔøΩÔøΩZÔøΩ5vnÔøΩh-oE=ÔøΩAX=(ÔøΩœΩÔøΩÔøΩlÔøΩÔøΩÔøΩimÔøΩÔøΩpÔøΩlÔøΩ&ÔøΩÔøΩÔøΩÔøΩ-ÔøΩÔøΩMÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÓΩ¥ÔøΩ#JÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩHÔøΩQÔøΩXÔøΩKRÔøΩ@0ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ+1ÔøΩÔøΩ 4<œìÔøΩÔøΩtL#ÔøΩ\ÔøΩÔøΩrE=ÔøΩ*ÔøΩ<ÔøΩCÔøΩÔøΩ~ÔøΩÔøΩIÔøΩHÔøΩ5;`nLÔøΩÔøΩÔøΩÔøΩH⁄Øw6ÔøΩ#4ÔøΩ ÔøΩÔøΩj”ÅÔøΩ1ÔøΩ6ÔøΩÔøΩÔøΩmÔøΩBWU!ÔøΩ{ÔøΩÔøΩrÔøΩÔøΩÔøΩÔøΩ.ÔøΩ.=TÔøΩ ÔøΩ ¥ÔøΩÔøΩÔøΩ»Ö≈ì:y5ETÔøΩ^IÔøΩuÔøΩÔøΩÔøΩÔøΩ‹ê ÔøΩÔøΩÔøΩÔøΩ9ÔøΩÔøΩ8CÔøΩÔøΩyÔøΩVÔøΩU^ÔøΩÔøΩ“úÔøΩÔøΩ= ÔøΩÔøΩÔøΩXX3~aCÔøΩÔøΩ∆µÔøΩsÔøΩÔøΩÔøΩÔøΩ| ÔøΩÔøΩ^ÔøΩ(ÔøΩÔøΩÔøΩ&ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ:ÔøΩcw+ÔøΩÔøΩÔøΩ>ÔøΩÔøΩÔøΩÔøΩÔøΩ[ÔøΩÔøΩ -”π6ÔøΩÔøΩÔøΩ2U ÔøΩb√ö:ÔøΩÔøΩ#ÔøΩs`!Œ™ÔøΩ9ÔøΩÔøΩ$ÔøΩyDÔøΩÔøΩÔøΩ! yÔøΩÔøΩ<GÔøΩÔøΩÔøΩ,VÔøΩ~ÔøΩÔøΩÔøΩ?ÔøΩÔøΩcÔøΩÔøΩtC~`WÔøΩﬁ°^ÔøΩ@XÔøΩÔøΩÔøΩo6ÔøΩ ≥tAwÔøΩ(ÔøΩÔøΩ2ÔøΩÔøΩÔøΩÔøΩaÔøΩ>ÔøΩHÔøΩÔøΩ]ÔøΩÔøΩÔøΩÔøΩqlÔøΩÔøΩÔøΩÔøΩÔøΩGÔøΩÔøΩÔøΩÔøΩPÔøΩn=4€äÔøΩÔøΩY3ÔøΩ[ÔøΩ	ÔøΩÔøΩÔøΩÔøΩyÔøΩ=cÔøΩÔøΩ‘≥ÔøΩÔøΩ) $ÔøΩÔøΩÔøΩ>kÔøΩIÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ""ÔøΩu|ÔøΩÔøΩÔøΩÔøΩRÔøΩÔøΩÔøΩ?UÔøΩÔøΩÔøΩ8ÔøΩy'ÔøΩÔøΩÔøΩÔøΩ_ÔøΩÔøΩÔøΩW+;8ÔøΩÔøΩÔøΩGHK""pÔøΩÔøΩÔøΩÔøΩWFÔøΩ-ÔøΩlÔøΩÔøΩ`Ã±ÔøΩÔøΩA)ÔøΩ}LÕìÔøΩÔøΩ=kcÔøΩÔøΩÔøΩF}ÔøΩlÔøΩÔøΩÔøΩqÔøΩÔøΩÔøΩÔøΩ|8ÔøΩ'ÔøΩÔøΩÔøΩÔøΩ]ÔøΩÔøΩwÔøΩÔøΩy'ÔøΩÔøΩ>ÔøΩÔøΩÔøΩ€∏7ÔøΩ}2xZÔøΩ\ÔøΩ~U7ÔøΩ=ÔøΩÔøΩg4ÔøΩFÔøΩPÔøΩÔøΩÔøΩ“ÉÔøΩÔøΩgÔøΩfÔøΩÔøΩÔøΩ ÔøΩÔøΩDPÔøΩÔøΩÔøΩÔøΩKÔøΩ+ÔøΩÔøΩFtz	ÔøΩ ÔøΩ|Ÿº(ÔøΩ&ÔøΩÔøΩÔøΩ2%ÔøΩÔøΩÔøΩ^	2∆áÔøΩ`ÔøΩÔøΩ-(WÔøΩÔøΩ1EÔøΩÔøΩDCÔøΩÔøΩZ ÔøΩÔøΩVÔøΩB<oÔøΩ`5ÔøΩuÔøΩsÔøΩÔøΩrÏ†ß+ÔøΩN_ÔøΩ.ÔøΩlÔøΩÔøΩj>a6√ùÔøΩÔøΩ; ÔøΩ3xÔøΩÔøΩÔøΩÔøΩ„çªÔøΩ@ÔøΩÔøΩx(f5ÔøΩÔøΩÔøΩiÔøΩR< !ÔøΩBÔøΩÔøΩÔøΩiÔøΩÔøΩ\aÔøΩÔøΩÔøΩ;ﬂãÔøΩÔøΩÔøΩ .ÔøΩbÔøΩ1HÔøΩÔøΩ_yÔøΩK>ÔøΩ)ÔøΩyJk$ÔøΩÔøΩ(ÔøΩÔøΩHÔøΩÔøΩ[ÔøΩŒòÔøΩÔøΩ ∫ÔøΩOfYÔøΩGx|N&$ÔøΩÔøΩ?BÔøΩÔøΩ^C3ÔøΩÔøΩ$ÔøΩBÔøΩhÔøΩÔøΩÔøΩWÔøΩÔøΩ¬Öm”ìÔøΩ\ÔøΩÔøΩÔøΩ*wÔøΩÔøΩrŸëÔøΩ+kÔøΩÔøΩ‰µ¶ÔøΩÔøΩR0ÔøΩ<i&^ÔøΩÔøΩ%ÔøΩÔøΩÔøΩÔøΩgÔøΩÔøΩÔøΩhÔøΩÔøΩOÔøΩÔøΩJeÔøΩLcÔøΩÔøΩÔøΩÔøΩÔøΩS*yÔøΩÔøΩSÔøΩÔøΩ[ÔøΩÔøΩpÔøΩÔøΩUÔøΩÔøΩÔøΩÔøΩÔøΩ^ÔøΩÔøΩMÔøΩ@4ÔøΩÔøΩÔøΩ›∫–íÔøΩ<ÔøΩÔøΩ cÔøΩ-ÔøΩÔøΩQ3ÔøΩÔøΩÔøΩ)UdÔøΩ7iJÔøΩ8ÔøΩÔøΩ]QÔøΩÔøΩÔøΩ{ÔøΩÔøΩ>ÔøΩÔøΩXÔøΩ6\ÔøΩL^ÔøΩÔøΩ$ÔøΩÔøΩ=qÔøΩfÔøΩjÔøΩÔøΩkÔøΩFÔøΩÔøΩÔøΩCÔøΩÔøΩÔøΩÔøΩÔøΩ.ÔøΩÔøΩÔøΩ:ÔøΩÔøΩÔøΩ^ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩj}ÔøΩÔøΩP:ÔøΩuÔøΩfÔøΩ""!AÔøΩ*,VÔøΩ9ÔøΩeVÔøΩÔøΩÔøΩ\ÔøΩÔøΩÔøΩÔøΩNÔøΩ/ ÔøΩ8ÔøΩÔøΩTÔøΩkœµwÔøΩÔøΩÔøΩÔøΩÔøΩFÔøΩ0]}+ÔøΩ\jÔøΩKTÔøΩk%kÔøΩT;ÔøΩÏå≥aÔøΩÔøΩVÔøΩ6ÔøΩÔøΩ>yÔøΩx>ÔøΩyLÔøΩkÔøΩÔøΩÔøΩÔøΩibÔøΩÔøΩ ÔøΩÔøΩjÔøΩ2rVÔøΩVÔøΩ⁄æ~ÔøΩÔøΩkLÔøΩÔøΩÔøΩ4't<mÔøΩQÔøΩÔøΩ ÔøΩuÔøΩÔøΩÔøΩÔøΩÔøΩC{Z~EÈ¢∏ÔøΩÔøΩSÔøΩR%ÔøΩÔøΩÔøΩ[ÔøΩÔøΩÔøΩ_kÔøΩ›íFQÔøΩÔøΩfÔøΩ-ÔøΩÔøΩÔøΩOÔøΩ^n:ÔøΩÔøΩ;!ÔøΩpVhÔøΩbÔøΩmÔøΩÔøΩﬁâÔøΩ8 6ÔøΩÔøΩRÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩpÔøΩÔøΩ#zVÔøΩD(ÔøΩ^ÔøΩ2Q)ÔøΩÔøΩeÔøΩz[IÔøΩÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩ~ÔøΩsÔøΩ‹¨8toÔøΩ7ÔøΩMÔøΩÔøΩPÔøΩzÔøΩ)√ÉJÔøΩÔøΩ>ÔøΩLÔøΩÔøΩapÔøΩÔøΩÔøΩ!ÔøΩl'ÔøΩsÔøΩÔøΩ	""ÔøΩhÔøΩÔøΩÔøΩ ﬂúÔøΩÔøΩ$ÔøΩÔøΩ0ÔøΩ]qÔøΩÔøΩiÔøΩÔøΩÔøΩÔøΩN3ÔøΩÔøΩBÔøΩÔøΩ‘±.Ã®ÔøΩuÔøΩÔøΩÔøΩÔøΩzÔøΩ Ÿí!ÔøΩ ÔøΩÔøΩT9ÔøΩdÔøΩÔøΩ7ÔøΩ ÔøΩVÔøΩTÔøΩÔøΩ…êÔøΩ∆ô?ÔøΩAÔøΩÔøΩ/aÔøΩveO√§*ÔøΩÔøΩ:. ÔøΩ/ÔøΩ(<dÔøΩÔøΩ$ÔøΩAÔøΩÔøΩKÔøΩÔøΩ/ÔøΩTÔøΩ B{ÔøΩ7>ÔøΩÔøΩÔøΩÕèBAEVÔøΩ…ò„´π]ÔøΩÔøΩE3yÔøΩaCÔøΩÔøΩÔøΩÔøΩƒÖÔøΩÔøΩÔøΩ`ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ]ÔøΩÔøΩÔøΩÕÇÔøΩ:ÔøΩxÔøΩÔøΩ$HÔøΩ""ÔøΩKh= ÔøΩ`'ÔøΩÔøΩgÔøΩÔøΩhÔøΩBÔøΩÔøΩ17	ÔøΩŒ≥ÔøΩ@ÔøΩÔøΩÔøΩÔøΩ“µgÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩeÔøΩoÔøΩÔøΩqÔøΩÔøΩ^1ÔøΩHgÔøΩeh$ÔøΩ""ÔøΩfÔøΩﬁ®QÔøΩi%>ÔøΩH94RY,ÔøΩÔøΩÔøΩÔøΩ+:ÔøΩÔøΩÔøΩÔøΩÔøΩ3gDjjD`%ÔøΩÔøΩrÔøΩLxuÔøΩÔøΩÔøΩÔøΩcÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ@7YÔøΩÔøΩfpÔøΩÔøΩXqÔøΩÔøΩÔøΩ$~ÔøΩÔøΩÔøΩ1ÔøΩU&ÔøΩTZÔøΩÔøΩÔøΩÔøΩÔøΩ&=7ÔøΩﬂ≥ÔøΩ$ÔøΩ<ÔøΩÔøΩÔøΩÔøΩNZÔøΩÔøΩOzÔøΩÔøΩ4ÔøΩY.ÔøΩbÔøΩSÔøΩÔøΩÔøΩ6`ÔøΩÔøΩ\&ÔøΩÔøΩ{wÔøΩ> 2ÔøΩÔøΩÔøΩÔøΩÔøΩKFÔøΩ/+ DÔøΩÔøΩÔøΩaÔøΩwÔøΩÔøΩÔøΩÔøΩ*B *:xÔøΩ+ÔøΩJﬁ£31;ÔøΩÔøΩÔøΩ&6ÔøΩoÔøΩÔøΩÔøΩzÔøΩ^ÔøΩ&iaÔøΩƒΩÔøΩÔøΩÔøΩ?LCÔøΩ~ÔøΩÔøΩDÔøΩÔøΩ=ÔøΩÔøΩ4ÔøΩ_VÔøΩ;_ÔøΩÔøΩÔøΩ"";tIÔøΩ>ÔøΩ	nN!ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩLNÔøΩÔøΩQÔøΩ|ÔøΩj'q+ÔøΩÔøΩy.ÔøΩÔøΩNÔøΩ!ÔøΩ7ÔøΩ]W| ÿêÔøΩÔøΩÔøΩÔøΩZo'0-7G0ÔøΩÔøΩÔøΩ +ÔøΩ≈ºÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩqÔøΩÔøΩIÔøΩ}ÔøΩÔøΩfÔøΩÔøΩÔøΩ]ÔøΩÔøΩ\ÔøΩv~«∏ÔøΩxÔøΩÔøΩ9ÔøΩL ÔøΩÔøΩ;ÔøΩVÔøΩ~o7ÔøΩZ+ÔøΩÔøΩÔøΩl;ÔøΩÔøΩÔøΩZG]ÔøΩiÔøΩÔøΩV≈áyÔøΩ~ÔøΩÔøΩE3	1G—£ÔøΩ6ÔøΩ÷§nÔøΩ9ÔøΩÔøΩÔøΩÔøΩÔøΩ-ÔøΩgÔøΩÔøΩœìÔøΩ QÔøΩSÔøΩÔøΩÔøΩ!—ÆÔøΩÔøΩ""ÔøΩ'ÔøΩoÔøΩ8 %ÔøΩ+ÔøΩ. !ÔøΩÔøΩÔøΩm0k4ÔøΩ~kÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩz!#TcÔøΩÔøΩÔøΩÔøΩD<ÔøΩ^{ÔøΩPkÔøΩÔøΩÔøΩÔøΩÔøΩww	ÔøΩ‹ãA FWIayÔøΩw5ÔøΩÈÇÖ&+ÔøΩ9ÔøΩÔøΩhÔøΩiÔøΩÔøΩgMÔøΩ2ÔøΩÔøΩÔøΩ_XrÔøΩÔøΩÔøΩ1ÔøΩÔøΩ5ÔøΩ0cÔøΩ&ŒæU:xEÔøΩÔøΩjLPÔøΩzﬂ£.ÔøΩ:ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ)ÔøΩÔøΩÔøΩÔøΩ`ÔøΩwÔøΩÔøΩL#ÔøΩsÔøΩÔøΩ<…ïÔøΩ;$ÔøΩnÔøΩTÔøΩÔøΩÔøΩÔøΩ!ÔøΩ{ ÔøΩÔøΩ+oÔøΩÔøΩ¬µÔøΩÔøΩ	5^XÔøΩnÏÇÆH5ÔøΩÔøΩXÔøΩ+ÔøΩÔøΩ=ÔøΩ&dHHgÔøΩ◊í`Ÿ¢ÔøΩ ΩÔøΩÔøΩ…≥ﬂ®»≤ÔøΩiÔøΩÔøΩu@u8!ÔøΩy]ÔøΩÔøΩÔøΩq	=ÔøΩ:ÔøΩÔøΩ)dÔøΩ yÔøΩLÔøΩÔøΩÔøΩ`ÔøΩÔøΩÔøΩÔøΩ›øÔøΩ(ÔøΩ>ÔøΩﬁÑbÔøΩ<ÔøΩQ–πHÔøΩ0,ÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩÔøΩ~QLÔøΩ	`ÔøΩfÔøΩÔøΩS€îÔøΩ;0ÔøΩ√û{RÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩfÔøΩps p5ÔøΩÔøΩÔøΩÔøΩÔøΩVÀçÔøΩÔøΩÔøΩÔøΩNÔøΩÔøΩÔøΩ5NÔøΩuÔøΩÔøΩÀÅ[ÔøΩÔøΩÔøΩÔøΩÔøΩOÔøΩ'kZDÔøΩÔøΩ)ÔøΩoÔøΩÔøΩÔøΩEÔøΩ!clzÔøΩqSÔøΩ^ÔøΩqFÔøΩ;ÔøΩÔøΩp;ÔøΩ ÔøΩÔøΩOu~~FvÔøΩÔøΩÔøΩxÔøΩHÔøΩÔøΩÔøΩÔøΩ9ÔøΩÔøΩÔøΩÔøΩÔøΩ>>jÔøΩÔøΩ|ÔøΩ{ÔøΩF@ÔøΩRÔøΩwHÔøΩG@kÔøΩÔøΩvj1sÔøΩiÔøΩWÔøΩFG{8C ÔøΩYÔøΩÔøΩÔøΩ\ÔøΩÔøΩ04n-ÊöÇÔøΩÔøΩ{ZÔøΩsÔøΩÔøΩÔøΩQÔøΩ%ÔøΩCfWÔøΩÔøΩ1ÔøΩ[ÔøΩ9ÔøΩniÔøΩÔøΩZFÔøΩÔøΩ%7„ôΩ$tAŸÇÔøΩ<,ÔøΩÔøΩÔøΩX[ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ)mÔøΩ63rQkÔøΩŸ•ÔøΩÔøΩÔøΩÔøΩÔøΩG?ÔøΩ;CÔøΩ1ÔøΩ2ÔøΩ:ÔøΩ`t9ÔøΩXÔøΩÔøΩœñ(dÔøΩÔøΩÔøΩÿ£;ÔøΩ^#5ÔøΩÔøΩ‚©ÜiVrÔøΩ:ÔøΩÀètÔøΩPÔøΩvÔøΩÔøΩÔøΩ,/ÔøΩÔøΩ≈Ñ5>ÔøΩXÔøΩ’ÜÔøΩ≈¥ÔøΩyﬂòE DÔøΩÔøΩ(8ÔøΩÔøΩdÔøΩ}ÔøΩÔøΩ: ÔøΩÔøΩÔøΩÔøΩÔøΩtÔøΩ`ÔøΩÔøΩ2-2ÔøΩÔøΩ-{ÔøΩ=vÔøΩEÔøΩ9ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩg~ÔøΩgÔøΩÔøΩFÔøΩ=ÔøΩÔøΩdÔøΩÔøΩkÔøΩÔøΩÔøΩ=$ÔøΩe4TÔøΩ+cÔøΩÔøΩKÔøΩÔøΩÔøΩÔøΩH&ÔøΩÔøΩÔøΩÔøΩÔøΩuÔøΩ%ÔøΩÔøΩj!ÔøΩ ÔøΩ;aÔøΩjÔøΩÔøΩse*pÔøΩÔøΩÔøΩ[ÔøΩÔøΩhÔøΩÔøΩu5r~kÔøΩÔøΩiYeÔøΩÔøΩÔøΩÔøΩ!ÔøΩÔøΩÔøΩÔøΩDwb)@4÷ÑÔøΩÔøΩz5=◊âÔøΩÔøΩÔøΩ~g!ÔøΩÔøΩŸåf ÔøΩLÔøΩÔøΩÔøΩ*ÔøΩÔøΩY-<ÔøΩÔøΩ\]C4ÔøΩ!#qÔøΩ^RÔøΩ-ÔøΩYTÔøΩÔøΩÔøΩlÀØ&ÔøΩ€´ÔøΩÔøΩÔøΩÔøΩ\1tP\Íö¥ÔøΩÔøΩ9SÔøΩÔøΩÔøΩYÔøΩ!ÔøΩ#√∫ÔøΩJÔøΩÔøΩÔøΩÔøΩ%ÔøΩÔøΩ(PÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩM;ÔøΩyX~ÔøΩÔøΩÔøΩÔøΩÔøΩ.ÔøΩEÔøΩ8ÔøΩIiÔøΩlÔøΩÔøΩ?ÔøΩXÔøΩÔøΩ2ÔøΩwrN!ÔøΩÔøΩÔøΩ%ÔøΩ«ÄA8ÔøΩÔøΩ'^a@ÔøΩÔøΩÔøΩÔøΩR8AhÔøΩvÔøΩUÔøΩ‹ÅvÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩŒ†ÔøΩÔøΩdÔøΩÔøΩÔøΩ~sÔøΩ_?ÔøΩÔøΩÔøΩÔøΩÔøΩ∆ôÔøΩÔøΩﬁÄÔøΩÔøΩmÔøΩÔøΩÔøΩQÔøΩY bÔøΩÔøΩ#iÃùÔøΩÔøΩ›≠R FxTÔøΩÔøΩ5ÔøΩÔøΩKÔøΩÔøΩ=ÔøΩÔøΩÔøΩÔøΩ’©^ÔøΩ+ÔøΩÔøΩÔøΩÔøΩYÔøΩs1iKÔøΩÔøΩÔøΩ1`ÔøΩÔøΩ@_ÔøΩÔøΩhÔøΩÔøΩ$ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩN|? ""iYwÔøΩ>ÔøΩÔøΩ'ÔøΩÔøΩÔøΩ[ÔøΩ ÔøΩ7ÔøΩcÔøΩGy“™1KÔøΩ0dÔøΩÔøΩ%BRÔøΩÔøΩÔøΩÔøΩuÔøΩ/ÔøΩc{|ÔøΩÔøΩÔøΩÔøΩÔøΩOÔøΩÔøΩÔøΩ<ÔøΩÔøΩÔøΩÔøΩV+ÔøΩRUÔøΩÔøΩ'ÔøΩCÔøΩ&ÔøΩjÔøΩÔøΩ:ÔøΩÔøΩÔøΩEjrÔøΩ[4FSÔøΩKÔøΩÔøΩÔøΩ_ÔøΩaÔøΩ}.«ìÔøΩÔøΩ-ﬂÜÔøΩ4ÔøΩ( @QÔøΩÔøΩÔøΩÔøΩ=<ÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩu[ÔøΩÔøΩMÔøΩEdÔøΩÔøΩ=ÔøΩÔøΩÔøΩÔøΩQÔøΩÔøΩ:RÔøΩÔøΩÔøΩÔøΩÔøΩkjÔøΩdRmÔøΩÔøΩ6 ZÔøΩÔøΩÔøΩÔøΩhŸ´-Z=ÔøΩER'{ÔøΩ#TTA√òPÔøΩÔøΩbTÔøΩÃåÔøΩÔøΩÔøΩÔøΩcÔøΩ>dÔøΩÔøΩÔøΩÔøΩ5`L√çÔøΩaÔøΩﬁàKÔøΩﬁëÔøΩÔøΩÔøΩ∆∫4ﬁÅ⁄å-?ÔøΩ.@ÔøΩÔøΩÔøΩÔøΩfÔøΩzÔøΩÔøΩÔøΩÔøΩ…ûÔøΩÔøΩ`RÔøΩ!ÔøΩ#TÔøΩ“ªÔøΩÔøΩÔøΩ‚ª∏GÍõëÔøΩÔøΩ3`Dcmh/h{ÔøΩ'ÔøΩRÔøΩÔøΩÔøΩnLÔøΩ'HÔøΩÔøΩÔøΩ*1ÀàÔøΩÔøΩÔøΩÔøΩv&ÔøΩr++CÔøΩLÔøΩÔøΩ9WÔøΩ""gÔøΩÔøΩÔøΩWÔøΩ√ÆSÔøΩ>f7$gÔøΩfÔøΩWÔøΩÔøΩ%,ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩSÔøΩÔøΩ-eÔøΩm–≤ÔøΩÔøΩY7ÔøΩwÔøΩÔøΩPÔøΩÔøΩMÔøΩÔøΩÔøΩ""fÔøΩ~ÔøΩ6L+ÔøΩÔøΩNÔøΩÔøΩÔøΩ3ÔøΩjÔøΩteÔøΩ$ÔøΩ{ÔøΩÔøΩ`ÔøΩ3xÔøΩyÔøΩÔøΩ""ÔøΩ:fVÔøΩn/`ÔøΩ0ÔøΩœ•TÔøΩmÔøΩ%8∆ÉÔøΩ/ÔøΩ6ÔøΩÔøΩÔøΩÔøΩ.ÔøΩmÔøΩÔøΩDfCÔøΩÔøΩDÔøΩÔøΩÔøΩÔøΩ0ÔøΩ^y¬éL57WÔøΩÔøΩÔøΩgÔøΩÔøΩE<ÔøΩÔøΩÔøΩÔøΩÔøΩUÔøΩ5ÔøΩ~ÔøΩÔøΩÔøΩkBÔøΩ|ÔøΩÔøΩbÔøΩ|2ÔøΩh~DÔøΩÔøΩÔøΩÔøΩÔøΩZ@ÔøΩÔøΩÔøΩWeÔøΩ=iÔøΩÔøΩÔøΩÔøΩl%ÔøΩÔøΩÔøΩÔøΩ`oÔøΩÔøΩÔøΩO6BvÔøΩ-ÔøΩb}ÔøΩ:kÔøΩSÔøΩÔøΩ<loÔøΩÔøΩÔøΩÔøΩÔøΩ&ÔøΩ2ÔøΩ3sÔøΩÔøΩ2jiÈª∞ÔøΩSÔøΩÔøΩ L.$ÔøΩÔøΩÔøΩﬂßÔøΩÔøΩÔøΩTÔøΩÔøΩÔøΩ*uÔøΩ,ÔøΩwoÔøΩÔøΩj #O9ÔøΩp$ÔøΩ}GÔøΩÔøΩ :7cÔøΩ6ÔøΩJÔøΩÔøΩÔøΩÔøΩ1ÔøΩÔøΩÔøΩﬁÉl;ÔøΩÔøΩÔøΩÔøΩË¥éÔøΩÔøΩEÔøΩ–íŸÄÔøΩÔøΩ,*g ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩLÔøΩÕç/~AÔøΩ=ÔøΩ%^ÔøΩÔøΩÔøΩÔøΩyÔøΩ`W}qHÔøΩ<!RÔøΩGÔøΩÔøΩÔøΩ3^ÔøΩtÔøΩ[ÔøΩEÔøΩgÔøΩ'ÔøΩÔøΩ!.T9ÔøΩÔøΩIM VpÔøΩc6~^7i4ÔøΩ FIÔøΩÔøΩÔøΩÔøΩÔøΩ7ÔøΩ39ÔøΩ⁄ïÔøΩÔøΩFŸ¶^:ÔøΩÔøΩÔøΩÔøΩDÔøΩ}ÔøΩÔøΩÔøΩÔøΩÔøΩ-ÔøΩ?,ÔøΩ?	ÔøΩÔøΩ!\QFÔøΩ’∞ÔøΩÔøΩ.zÔøΩzÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩfÔøΩÔøΩÔøΩ.ÔøΩÔøΩ EÔøΩ<ÔøΩÔøΩ YÔøΩ'jÔøΩÔøΩÕìÔøΩIÔøΩXVÔøΩÔøΩvÔøΩ ÔøΩ_ÔøΩÔøΩ,ÔøΩÔøΩsÔøΩ&…çÔøΩÔøΩr2ÔøΩ($>@ÔøΩÔøΩJÔøΩÔøΩ<5{ÔøΩÔøΩWÔøΩ/ÔøΩbÔøΩÔøΩhÔøΩIÔøΩÔøΩEÔøΩ=ÔøΩÔøΩÔøΩÔøΩx‰ò∫ÔøΩzVPŒáÔøΩG""AÔøΩÔøΩLÔøΩ+÷≠M&tÔøΩÔøΩ0ÔøΩÔøΩÔøΩyÔøΩ ÔøΩ<]SsÔøΩÔøΩ¬ÆÔøΩ4IÿúVÔøΩDÔøΩrÔøΩÔøΩ(ÔøΩnÔøΩE>NÔøΩ KÔøΩAÔøΩÔøΩOÔøΩ-""ÔøΩ>ÔøΩÔøΩ3uÔøΩBB'5	ÔøΩÔøΩBj/ÔøΩƒΩOÔøΩÔøΩywÔøΩ^yÔøΩÔøΩ&7ÔøΩ!ÔøΩ’ö^\ÔøΩO…áÔøΩB7ÔøΩ,ÔøΩsÔøΩ:ÔøΩmUZÔøΩ%ÔøΩD6ÔøΩÔøΩÔøΩ8ÔøΩmÔøΩ<ÔøΩtÔøΩkÔøΩ?rÔøΩÔøΩÔøΩ; (eÔøΩÔøΩÔøΩQÔøΩÔøΩÔøΩS4ÔøΩ7ÔøΩBP=ÔøΩÔøΩÔøΩÔøΩi“≠ÔøΩCÔøΩ.{%wGÔøΩ0ÔøΩÔøΩÔøΩÔøΩCÔøΩKÔøΩÔøΩÔøΩ4ÔøΩÔøΩwÔøΩgÔøΩSÔøΩ8ÔøΩÔøΩ{i;ÔøΩÔøΩ=CÔøΩÔøΩ ÔøΩÔøΩzÔøΩÔøΩkÔøΩHSÔøΩÊ¢ï ÔøΩÔøΩUÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩG+3—ÆÔøΩÔøΩÔøΩÔøΩÔøΩ9uFXX""ÔøΩ	(ÔøΩÔøΩ@b+ÔøΩTÔøΩÔøΩn_i^pxYÔøΩCKÔøΩ0ÔøΩ]{ÔøΩÔøΩ|ÔøΩÔøΩÔøΩv'ÔøΩ%◊¨ÔøΩÔøΩ\ÔøΩ*ÔøΩÔøΩ)ÔøΩÔøΩ :]DÔøΩyMÔøΩÔøΩÔøΩÔøΩf)ÔøΩÔøΩT0ÔøΩÔøΩQeÔøΩs0ÔøΩVÔøΩZÔøΩ(-ÔøΩU~ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ2eUÔøΩÔøΩÔøΩ}AOÔøΩcÔøΩiÔøΩ;ÔøΩÔøΩÔøΩ›úÔøΩFÔøΩ""ÔøΩÔøΩ8uÔøΩÔøΩ–´ÔøΩIYÔøΩ/tÔøΩÔøΩÔøΩÔøΩsÔøΩÔøΩÔøΩNÔøΩuÔøΩEÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩCg*TN3 ÔøΩÔøΩ7)ÔøΩ\ÔøΩÔøΩ@ÔøΩ8jÔøΩÔøΩÔøΩ ({ÔøΩÔøΩÔøΩdEÔøΩÔøΩ:lÔøΩÔøΩÔøΩÔøΩ<ÔøΩÔøΩcÔøΩÔøΩxwÔøΩ<ÔøΩJ:ÔøΩÔøΩy.Õ¥mÔøΩÔøΩÔøΩ{ÔøΩÔøΩDcÔøΩHHÔøΩÔøΩÔøΩ|ÔøΩ\ÔøΩÔøΩ RÔøΩÔøΩDÔøΩ=GÔøΩ'ÔøΩÔøΩ ÔøΩÔøΩ UoÔøΩe5ÔøΩÔøΩ6%ÔøΩÔøΩwGÔøΩVÔøΩ ôÔøΩÔøΩPÔøΩb| SÔøΩÔøΩÔøΩ7ÔøΩ2ÔøΩÔøΩ$^ZÔøΩK6{ÔøΩÔøΩÔøΩ3≈úÔøΩÔøΩ?ÔøΩÔøΩ;;XD/l+xGÔøΩ(x-ÔøΩ_B ÔøΩ‹öÔøΩÔøΩE{ÔøΩ~ÔøΩXDÔøΩÔøΩ–æ≈åÔøΩÔøΩqÔøΩAÔøΩ=ÔøΩÔøΩ`y2ÔøΩ ÔøΩl<ÔøΩ;ÔøΩsÔøΩPÔøΩ ÔøΩÔøΩUÔøΩÔøΩl{ÔøΩ9 ÔøΩn#ÔøΩÔøΩDnÔøΩÔøΩ~vÔøΩ5ÔøΩÔøΩW`]ÔøΩÔøΩÔøΩw3iv,ÿøÔøΩÔøΩÔøΩ\ÔøΩÔøΩÔøΩFUNÔøΩiÔøΩÔøΩÔøΩÔøΩOnÔøΩÔøΩÔøΩYÔøΩÔøΩÔøΩÔøΩ…úÔøΩei-BÔøΩÔøΩÔøΩ#TIF|ÔøΩÔøΩÔøΩ OQÔøΩiÔøΩEÔøΩÔøΩÔøΩ ÔøΩÔøΩeÔøΩœ≠ÔøΩAÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ_∆ù[ÔøΩÔøΩUÔøΩÔøΩ+ÔøΩÔøΩÔøΩÔøΩCÔøΩ~ÔøΩ…®ÔøΩ8ÔøΩFÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ+&nÔøΩ|ng&ÔøΩ*⁄èdÔøΩ1sÔøΩyXÔøΩcÔøΩÔøΩU'y2YfÔøΩÔøΩÔøΩÔøΩ1ÔøΩ5ÔøΩÔøΩÔøΩEÔøΩÔøΩÔøΩÔøΩÔøΩ?\%ÔøΩÔøΩ+ÔøΩ$LÔøΩ∆áÔøΩÔøΩÔøΩÔøΩÔøΩzDÔøΩÔøΩÈ∑ãÔøΩp4cÔøΩFÔøΩÔøΩ5+tÔøΩÔøΩÔøΩÔøΩ@ÔøΩdwdÔøΩ1‹¨ÔøΩÔøΩ>ÔøΩÔøΩÔøΩwÔøΩÔøΩÔøΩ'|y\+ÔøΩqÔøΩq]fÔøΩÔøΩhÔøΩPÔøΩÔøΩÔøΩcÔøΩÔøΩ-ÔøΩÔøΩZÔøΩ'2ÔøΩ⁄í!ÔøΩÔøΩﬁ≠@OZ;jÔøΩÔøΩ√™ÔøΩ ""ÔøΩ:)=OÔøΩÔøΩjÔøΩ”Ä~W$ÔøΩgnÔøΩuÔøΩ\ÔøΩÔøΩ4ÔøΩMÔøΩ[(œ¶k'ZSÔøΩIvÔøΩÔøΩÔøΩtwÔøΩ xÔøΩÔøΩiÔøΩÔøΩ!5ÔøΩ/E5ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩzÔøΩuÔøΩXTÔøΩuÔøΩUÔøΩÔøΩ◊åÔøΩeÔøΩÔøΩÔøΩÔøΩ,ÔøΩÔøΩÔøΩ$ *>ÔøΩÔøΩ&ÔøΩ&ÔøΩÔøΩi@ÔøΩÔøΩÔøΩmÔøΩÔøΩÔøΩ=ÔøΩ/ÔøΩÔøΩsÔøΩD`ÔøΩz46RÔøΩÔøΩIÔøΩÔøΩ2IrÔøΩÔøΩœêÔøΩAÔøΩMÔøΩÔøΩÔøΩÔøΩ”úLÔøΩDÔøΩU%3/1ÔøΩxÔøΩ’¨ÔøΩ~ÔøΩÔøΩgÔøΩl—ÄÔøΩ$ÔøΩÔøΩ	ÔøΩJ ÔøΩÔøΩÔøΩtivMÔøΩKÓπòÔøΩ/ÔøΩÔøΩÔøΩN= g~iÔøΩÔøΩ""ÔøΩÔøΩCÔøΩ…™ÔøΩGÔøΩÔøΩdcÔøΩ![ÔøΩ!)5ÔøΩÀ∂	ÔøΩ ÔøΩÔøΩOÔøΩ%ÔøΩÔøΩÔøΩÔøΩ%ÔøΩ|ÔøΩÔøΩ*ÔøΩ[ÔøΩXÔøΩKfÔøΩÔøΩÔøΩLÔøΩ$ yÔøΩÔøΩ_ÔøΩÔøΩF1Yz>@*?GX{ÔøΩHÔøΩÔøΩ:3<ÔøΩÔøΩpÔøΩ8ÔøΩ+""KÔøΩ+fÔøΩÔøΩ{‹πÔøΩ""<ÔøΩIÔøΩÔøΩÔøΩYÔøΩÔøΩÔøΩq_ÔøΩ+|ÔøΩ.ÔøΩÔøΩ[BDÔøΩ3W<ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ@ÔøΩ<ÔøΩÔøΩÔøΩo6ÔøΩÔøΩÔøΩW8ÔøΩgÔøΩ(ÔøΩdÔøΩÔøΩÔøΩ`ÔøΩÔøΩHgÔøΩHÔøΩÔøΩB&rÔøΩ»Æ	 ÔøΩJÔøΩÔøΩÔøΩXÔøΩÔøΩÔøΩEÔøΩd ÔøΩÔøΩ9ÔøΩq@ÔøΩÔøΩoÔøΩÔøΩvRC#ZB	ÔøΩÔøΩÔøΩÔøΩÔøΩ[ÔøΩ#)ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩmod7ÔøΩb:Œ¨ÔøΩ0oÔøΩ?qÔøΩÔøΩD^ÔøΩ^5ÔøΩÔøΩÔøΩÔøΩ‘µÔøΩXÔøΩf[ÔøΩÔøΩÔøΩ5ÔøΩÔøΩÔøΩuÔøΩÔøΩÔøΩÔøΩÔøΩ^3ÔøΩ8 .ÔøΩÔøΩqFGR#…õÔøΩ-fÔøΩ3&ÔøΩdÔøΩÔøΩÔøΩ>ÔøΩÔøΩoÔøΩ~~${.ÔøΩƒ¶IxÔøΩ,MÔøΩÔøΩ""ÔøΩÔøΩCÔøΩÔøΩÔøΩÔøΩÔøΩ|ÔøΩ{ÔøΩ[ÔøΩ◊äÔøΩ	ÔøΩÔøΩD6z\ÔøΩÔøΩÔøΩT oÔøΩÔøΩÔøΩ>UÔøΩYÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩMÔøΩÔøΩÔøΩJÔøΩ+ÔøΩi,>ÔøΩ ÔøΩjÔøΩ`ÔøΩÔøΩÔøΩQ9""(vÔøΩ8 9ÔøΩ{ÊÖæÔøΩÔøΩXÔøΩI"":ÔøΩGÔøΩ8œ†ÔøΩ/ÔøΩyÔøΩ~ÔøΩgÔøΩÔøΩ`DÔøΩGÔøΩ`ÔøΩÔøΩM9œµGÔøΩKÔøΩu5ÔøΩV.rpÔøΩ{$IÔøΩÔøΩÔøΩ’àÔøΩGd»±bÔøΩY8ÔøΩÔøΩSoÔøΩu""ÔøΩÔøΩ…±ÔøΩÔøΩÔøΩGMÔøΩMÔøΩÎ†ÆÔøΩÔøΩ~ÔøΩÔøΩ{ <ÔøΩÔøΩÔøΩÔøΩNÔøΩ;ÔøΩfÔøΩÔøΩÔøΩTÔøΩP#ÔøΩÔøΩÔøΩ$ÔøΩ`ÔøΩIÔøΩDÔøΩÔøΩrwÔøΩÔøΩXdBLBÔøΩJ2ÔøΩÔøΩÔøΩTÔøΩÔøΩÔøΩf) MÔøΩ≈çÔøΩ{OÔøΩ49ÔøΩÔøΩ.,ÔøΩÔøΩ""ÔøΩdJ;kF4zÔøΩ0ÔøΩÔøΩ|ÔøΩÔøΩ”ÑbbÔøΩxÔøΩOÔøΩt;ÔøΩ{ÔøΩlÔøΩ‚®π{ÔøΩ9ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩU&ÔøΩu^z\yÔøΩ3ÔøΩÔøΩÔøΩ\ÔøΩbÔøΩ 4ÔøΩ|ÔøΩÔøΩ;uÔøΩDƒù@ÔøΩ›ªznSÔøΩ÷äÔøΩuÔøΩ&ÔøΩ\ÔøΩ1]!fAÔøΩÔøΩÔøΩÔøΩÔøΩyÔøΩpÔøΩ""ÔøΩﬁíÔøΩÔøΩÔøΩÔøΩÔøΩlÔøΩJKIaÔøΩ]ÔøΩÔøΩÔøΩ)=OÔøΩÔøΩÔøΩ*ÔøΩÔøΩÔøΩ2fÔøΩÔøΩ ÔøΩÃõÔøΩÔøΩWnÔøΩÔøΩ<""ÔøΩÔøΩÔøΩ«ñÔøΩkÔøΩWÔøΩO8ÿ†ÔøΩÔøΩÔøΩBÔøΩÔøΩ*ÔøΩ]""T4ÔøΩ_PÔøΩ$ÔøΩFÔøΩ7DÔøΩs? ÔøΩÔøΩÔøΩ–•BjÔøΩÔøΩÔøΩÔøΩ8ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩœº-^*\ÔøΩ`ÿ£ÔøΩÔøΩ- ÔøΩJÔøΩ`ÔøΩÔøΩBNÔøΩÔøΩÔøΩRÔøΩDlCyIhkRoÔøΩJVÔøΩÔøΩoPÔøΩTC]ÔøΩÔøΩÔøΩ.^zÔøΩs%ÔøΩÔøΩÔøΩNb$ ÔøΩÔøΩPtÔøΩÔøΩ!ÔøΩtÔøΩÔøΩsÔøΩMry“πÔøΩvÔøΩÔøΩÔøΩ	ÔøΩÔøΩ.ÔøΩP${'c/ÔøΩÔøΩtÔøΩ.kÔøΩ6ÔøΩx2r6ÔøΩ ÔøΩ=ÔøΩÔøΩxÔøΩÔøΩÔøΩÔøΩg2|N/ÔøΩÔøΩ-ÔøΩ'k!l5hÔøΩÔøΩJÔøΩÔøΩ[ÔøΩ`ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ5 MÔøΩjÔøΩjÔøΩÔøΩ|qÔøΩÔøΩJÔøΩfÔøΩ=√¥ÔøΩÔøΩ]ÔøΩÔøΩÔøΩXUÔøΩÔøΩÔøΩÔøΩPQ1h ÔøΩÔøΩÔøΩ 3ÔøΩÔøΩMcWÔøΩIlcÔøΩÔøΩÔøΩ<ÔøΩÔøΩÔøΩ$ÔøΩÔøΩ+D“¢|ÔøΩÔøΩÔøΩwÔøΩÔøΩÔøΩVÔøΩ=ÔøΩ}ÔøΩÔøΩ8ÔøΩTÔøΩJÔøΩmPÔøΩﬂÖrÔøΩ¬∫ÔøΩB;VÔøΩÔøΩ=ÔøΩÔøΩmÔøΩÔøΩ$kÔøΩAÔøΩF›∫c""m«©nÔøΩÔøΩÔøΩbÔøΩÔøΩÔøΩÔøΩO'ÔøΩÔøΩÔøΩ(R-L)ÔøΩ1ÔøΩÔøΩÔøΩ.OWÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ.)2ÔøΩV#ÔøΩÔøΩGAZ’ΩÔøΩÔøΩ:ÔøΩÔøΩcÔøΩÔøΩÔøΩ>ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩhLÔøΩ/ÔøΩ 0ÔøΩÔøΩ6!ÔøΩÔøΩ/:OsiÔøΩ|ZLfÔøΩÔøΩ|;ÔøΩ^‰éÆB{ÔøΩÔøΩ:ÔøΩÔøΩ;ÔøΩÔøΩ&ÔøΩÔøΩ+ÔøΩBÔøΩÔøΩÔøΩDÔøΩÔøΩJ""ÔøΩÔøΩÔøΩ>oÔøΩ#RÔøΩÔøΩGÔøΩÔøΩÔøΩ 4ÔøΩÔøΩÔøΩÔøΩ]YÔøΩtÔøΩÔøΩ|ÔøΩB'ÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩNReÔøΩ[%!ÔøΩWXÔøΩÔøΩ7BÔøΩÔøΩÔøΩ#ÔøΩÔøΩMOÔøΩhÔøΩÔøΩ#ÔøΩfÔøΩ8:WÔøΩÔøΩgÔøΩÔøΩ:ÔøΩ_!ZÔøΩÔøΩÔøΩ7%ÔøΩqH’£ÔøΩÔøΩÔøΩ|ÔøΩÔøΩa?ÔøΩ]ÔøΩ5ÔøΩ:ÔøΩÔøΩÔøΩÔøΩÔøΩ[ÔøΩj:ÔøΩ*1IL oÔøΩ,rÔøΩÔøΩOÔøΩ=L$Qÿ∫iIÔøΩÔøΩ*|ÔøΩÔøΩ?ÔøΩÔøΩMKI<q#!lÔøΩ'|YOÔøΩ+ZÔøΩr#ÔøΩj+ÔøΩWBÔøΩlÔøΩÔøΩÔøΩa*ÔøΩÔøΩÔøΩMÔøΩgÔøΩÔøΩ(ÔøΩÔøΩÔøΩNÔøΩŸêHS/lÔøΩÔøΩÔøΩQ6BgÔøΩÔøΩÔøΩÔøΩskÔøΩYÔøΩÔøΩÔøΩOÔøΩÔøΩÔøΩÔøΩ35ÔøΩÔøΩv ÔøΩiÔøΩÔøΩÔøΩ4""ÔøΩÔøΩ45QÔøΩcÔøΩxÔøΩÔøΩ,ÔøΩÔøΩPÔøΩÔøΩqÔøΩÔøΩÔøΩ7OÔøΩÃúÔøΩwÿ•)≈öVÔøΩ(FÔøΩ4ÔøΩÔøΩChÔøΩÔøΩÔøΩÔøΩj ÔøΩHÔøΩÔøΩWÔøΩesÔøΩÔøΩÔøΩÔøΩDÔøΩ&ÔøΩ:6ÔøΩ/TÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ4k8}ÔøΩÔøΩÔøΩVHyÔøΩÔøΩ6ÔøΩVÔøΩÔøΩÔøΩ9ÔøΩ?={ÔøΩÔøΩÔøΩÔøΩBNEtÔøΩÔøΩVÔøΩÔøΩÔøΩÔøΩÔøΩ¬∂0 :mQÔøΩÔøΩÔøΩ4ÔøΩuÔøΩHÔøΩ ÔøΩY=llOj pÔøΩaÔøΩÔøΩDUDÔøΩÔøΩgÔøΩ-ÔøΩÔøΩ ãÔøΩ(ÔøΩÔøΩ	ÔøΩ`ÔøΩt	ÔøΩa OÔøΩÔøΩ ÔøΩÔøΩ*ÔøΩÔøΩÔøΩÔøΩ $IÔøΩ@.ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩŸÖQHÔøΩXrPÔøΩÌãΩÔøΩﬂÆ}ÔøΩÔøΩÔøΩq»ñÔøΩhÔøΩuÔøΩÔøΩÔøΩBDÔøΩgUh(ÔøΩÔøΩBE1ÔøΩÔøΩW!ÔøΩKÔøΩp19NCÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ]ÔøΩFÔøΩÔøΩÔøΩ3ÔøΩmÔøΩ]ÔøΩÔøΩÔøΩÔøΩ8€ΩYÔøΩÔøΩrÔøΩÔøΩlPÔøΩÔøΩK#ÔøΩÔøΩ08ÔøΩÔøΩÔøΩÔøΩ-ÔøΩÔøΩÔøΩ>ÔøΩp""ÔøΩt4a[ÔøΩE:ÔøΩÔøΩÔøΩÔøΩÔøΩ	ÔøΩÔøΩ¬ßÔøΩÔøΩoÔøΩÔøΩtUÔøΩÔøΩ5ÔøΩÔøΩÔøΩÔøΩ?vRÔøΩÔøΩU\9]kÔøΩÔøΩxÔøΩB'ÔøΩ√îvÔøΩW'ÔøΩ~ÔøΩÔøΩ< ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ8ÔøΩÔøΩi	QÔøΩÔøΩÔøΩÔøΩÔøΩCXÔøΩÔøΩÔøΩtÔøΩÔøΩmÔøΩÔøΩ…ßV-,ÔøΩÔøΩÔøΩMÔøΩÔøΩ{ÔøΩÔøΩOÔøΩ>ÔøΩ$^5ÔøΩ	ÔøΩNFYÔøΩÔøΩ%SÔøΩ(ÔøΩÔøΩomJB\j|ÔøΩÔøΩ~ÔøΩÔøΩ`√î,ÔøΩ_ ÔøΩÔøΩ<ÔøΩ'ÔøΩÔøΩÔøΩÔøΩﬁâÔøΩÔøΩ1ÔøΩÔøΩÔøΩÔøΩVEOÔøΩ~vÔøΩ ÔøΩ%ÔøΩÔøΩÔøΩÔøΩ{ÔøΩ àÔøΩÔøΩÔøΩÔøΩ	ÔøΩÔøΩ«®ÔøΩÔøΩKfÔøΩÔøΩ+ÔøΩ#ÔøΩÔøΩÔøΩ ÔøΩIﬂíÔøΩhÔøΩÔøΩ/ÔøΩ'ÔøΩZ=IÔøΩÔøΩAÔøΩL&ÔøΩÔøΩﬁã	ÔøΩÔøΩxÔøΩÔøΩÔøΩGÔøΩLV|1ÔøΩ	ÔøΩxÔøΩÔøΩCÔøΩzÔøΩ:ÔøΩÔøΩÔøΩrj&ÔøΩÔøΩ1]9~/ÔøΩÔøΩiÔøΩX|ÔøΩÔøΩ|DÔøΩ4xgÔøΩg»¥ÔøΩÔøΩ.rﬁ≠ÔøΩ!~ccÔøΩ;…ë/ÔøΩÔøΩ4ÔøΩÔøΩÔøΩÔøΩÔøΩdÔøΩÔøΩ~ ÔøΩÔøΩÔøΩÔøΩÔøΩh◊ßLÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ#9ÔøΩgGqÔøΩSÔøΩÔøΩÔøΩÔøΩM$ÔøΩÔøΩ=RuÔøΩÔøΩÔøΩŒÇÔøΩÔøΩ<ÔøΩÔøΩÀôÔøΩÔøΩ0ÔøΩyPÔøΩcwJ4ÔøΩÔøΩ/ÔøΩ”µÔøΩÔøΩ$ÔøΩÔøΩÔøΩ>ÔøΩ ÔøΩnÔøΩ4ÔøΩ+}7ÔøΩ2ÔøΩÔøΩD/%ÔøΩÃ±3N√æÔøΩtÔøΩBcÔøΩÔøΩÔøΩÔøΩÔøΩ-ÔøΩÔøΩjGÔøΩÔøΩ:[@ ’åÔøΩÔøΩÔøΩÔøΩY`ÔøΩÔøΩÔøΩbÔøΩÔøΩÔøΩ{_ÔøΩÔøΩÔøΩ$ÔøΩÔøΩqaÔøΩ=>2„¥≥ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ$!JÔøΩ#ÔøΩÔøΩvSÔøΩÔøΩÔøΩ»åÔøΩHÔøΩ$ÔøΩi56ÔøΩA—õ]ÔøΩvwkÔøΩÔøΩ-uN_ÔøΩMÔøΩÔøΩÔøΩbH&6ÔøΩÔøΩÔøΩw(ÔøΩ }ÔøΩÔøΩBÔøΩ67ÔøΩk/oÔøΩaÔøΩÔøΩq%ÔøΩÔøΩÔøΩ3ÔøΩszÔøΩ…òÔøΩ3z	DÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩœ¥cÔøΩ-ÔøΩ*ÔøΩÔøΩ bÔøΩ1ÔøΩÔøΩ÷©ÔøΩnÔøΩQSÔøΩ!∆ûÔøΩÔøΩÔøΩ&ÔøΩÔøΩPÔøΩ2.eKÔøΩÔøΩÔøΩTen ∑ÔøΩÔøΩ^	ÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩ	:ÔøΩÔøΩ""\ÔøΩÔøΩ ÔøΩÕ≥ÔøΩ7ÔøΩÔøΩÔøΩÔøΩcÔøΩÔøΩ5aÔøΩcÔøΩÔøΩ«âa hWÔøΩ»π<ÔøΩÔøΩÔøΩÔøΩ;5ÔøΩÔøΩÔøΩ/ÔøΩ:ÔøΩÔøΩ|ÔøΩkÔøΩfÔøΩÔøΩÔøΩpÔøΩeÔøΩ!'PbxÔøΩÔøΩÔøΩZj>uÔøΩ√∑ÔøΩÔøΩ~ÔøΩÔøΩfÔøΩbÔøΩÔøΩÔøΩSu<DqÔøΩÔøΩAÔøΩÔøΩbadÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩY#p9#ÔøΩZÔøΩÔøΩÔøΩc%ÔøΩeÔøΩ.ÔøΩÔøΩ{ÔøΩb,ÔøΩBÔøΩÔøΩ*8—ÇÔøΩFQÔøΩ0Qn0V+ÔøΩÔøΩÔøΩl[ÔøΩÔøΩÔøΩvG=*ÔøΩc(yÔøΩX6Tv""%SÔøΩc#ÔøΩ›ãÔøΩSÔøΩÔøΩ#ÔøΩÔøΩR.(2ÔøΩrÔøΩÔøΩÔøΩ>ÔøΩÔøΩÔøΩÔøΩCLÔøΩÔøΩÕúÔøΩÔøΩÔøΩsÔøΩSÔøΩÔøΩÔøΩÔøΩ.*ÔøΩ]ÔøΩÔøΩÔøΩÔøΩL9ÔøΩ)ÔøΩ.ÔøΩÔøΩÔøΩÔøΩ∆∂ÔøΩÔøΩÔøΩÔøΩÔøΩ wÔøΩRÔøΩÔøΩk\ <ÔøΩcmÔøΩÔøΩvIÔøΩÔøΩ;o&-uÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩMfÔøΩÔøΩÔøΩ\{DYÔøΩÔøΩÔøΩ≈ÅÔøΩ_ÔøΩÔøΩZÔøΩCÔøΩSÔøΩÔøΩÕøÔøΩÔøΩSLÔøΩ(qoÔøΩŒ§ÔøΩÔøΩÔøΩ1ÔøΩ`S1ÔøΩ*uÔøΩÔøΩ+ÔøΩ”ÄÔøΩpÔøΩÔøΩpiW.ÔøΩÔøΩÔøΩXÔøΩÔøΩÔøΩÔøΩQ.ÔøΩY@bÔøΩÔøΩf\%ÊØù'ÔøΩÔøΩÔøΩÔøΩqA_.ÔøΩÔøΩOtqÔøΩOÔøΩÔøΩÔøΩÔøΩiÔøΩÔøΩ5ÔøΩ=ÔøΩÔøΩÔøΩ›Üo+&Y&ÔøΩ@5ÔøΩ3ÔøΩÔøΩÔøΩÔøΩ#ÔøΩGpDT	◊°ÔøΩwtÔøΩ ÔøΩÔøΩÔøΩÔøΩEŸªÔøΩÔøΩ^ZZmÔøΩÔøΩÔøΩNÔøΩÔøΩEÔøΩÔøΩÔøΩL(ÔøΩSÔøΩ}ÔøΩ€êÔøΩÔøΩ”ãoﬂ°ÔøΩÔøΩIDyXpÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩHÔøΩÔøΩÔøΩ'%ÔøΩÔøΩ(ÔøΩÔøΩTÔøΩÔøΩvJÔøΩÔøΩ""7}a]›±ÔøΩÔøΩj2ÔøΩ}ÔøΩ!ÔøΩhÔøΩÔøΩiÔøΩgVuÔøΩŸág]∆ÄÔøΩÔøΩÔøΩK)ÔøΩÔøΩxÔøΩÔøΩÔøΩjDÍù∞wÔøΩGÔøΩIv{>ÔøΩœµ9)\pY^ÔøΩYÔøΩÔøΩ)3ÔøΩÔøΩ÷çkÔøΩœ≥ÔøΩw^ÔøΩmÔøΩÔøΩ:dÔøΩ\ÔøΩYhÔøΩKÔøΩÔøΩÔøΩÔøΩ[ÔøΩÔøΩÔøΩÔøΩﬁ©ÔøΩÔøΩ +EÔøΩm◊ëPÔøΩ ÔøΩveÔøΩÔøΩÔøΩÔøΩ|ÔøΩÔøΩDÔøΩrDÔøΩÔøΩSeÔøΩÔøΩXYqHÔøΩCÔøΩÔøΩÔøΩsWÔøΩÔøΩÔøΩp""ÔøΩ9ÔøΩ:ÔøΩÔøΩÔøΩÔøΩOÔøΩLÔøΩ_zÔøΩ~—™ÔøΩF)ÔøΩ%ÔøΩÔøΩ÷™ÔøΩ ÔøΩﬂàÔøΩ""2ÔøΩÔøΩcÔøΩÔøΩÔøΩCÔøΩÔøΩxVÔøΩÔøΩNÃªXÔøΩuÔøΩÔøΩÔøΩ4""ÔøΩÔøΩÔøΩzÃíÔøΩÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩ≈∂ÔøΩ8eƒº)`ÔøΩ≈™ÔøΩRzÔøΩ6ÔøΩÔøΩY UjÔøΩp5#ÔøΩÔøΩÔøΩ(ÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩMÔøΩ7DÔøΩÔøΩÔøΩÔøΩSN':ÔøΩQMÔøΩÔøΩTE'jÔøΩÔøΩÔøΩvÔøΩPÔøΩmÔøΩjÔøΩÔøΩ@ÔøΩ3ÔøΩJÔøΩ.ÔøΩ÷∑RÔøΩ«§ÔøΩ:vÔøΩ<ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ|ÔøΩ?ÔøΩÔøΩFyÔøΩÔøΩÌÑÜ@ÔøΩÔøΩ(kÔøΩÔøΩÔøΩÔøΩPYUÔøΩÔøΩCAÔøΩÔøΩj2j+SÔøΩf;MVÔøΩÔøΩÔøΩSÔøΩk&ÔøΩpeÔøΩ ÔøΩtÔøΩÔøΩ“õÔøΩÔøΩhÔøΩÔøΩÔøΩÔøΩ.fÔøΩ5ÔøΩÔøΩÔøΩ õcQÔøΩeFÔøΩÔøΩÔøΩ$.0cÔøΩ1ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ""ÔøΩlÔøΩ]ÔøΩBÔøΩ3ÔøΩﬂânBQ0ÔøΩaÔøΩsÔøΩÔøΩDÔøΩGÔøΩÔøΩÔøΩ3ÔøΩ~ÔøΩÔøΩÔøΩÔøΩ=ÔøΩÔøΩ ÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ{ÔøΩP“°ÔøΩYB:3&ÔøΩÔøΩÔøΩyÔøΩVÔøΩÔøΩÔøΩhÔøΩÔøΩ;""ÔøΩlÔøΩ2r%y^ÔøΩÔøΩ@WÔøΩDÔøΩÔøΩÔøΩÔøΩd:ÔøΩÔøΩAÔøΩÔøΩ~ÔøΩrDÔøΩtÔøΩ9ÔøΩ""ÔøΩztÔøΩÔøΩÔøΩÔøΩ0ÔøΩ]ÔøΩÔøΩÔøΩÔøΩ*ÔøΩ;ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ4ÔøΩ5d{eÔøΩYi}&);ÔøΩ2,ÔøΩ.ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ+ÔøΩ!^j3’ß;q◊õÔøΩrÔøΩÔøΩÔøΩB—™ÔøΩÔøΩÔøΩÔøΩ †ÔøΩWWx2ÔøΩÔøΩÔøΩÔøΩZpÔøΩ]3_QÔøΩÔøΩÔøΩU`ÔøΩL$ÔøΩSÔøΩuÔøΩ3IÔøΩ_ÔøΩÔøΩÔøΩKtÔøΩlA1@sÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩ)ÔøΩz)ÔøΩÔøΩÔøΩÔøΩÔøΩ)GÔøΩ“ìÔøΩ}ÔøΩÔøΩÔøΩ""ÔøΩc!;fÔøΩ~SÔøΩÔøΩqÔøΩ>&ÔøΩ4ÔøΩavÔøΩÔøΩÔøΩ(ÔøΩÔøΩKegsÔøΩpÔøΩ:]  ÔøΩ ÔøΩÔøΩÔøΩ6ÔøΩÔøΩ?SÔøΩÔøΩÔøΩÔøΩ ,ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ◊πÔøΩOÔøΩnÔøΩ+di 	ÔøΩÔøΩÔøΩ/SHÔøΩÔøΩÔøΩÔøΩnÔøΩÔøΩÔøΩqSÔøΩf%ÔøΩÔøΩiÔøΩ@\iÔøΩ\ÔøΩ0ÔøΩ	ÔøΩÔøΩ]#ÔøΩÔøΩÔøΩÔøΩtÔøΩÔøΩ:ÔøΩÔøΩÔøΩfÔøΩ_KGR4ÔøΩC=ÔøΩuÔøΩ^fÔøΩÔøΩÔøΩÔøΩjÔøΩÔøΩÔøΩnMÔøΩ3ÔøΩÔøΩV[ÔøΩÔøΩQÔøΩÔøΩZÔøΩÔøΩ;xÔøΩÔøΩsÔøΩmÔøΩÔøΩÔøΩ*,$ÔøΩ[ÔøΩ€∞c""vÔøΩMÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩHÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩjSÔøΩÔøΩGBÔøΩ–∑ÔøΩIÔøΩ◊ØXÔøΩÔøΩ7ÔøΩÔøΩ4)ÔøΩ ÔøΩÔøΩÔøΩ4xÔøΩÔøΩ1	ÔøΩÔøΩ¬óÔøΩ1ÔøΩZJﬁï ∆µ6ÔøΩÔøΩÔøΩÔøΩ”ûÔøΩÔøΩ9=8ÔøΩÔøΩÔøΩ#ÔøΩB2ÔøΩÔøΩÔøΩL“¢ÔøΩÔøΩ(V ÔøΩÔøΩ~ÔøΩÔøΩÔøΩÔøΩ&ÔøΩ5FÔøΩÔøΩ?ÔøΩ4›øÔøΩ(8ÔøΩÔøΩ3NÔøΩ-ÔøΩp¬ú/b tÔøΩÔøΩÔøΩOÔøΩ}zÔøΩÔøΩÔøΩ€ñÔøΩ0]]ÔøΩ)ÔøΩÔøΩÔøΩÔøΩvÔøΩ	ÔøΩ{ÔøΩdÔøΩx+`ÔøΩ%ÔøΩÔøΩeV'NjmSÔøΩjÔøΩÔøΩJ/GÔøΩkÔøΩÔøΩqwZ9fbÔøΩtqÔøΩÔøΩAe)ÔøΩÔøΩÔøΩ6ÔøΩ/WMﬂ†ÔøΩ%,ÔøΩ$ÔøΩÔøΩ$BÔøΩ8MÔøΩ[ÔøΩ<ÔøΩÔøΩ<ÔøΩw|ÔøΩ∆ùÔøΩ+ÔøΩ^SÔøΩ sÔøΩ<ÔøΩÔøΩ$ÔøΩÔøΩEÔøΩÔøΩEÔøΩQHÔøΩÔøΩUthÔøΩÔøΩ6UÔøΩÔøΩg)ÔøΩÔøΩ›õP""ÔøΩ]ÔøΩÔøΩ~ÔøΩÔøΩzÔøΩ""ÔøΩyCÔøΩÔøΩÔøΩ9ÔøΩÔøΩBÔøΩiÔøΩ9ÔøΩÊ™≠ÔøΩÔøΩ…©eÔøΩH/ÔøΩTÔøΩWÔøΩœ¨ÔøΩ$ÔøΩQÔøΩÔøΩsGmÔøΩÔøΩJ0NÔøΩÔøΩfÔøΩÔøΩÔøΩÔøΩ%ÔøΩÔøΩ÷äT-ÔøΩÔøΩEÔøΩÔøΩ^ÔøΩÔøΩÔøΩkÔøΩ~tÔøΩÔøΩ[JK7FÔøΩVÔøΩqÔøΩÔøΩ_[ÔøΩAÔøΩÔøΩQÔøΩEﬂâG#H ÔøΩQÔøΩ+u[}zQÔøΩÔøΩÔøΩÔøΩtEÔøΩÔøΩ+ÔøΩ>ÔøΩrtÔøΩPÔøΩÔøΩÔøΩÀ±ÔøΩ('ÔøΩÔøΩÔøΩ∆≠ ÔøΩÔøΩÔøΩ-3ÔøΩu$a5bÔøΩÔøΩ""ÔøΩÔøΩ!ÔøΩFÔøΩCÔøΩ:ÔøΩÔøΩÔøΩ0√©ÔøΩtÔøΩ~ÔøΩÔøΩxÔøΩÔøΩ}ÔøΩÔøΩÔøΩoÔøΩpÔøΩÔøΩÔøΩ@ÔøΩxÔøΩÔøΩa$ÔøΩ⁄±ÔøΩÔøΩÔøΩIÔøΩlRÔøΩÔøΩÔøΩuBÔøΩ ÔøΩ{√ÜÔøΩÔøΩÔøΩOÔøΩÔøΩFOÔøΩsi8#A◊´4>ÔøΩÔøΩÔøΩLÔøΩÔøΩd9dÔøΩSÔøΩ]ÔøΩdj9—ö1DƒπÔøΩXÔøΩÔøΩÔøΩÔøΩÕá$ÔøΩÔøΩ`ÔøΩÔøΩÔøΩÔøΩÔøΩhÔøΩÔøΩÔøΩÔøΩiH_sÔøΩÔøΩ<ÔøΩ3€±ÔøΩÔøΩ!`$◊®ÔøΩÔøΩ·°ø!ÔøΩ3ÔøΩÔøΩÔøΩRÔøΩ2 ÔøΩ%V~!ÔøΩÔøΩ:5#DÔøΩs»ì ÔøΩz|ÔøΩÔøΩÔøΩ5«ÉÔøΩÔøΩGÔøΩÔøΩÔøΩPÔøΩDÔøΩ—πzÔøΩÔøΩqÔøΩÔøΩ6  ÔøΩIÔøΩ}B:ÔøΩMFÔøΩiÔøΩ“å9ÔøΩÔøΩkÔøΩAÔøΩÔøΩÔøΩƒ™M~j@ÔøΩ}–†ÔøΩÔøΩ8ZÔøΩD-ÔøΩÔøΩÔøΩÔøΩC>*ÔøΩÔøΩÔøΩ’é+kÔøΩÔøΩ=ÔøΩ»≥SÔøΩBÔøΩÔøΩ.ÔøΩ8ÔøΩCW2ÔøΩÔøΩÔøΩ$rUÔøΩ1ÔøΩ*ÔøΩeIQ«ÉÔøΩ;ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩnÔøΩzÔøΩÔøΩGÔøΩÔøΩkVÔøΩÔøΩÔøΩÔøΩ$iHÔøΩÔøΩ'7ÔøΩ0ÔøΩÔøΩ?ÀéÔøΩÔøΩÔøΩ>ÔøΩÔøΩÔøΩÔøΩÔøΩ–ÜÔøΩÔøΩÔøΩ.2VS%<c–ÄBÔøΩDÔøΩÔøΩ>ÔøΩÔøΩÔøΩÔøΩ_ÔøΩEÔøΩ;+ÔøΩÔøΩ—•ÔøΩÔøΩÔøΩÔøΩÔøΩ“±hÔøΩ }ÔøΩz»üÔøΩÔøΩyÔøΩpÔøΩ√±ÔøΩ2)PÔøΩÔøΩ(ÔøΩÔøΩ@ÔøΩÔøΩlÔøΩÔøΩ¬âÔøΩEÔøΩÔøΩ(ÔøΩÔøΩÔøΩÔøΩQÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩi’îfÔøΩ WÓ•è'BdÔøΩÔøΩÔøΩ WYÔøΩÔøΩ+uÔøΩÔøΩ∆•ÔøΩÔøΩÔøΩÔøΩJÔøΩÔøΩÔøΩÔøΩSiÔøΩE\uÔøΩÔøΩJÔøΩÔøΩs1]ÔøΩ[rÕôÔøΩÔøΩ^UÔøΩÔøΩÔøΩÔøΩ’ÄwY!ÔøΩÔøΩÔøΩz/ÔøΩr|XÔøΩ0ÔøΩÔøΩÔøΩÔøΩkÔøΩ ÔøΩÔøΩÔøΩgÔøΩÔøΩÔøΩDÔøΩÔøΩÔøΩÔøΩÔøΩDÔøΩN:ÔøΩ_}*}ÔøΩÔøΩy|ÔøΩÔøΩÔøΩ.dÔøΩÔøΩKÔøΩÔøΩÔøΩÔøΩÔøΩcﬁèÔøΩÔøΩ^}ÔøΩÔøΩ ÔøΩÔøΩ""ÔøΩ~ÔøΩL`h-4j∆≤ÔøΩ[ÔøΩ/ÔøΩÔøΩ’õÔøΩÔøΩ`-ÔøΩP>/4ÔøΩXÔøΩ”ºÔøΩ	ÔøΩq#√∫√∫F~ÔøΩ‘ÆÔøΩ[ÔøΩwÔøΩNlÔøΩÔøΩÔøΩÔøΩÔøΩr[ÔøΩdÔøΩhtÔøΩwÔøΩNÔøΩÔøΩ A\ÔøΩÔøΩB=ÔøΩAÔøΩŒªÔøΩ‘ôÔøΩÔøΩV>ÔøΩÔøΩ?G√üwÔøΩÔøΩNWÔøΩÔøΩZj8Õ∂tÔøΩÔøΩÔøΩÔøΩÔøΩuÔøΩuÔøΩÔøΩG[ÔøΩÔøΩ&Y0ÔøΩÔøΩÔøΩ;ÔøΩk ÔøΩÔøΩSdx5<PRÔøΩÔøΩÔøΩÔøΩKÔøΩÔøΩÔøΩÔøΩluÔøΩKÔøΩn2ÔøΩÔøΩ&7ÔøΩ=ÔøΩw-ÔøΩfMÔøΩ'ÔøΩ'ÔøΩÔøΩÔøΩÔøΩÔøΩAÔøΩÔøΩbÔøΩrTÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩCÔøΩÔøΩ	‘ßÔøΩL__OB; Qj(ÔøΩÔøΩÔøΩÔøΩÔøΩS?zDÔøΩoÔøΩÔøΩÔøΩV{1z!^F%ÔøΩ0ÔøΩm#ÔøΩÔøΩÔøΩÔøΩO2yÔøΩNÔøΩsyÔøΩ.(OÔøΩ+%ÔøΩÔøΩ;e6eIÔøΩÔøΩy7ÔøΩÔøΩ'ÔøΩ~ÔøΩ †ÔøΩ~2ÔøΩÔøΩ(SÔøΩÔøΩ &ÔøΩÔøΩÔøΩÔøΩ3=rÔøΩÔøΩnÔøΩÔøΩÔøΩÀµÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ;;>ÔøΩÔøΩ(ÔøΩÔøΩp}#@ÔøΩÔøΩ>ÔøΩ*bÔøΩTÔøΩÔøΩ_ÔøΩd1≈çÔøΩÔøΩ ÔøΩvÔøΩÔøΩW>+U/{'ÔøΩ/IÔøΩ6e ÔøΩÔøΩ4ÔøΩfÔøΩq>ÔøΩ)dÔøΩo`9ÔøΩÔñæÔøΩÔøΩHÔøΩ-ÔøΩ_ÔøΩÔøΩÔøΩÕÆvÔøΩÔøΩÔøΩzÔøΩÔøΩ_mng›≤ÔøΩ#fÔøΩ!ÔøΩ]w◊†	ÔøΩ{ÔøΩ8¬éÔøΩ^=ÔøΩÔøΩÔøΩ%ÔøΩNÔøΩv;ÔøΩÔøΩÔøΩ|]sÔøΩÔøΩÔøΩZÔøΩÔøΩ`qÔøΩ'2	¬∑ÔøΩÔøΩzÔøΩG=÷£ÔøΩX|wSÔøΩ HÔøΩÔøΩIbÔøΩQ}%(ÔøΩ_ÔøΩr[ÔøΩfÔøΩ?ÔøΩÔøΩÔøΩ4ÔøΩvÔøΩÔøΩÔøΩIxK+.ÔøΩBÔøΩWlxÔøΩÔøΩÔøΩÔøΩU#MZÔøΩÔøΩÔøΩbPÔøΩuNPÔøΩÔøΩ“öÔøΩn#ÔøΩfÔøΩ[pÔøΩÔøΩU-ÔøΩRÔøΩifcÔøΩ&ÔøΩÔøΩw&ÔøΩÔøΩQVÔøΩÔøΩ!8zÔøΩ$ÔøΩÔøΩ<f7E/ÔøΩgÀª–≠=ÔøΩÔøΩÔøΩKÔøΩzÔøΩtÔøΩÔøΩÔøΩQ""""œÉrÔøΩÔøΩ-XÔøΩCÔøΩbÔøΩMÔøΩÔøΩ(ÔøΩÔøΩÔøΩo~sÔøΩÔøΩDSÔøΩÔøΩ,q:9=KÔøΩÔøΩ{ÔøΩÔøΩ’∫ÔøΩÔøΩEhÔøΩ&ÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩtÔøΩNÔøΩÔøΩÔøΩq ÔøΩÔøΩÔøΩÔøΩÔøΩy<ÔøΩÔøΩ	kÔøΩi2ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ (:=T›¢ÔøΩFK4l⁄•ÔøΩÔøΩUÔøΩ¬πÔøΩFhwÔøΩ-&ÔøΩrÔøΩÔøΩru	1ÔøΩ÷à?/EÔøΩLÔøΩtGhÔøΩ}Q~:ÔøΩk…ºÔøΩÔøΩUtÔøΩÔøΩÔøΩvÔøΩÔøΩo>ÔøΩÔøΩ*ÔøΩÔøΩyÔøΩdIÔøΩ|ÔøΩÔøΩÔøΩÔøΩ/ÔøΩ&ÔøΩ|J0&ÔøΩÔøΩb ¢DÔøΩ9ÔøΩÔøΩUÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ+-ÔøΩÔøΩÔøΩÔøΩÔøΩ&ÔøΩ%≈ÆuÔøΩmt2ÔøΩÔøΩÔøΩ)BrÔøΩ|2ÔøΩ9ÔøΩw?ÔøΩ1r;ÔøΩÔøΩÔøΩQÔøΩÕùÔøΩ	^)\?XDÔøΩÔøΩ;ÔøΩÔøΩDÔøΩÔøΩÔøΩvV_vÔøΩ‘ôiÔøΩ◊´ÔøΩ_ÿ∏ÔøΩk?G$8ÔøΩsÔøΩKÔøΩÔøΩd\ÔøΩAm-ÔøΩÔøΩÔøΩp3ÔøΩÔøΩÔøΩMFJnÔøΩjÔøΩZWÔøΩÔøΩ ÔøΩwPwLJÔøΩÔøΩ:nÔøΩÔøΩÔøΩÔøΩZaÔøΩÔøΩÔøΩÔøΩujÔøΩdÔøΩÔøΩÔøΩp+ÔøΩ q""ÔøΩpiÔøΩ◊∫ÔøΩÔøΩÍáüÔøΩ ÔøΩÔøΩ ÔøΩsÔøΩPÔøΩÔøΩ ÔøΩmÔøΩÔøΩÔøΩ=/cÔøΩ9ÔøΩnÔøΩÔøΩÔøΩ@3zÔøΩÔøΩ ªaÿûÔøΩ&ÔøΩ9ÔøΩÔøΩÔøΩFÔøΩ""ÔøΩÔøΩ?ÔøΩÔøΩ{ÔøΩ""ÕéVtU8ÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩ}ÔøΩÔøΩÔøΩpÔøΩ<ÔøΩŸú%}ÔøΩÔøΩÔøΩ A$\-ÔøΩ!ÔøΩ.ÔøΩÔøΩÔøΩÔøΩVÔøΩYÔøΩÔøΩÔøΩ>xÔøΩ""p mÔøΩ9EV‹î+ÔøΩÔøΩ>=“´3ÔøΩJUÔøΩ*ÔøΩ9}9<fÔøΩnÔøΩÔøΩÔøΩ;ÔøΩ æ)ÔøΩ6ÔøΩÔøΩqÔøΩÔøΩÔøΩ|ÔøΩÔøΩnÔøΩ3ÔøΩ$`ÔøΩ8ÔøΩÔøΩÔøΩ(D%‹†/ÔøΩÔøΩ_'+ÔøΩÀóÔøΩÔøΩaÔøΩp∆°ÔøΩ∆•ÔøΩÔøΩ~ÔøΩqOÔøΩÔøΩqÔøΩÔøΩÔøΩ’Ñ1mSÔøΩ1ÔøΩKÔøΩÔøΩÔøΩpQ4ÔøΩÔøΩMÔøΩ…åXÔøΩ,ÔøΩ0ÔøΩÔøΩ,lJÔøΩÔøΩÔøΩÔøΩN{ÔøΩ5ÔøΩS)VÔøΩd[ÔøΩÔøΩ.$ÔøΩjÔøΩQÔøΩ8ÔøΩÔøΩmÔøΩCÔøΩÔøΩI<_5\ÔøΩVÔøΩ9ÔøΩ»ÅÔøΩÔøΩkÔøΩÔøΩkPÔøΩÔøΩÔøΩj4rÔøΩFÔøΩÔøΩÔøΩg *ÔøΩÔøΩÔøΩMu6bs"".R>ÔøΩÔøΩÔøΩÔøΩÔøΩPÔøΩÔøΩMkl]ÔøΩÔøΩÔøΩrRÔøΩÔøΩY/)0FgÔøΩÔøΩXLÔøΩ/{ÔøΩ}ÔøΩÔøΩvÔøΩ$NÔøΩvDÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩeKÔøΩÔøΩG$4%3)P^ÔøΩ ~HJÔøΩÔøΩH(ÔøΩÔøΩ(YLc)`C oÔøΩÔøΩ ÔøΩwÔøΩ75÷ΩtÔøΩÔøΩÔøΩƒáÔøΩGÔøΩÔøΩnÔøΩÔøΩÔøΩ'ÔøΩ«òl.ÔøΩÔøΩÔøΩ_nÔøΩ!ÔøΩÔøΩÔøΩÔøΩ&SÔøΩwÔøΩÔøΩ<a*TÔøΩÔøΩÔøΩÔøΩsÔøΩ<‹Ø)ÔøΩfeÔøΩÔøΩh l0\ÔøΩ&ÔøΩgÔøΩÔøΩÔøΩÔøΩQÔøΩMGÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ,ÔøΩÔøΩÔøΩ∆µÔøΩG:ÔøΩZÔøΩ%0ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩyÔøΩ ÔøΩÔøΩs])ÔøΩ*ÔøΩvÔøΩ0gÔøΩ@’êÔøΩULÔøΩ;ÔøΩWÔøΩhDÔøΩgÔøΩÔøΩiOY*ÔøΩcÔøΩÔøΩÔøΩdÔøΩÔøΩÔøΩT~ÔøΩadÔøΩÔøΩÔøΩÔøΩ/ÔøΩzÔøΩ‚ùéfÔøΩ*ÔøΩ|ÔøΩ·ù¶5ÔøΩ∆ÄQÔøΩdÔøΩ^€ûÔøΩÔøΩÔøΩ jÔøΩÔøΩÔøΩKk<ÔøΩÔøΩO!ÔøΩyÔøΩÔøΩÔøΩVÔøΩÔøΩÔøΩ-ÔøΩ$^ÔøΩ]{4ÔøΩ[JÔøΩ9ÕãÔøΩJz?,ÔøΩKÔøΩf>ÔøΩqF:ÔøΩÔøΩÔøΩ]ÔøΩÔøΩ^ÔøΩYgÔøΩ6YgÔøΩPÔøΩÔøΩÔøΩ;MÔøΩvÔøΩ:ÔøΩÔøΩœÄ ÔøΩÔøΩÔøΩÔøΩÔøΩ@:@a '$IpuÔøΩ(ÔøΩÔøΩÔøΩ/H""ÔøΩ`kÔøΩP%ÔøΩlÔøΩZÔøΩÔøΩrÔøΩ<ÔøΩOÔøΩYÔøΩ7/, ûÔøΩÔøΩ“âJiÔøΩ CGÔøΩ f=ÔøΩAÔøΩÔøΩÔøΩ,`QÔøΩÔøΩÔøΩÔøΩ7ÔøΩdÔøΩ“ΩboÔøΩ#ÔøΩÔøΩÔøΩÔøΩÔøΩhÔøΩÔøΩz?jÔøΩÔøΩÔøΩÔøΩ>/ÔøΩÔøΩ|@ÔøΩ?ÔøΩÔøΩiM}OÔøΩÔøΩ{i’ÉÔøΩLÔøΩÔøΩÔøΩÔøΩÔøΩV&ÕíÔøΩV=ÔøΩ j~XÔøΩÔøΩ8`ÔøΩh[L%«º	OÔøΩÔøΩK/IÔøΩÔøΩ‹ö	F?!cÔøΩKÔøΩÔøΩÔøΩ""ÔøΩ^_ ok5Rﬁ∑ÔøΩÔøΩ	ÔøΩÔøΩÔøΩv ÔøΩÔøΩelaÔøΩ@1?ÔøΩ"";ÔøΩÔøΩMkÔøΩÔøΩRÔøΩÔøΩ8*3*ÔøΩ/⁄Ø+ÔøΩÔøΩÔøΩ'PÔøΩÔøΩ;kISÔøΩÔøΩQÔøΩ%ÔøΩÔøΩÔøΩhÔøΩ:÷ó^ÔøΩÔøΩÔøΩ|ÔøΩuÔøΩ~_ÔøΩ$ÔøΩ7U\ÔøΩ0ÔøΩ9—èÔøΩÔøΩ`ÔøΩÔøΩ/~ÔøΩÔøΩ ÔøΩ~ÔøΩYÔøΩh2ÔøΩ2SVÔøΩsÔøΩ$fbÔøΩÔøΩu$ÔøΩÔøΩUÔøΩ[&[ÔøΩRÔøΩ~5</ÔøΩ jÔøΩ√∞ÔøΩÔøΩÕ∞ÔøΩeÔøΩÔøΩmÔøΩÔøΩÔøΩÔøΩT9ÔøΩbÔøΩÔøΩ/n’∑}	ÔøΩq@ÔøΩxvÔøΩÔøΩ—®ÔøΩÔøΩÔøΩÔøΩV	ÔøΩu wÔøΩ-jÔøΩ>ÔøΩÔøΩÔøΩ QÔøΩh?ÔøΩ(ÔøΩpÔøΩÔøΩ<%ÔøΩM?qÔøΩ‹¨IÔøΩÔøΩÔøΩÔøΩÔøΩeÔøΩi^ÔøΩrPÔøΩÔøΩ`%OÔøΩÔøΩCÔøΩpÔøΩLlÔøΩ[`zQÔøΩÔøΩhÔøΩFƒñÔøΩÔøΩ wÔøΩ)ÔøΩ?ÔøΩB!ÔøΩ9ÔøΩ1ÔøΩÔøΩÔøΩÔøΩ!fÔøΩÔøΩÔøΩÔøΩY'ÔøΩÔøΩÔøΩiÔøΩp6;NyÔøΩ4ÔøΩvÔøΩÿîXeZW*ÔøΩ3g1ÔøΩ◊¢ÔøΩwÔøΩÔøΩ1)gBLKÔøΩÔøΩVÔøΩ;ƒ∞ÔøΩÔøΩÔøΩWNÔøΩ:ÔøΩ5ÔøΩVÔøΩ…Ñ*6$WÔøΩÔøΩ%ÔøΩ ÔøΩÔøΩ}ÔøΩÔøΩÔøΩÔøΩÔøΩEB_pÔøΩÔøΩqG JÔøΩÔøΩÔøΩQﬁö⁄∞ F{ÔøΩÔøΩSZÔøΩÔøΩÔøΩgPvÔøΩ:ÔøΩÔøΩ_ÔøΩÔøΩO?ÔøΩÔøΩÔøΩÔøΩI37O;ÔøΩÔøΩÔøΩ-Î≤πÔøΩGÔøΩÔøΩmÔøΩ!+ÔøΩ>ÔøΩOÔøΩÔøΩMÔøΩÔøΩ#nFiÔøΩC2CMÔøΩv;ÔøΩ«≤ÔøΩHÔøΩ€ÉGÔøΩ)z]ÔøΩÔøΩ€æÔøΩ|ÔøΩ:}ÔøΩ?ÔøΩ/ ÔøΩ<ÔøΩÔøΩÔøΩ ÔøΩ]0{ÔøΩ¬óÔøΩÔøΩÔøΩpÔøΩ_ÔøΩÔøΩÔøΩ‹≤EÔøΩ endstream endobj 35 0 obj << /Filter /FlateDecode /Length1 1547 /Length2 8445 /Length3 0 /Length 9471 >> stream xÔøΩÔøΩÔøΩTÔøΩÔøΩ6.! ÔøΩ5tHwKÔøΩÔøΩÔøΩ0ÔøΩ0ÔøΩ30ÔøΩ ÔøΩ!)]ÔøΩ!)ÔøΩ“ù""(""HwÔøΩÔøΩÔøΩ{ÔøΩ}ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ5kÔøΩÔøΩ<;ÔøΩÔøΩÔøΩ9ÔøΩ>LtZÔøΩÔøΩ26pkÔøΩ""ÔøΩÔøΩÔøΩÔøΩÔøΩ#ÔøΩSÔøΩÔøΩ xxÔøΩÔøΩxxÔøΩ0ÔøΩÔøΩÔøΩÔøΩÔøΩNÔøΩÔøΩÕòLÔøΩÔøΩGÔøΩbÔøΩÔøΩ`ÔøΩÔøΩrÔøΩSÔøΩÔøΩ *N ^~ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩGÔøΩ_ÔøΩpÔøΩ@ÔøΩÔøΩjPÔøΩÔøΩÔøΩa7L&9ÔøΩÔøΩ7jgÔøΩÔøΩÔøΩÕøÔøΩ V0ÔøΩWTTÔøΩÔøΩO:@ÔøΩÔøΩÔøΩÔøΩÔøΩ` u+w{ÔøΩÔøΩ√é`+'ÔøΩ.ÔøΩÔøΩ{ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ7ÔøΩÔøΩ/ÔøΩÔøΩÔøΩ›∏ÔøΩ;)6ÔøΩÔøΩÔøΩ=@ÔøΩAxBl ÔøΩhX9CÔøΩÔøΩÔøΩ	ÔøΩguÔøΩÀÆÔøΩuaÔøΩÔøΩ NP0ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ  ÔøΩtÔøΩj MÔøΩ`ÔøΩÔøΩ8 ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩtgÔøΩ&ÔøΩÔøΩÔøΩ$[ÔøΩÔøΩpg+ÔøΩ7fÔøΩÔøΩ:A ÔøΩÔøΩj\ÔøΩ^ÔøΩ +ÔøΩÔøΩÔøΩ@+'7ÔøΩCÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩOÔøΩV EmÔøΩÔøΩCÔøΩÔøΩÔøΩF@]ÔøΩ›∏‹†NÔøΩ[ÔøΩÔøΩMÔøΩpÔøΩ 09ÔøΩÔøΩ3ÔøΩÔøΩÔøΩÔøΩ>y(~8voÔøΩnÔøΩÔøΩÔøΩÔøΩBa6ÔøΩÔøΩÔøΩÔøΩÔøΩpÔøΩ÷áA]= @ÔøΩÔøΩCLÔøΩÔøΩÔøΩÔøΩAÔøΩÔøΩ<<<""|B ÔøΩ+ ÔøΩÔøΩÔøΩÔøΩMÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩm~ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ}hÔøΩÔøΩÔøΩ<ÔøΩaÔøΩÔøΩYyB ÔøΩÔøΩÔøΩÔøΩ?ÔøΩÔøΩ0yy6PÔøΩ;ÔøΩbÔøΩaÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ?\>ÔøΩ0ÔøΩyÔøΩ/ÔøΩÔøΩÔøΩÔøΩÔøΩ+ÔøΩyÔøΩÔøΩaNÔøΩÔøΩ	ÔøΩsÔøΩÔøΩFÔøΩ:FÔøΩÔøΩÔøΩÔøΩÔøΩ>YYÔøΩÔøΩÔøΩÔøΩ_ÔøΩÔøΩ'ÔøΩÔøΩÔøΩÔøΩ?,ÔøΩÔøΩÔøΩFÔøΩ ÔøΩw<ÔøΩÔøΩÔøΩlÔøΩ —øÔøΩ}8ÔøΩUÔøΩÔøΩÔøΩ XÔøΩ6ÔøΩsiÔøΩTÔøΩÔøΩGÔøΩf<ÔøΩ<ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ)ÔøΩ7ÔøΩÔøΩMÔøΩÔøΩ[ÔøΩÔøΩÔøΩÔøΩÔøΩ7ÔøΩÔøΩÔøΩÔøΩmÔøΩuÔøΩÔøΩ;ÔøΩAÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩBÔøΩZuÔøΩ ÔøΩÔøΩÔøΩÔøΩ@wÔøΩÔøΩAÔøΩÔøΩÔøΩ=ÔøΩÔøΩÔøΩWÔøΩÔøΩGÔøΩ/;ÔøΩMÔøΩÔøΩ—ÇÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ_vÔøΩﬂ£ÔøΩÔøΩAÔøΩÔøΩnÔøΩÔøΩoÔøΩCÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ~ÔøΩ=ÔøΩÔøΩÔøΩ0>ÔøΩÔøΩÔøΩÔøΩÔøΩ=g|ÔøΩB +ÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩa m ^ÔøΩÔøΩÔøΩÔøΩÔøΩR =ÔøΩlÔøΩÔøΩÔøΩÔøΩ**ÔøΩÔøΩmÔøΩÔøΩÔøΩÔøΩÔøΩFÔøΩÔøΩÔøΩÔøΩÔøΩpCÔøΩÔøΩÔøΩvÔøΩÔøΩ nÔøΩ@A 7ÔøΩÔøΩÔøΩÔøΩÔøΩ?ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ|ÔøΩBÔøΩ ÔøΩÔøΩÔøΩÔøΩ^ÔøΩÔøΩÔøΩu`ÔøΩÔøΩEÔøΩ#ÿácÔøΩÔøΩÔøΩÔøΩ@ ^0ÔøΩÔøΩG8X<‘°.ÔøΩÔøΩÔøΩFÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩiÔøΩ9ÔøΩÔøΩÔøΩÔøΩvÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩO2ÔøΩsÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩJÔøΩÔøΩHx-V|”£ÔøΩHÔøΩÔøΩZÔøΩÔøΩ""ÔøΩÔøΩÔøΩsSÔøΩÔøΩÔøΩTÔøΩÔøΩ2ÔøΩÔøΩÔøΩÿë5ÔøΩÔøΩ8ÔøΩÔøΩe#ÔøΩp=ŸòÔøΩÔøΩQÔøΩ`n~ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩqÔøΩy""6ÔøΩLDÔøΩ9ÔøΩC&ÔøΩÔøΩlÔøΩÔøΩÔøΩ\'ÔøΩÔøΩÔøΩTzÔøΩ ÔøΩZqÔøΩ:ÔøΩÔøΩOpm`ÔøΩÔøΩ	ÔøΩÔøΩNÔøΩÔøΩÔøΩÔøΩzÔøΩÔøΩ+ÔøΩÔøΩÔøΩ+DÔøΩj9ÔøΩeZÔøΩU ÔøΩÔøΩÔøΩ5ÔøΩÔøΩ=4ÔøΩÔøΩÔøΩmLWÔøΩYG'ÔøΩK-)ÔøΩÔøΩmÔøΩÔøΩÔøΩÔøΩÔøΩkÃûiupÔøΩ_JÔøΩN ÔøΩg) ÔøΩÔøΩ7}ÔøΩNdÔøΩ3ÔøΩO TÔøΩÔøΩZÔøΩÔøΩÔøΩ\dwdb–Ü≈π#ÔøΩVÔøΩÔøΩÔøΩmZÔøΩÔøΩƒ©1F%ÔøΩÔøΩ(ÔøΩÔøΩÌîóÔøΩÀÜÔøΩÔøΩXÔøΩÔøΩjT?r\ÔøΩ	ÔøΩÔøΩÔøΩOÔøΩJÔøΩÔøΩÔøΩlÔøΩ&ÔøΩÔøΩÔøΩ*ÔøΩ""»º”êÔøΩÔøΩÔøΩ‘øQÔøΩÔøΩÔøΩH9eÔøΩÔøΩ&SÔøΩtUÔøΩ“©+ÔøΩ2XH—ºÔøΩÔøΩRÔøΩvi<*>ÔøΩÔøΩYA6cÔøΩFÔøΩÔøΩiÔøΩkÔøΩ WÔøΩ|ÔøΩg4w2ÔøΩhÔøΩ—ëÔøΩ’®ÔøΩÔøΩ|FÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩfÔøΩ=ÔøΩ*HÔøΩÔøΩÔøΩ.FFÔøΩÔøΩÔøΩƒ™ÔøΩFtÔøΩOÔøΩÔøΩÎõ¶ÔøΩÔøΩ*ÔøΩÔøΩCoÔøΩÔøΩnÔøΩÀèÔøΩÔøΩ>ÔøΩÔøΩtÔøΩQÔøΩÔøΩÔøΩ\ÔøΩDÔøΩÔøΩÔøΩSNÔøΩœ¢ÔøΩÔøΩÔøΩ÷úÔøΩÔøΩÔøΩ~ÔøΩP]ÔøΩ~ÔøΩÔøΩ3HÔøΩ[ÔøΩÔøΩTÔøΩ…ëÔøΩtÔøΩ)ÔøΩ T1nÔøΩPÔøΩAÔøΩ(ÔøΩ9p/ÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩ–öÔøΩtÔøΩÔøΩvÔøΩiÔøΩ{ÔøΩÔøΩÔøΩlÿë(^uÔøΩyÔøΩÔøΩÔøΩÔøΩ3ÔøΩy;ÔøΩÔøΩx_ÔøΩœö!ÔøΩ,bÔøΩÔøΩDÔøΩdIm⁄íJ<ÔøΩfuÔøΩÔøΩÔøΩ+EÔøΩÔøΩeÔøΩÔøΩÔøΩÔøΩÔøΩKJÔøΩ'hÔøΩYÔøΩÔøΩÔøΩ,ÔøΩÔøΩÔøΩSÔøΩKWÔøΩÔøΩÔøΩÔøΩÔøΩIbdÔøΩLÔøΩÔøΩ«ÑAÔøΩÔøΩÔøΩÔøΩ…üuÔøΩ%jÔøΩÔøΩÔøΩÿôÔøΩBÔøΩ_*ÔøΩÔøΩ—¶mÔøΩ›É1ÔøΩ2ÔøΩÔøΩÔøΩ`ÔøΩBÔøΩÔøΩiÔøΩÔøΩnÔøΩ+ÔøΩ16ÔøΩq{ZÔøΩÔøΩds:SÔøΩ5	ÔøΩÔøΩÔøΩ^ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩﬁæÔøΩÔøΩaÔøΩ'SZ7ÔøΩAÔøΩÔøΩbÔøΩ@n5ÔøΩ>ÔøΩÔøΩfÔøΩXÔøΩkfÔøΩ6^ÔøΩÔøΩ""g{}ÔøΩS0ÔøΩdG*uﬂêRÔøΩÔøΩÔøΩÔøΩÔøΩ'?ÔøΩOÔøΩÔøΩ,ÔøΩÔøΩÔøΩ.ÔøΩKÔøΩÔøΩkÔøΩ""«éWf_ÔøΩq]J5ÔøΩÔøΩÔøΩE:0Âï†ÔøΩ+j|Em/ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩdÔøΩ-ÔøΩzXÔøΩ[ÔøΩÔøΩz<ÔøΩt(ÔøΩXnÔøΩ`ÂúÉ!ÔøΩÔøΩÔøΩ|ÔøΩÔøΩÔøΩ( QgÔøΩ@zÔøΩÔøΩFÔøΩÔøΩJÔøΩpÔøΩÔøΩÔøΩG/ÔøΩ?ÔøΩ~ÔøΩÔøΩÔøΩÔøΩ5FÔøΩ2)iÔøΩÔøΩ6M[lNÔøΩ,ÔøΩÔøΩj*ÔøΩ~ ÔøΩÔøΩTÔøΩ{ÔøΩQÔøΩW=ﬁ≥tÔøΩÔøΩÔøΩ""jvfs3ÔøΩÔøΩÔøΩÔøΩÔøΩQ>ÔøΩ;lÔøΩ<<ÔøΩÔøΩÔøΩÔøΩÔøΩ,ÔøΩÔøΩÔøΩÔøΩJÔøΩHÔøΩ:YÔøΩÔøΩO.?ÔøΩkÔøΩÔøΩÔøΩ«¥7uÔøΩ>ÔøΩÔøΩÔøΩCQxÔøΩÔøΩQ$wœñÔøΩNÔøΩkÔøΩV9JpAÔøΩÔøΩÔøΩ|!ÔøΩÔøΩÔøΩÔøΩÔøΩ:ÔøΩ@ÔøΩjÔøΩÔøΩrÔøΩÔøΩÔøΩÔøΩ^›ç$ÔøΩ1ÔøΩ[ÔøΩÔøΩÔøΩjÔøΩÃå`_ÔøΩÔøΩEÔøΩÔøΩ}x%.ÔøΩ ÔøΩÔøΩEÔøΩÔøΩ1SÔøΩ ÔøΩÔøΩ&ÔøΩ+ÔøΩÔøΩ ÔøΩÔøΩÔøΩ¬¥_9ÔøΩÔøΩyÔøΩÔøΩxÔøΩ.VÔøΩÔøΩÔøΩOkÔøΩÔøΩV}sÔøΩÔøΩw>ÔøΩoZÔøΩÔøΩDÔøΩÔøΩÔøΩ\?>ÔøΩ&iÔøΩ~&VyÔøΩÔøΩÔøΩ2/ÔøΩÔøΩÔøΩAÔøΩTGÔøΩÔøΩÔøΩsy‘ô[vÔøΩÔøΩÔøΩZ2ÔøΩs‹óÔøΩÔøΩÔøΩoÔøΩrMÔøΩÔøΩcÔøΩPÔøΩD1CyÔøΩÔøΩyÔøΩ3∆õmÔøΩ ÔøΩ|+ÔøΩ,MÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ5&9ÔøΩ:j]NÔøΩÔøΩVÔøΩy3÷ëK~Y~WÔøΩJUÔøΩÔøΩÔøΩ#À∫QQRrÔøΩ*^ÔøΩÔøΩ ÔøΩÔøΩ9`ÔøΩ  ]ÔøΩÔøΩ¬±ÔøΩÔøΩ+ÔøΩvÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9ÔøΩ{dÔøΩJÔøΩSSÔøΩÔøΩMS9ÃÆÔøΩkÔøΩÔøΩÔøΩÔøΩ/ÔøΩ ÔøΩ!ÔøΩÔøΩÔøΩÔøΩÿçsÔøΩ|%>|ÔøΩÔøΩÔøΩÔøΩTyÔøΩ[<ÔøΩxF√≤ÔøΩÔøΩÔøΩcLMÔøΩ}-ÔøΩuÔøΩÔøΩOP ¥ÔøΩJÔøΩÔøΩIIVyÔøΩa>ÔøΩ*ÔøΩm#SÔøΩR)ÔøΩeÔøΩÔøΩFÔøΩÔøΩ~ÔøΩgÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩÔøΩÔøΩqÔøΩ""ooÔøΩÔøΩoÔøΩI\ÔøΩÔøΩÔøΩÔøΩoÀØEÔøΩfÔøΩÔøΩÔøΩÔøΩÔøΩƒåÔøΩÔøΩQF?/ æÔøΩÔøΩÔøΩtIÔøΩÔøΩÔøΩÔøΩH‘¶>»™ÔøΩ ÔøΩ+ÔøΩ:ÔøΩ'ÔøΩfÔøΩÔøΩc9T	ÔøΩÔøΩÔøΩ#—¨UÔøΩ)ÔøΩÔøΩ|ÔøΩ&jÔøΩÔøΩÔøΩÔøΩiÔøΩU*ÔøΩÔøΩÔøΩÕñ8O~""ÔøΩÔøΩÔøΩdÔøΩb%JÔøΩNÔøΩ“ÇÔøΩÔøΩwÔøΩÔøΩiÔøΩvÔøΩ}@ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩShÔøΩ6~""ÔøΩÔøΩÿ©ÔøΩ{ÔøΩCÔøΩÔøΩÔøΩCos ÔøΩmÔøΩh	e'ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ6sSÔøΩWÔøΩ\ÔøΩÀülÔøΩqeÔøΩuÔøΩÔøΩ ]ÔøΩ4ÔøΩOÔøΩÔøΩÔøΩi`ŸôÔøΩPÔøΩuÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩbÔøΩÔøΩœöÕ°QgÔøΩy^ÔøΩÔøΩÔøΩ`ÔøΩÔøΩÔøΩÔøΩu=ÔøΩM◊§ÔøΩÔøΩux√íÔøΩ4ÔøΩLÔøΩ7ÔøΩÔøΩÔøΩÔøΩÁóæÔøΩÔøΩ+NSS@ÔøΩÔøΩ<ÔøΩ 1ÔøΩaÔøΩÔøΩ>ÔøΩÔøΩiÔøΩcÔøΩ3ÔøΩÔøΩÔøΩFWÔøΩu<ÔøΩÔøΩgÔøΩi:ÔøΩÔøΩTÔøΩÔøΩ”älÔøΩÔøΩ|SaZÔøΩÔøΩXLÔøΩÍèπ+u_ÔøΩÔøΩÔøΩ^ÔøΩÔøΩOÔøΩÔøΩN*ÔøΩ*ÔøΩCHdÔøΩÔøΩ&:ÔøΩFÔøΩ,EÎòä~$ÔøΩÔøΩ7rÔøΩ`bÔøΩ'6DÔøΩÔøΩÔøΩyÔøΩ2ÔøΩÔøΩÔøΩÔøΩqÔøΩÔøΩÔøΩvÔøΩ @biŒøÔøΩﬁ§ÔøΩÔøΩ*ÔøΩw{ÔøΩÔøΩÔøΩRÔøΩb@ÔøΩ‹•ÔøΩ	tpÔøΩÔøΩÔøΩqqÔøΩÔøΩ)ÔøΩ<QÔøΩÔøΩ÷ê◊¶ÔøΩYÔøΩFÔøΩqÕëÔøΩtw@NÔøΩÔøΩÔøΩJÔøΩgÔøΩÔøΩÔøΩtÔøΩwE1ÔøΩpÔøΩÔøΩ(ÔøΩ\ÔøΩÔøΩÔøΩ zjÔøΩÔøΩj…é›∏ÔøΩCÔøΩÔøΩzd◊êzÔøΩÔøΩCd^ÔøΩÔøΩÔøΩWjÔøΩyÔøΩ$ÔøΩSÔøΩ3eÔøΩeÔøΩœÉitÔøΩÔøΩÔøΩÔøΩiÔøΩÔøΩÔøΩ)ÔøΩÔøΩÔøΩ1Mvi⁄òÔøΩÔøΩÔøΩo1ÔøΩÔøΩE	ÔøΩÔøΩ,ÔøΩÔøΩÔøΩÔøΩEÔøΩ'ÔøΩ|=—£2]+ÔøΩÔøΩ_~ÔøΩÔøΩ=ÔøΩ9yÔøΩj|ÔøΩ)ÔøΩ_+' kÔøΩÔøΩÔøΩwÔøΩÔøΩ—™""ÔøΩÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩlÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ1ÔøΩHv?ÔøΩÔøΩÔøΩÔøΩT2t‡•äAÔøΩÔøΩ93ÔøΩÔøΩVnÕéÔøΩÔøΩÔøΩ/ÔøΩ_>ÔøΩrX|ÔøΩLQ4ÔøΩ=ÔøΩ≈Ö>ÔøΩÔøΩJœÜÔøΩÔøΩÔøΩÔøΩÔøΩX}ÔøΩÔøΩsÔøΩZÔøΩÔøΩ«ØÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩEÔøΩfÔøΩFÔøΩY:ÔøΩLÔøΩ%%	""DÔøΩ'ÔøΩ45$ÔøΩÔøΩ)f[ÔøΩÔøΩÔøΩÔøΩhÔøΩd0xÔøΩbHÔøΩÔøΩ…º""PÔøΩ:YÔøΩ+  PÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ&ÀÇÔøΩÔøΩÔøΩÔøΩÔøΩrÔøΩÔøΩoÔøΩÔøΩ4ÔøΩcpÔøΩAÔøΩÔøΩÔøΩ~ÔøΩ~2LÔøΩÔøΩ%∆õÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩOÔøΩ/ÔøΩÔøΩ.ÔøΩÔøΩlÔøΩMÔøΩÔøΩÔøΩkÔøΩOÔøΩÔøΩÔøΩÔøΩoÔøΩKÔøΩ	ÔøΩN""pRmÔøΩfÔøΩÔøΩ'ÔøΩMw*u=ÔøΩÔøΩÔøΩ*6ÔøΩ5ÔøΩÔøΩ%ÔøΩQÔøΩÔøΩÔøΩÔøΩ~V2ÔøΩrDÔøΩr/ÔøΩaFÔøΩ«î∆°""ÔøΩ""÷äÔøΩÔøΩlÔøΩÔøΩRÔøΩÔøΩÔøΩÔøΩÔøΩRÔøΩ(ÔøΩÔøΩÔøΩSÔøΩÔøΩ2ÔøΩÔøΩGvÔøΩÔøΩÔøΩÔøΩ%ÔøΩoÔøΩWÔøΩÔøΩP[ÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩl@3)kÔøΩÔøΩÔøΩqRÔøΩÔøΩÔøΩ_ ÔøΩÔøΩsÔøΩÔøΩÔøΩ.ÔøΩÔøΩÔøΩÔøΩ;glÔøΩÔøΩU5r.ÔøΩÔøΩ5qo»ø_ÔøΩYjEwoÔøΩÔøΩÔøΩ:s(ÔøΩÔøΩBQÔøΩnfT'Ëúép5rSÔøΩÔøΩ‘Ñ yH ÔøΩÔøΩBÔøΩZÔøΩ;ÔøΩfW<ÔøΩaÔøΩJÔøΩa]nbÔøΩ5DÔøΩyÔøΩYÔøΩ1ÔøΩÔøΩÔøΩCOÔøΩ`z@ÔøΩÔøΩÔøΩL8k3ÔøΩVÔøΩÔøΩ4ÔøΩÔøΩ+,F/nÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩLÔøΩZÔøΩÔøΩÔøΩMÔøΩrÔøΩ^XJ<6ÔøΩ.YÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩPÔøΩÔøΩRÔøΩu-ÔøΩ)MÔøΩpÔøΩÔøΩÔøΩ8ÔøΩÔøΩN]ÔøΩ7w*UÔøΩÔøΩÔøΩ7# ÔøΩÔøΩÔøΩÔøΩÔøΩqÔøΩKÔøΩn`kÔøΩÔøΩÔøΩN  ÔøΩ'9.ÔøΩ}ÔøΩd7ÔøΩSÔøΩÔøΩz.ÔøΩ ÔøΩ:ÔøΩÔøΩY}WÔøΩ ,ÔøΩTxUÔøΩmÔøΩÔøΩbÔøΩÔøΩ	ÔøΩŸºÔøΩÔøΩÔøΩS)#ÔøΩÔøΩÃßÔøΩ>ÔøΩÔøΩÔøΩÔøΩII3ÔøΩÔøΩ⁄ìÔøΩ¬éÔøΩÔøΩÔøΩP$ÔøΩÔøΩÔøΩVÔøΩœ£W)ÔøΩCUTÔøΩ2dÔøΩ∆æÔøΩ\Õ≠ÔøΩhuÔøΩ6≈äÔøΩ%` ÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩ ‡†™ÔøΩEÔøΩUM:ÔøΩeÔøΩ0ÔøΩÔøΩÔøΩUBiÔøΩÔøΩÔøΩÔøΩÔøΩ	\>ÔøΩ 	ÔøΩaÔøΩÔøΩ|6ÔøΩÔøΩÔøΩÔøΩÔøΩkXÔøΩÔøΩEÔøΩÔøΩÔèõWÔøΩ. ÔøΩÔøΩÔøΩ/>-ÔøΩÔøΩxÔøΩ:ÔøΩU~ÔøΩÔøΩÔøΩ^ÂÇù^‘ûÔøΩjcÔøΩÔøΩ%ÔøΩsÔøΩÔøΩGaÔøΩÔøΩhFÔøΩÔøΩÔøΩŸªÔøΩÔøΩ)ÔøΩÔøΩÔøΩÔøΩÔøΩcÔøΩqÔøΩ0YÔøΩZ\sÔøΩÔøΩ~9<{=ÔøΩÔøΩyÔøΩÔøΩÔøΩÔøΩ<6j""/ÔøΩ3ÔøΩÿçPÔøΩÔøΩ%P3S1vﬂù ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ.√úfxÔøΩ=?ÔøΩ`ÔøΩ)ÔøΩŸõ>SÔøΩÔøΩÔøΩO?XÔøΩzÔøΩ4ÔøΩÔøΩjk+ÔøΩÔøΩPÔøΩÔøΩÔøΩÔøΩÔøΩwÔøΩ7 ÔøΩÔøΩg~ÔøΩW-MÔøΩÔøΩnÔøΩhÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩPÔøΩÔøΩwÔøΩYÔøΩW>ÔøΩÔøΩ}ÔøΩÔøΩ=ÔøΩmÔøΩÔøΩ‰ÅÉRÔøΩKÔøΩÔøΩÔøΩÔøΩUÔøΩÔøΩHIÔøΩÔøΩdÔøΩOÔøΩ ÔøΩ 5bÔøΩe))1ÔøΩÔøΩÔøΩÔøΩkuW!#EIÔøΩ 7ÔøΩw_:ÔøΩ$[RÔøΩÔøΩ’∫ÔøΩÔøΩpÔøΩŒ¨9FÔøΩwÔøΩ+ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩÔøΩBÔøΩ<ÔøΩ&JÔøΩ-`=nÔøΩ!ÔøΩÔøΩvZrÔøΩÔøΩFÔøΩ2ÔøΩ3WFÔøΩ&_ÔøΩ≈ºLaYÔøΩiv€òÔøΩÔøΩ{ÔøΩ'ÔøΩqiÔøΩÔøΩppÔøΩÔøΩÓΩíhV	ÔøΩnÔøΩÔøΩÔøΩ eNÔøΩ=ÔøΩÔøΩfÔøΩÔøΩÔøΩÔøΩÔøΩtRzÔøΩÔøΩNqBUxÔøΩ4{ÔøΩÔøΩ ÔøΩBWRÔøΩÔøΩx$ÔøΩÔøΩÔøΩÔøΩbYÔøΩÔøΩÔøΩÔøΩ÷≤[ÔøΩ/8ÔøΩFÔøΩgÔøΩwÔøΩÔøΩJÔøΩÔøΩSÔøΩÔøΩRÔøΩQÔøΩÔøΩoÔøΩÔøΩÔøΩiÔøΩ`◊ìÔøΩF÷ü,ÔøΩÔøΩÔøΩnÔøΩÃÅÔøΩgÔøΩÔøΩ(…∑ÔøΩ~ÔøΩzÔøΩÔøΩKÔøΩÔøΩÔøΩ$>ÔøΩmÔøΩÔøΩÔøΩÔøΩÓé∂CﬂèÔøΩÔøΩ,ÃªÔøΩ&ÔøΩÔøΩU7iÔøΩ;ÔøΩ,ÔøΩÔøΩÔøΩÔøΩÔøΩRÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩFÔøΩ}dÔøΩÔøΩÔøΩmÔøΩÔøΩ]S_#ÔøΩÔøΩÔøΩÔøΩÔøΩ⁄èODÔøΩÔøΩÔøΩ#ÔøΩÔøΩÔøΩÔøΩLÔøΩPÔøΩÔøΩ6~1ÔøΩÔøΩ3ÔøΩÔøΩ2ÔøΩY`vÔøΩVÔøΩÔøΩOÀ¶U5#pÔøΩ)-ÔøΩ9ŒÆÔøΩ/ÔøΩÔøΩ:,DÔøΩÔøΩ?JÔøΩuZ""ÔøΩ[ÔøΩ{bÔøΩÔøΩÔøΩÔøΩÔøΩJAÔøΩzÔøΩ?$tÔøΩuÔøΩÔøΩSSÔøΩr%WpwÔøΩÔøΩgÔøΩÔøΩÔøΩÔøΩÔøΩ'ÔøΩ|ÔøΩÔøΩÔøΩÔøΩD=ÕïqÔøΩBÔøΩ+ÔøΩTwX:ÔøΩ/ÔøΩhÔøΩÔøΩÔøΩAÔøΩÔøΩeH&ÔøΩ`ÔøΩÔøΩeÔøΩÔøΩÔøΩÔøΩ[}ÔøΩGÔøΩÔøΩ7-≈É+ÔøΩOÔøΩÔøΩ3IÔøΩD""ÔøΩÔøΩÔøΩ ÔøΩx{ÔøΩ—äAÔøΩAIÔøΩÔøΩÔøΩÔøΩmÔøΩÔøΩR4ÔøΩPmÀî<*ÔøΩuÔøΩÔøΩ1lÔøΩÃì<ÔøΩQÔøΩÔøΩÔøΩ+ ÔøΩÔøΩ⁄µÔøΩÔøΩÔøΩÔøΩrÔøΩ\ÔøΩq7ÔøΩ\ÔøΩÔøΩ""+ÔøΩÔøΩGÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ8ÔøΩ$B/ÔøΩ62*JÔøΩ'gÔøΩÔøΩBsÔøΩÔøΩqnbÔøΩÔøΩÔøΩ—øÔøΩÔøΩsÔøΩBÔøΩQQQlqqÔøΩoÔøΩÔøΩrÔøΩÕéÔøΩ_ÔøΩÔøΩÔøΩIÔøΩP}ÔøΩ0ÔøΩÔøΩ8vÔøΩ⁄âÔøΩbÔøΩodÔøΩÔøΩ {ÔøΩÔøΩÔøΩ{ciu?ŒØÔøΩÔøΩÔøΩÔøΩ”Ö+ÔøΩÔøΩ0ÔøΩÔøΩ\+ÔøΩ^ÔøΩzIÔøΩ""bÔøΩÔøΩ4ÔøΩ∆ÑÔøΩÔøΩ@;ÔøΩÔøΩ N]K<_ÔøΩ/ÔøΩÔøΩTdÔøΩ1ÔøΩz-…ômXÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩo‡´Å{	3ÔøΩÔøΩÔøΩÔøΩÔøΩ_-xLÔøΩzÏíØVÔøΩÔøΩ◊êO ÔøΩÔøΩ ÔøΩC?ÔøΩ\ÔøΩÔøΩm,ÔøΩ#@ÔøΩKÔøΩn?ÔøΩo#=FwÔøΩÔøΩ>hÔøΩ4ÔøΩ?ÔøΩ1G)m?ÔøΩÔøΩ""ÔøΩÔøΩ1~ÔøΩÔøΩ4ÔøΩ,ÔøΩÔøΩkÔøΩDNÔøΩ4-7·õñ8b}p8s,ÔøΩÔøΩmn*ÔøΩÃ°5ÔøΩMÔøΩËë§ÔøΩ:^ÔøΩhji,=ÔøΩÔøΩ[ÔøΩÔøΩsÔøΩÔøΩÔøΩa/ÔøΩLhC#ÔøΩ(ÔøΩŒΩK8ÔøΩÔøΩ{CÔøΩÔøΩcÔøΩÔøΩ""-ÔøΩUÔøΩÔøΩÔøΩIOÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩlÔøΩÔøΩ[:ÔøΩ{ÔøΩVÔøΩÔøΩÔøΩ0\»∏ÔøΩ—≥≈â6ÔøΩ@@N?k$ÔøΩÔøΩÔøΩKdF^ÔøΩÔøΩlOÔøΩwÔøΩlÔøΩ)6ÔøΩÔøΩÔøΩrÔøΩ3n|.ÔøΩÔøΩ»äÔøΩs%ÔøΩ7œÜ ÔøΩÔøΩ\uÔøΩÔøΩÔøΩÔøΩÔøΩfÃ≥T9ÔøΩBÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩx+ÔøΩ ÔøΩÔøΩS%ÔøΩ=ÔøΩÔøΩTÔøΩÔøΩ=z)SÔøΩpÔøΩ9bÔøΩÔøΩÔøΩaÔøΩUÔøΩoÔøΩ#{?ÔøΩ(HÔøΩÔøΩyD[""=ÔøΩÔøΩÔøΩ,./ÔøΩeÔøΩœ∑≈µ""<(ÔøΩÔøΩÔøΩÔøΩÔøΩiÔøΩ1ÔøΩÔøΩÔøΩT4(ÔøΩ4ÔøΩÔøΩÔøΩÔøΩ√ß.ÔøΩÔøΩÀíÔøΩÔøΩÔøΩÔøΩ7woÔøΩÔøΩ[sÔøΩQÔøΩ8ƒç.kÔøΩ*ÔøΩÔøΩiSÔøΩ€ôGbÔøΩÔøΩvÔøΩ]ÔøΩÔøΩl ÔøΩÔøΩÔøΩ+ meÔøΩNEÔøΩÔøΩÔøΩÔøΩCXÔøΩÔøΩ~:cÔøΩ”ò""xÔøΩÃóÔøΩÔøΩaSÔøΩ'ÔøΩÔøΩ4ÔøΩÔøΩÔøΩh?aﬂà{<ÔøΩxÔøΩÔøΩ›ÜÔøΩÔøΩLÔøΩZÔøΩÔøΩ ÔøΩÔøΩ=ÔøΩÔøΩAdVÔøΩ)ÔøΩÔøΩÔøΩÔøΩ.ÔøΩÔøΩN.#◊àÔøΩ|ÔøΩgÔøΩÔøΩrCÔøΩJo ~ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9ÔøΩ8ÔøΩ>YÔøΩÔøΩ≈∞ÔøΩÔøΩQÔøΩÔøΩÔøΩHÔøΩw9ÔøΩv\JÔøΩÔøΩ3«¥ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩÔøΩÔøΩÔøΩÔøΩrKÔøΩÔøΩÔøΩ>ÔøΩÔøΩcÔøΩ€ësÔøΩÔøΩ~%<SwÔøΩ% ÔøΩ—äÔøΩÔøΩÕâÔøΩÔøΩp0AÔøΩ(vÔøΩÔøΩÔøΩÔøΩ	ÔøΩÔøΩÔøΩLÔøΩ|ÔøΩÔøΩ{8cÔøΩ""ÔøΩÔøΩÀä( ÔøΩxÔøΩ[L)ÔøΩÔøΩ5ÔøΩÔøΩÔøΩ;ÔøΩÔøΩÔøΩJÔøΩÔøΩÔøΩtÔøΩ\jÔøΩUyÔøΩYﬁ•ÔøΩ»äÔøΩÔøΩLÔøΩxUh)#PÔøΩMÔøΩÔøΩÔøΩÔøΩAo-ÔøΩT›èQÔøΩ/·üÅNÔøΩVÔøΩÔøΩÔøΩ0ÔøΩB{ÔøΩÔøΩY u>%ÔøΩÔøΩYÔøΩÔøΩÔøΩ hÔøΩÔøΩL>a<`ÔøΩÔøΩÔøΩﬁóÔøΩÔøΩtÔøΩkÔøΩÔøΩ4ÔøΩAÔøΩŸÉÔøΩÔøΩÎûæpÔøΩÔøΩ2Bz^^ÔøΩÔøΩÔøΩÔøΩaÔøΩqtÔøΩÔøΩ,G-kBÔøΩÔøΩ`0*ÔøΩXÔøΩ=ÔøΩ~ÔøΩÔøΩlÔøΩÔøΩÔøΩ;BÔøΩEÔøΩmQÔøΩVwÔøΩÔøΩÔøΩÔøΩ)	ÔøΩÔøΩÔøΩbÔøΩ0ÔøΩÔøΩgÔøΩÔøΩÔøΩ4'?ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩqÔøΩnuPÔøΩ)ÔøΩAJÔøΩÔøΩÔøΩt^2ÔøΩÔøΩ=ÔøΩRÔøΩgÔøΩh›∫ÔøΩSÔøΩÔøΩA@8ÔøΩ1G,ÔøΩÔøΩ#ÔøΩÔøΩÔøΩf%ÔøΩÔøΩÔøΩ$ÔøΩ(ÔøΩÔøΩÔøΩÔøΩ(ÔøΩ.ÔøΩÔøΩÔøΩkÔøΩ1ÔøΩnHÔøΩWÔøΩÔøΩÔøΩLÔøΩÎßØ$ÔøΩqÔøΩ>`ÔøΩ\1ÔøΩvÔøΩ[+SÔøΩÔøΩ YÔøΩÔøΩÔøΩEÔøΩS<ÔøΩ**ÔøΩ=ÔøΩ""<ÔøΩÔøΩÔøΩYÔøΩÔøΩOÔøΩÔøΩÔøΩiÔøΩ7OÔøΩ^VÔøΩ8ÔøΩÔøΩ ÔøΩ+ÔøΩÔøΩÔøΩÔøΩÔøΩ~ÔøΩÔøΩiÔøΩÔøΩÔøΩÔøΩÔøΩs<K&ÔøΩqÔøΩ7]I ÔøΩJœóÔøΩÔøΩ<UÔøΩÔøΩtÔøΩÔøΩÔøΩq<ÔøΩ3 ÔøΩ;ÔøΩÔøΩ”µ7ÔøΩzUÔøΩÔøΩÔøΩ?wÔøΩÔøΩÔøΩÔøΩmfŒ≥3€ΩhRÔøΩÔøΩ+ÔøΩ<ÔøΩLÔøΩÔøΩÔøΩÔøΩ}ÔøΩÔøΩ7wwRgÔøΩ#ÔøΩieFÔøΩ(3\q?ÔøΩÔøΩÔøΩÔøΩ⁄ÆÔøΩÔøΩÔøΩÔøΩUÔøΩÀóÔøΩÔøΩ>ÔøΩ/Wsy@ÔøΩÔøΩLQoÔøΩÔøΩ-l8qhrÔøΩÔøΩÔøΩ""ÔøΩU ÔøΩÔøΩÔøΩ ÔøΩo0ÔøΩlt-~ÔøΩ>yﬂ¢-ÔøΩ!.-7s<ÔøΩÔøΩÔøΩ$h[ÔøΩ| ÔøΩŒúÔøΩÔøΩÔøΩRÔøΩÔøΩtÔøΩÔøΩc⁄í4ÔøΩ3ÔøΩ3ÔøΩﬁ≠fÔøΩÔøΩÔøΩ(ÔøΩÔøΩÔøΩKÔøΩÔøΩÔøΩ+ÔøΩÔøΩÔøΩÔøΩÔøΩhn\ÔøΩÔøΩÔøΩÔøΩ/?M!1ÔøΩWÔøΩU3ÔøΩ?&ÔøΩ^ÔøΩEZ9ÔøΩ~VÔøΩ{ÔøΩboÔøΩÔøΩQÔøΩ<ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ^ÔøΩnÔøΩjÔøΩÔøΩ}dÔøΩho_ 	qDÔøΩro""ÔøΩ=ÔøΩÔøΩaÔøΩÔøΩsÔøΩ79$\zÔøΩÔøΩÔøΩÔøΩ>$ÔøΩzÔøΩÔøΩ|ÔøΩ ÔøΩÔøΩEÔøΩÔøΩ&ÔøΩÔøΩÕ≤AÔøΩÔøΩÔøΩ-ÔøΩpYÔøΩPÔøΩjÔøΩÔøΩ,.:ÔøΩÔøΩ=ÔøΩÔøΩyÔøΩZ /ÔøΩ,PÔøΩHÔøΩb+ÔøΩÔøΩÛ∫ö∑TÔøΩÔøΩMÔøΩÔøΩ4ÔøΩÔøΩ ìÔøΩ9:–º9ÔøΩwÔøΩœ£XÔøΩUÔøΩÔøΩÔøΩIQxÔøΩ¬™ÔøΩ:ÔøΩÔøΩÔøΩÔøΩÔøΩ'ÔøΩ@ÔøΩkÔøΩ;AÔøΩÔøΩÔøΩ29ÔøΩ2eÔøΩÔøΩÔøΩ_ÔøΩÔøΩ|=ÔøΩÔøΩyÔøΩÔøΩÔøΩ/#^TÔøΩ@ÔøΩÔøΩÔøΩnOÔøΩ3x	ÔøΩÔøΩÔøΩÔøΩ.ÔøΩÔøΩÔøΩ~cÔøΩÔøΩÔøΩp √üÔøΩrpÔøΩ8ÔøΩ!ÔøΩeÔøΩ`LaÔøΩÔøΩÔøΩÔøΩÂé°\ÔøΩÔøΩÔøΩfÔøΩO!ÔøΩxQÔøΩr ÔøΩÔøΩÔøΩDÔøΩ^\ÔøΩÔøΩ5=ÔøΩ' JI+a/[ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ„çùÔøΩÔøΩÔøΩ7bÔøΩÔøΩÔøΩÔøΩ9BrTÔøΩ&Sf,BÔøΩT¬©ÔøΩnÔøΩ3ÔøΩÔøΩÔøΩYÔøΩÔøΩÔøΩÔøΩ~ÔøΩvsVÔøΩOÔøΩ‚µ∑ÔøΩÔøΩ[imÿä$ÔøΩEÔøΩÔøΩÔøΩÔøΩ""cÔøΩÔøΩ+oÔøΩÔøΩM$TIihÔøΩÔøΩÔøΩKÔøΩÔøΩ ÔøΩ{ÔøΩ#ÔøΩ_ a&ÔøΩÔøΩÔøΩÔøΩÔøΩZÔøΩ|ÔøΩÔøΩ3ÔøΩÔøΩÔøΩÔøΩ(ÔøΩ\ÔøΩ9cÔøΩÔøΩmÔøΩÔøΩ_eÔøΩ/U?ÔøΩ;ÔøΩnP4ÔøΩDÔøΩ$ÔøΩÔøΩnÔøΩÔøΩÔøΩW1ÔøΩÔøΩ)ÔøΩÔøΩlQÔøΩ2Dt+◊óÔøΩÔøΩÔøΩQÔøΩÔøΩ[ÔøΩEÔøΩhÔøΩ*ÔøΩÔøΩÔøΩ)ÔøΩÔøΩÔøΩ2ÔøΩ:ÔøΩÔøΩ')tDqhÔøΩ9ÔøΩWÔøΩL1ÔøΩ&ÔøΩzZÔøΩÔøΩË≠§ÔøΩÔøΩÔøΩwÔøΩ4ÔøΩÔøΩÔøΩÔøΩwY}ÔøΩk/ÔøΩ""uÔøΩLÔøΩ^ ÔøΩÔøΩÔøΩ1ÔøΩ-ÔøΩRÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ0ÔøΩ@6\ÔøΩUÔøΩ~ÔøΩ5ÔøΩZ¬†ÔøΩÔøΩ}ÔøΩTÔøΩÔøΩÔøΩUFÔøΩ\ÔøΩÔøΩsÔøΩÔøΩÔøΩÔøΩÔøΩ6{3ÔøΩ""3ÔøΩ\d|ÔøΩ	ÔøΩÔøΩÔøΩ}ÔøΩNÔøΩÔøΩR	wo_ÔøΩÔøΩ„É∂ÿìÔøΩÔøΩÔøΩiÔøΩÔøΩÔøΩÔøΩ\t>OÔøΩFÔøΩ{ÔøΩY2TÔøΩk àÔøΩ%ÔøΩÔøΩÔøΩ<ÔøΩC7ÔøΩ&~ÔøΩÔøΩjFkÔøΩÔøΩ~ÔøΩÔøΩyÔøΩÔøΩ—ÆÔøΩ#T3ÔøΩÔøΩ{z#)ÔøΩÔøΩ9„öóÔøΩ8ÔøΩ%ÔøΩ2,ÔøΩÔøΩÔøΩi^zœ≥0]oÔøΩ3ÔøΩÔøΩÔøΩfPsÔøΩG{ÔøΩÔøΩkÔøΩÔøΩ]H""I""ÔøΩHÔøΩMÔøΩÔøΩÔøΩWÔøΩv^HÔøΩÔøΩÔøΩMh&ÔøΩÔøΩÔøΩ#Jp[ÔøΩÔøΩÔøΩ?ÔøΩyÔøΩ~ÔøΩEÔøΩ:1kÔøΩÔøΩ[ÔøΩÔøΩÔøΩÔøΩÔøΩ5ÔøΩSEh;ÔøΩÔøΩÔøΩÔøΩÔøΩDÔøΩÔøΩ^ÔøΩÔøΩ|tÔøΩ9ÔøΩ_YgÔøΩ8KCÔøΩÔøΩÔøΩÔøΩÔøΩMÔøΩÔøΩÔøΩÔøΩlVÔøΩÔøΩÔøΩ{NÔøΩÔøΩÔøΩ~cBÀ∫rÔøΩÔøΩÔøΩÎòÆÔøΩÔøΩÔøΩ“Ω/ÔøΩÔøΩZÔøΩÔøΩq1_ÔøΩÔøΩ|ÔøΩV*^~tÔøΩK4ÔøΩÔøΩÔøΩÔøΩÔøΩF_ÔøΩÔøΩ^…ÆÂ™Ø ÔøΩ|ÔøΩÔøΩÔøΩ2QÔøΩÔøΩF}ÔøΩÔøΩÔøΩ}o=ÔøΩl5%P0`/ÔøΩ=$&ÔøΩnÔøΩ6LÀ∂ÔøΩÔøΩEÔøΩÔøΩÔøΩe ∞^ÔøΩRÔøΩÔøΩÔøΩUÔøΩÔøΩÔøΩPÔøΩÔøΩÔøΩÔøΩL,ÔøΩÔøΩBÔøΩ[ÔøΩ~)IÔøΩ>m#ÔøΩÔøΩÔøΩs¬¥1ÔøΩÔøΩÔøΩwÔøΩÔøΩMÔøΩÔøΩDÔøΩÔøΩÔøΩ	ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ8ÔøΩ|G,5>ÔøΩOÔøΩ.2HÔøΩÔøΩ8u32ÔøΩÔøΩÔøΩ&ÔøΩ|⁄çÔøΩÔøΩÔøΩÔøΩ(ÔøΩÔøΩ+&ÔøΩÔøΩzÔøΩ&dÔøΩÔøΩvts ÔøΩ;›àE€¥VÔøΩyÔøΩÔøΩ[wÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9~jÔøΩLÔøΩAO÷îÔøΩ0RÔøΩÔøΩR9ÔøΩSÔøΩgÔøΩÔøΩ]ÔøΩAyÔøΩ:ÔøΩÔøΩpAÔøΩÔøΩT3RlÔøΩÔøΩ%ÔøΩ&ÔøΩ%ÔøΩNhÔøΩNÔøΩÔøΩÔøΩ.ÔøΩ_ÔøΩkÔøΩÔøΩ[6&8ÔøΩÔøΩÔøΩÔøΩUq6ÔøΩtœúÔøΩÔøΩGÔøΩbÔøΩ~NÔøΩÔøΩoÔøΩÔøΩ+_ÔøΩ/ÔøΩ[ÔøΩ’µÔøΩÔøΩb$ÔøΩÔøΩ:{_6ÔøΩ·∂®bNÔøΩÔøΩ""ÔøΩÔøΩ+ÔøΩÔøΩYÔøΩoXÔøΩÔøΩÔøΩEÔøΩÔøΩ4+yÔøΩ-~ÔøΩ1ÔøΩÔøΩzÔøΩÔøΩ.IÔøΩÔøΩi8g""ÔøΩkU+ÔøΩm-ÔøΩ3ÔøΩ÷™EÔøΩ»âÔøΩ6]ÔøΩvQ3ÔøΩYÔøΩZÔøΩgWÔøΩÔøΩÔøΩÔøΩF9}ÔøΩÔøΩÔøΩ7ÔøΩ}HÔøΩJfÔøΩÔøΩÔøΩÔøΩÔøΩIÔøΩkcb[N÷Ω*ÔøΩ#8ÔøΩxÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ:,ÔøΩÔøΩÔøΩ$oÔøΩN∆´ÔøΩÔøΩÔøΩ^ÔøΩÔøΩ;RÔøΩÔøΩ|~ÔøΩÔøΩfiÔøΩ5(I ÔøΩjÔøΩÔøΩÔøΩÔøΩW”êÔøΩÔøΩ7ÔøΩÔøΩlÔøΩ&ÔøΩEÔøΩÔøΩÔøΩÔøΩÔøΩ …∫\,ÔøΩÔøΩkÔøΩf}ÔøΩÔøΩÔøΩÔøΩÔøΩ%dS{ÔøΩÔøΩV0›ìTÔøΩÔøΩÔøΩÔøΩ_ÔøΩhwÔøΩ>ÔøΩÔøΩCÔøΩ5ÔøΩÔøΩÔøΩÔøΩf9ÔøΩÔøΩ_ÔøΩ:5ÔøΩÔøΩBÔøΩ‘ùÔøΩÔøΩRÔøΩÔøΩÔøΩÔøΩvÔøΩ*ÔøΩ1ÔøΩÔøΩ‹∫DGÔøΩÔøΩhKÔøΩÔøΩ_s,ÔøΩHÔøΩÔøΩÔøΩÔøΩ)7ÔøΩÔøΩÀã{ÔøΩYHÔøΩ-ÔøΩÔøΩÔøΩ\'ÔøΩÔøΩÔøΩÔøΩ7ÔøΩÔøΩEÔøΩ*ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ3\B=ÔøΩ,ÔøΩÔøΩÔøΩ""ÔøΩÔøΩÔøΩÔøΩÔøΩQVÔøΩeutmÓ±úÔøΩ$gÔøΩÔøΩÔøΩÔøΩeÔøΩMÔøΩUq/ÔøΩ)ÔøΩzÔøΩÔøΩyÔøΩ=ÔøΩÔøΩÔøΩ?ÔøΩÔøΩÔøΩ*ÔøΩERÔøΩcnÔøΩÔøΩÔøΩZIÔøΩÔøΩ¬øÔøΩÔøΩkÔøΩ‘î80ÔøΩnJxÔøΩÔøΩ ÔøΩÔøΩ}ÔøΩÔøΩÔøΩ'ÔøΩ‡£å<G9DFXÔøΩ7ÔøΩÔøΩi”¨ÔøΩ#ÔøΩ√êIÔøΩ3h1-ÔøΩÔøΩÔøΩev&$1ÔøΩÔøΩÔøΩÔøΩUÔøΩÔøΩÔøΩ}C(ÔøΩÔøΩÔøΩÔøΩÂ©Ω|wAÔøΩPÔøΩ/ÔøΩÔøΩWÔøΩÔøΩﬂå ;\ÔøΩÔøΩÔøΩ$OÔøΩÔøΩ÷ÄÔøΩÔøΩÔøΩIÔøΩ RÔøΩÔøΩzÔøΩÔøΩIzÔøΩ>ÔøΩÔøΩ9ÔøΩ ÔøΩÔøΩdy+JÔøΩ}ÔøΩUÔøΩÔøΩvÔøΩcÔøΩÔøΩFDÔøΩÔøΩX_ÔøΩTÔøΩÔøΩÔøΩÔøΩÔøΩ8ÔøΩMÔøΩ_ÔøΩ1ÔøΩ|ÔøΩÔøΩ›õÔøΩ	R!ÔøΩGÔøΩZÔøΩÔøΩdÔøΩÔøΩE=ÔøΩ√¢ÔøΩ[ÔøΩÔøΩÔøΩÔøΩ1ÔøΩ9ÔøΩ”∏ÔøΩM3√ûÔøΩÔøΩ	ÔøΩÔøΩÔøΩ&7ÔøΩTOÔøΩÔøΩÔøΩqFnÔøΩ∆úÔøΩ“êÔøΩÔøΩÔøΩÔøΩ  ÔøΩqKO…∂ÔøΩÔøΩÔøΩ%ÔøΩÔøΩÔøΩ^ÔøΩÔøΩÔøΩÔøΩÔøΩ#`ÔøΩ""ÔøΩDfÔøΩnÔøΩÔøΩtÔøΩ‰óòxÔøΩ9kÔøΩÔøΩp ÔøΩÔøΩ9:ÔøΩÔøΩTÔøΩ4"",ÔøΩ5ÔøΩÔøΩVnÔøΩÔøΩmÔøΩÔøΩUÔøΩÔøΩÔøΩ|ÔøΩ%|ÔøΩm~ÔøΩÔøΩÔøΩÔøΩÔøΩ%ÿñaÔøΩÔøΩÔøΩbÔøΩÔøΩwÔøΩÔøΩ)ÔøΩÔøΩÔøΩÔøΩ#ÔøΩÔøΩÔøΩ3u![ÔøΩ:=ÔøΩÔøΩ[ÔøΩÔøΩRkÔøΩI-{nKbÔøΩMÔøΩÔøΩÔøΩxÔøΩÔøΩ ÔøΩÔøΩlÔøΩHr,PÔøΩÔøΩJÔøΩÔøΩÔøΩÕèÔøΩ_BÔøΩÔøΩ?ÔøΩ,ÔøΩÔøΩÔøΩQ=ÔøΩÔøΩWÔøΩ%ÔøΩÔøΩÔøΩEÔøΩwÔøΩÍìÑÔøΩYÔøΩ/YÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩtÔøΩyt ÔøΩÔøΩ ÔøΩY ÔøΩÔøΩgOÔøΩÔøΩdÔøΩ;ÔøΩnJÔøΩ:ÔøΩÔøΩVÔøΩÔøΩÔøΩÔøΩUÔøΩ‘¥ÔøΩÔøΩDYÔøΩÔøΩ%"">N’ê–è$q√≥FÔøΩ>:ÔøΩXÔøΩF?`ÔøΩ4ÔøΩÔøΩ4ÔøΩÔøΩÔøΩÔøΩÔøΩ◊îGÔøΩ""ÔøΩQ*ÔøΩ}ﬂêÔøΩÔøΩpÔøΩbÔøΩÔøΩÔøΩÔøΩlÔøΩHwTÔøΩÔøΩ4≈∏ÔøΩÔøΩ+ÔøΩP&ÔøΩÔøΩ6ÔøΩ…çÔøΩﬁìÔøΩÔøΩdÔøΩÔøΩ(ÔøΩÔøΩ6ÔøΩ«´ÔøΩÔøΩ{‚ò®ÔøΩ,ÔøΩSÔøΩxYcÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩq)ÔøΩGÔøΩxR[ÔøΩPÔøΩ—Ñg6ÔøΩmBÔøΩÔøΩÔøΩÔøΩÔøΩ2ÔøΩgÔøΩÔøΩÔøΩ`VÔøΩVtÔøΩ)ÔøΩÔøΩÔøΩ%ÔøΩ ÔøΩ*ÀΩÔøΩiÔøΩÔøΩÔøΩyÔøΩÔøΩÔøΩÔøΩAÔøΩ ÔøΩ_ÔøΩÔøΩÔøΩÔøΩOlÔøΩÔøΩÔøΩÔøΩ^aÔøΩ>ÔøΩÔøΩÔøΩÔøΩyÔøΩÔøΩx/M#ÔøΩ.ÔøΩÔøΩ2ÔøΩÔøΩÔøΩZÔøΩvÔøΩ}ÔøΩÔøΩKÔøΩÔøΩ2ÔøΩCÔøΩC4ÔøΩÔøΩÔøΩÔøΩ )ÔøΩ	ÔøΩ+ÔøΩ!aÔøΩz$ÔøΩÔøΩÔøΩÔøΩU[ÔøΩÔøΩÔøΩ7ﬂàÔøΩ9sGeÔøΩSÔøΩÔøΩÔøΩÔøΩ\ÔøΩn|.2ÔøΩ!ÔøΩU	ÔøΩÔøΩÔøΩÔøΩ}ÔøΩIÔøΩQÔøΩeÔøΩgÔøΩÔøΩÔøΩ:ÔøΩmxÔøΩ5ÔøΩÔøΩÔøΩÔøΩ—≤ÔøΩ^ÔøΩÔøΩe ÔøΩxAÔøΩmBÔøΩÔøΩÔøΩPk\ÔøΩB9»ÄÔøΩÿ™ÔøΩk=2ÔøΩÔøΩÔøΩds{b¬¥ÔøΩ]>Hx}ÔøΩPÔøΩC+`ÔøΩeÔøΩÔøΩÔøΩÔøΩaeÔøΩkÔøΩÔøΩÔøΩRÔøΩÔøΩÔøΩbsÔøΩÔøΩZcÔøΩsÔøΩEÔøΩZgÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ/oÔøΩV|ÔøΩ}ÔøΩqÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩzÔøΩPƒ≥ÔøΩ≈≤9ÔøΩK?ÔøΩ'VdÔøΩÔøΩÔøΩ\ÔøΩ@ÔøΩ6ÔøΩ5ÔøΩ#UCÔøΩ[;ÔøΩwÔøΩ-ÔøΩO;ÔøΩj5JÔøΩbwlŒÖÔøΩrÔøΩÈØ¥ÔøΩ:ÔøΩuÔøΩ-ÔøΩRÔøΩaÔøΩ@hÔøΩÔøΩDÔøΩ\ÔøΩCsÔøΩbÔøΩÍ≥≤fÔøΩÔøΩ(ÔøΩnMQÔøΩÔøΩ‘òÔøΩ<ÔøΩvÔøΩÔøΩlÔøΩ>ÔøΩ!!ÔøΩMÔøΩuH=ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩpWhÔøΩ⁄Ä{ÔøΩÔøΩÔøΩÔøΩNKÔøΩÔøΩ^ÔøΩ[ÔøΩÔøΩÔøΩMÔøΩ1ÔøΩQ=ÔøΩÔøΩÔøΩÔøΩÕ≤‘´)*ÔøΩ«ßvSK»§!CÔøΩÔøΩÔøΩÔøΩ=tÔøΩ y ÿÆÔøΩÔøΩ<EÔøΩ/œæMÔøΩQ6&{@ÔøΩU]ÔøΩÔøΩÔøΩÔøΩ]ÔøΩQ!~$nÔøΩ=lÔøΩÔøΩÔøΩR ÷†eGÔøΩÔøΩmÔøΩÔøΩ~ÔøΩc:ÔøΩtz#¬ågM=ÔøΩaÔøΩ,ÔøΩF ÔøΩ8ÔøΩ«üVF7Â°®ÔøΩÔøΩQ>ÔøΩÔøΩsOÔøΩÔøΩÔøΩT1ÔøΩÔøΩÔøΩÔøΩ&ÔøΩdÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ_ÔøΩ’≥ÔøΩZ5 ÔøΩ:\WYÔøΩÔøΩ?ÔøΩ.ÔøΩŸîÔøΩOÔøΩj;-ÔøΩ(ÔøΩÔøΩÔøΩKÔøΩÔøΩ€ΩÔøΩÔøΩ¬ï8VÔøΩuÔøΩtÔøΩ·õÅÔøΩ~eÔøΩÔøΩÔøΩ:ÔøΩÔøΩUÔøΩÔøΩ [p9&ceMÔøΩÔøΩ.mÔøΩ0ÔøΩÔøΩÔøΩ9 ÔøΩGÔøΩ9ÔøΩÔøΩ/|gÔøΩÔøΩltqÔøΩÔøΩdÔøΩnÔøΩ'ÔøΩ+vÔøΩÔøΩÔøΩDq endstream endobj 36 0 obj << /Filter /FlateDecode /Length1 2352 /Length2 16384 /Length3 0 /Length 17770 >> stream xÔøΩÔøΩÔøΩPÔøΩÔøΩÔøΩ cÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ;ÔøΩÔøΩ)NpÔøΩww(NqwwwÔøΩw+ZÔøΩÔøΩeÔøΩÔøΩnÔøΩÔøΩÔøΩfÔøΩÔøΩ$yÔøΩ?ÔøΩ]ÔøΩÔøΩeBNÔøΩÔøΩB/l2JÔøΩlÔøΩÔøΩÔøΩx ÔøΩrÔøΩÔøΩÔøΩL &&V&&8rrU'kÔøΩÔøΩpÔøΩÔøΩ@GÔøΩ-ÔøΩÔøΩ@CÔøΩ7ÔøΩÔøΩÔøΩ”õÔøΩÔøΩ ÔøΩl `f0sÔøΩ0sÔøΩ01XÔøΩÔøΩÔøΩÔøΩkrÔøΩÔøΩÔøΩXÔøΩ ÔøΩ ÔøΩ [ÔøΩ#ÔøΩ(ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ-ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ‹útÔøΩÔøΩmÔøΩ∆ÜÔøΩ 9C'sÔøΩÔøΩ[FcCkÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩ?!ÔøΩÔøΩÃùÔøΩÔøΩx]]]m@fÔøΩt W'sÔøΩ2ÔøΩÔøΩÔøΩ4ÔøΩE ohÔøΩÔøΩ9@ÔøΩÔøΩÔøΩÔøΩ? ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ&ÔøΩÔøΩ0ÔøΩ:ÔøΩÔøΩ8€ö  oÔøΩ*RÔøΩ ;ÔøΩÔøΩÔøΩeÔøΩc@ÔøΩÔøΩ9 fÔøΩÔøΩÔøΩÔøΩÔøΩW €øÔøΩ ÔøΩÔøΩA6vÔøΩÔøΩÔøΩÔøΩf Sk @ABÔøΩÔøΩÔøΩÕâ`hkÚó°°ÔøΩ#ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩJ ÔøΩ7ÔøΩÔøΩÔøΩs4vÔøΩÔøΩsrdpÔøΩÔøΩÔøΩÔøΩ#ÔøΩ_aÔøΩÔøΩ,nk"" ÔøΩÔøΩÔøΩ:9ÔøΩÔøΩUÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ-ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ/&ÔøΩvÔøΩjÔøΩÔøΩÔøΩ@)ÔøΩlÔøΩDpÔøΩef@' ;+ h ÔøΩÔøΩ3ÔøΩÔøΩ@ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ/ÔøΩoO;ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩhÔøΩ898ÔøΩ=ÔøΩTÔøΩ/ÔøΩcfÔøΩX;ÔøΩÔøΩfÔøΩpÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩ`ÔøΩÔøΩaz?f ÔøΩ_ÔøΩÔøΩÔøΩMÔøΩ	ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩGÔøΩ(ÔøΩÔøΩ!ÔøΩÔøΩFÔøΩÔøΩÔøΩ"""" 7ÔøΩ'=ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ	ÔøΩÔøΩÔøΩ xÔøΩoECÔøΩÔøΩÔøΩÔøΩSÔøΩÔøΩÔøΩÔøΩOÔøΩo]ÔøΩoÔøΩ.ÔøΩL ÔøΩ?ÔøΩA ÔøΩÔøΩXÚ†∑πÔøΩ~ÔøΩÔøΩ'&v&ÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ+ÔøΩÔøΩÔøΩÔøΩﬂä$ÔøΩÔøΩÔøΩÔøΩÔøΩSÔøΩÔøΩÔøΩÔøΩGohcaÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ:;ÔøΩÔøΩÔøΩmlÔøΩÔøΩÔøΩÔøΩ?ÔøΩ+4ÔøΩpÔøΩÔøΩÔøΩZ)'√∑]ÔøΩ5ÔøΩÔøΩÔøΩÔøΩÔøΩn@E'cÔøΩgÔøΩ?bÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩrÔøΩÔøΩÔøΩfÔøΩ331ÔøΩÔøΩÔøΩr[ÔøΩÔøΩÔøΩo#ÔøΩÔøΩ ÔøΩÔøΩ;ÔøΩÔøΩQÔøΩÔøΩdÔøΩ◊íÔøΩÔøΩs ÔøΩÔøΩÔøΩ&ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ&@ÔøΩÔøΩÔøΩÔøΩÔøΩ`rzsÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ:RN ÔøΩÔøΩ_ÔøΩÔøΩ n ÔøΩÔøΩÔøΩÔøΩÔøΩ	ÔøΩ(ÔøΩÔøΩ %#V ÔøΩÔøΩoÔøΩ`ÔøΩÔøΩÔøΩ8 ÔøΩÔøΩÔøΩÔøΩ[LÔøΩÔøΩ[LÔøΩﬂàÔøΩÔøΩÔøΩÔøΩePÔøΩÔøΩÔøΩ2ÔøΩÔøΩFoTÔøΩÔøΩÔøΩÔøΩ""ÔøΩ7ÔøΩÔøΩ9ÔøΩY:ÔøΩVrÔøΩ~ÔøΩÔøΩÔøΩFÔøΩÔøΩVÔøΩÔøΩÔøΩÔøΩ+ÔøΩÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩÔøΩÔøΩﬂÇÔøΩÔøΩÔøΩÎøíÔøΩŒåÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩNÔøΩÔøΩÔøΩÔøΩÔøΩKoÔøΩÔøΩ6ÔøΩ]ÔøΩhÔøΩÔøΩvyÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩAÔøΩ8ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩﬂêÔøΩÔøΩ9ÔøΩÔøΩÔøΩdÔøΩÔøΩÔøΩ,ÔøΩÔøΩoÔøΩÔøΩÔøΩÔøΩqÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩosÔøΩÔøΩÔøΩÔøΩÔøΩw1oŒ†ÔøΩQÔøΩÔøΩÔøΩÔøΩÔøΩ~fÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩ`cÔøΩGÔøΩÔøΩ'ÔøΩÔøΩVÔøΩÔøΩ€çÔøΩÔøΩÔøΩoÔøΩ_FÔøΩﬂΩÔøΩ9ÔøΩﬁ¶ÔøΩ6oÔøΩÔøΩÔøΩyÔøΩoÔøΩpÔøΩMÔøΩ/tÔøΩÔøΩYÔøΩoÔøΩoWÔøΩiÔøΩ(:Z:ÔøΩÔøΩ‚≠íÔøΩuÔøΩ]jÔøΩNÔøΩÔøΩ?NÏçñÔøΩ+ÔøΩÔøΩÔøΩŒøGÔøΩ-ÔøΩÔøΩOYGcÔøΩ√üÔøΩykÔøΩÔøΩÔøΩwÔøΩÔøΩ!ÔøΩ[PÔøΩ?ÔøΩ[VÔøΩ?ÔøΩ[_=~ÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩ0vvxkÔøΩÔøΩÔøΩ7ÔøΩÔøΩ]ÔøΩ_ÔøΩÔøΩt√≠,ÔøΩÔøΩy-kÔøΩÔ´ÖÔøΩ\ÔøΩÔøΩ&ÔøΩÔøΩÔøΩÔøΩ4RÔøΩÔøΩ=W:ÔøΩÔøΩ`ÔøΩÔøΩÔøΩ2ÔøΩ7nÔøΩÔøΩFz?ÔøΩÔøΩSÔøΩ}#zÔøΩ<iÔøΩÔøΩ	iMPj{ÔøΩz“èSÔøΩÔøΩkÔøΩ[ÔøΩÔøΩÔøΩÔøΩ?ÔøΩ ÔøΩ≈ßWÔøΩÔøΩzÔøΩÔøΩRÔøΩÔøΩÔøΩlÔøΩ&œ±wÔøΩBRÔøΩCÔøΩwÔøΩÔøΩÔøΩV7PÔøΩ}<xqOiÔøΩÔøΩCÔøΩÔøΩtÔøΩ>J-ÔøΩ_ÔøΩ<yÔøΩQÔøΩ6	ÔøΩ=ÔøΩ{ÔøΩ7ÔøΩÔøΩÔøΩÔøΩ9ÔøΩÔøΩW""ÔøΩ8Z8ÔøΩÔøΩ(ÔøΩOÔøΩMÔøΩÔøΩ_kÔøΩ,ÔøΩÔøΩ8d8ÔøΩÔøΩÔøΩ7ÔøΩÔøΩ3ÔøΩ""ÔøΩÔøΩÔøΩXKÔøΩ≈ÖÔøΩÔøΩKYLÔøΩ`ÔøΩD^c]ÔøΩ?xtdÔøΩPÔøΩÔøΩÔøΩVÔøΩ?ÔøΩÔøΩyÔøΩÔøΩ1ÔøΩiÔøΩ!ÔøΩfÔøΩÔøΩÔøΩÔøΩ⁄ù -a”öÔøΩÔøΩJ|ÔøΩSh.ÔøΩÔøΩÔøΩÔøΩÔøΩuÔøΩ5ÔøΩsÔøΩÔøΩÔøΩwÔøΩÔøΩÔøΩZÔøΩÔøΩÔøΩ:ÔøΩÔøΩ9ÔøΩQ;ÔøΩÔøΩ1ÔøΩcÔøΩ ÔøΩÔøΩÔøΩÔøΩ$ÔøΩ&ÔøΩbÔøΩ.ÔøΩÔøΩsÔøΩÔøΩÔøΩ+ÔøΩ2ÔøΩÔøΩÔøΩ∆≥ÔøΩrÔøΩÔøΩnÔøΩmÔøΩMÔøΩcÔøΩLÔøΩÔøΩ	&?) ÔøΩZÔøΩÔøΩFNÚë∏õ4ÔøΩOÔøΩUÔøΩmF`ÔøΩÔøΩzÔøΩuFpÔøΩIÔøΩ}gÔøΩÔøΩÔøΩaÔøΩÔøΩ;ÔøΩÔøΩÔøΩ%ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩnÔøΩ8U(ÔøΩnÔøΩÔøΩDdiÔøΩCÔøΩ)-ÔøΩ.ÔøΩ3;qÔøΩTÔøΩÔøΩÔøΩTHÔøΩÔøΩIÔøΩÔøΩLÔøΩÔøΩ)ÔøΩÔøΩ\ÔøΩÔøΩ]ÔøΩ~iÔøΩ	 ÔøΩmÔøΩÔøΩ	”°ÔøΩI8‘ºvfÔøΩÔøΩOsSÔøΩ~ÔøΩÔøΩ zÔøΩ$ÔøΩÔøΩ>ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ‹êÔøΩpL<ÔøΩÔøΩÔøΩIÔøΩÔøΩ()ÔøΩ^ÔøΩ√ÖÔøΩ[ÔøΩÔøΩ]ÔøΩddls;+”¶PyÔøΩÔøΩrLÔøΩÔøΩÔøΩ—´*ÔøΩ^A3ÔøΩ4ÔøΩÔøΩ:›∞ÔøΩX>ÔøΩ9EÔøΩÔøΩÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩmÔøΩqÔøΩÔøΩÔøΩÔøΩjÔøΩœ©ÔøΩÔøΩs=ÔøΩÔøΩÔøΩnÔøΩUÔøΩÔøΩ!5C~b:qsG`ÔøΩÔøΩ {ÔøΩÔøΩ$ÔøΩÔøΩmAÔøΩﬁøÔøΩ;ÔøΩ6ÔøΩÔøΩfo-ÔøΩÔøΩ'ÔøΩrÔøΩÔøΩI5ÔøΩÔøΩÔøΩGÔøΩÔøΩÔøΩ∆åÔøΩÔøΩ5ÔøΩ—∏ÔøΩ4/`ÔøΩkUÔøΩÔøΩÔøΩÔøΩÔøΩ""28Ï°ïÔøΩ⁄ôz2ÔøΩu{qÔøΩdeÔøΩÔøΩ3VuÔøΩ{MM3ÔøΩ)CÔøΩÔøΩTÔøΩÔøΩCÔøΩdXÔøΩÔøΩRhÔøΩÔøΩbEÔøΩ y6ÔøΩ]<ÔøΩHÔøΩ„ÆùÔøΩd÷ßtÔøΩ}[HaÔøΩÔøΩÔøΩÔøΩ,ÔøΩ\ÔøΩ)ÔøΩÔøΩÔøΩ)ÔøΩ*ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ)9JkÔøΩYÔøΩÔøΩÔøΩ]ÔøΩÔøΩÔøΩo9ÔøΩÔøΩy#ÔøΩÔøΩ\FÔøΩÔøΩÔøΩ}ÔøΩÔøΩÔøΩ{ÔøΩÔøΩT{ÔøΩVnÔøΩ  ÔøΩ$ÔøΩÔøΩNÔøΩ#ÔøΩÔøΩÔøΩ\2m~ÔøΩÔøΩÔøΩYÔøΩÔøΩUÔøΩÔøΩ/ÔøΩKÔøΩ^&KÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩhÚ∑ØëÔøΩÔøΩÔøΩ?ÔøΩ¬õÔøΩ2ÔøΩ^hV ÔøΩ|ÔøΩLÔøΩÔøΩ ÔøΩAAÔøΩa<~HÔøΩs.KÔøΩÔøΩKÔøΩÔøΩfÔøΩKN""MÔøΩÔøΩÔøΩÔøΩÔøΩ5ÔøΩ;ÔøΩÔøΩ7IÔøΩ-ÔøΩÔøΩ/OÔøΩ`ÔøΩÔøΩnÔøΩÔøΩÔøΩkÔøΩ?ÔøΩÔøΩÔøΩ!?ÔøΩzMÔøΩÔøΩFFÔøΩÔøΩÔøΩ	SeÔøΩÔøΩÔøΩU[ÔøΩÔøΩ8ÔøΩÔøΩÔøΩmaNtÔøΩÔøΩmZÔøΩBÔøΩÔøΩÔøΩÔøΩbÔøΩÔøΩÔøΩZ+ÔøΩÔøΩ,ÔøΩLÔøΩÔøΩÔøΩyÔøΩ[hÔøΩÔøΩÔøΩAÔøΩ	AÔøΩlÔøΩzwÔøΩ“ùÔøΩÔøΩXÔøΩÔøΩÔøΩÔøΩÔøΩ%TÔøΩÔøΩÔøΩÔøΩÔøΩ„ª°ÔøΩÔøΩ3ÔøΩuXÔøΩfÔøΩ≈µ_ÔøΩÔøΩÔøΩÔøΩeÔøΩpÔøΩÔøΩ1{ÔøΩÔøΩÔøΩÔøΩÔøΩe'ÔøΩvÔøΩÔøΩÔøΩ1ÔøΩaÔøΩ+3BÔøΩÔøΩÔøΩÔøΩ!ÔøΩÔøΩQÔøΩÔøΩnHFxÔøΩ{s-OÔøΩÔøΩ.ÔøΩÔøΩbnÔøΩÔøΩqDÔøΩÔøΩÔøΩeÔøΩcÔøΩÔøΩÔøΩ)yÔøΩ]ÔøΩ#ÔøΩÔøΩ%ÔøΩ!ÔøΩgIÔøΩBÔøΩÔøΩkŸã æ 0ÔøΩÔøΩKÔøΩÔøΩrloÔøΩÔøΩejÔøΩ{ﬂõÔøΩNÔøΩÔøΩWdÔøΩ4ÔøΩÔøΩM*ÔøΩ'ÔøΩLÔøΩ0ÔøΩdÔøΩ2)ÔøΩ""	\ÔøΩsF""5ÔøΩÔøΩp+]cÔøΩÔøΩÔøΩ~ÔøΩÔøΩ}-#_ÔøΩFx~ÔøΩ6G}iÔøΩcmÔøΩk|ÔøΩ1&QÔøΩÔøΩÔøΩ*\ÔøΩÔøΩnuÔøΩNÔøΩqyÔøΩÓù≤rzÔøΩhÔøΩ(ÔøΩ^ÔøΩ37ÔøΩOÔøΩ[ÔøΩÔøΩC""'dÔøΩCÔøΩÔøΩBÔøΩ<ETÔøΩÔøΩtÔøΩ!`/""KpÔøΩÔøΩÔøΩUsÔøΩÔøΩ0ÔøΩ,|ÔøΩÔøΩEÔøΩ2!ÔøΩ(>ÔøΩLÔøΩÔøΩÔøΩÔøΩ;_ÔøΩÔøΩhm>ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩS%UÔøΩQB€§=ÔøΩÔøΩP""ÔøΩlÔøΩ!R dÔøΩdÔøΩo*ÔøΩÔøΩÔøΩÔøΩzÔøΩÔøΩÔøΩ~dQFÔøΩÔøΩÔøΩÔøΩ)HÔøΩÔøΩÔøΩÔøΩEÔøΩÔøΩÔøΩÔøΩÔøΩGÔøΩÔøΩÔøΩ<ÔøΩÔøΩ›ù^ÔøΩ’£ÔøΩÔøΩaiÔøΩÔøΩÔøΩÔøΩ|ÔøΩÔøΩÔøΩDÔøΩAEÔøΩÔøΩÔøΩ/rÔøΩ5–ªÔøΩÔøΩÔøΩfÔøΩFÔøΩÔøΩÔøΩ)ÔøΩÔøΩÔøΩ~ÔøΩÔøΩÔøΩÔøΩ`b›êFÔøΩ#<ÔøΩƒ∫>ÔøΩÔøΩÔøΩm	ÔøΩÔøΩÔøΩ%P0ÔøΩÔøΩ{ÔøΩÔøΩÔøΩz–ΩÔøΩÔøΩ1ReÔøΩÔøΩa@ÔøΩÔøΩÔøΩ<ÔøΩÔøΩÔøΩÔøΩÔøΩËªæ‘µÔøΩÔøΩÔøΩTÔøΩ€•5 e1ÔøΩ]ÔøΩ?TÔøΩsÔøΩÔøΩmYXÔøΩZÔøΩLy1ÔøΩÔøΩÔøΩ;U8rÔøΩS|ÔøΩ@*lÔøΩÔøΩSÔøΩ	ÔøΩ.7ÔøΩz4ÔøΩmÔøΩy67}vÔøΩ–ΩÔøΩÔøΩÔøΩ÷ßÔøΩ/ÔøΩt?ÔøΩÔøΩLÔøΩÔøΩÔøΩ)ÔøΩ∆åÔøΩÔøΩÔøΩ%o  	’á\[ÔøΩÔøΩÔøΩwÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ;O6 ÔøΩ,ÔøΩ%BtÔøΩÔøΩ1{<ÔøΩ7aÔøΩÔøΩ`ÔøΩÔøΩÔøΩLÔøΩﬂëÔøΩÔøΩÔøΩ⁄â<ÔøΩDÔøΩÔøΩkÔøΩc>ÔøΩÔøΩ!ÔøΩ ÄÔøΩR%ÔøΩ{ ÔøΩN;ÔøΩÔøΩPÔøΩ∆ºq>xÔøΩ^eÔøΩÔøΩÔøΩÔøΩÔøΩ~+ÔøΩzÔøΩÔøΩÔøΩÔøΩ-ÔøΩÔøΩÔøΩ,lKÔøΩu`ÔøΩÔøΩ<HÔøΩÔøΩÔøΩ{jAÔøΩÔøΩz<ÔøΩUÔøΩÔøΩÔøΩ""ZÔøΩÔøΩÿëÔøΩÔøΩYÔøΩ:2ÔøΩÿñÔøΩQ ÔøΩ.{ÔøΩÔøΩÔøΩÔøΩ*ÔøΩ@ÔøΩÔøΩU8ÔøΩ…Ä6etÔøΩrÔøΩÔøΩÔøΩÔøΩÔøΩ7ÔøΩÔøΩ`ÔøΩÔøΩÔøΩ≈ß¬êÔøΩrÔøΩÔøΩ@ > ÔøΩÔøΩÔøΩI ÔøΩÔøΩ>nÔøΩ%ÔøΩÔøΩÔøΩ	2ÔøΩÔøΩÃ∑ÔøΩ∆∑JÔøΩ PcH vÔøΩuÔøΩh8fÔøΩÔøΩﬂó[ÔøΩÔøΩQÔøΩÔøΩ+ÔøΩ›Å	ÔøΩÔøΩnpÔøΩÔøΩqÔøΩf#I#ÔøΩ^LvÔøΩÔøΩ=ÔøΩsÔøΩÔøΩA-z¬∞ÔøΩk""ÔøΩÔøΩR ÔøΩGÔøΩW∆¶ÔøΩCIÔøΩNmÔøΩÔøΩÔøΩÔøΩÔøΩeÔøΩÔøΩ|ÔøΩÔøΩÔøΩÔøΩÔøΩAÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ87<ÔøΩdÔøΩÔøΩQÔøΩÔøΩ‘©ÔøΩÔøΩPÔøΩÔøΩFWYOÔøΩTAÔøΩOÔøΩÔøΩÔøΩlM⁄ØÔøΩ’ûmX=j⁄ØÔøΩÔøΩŸãÔøΩ+ÔøΩÔøΩÔøΩÿ∏ÔøΩ	lÔøΩpÔøΩ;'ÔøΩÔøΩ>!ÔøΩm'«®yeÔøΩr-ÔøΩvk^28ÔøΩÔøΩÔøΩ~4bpÔøΩÔøΩ}JÔøΩuÔøΩbÔøΩÔøΩZYÔøΩ4xÔøΩpÔøΩÔøΩ73{ÔøΩÔøΩ>ÔøΩ*ÔøΩhÔøΩÔøΩÔøΩFÔøΩ6ÔøΩÔøΩ:OvFÔøΩÔøΩBÔøΩÔøΩ(p ©vj|ÔøΩ3ÔøΩÔøΩSFÔøΩÔøΩbÔøΩ,ÔøΩ<ÔøΩ6ÔøΩÔøΩÔøΩPc}ÔøΩÔøΩÔøΩxÔøΩU}ÔøΩ$UÔøΩÔøΩÔøΩÔøΩÔøΩ2'JÔøΩÔøΩGdÔøΩÔøΩﬁóÔøΩ ÔøΩb?ÔøΩÔøΩÔøΩpÔøΩ ÔøΩÔøΩm$ÔøΩBÔøΩ~ÔøΩWÔøΩÔøΩÔøΩÔøΩÔøΩHÔøΩ~ÔøΩPÔøΩÔøΩÔøΩ0ÔøΩZÔøΩM!√Ø@ÔøΩÔøΩ=<#ÔøΩÔøΩÔøΩIÔøΩ$ÔøΩÔøΩÔøΩÔøΩÔøΩEÔøΩÔøΩ#ÔøΩB3ÔøΩzk(ÔøΩÔøΩ(nÔøΩgÔøΩcÔøΩ*AT;ÔøΩ^ÔøΩoÔøΩFÔøΩ&ÔøΩ#ÔøΩ{r&ÔøΩÔøΩ/ÔøΩÔøΩ ÔøΩ|ÔøΩ<rÔøΩ;eÔøΩÔøΩ| ÔøΩÔøΩxe""x+or5^ÔøΩÔøΩ5oÔøΩ»ñCxÔøΩÔøΩFÔøΩÔøΩvÔøΩ%ÔøΩLÔøΩÔøΩL.J+SÔøΩsÔøΩ–´ÔøΩÔøΩ`#ŒàÔøΩqÔøΩ3ÔøΩÔøΩkxÔøΩÔøΩÔøΩÔøΩx_ÔøΩcTÔøΩLQÔøΩtÔøΩ4ÔøΩWÔøΩÔøΩ?ÔøΩJxÔøΩÔøΩYDÔøΩÔøΩÔøΩ/>tÔøΩ[ÔøΩ""ÔøΩ{ÔøΩÔøΩÔøΩp)hNÔøΩE1ÔøΩÔøΩ(bÔøΩÔøΩ4ÔøΩ69ÔøΩÔøΩÔøΩ)ÔøΩÔøΩÔøΩÔøΩCÔøΩÔøΩ@ÔøΩ&ÔøΩGÔøΩFÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ6'ÔøΩÔøΩ3Y'[ ÔøΩÔøΩÔøΩpP""ÔøΩGÔøΩ2ÔøΩÔøΩÔøΩtjÔøΩYÔøΩÔøΩÔøΩ&hÔøΩ+ÔøΩÔøΩQÔøΩ`bHË™äf^ÔøΩÔøΩ7yƒå ÔøΩÔøΩÔøΩÔøΩÔøΩmÔøΩUÔøΩÔøΩBÔøΩiÔøΩlÔøΩTÔøΩzIz:LjÔøΩÔøΩÔøΩK$LÔøΩLÔøΩÔøΩ1…ûÔøΩ~ZÔøΩÔøΩZÔøΩÔøΩq*k}ÔøΩÔøΩoÔøΩ$ÔøΩÔøΩÔøΩÔøΩ1KÔøΩFÔøΩÔøΩÔøΩ$4z3ÔøΩ ÔøΩ&ÔøΩJKÔøΩÔøΩL'R¬æMLAÚñôª$ÔøΩÔøΩpÔøΩ.ÔøΩÔøΩ«ólÔøΩXÔøΩ7`t√ú:ÔøΩAÔøΩ“íÔøΩ!ÔøΩ}`ÔøΩÔøΩB ÔøΩÀçÔøΩs~ÔøΩÔøΩQ lÔøΩ ÔøΩÔøΩ[ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩwT ÔøΩÔøΩ|D$ÔøΩÔøΩchÔøΩÔøΩÔøΩo-ÔøΩ(ÔøΩÔøΩÔøΩUÔøΩULÔøΩÔøΩÔøΩÔøΩÔøΩ"";2ÔøΩÔøΩÔ≠∏ÔøΩÔøΩÔøΩ^ÔøΩyÔøΩy÷ïÔøΩÔøΩÔøΩÔøΩÔøΩ;-!UÔøΩjÔøΩvÔøΩnifÔøΩ%ÔøΩ`ÚûÅäÔøΩgÔøΩÔøΩ,ÔøΩ!r""ÔøΩ<ÔøΩŒæÔøΩÔøΩÔøΩ ÔøΩOÔøΩÔøΩﬁëÔøΩÔøΩ7OÔøΩÔøΩ	c]ÔøΩÔøΩmPeSpCÔøΩMÔøΩÔøΩzÔøΩÔøΩdÔøΩÔøΩÔøΩÔøΩÔøΩ IÔøΩwÔøΩ~ÔøΩOÔøΩÔøΩÔøΩ{sÔøΩH(HÔøΩÔøΩ◊ìﬂ¥ÔøΩÔøΩÔøΩÔøΩ q?ÔøΩMs@ÔøΩÔøΩ&	ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ13]\ÔøΩ√∏ÔøΩÔøΩK—£?ÔøΩÔøΩÔøΩ>ÀΩÔøΩY@ÔøΩ1KÔøΩÔøΩI>*xÔøΩÔøΩÔøΩÔøΩÔøΩeÔøΩ0ÔøΩﬁîÔøΩÔøΩp}iÔøΩ 6-ÔøΩ3D!ÔøΩÔøΩÔøΩ4ÔøΩÔøΩÔøΩCEÔøΩd(8WÔøΩÔøΩVÔøΩm3ÔøΩÔøΩÔøΩÔøΩS ÔøΩrÔøΩÔøΩÔøΩÔøΩ,ÔøΩÔøΩYo≈ßÔøΩDÔøΩ~ÔøΩÔøΩ""iÔøΩÔøΩ$ÔøΩÔøΩÔøΩ9eÔøΩÔøΩ[XÔøΩ<G ÔøΩÔøΩ^u0BÔøΩÔøΩ~ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ<qÔøΩ~ZpÔøΩÔøΩÔøΩÔøΩ&j8~ÔøΩÔøΩÔøΩJ{ŒëÔøΩÔøΩ*ÔøΩÔøΩÔøΩ{w’©`Ÿï“Å[ÔøΩÔøΩmÔøΩÔøΩFÔøΩÔøΩ0ÔøΩX""ÔøΩÔøΩÔøΩA]zÔøΩÔøΩ|›≥	S*}ÔøΩÔøΩ~9ÔøΩÔøΩUÔøΩÔøΩÔøΩÔøΩmB*-Àå)ÔøΩ&W?,ÔøΩF2ÔøΩnT4ÔøΩ‘ÉÔøΩÔøΩÔøΩbjÔøΩ4=ÔøΩÔøΩPÔøΩQÔøΩgfÔøΩ9ÔøΩ<%ÔøΩ]ÔøΩJfÔøΩÔøΩOeÔøΩRÔøΩÔøΩN(4ÔøΩWÔøΩ}AÔøΩqÔøΩÔøΩÔøΩfcÔøΩÔøΩjÔøΩ5bÔøΩJÔøΩyÔøΩlÔøΩ'ÔøΩ97bÔøΩÔøΩ7%ÔøΩuÔøΩtÔøΩ–ØÔøΩ.}ÔøΩÔøΩNÔøΩÔøΩ)FÔøΩX=(wzÔøΩ	l7DSÔøΩ‹éqÔøΩTNÈçôÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩzÔøΩÃíÔøΩl\<OÔøΩÔøΩÔøΩÔøΩÔøΩ9c+EÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩrkzÔøΩÔøΩ'<ÔøΩvÔøΩÔøΩ*ÔøΩUÔøΩ#ÔøΩKÔøΩÔøΩÔøΩ ÔøΩÔøΩOsEÔøΩÔøΩOÔøΩÔøΩ(ÔøΩSÔøΩÔøΩzÔøΩ“ÜÔøΩÔøΩ`]ÔøΩÔøΩ2NÔøΩRÔøΩÔøΩÔøΩÔøΩelZÔøΩhlÔøΩÔøΩ ÔøΩuÔøΩhÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ4e~nÔøΩÔøΩÔøΩXmÔøΩ[wÔøΩSÔøΩÔøΩ NÔøΩÔøΩÔøΩÔøΩ-ÔøΩÔøΩ:ÔøΩaÔøΩ<ÔøΩÔøΩÔøΩpÔøΩ#Œ†j‘†ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ>kÔøΩz^ÔøΩNt=ÔøΩÔøΩIf~ÔøΩtÔøΩÔøΩÔøΩb	(X:%ZÔøΩÔøΩÔøΩÔøΩÔøΩKCÔøΩÔøΩWÔøΩÔøΩ,ÔøΩÔøΩ~ÔøΩ$ÔøΩÔøΩBÔøΩÔøΩÔøΩÔøΩ@{ÔøΩÔøΩ`√∏+ÔøΩÔøΩÔøΩ ÔøΩ,G,rB9ÔøΩqhÔøΩTÔøΩÔøΩÔøΩmKnyÔøΩOÔøΩRŸ£ÔøΩ÷êÔøΩ?%ÔøΩÔøΩ⁄ï%4ÔøΩÔøΩË°´2SÔøΩÔøΩÔøΩÔøΩy.ÔøΩÔøΩ$ÔøΩÔøΩÔøΩÔøΩÔøΩ%x	bÔøΩÔøΩÔøΩgÔøΩÔøΩPÔøΩ\jÔøΩÔøΩÔøΩÔøΩÔøΩo9ÔøΩÔøΩNÔøΩÔøΩÔøΩ %ÔøΩ(ÔøΩ%ÔøΩÔøΩMZÔøΩc$,ÔøΩk2ÔøΩÔøΩÔøΩRÔøΩOÔøΩÔøΩÔøΩ+ÔøΩGÊõ¢:ÔøΩÔøΩyÔøΩaÔøΩÔøΩ ÔøΩÔøΩÔøΩk8ÔøΩÔøΩGÔøΩkÔøΩBk]ÔøΩJÔøΩIhÔøΩQÔøΩÔøΩ‚†ÆÔøΩ3/ÔøΩ=xÔøΩ)tÔøΩAÔøΩÔøΩyÔøΩÔøΩcÔøΩ[[nÔøΩÔøΩÃèÔøΩ95ÔøΩ+3ÔøΩ3t%ÔøΩ2tR;8o-)ÔøΩ_ÔøΩtÔøΩsw¬©ÔøΩ äÔøΩD0ÔøΩV|wÔøΩÔøΩ{	ÔøΩÔøΩÔøΩÔøΩ'ÔøΩNÔøΩ ÔøΩÔøΩ_ÔøΩÔøΩcnU=i>1ÔøΩÔøΩOÔøΩÔøΩ|ÔøΩÀëÔøΩAÔøΩ|«îÔøΩbÔøΩÔøΩÔøΩÔøΩEÔøΩÔøΩ>QÔøΩÔøΩÔøΩÔøΩÔøΩ/ÔøΩDCyÔøΩ=C?TÔøΩvÔøΩÔøΩÔøΩ!ÔøΩ_&ÔøΩÔøΩ)=ÔøΩ.UÔøΩÔøΩu«≠ÔøΩ@ÔøΩ~1SeÔøΩ&c~EÔøΩW«≤ÔøΩq\/_ÔøΩml""|ÔøΩ|ÔøΩÔøΩÔøΩÔøΩ=ÔøΩÔøΩÕêÔøΩÔøΩPIË≠Æ	iÔøΩÔøΩwÔøΩt]‹èÔøΩÔøΩTwÔøΩ ""ÔøΩZ ÔøΩÔøΩÔøΩÔøΩJÔøΩÔøΩ_ÔøΩp aÔøΩ ﬂø ÔøΩÔøΩtÔøΩÔøΩÔøΩÔøΩÔøΩR5ÔøΩÔøΩ ÔøΩ ÔøΩÔøΩS5WÔøΩ0u2ÔøΩ?4ÔøΩl ÔøΩ#}ÔøΩ,ÔøΩÔøΩmÔøΩÔøΩBÔøΩPÔøΩÔøΩ)ÔøΩ9ÔøΩÔøΩZxÔøΩsÔøΩÔøΩÔøΩ|ÔøΩ8`ÔøΩ:'ÔøΩÔøΩÔøΩCÔøΩFiÔøΩ$EeIyœÑÔøΩÔøΩÔøΩZÔøΩÔøΩrÔøΩÔøΩÔøΩHH	:ÔøΩkÔøΩÔøΩÔøΩ@$6>ÔøΩ6kÔøΩ~ÔøΩM?$ÔøΩ·ÜèÔøΩÔøΩÔøΩ:g”üÔøΩypÔøΩÔøΩRÔøΩÔøΩPym€Ç#hÔøΩÔøΩÔøΩÔøΩiÔøΩpÔøΩÔøΩ'_ÔøΩjiÔøΩsÔøΩQÔøΩfÔøΩÔøΩÔøΩJ8($ÔøΩEÔøΩmÔøΩyÔøΩq:‘¢^ÔøΩEÔøΩr%ÔøΩÔøΩÔøΩ»∑NUfÔøΩQÔøΩÔøΩÔøΩÔøΩÔøΩsÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ<Vœ¶÷ÉVÔøΩÔøΩXÔøΩ}s""ÔøΩÔøΩi'a ∑/ÔøΩ(-ÔøΩcÔøΩÔøΩÔøΩÔøΩ÷ßÔøΩmZÔøΩ ÔøΩÔøΩÔøΩÔøΩlÔøΩ{nÔøΩÔøΩÔøΩEÔøΩÔøΩ@ÔøΩ3ÔøΩÔøΩyjÔøΩÔøΩÔøΩ{s08ny'ÔøΩÔøΩ nÔøΩ6gÔøΩ}«â]i_W8cmÔøΩÔøΩÔøΩwdÔøΩÔøΩ:3ÔøΩÔøΩKÔøΩÔøΩ ÔøΩYÔøΩ;ÔøΩÔøΩÔøΩÔøΩÔøΩA^\V/ÔøΩ8ÔøΩ--ÔøΩ[ ÔøΩe|ÔøΩÔøΩTÈ≠¢ÔøΩ#ÔøΩœØÔøΩÔøΩEF:]( ÔøΩ}ÔøΩÔøΩÔøΩ Æ!-CÔøΩÔøΩ_IÔøΩ4ÔøΩÔøΩ|y*ÔøΩ8Œ¢ 5!(?ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ$LÔøΩ+}ÔøΩÔøΩÔøΩÔøΩaÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩÔøΩnÔøΩgÔøΩEÔøΩÔøΩÔøΩ!ÔøΩÔøΩÂ±õÔøΩHÔøΩ;ÔøΩ/; ÔøΩ@Vs^ÔøΩÔøΩÔøΩÔøΩÔøΩ%ÔøΩÔøΩÔøΩÔøΩeD}W}\1a+8ÔøΩ%ÔøΩYÔøΩ8ÔøΩÔøΩGÔøΩÔøΩÔøΩq9wÔøΩ«ÖXÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ÷ØÔøΩÔøΩÔøΩrnÔøΩÔøΩsÔøΩÔøΩvD[ÔøΩÔøΩ0ÔøΩ""@ÔøΩnÔøΩ0ÔøΩC]ÔøΩdÔøΩU'ÔøΩÔøΩÔøΩJ	⁄ØÔøΩÔøΩÔøΩ@ÔøΩ[ÔøΩÁâà|ÔøΩÔøΩ&ÔøΩ@DÔøΩÔøΩCÔøΩMÔøΩÔøΩÔøΩÔøΩHÔøΩÔøΩ|6[\ÔøΩÔøΩÕòÔøΩÔøΩÔøΩIÔøΩÔøΩ |ÔøΩ NÔøΩK5""ÔøΩ8ÔøΩÔøΩÔøΩHÔøΩ6E.Ãª\ÔøΩÔøΩ rÔøΩ`ÔøΩ€¨\ÔøΩ…º*,ÔøΩNÔøΩÔøΩÔøΩ.:ÔøΩÔøΩÔøΩÔøΩf@;ÔøΩJÔøΩui.ÔøΩÔøΩÔøΩ–ïKÔøΩÔøΩÔøΩq`ÔøΩÔøΩ]jÔøΩ`ÔøΩ:eÔøΩÔøΩÔøΩ!B/ÔøΩÔøΩ&ÔøΩP.xÔøΩÔøΩÔøΩ=Q—üyaÔøΩÔøΩ7LÔøΩ$_ÔøΩÔøΩ'UD+ÔøΩ!ÔøΩ{gÔøΩGuÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ…™ÔøΩeÔøΩÔøΩPPÔøΩÔøΩ^0ÔøΩÔøΩÔøΩÔøΩCLH3PÔøΩÔøΩÔøΩ(“§b ÔøΩHk SfÔøΩÔøΩÔøΩ4m""(ÔøΩÔøΩÔøΩÔøΩ&ÔøΩrÔøΩSÔøΩZÔøΩiFÔøΩÔøΩMÔøΩ._ÔøΩÔøΩÔøΩÔøΩÿµAÔøΩÔøΩ5ÔøΩ]ÔøΩÔøΩÏ∫ÄY”ú`ÔøΩÔøΩX?>ÔøΩ ÔøΩ?-7ÔøΩLÔøΩÔøΩeÔøΩ)OÔøΩ1ÔøΩ—ÖÔøΩBkÔøΩLÔøΩ^60ÔøΩg4ÔøΩÔøΩ.B>ÔøΩÔøΩ>baÔøΩÔøΩ,~pÔøΩÔøΩbÔøΩÔøΩÔøΩÔøΩÔøΩ-ÔøΩ ÔøΩ5tÔøΩÔøΩY–ºAÔøΩhÔøΩÔøΩhÔøΩSÔøΩÔøΩ S: ÔøΩ2(>0ÔøΩÔøΩÔøΩÔøΩ$4/ÔøΩÔøΩÔøΩ<BÔøΩB ÔøΩaÔøΩÔøΩÔøΩÔøΩÔøΩÔíïÔøΩ+:?H7ÔøΩJ,ÔøΩÔøΩÔøΩI1ÔøΩ4…§KÔøΩÔøΩŒ®ÔøΩÔøΩÔøΩ\ÔøΩÔøΩXÔøΩ{ÔøΩÔøΩÔøΩ;ÔøΩ	Q.ÔøΩ(JÔøΩÔøΩÔøΩUARÔøΩÔøΩÔøΩaÔøΩÔøΩZ,ÔøΩÔøΩ GDÔøΩÔøΩoh7ÔøΩZÔøΩW~}IdœØ*ÔøΩÔøΩÔøΩrEÔøΩ%ÔøΩÔøΩÔøΩqÔøΩÔøΩ%	ÔøΩlÔøΩ+=/ÔøΩÔøΩJ0,tÔøΩÔøΩÔøΩBÔøΩ6ÔøΩÔøΩAÔøΩÔøΩÔøΩF]ÔøΩÔøΩÔøΩÔøΩ9nZÔøΩÔøΩÔøΩÔøΩj€éÔøΩÔøΩÔøΩÔøΩÔøΩFÔøΩ«© jÔøΩÔøΩAÔøΩÔøΩÔøΩ ~ÔøΩSÔøΩ_MÔøΩÔøΩ /ÔøΩÔøΩÔ™≤)!ÔøΩÔøΩyÔøΩ-KYÔøΩMYÔøΩÔøΩÔøΩxXEEcy>ÔøΩÔøΩÔøΩÔøΩÔøΩ`ÔøΩ	rÔøΩwÕáÔøΩÔøΩa{ÔøΩ?<»çÔøΩÔøΩ7ÔøΩRxÔøΩÔøΩÔøΩ:gÔøΩ`ÔøΩ}ÔøΩVÔøΩﬂ§eÔøΩÔøΩ2:.&sÔøΩ-ÔøΩe>fhÔøΩYÔøΩÔøΩ1ÔøΩyÔøΩÔøΩÔøΩ-ÔøΩÔøΩKw9ÔøΩ[mÔøΩÔøΩÔøΩXÔøΩÔøΩÔøΩ ?vÔøΩ<<ÔøΩu ÔøΩ{ÔøΩzÔøΩÔøΩÔøΩ$ÔøΩÔøΩﬂ©1m4ÔøΩÔøΩÔøΩhÔøΩt1WÔøΩÔøΩÔøΩÔøΩÔøΩ›ª8;/ÔøΩumÔøΩ	2ÔøΩ∆áH1_$ÔøΩIÔøΩÔøΩ@[td0=\!ÔøΩXÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩwÔøΩ0ÔøΩÔøΩrÔøΩÔøΩzO%ÔøΩÔøΩ}2ÔøΩﬁõ3ÔøΩÔøΩÔøΩÔøΩ ÔøΩ }O: VÔøΩÔøΩheÔøΩ'ÔøΩpKÔøΩpxÔøΩÔøΩ@ÔøΩ.L%ÔøΩÔøΩBÔøΩÔøΩÔøΩ∏∂©ÔøΩ;DÔøΩÔøΩ1yÔøΩ;ÔøΩF(bÔøΩÔøΩwÔøΩDÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ{tÔøΩÔøΩÔøΩ$IG`.uÔøΩrÔøΩFÔøΩ.ÔøΩ-ÔøΩÔøΩÔøΩ)ÔøΩÔøΩ%a*ÔøΩ>ÔøΩ4ÔøΩÔøΩÔøΩ7 ÔøΩ—èAÔøΩPÔøΩÔøΩÔøΩÔøΩ\O!ÔøΩÔøΩÔøΩ%ÔøΩÔøΩ$?∆ÇÔøΩ y,%ÔøΩ–ÉÔøΩ_ÔøΩÔøΩÔøΩÔøΩÔøΩA`jFÔøΩ>ÔøΩ@ÔøΩ⁄•ÔøΩ]ÔøΩÔøΩ ìIÔøΩ!ÔøΩÔøΩJÔøΩ«åÔøΩ.ÔøΩ9ÔøΩqwr’ë&ÔøΩ ÔøΩ)ÔøΩgfÔøΩBÔøΩVÔøΩ4ÔøΩÔøΩcÔøΩ%ÔøΩmÔøΩ”óÔøΩ}NÔøΩ@ÔøΩ ÔøΩYÔøΩqÔøΩyÔøΩYÔøΩÔøΩ:ÔøΩ[ÔøΩ&ÔøΩÔøΩÎ∏âÔøΩFÔøΩÔøΩÔøΩÔøΩWS@ÔøΩÔøΩÔøΩgÔøΩm8ÔøΩj,ÔøΩÔøΩ[NÔøΩÔøΩK\ÔøΩÔøΩTHÔøΩRÔøΩÔøΩBÔøΩ.tÔøΩ7ÔøΩ~<>ÔøΩÔøΩnÔøΩYXŒâmÔøΩ^ÔøΩcÔøΩOÔøΩ^ÔøΩÔøΩgÔøΩxÔøΩ@ÔøΩ>ÔøΩ8ÔøΩÃö»éÔøΩ7 “ì: ÔøΩÔ∞¨ÔøΩﬁΩÔøΩÔøΩ?ÔøΩNÔøΩ?œ∏""ÔøΩ0MÔøΩ ÔøΩMÔøΩÔøΩÔøΩvÔøΩ]ÔøΩGÔøΩ= =ÔøΩÔøΩÔøΩ[ÔøΩRZ‹âÔøΩÔøΩÔøΩ+ÔøΩ(ÔøΩ~[&ÔøΩNXÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩrÔøΩQ7cfÔøΩ E!ÔøΩÔøΩÔøΩvÔøΩÔøΩÔøΩÔøΩMnVÔøΩ`-ÔøΩfUÔøΩÔøΩYÔøΩÔøΩ:&eÔøΩjcj=sÔøΩ«üÔøΩkEÔøΩÔøΩb,MÔøΩ∆´ÔøΩZÔøΩaÔøΩÔøΩÔøΩTÔøΩ/GÔøΩÕè VoÔøΩÔøΩ})!ÔøΩÔøΩ)ÔøΩÕµÔøΩÔøΩÔøΩubÔøΩÔøΩ*D^ ÔøΩYÔøΩÔøΩÔøΩ4LÔøΩÔøΩÔøΩ2 8#y?KwÔøΩÔøΩ>4ÔøΩÔøΩÔøΩÔøΩÔøΩjP¬êÔøΩÔøΩÔøΩqqx>yhÔøΩÔøΩÔøΩ«ÇÔøΩCÔøΩÔøΩ""F|ÔøΩ>K%ÔøΩÔøΩÔøΩ_ÔøΩ‹∏ÔøΩÔøΩÔøΩÔøΩDÔøΩÔøΩÔøΩ_ÔøΩ}R[ÔøΩdÔøΩx`ÔøΩd,‘ΩEÔøΩBÔøΩÔøΩÔøΩÔøΩSÔøΩZNÔøΩ)/ÔøΩÔøΩt >ÔøΩ0'UÔøΩÔøΩ	aÔøΩÔøΩm`ÔøΩ0 -vÔøΩjÔøΩ√çÔøΩlÔøΩÔøΩÔøΩÔøΩ=""/&ÔøΩÔøΩlÔøΩÔøΩ9ÔøΩÔøΩÔøΩƒ¥ÔøΩÔøΩÔøΩÔøΩÔøΩ;WÔøΩ wÔøΩÔøΩiÔøΩÔøΩU0ecvÔøΩ1ÔøΩ{ÔøΩÔøΩÔøΩÔøΩ‡®æÔøΩÔøΩ&ÔøΩ.ÔøΩÔøΩÔøΩÔøΩ&ÔøΩ4`VÔøΩdÔøΩÔøΩbÔøΩÔøΩÔøΩÔøΩvÔøΩÔøΩÔøΩmÔøΩ(#BVDÔøΩFRb+ÔøΩ ÔøΩÔøΩÔøΩ$ÔøΩqÔøΩÔøΩÔøΩF5ÔøΩÔøΩMGÔøΩÔøΩgÔøΩO`‘ßÔøΩÔøΩÔøΩmZYbÔøΩÔøΩ7wÔøΩdtÔøΩ[ÔøΩÔøΩÔøΩfÔøΩÔøΩ]QÔøΩ9ÔøΩkÔøΩÔøΩÔøΩÔøΩÔøΩ/ÔøΩkÔøΩÔøΩƒ≠ÔøΩÔøΩ;ÔøΩÔøΩt<fÔøΩ#ZTÔøΩÔøΩÔøΩiuÔøΩqÔøΩFYÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩXÔøΩÔøΩ[] çÔøΩÔøΩÔøΩÔøΩÔøΩ=ÔøΩ4/ÔøΩVeSC+RÔøΩn~YfpÔøΩx√ª~el€æT=ÔøΩ}DÔøΩ|eFÔøΩÔøΩÔøΩ-ÔøΩ'ÔøΩkÔøΩÔøΩ	ÔøΩbÔøΩÔøΩÔøΩÔøΩÔøΩRlÔøΩÔøΩÔøΩÔøΩPÔøΩÔøΩ^ÔøΩ[SÔøΩv#onÔøΩÔøΩCÔøΩÔøΩÔøΩÔøΩÔøΩi47ÔøΩu/ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩwÔøΩSÔøΩ>bÔøΩÔøΩjÔøΩ ÔøΩ <ÔøΩÔøΩÔøΩ~:ÔøΩWM'ÔøΩ[ÔøΩÔøΩ ÔøΩ`ÔøΩ≈¨ÔøΩ'}*ÔøΩZ.3-ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩhÔøΩÔøΩIÔøΩÔøΩ&ÔøΩ$ÔøΩ›Ø4fÔøΩÔøΩÔøΩÔøΩbÔøΩÔøΩÔøΩÔøΩÔøΩtÔøΩpÔøΩ`ÔøΩÔøΩÔøΩ	ÔøΩÔøΩÔøΩYÔøΩÔøΩÔøΩ»ÆÔøΩ=jCÔøΩ#*ÔøΩ-!PÔøΩ1ÔøΩlÔøΩ√ÅÔøΩCdÔøΩÔøΩyÔøΩI/€óÔøΩÔøΩÔøΩ[ÔøΩÔøΩj^ÔøΩsÔøΩ4ÔøΩ.- ÔøΩ√åÔøΩG2ÔøΩÔøΩ ÔøΩ#kÔøΩÔøΩ<,NÔøΩÔøΩCÔøΩ&ÔøΩÔøΩÔøΩwNDÔøΩÔøΩ“ìÔøΩ\ÔøΩÔøΩ<ÔøΩC+ÔøΩ!ÔøΩ;&ÔøΩ%YÔøΩQÔøΩ]ÔøΩÔøΩlÔøΩÃÑÔøΩHÔøΩPÔøΩÔøΩÔøΩÔøΩVe=vMÔøΩb»Æ6ÔøΩÔøΩ1bÔøΩ«¢ÔøΩKxÔøΩÔøΩÔøΩÔøΩ'ÔøΩÔøΩoÔøΩÔøΩ/kÔøΩGÔøΩCÔøΩÔøΩÔøΩuN gs«ú/ÔøΩ9ÔøΩVhÔøΩÔøΩÔøΩcÔøΩP3NÔøΩ{D:bTÔøΩÔøΩÔøΩÔøΩÔøΩ%ÔøΩ6ÔøΩÔøΩÔøΩŸ¢&ÔøΩ>ÔøΩJÔøΩsÔøΩÔøΩÔøΩ–π`ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ~ÔøΩ2ÔøΩavÔøΩÔøΩm9ÔøΩgÔøΩÔøΩ ÔøΩÔøΩ5ÔøΩMÔøΩÔøΩ~ÔøΩm/ÔøΩ√Ä1' ÔøΩÔøΩSÔøΩÔøΩÔøΩ}ÔøΩÔøΩoÔøΩyÔøΩÔøΩMÔøΩ&ÔøΩ!ZÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩrÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ""tDÔøΩÔøΩ( ÔøΩPÔøΩÔøΩÔøΩÔøΩ%ÔøΩt€ÄÔøΩ[ÔøΩﬁ≤ÔøΩÔøΩ|ÔøΩÔøΩÔøΩkÔøΩ)ÔøΩÔøΩ)ÔøΩ”ù""ÔøΩÔøΩmÔøΩ8ÔøΩZBÔøΩ~ÔøΩÔøΩÔøΩÔøΩl$bÔøΩ{)ÔøΩÔøΩ·ü≥gÔøΩmÔøΩÀ∂e1ÔøΩ'ÔøΩ ÔøΩ1ÔøΩA(00¬õÔøΩÔøΩÔøΩT1C.1C-,8ÔøΩÔøΩÔøΩ_;	yÔøΩÔøΩÔøΩxeÔøΩjp{|ÔøΩÔøΩ) ÔøΩ'ÔøΩÔøΩ/~”Ç0m3ÔøΩVÔøΩÔøΩ…åÔøΩ>ÔøΩÔøΩÔøΩÔøΩÍΩÉÔøΩ&ÔøΩÔøΩ[ÔøΩ~ÔøΩghÔøΩÔøΩ5ÔøΩpÎá≤ÔøΩÔøΩÔøΩÔøΩ$’ñÔøΩÔøΩÔøΩ\ÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩ ZÔøΩyÔøΩÔøΩÔøΩcÔøΩÔøΩ#_ÔøΩÔøΩÔøΩ(ÔøΩBtkÔøΩiÔøΩÔøΩ~ÔøΩ∆ëH]ÔøΩcÔøΩTÔøΩ<ÔøΩÔøΩÔøΩhÔøΩ$ÔøΩÔøΩeÔøΩÔøΩ8ÔøΩÔøΩ""ÔøΩ °ÔøΩÔøΩhxÔøΩÔøΩÔøΩÔøΩÔøΩhÔøΩ1.ÔøΩ=(ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩCÔøΩÔøΩm*ÔøΩÔøΩQJl]QÔøΩ1ÔøΩÔøΩÔøΩ\ÔøΩ03dÔøΩ!ÔøΩÔøΩÔøΩÔøΩÔøΩFmÔøΩBÔøΩÔøΩ_ÔøΩÔøΩ@KÔøΩn5ÔøΩÔøΩÔøΩÔøΩnÔøΩÔøΩÔøΩ◊èÔøΩÔøΩ`ÔøΩÔøΩÔøΩÔøΩUHÔøΩlÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ/ÔøΩÔøΩ?ÔøΩZƒ±gÔøΩ5>ÔøΩÔøΩÔøΩvÔøΩ*ÔøΩÔøΩTÔøΩÏßºBÔøΩsÔøΩÔøΩÔøΩ‚¥©ÔøΩÔøΩÔøΩÔøΩ1ÔøΩZÔøΩÔøΩWÔøΩhÔøΩÔøΩ!ÔøΩÔøΩ ÔøΩJÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩZÔøΩRMhÔøΩ2ÔøΩbÔøΩrP#ÔøΩWÔøΩÔøΩ;$ÔøΩ '=K0ÔøΩ.ÔøΩÔøΩ-ÔøΩÔøΩ,2ÔøΩ#«í+ÔøΩÔøΩtÔøΩÔøΩÔøΩ0<	ÔøΩœá*ÔøΩÔøΩÏû∞ÔøΩfÔøΩÔøΩdO+fÔøΩ◊µwÔøΩGÔøΩUÔøΩ&ÔøΩ-SÔøΩ#ÔøΩÔøΩ YEÔøΩÔøΩÔøΩ_w/ÔøΩ@ÔøΩ_5ÔøΩÔøΩÔøΩ0ÔøΩ/XÔøΩÔøΩ""ÔøΩAgÔøΩmÔøΩ:ÔøΩÔøΩÔøΩÔøΩ ül_ÔøΩ|JÔøΩLJjÔøΩf8)ÔøΩÔøΩÔøΩÔøΩ ÔøΩWÔøΩÔøΩ≈ÄÔøΩÔøΩ?H⁄öiÔøΩÔøΩÔøΩÔøΩ÷ÇÔøΩ>≈∑lÔøΩkÔøΩ2ÔøΩÔøΩÔøΩ""gÊ∂á≈Ä%BÔøΩÔøΩ3-	s-ÔøΩÔøΩÔøΩ0ÔøΩÔøΩx%PÔøΩÔøΩÔøΩFÔøΩ.ÔøΩD’ÜÔøΩÔøΩÔøΩÔøΩwA[ÔøΩl?ÔøΩÔøΩJ<ÔøΩBT YÔøΩÔøΩÔøΩlK_ÔøΩCÔøΩÔøΩrÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩQÔøΩOÔøΩÔøΩ\RÔøΩ*;rÔøΩ/ÔøΩ5ÔøΩÔøΩ_ÔøΩRÔøΩi&5ÔøΩÔøΩLÔøΩÔøΩ ÔøΩÔøΩ5J$|RÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ~ÔøΩÔøΩÔøΩÔøΩÔøΩKW*wÔøΩÔøΩqZÔøΩZÔøΩTÔøΩÿíÃÖlÔøΩÔøΩ*VwvÔøΩJBKuÔøΩ""ÔøΩ’ªÔøΩkÔøΩ;ÔøΩÔøΩÔøΩ\LAMÔøΩÔøΩÔøΩuÔøΩWÔøΩÔøΩÔøΩ1ÔøΩOjÔøΩÔøΩÔøΩbÔøΩÔøΩ`ÔøΩÔøΩL&ÔøΩ&ÔøΩÔøΩ	\5`ÔøΩIÔøΩÔøΩ4YÔøΩÔøΩPÔøΩOÔøΩÔøΩ-cÔøΩÔøΩF+ÔøΩpÔøΩ1ÔøΩ[ÔøΩMÔøΩÔøΩ2Œû!ÔøΩ{=eT{ÔøΩVÔøΩnÔøΩÔøΩ\ÔøΩÔøΩÔøΩÔøΩÔøΩ|ÔøΩÔøΩÔøΩÔøΩkU=<*ÔøΩÔøΩW;iW/,ÔøΩ)AÔøΩKÔøΩ\ÔøΩYËîÆp`ÔøΩÔøΩÔøΩÔøΩ,ÔøΩÔøΩdÔøΩÔøΩÔøΩÔøΩ+r-{aÔøΩÔøΩÔøΩHNqÔøΩ'ÔøΩKÔøΩ{ÔøΩÔøΩÔøΩ0LÔøΩpÔøΩÔøΩÔøΩÔøΩiÔøΩÔøΩÔøΩh6%*ÔøΩËà®ÔøΩ""ÔøΩ^07reÔøΩÔøΩ<ÔøΩÔøΩÔøΩgÔøΩ9lÔøΩÔøΩ?}""ÔøΩÔøΩMÔøΩÔøΩÔøΩÔøΩÔøΩGÔøΩ<,QTÔøΩ3UÔøΩtÔøΩÔøΩÔøΩ ÔøΩ\ &ÔøΩnÔøΩÔøΩÔøΩ'ÔøΩ.ÔøΩ0ÔøΩhÔøΩ-ÔøΩ3ÔøΩÔøΩÔøΩÔøΩÔøΩÕ° XÔøΩÔøΩÔøΩ&ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩSÔøΩÔøΩÔøΩ3=:#ÔøΩ:ÔøΩNÔøΩ[ÔøΩÔøΩfsÔøΩ ∆ÅFÔøΩÔøΩ*ÔøΩ◊ñCÔøΩ[!ÔøΩÔøΩGÔøΩ6ÔøΩ{|_~ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩd(EÔøΩÔøΩxÔøΩxÔøΩÔøΩ €∫%ÔøΩÔøΩbÔøΩ,ÔøΩo\%ÔøΩ»ÖvÔøΩÔøΩÔøΩ ”êÔøΩ5ÔøΩtYÔøΩÔøΩÔøΩ8ÔøΩ=S0GÔøΩ5ÔøΩ`H\ÔøΩgÔøΩÔøΩÔøΩÔøΩ7ÔøΩvÔøΩ.""ÔøΩÔøΩ7ÔøΩ€¥M6ÔøΩÔøΩÔøΩFÔøΩ,Y' lÔøΩdB’†6ÔøΩlgÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩfbÔøΩ*%ÀâÔøΩÔøΩÔøΩ ÔøΩÔøΩÔøΩ(0pÔøΩÔøΩfÔøΩOFCf(ÔøΩ>ÔøΩÔøΩÔøΩ+ÔøΩÔøΩÔøΩ5<ÔøΩÔøΩÔøΩ]l+ÔøΩS[ÔøΩÔøΩL,ÔøΩUÔøΩq!‘ñ?ÔøΩUy%ÔøΩxÔøΩlÔøΩÔøΩ%-ÔøΩÔøΩgÔøΩÔøΩ7ÔøΩfÔøΩÔøΩÔøΩ!XÔøΩÔøΩ_gÔøΩÔøΩ;ÔøΩ;ÔøΩÔøΩT-nÔøΩ*ÔøΩÔøΩÔøΩÔøΩYPlÔøΩyƒ∞(ÔøΩÔøΩÔøΩ9ÔøΩHENÔøΩnÔøΩÔøΩÔøΩŸ†ÔøΩ0`ÔøΩ'ÔøΩ4AÔøΩÔøΩ_cÔøΩÔøΩDÔøΩÔøΩÔøΩ{_ÔøΩÔøΩÔøΩrMaÔøΩÔøΩÔøΩÎ©†ÔøΩnÔøΩZÔøΩ[ÔøΩyp1BxqÔøΩÔøΩLÔøΩÔøΩ#ÔøΩÔøΩrÔøΩ;q<ÔøΩÔøΩ#ÔøΩi~ÔøΩ'JÔøΩ–¥ÔøΩÔøΩHÔøΩÔøΩ^EÔøΩcÔøΩÔøΩ37ÔøΩrÔøΩÔøΩtÔøΩnÔøΩÔøΩCÔøΩCWÔøΩ5!ÔøΩÔøΩÔøΩÔøΩWQŒ°ÔøΩMÔøΩ#	*ÔøΩÔøΩÔøΩ&ÔøΩ1dÔøΩÔøΩÔøΩc>ÔøΩÔøΩ ∫yGI.ÔøΩBÔøΩÔøΩr[flÔøΩÎ©üh_yUÔøΩÔøΩ3PxÔøΩ8$[+{ÔøΩÔøΩÔøΩ+ÔøΩÔøΩ«•}ÔøΩÔøΩÔøΩ5^ÔøΩ$“ó7hÔøΩÔøΩÔøΩÔøΩÔøΩ0tÔøΩ÷ΩgÔøΩÔøΩ}ÔøΩÔøΩÔøΩQ4ÔøΩ4`ÔøΩÔøΩ,E$ÔøΩÔøΩÔøΩÔøΩ2ÔøΩÔøΩÔøΩÔøΩz—ØÔøΩÔøΩu9Œ¥ÔøΩÔøΩ$ÔøΩÔøΩÔøΩk@@ÔøΩÔøΩÔøΩJÔøΩÔøΩ=e~ÔøΩ|ÔøΩﬂ≥$ÔøΩÔøΩ3ƒÆÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ= ’†ÔøΩÔøΩ~9D?ÔøΩsXyÔøΩCxÔøΩÔøΩÔøΩy~ÔøΩKÔøΩÔøΩgÔøΩ]ÔøΩ/ÔøΩ@ÔøΩ}ÔøΩuÔøΩÔøΩxYÔøΩÔøΩeÔøΩÔøΩ%Txm¬ãÔøΩÔøΩ=ÔøΩÓµüÔøΩÔøΩ/PÔøΩnWÔøΩÔøΩ""ÔøΩ1+ÔøΩvyÔøΩÔøΩoÔøΩZ;mrÔøΩY(8ÔøΩÔøΩ]TÔøΩoKÔøΩÔøΩ~}ÔøΩtÔøΩÔøΩ5ÔøΩ»ç0ÔøΩÔøΩDÔøΩÔøΩdÔøΩÔøΩH?ÔøΩcÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ #&ÔøΩ~ÔøΩW~ÔøΩjHÔøΩ^d9F_RÔøΩdÔøΩpQÔøΩLÔøΩ}WÔøΩ[ÔøΩÔøΩW=ÔøΩÔøΩ""{ÔøΩ”§'ÔøΩÔøΩLÔøΩWÔøΩÔøΩ ÔøΩÔøΩQFÔøΩÔøΩÔøΩ,%vJ[	MkÔøΩÃé;ÔøΩ}ÔøΩ›óÔøΩ#_ÔøΩ·Ö≥xÔøΩÔøΩÔøΩÔøΩDÔøΩU€º(/ÔøΩÔøΩ\2ÔøΩÔøΩ?ESÔøΩOÔøΩÔøΩOÔøΩÔøΩwÔøΩÔøΩÔøΩbÔøΩÔøΩ=ÔøΩÔøΩÔøΩlÔøΩÔøΩÔøΩg|FÔøΩ<ÔøΩÔøΩaOkE~TÔøΩk`ÔøΩÔøΩÔøΩvÔøΩÔøΩÔøΩÔøΩÔøΩdÔøΩB0OÏ©§{HÔøΩÔøΩ_%ÎßæAGÔøΩOeCrzz0<ÔøΩÔøΩg%!5ÔøΩ&ÔøΩÔøΩkÔøΩÔøΩrÔøΩ&ÔøΩÔøΩLÔøΩÔøΩÔøΩ√î5ÔøΩ<bAÔøΩ[ÔøΩÔøΩGÔøΩÔøΩ#OUÔøΩÔøΩ=ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩP€ÑBÔøΩfÔøΩÔøΩ5l ÔøΩ8e*>ÔøΩÔøΩ%#“ªÔøΩÔøΩV9B$<YÔøΩWÔøΩÔøΩÔøΩÔøΩhDÔøΩÿÄÔøΩÔøΩÔøΩ›º7ÔøΩmÔøΩÔøΩÔøΩÔøΩÔøΩoÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩaÔøΩÔøΩÔøΩÔøΩÔøΩ*,ÔøΩÔøΩÔøΩ_}ÔøΩ9ÔøΩ3ÔøΩÔøΩËâáÔøΩÔøΩ =ÔøΩ4ÔøΩo=,ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩBg[ÔøΩÔøΩaXÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩHZÔøΩiÔøΩÔøΩB(ÔøΩ:%ÔøΩ2 ÔøΩ,aÔøΩÔøΩ–¨yJÔøΩÔøΩe}ÔøΩÔøΩÔøΩnÔøΩlÔøΩÔøΩZCDIÔøΩAÔøΩ-≈Ø>ÔøΩÔøΩ?ÔøΩÔøΩÔøΩÔøΩÔøΩrWÔøΩdÔøΩO$ÔøΩÔøΩr&ÔøΩ<ÔøΩ9ÔøΩG^ÔøΩÔøΩiÔøΩÔøΩ1ÔøΩ""ÔøΩÔøΩ""KÔøΩÔøΩ""rÔøΩÔøΩwÔøΩÔøΩ)ÔøΩÔøΩÔøΩÔøΩnP?ÔøΩ4>ÔøΩ ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ 7NÔøΩiÔøΩE[ÔøΩzZ8KÔøΩ=CI\`ÔøΩnoÔøΩNBÔøΩRBÔøΩÔøΩÔøΩ%ÔøΩ(|ÔøΩ9ÔøΩÔøΩtÔøΩSÔøΩS%/ÔøΩRÔøΩTÔøΩ>R+ÔøΩÔøΩG ÔøΩÔøΩ|ÔøΩl-hÔøΩXÔøΩdÔøΩÔøΩ`ÔøΩÔøΩÔøΩN…∂«úK	ÔøΩ1ÔøΩ>/ÔøΩÔøΩÔøΩÔøΩ!À†;ÔøΩEÔøΩÔøΩÔøΩÔøΩkMÔøΩÔøΩœìÔøΩ!@KÔøΩ€åÔøΩÔøΩoÔøΩ;ÔøΩÔøΩsÔøΩJÔøΩÔøΩÔøΩ^>-lÔøΩÔøΩÔøΩÔøΩÔøΩwÔøΩWÔøΩ&ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ]ÔøΩÔøΩÔøΩIj4ÔøΩVÔøΩÔøΩÔøΩÔøΩÔøΩh7UaÔøΩÔøΩ*ÔøΩuÔøΩGÔøΩ^ÔøΩÔøΩ\D&ÔøΩdœ≤ÔøΩÔøΩDHÔøΩÔøΩxH?ÔøΩCÔøΩÔøΩÔøΩ@CÔøΩÔøΩ'""#ÔøΩÔøΩÔøΩÔøΩ.ÔøΩ[q-ÔøΩÔøΩÔøΩnÔøΩÔøΩWÔøΩÔøΩQÔøΩbÔøΩbÔøΩnÔøΩT6tQÔøΩwNh«§MÔøΩÔøΩo	7ÔøΩAÔøΩ""ÔøΩÔøΩ ÔøΩ1‘¨(ÔøΩÔøΩsÔøΩW,%1ÔøΩÔøΩÔøΩ`ÔøΩ ÔøΩÔøΩx~~ÔøΩ^XÔøΩÔøΩ|hÔøΩÔøΩÔøΩÔøΩÔøΩ6QKs5{ÔøΩ‘ìÔøΩQAÔøΩ$ÔøΩvÔøΩBqgÔøΩDÔøΩÔøΩÔøΩÔøΩ=ÔøΩÕ†ÔøΩ‘ßÔøΩ'ÔøΩ3ÔøΩÔøΩ*<ÕÅÔøΩ-ÕûhÕäÔøΩ`ÔøΩ6ÔøΩs—âÔøΩiÔøΩI&&ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩawÔøΩÔøΩÔøΩ~ÔøΩUiÔøΩH(^ÔøΩÔøΩÔøΩ hoÔøΩ%ÔøΩIUÔøΩj1nÔøΩÔøΩ_ba%ÔøΩÔøΩQ?g‚æ¢÷†KÔøΩ≈£NmÔøΩÔøΩÔøΩ`znÔøΩzÔøΩjÔøΩÔøΩOvC7IkÔøΩnÔøΩ`rÔøΩ*ÔøΩ=ÔøΩu?ÔøΩ^ÔøΩÔøΩÔøΩÔøΩ_ÔøΩdIÔøΩÔøΩÔøΩÔøΩngÔøΩÔøΩ,ÔøΩEÔøΩTÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ?.ÔøΩEÔøΩÔøΩTÔøΩ_~$ÔøΩÔøΩ:ÔøΩNÔøΩÔøΩÔøΩzlÔøΩXÔøΩ~ÔøΩUÔøΩ'^ÔøΩÔøΩuWÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩIE»ápÔøΩÔøΩÔøΩYÔøΩÔøΩ$ÔøΩdÔøΩÔøΩÔøΩJÔøΩcÔøΩÔøΩ[ÔøΩ]0JÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩu,ÔøΩÔøΩ <ÔøΩcÔøΩÔøΩÔøΩjÔøΩÔøΩÔøΩXÔøΩÔøΩ◊™ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ7ÔøΩÔøΩÔøΩÀüY%>ÔøΩÔøΩ_ YD,$UÔøΩDd=Z.ÔøΩÔøΩÔøΩÔøΩÔøΩ7ÔøΩiÔøΩÔøΩxÔøΩÔøΩ ÔøΩMÎ§¶EÔøΩiÔøΩ5ÔøΩÔøΩÔøΩÔøΩpÔøΩÔøΩfÔøΩtÔøΩ&TÔøΩÔøΩ!ÔøΩ(DÔøΩÔøΩÔøΩÔøΩzÔøΩÔøΩÔøΩWÔøΩ$i#ÔøΩÔøΩBÔøΩzwÔøΩ3ÔøΩÔøΩÔøΩ,=ÔøΩ+ÔøΩÔøΩ&FeXÔøΩÔøΩpIÔøΩÔøΩ1NbÔøΩIdÔøΩÔøΩdNÔøΩ!ÔøΩÔøΩÔøΩÔøΩÔøΩamUÔøΩ&ÔøΩ|fMÔøΩÔøΩÔøΩ~83ÔøΩÔøΩyÔøΩcÔøΩ%ÔøΩigÔøΩ>ÔøΩ%]ÔøΩÔøΩ	1wÔøΩÔøΩ%ÔøΩ+ÔøΩÔøΩm«Üi^}ÔøΩI.ÔøΩÔøΩQ:8ÔøΩÔøΩ–àzÔøΩÔøΩ(iHfÔøΩÔøΩ|ÔøΩ.ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ3ÔøΩÔøΩ ÔøΩÔøΩEÔøΩX«°ÔøΩ=ÔøΩ?[ÔøΩÔøΩ,ÔøΩÔøΩÔøΩ*J%ÔøΩ*ÔøΩaÔøΩÔøΩÔøΩX1eÔøΩÔøΩF7;ÔøΩYÔøΩÔøΩÔøΩq,ÔøΩ*ÔøΩsÔøΩNÔøΩ_ÔøΩaJeÔøΩCÔøΩHÔøΩyÔøΩÔøΩÔøΩ;ÔøΩÔøΩ2-uÔøΩ¬üÔøΩv/]~L4FÔøΩ.oÔøΩÔøΩ45ÔøΩzÔøΩ1ÔøΩFÔøΩÔøΩ(,ÔøΩ3ÔøΩÔøΩÔøΩÔøΩÔøΩ+ÔøΩÔøΩÔøΩ7ÔøΩÔøΩxÔøΩqÔøΩÔøΩ>ltÔøΩÔøΩÔøΩQÔøΩhÔøΩCÔøΩj^ÔøΩÔøΩyÔøΩÔøΩÔøΩÔøΩÔøΩIuÔøΩ_~DÔøΩÔøΩNÔøΩÔøΩÔøΩ%ÔøΩÔøΩÔøΩ [ÔøΩjÔøΩÔøΩÔøΩÔøΩ=’ØTXIÔøΩÔøΩÔøΩÔøΩwÔøΩÔøΩrÔøΩeÔøΩ]ÔøΩ8ÔøΩÔøΩJ}vÔøΩÔøΩÔøΩÔøΩUÔøΩj4ÔøΩÔøΩ8ÔøΩKÔøΩ”§€´ÔøΩÿÆrÔøΩ∆òÔøΩÔøΩÔøΩ%DSÔøΩÔøΩÔøΩÔøΩN""ÔøΩ;~ÔøΩÔøΩÔøΩÔøΩ(eÔøΩÔøΩQ!|ÃâÔøΩQÔøΩ%`ÔøΩÔøΩVZÔøΩÔøΩMÔøΩÔøΩÔøΩ{ÔøΩÔøΩÔøΩÔøΩÔøΩN}N‹∞}[ÔøΩÔøΩÔøΩG9ÔøΩÔøΩcZÔøΩFDÔøΩ(ÔøΩUÔøΩ&{ÔøΩÔøΩÔøΩcÔøΩÔøΩÔøΩwÔøΩ3ÔøΩ~NÔøΩÔøΩÔøΩÔøΩ>ZÔøΩÔøΩ<SÔøΩÔøΩLÔøΩÔøΩM‚≤ô^{ÔøΩÔøΩ(ÔøΩÔøΩÔøΩYÔøΩ+BÔøΩÔøΩÔøΩÔøΩrÔøΩ/ÔøΩ_ÔøΩRÔøΩÔøΩÔøΩ#ÔøΩ6ÔøΩÔøΩ$ÔøΩ60ƒÑÔøΩÔøΩUÔøΩ?}ÔøΩy“ÖAÔøΩÔøΩÔøΩ>ÔøΩÔøΩÔøΩ/yÔøΩÔøΩ5ÔøΩÔøΩÔøΩf>SÔøΩdlkÔøΩÔøΩNÔøΩ(e`ÔøΩbÔøΩ28qHÔøΩeÔøΩÔøΩ\ÔøΩÔøΩÔøΩÕ™ZÔøΩÔøΩ&MjUÔøΩÔøΩcÔøΩÔøΩ2ÔøΩjkS6ÔøΩF.ﬁ∑ÔøΩghJÔøΩÔøΩ'3ÔøΩÔøΩÔøΩuÔøΩ∆Ω∆≠9ÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩPPvÔøΩÿèaÔøΩ~R;8bÔøΩÔøΩ,ÔøΩ [;ÔøΩJ ÔøΩ:ÔøΩÔøΩ&ÔøΩ.`VÀé4)ÔøΩv1ÔøΩlJ]ÔøΩÔøΩmÔøΩhe ™ﬁΩÔøΩÔøΩÔøΩÔøΩÔøΩ \?HÔøΩÔøΩÔøΩÔøΩÔøΩaÔøΩ5`ÔøΩÔøΩÔøΩpÔøΩ]&:ÔøΩ0Aq>|ÔøΩTÔøΩÔøΩÔøΩebhÔøΩ~3KÔøΩÔøΩÔøΩbLWÔøΩÔøΩÔøΩSÔøΩpÔøΩÔøΩ;LÔøΩÔøΩ!mÔøΩf5ÔøΩ3ÔøΩhÔøΩÔøΩ'ÔøΩ$|O)>P%ÔøΩÔøΩÔøΩÔøΩYÔøΩÃ¨ÔøΩÔøΩÔøΩÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩHÃïeÔøΩÕÉÔøΩRÔøΩÔøΩ3ÔøΩ4PÔøΩÔøΩÔøΩU~ÔøΩhÔøΩÔøΩÔøΩV<ÔøΩÔøΩMÔøΩbÔøΩÔøΩÔøΩÔøΩSÔøΩsÔøΩz#ÔøΩÔøΩJÔøΩÔøΩkÔøΩ[u:ÔøΩÔøΩ|}ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩJId`mÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ,ÔøΩÔøΩ;;ÔøΩÔøΩÔøΩlÔøΩÔøΩQ_ÔøΩQ?ÔøΩzÔøΩZÔøΩp,ÔøΩwÔøΩ~#ÔøΩ@ÔøΩ∆ÜÔøΩÔøΩÔøΩÔøΩe}ÔøΩ’°ÔøΩ ÔøΩÔøΩ#ÔøΩ3.ÔøΩÔøΩÔøΩ]6ÔøΩTÔøΩÔøΩ^^mÔøΩÔøΩÔøΩ0‰å≤ÔøΩWÔøΩÔøΩ≈µÔøΩPpÔøΩ_a6ÔøΩÔøΩÔøΩÔøΩqÔøΩ""ÔøΩÔøΩ1◊âa6ÔøΩpÔøΩVÔøΩÔøΩ6ÔøΩ<ZJqÕÄT dJÔøΩÔøΩzJÔøΩÔøΩ]AÔøΩÔøΩsÔøΩÔøΩAÔøΩbkwKFÔøΩ3\ÔøΩ3ÔøΩÔøΩB>ÔøΩiEQÔøΩÔøΩƒæ#ÔøΩXÔøΩ'ÔøΩB‘üRF2]\TÔøΩ ÔøΩÔøΩÔøΩÔøΩm8ÔøΩÔøΩÔøΩz-?a<ÔøΩœ•ÔøΩ√¨ÔøΩÔøΩLÔøΩyÔøΩ28ÔøΩ$Vk;ÔøΩ&$ ñ≈Å~ÔøΩÔøΩ'jdÔøΩÔøΩ""1ÔøΩ]{ÔøΩÔøΩÔøΩÔøΩEÔøΩ}kjÔøΩfPa_ﬂëÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩVÔøΩÔøΩÔøΩÔøΩE_}ÔøΩÔøΩÔøΩÔøΩ0BÔøΩ MÔøΩ ÔøΩ ªÿªPÔøΩzÔøΩZMÔøΩ6ÔøΩ{ÔøΩ`rÔøΩÔøΩÔøΩÔøΩ;ÔøΩÔøΩk ÔøΩCÔøΩÔøΩÔøΩL—çXÔøΩn`ÔøΩÔøΩ%*‚¶ÖÔøΩÔøΩeÔøΩ,)ÔøΩÔøΩÔøΩ0ÔøΩÔøΩÔøΩ{ÔøΩÔøΩÔøΩÔøΩÔøΩ0ÔøΩÔøΩÔøΩ|ÔøΩ/ÔøΩ!ÔøΩEÔøΩÔøΩÔøΩÔøΩ""ÔøΩ{u]TÔøΩÔøΩlZyM=BÔøΩg#…•ÔøΩs<uMÔøΩV oX. ÔøΩÔøΩÔøΩÔøΩÔøΩ%ÔøΩÔøΩÔøΩgÔøΩÔøΩÔøΩÔøΩÓ∏∑ÔøΩ$ÔøΩ/ÔøΩÔøΩÔøΩr⁄Ä/@QBÔøΩ!ÔøΩZ&ÔøΩÔøΩ4ÔøΩÔøΩÔøΩ%ÔøΩÔøΩ ÔøΩ&zÔøΩKÔøΩ<ÔøΩ<YÔøΩÔøΩÔøΩÔøΩÈú∞ÔøΩÔøΩﬂÄ/NÔøΩ…¨’ëÔøΩÔøΩ!ÔøΩNPNÔøΩiVÔøΩBDÔøΩ√ÜÔøΩlÔøΩJ“ºÔøΩp6ÔøΩn\ÔøΩÔøΩÃ©ÔøΩÔøΩÔøΩ*ÔøΩe ∆ÜÔøΩÔøΩÔøΩﬂ°ÔøΩÔøΩ	ÔøΩ]cF:ÔøΩÔøΩ5ÔøΩÔøΩKÔøΩTÔøΩÔøΩÔøΩ0ÔøΩPUÔøΩ ÔøΩÔøΩÔøΩyÔøΩÔøΩÔøΩO7ÔøΩ-ÔøΩ<(aosw&pTÔøΩCÔøΩ<ÔøΩAIÔøΩBÔøΩeÔøΩÔøΩ_k#ÔøΩ Ê§ÆÔøΩp5ÔøΩ›ó""¬∑1EÔøΩyÀëÔøΩÔøΩÔøΩÿÅ#+4N""TÔøΩÔøΩ8ÔøΩÔøΩ#ƒµwtyÔøΩYQÔøΩMÔøΩÔøΩoJÔøΩÔøΩÔøΩÔøΩÔøΩAÔøΩÔøΩ#eÔøΩÔøΩ5ÔøΩÔøΩÔøΩ≈≠ÔøΩz	FUÔøΩÔøΩ$3ÔøΩ.UJ4ÔøΩÔøΩ]8ÔøΩ2ÔøΩÔøΩJÔøΩÔøΩpPYÔøΩÔøΩ3ÔøΩÔøΩ!ÔøΩ{ÔøΩÔøΩgÔøΩÔøΩZÔøΩ$ÔøΩÔøΩeÔøΩPb7$ÔøΩ\JG⁄† ÔøΩÔøΩ<fÔøΩÔøΩÔøΩ .)ÔøΩÔøΩ*ÔøΩ3NÔøΩÔøΩ'ÔøΩÔøΩÔøΩv~SÔøΩS…öÔøΩÔøΩÔøΩÔøΩÔøΩeÔøΩÔøΩÔøΩÔøΩ–º5w5ÔøΩÔøΩÔøΩ]ÔøΩÔøΩÔøΩtÔøΩVyÔøΩÔøΩZÔøΩÔøΩÔøΩ8nDÔøΩ2ÔøΩÔøΩÔøΩ{ÔøΩP)ÔøΩmÔøΩDÔøΩÔøΩ#PÔøΩ[≈¢?ÔøΩÔøΩﬂùÔøΩbbÔøΩÔøΩO“æGaÔøΩ^x'ÔøΩDÕ©)dÔøΩÔøΩÔøΩh#VmÔøΩÔøΩa$Ë∂¢6/}ÔøΩNÔøΩÔøΩÔøΩÔøΩ“´KÔøΩÔøΩÔøΩÔøΩ'ÔøΩcB›ßÔøΩÔøΩÔøΩÔøΩLÔøΩ ÔøΩ=6ÔøΩ–üÔøΩ&ÔøΩ/ÔøΩ√§ÔøΩaÔøΩwÔøΩÔøΩlÔøΩÔøΩÔøΩ6ÿ¥AÔøΩCÔøΩ9ÔøΩÔøΩÁú© ÔøΩÔøΩv#OÔøΩkSÔøΩiÔøΩÔøΩrÔøΩÔøΩÔøΩRm(9ÔøΩbÔøΩÔøΩÔøΩWc‹∑<ÔøΩ?ÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩgÔøΩÔøΩÔøΩUÔøΩÔøΩBÔøΩ;ÔøΩÔøΩÔøΩ0ÔøΩ-ÔøΩl=ÔøΩLvÔøΩÔøΩ{eÔøΩiÔøΩÔøΩÔøΩÔøΩÔøΩOIÔøΩ8ÔΩ≥<ŒãÔøΩ.ÔøΩÔøΩÔøΩÔøΩÔøΩi»éœ¶\ÔøΩ 	ÔøΩÔøΩÔøΩÔøΩ%DÔøΩxÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩŒãÔøΩ∆•<”°ÔøΩzÔøΩUÔøΩnÔøΩÔøΩVÔøΩ.ÔøΩÔøΩ1ÔøΩÔøΩ+0ÔøΩWÔøΩDÃ•ÔøΩÔøΩÔøΩ¬ÄÔøΩUÔøΩÔøΩZÔøΩ]ÔøΩÔøΩÔøΩÔøΩzÔøΩFÔøΩ~hÔøΩ4ÔøΩÔøΩ8ÔøΩ\yÔøΩÔøΩ{ÔøΩÔøΩÕª#ÔøΩYÔøΩÿûÔøΩÔøΩÔøΩÔøΩ&ÔøΩÔøΩ-⁄™ÔøΩÔøΩ[ÔøΩÔøΩeÔøΩÔøΩÔøΩÃ≤MÔøΩÔøΩÔøΩ7LÔøΩTkBÔøΩÔøΩÔøΩÔøΩÔøΩxÔøΩÔøΩÔøΩ1""sﬁû^ÔøΩhÔøΩÔøΩ;*MÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ	VPÔøΩÔøΩ%ÔøΩ<ÔøΩÔøΩÔøΩ*KnÔøΩiÔøΩfkaÔøΩ-,ÔøΩÔøΩÔøΩ0XÔøΩ~ÔøΩfÔøΩÔøΩ6ZÔøΩ-ÔøΩÔøΩÔøΩÔøΩÔøΩNÔøΩÔøΩ9ÔøΩmFxÔøΩÔøΩÔøΩ8ÔøΩtNS ?’ÇÔøΩÔøΩÔøΩ4ÔøΩc 5+ÔøΩÔøΩÔøΩ-ÔøΩ(ÔøΩBÔøΩ~D!ÔøΩ^e7*aÔøΩ}ÔøΩ6ÔøΩÔøΩÔøΩÔøΩFÔøΩRÔøΩKœáÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩCsÔøΩ@b≈êÔøΩÔøΩÔøΩuÔøΩ]ÔøΩÔøΩr!ÔøΩÔøΩEÔøΩoÔøΩyÔøΩÔøΩÔøΩ%ÔøΩcÃªVm?Ÿ∞ÔøΩÔøΩuXÔøΩ5ÔøΩÔøΩso >ÔøΩT04ÔøΩzÔøΩ8	ÔøΩÔøΩ}ÔøΩ4ÔøΩÔøΩ6ÔøΩÔøΩÔøΩÔøΩo—ºhÔøΩ[~+ÔøΩÔøΩ6~pÔøΩ(hÔøΩÔøΩÔøΩﬂçÔøΩ*8ÔøΩuÔøΩÔøΩ$ÔøΩÔøΩfÔøΩÔøΩÔøΩuÔøΩPÃ∑ÔøΩ*ÔøΩjÔøΩÔøΩZCÔøΩÔøΩ(ÔøΩÓñô^PÔøΩÔøΩ(>√≤xÔøΩÔøΩwÔøΩ9z;ÔøΩ""OÔøΩ' çÔøΩÔøΩD<ÔøΩj~ÔøΩÔøΩÔøΩWG fÔøΩÔøΩE~ÔøΩ(ÿÑÔøΩEÔøΩ ÔøΩ(ÔøΩ~vÔøΩ2kÔøΩTÔøΩÔøΩ}ÔøΩÔøΩƒªÔøΩi’ò`ÔøΩÔøΩÔøΩÔøΩÔøΩgHÔøΩÔøΩe ØÔøΩp?g;ÔøΩSUÚúùßÔøΩP0@ÔøΩÿîÔøΩÿ≤ÔøΩ fdÔøΩyKÔøΩ1ÔøΩÔøΩÔøΩqÔøΩÔøΩÔøΩ&ÔøΩÔøΩÔøΩiÔøΩÔøΩÔøΩe⁄π ÔøΩxÔøΩÔøΩÔøΩYtÔøΩÔøΩ ÔøΩÔøΩÔøΩÔøΩDÔøΩÔøΩÔøΩv5//ÕßÔøΩbÔøΩÔøΩRpÔøΩ«•5ÔøΩÔøΩK\ÔøΩÔøΩÔøΩÔøΩxÔøΩÔøΩÔøΩ◊¥/XÔøΩICÔøΩ ÔøΩÔøΩÔøΩLÔøΩ2ÔøΩ&“âÔøΩÔøΩÔøΩ# fÔøΩ@@ ÔøΩÔøΩÔøΩÔøΩOÔøΩÔøΩ^ÔøΩÔøΩ*%zÔøΩÔøΩÔøΩIÔøΩÔøΩ	ÔøΩÔøΩÔøΩAÔøΩÔøΩ1ÔøΩZÔøΩM89ÔøΩÔøΩkL`iÔøΩ(ÔøΩÔøΩ=ÔøΩjCcÔøΩ◊ÖÔøΩÔøΩÔøΩ^ :ÔøΩgyÔøΩÔøΩÔøΩÔøΩ	 ÔøΩ÷ã.ÔøΩÔøΩKxHvÔøΩaÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ⁄õÔøΩÔøΩ~ÔøΩ~ÔøΩoMfÔøΩÔøΩÔøΩœ©ÔøΩÔøΩ'?ÔøΩ”≤G';ÔøΩÔøΩÔøΩ'ÔøΩﬂãx“≥A@ÔøΩÔøΩkÔøΩt‹¨eÔøΩÔøΩ≈íÔøΩ;pÔøΩ'fÔøΩ6gO|$b ÔøΩtgÔøΩÔøΩ¬ÇÔøΩÔøΩÔøΩ!ÔøΩÔøΩ xÔøΩÔøΩ!&nÔøΩ#akÔøΩ""mPÔøΩÔøΩ}ÔøΩ(3ÔøΩPÔøΩYrÔøΩÔøΩ'ÔøΩ -SÔøΩÔøΩ+'3ÔøΩ^ÔøΩ-\ÔøΩQÔøΩ^ÔøΩÔøΩ@ÔøΩÔøΩMÔøΩ9ÔøΩ&LÔøΩnÔøΩsEÔøΩÔøΩNÔøΩULÔøΩÔøΩÔøΩOÔøΩÔøΩÔøΩÔøΩÔøΩ@$ÔøΩÔøΩÔøΩÔøΩÔøΩQÔøΩÔøΩÔøΩÔøΩ>ÔøΩÔøΩ:L+%DÔøΩZÔøΩOÔøΩ~EÔøΩ)6ÔøΩÔøΩ_ A€®ÔøΩÔøΩÔøΩRÔøΩÔøΩ<fDÔøΩ*4jdPÔøΩAÔøΩ8ÔøΩEÔøΩÔøΩ!ÔøΩ}+$zS3ÔøΩÔøΩ ÔøΩÔøΩÔøΩAa\ÔøΩmÔøΩIÔøΩ* ÔøΩfIGÔøΩÔøΩÔøΩOÔøΩÔøΩÔøΩÔøΩÔøΩam}ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩZÔøΩCÔøΩÔøΩP1_ÔøΩDÔøΩHÔøΩfÔøΩ]ÔøΩ: :ÔøΩÔøΩqÔøΩÔøΩXslÔøΩÔøΩxrÔøΩÔøΩÔøΩË•åYÔøΩ""ÔøΩ9ÔøΩÔøΩÔøΩ!ÔøΩ\ÔøΩ_ÔøΩe!ÔøΩm5ÔøΩÔøΩÔøΩÔøΩÔøΩW#ÔøΩ5m;%ÔøΩÔøΩÔøΩrX&VGfÔøΩfÔøΩZUfyÔøΩÔøΩÔøΩf=ÔøΩÔøΩÔøΩ(Ã§ }mÔøΩÔøΩ@B;ÔøΩÔøΩhÔøΩÔøΩÔøΩÔøΩ""-rÔøΩZtÔøΩÔøΩSÔøΩ@ÔøΩÔøΩÔøΩFÔøΩ1ÔøΩÔøΩwGÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩQÔøΩ!>ÔøΩÔøΩUÔøΩÔøΩÔøΩ≈∑ÔøΩPÔøΩG2fÔøΩÔøΩ|ÔøΩ!jÔøΩÔøΩ~ÔøΩÔøΩ\ÔøΩN’∏ÔøΩÔøΩUÔøΩ>nÔøΩÔøΩZt_ÔøΩ`ÔøΩ	ÔøΩ{emAÔøΩ18ÔøΩÔøΩNÔøΩaÔøΩ NÔøΩ/ÔøΩ7ÔøΩÔøΩÔøΩ|ÔøΩÔøΩ:ÔøΩœúÔøΩÔøΩ0FN{%SÔøΩ<ÔøΩ'ÔøΩ6ÔøΩÔøΩÔøΩ›ïÔøΩYSÔøΩÔøΩÔøΩ#ÔøΩÔøΩ#%ÔøΩ6P-OÔøΩ)ÔøΩoÔøΩÔøΩÔøΩŒÜW!ÔøΩNÔøΩÔøΩÔøΩ*ÔøΩÕ¶ÔøΩsÔøΩgÔøΩG9'KÔøΩÔøΩ3+ÔøΩÔøΩ8ÔøΩUivÔøΩÔøΩÔøΩRÔøΩÔøΩÔøΩÔøΩxÔøΩhUZ""]ÔøΩ)~ÔøΩÔøΩÔøΩÔøΩ¬∑)p6PÔøΩPÔøΩ1LD_{ÔøΩp$ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ7ÔøΩiÔøΩKÔøΩKÔøΩhÔøΩÃÄÔøΩp?Ÿ¨WÔøΩÔøΩ€∞ÔøΩƒÜÔøΩQÔøΩRÔøΩW{eÔøΩBÔøΩÔøΩ3ÔøΩÔøΩÔøΩ5ÔøΩ~3ÔøΩÔøΩwÔøΩ-7ÔøΩBÔøΩ⁄≤ÔøΩ&ÔøΩ‘ÆÔøΩ›åÔøΩvÔøΩÔøΩ7,ÔøΩAUÕ§ÔøΩŸ∞ÔøΩVÔøΩÔøΩ#(FÔøΩ-ÔøΩYÔøΩDÔøΩÔøΩÔøΩu^XÔøΩ?ÔøΩÔøΩÔøΩÔøΩƒêÔøΩsÔøΩLÔøΩÔøΩJÔøΩN 6|ÔøΩ‘¨tÔøΩD|ÔøΩÔøΩÔøΩ7ÔøΩÔøΩuÔøΩÔøΩ’±pÔøΩÔøΩÔøΩÔøΩÔøΩ∆ÅÔøΩ$ÔøΩ%ÔøΩ+uÔøΩh %sLÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ`ÔøΩÔøΩÔøΩ#xÔøΩÔøΩ=*|ÔøΩ%ÔøΩÔøΩS0VÔøΩ»∫ÔøΩ√ïÔøΩyzGEd=…ªXÔøΩÔøΩ1ÔøΩ”ÜÔøΩÔøΩXÔøΩÔøΩGÔøΩÔøΩ ÔøΩL -ÔøΩKÔøΩ;ÔøΩhÀªÔøΩÔøΩ€èÔøΩÔøΩÔøΩ!ÔøΩÔøΩÔøΩÔøΩÔøΩ1ÔøΩÔøΩr”∏_ÔøΩAÔøΩÔøΩAÔøΩÔøΩHÔøΩÔøΩÔøΩ„∂ÆfC9ÔøΩIÔøΩu<ÔøΩÔøΩ<ÔøΩÔøΩÈç¥ÔøΩ	ÔøΩYLÔøΩÔøΩ7ÔøΩbYÔøΩÔøΩÔøΩm'?ÔøΩ_,p[HÔøΩÔøΩ;ÔøΩ=ÔøΩ:wy0wÔøΩÔøΩyrÔøΩÔøΩXÔøΩ!*ÔøΩkÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ%ÔøΩ.ÔøΩ2ÔøΩÔøΩÔøΩ,<_aB}ÔøΩÔøΩÔøΩÔøΩÔøΩ?DÔøΩÔøΩ+GuÔøΩ~AÔøΩÔøΩ?ÔøΩÔøΩ7.ÔøΩnoUÔøΩ1ÔøΩÔøΩ0ÔøΩ(ÔøΩiÔøΩE/ÔøΩ5ÔøΩÔøΩ9;hÔøΩZ;–ì'ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ`ÔøΩ:$ÔøΩ	ÔøΩA3ÔøΩÔøΩ}	ÔøΩrÔøΩ4ÔøΩÔøΩÔøΩÔøΩÔøΩ7ÔøΩÔøΩÔøΩWÔøΩkÔøΩMÔøΩDÔøΩAÔøΩÔøΩLAÔøΩGÔøΩ]	ÔøΩ<@wTrÔøΩ)ÔøΩ}z'ÔøΩxIÔøΩP?ÔøΩCÔøΩeÔøΩÔøΩLÔøΩÔøΩrÔøΩÔøΩOÔøΩLVÔøΩÔøΩ^7ÔøΩÔøΩÔøΩo:(ÔøΩ`ÔøΩ^ÔøΩoÔøΩ2ÔøΩh\’±ÔøΩÔøΩ{ÔøΩÔøΩcÔøΩ$ÔøΩÔøΩÔøΩfxÔøΩÔøΩtÔøΩÔøΩ~b&ÔøΩÔøΩŒäÔøΩÔøΩ+EÔøΩj ÔøΩÔøΩCÔøΩVÔøΩ ÔøΩÔøΩ ÔøΩÔøΩT^PÔøΩ3~=ÔøΩÔøΩÔøΩlÔøΩ?NÔøΩ?>⁄ìoz YyÔøΩH%ÔøΩÔøΩÔøΩ	ÔøΩÔøΩÔøΩf~N5ÔøΩTzbÔøΩo¬ÅÔøΩBÔøΩÔøΩÔøΩC7ÔøΩÔøΩI$ÔøΩcÔøΩUÔøΩÔøΩÔøΩÔøΩÔøΩ,\ÔøΩbÔøΩÔøΩÔøΩ«èÔøΩÔøΩÔøΩ.ÔøΩÔøΩÔøΩƒÑ<yÔøΩsÔøΩÔøΩTÔøΩÔøΩÔøΩÔøΩ*#w ◊ªÔøΩ_BÔøΩÔøΩÔøΩÔøΩ:])XTÔøΩAÔøΩÔøΩ<ÔøΩ6ÔøΩ%ÔøΩWÔøΩÔøΩ}ÔøΩ:4#q#7e/uÔøΩÔøΩf.ÔøΩÔøΩ5ÔøΩÔøΩIÔøΩÔøΩqÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ:ÔøΩÔøΩlÔøΩÔøΩ/nÔøΩFÔøΩÔøΩÔøΩ6\ÔøΩÔøΩÔøΩOÔøΩ>OÔøΩÔøΩ?QÔøΩÔøΩÔøΩ€∫ÔøΩf'FÔøΩÔøΩ·§ΩÔøΩ}0ÔøΩPÔøΩÔøΩVÔøΩÔøΩYÔøΩtÔøΩ‘£ ∫«∫{.ÔøΩÔøΩL5ÔøΩ[NmÔøΩteÔøΩÔøΩÔøΩkÔøΩÔøΩPRgÔøΩ6ÔøΩuÔøΩ'@ÔøΩC9ÔøΩCÔøΩÔøΩÔøΩAIÔøΩ,ÔøΩ„åÇ%xBiÔøΩÔøΩ2UÔøΩDÔøΩCJWRÔøΩy!ÔøΩyÔøΩÕã=ÔøΩÔøΩÔøΩÔøΩ~ÔøΩlÔøΩÔøΩÔøΩQÔøΩÔøΩÔøΩÔøΩUÔøΩÔøΩ""ÔøΩ ÔøΩ6ÔøΩÔøΩ^ÔøΩÔøΩÔøΩÔøΩÔøΩfÔøΩyÔøΩÔøΩÔøΩf[	>B/?:RÔøΩÔøΩ.ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩTK?ÔøΩÔøΩDÔøΩF»öxÔøΩÔøΩ""2ÔøΩqw({AÔøΩÔøΩiÔøΩÔøΩÔøΩvÔøΩ`ffÔøΩmÔøΩjÔøΩ)tÔøΩlÔøΩokÔøΩÔøΩÔøΩÔøΩÔøΩﬁÅÔøΩ,ÔøΩ8AÔøΩb u^9lÔøΩ2hgŸ≤? ÔøΩŒòÔøΩÔøΩi'?ÔøΩ.ÔøΩOÔøΩ_|Òàå≥ÔøΩÔøΩÔøΩ4ÔøΩÔøΩl[%ÔøΩÔøΩ7{>(ÔøΩŒ¨bÔøΩÔøΩÔøΩÔøΩÂ≥ìÔøΩy::-ÔøΩÔøΩ«°[ÔøΩ ÔøΩÔøΩÔøΩÔøΩqÔøΩÔøΩ‘óÔøΩmÔøΩ-?hD8ÔøΩHÔøΩÔøΩÔøΩeGÔøΩ}÷ÄÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩVÔøΩTDÔøΩÔøΩÔøΩM'kÔøΩ√£ÔøΩÔøΩXÔøΩc1xÔøΩfKkÔøΩ;ÔøΩ(AkÔøΩÊÑ∑0ÔøΩKQÔøΩÔøΩ=f¬†)ÔøΩ,ÔøΩ1ÔøΩxÔøΩ√çÔøΩÔøΩÔøΩcÔøΩ+PÔøΩÔøΩÍÖîÔøΩÔøΩÔøΩbZÔøΩ…ölÔøΩÔøΩﬁê!ÔøΩÔøΩ5ÔøΩÔøΩf:ÔøΩ…¢ÔøΩÔøΩ OÔøΩÔøΩ]ÔøΩÔøΩ YfÔøΩÔøΩ*eÔøΩÔøΩÔøΩÔøΩÔøΩCÔøΩjeÔøΩ]z!bÔøΩG5ÔøΩÔøΩÔøΩ)1ÔøΩYM}y{xÔøΩÔøΩ ÔøΩÔøΩ4R` AcﬂÑÔøΩ]ÔøΩÔøΩgÔøΩÔøΩ^‹öTvÔøΩMÔøΩ|ÔøΩÔøΩÔøΩb>wÔøΩdÔøΩÔøΩ%T[ÔøΩÔøΩhÔøΩœçÔøΩQÔøΩ-lÔøΩÔøΩÔøΩ%ÔøΩÓüªÔøΩÔøΩ?ÔøΩÔøΩ+`%ÔøΩoqÔøΩÔøΩIÔøΩM‹©ÔøΩÔøΩÔøΩÔøΩB›éÔøΩoÔøΩ2<ÔøΩÔøΩ_›§ÔøΩÔøΩ	!ÔøΩXÔøΩhÔøΩ,2ÔøΩÔøΩ ÔøΩ[ÔøΩ]ÔøΩÔøΩÔøΩÔøΩÔøΩ⁄ÜÔøΩÔøΩhÔøΩ ÔøΩXÔøΩG0ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ9ÔøΩÔøΩ‘©ÔøΩÔøΩÔøΩ4/ÔøΩÔøΩIÔøΩS!ÔøΩGÔøΩyÔøΩÔøΩ4*ÔøΩÔøΩÔøΩLÔøΩÔøΩÔøΩ""lÔøΩÔøΩ\FÔøΩ.HÔøΩf<’¥`ÔøΩÔøΩ-ÔøΩX:N8ÔøΩÔøΩmÔøΩÔøΩÔøΩÔøΩÀéÔøΩ})pÔøΩÔøΩ2ÔøΩÔøΩ^ÔøΩÔøΩ/ÔøΩÔøΩÔøΩ+AÔøΩLÔøΩÔøΩ$ÔøΩ_/„ÜóÔøΩPwÔøΩZT""ÔøΩÔøΩ&ÔøΩl8ÔøΩ`ÔøΩ⁄ÉlÔøΩeÔøΩÔøΩÔøΩhbÔøΩBa3ÔøΩÔøΩUÔøΩÔøΩTTÔøΩÔøΩbÔøΩÔøΩÃµÔøΩ/ÔøΩh{ÔøΩ%ÔøΩÔøΩÔøΩüëûÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ◊àÔøΩÔøΩS⁄õU5 ÔøΩÔøΩÔøΩÔøΩÕì]|ÔøΩE{~ÔøΩ	>LIÔøΩuÔøΩ{mÔøΩÔøΩ,tÔøΩRÔøΩÔøΩÔøΩo=ÔøΩ,WÔøΩf ÔøΩÔøΩÔøΩiÔøΩkÔøΩÔøΩÔøΩBÔøΩrÔøΩChyÔøΩÔøΩHÔøΩÔøΩÔøΩb&BM~ÔøΩÔøΩ8$ÔøΩÔøΩm8ÔøΩÔøΩÔøΩfkFÔøΩ8*=ÔøΩ2ÔøΩÔøΩÔøΩÔøΩÔøΩÕπŸçÔøΩÔøΩRÔøΩPÔøΩV9b@ÔøΩ‹£=ÔøΩzÔøΩÔøΩ}ÔøΩÔøΩÔøΩÔøΩ i7ÔøΩ{ÔøΩEÔøΩvÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩciZÔøΩÔøΩ>ÔøΩÔøΩDÔøΩÔøΩUÔøΩ ÔøΩQÔøΩÔøΩÔøΩÔøΩ#ÔøΩÔøΩKÔøΩ`3ÔøΩÔøΩÔøΩÔøΩÔøΩHÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ8?:ÔøΩÔøΩ—¨|ÔøΩ7c5T,∆†JÔøΩeÔøΩÔøΩ‹ûÔøΩÔøΩ}ÔøΩÔøΩ@ÔøΩÔøΩÔøΩÔøΩoÔøΩkÔøΩYÔøΩÔøΩA4ÔøΩoÔøΩ:2ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩyÔøΩCÔøΩÔøΩe-ÔøΩÔøΩ4ÔøΩ|Q‘∏jpÔøΩÔøΩÔøΩÔøΩqÔøΩ){i=pÔøΩÔøΩ	5ÔøΩYU#0.ÔøΩÔøΩÔøΩ%ÔøΩÔøΩÔøΩÔøΩHÔøΩÔøΩcÔøΩÔøΩÔøΩ:ÔøΩÔøΩnÔøΩ -vÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ-ÔøΩÔøΩ'd]V„ù≠0 +ÔøΩRÔøΩÔøΩÔøΩ7EbÔøΩ8›ØÔøΩ=ÔøΩÔøΩÔøΩ3Õª‰∫¨ÔøΩt9ATÔøΩ7ÔøΩÔøΩÔøΩÔøΩÔøΩnÔøΩÔøΩÔøΩÔøΩ$32ËâíÔøΩ-sB|ÔøΩÔøΩÔøΩ*3ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ ÔøΩZ7WÔøΩ)P)ÔøΩ[5ÔøΩ/ÔøΩKDÔøΩL+ÔøΩÏóßÔøΩÔøΩÔøΩ9ÔøΩcIkÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩzÔøΩDÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ!ÔøΩ_ÔøΩÔøΩ‘ÑsÔøΩ)ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩV	ÔøΩÔøΩ6yÔøΩÔøΩÔøΩÔøΩ<ÔøΩvÔøΩ\C~'RÔøΩ)ÔøΩ;DULÔøΩÔøΩÔøΩÔøΩÔøΩDLÔøΩÔøΩÔøΩÔøΩÔøΩ·öºYeÔøΩbﬁûÔøΩÔøΩ6ÔøΩÔøΩqRh ÔøΩs'ÔøΩ'ÔøΩÔøΩ,ÔøΩ7EÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩK	ÔøΩÔøΩ'ÔøΩÔøΩÔøΩ^ÔøΩ=ÔøΩUÔøΩÔøΩÔøΩ8[ÔøΩÔøΩnÔøΩ$F2ÔøΩÔøΩWÔøΩÔøΩÔøΩÔøΩ""ÔøΩdÔøΩÔøΩÔøΩqÔøΩ]ÔøΩ8ÔøΩ^ÔøΩÔøΩLÔøΩÔøΩÔøΩÔøΩ^-o1›àÔøΩÔøΩÔøΩÔøΩ-BÔøΩÔøΩÔøΩ|=Õ©ÔøΩÔøΩÔøΩ?ÔøΩl≈≥5ÔøΩ	ÔøΩÔøΩ/\ÔøΩBÔøΩÔøΩ ÔøΩZ ÔøΩuvÔøΩÔøΩ$ÔøΩC ÔøΩAEÔøΩÔøΩ<fÔøΩÔøΩÔøΩÔøΩv’Æ#ÔøΩ0ÔøΩcÔøΩ+xO6ÔøΩÔøΩ1ÔøΩÔøΩ}ÔøΩ`ÔøΩ(:[HÔøΩÔøΩÔøΩ?ÔøΩ[ÔøΩÔøΩÔøΩ4ÔøΩzÔøΩ∆±I	ÔøΩÔøΩÔøΩN’©ÔøΩ!ÔøΩy1ÔøΩ0ÔøΩDÔøΩÔøΩÔøΩÔøΩÔøΩTÔøΩÔøΩnÔøΩÔøΩÔøΩÔøΩ6ÔøΩz&ÔøΩBRÔøΩÔøΩJÔøΩ;VÔøΩÔøΩÔøΩjWÔøΩÔøΩ ÔøΩ9'ÔøΩ?2iVÔøΩ,}r(`iirÔøΩ8ÔøΩÔøΩÔøΩhÔøΩ+ÔøΩNÔøΩÔøΩWÔøΩeﬂªf…ú$oÔøΩwÔøΩÔøΩ“äÔøΩÔøΩÔøΩqÔøΩÔøΩÔøΩfÔøΩY6ÔøΩxÔøΩz.]ÔøΩÔøΩ7ÔøΩe|/yÔøΩÔøΩpÔøΩ5<ÔøΩÔøΩ,ÔøΩh PÔøΩÔøΩÔøΩcIwÔøΩ>ÔøΩÔøΩÔøΩ vÔøΩ]	Q}ÔøΩ2ƒÆÔøΩÔøΩÔøΩÔøΩÔøΩ<ÔøΩ-wÔøΩL/OÔøΩI3ÔøΩ EÔøΩÔøΩbtÔøΩs5TÔøΩÔøΩANÔøΩ6ÔøΩÔøΩ`ÔøΩ4ZLÔøΩSÌëû	ÔøΩ}aÔøΩÔøΩNÔøΩÔøΩ	lB—äÔøΩ!QÔøΩ\ÔøΩÔøΩ/dLÔøΩz1CÔøΩÔøΩÔøΩÔøΩÔøΩXÔøΩ] |P:ÔøΩ\ÔøΩÔøΩÔøΩÓø∂]ÔøΩÔøΩNÔøΩÔøΩÔøΩÔøΩA52[ÔøΩÔøΩDÔøΩ(ÔøΩxÔøΩÔøΩÔøΩlÔøΩ|qÔøΩoÔøΩÔøΩ~ÔøΩiÔøΩÔøΩ0ÔøΩgÔøΩPÔøΩSÔøΩÔøΩÔøΩUÔøΩÔøΩV'ÔøΩ9ÔøΩ⁄ÜÔøΩÔøΩÔøΩÔøΩ\ÔøΩj{ÔøΩ]fÔøΩRÔøΩÔøΩTlÔøΩÔøΩfhÔøΩn8Us1 	[[ÔøΩÔøΩ(yÔøΩÔøΩdÔøΩ^ÔøΩÔøΩmÔøΩÔøΩÔøΩpÔøΩExÔøΩÔøΩdJÔøΩÔøΩ( endstream endobj 37 0 obj << /Author () /CreationDate (D:20200406142136Z) /Creator (LaTeX with hyperref) /Keywords () /ModDate (D:20200406142136Z) /PTEX.Fullbanner (This is pdfTeX, Version 3.14159265-2.6-1.40.20 \(TeX Live 2019\) kpathsea version 6.3.1) /Producer (pdfTeX-1.40.20) /Subject () /Title () /Trapped /False >> endobj 38 0 obj << /Type /XRef /Length 142 /Filter /FlateDecode /DecodeParms << /Columns 5 /Predictor 12 >> /W [ 1 3 1 ] /Size 39 /ID [<f80682b14b51046a6ce54f97bdc77f9d><997a5ae78837e1a0daa3160ce748e3a1>] >> stream xÔøΩcb &FÔøΩI?ÔøΩ'ÔøΩH0ÔøΩÔøΩ""vÔøΩHIÔøΩ,XÔøΩÔøΩ6ÔøΩ-P$eÔøΩÔøΩÔøΩ[@$oÔøΩÔøΩ	VYfÔøΩÔøΩÔøΩuÔøΩÔøΩ<|`ÔøΩcÔøΩn""ÔøΩÔøΩÔøΩHÔøΩÔøΩÔøΩD*TÔøΩLVbÀÇÔøΩÀÄ]ÔøΩ6GÔøΩDzeÔøΩeÔøΩ@*ÔøΩMÔøΩl^ÔøΩ ""ÔøΩ @ÔøΩÔøΩ]ÔøΩdÔøΩ  ÔøΩÔøΩQ endstream endobj                             startxref 216 %%EOF "
573,p.org sdk v3 reference interfaces SwapOptions#sqrtpricelimitx96,"p.org sdk v3 reference interfaces SwapOptions#sqrtpricelimitx96.    SwapOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesSwapOptionsHelpful?On this pageSwapOptions@uniswap/v3-sdk / Exports / SwapOptionsInterface: SwapOptionsOptions for producing the arguments to send calls to the router.Table of contents‚ÄãProperties‚ÄãdeadlinefeeinputTokenPermitrecipientslippageTolerancesqrtPriceLimitX96Properties‚Äãdeadline‚Äã‚Ä¢ deadline: BigintIshWhen the transaction expires, in epoch seconds.Defined in‚ÄãswapRouter.ts:30fee‚Äã‚Ä¢ Optional fee: FeeOptionsOptional information for taking a fee on output.Defined in‚ÄãswapRouter.ts:45inputTokenPermit‚Äã‚Ä¢ Optional inputTokenPermit: PermitOptionsThe optional permit parameters for spending the input.Defined in‚ÄãswapRouter.ts:35recipient‚Äã‚Ä¢ recipient: stringThe account that should receive the output.Defined in‚ÄãswapRouter.ts:25slippageTolerance‚Äã‚Ä¢ slippageTolerance: PercentHow much the execution price is allowed to move unfavorably from the trade execution price.Defined in‚ÄãswapRouter.ts:20sqrtPriceLimitX96‚Äã‚Ä¢ Optional sqrtPriceLimitX96: BigintIshThe optional price limit for the trade.Defined in‚ÄãswapRouter.ts:40Helpful?PreviousStandardPermitArgumentsNextTickConstructorArgsTable of contentsPropertiesPropertiesdeadlinefeeinputTokenPermitrecipientslippageTolerancesqrtPriceLimitX96DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
574,p.org contracts universal router technical reference#seaport,"p.org contracts universal router technical reference#seaport.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
575,p.org contracts v3 reference core interfaces callback IUniswapV3SwapCallback,"p.org contracts v3 reference core interfaces callback IUniswapV3SwapCallback.    IUniswapV3SwapCallback | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesIERC20MinimalIUniswapV3FactoryIUniswapV3PoolIUniswapV3PoolDeployercallbackIUniswapV3FlashCallbackIUniswapV3MintCallbackIUniswapV3SwapCallbackPoolLibrariesGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreInterfacescallbackIUniswapV3SwapCallbackHelpful?On this pageIUniswapV3SwapCallbackAny contract that calls IUniswapV3PoolActions#swap must implement this interfaceFunctions‚ÄãuniswapV3SwapCallback‚Äã function uniswapV3SwapCallback( int256 amount0Delta, int256 amount1Delta, bytes data ) externalCopyCalled to msg.sender after executing a swap via IUniswapV3Pool#swap.In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.Parameters:‚ÄãNameTypeDescriptionamount0Deltaint256The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.amount1Deltaint256The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.databytesAny data passed through by the caller via the IUniswapV3PoolActions#swap call.Edit this pageHelpful?PreviousIUniswapV3MintCallbackNextIUniswapV3PoolActionsFunctionsuniswapV3SwapCallbackDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
576,p.org sdk core reference modules.md#maxuint256,p.org sdk core reference modules.md#maxuint256. 
577,p.org sdk 1.0.0 reference orchestration,p.org sdk 1.0.0 reference orchestration. 
578,p.org sdk v1 reference orchestration,"p.org sdk v1 reference orchestration.    Orchestration | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKOverviewGuidesGetting StartedTechnical ReferenceDataComputationFormatOrchestrationTransactConstantsTypesüè†V1 SDKTechnical ReferenceOrchestrationHelpful?On this pageOrchestrationOrchestration functions are plain-english wrappers for the function defined in /sdk/1.0.0/reference/data and Computation.Functions suffixed with WithData are synchronous, and require token reserves to be passed in as arguments. Functions without the suffix are asychronous, and require token addresses to be passed in as arguments.tradeExactEthForTokensWithDataThe function facilitates trading an exact amount of ETH for a specified token.Function Signature‚Äãexport function tradeExactEthForTokensWithData(reserves: OptionalReserves, ethAmount: BigNumberish): TradeDetailsCopyInput Parameters‚ÄãParameterTypeDescriptionreservesOptionalReservesReserves data for the output token.ethAmountBigNumberishThe input amount of ETH.Example Usage‚Äãconst tradeDetails: TradeDetails = tradeExactEthForTokensWithData(reserves, '1000000000000000000')CopytradeExactEthForTokensThe function facilitates trading an exact amount of ETH for a specified token.Function Signature‚Äãexport async function tradeExactEthForTokens( tokenAddress: string, ethAmount: BigNumberish, chainIdOrProvider?: ChainIdOrProvider): Promise<TradeDetails>CopyInput Parameters‚ÄãParameterTypeDescriptiontokenAddressstringAddress of output token.ethAmountBigNumberishThe input amount of ETH.chainIdOrProvider?ChainIdOrProviderA supported chain id (1, 3, 4, or 42), or an underlying web3 provider connected to a chain with a supported chain id.Example Usage‚Äãconst tradeDetails: TradeDetails = await tradeExactEthForTokens(tokenAddress, '1000000000000000000')CopytradeEthForExactTokensWithDataThe function facilitates trading ETH for an exact amount of a specified token.Function Signature‚Äãexport function tradeEthForExactTokensWithData(reserves: OptionalReserves, tokenAmount: BigNumberish): TradeDetailsCopyInput Parameters‚ÄãParameterTypeDescriptionreservesOptionalReservesReserves data for the output token.tokenAmountBigNumberishThe output amount of tokens.Example Usage‚Äãconst tradeDetails: TradeDetails = tradeEthForExactTokensWithData(reserves, '1000000000000000000')CopytradeEthForExactTokensThe function facilitates trading ETH for an exact amount of a specified token.Function Signature‚Äãexport async function tradeEthForExactTokens( tokenAddress: string, tokenAmount: BigNumberish, chainIdOrProvider?: ChainIdOrProvider): Promise<TradeDetails>CopyInput Parameters‚ÄãParameterTypeDescriptiontokenAddressstringAddress of output token.tokenAmountBigNumberishThe output amount of tokens.chainIdOrProvider?ChainIdOrProviderA supported chain id (1, 3, 4, or 42), or an underlying web3 provider connected to a chain with a supported chain id.Example Usage‚Äãconst tradeDetails: TradeDetails = await tradeEthForExactTokens(tokenAddress, '1000000000000000000')CopytradeExactTokensForEthWithDataThe function facilitates trading an exact amount of a specified token for ETH.Function Signature‚Äãexport function tradeExactTokensForEthWithData(reserves: OptionalReserves, tokenAmount: BigNumberish): TradeDetailsCopyInput Parameters‚ÄãParameterTypeDescriptionreservesOptionalReservesReserves data for the input token.tokenAmountBigNumberishThe input amount of tokens.Example Usage‚Äãconst tradeDetails: TradeDetails = tradeExactTokensForEthWithData(reserves, '1000000000000000000')CopytradeExactTokensForEthThe function facilitates trading an exact amount of a specified token for ETH.Function Signature‚Äãexport async function tradeExactTokensForEth( tokenAddress: string, tokenAmount: BigNumberish, chainIdOrProvider?: ChainIdOrProvider): Promise<TradeDetails>CopyInput Parameters‚ÄãParameterTypeDescriptiontokenAddressstringAddress of input token.tokenAmountBigNumberishThe input amount of tokens.chainIdOrProvider?ChainIdOrProviderA supported chain id (1, 3, 4, or 42), or an underlying web3 provider connected to a chain with a supported chain id.Example Usage‚Äãconst tradeDetails: TradeDetails = await tradeExactTokensForEth(tokenAddress, '1000000000000000000')CopytradeTokensForExactEthWithDataThe function facilitates trading a specified token for an exact amount of ETH.Function Signature‚Äãexport function tradeTokensForExactEthWithData(reserves: OptionalReserves, ethAmount: BigNumberish): TradeDetailsCopyInput Parameters‚ÄãParameterTypeDescriptionreservesOptionalReservesReserves data for the input token.ethAmountBigNumberishThe outpute amount of ETH.Example Usage‚Äãconst tradeDetails: TradeDetails = tradeTokensForExactEthWithData(reserves, '1000000000000000000')CopytradeTokensForExactEthThe function facilitates trading a specified token for an exact amount of ETH.Function Signature‚Äãexport async function tradeTokensForExactEth( tokenAddress: string, ethAmount: BigNumberish, chainIdOrProvider?: ChainIdOrProvider): Promise<TradeDetails>CopyInput Parameters‚ÄãParameterTypeDescriptiontokenAddressstringAddress of input token.ethAmountBigNumberishThe output amount of ETH.chainIdOrProvider?ChainIdOrProviderA supported chain id (1, 3, 4, or 42), or an underlying web3 provider connected to a chain with a supported chain id.Example Usage‚Äãconst tradeDetails: TradeDetails = await tradeTokensForExactEth(tokenAddress, '1000000000000000000')CopytradeExactTokensForTokensWithDataThe function facilitates trading an exact amount of a specified token for another token.Function Signature‚Äãexport function tradeExactTokensForTokensWithData( reservesInput: OptionalReserves, reservesOutput: OptionalReserves, tokenAmount: BigNumberish): TradeDetailsCopyInput Parameters‚ÄãParameterTypeDescriptionreservesInputOptionalReservesReserves data for the input token.reservesOutputOptionalReservesReserves data for the output token.tokenAmountBigNumberishThe input amount of tokens.Example Usage‚Äãconst tradeDetails: TradeDetails = tradeExactTokensForTokensWithData( reservesInput, reservesOutput, '1000000000000000000')CopytradeExactTokensForTokensThe function facilitates trading an exact amount of a specified token for another token.Function Signature‚Äãexport async function tradeExactTokensForTokens( tokenAddressInput: string, tokenAddressOutput: string, tokenAmount: BigNumberish, chainIdOrProvider?: ChainIdOrProvider): Promise<TradeDetails>CopyInput Parameters‚ÄãParameterTypeDescriptiontokenAddressInputstringAddress of input token.tokenAddressOutputstringAddress of output token.tokenAmountBigNumberishThe input amount of tokens.chainIdOrProvider?ChainIdOrProviderA supported chain id (1, 3, 4, or 42), or an underlying web3 provider connected to a chain with a supported chain id.Example Usage‚Äãconst tradeDetails: TradeDetails = await tradeExactTokensForTokens( tokenAddressInput, tokenAddressOutput, '1000000000000000000')CopytradeTokensForExactTokensWithDataThe function facilitates trading a specified token for an exact amount of another token.Function Signature‚Äãexport function tradeTokensForExactTokensWithData( reservesInput: OptionalReserves, reservesOutput: OptionalReserves, tokenAmount: BigNumberish): TradeDetailsCopyInput Parameters‚ÄãParameterTypeDescriptionreservesInputOptionalReservesReserves data for the input token.reservesOutputOptionalReservesReserves data for the output token.tokenAmountBigNumberishThe output amount of tokens.Example Usage‚Äãconst tradeDetails: TradeDetails = tradeTokensForExactTokensWithData( reservesInput, reservesOutput, '1000000000000000000')CopytradeTokensForExactTokensThe function facilitates trading an exact amount of a specified token for another token.Function Signature‚Äãexport async function tradeTokensForExactTokens( tokenAddressInput: string, tokenAddressOutput: string, tokenAmount: BigNumberish, chainIdOrProvider?: ChainIdOrProvider): Promise<TradeDetails>CopyInput Parameters‚ÄãParameterTypeDescriptiontokenAddressInputstringAddress of input token.tokenAddressOutputstringAddress of output token.tokenAmountBigNumberishThe output amount of tokens.chainIdOrProvider?ChainIdOrProviderA supported chain id (1, 3, 4, or 42), or an underlying web3 provider connected to a chain with a supported chain id.Example Usage‚Äãconst tradeDetails: TradeDetails = await tradeTokensForExactTokens( tokenAddressInput, tokenAddressOutput, '1000000000000000000')CopyHelpful?PreviousFormatNextTransactFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageFunction SignatureInput ParametersExample UsageDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
579,p.org sdk swap widget guides examples,"p.org sdk swap widget guides examples.    Swap Widget Example Themes | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap WidgetOverviewGuidesGetting StartedExample ThemesTechnical Referenceweb3-reactCore SDKV2 SDKV1 SDKüè†Swap WidgetGuidesExample ThemesHelpful?On this pageSwap Widget Example ThemesThe Getting Started guide showed how to embed the swap widget and let your users trade tokens on the Uniswap Protocol without leaving your dApp.Below you‚Äôll find a few examples showing how you can customize the widget theme to match the look and feel of your dApp. All of them can be integrated using the following code snippet where you can set your theme:import { Theme, SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/dist/fonts.css'const theme: Theme = { // Check out the theme examples below}function App() { <div className=""Uniswap""> <SwapWidget theme={theme} /> </div>}CopyTheme Examples‚ÄãCopy any of the theme object below to start making your own custom appearance for the swap widget. You might also need the right CSS import for any custom fonts.const theme: Theme = { primary: '#1F4A05', secondary: '#5F7D52', interactive: '#CBD6BA', container: '#D9ECD9', module: '#E9F7DF', accent: '#8E8B78', outline: '#CADDC2', dialog: '#FFF', fontFamily: 'Nunito', borderRadius: 0.8,}Copyconst theme: Theme = { primary: '#000', secondary: '#666', interactive: '#0089EC', container: '#FFF', module: '#E7E7E7', accent: '#3D3B31', outline: '#343D3A', dialog: '#FFF', fontFamily: 'Verdana', borderRadius: 0.8,}Copyconst theme: Theme = { primary: '#FFF', secondary: '#A9A9A9', interactive: '#000', container: '#4E4E5A', module: '#222633', accent: '#71FF98', outline: '#CC1', dialog: '#000', fontFamily: 'Josefin Sans', borderRadius: 0.5,}Copyconst theme: Theme = { primary: '#000', secondary: '#A9A9A9', interactive: '#1E4D3C', container: '#98D747', module: '#FFF', accent: '#FD5B00', outline: '#1E4D3C', dialog: '#000', fontFamily: 'Inter', borderRadius: 0.2,}Copyconst theme: Theme = { primary: '#001D82', secondary: '#6677C1', interactive: '#005BAE', container: '#ABD6FE', module: '#FFF7FB', accent: '#FF7BC2', outline: '#ABD6FE', dialog: '#FFF', fontFamily: 'Arvo', borderRadius: 1,}Copyconst theme: Theme = { primary: '#000', secondary: '#666', interactive: '#AFAFAF', container: '#DADADA', module: '#FFF', accent: '#0018F4', outline: '#000', dialog: '#FFF', fontFamily: 'Comic Sans MS', borderRadius: 0.2,}CopyQuestions?Join the Discord channel to ask questions and get support from the Uniswap community.Helpful?PreviousGetting StartedNextAPI V2 ReferenceTheme ExamplesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
580,p.org sdk v3 reference classes TickListDataProvider#gettick,"p.org sdk v3 reference classes TickListDataProvider#gettick.    TickListDataProvider | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickListDataProviderHelpful?On this pageTickListDataProvider@uniswap/v3-sdk / Exports / TickListDataProviderClass: TickListDataProviderA data provider for ticks that is backed by an in-memory array of ticks.Implements‚ÄãTickDataProviderTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãticksMethods‚ÄãgetTicknextInitializedTickWithinOneWordConstructors‚Äãconstructor‚Äã‚Ä¢ new TickListDataProvider(ticks, tickSpacing)Parameters‚ÄãNameTypeticks(Tick | TickConstructorArgs)[]tickSpacingnumberDefined in‚Äãentities/tickListDataProvider.ts:12Properties‚Äãticks‚Äã‚Ä¢ Private ticks: readonly Tick[]Defined in‚Äãentities/tickListDataProvider.ts:10Methods‚ÄãgetTick‚Äã‚ñ∏ getTick(tick): Promise<{ liquidityGross: BigintIsh ; liquidityNet: BigintIsh }>Return information corresponding to a specific tickParameters‚ÄãNameTypeDescriptionticknumberthe tick to loadReturns‚ÄãPromise<{ liquidityGross: BigintIsh ; liquidityNet: BigintIsh }>Implementation of‚ÄãTickDataProvider.getTickDefined in‚Äãentities/tickListDataProvider.ts:18nextInitializedTickWithinOneWord‚Äã‚ñ∏ nextInitializedTickWithinOneWord(tick, lte, tickSpacing): Promise<[number, boolean]>Return the next tick that is initialized within a single wordParameters‚ÄãNameTypeDescriptionticknumberThe current tickltebooleanWhether the next tick should be lte the current ticktickSpacingnumberThe tick spacing of the poolReturns‚ÄãPromise<[number, boolean]>Implementation of‚ÄãTickDataProvider.nextInitializedTickWithinOneWordDefined in‚Äãentities/tickListDataProvider.ts:22Helpful?PreviousTickListNextTickMathImplementsTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesticksMethodsgetTicknextInitializedTickWithinOneWordDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
581,p.org sdk core reference classes Fraction#remainder,"p.org sdk core reference classes Fraction#remainder.    Fraction | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesFractionHelpful?On this pageFraction@uniswap/sdk-core / Exports / FractionClass: FractionHierarchy‚ÄãFraction‚Ü≥ CurrencyAmount‚Ü≥ Percent‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatornumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionConstructors‚Äãconstructor‚Äã‚Ä¢ new Fraction(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:107subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:138toSignificant‚Äã‚ñ∏ toSignificant(significantDigits, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:123tryParseFraction‚Äã‚ñ∏ Static Private tryParseFraction(fractionish): FractionParameters‚ÄãNameTypefractionishBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:33Helpful?PreviousEtherNextNativeCurrencyHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatornumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
582,p.org sdk v3 reference interfaces StandardPermitArguments#deadline,p.org sdk v3 reference interfaces StandardPermitArguments#deadline.    StandardPermitArguments | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesStandardPermitArgumentsHelpful?On this pageStandardPermitArguments@uniswap/v3-sdk / Exports / StandardPermitArgumentsInterface: StandardPermitArgumentsTable of contents‚ÄãProperties‚ÄãamountdeadlinersvProperties‚Äãamount‚Äã‚Ä¢ amount: BigintIshDefined in‚ÄãselfPermit.ts:10deadline‚Äã‚Ä¢ deadline: BigintIshDefined in‚ÄãselfPermit.ts:11r‚Äã‚Ä¢ r: stringDefined in‚ÄãselfPermit.ts:8s‚Äã‚Ä¢ s: stringDefined in‚ÄãselfPermit.ts:9v‚Äã‚Ä¢ v: 0 | 1 | 27 | 28Defined in‚ÄãselfPermit.ts:7Helpful?PreviousSafeTransferOptionsNextSwapOptionsTable of contentsPropertiesPropertiesamountdeadlinersvDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
583,p.org sdk core reference classes Price#divide,"p.org sdk core reference classes Price#divide.    Price | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPriceHelpful?On this pagePrice@uniswap/sdk-core / Exports / PriceClass: Price<TBase, TQuote>Type parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyHierarchy‚ÄãFraction‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessors‚ÄãadjustedForDecimalsasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Price<TBase, TQuote>(...args)Construct a price, either with the base and quote currency amount, or theType parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyParameters‚ÄãNameType...args[TBase, TQuote, BigintIsh, BigintIsh] | [{ baseAmount: CurrencyAmount<TBase> ; quoteAmount: CurrencyAmount<TQuote> }]Overrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/price.ts:18Properties‚ÄãbaseCurrency‚Äã‚Ä¢ Readonly baseCurrency: TBaseDefined in‚Äãentities/fractions/price.ts:10denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25quoteCurrency‚Äã‚Ä¢ Readonly quoteCurrency: TQuoteDefined in‚Äãentities/fractions/price.ts:11scalar‚Äã‚Ä¢ Readonly scalar: FractionDefined in‚Äãentities/fractions/price.ts:12Accessors‚ÄãadjustedForDecimals‚Äã‚Ä¢ Private get adjustedForDecimals(): FractionGet the value scaled by decimals for formattingReturns‚ÄãFractionDefined in‚Äãentities/fractions/price.ts:77asFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.addDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.divideDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): Price<TQuote, TBase>Flip the price, switching the base and quote currencyReturns‚ÄãPrice<TQuote, TBase>Overrides‚ÄãFraction.invertDefined in‚Äãentities/fractions/price.ts:49lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply<TOtherQuote>(other): Price<TBase, TOtherQuote>Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currencyType parameters‚ÄãNameTypeTOtherQuoteextends CurrencyParameters‚ÄãNameTypeDescriptionotherPrice<TQuote, TOtherQuote>the other priceReturns‚ÄãPrice<TBase, TOtherQuote>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/price.ts:57quote‚Äã‚ñ∏ quote(currencyAmount): CurrencyAmount<TQuote>Return the amount of quote currency corresponding to a given amount of the base currencyParameters‚ÄãNameTypeDescriptioncurrencyAmountCurrencyAmount<TBase>the amount of base currency to quote against the priceReturns‚ÄãCurrencyAmount<TQuote>Defined in‚Äãentities/fractions/price.ts:67subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.subtractDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber4format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/price.ts:85toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/price.ts:81Helpful?PreviousPercentNextTokenType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessorsadjustedForDecimalsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
584,p.org contracts v2 reference smart contracts pair erc 20#transfer,p.org contracts v2 reference smart contracts pair erc 20#transfer. 
585,p.org sdk core reference classes NativeCurrency#isnative,"p.org sdk core reference classes NativeCurrency#isnative.    NativeCurrency | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesNativeCurrencyHelpful?On this pageNativeCurrency@uniswap/sdk-core / Exports / NativeCurrencyClass: NativeCurrencyRepresents the native currency of the chain on which it resides, e.g.Hierarchy‚ÄãBaseCurrency‚Ü≥ NativeCurrency‚Ü≥‚Ü≥ EtherTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãchainIddecimalsisNativeisTokennamesymbolAccessors‚ÄãwrappedMethods‚ÄãequalsConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new NativeCurrency(chainId, decimals, symbol?, name?)Constructs an instance of the base class BaseCurrency.Parameters‚ÄãNameTypeDescriptionchainIdnumberthe chain ID on which this currency residesdecimalsnumberdecimals of the currencysymbol?stringsymbol of the currencyname?stringof the currencyInherited from‚ÄãBaseCurrency.constructorDefined in‚Äãentities/baseCurrency.ts:42Properties‚ÄãchainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãBaseCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãBaseCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: trueOverrides‚ÄãBaseCurrency.isNativeDefined in‚Äãentities/nativeCurrency.ts:7isToken‚Äã‚Ä¢ Readonly isToken: falseOverrides‚ÄãBaseCurrency.isTokenDefined in‚Äãentities/nativeCurrency.ts:8name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãBaseCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãBaseCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29Accessors‚Äãwrapped‚Äã‚Ä¢ Abstract get wrapped(): TokenReturn the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to be used in UniswapReturns‚ÄãTokenInherited from‚ÄãBaseCurrency.wrappedDefined in‚Äãentities/baseCurrency.ts:62Methods‚Äãequals‚Äã‚ñ∏ Abstract equals(other): booleanReturns whether this currency is functionally equivalent to the other currencyParameters‚ÄãNameTypeDescriptionotherCurrencythe other currencyReturns‚ÄãbooleanInherited from‚ÄãBaseCurrency.equalsDefined in‚Äãentities/baseCurrency.ts:56Helpful?PreviousFractionNextPercentHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertieschainIddecimalsisNativeisTokennamesymbolAccessorswrappedMethodsequalsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
586,p.org contracts v3 guides providing liquidity mint a position,"p.org contracts v3 guides providing liquidity mint a position.    Mint a New Position | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquiditySet Up Your ContractMint a New PositionCollecting FeesDecrease LiquidityIncrease LiquidityThe Full ContractLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolGuidesProviding LiquidityMint a New PositionHelpful?On this pageMint a New PositionInput Parameters‚ÄãTo mint a new position, we use the nonFungiblePositionManager and call mint.For the sake of this example, we're hard coding the token amounts to be minted. In production, this would be a user-configurable function argument. /// @notice Calls the mint function defined in periphery, mints the same amount of each token. For this example we are providing 1000 DAI and 1000 USDC in liquidity /// @return tokenId The id of the newly minted ERC721 /// @return liquidity The amount of liquidity for the position /// @return amount0 The amount of token0 /// @return amount1 The amount of token1 function mintNewPosition()  external  returns (   uint256 tokenId,   uint128 liquidity,   uint256 amount0,   uint256 amount1  ) {  // For this example, we will provide equal amounts of liquidity in both assets.  // Providing liquidity in both assets means liquidity will be earning fees and is considered in-range.  uint256 amount0ToMint = 1000;  uint256 amount1ToMint = 1000;CopyCalling Mint‚ÄãHere we approve the nonfungiblePositionManager to use the contracts' tokens, then populate the MintParams struct and assign it to a local variable params that will be passed to the nonfungiblePositionManager when we call mint.By using TickMath.MIN_TICK and TickMath.MAX_TICK, we are providing liquidity across the whole range of the pool. In production you may want to specify a more concentrated position.We set amount0Min and amount1Min to zero for the example - but this would be a vulnerability in production. A function calling mint with no slippage protection would be vulnerable to a frontrunning attack designed to execute the mint call at an inaccurate price.For a more secure practice the developer would need to implement a slippage estimation process.Note that this function will not initialize a pool where one does not yet exist.  // Approve the position manager  TransferHelper.safeApprove(DAI, address(nonfungiblePositionManager), amount0ToMint);  TransferHelper.safeApprove(USDC, address(nonfungiblePositionManager), amount1ToMint);  INonfungiblePositionManager.MintParams memory params =   INonfungiblePositionManager.MintParams({    token0: DAI,    token1: USDC,    fee: poolFee,    tickLower: TickMath.MIN_TICK,    tickUpper: TickMath.MAX_TICK,    amount0Desired: amount0ToMint,    amount1Desired: amount1ToMint,    amount0Min: 0,    amount1Min: 0,    recipient: address(this),    deadline: block.timestamp   });  // Note that the pool defined by DAI/USDC and fee tier 0.3% must already be created and initialized in order to mint  (tokenId, liquidity, amount0, amount1) = nonfungiblePositionManager.mint(params);CopyUpdating The Deposit Mapping And Refunding The Calling Address‚ÄãNow we can call the internal function we previously wrote in Setting Up Your Contract. After that, we can take any liquidity leftover from minting and refund it to msg.sender.  // Create a deposit  _createDeposit(msg.sender, tokenId);  // Remove allowance and refund in both assets.  if (amount0 < amount0ToMint) {   TransferHelper.safeApprove(DAI, address(nonfungiblePositionManager), 0);   uint256 refund0 = amount0ToMint - amount0;   TransferHelper.safeTransfer(DAI, msg.sender, refund0);  }  if (amount1 < amount1ToMint) {   TransferHelper.safeApprove(USDC, address(nonfungiblePositionManager), 0);   uint256 refund1 = amount1ToMint - amount1;   TransferHelper.safeTransfer(USDC, msg.sender, refund1);  } }CopyThe Full Example‚Äã /// @notice Calls the mint function defined in periphery, mints the same amount of each token. For this example we are providing 1000 DAI and 1000 USDC in liquidity /// @return tokenId The id of the newly minted ERC721 /// @return liquidity The amount of liquidity for the position /// @return amount0 The amount of token0 /// @return amount1 The amount of token1 function mintNewPosition()  external  returns (   uint256 tokenId,   uint128 liquidity,   uint256 amount0,   uint256 amount1  ) {  // For this example, we will provide equal amounts of liquidity in both assets.  // Providing liquidity in both assets means liquidity will be earning fees and is considered in-range.  uint256 amount0ToMint = 1000;  uint256 amount1ToMint = 1000;  // Approve the position manager  TransferHelper.safeApprove(DAI, address(nonfungiblePositionManager), amount0ToMint);  TransferHelper.safeApprove(USDC, address(nonfungiblePositionManager), amount1ToMint);  INonfungiblePositionManager.MintParams memory params =   INonfungiblePositionManager.MintParams({    token0: DAI,    token1: USDC,    fee: poolFee,    tickLower: TickMath.MIN_TICK,    tickUpper: TickMath.MAX_TICK,    amount0Desired: amount0ToMint,    amount1Desired: amount1ToMint,    amount0Min: 0,    amount1Min: 0,    recipient: address(this),    deadline: block.timestamp   });  // Note that the pool defined by DAI/USDC and fee tier 0.3% must already be created and initialized in order to mint  (tokenId, liquidity, amount0, amount1) = nonfungiblePositionManager.mint(params);  // Create a deposit  _createDeposit(msg.sender, tokenId);  // Remove allowance and refund in both assets.  if (amount0 < amount0ToMint) {   TransferHelper.safeApprove(DAI, address(nonfungiblePositionManager), 0);   uint256 refund0 = amount0ToMint - amount0;   TransferHelper.safeTransfer(DAI, msg.sender, refund0);  }  if (amount1 < amount1ToMint) {   TransferHelper.safeApprove(USDC, address(nonfungiblePositionManager), 0);   uint256 refund1 = amount1ToMint - amount1;   TransferHelper.safeTransfer(USDC, msg.sender, refund1);  } }CopyEdit this pageHelpful?PreviousSet Up Your ContractNextCollecting FeesInput ParametersCalling MintUpdating The Deposit Mapping And Refunding The Calling AddressThe Full ExampleDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
587,p.org sdk v3 reference interfaces RemoveLiquidityOptions#liquiditypercentage,"p.org sdk v3 reference interfaces RemoveLiquidityOptions#liquiditypercentage.    RemoveLiquidityOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesRemoveLiquidityOptionsHelpful?On this pageRemoveLiquidityOptions@uniswap/v3-sdk / Exports / RemoveLiquidityOptionsInterface: RemoveLiquidityOptionsOptions for producing the calldata to exit a position.Table of contents‚ÄãProperties‚ÄãburnTokencollectOptionsdeadlineliquidityPercentagepermitslippageTolerancetokenIdProperties‚ÄãburnToken‚Äã‚Ä¢ Optional burnToken: booleanWhether the NFT should be burned if the entire position is being exited, by default false.Defined in‚ÄãnonfungiblePositionManager.ts:162collectOptions‚Äã‚Ä¢ collectOptions: Omit<CollectOptions, ""tokenId"">Parameters to be passed on to collectDefined in‚ÄãnonfungiblePositionManager.ts:172deadline‚Äã‚Ä¢ deadline: BigintIshWhen the transaction expires, in epoch seconds.Defined in‚ÄãnonfungiblePositionManager.ts:157liquidityPercentage‚Äã‚Ä¢ liquidityPercentage: PercentThe percentage of position liquidity to exit.Defined in‚ÄãnonfungiblePositionManager.ts:147permit‚Äã‚Ä¢ Optional permit: NFTPermitOptionsThe optional permit of the token ID being exited, in case the exit transaction is being sent by an account that does not own the NFTDefined in‚ÄãnonfungiblePositionManager.ts:167slippageTolerance‚Äã‚Ä¢ slippageTolerance: PercentHow much the pool price is allowed to move.Defined in‚ÄãnonfungiblePositionManager.ts:152tokenId‚Äã‚Ä¢ tokenId: BigintIshThe ID of the token to exitDefined in‚ÄãnonfungiblePositionManager.ts:142Helpful?PreviousQuoteOptionsNextSafeTransferOptionsTable of contentsPropertiesPropertiesburnTokencollectOptionsdeadlineliquidityPercentagepermitslippageTolerancetokenIdDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
588,p.org sdk v3 reference interfaces SwapOptions,"p.org sdk v3 reference interfaces SwapOptions.    SwapOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesSwapOptionsHelpful?On this pageSwapOptions@uniswap/v3-sdk / Exports / SwapOptionsInterface: SwapOptionsOptions for producing the arguments to send calls to the router.Table of contents‚ÄãProperties‚ÄãdeadlinefeeinputTokenPermitrecipientslippageTolerancesqrtPriceLimitX96Properties‚Äãdeadline‚Äã‚Ä¢ deadline: BigintIshWhen the transaction expires, in epoch seconds.Defined in‚ÄãswapRouter.ts:30fee‚Äã‚Ä¢ Optional fee: FeeOptionsOptional information for taking a fee on output.Defined in‚ÄãswapRouter.ts:45inputTokenPermit‚Äã‚Ä¢ Optional inputTokenPermit: PermitOptionsThe optional permit parameters for spending the input.Defined in‚ÄãswapRouter.ts:35recipient‚Äã‚Ä¢ recipient: stringThe account that should receive the output.Defined in‚ÄãswapRouter.ts:25slippageTolerance‚Äã‚Ä¢ slippageTolerance: PercentHow much the execution price is allowed to move unfavorably from the trade execution price.Defined in‚ÄãswapRouter.ts:20sqrtPriceLimitX96‚Äã‚Ä¢ Optional sqrtPriceLimitX96: BigintIshThe optional price limit for the trade.Defined in‚ÄãswapRouter.ts:40Helpful?PreviousStandardPermitArgumentsNextTickConstructorArgsTable of contentsPropertiesPropertiesdeadlinefeeinputTokenPermitrecipientslippageTolerancesqrtPriceLimitX96DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
589,p.org contracts v2 reference smart contracts factory#getpair,"p.org contracts v2 reference smart contracts factory#getpair.    Factory | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsFactoryHelpful?On this pageFactoryCode‚ÄãUniswapV2Factory.solAddressUniswapV2Factory is deployed at 0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f on the Ethereum mainnet, and the Ropsten, Rinkeby, G√∂rli, and Kovan testnets. It was built from commit 8160750.EventsPairCreated‚Äãevent PairCreated(address indexed token0, address indexed token1, address pair, uint);CopyEmitted each time a pair is created via createPair.token0 is guaranteed to be strictly less than token1 by sort order.The final uint log value will be 1 for the first pair created, 2 for the second, etc. (see allPairs/getPair).Read-Only FunctionsgetPair‚Äãfunction getPair(address tokenA, address tokenB) external view returns (address pair);CopyReturns the address of the pair for tokenA and tokenB, if it has been created, else address(0) (0x0000000000000000000000000000000000000000).tokenA and tokenB are interchangeable.Pair addresses can also be calculated deterministically via the SDK.allPairs‚Äãfunction allPairs(uint) external view returns (address pair);CopyReturns the address of the nth pair (0-indexed) created through the factory, or address(0) (0x0000000000000000000000000000000000000000) if not enough pairs have been created yet.Pass 0 for the address of the first pair created, 1 for the second, etc.allPairsLength‚Äãfunction allPairsLength() external view returns (uint);CopyReturns the total number of pairs created through the factory so far.feeTo‚Äãfunction feeTo() external view returns (address);CopySee Protocol Charge Calculation.feeToSetter‚Äãfunction feeToSetter() external view returns (address);CopyThe address allowed to change feeTo.State-Changing FunctionscreatePair‚Äãfunction createPair(address tokenA, address tokenB) external returns (address pair);CopyCreates a pair for tokenA and tokenB if one doesn't exist already.tokenA and tokenB are interchangeable.Emits PairCreated.Interfaceimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol';Copypragma solidity >=0.5.0;interface IUniswapV2Factory { event PairCreated(address indexed token0, address indexed token1, address pair, uint); function getPair(address tokenA, address tokenB) external view returns (address pair); function allPairs(uint) external view returns (address pair); function allPairsLength() external view returns (uint); function feeTo() external view returns (address); function feeToSetter() external view returns (address); function createPair(address tokenA, address tokenB) external returns (address pair);}CopyABIimport IUniswapV2Factory from '@uniswap/v2-core/build/IUniswapV2Factory.json'Copyhttps://unpkg.com/@uniswap/v2-core@1.0.0/build/IUniswapV2Factory.jsonEdit this pageHelpful?PreviousGovernance ReferenceNextPairCodePairCreatedgetPairallPairsallPairsLengthfeeTofeeToSettercreatePairDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
590,p.org sdk v3 reference classes Pool#liquidity,"p.org sdk v3 reference classes Pool#liquidity.    Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPoolHelpful?On this pagePool@uniswap/v3-sdk / Exports / PoolClass: PoolRepresents a V3 poolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1Accessors‚ÄãchainIdtickSpacingtoken0Pricetoken1PriceMethods‚ÄãgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressConstructors‚Äãconstructor‚Äã‚Ä¢ new Pool(tokenA, tokenB, fee, sqrtRatioX96, liquidity, tickCurrent, ticks?)Construct a poolParameters‚ÄãNameTypeDefault valueDescriptiontokenATokenundefinedOne of the tokens in the pooltokenBTokenundefinedThe other token in the poolfeeFeeAmountundefinedThe fee in hundredths of a bips of the input amount of every swap that is collected by the poolsqrtRatioX96BigintIshundefinedThe sqrt of the current ratio of amounts of token1 to token0liquidityBigintIshundefinedThe current value of in range liquiditytickCurrentnumberundefinedThe current tick of the poolticksTickDataProvider | (Tick | TickConstructorArgs)[]NO_TICK_DATA_PROVIDER_DEFAULTThe current state of the pool ticks or a data provider that can return tick dataDefined in‚Äãentities/pool.ts:70Properties‚Äã_token0Price‚Äã‚Ä¢ Private Optional _token0Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:41_token1Price‚Äã‚Ä¢ Private Optional _token1Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:42fee‚Äã‚Ä¢ Readonly fee: FeeAmountDefined in‚Äãentities/pool.ts:35liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/pool.ts:37sqrtRatioX96‚Äã‚Ä¢ Readonly sqrtRatioX96: defaultDefined in‚Äãentities/pool.ts:36tickCurrent‚Äã‚Ä¢ Readonly tickCurrent: numberDefined in‚Äãentities/pool.ts:38tickDataProvider‚Äã‚Ä¢ Readonly tickDataProvider: TickDataProviderDefined in‚Äãentities/pool.ts:39token0‚Äã‚Ä¢ Readonly token0: TokenDefined in‚Äãentities/pool.ts:33token1‚Äã‚Ä¢ Readonly token1: TokenDefined in‚Äãentities/pool.ts:34Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns the chain ID of the tokens in the pool.Returns‚ÄãnumberDefined in‚Äãentities/pool.ts:149tickSpacing‚Äã‚Ä¢ get tickSpacing(): numberReturns‚ÄãnumberDefined in‚Äãentities/pool.ts:317token0Price‚Äã‚Ä¢ get token0Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:109token1Price‚Äã‚Ä¢ get token1Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:124Methods‚ÄãgetInputAmount‚Äã‚ñ∏ getInputAmount(outputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given a desired output amount of a token, return the computed input amount and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptionoutputAmountCurrencyAmount<Token>the output amount for which to quote the input amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The input amount and the pool with updated stateDefined in‚Äãentities/pool.ts:185getOutputAmount‚Äã‚ñ∏ getOutputAmount(inputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given an input amount of a token, return the computed output amount, and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptioninputAmountCurrencyAmount<Token>The input amount for which to quote the output amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limitReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The output amount and the pool with updated stateDefined in‚Äãentities/pool.ts:159involvesToken‚Äã‚ñ∏ involvesToken(token): booleanReturns true if the token is either token0 or token1Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to checkReturns‚ÄãbooleanTrue if token is either token0 or tokenDefined in‚Äãentities/pool.ts:102priceOf‚Äã‚ñ∏ priceOf(token): Price<Token, Token>Return the price of the given token in terms of the other token in the pool.Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to return price ofReturns‚ÄãPrice<Token, Token>The price of the given token, in terms of the other.Defined in‚Äãentities/pool.ts:141swap‚Äã‚ñ∏ Private swap(zeroForOne, amountSpecified, sqrtPriceLimitX96?): Promise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>Executes a swapParameters‚ÄãNameTypeDescriptionzeroForOnebooleanWhether the amount in is token0 or token1amountSpecifieddefaultThe amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>amountCalculatedsqrtRatioX96liquiditytickCurrentDefined in‚Äãentities/pool.ts:215getAddress‚Äã‚ñ∏ Static getAddress(tokenA, tokenB, fee, initCodeHashManualOverride?, factoryAddressOverride?): stringParameters‚ÄãNameTypetokenATokentokenBTokenfeeFeeAmountinitCodeHashManualOverride?stringfactoryAddressOverride?stringReturns‚ÄãstringDefined in‚Äãentities/pool.ts:44Helpful?PreviousPaymentsNextPositionTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1AccessorschainIdtickSpacingtoken0Pricetoken1PriceMethodsgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
591,p.org sdk v3 reference interfaces NFTPermitOptions#spender,p.org sdk v3 reference interfaces NFTPermitOptions#spender.    NFTPermitOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesNFTPermitOptionsHelpful?On this pageNFTPermitOptions@uniswap/v3-sdk / Exports / NFTPermitOptionsInterface: NFTPermitOptionsTable of contents‚ÄãProperties‚ÄãdeadlinersspendervProperties‚Äãdeadline‚Äã‚Ä¢ deadline: BigintIshDefined in‚ÄãnonfungiblePositionManager.ts:131r‚Äã‚Ä¢ r: stringDefined in‚ÄãnonfungiblePositionManager.ts:129s‚Äã‚Ä¢ s: stringDefined in‚ÄãnonfungiblePositionManager.ts:130spender‚Äã‚Ä¢ spender: stringDefined in‚ÄãnonfungiblePositionManager.ts:132v‚Äã‚Ä¢ v: 0 | 1 | 27 | 28Defined in‚ÄãnonfungiblePositionManager.ts:128Helpful?PreviousMintSpecificOptionsNextQuoteOptionsTable of contentsPropertiesPropertiesdeadlinersspendervDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
592,p.org sdk core reference classes Percent#tosignificant,"p.org sdk core reference classes Percent#tosignificant.    Percent | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPercentHelpful?On this pagePercent@uniswap/sdk-core / Exports / PercentClass: PercentHierarchy‚ÄãFraction‚Ü≥ PercentTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatorisPercentnumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Percent(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshInherited from‚ÄãFraction.constructorDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26isPercent‚Äã‚Ä¢ Readonly isPercent: trueThis boolean prevents a fraction from being interpreted as a PercentDefined in‚Äãentities/fractions/percent.ts:19numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.addDefined in‚Äãentities/fractions/percent.ts:21divide‚Äã‚ñ∏ divide(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/percent.ts:33equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/percent.ts:29subtract‚Äã‚ñ∏ subtract(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/percent.ts:25toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber2format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/percent.ts:41toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber5format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/percent.ts:37Helpful?PreviousNativeCurrencyNextPriceHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatorisPercentnumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
593,p.org contracts permit2 reference signature transfer,"p.org contracts permit2 reference signature transfer.    SignatureTransfer | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2OverviewTechnical ReferenceSignatureTransferAllowanceTransferV2 ProtocolV1 Protocolüè†Permit2Technical ReferenceSignatureTransferHelpful?On this pageSignatureTransferSource CodeOverview‚ÄãThe main entry points on this contract are:permitTransferFromUse permitTransferFrom when you want to transfer a token from an owner through signature validation.permitWitnessTransferFromUse permitWitnessTransferFrom when you want to transfer a token from an owner through signature validation, but you would also like to validate other data. Any other data you wish to be validated can be passed through with the witness param.Each of these functions is overloaded with a batched version that allows users to transfer multiple tokens with 1 transaction.Functions‚ÄãSingle permitTransferFrom‚ÄãUse the permitTransferFrom to transfer just one token.Function signaturefunction permitTransferFrom(  PermitTransferFrom memory permit,  SignatureTransferDetails calldata transferDetails,  address owner,  bytes calldata signature ) externalCopyParameterspermit - Construct PermitTransferFrom struct with the following:struct PermitTransferFrom {  TokenPermissions permitted;  // a unique value for every token owner's signature to prevent signature replays  uint256 nonce;  // deadline on the permit signature  uint256 deadline; }struct TokenPermissions {  // ERC20 token address  address token;  // the maximum amount that can be spent  uint256 amount; }CopytransferDetails - information about recipient and amountstruct SignatureTransferDetails {  // recipient address  address to;  // spender requested amount  uint256 requestedAmount; }Copyowner - the signer of the permit message and owner of the tokenssignature - the signature over the permit data. Supports EOA signatures, compact signatures defined by EIP-2098, and contract signatures defined by EIP-1271Batched permitTransferFrom‚ÄãUse permitTransferFrom with the batched parameters when you want to transfer multiple tokens from an owner.Function Signaturefunction permitTransferFrom(  PermitBatchTransferFrom memory permit,  SignatureTransferDetails[] calldata transferDetails,  address owner,  bytes calldata signature ) externalCopyParameterspermit - Construct PermitBatchTransferFrom with the following:struct PermitBatchTransferFrom {  // the tokens and corresponding amounts permitted for a transfer  TokenPermissions[] permitted;  // a unique value for every token owner's signature to prevent signature replays  uint256 nonce;  // deadline on the permit signature  uint256 deadline; }struct TokenPermissions {  // ERC20 token address  address token;  // the maximum amount that can be spent  uint256 amount; }CopytransferDetails - parameterized by the spender with information about the token transfer.The length of the SignatureTransferDetails array must equal the length of the TokenPermissions array passed in with PermitBatchTransferFrom struct. The token to be transferred specified in the TokenPermissions array should match the index of the SignatureTransferDetails array.Note that if a spender is permitted to a token but does not need to transfer that token, they can specify that the requestedAmount is 0 so that the transfer is skipped.owner - the signer of the permit message and owner of the tokensstruct SignatureTransferDetails {  // recipient address  address to;  // spender requested amount  uint256 requestedAmount; }Copysignature - the signature over the permit data. Supports EOA signatures, compact signatures defined by EIP-2098, and contract signatures defined by EIP-1271Single permitWitnessTransferFrom‚ÄãFunction Signaturefunction permitWitnessTransferFrom(  PermitTransferFrom memory permit,  SignatureTransferDetails calldata transferDetails,  address owner,  bytes32 witness,  string calldata witnessTypeString,  bytes calldata signature ) externalCopyParameterspermit - constructed with the same type as defined above in the single permitTransferFrom casetransferDetails constructed with same type as defined above in the single permitTransferFrom caseowner - the signer of the permit message and owner of the tokenswitness - arbitrary data passed through that was signed by the user. Is used to reconstruct the signature. Pass through this data if you want the permit signature recovery also to validate other data.witnessTypeString - a string that defines the typed data that the witness was hashed from. It must also include the TokenPermissions struct and comply with EIP-712 struct ordering. See an example below.signature - the signature over the permit data. Supports EOA signatures, compact signatures defined by EIP-2098, and contract signatures defined by EIP-1271Batch permitWitnessTransferFrom‚ÄãFunction Signaturefunction permitWitnessTransferFrom(  PermitBatchTransferFrom memory permit,  SignatureTransferDetails[] calldata transferDetails,  address owner,  bytes32 witness,  string calldata witnessTypeString,  bytes calldata signature ) externalCopyParameterspermit - constructed with the same type in the batched case of permitTransferFromtransferDetails - constructed with the same type in the batched case of permitTransferFromowner - the signer of the permit message and owner of the tokenswitness - arbitrary data passed through that was signed by the user. Is used to reconstruct the signature. Pass through this data if you want the permit signature recovery to also validate other data.witnessTypeString - a string that defines the typed data that the witness was hashed from. It must also include the TokenPermissions struct and comply with EIP-712 struct ordering. See an example below.signature - the signature over the permit data. Supports EOA signatures, compact signatures defined by EIP-2098, and contract signatures defined by EIP-1271Example permitWitnessTransferFrom parametersIf an integrating contract would also like the signer to verify information about a trade, an integrating contract may ask the signer to also sign an ExampleTrade object that we define below:struct ExampleTrade { address exampleTokenAddress; uint256 exampleMinimumAmountOut;}CopyFollowing EIP-721, the typehash for the data would be defined by:bytes32 _EXAMPLE_TRADE_TYPEHASH = keccak256('ExampleTrade(address exampleTokenAddress,uint256 exampleMinimumAmountOut)');CopyThe witness that should be passed along with the permit message should be: bytes32 witness = keccak256(   abi.encode(_EXAMPLE_TRADE_TYPEHASH, exampleTrade.exampleTokenAddress, exampleTrade.exampleMinimumAmountOut));CopyAnd the witnessTypeString to be passed in should be:string constant witnessTypeString = ""ExampleTrade witness)ExampleTrade(address exampleTokenAddress,uint256 exampleMinimumAmountOut)TokenPermissions(address token,uint256 amount)""CopyIt‚Äôs important to note that when hashing multiple typed structs, the ordering of the structs in the type string matters. Referencing EIP-721:If the struct type references other struct types (and these in turn reference even more struct types), then the set of referenced struct types is collected, sorted by name and appended to the encoding. An example encoding is¬†Transaction(Person from,Person to,Asset tx)Asset(address token,uint256 amount)Person(address wallet,string name)Nonce Schema‚ÄãInstead of using incrementing nonces, we introduce non-monotonic, or unordered nonces with a nonceBitmap. The nonceBitmap maps an owner's address to a uint248 value, which we will call wordPos which is the index of the desired bitmap. There are 2248 possible indices and this 2248 possible bitmaps where each bitmap holds 256 bits. A bit must be flipped on to prevent replays of users‚Äô signatures. Bits that are dirtied may not be used again.// nonceBitmap[ownerAddress][wordPosition] retrieves a uint256 bitmapmapping(address => mapping(uint248 => uint256)) public nonceBitmap;CopyUsers will sign a uint256 nonce value where the first 248 bits correspond to the word position of the bitmap to dirty and the last 8 bits correspond to the actual bit position being flipped on.uint248 wordPos = uint248(nonce >> 8);uint8 bitPos = uint8(nonce);Copyuint256 bitmap = nonceBitmap[wordPos][bitPos]CopySecurity Considerations‚ÄãAn integrating contract must check that tokens are released by a triggering call from the signer, or that the signer meant for their signature to be released by someone else.üí° Consider this scenario:A signer called Bob signs a permit to transfer 100 USDC with a router contract as the permissioned spender. The router contract never checks who the caller is but spends any permit messages on the Permit2 contract. An attacker Eve can steal Bob‚Äôs signature, pass it through to the router with herself as the recipient, and transfer Bob‚Äôs tokens to herself.Universal Router protects against this by checking that the msg.sender from inside the routing contract is the supposed spender by passing msg.sender in as the owner param in any permit calls and by passing in msg.sender as the from param in any transfer calls.Edit this pageHelpful?PreviousOverviewNextAllowanceTransferOverviewFunctionsSingle permitTransferFromBatched permitTransferFromSingle permitWitnessTransferFromBatch permitWitnessTransferFromNonce SchemaSecurity ConsiderationsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
594,p.org sdk v3 reference classes Payments#encodeunwrapweth9,"p.org sdk v3 reference classes Payments#encodeunwrapweth9.    Payments | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPaymentsHelpful?On this pagePayments@uniswap/v3-sdk / Exports / PaymentsClass: PaymentsTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãencodeFeeBipsencodeRefundETHencodeSweepTokenencodeUnwrapWETH9Constructors‚Äãconstructor‚Äã‚Ä¢ Private new Payments()Cannot be constructed.Defined in‚Äãpayments.ts:25Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚Äãpayments.ts:20Methods‚ÄãencodeFeeBips‚Äã‚ñ∏ Static Private encodeFeeBips(fee): stringParameters‚ÄãNameTypefeePercentReturns‚ÄãstringDefined in‚Äãpayments.ts:27encodeRefundETH‚Äã‚ñ∏ Static encodeRefundETH(): stringReturns‚ÄãstringDefined in‚Äãpayments.ts:73encodeSweepToken‚Äã‚ñ∏ Static encodeSweepToken(token, amountMinimum, recipient, feeOptions?): stringParameters‚ÄãNameTypetokenTokenamountMinimumdefaultrecipientstringfeeOptions?FeeOptionsReturns‚ÄãstringDefined in‚Äãpayments.ts:49encodeUnwrapWETH9‚Äã‚ñ∏ Static encodeUnwrapWETH9(amountMinimum, recipient, feeOptions?): stringParameters‚ÄãNameTypeamountMinimumdefaultrecipientstringfeeOptions?FeeOptionsReturns‚ÄãstringDefined in‚Äãpayments.ts:31Helpful?PreviousNonfungiblePositionManagerNextPoolTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsencodeFeeBipsencodeRefundETHencodeSweepTokenencodeUnwrapWETH9DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
595,p.org sdk v3 reference classes Staker#encodeclaim,"p.org sdk v3 reference classes Staker#encodeclaim.    Staker | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesStakerHelpful?On this pageStaker@uniswap/v3-sdk / Exports / StakerClass: StakerTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINCENTIVE_KEY_ABIINTERFACEMethods‚Äã_encodeIncentiveKeycollectRewardsencodeClaimencodeDepositwithdrawTokenConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new Staker()Defined in‚Äãstaker.ts:72Properties‚ÄãINCENTIVE_KEY_ABI‚Äã‚ñ™ Static Private INCENTIVE_KEY_ABI: string = 'tuple(address rewardToken, address pool, uint256 startTime, uint256 endTime, address refundee)'Defined in‚Äãstaker.ts:73INTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚Äãstaker.ts:70Methods‚Äã_encodeIncentiveKey‚Äã‚ñ∏ Static Private _encodeIncentiveKey(incentiveKey): ObjectParameters‚ÄãNameTypeDescriptionincentiveKeyIncentiveKeyAn IncentiveKey which represents a unique staking program.Returns‚ÄãObjectAn encoded IncentiveKey to be read by ethersDefined in‚Äãstaker.ts:194collectRewards‚Äã‚ñ∏ Static collectRewards(incentiveKeys, options): MethodParametersNote: A tokenId can be staked in many programs but to claim rewards and continue the program you must unstake, claim, and then restake.Parameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]An IncentiveKey or array of IncentiveKeys that tokenId is staked in. Input an array of IncentiveKeys to claim rewards for each program.optionsClaimOptionsClaimOptions to specify tokenId, recipient, and amount wanting to collect. Note that you can only specify one amount and one recipient across the various programs if you are collecting from multiple programs at once.Returns‚ÄãMethodParametersDefined in‚Äãstaker.ts:107encodeClaim‚Äã‚ñ∏ Static Private encodeClaim(incentiveKey, options): string[]To claim rewards, must unstake and then claim.Parameters‚ÄãNameTypeDescriptionincentiveKeyIncentiveKeyThe unique identifier of a staking program.optionsClaimOptionsOptions for producing the calldata to claim. Can't claim unless you unstake.Returns‚Äãstring[]The calldatas for 'unstakeToken' and 'claimReward'.Defined in‚Äãstaker.ts:82encodeDeposit‚Äã‚ñ∏ Static encodeDeposit(incentiveKeys): stringParameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]A single IncentiveKey or array of IncentiveKeys to be encoded and used in the data parameter in safeTransferFromReturns‚ÄãstringAn IncentiveKey as a stringDefined in‚Äãstaker.ts:173withdrawToken‚Äã‚ñ∏ Static withdrawToken(incentiveKeys, withdrawOptions): MethodParametersParameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]A list of incentiveKeys to unstake from. Should include all incentiveKeys (unique staking programs) that options.tokenId is staked in.withdrawOptionsFullWithdrawOptionsOptions for producing claim calldata and withdraw calldata. Can't withdraw without unstaking all programs for tokenId.Returns‚ÄãMethodParametersCalldata for unstaking, claiming, and withdrawing.Defined in‚Äãstaker.ts:136Helpful?PreviousSqrtPriceMathNextSwapMathTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINCENTIVE_KEY_ABIINTERFACEMethods_encodeIncentiveKeycollectRewardsencodeClaimencodeDepositwithdrawTokenDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
596,p.org contracts v3 reference core interfaces pool IUniswapV3PoolState,"p.org contracts v3 reference core interfaces pool IUniswapV3PoolState.    IUniswapV3PoolState | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesIERC20MinimalIUniswapV3FactoryIUniswapV3PoolIUniswapV3PoolDeployercallbackPoolIUniswapV3PoolActionsIUniswapV3PoolDerivedStateIUniswapV3PoolEventsIUniswapV3PoolImmutablesIUniswapV3PoolOwnerActionsIUniswapV3PoolStateLibrariesGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreInterfacesPoolIUniswapV3PoolStateHelpful?On this pageIUniswapV3PoolStateThese methods compose the pool's state, and can change with any frequency including multiple times per transactionFunctions‚Äãslot0‚Äã function slot0( ) external view returns (uint160 sqrtPriceX96, int24 tick, uint16 observationIndex, uint16 observationCardinality, uint16 observationCardinalityNext, uint8 feeProtocol, bool unlocked)CopyThe 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.Return Values:‚ÄãNameTypeDescriptionsqrtPriceX96uint160The current price of the pool as a sqrt(token1/token0) Q64.96 valuetickint24The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary.observationIndexuint16The index of the last oracle observation that was written,observationCardinalityuint16The current maximum number of observations stored in the pool,observationCardinalityNextuint16The next maximum number of observations, to be updated when the observation.feeProtocoluint8The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0is the lower 4 bits.Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.unlockedboolWhether the pool is currently locked to reentrancyfeeGrowthGlobal0X128‚Äã function feeGrowthGlobal0X128( ) external view returns (uint256)CopyThe fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the poolThis value can overflow the uint256feeGrowthGlobal1X128‚Äã function feeGrowthGlobal1X128( ) external view returns (uint256)CopyThe fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the poolThis value can overflow the uint256protocolFees‚Äã function protocolFees( ) external view returns (uint128 token0, uint128 token1)CopyThe amounts of token0 and token1 that are owed to the protocolProtocol fees will never exceed uint128 max in either tokenliquidity‚Äã function liquidity( ) external view returns (uint128)CopyThe currently in range liquidity available to the poolThis value has no relationship to the total liquidity across all ticksticks‚Äã function ticks( int24 tick ) external view returns (uint128 liquidityGross, int128 liquidityNet, uint256 feeGrowthOutside0X128, uint256 feeGrowthOutside1X128, int56 tickCumulativeOutside, uint160 secondsPerLiquidityOutsideX128, uint32 secondsOutside, bool initialized)CopyLook up information about a specific tick in the poolParameters:‚ÄãNameTypeDescriptiontickint24The tick to look upReturn Values:‚ÄãNameTypeDescriptionliquidityGrossuint128the total amount of position liquidity that uses the pool either as tick lower or tick upper,liquidityNetint128how much liquidity changes when the pool price crosses the tick,feeGrowthOutside0X128uint256the fee growth on the other side of the tick from the current tick in token0,feeGrowthOutside1X128uint256the fee growth on the other side of the tick from the current tick in token1, feeGrowthOutsideX128 values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and are used to compute snapshots.tickCumulativeOutsideint56secondsPerLiquidityOutsideX128uint160secondsOutsideuint32initializedboola specific position.tickBitmap‚Äã function tickBitmap(  int16 wordPosition ) external view returns (uint256)CopyReturns 256 packed tick initialized boolean values. See TickBitmap for more informationpositions‚Äã function positions( bytes32 key ) external view returns (uint128 _liquidity, uint256 feeGrowthInside0LastX128, uint256 feeGrowthInside1LastX128, uint128 tokensOwed0, uint128 tokensOwed1)CopyReturns the information about a position by the position's keyParameters:‚ÄãNameTypeDescriptionkeybytes32The position's key is a hash of a preimage composed by the owner, tickLower and tickUpperReturn Values:‚ÄãNameTypeDescription_liquiditybytes32The amount of liquidity in the position,feeGrowthInside0LastX128uint256fee growth of token0 inside the tick range as of the last mint/burn/poke,feeGrowthInside1LastX128uint256fee growth of token1 inside the tick range as of the last mint/burn/poke,tokensOwed0uint128the computed amount of token0 owed to the position as of the last mint/burn/poke,tokensOwed1uint128the computed amount of token1 owed to the position as of the last mint/burn/pokeobservations‚Äã function observations( uint256 index ) external view returns (uint32 blockTimestamp, int56 tickCumulative, uint160 secondsPerLiquidityCumulativeX128, bool initialized)CopyReturns data about a specific observation indexYou most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.Parameters:‚ÄãNameTypeDescriptionindexuint256The element of the observations array to fetchReturn Values:‚ÄãNameTypeDescriptionblockTimestampuint256The timestamp of the observation,tickCumulativeint56the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,secondsPerLiquidityCumulativeX128uint160the seconds per in range liquidity for the life of the pool as of the observation timestampinitializedboolwhether the observation has been initialized and the values are safe to useEdit this pageHelpful?PreviousIUniswapV3PoolOwnerActionsNextBitMathFunctionsslot0feeGrowthGlobal0X128feeGrowthGlobal1X128protocolFeesliquiditytickstickBitmappositionsobservationsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
597,p.org sdk core reference classes Ether#symbol,"p.org sdk core reference classes Ether#symbol.    Ether | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesEtherHelpful?On this pageEther@uniswap/sdk-core / Exports / EtherClass: EtherEther is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnetsHierarchy‚ÄãNativeCurrency‚Ü≥ EtherTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãchainIddecimalsisNativeisTokennamesymbol_etherCacheAccessors‚ÄãwrappedMethods‚ÄãequalsonChainConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new Ether(chainId)Parameters‚ÄãNameTypechainIdnumberOverrides‚ÄãNativeCurrency.constructorDefined in‚Äãentities/ether.ts:11Properties‚ÄãchainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãNativeCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãNativeCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: trueInherited from‚ÄãNativeCurrency.isNativeDefined in‚Äãentities/nativeCurrency.ts:7isToken‚Äã‚Ä¢ Readonly isToken: falseInherited from‚ÄãNativeCurrency.isTokenDefined in‚Äãentities/nativeCurrency.ts:8name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãNativeCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãNativeCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29_etherCache‚Äã‚ñ™ Static Private _etherCache: Object = {}Index signature‚Äã‚ñ™ [chainId: number]: EtherDefined in‚Äãentities/ether.ts:21Accessors‚Äãwrapped‚Äã‚Ä¢ get wrapped(): TokenReturn the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to be used in UniswapReturns‚ÄãTokenOverrides‚ÄãNativeCurrency.wrappedDefined in‚Äãentities/ether.ts:15Methods‚Äãequals‚Äã‚ñ∏ equals(other): booleanReturns whether this currency is functionally equivalent to the other currencyParameters‚ÄãNameTypeDescriptionotherCurrencythe other currencyReturns‚ÄãbooleanOverrides‚ÄãNativeCurrency.equalsDefined in‚Äãentities/ether.ts:27onChain‚Äã‚ñ∏ Static onChain(chainId): EtherParameters‚ÄãNameTypechainIdnumberReturns‚ÄãEtherDefined in‚Äãentities/ether.ts:23Helpful?PreviousCurrencyAmountNextFractionHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertieschainIddecimalsisNativeisTokennamesymbol_etherCacheAccessorswrappedMethodsequalsonChainDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
598,p.org sdk v3 reference classes Tick#liquiditygross,p.org sdk v3 reference classes Tick#liquiditygross.    Tick | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickHelpful?On this pageTick@uniswap/v3-sdk / Exports / TickClass: TickTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãindexliquidityGrossliquidityNetConstructors‚Äãconstructor‚Äã‚Ä¢ new Tick(__namedParameters)Parameters‚ÄãNameType__namedParametersTickConstructorArgsDefined in‚Äãentities/tick.ts:17Properties‚Äãindex‚Äã‚Ä¢ Readonly index: numberDefined in‚Äãentities/tick.ts:13liquidityGross‚Äã‚Ä¢ Readonly liquidityGross: defaultDefined in‚Äãentities/tick.ts:14liquidityNet‚Äã‚Ä¢ Readonly liquidityNet: defaultDefined in‚Äãentities/tick.ts:15Helpful?PreviousSwapRouterNextTickLibraryTable of contentsConstructorsPropertiesConstructorsconstructorPropertiesindexliquidityGrossliquidityNetDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
599,p.org sdk v3 reference modules.md#encodesqrtratiox96,p.org sdk v3 reference modules.md#encodesqrtratiox96. 
600,p.org sdk core reference classes Fraction#greaterthan,"p.org sdk core reference classes Fraction#greaterthan.    Fraction | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesFractionHelpful?On this pageFraction@uniswap/sdk-core / Exports / FractionClass: FractionHierarchy‚ÄãFraction‚Ü≥ CurrencyAmount‚Ü≥ Percent‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatornumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionConstructors‚Äãconstructor‚Äã‚Ä¢ new Fraction(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:107subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:138toSignificant‚Äã‚ñ∏ toSignificant(significantDigits, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:123tryParseFraction‚Äã‚ñ∏ Static Private tryParseFraction(fractionish): FractionParameters‚ÄãNameTypefractionishBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:33Helpful?PreviousEtherNextNativeCurrencyHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatornumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
601,p.org contracts v2 reference smart contracts router 02#swapexacttokensfortokenssupportingfeeontransfertokens,"p.org contracts v2 reference smart contracts router 02#swapexacttokensfortokenssupportingfeeontransfertokens.    Router02 | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsRouter02Helpful?On this pageRouter02Because routers are stateless and do not hold token balances, they can be replaced safely and trustlessly, if necessary. This may happen if more efficient smart contract patterns are discovered, or if additional functionality is desired. For this reason, routers have release numbers, starting at 01. This is currently recommended release, 02.CodeUniswapV2Router02.solAddressUniswapV2Router02 is deployed at 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D on the Ethereum mainnet, and the Ropsten, Rinkeby, G√∂rli, and Kovan testnets. It was built from commit 6961711.Read-Only Functionsfactory‚Äãfunction factory() external pure returns (address);CopyReturns factory address.WETH‚Äãfunction WETH() external pure returns (address);CopyReturns the canonical WETH address on the Ethereum mainnet, or the Ropsten, Rinkeby, G√∂rli, or Kovan testnets.quote‚ÄãSee quote.getAmountOut‚ÄãSee getAmountOut.getAmountIn‚ÄãSee getAmountIn.getAmountsOut‚Äãfunction getAmountsOut(uint amountIn, address[] memory path) public view returns (uint[] memory amounts);CopySee getAmountsOut.getAmountsIn‚Äãfunction getAmountsIn(uint amountOut, address[] memory path) public view returns (uint[] memory amounts);CopySee getAmountsIn.State-Changing FunctionsaddLiquidity‚Äãfunction addLiquidity( address tokenA, address tokenB, uint amountADesired, uint amountBDesired, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB, uint liquidity);CopyAdds liquidity to an ERC-20‚áÑERC-20 pool.To cover all possible scenarios, msg.sender should have already given the router an allowance of at least amountADesired/amountBDesired on tokenA/tokenB.Always adds assets at the ideal ratio, according to the price when the transaction is executed.If a pool for the passed tokens does not exists, one is created automatically, and exactly amountADesired/amountBDesired tokens are added.NameTypetokenAaddressA pool token.tokenBaddressA pool token.amountADesireduintThe amount of tokenA to add as liquidity if the B/A price is <= amountBDesired/amountADesired (A depreciates).amountBDesireduintThe amount of tokenB to add as liquidity if the A/B price is <= amountADesired/amountBDesired (B depreciates).amountAMinuintBounds the extent to which the B/A price can go up before the transaction reverts. Must be <= amountADesired.amountBMinuintBounds the extent to which the A/B price can go up before the transaction reverts. Must be <= amountBDesired.toaddressRecipient of the liquidity tokens.deadlineuintUnix timestamp after which the transaction will revert.amountAuintThe amount of tokenA sent to the pool.amountBuintThe amount of tokenB sent to the pool.liquidityuintThe amount of liquidity tokens minted.addLiquidityETH‚Äãfunction addLiquidityETH( address token, uint amountTokenDesired, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external payable returns (uint amountToken, uint amountETH, uint liquidity);CopyAdds liquidity to an ERC-20‚áÑWETH pool with ETH.To cover all possible scenarios, msg.sender should have already given the router an allowance of at least amountTokenDesired on token.Always adds assets at the ideal ratio, according to the price when the transaction is executed.msg.value is treated as a amountETHDesired.Leftover ETH, if any, is returned to msg.sender.If a pool for the passed token and WETH does not exists, one is created automatically, and exactly amountTokenDesired/msg.value tokens are added.NameTypetokenaddressA pool token.amountTokenDesireduintThe amount of token to add as liquidity if the WETH/token price is <= msg.value/amountTokenDesired (token depreciates).msg.value (amountETHDesired)uintThe amount of ETH to add as liquidity if the token/WETH price is <= amountTokenDesired/msg.value (WETH depreciates).amountTokenMinuintBounds the extent to which the WETH/token price can go up before the transaction reverts. Must be <= amountTokenDesired.amountETHMinuintBounds the extent to which the token/WETH price can go up before the transaction reverts. Must be <= msg.value.toaddressRecipient of the liquidity tokens.deadlineuintUnix timestamp after which the transaction will revert.amountTokenuintThe amount of token sent to the pool.amountETHuintThe amount of ETH converted to WETH and sent to the pool.liquidityuintThe amount of liquidity tokens minted.removeLiquidity‚Äãfunction removeLiquidity( address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB);CopyRemoves liquidity from an ERC-20‚áÑERC-20 pool.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenAaddressA pool token.tokenBaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountAMinuintThe minimum amount of tokenA that must be received for the transaction not to revert.amountBMinuintThe minimum amount of tokenB that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountAuintThe amount of tokenA received.amountBuintThe amount of tokenB received.removeLiquidityETH‚Äãfunction removeLiquidityETH( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external returns (uint amountToken, uint amountETH);CopyRemoves liquidity from an ERC-20‚áÑWETH pool and receive ETH.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountTokenuintThe amount of token received.amountETHuintThe amount of ETH received.removeLiquidityWithPermit‚Äãfunction removeLiquidityWithPermit( address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountA, uint amountB);CopyRemoves liquidity from an ERC-20‚áÑERC-20 pool without pre-approval, thanks to permit.NameTypetokenAaddressA pool token.tokenBaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountAMinuintThe minimum amount of tokenA that must be received for the transaction not to revert.amountBMinuintThe minimum amount of tokenB that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountAuintThe amount of tokenA received.amountBuintThe amount of tokenB received.removeLiquidityETHWithPermit‚Äãfunction removeLiquidityETHWithPermit( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountToken, uint amountETH);CopyRemoves liquidity from an ERC-20‚áÑWETTH pool and receive ETH without pre-approval, thanks to permit.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountTokenuintThe amount of token received.amountETHuintThe amount of ETH received.removeLiquidityETHSupportingFeeOnTransferTokens‚Äãfunction removeLiquidityETHSupportingFeeOnTransferTokens( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external returns (uint amountETH);CopyIdentical to removeLiquidityETH, but succeeds for tokens that take a fee on transfer.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountETHuintThe amount of ETH received.removeLiquidityETHWithPermitSupportingFeeOnTransferTokens‚Äãfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountETH);CopyIdentical to removeLiquidityETHWithPermit, but succeeds for tokens that take a fee on transfer.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountETHuintThe amount of ETH received.swapExactTokensForTokens‚Äãfunction swapExactTokensForTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopySwaps an exact amount of input tokens for as many output tokens as possible, along the route determined by the path. The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountIn on the input token.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapTokensForExactTokens‚Äãfunction swapTokensForExactTokens( uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopyReceive an exact amount of output tokens for as few input tokens as possible, along the route determined by the path. The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate tokens to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountInMax on the input token.NameTypeamountOutuintThe amount of output tokens to receive.amountInMaxuintThe maximum amount of input tokens that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactETHForTokens‚Äãfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts);CopySwaps an exact amount of ETH for as many output tokens as possible, along the route determined by the path. The first element of path must be WETH, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).NameTypemsg.value (amountIn)uintThe amount of ETH to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapTokensForExactETH‚Äãfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopyReceive an exact amount of ETH for as few input tokens as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountInMax on the input token.If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountOutuintThe amount of ETH to receive.amountInMaxuintThe maximum amount of input tokens that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of ETH.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactTokensForETH‚Äãfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopySwaps an exact amount of tokens for as much ETH as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the ETH.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapETHForExactTokens‚Äãfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts);CopyReceive an exact amount of tokens for as little ETH as possible, along the route determined by the path. The first element of path must be WETH, the last is the output token and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).Leftover ETH, if any, is returned to msg.sender.NameTypeamountOutuintThe amount of tokens to receive.msg.value (amountInMax)uintThe maximum amount of ETH that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactTokensForTokensSupportingFeeOnTransferTokens‚Äãfunction swapExactTokensForTokensSupportingFeeOnTransferTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external;CopyIdentical to swapExactTokensForTokens, but succeeds for tokens that take a fee on transfer.msg.sender should have already given the router an allowance of at least amountIn on the input token.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.swapExactETHForTokensSupportingFeeOnTransferTokens‚Äãfunction swapExactETHForTokensSupportingFeeOnTransferTokens( uint amountOutMin, address[] calldata path, address to, uint deadline) external payable;CopyIdentical to swapExactETHForTokens, but succeeds for tokens that take a fee on transfer.NameTypemsg.value (amountIn)uintThe amount of ETH to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.swapExactTokensForETHSupportingFeeOnTransferTokens‚Äãfunction swapExactTokensForETHSupportingFeeOnTransferTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external;CopyIdentical to swapExactTokensForETH, but succeeds for tokens that take a fee on transfer.If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the ETH.deadlineuintUnix timestamp after which the transaction will revert.Interfaceimport '@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol';Copypragma solidity >=0.6.2;interface IUniswapV2Router01 { function factory() external pure returns (address); function WETH() external pure returns (address); function addLiquidity(  address tokenA,  address tokenB,  uint amountADesired,  uint amountBDesired,  uint amountAMin,  uint amountBMin,  address to,  uint deadline ) external returns (uint amountA, uint amountB, uint liquidity); function addLiquidityETH(  address token,  uint amountTokenDesired,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external payable returns (uint amountToken, uint amountETH, uint liquidity); function removeLiquidity(  address tokenA,  address tokenB,  uint liquidity,  uint amountAMin,  uint amountBMin,  address to,  uint deadline ) external returns (uint amountA, uint amountB); function removeLiquidityETH(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external returns (uint amountToken, uint amountETH); function removeLiquidityWithPermit(  address tokenA,  address tokenB,  uint liquidity,  uint amountAMin,  uint amountBMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountA, uint amountB); function removeLiquidityETHWithPermit(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountToken, uint amountETH); function swapExactTokensForTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external returns (uint[] memory amounts); function swapTokensForExactTokens(  uint amountOut,  uint amountInMax,  address[] calldata path,  address to,  uint deadline ) external returns (uint[] memory amounts); function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)  external  payable  returns (uint[] memory amounts); function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)  external  returns (uint[] memory amounts); function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)  external  returns (uint[] memory amounts); function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)  external  payable  returns (uint[] memory amounts); function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB); function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut); function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn); function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts); function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);}interface IUniswapV2Router02 is IUniswapV2Router01 { function removeLiquidityETHSupportingFeeOnTransferTokens(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external returns (uint amountETH); function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountETH); function swapExactTokensForTokensSupportingFeeOnTransferTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external; function swapExactETHForTokensSupportingFeeOnTransferTokens(  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external payable; function swapExactTokensForETHSupportingFeeOnTransferTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external;}CopyABIimport IUniswapV2Router02 from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'Copyhttps://unpkg.com/@uniswap/v2-periphery@1.1.0-beta.0/build/IUniswapV2Router02.jsonEdit this pageHelpful?PreviousRouter01NextCommon ErrorsfactoryWETHquotegetAmountOutgetAmountIngetAmountsOutgetAmountsInaddLiquidityaddLiquidityETHremoveLiquidityremoveLiquidityETHremoveLiquidityWithPermitremoveLiquidityETHWithPermitremoveLiquidityETHSupportingFeeOnTransferTokensremoveLiquidityETHWithPermitSupportingFeeOnTransferTokensswapExactTokensForTokensswapTokensForExactTokensswapExactETHForTokensswapTokensForExactETHswapExactTokensForETHswapETHForExactTokensswapExactTokensForTokensSupportingFeeOnTransferTokensswapExactETHForTokensSupportingFeeOnTransferTokensswapExactTokensForETHSupportingFeeOnTransferTokensDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
602,p.org sdk core reference classes CurrencyAmount#currency,"p.org sdk core reference classes CurrencyAmount#currency.    CurrencyAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesCurrencyAmountHelpful?On this pageCurrencyAmount@uniswap/sdk-core / Exports / CurrencyAmountClass: CurrencyAmount<T>Type parameters‚ÄãNameTypeTextends CurrencyHierarchy‚ÄãFraction‚Ü≥ CurrencyAmountTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãcurrencydecimalScaledenominatornumeratorAccessors‚ÄãasFractionquotientremainderwrappedMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new CurrencyAmount<T>(currency, numerator, denominator?)Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypecurrencyTnumeratorBigintIshdenominator?BigintIshOverrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/currencyAmount.ts:40Properties‚Äãcurrency‚Äã‚Ä¢ Readonly currency: TDefined in‚Äãentities/fractions/currencyAmount.ts:14decimalScale‚Äã‚Ä¢ Readonly decimalScale: defaultDefined in‚Äãentities/fractions/currencyAmount.ts:15denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47wrapped‚Äã‚Ä¢ get wrapped(): CurrencyAmount<Token>Returns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/fractions/currencyAmount.ts:91Methods‚Äãadd‚Äã‚ñ∏ add(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.addDefined in‚Äãentities/fractions/currencyAmount.ts:47divide‚Äã‚ñ∏ divide(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/currencyAmount.ts:64equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/currencyAmount.ts:59subtract‚Äã‚ñ∏ subtract(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/currencyAmount.ts:53toExact‚Äã‚ñ∏ toExact(format?): stringParameters‚ÄãNameTypeformatobjectReturns‚ÄãstringDefined in‚Äãentities/fractions/currencyAmount.ts:86toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformat?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/currencyAmount.ts:77toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/currencyAmount.ts:69fromFractionalAmount‚Äã‚ñ∏ Static fromFractionalAmount<T>(currency, numerator, denominator): CurrencyAmount<T>Construct a currency amount with a denominator that is not equal to 1Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currencynumeratorBigintIshthe numerator of the fractional token amountdenominatorBigintIshthe denominator of the fractional token amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:32fromRawAmount‚Äã‚ñ∏ Static fromRawAmount<T>(currency, rawAmount): CurrencyAmount<T>Returns a new currency amount instance from the unitless amount of token, i.e. the raw amountType parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currency in the amountrawAmountBigintIshthe raw token or ether amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:22Helpful?PreviousOverviewNextEtherType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiescurrencydecimalScaledenominatornumeratorAccessorsasFractionquotientremainderwrappedMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
603,p.org sdk v3 reference interfaces CommonAddLiquidityOptions#deadline,"p.org sdk v3 reference interfaces CommonAddLiquidityOptions#deadline.    CommonAddLiquidityOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesCommonAddLiquidityOptionsHelpful?On this pageCommonAddLiquidityOptions@uniswap/v3-sdk / Exports / CommonAddLiquidityOptionsInterface: CommonAddLiquidityOptionsOptions for producing the calldata to add liquidity.Table of contents‚ÄãProperties‚ÄãdeadlineslippageTolerancetoken0Permittoken1PermituseNativeProperties‚Äãdeadline‚Äã‚Ä¢ deadline: BigintIshWhen the transaction expires, in epoch seconds.Defined in‚ÄãnonfungiblePositionManager.ts:56slippageTolerance‚Äã‚Ä¢ slippageTolerance: PercentHow much the pool price is allowed to move.Defined in‚ÄãnonfungiblePositionManager.ts:51token0Permit‚Äã‚Ä¢ Optional token0Permit: PermitOptionsThe optional permit parameters for spending token0Defined in‚ÄãnonfungiblePositionManager.ts:66token1Permit‚Äã‚Ä¢ Optional token1Permit: PermitOptionsThe optional permit parameters for spending token1Defined in‚ÄãnonfungiblePositionManager.ts:71useNative‚Äã‚Ä¢ Optional useNative: NativeCurrencyWhether to spend ether. If true, one of the pool tokens must be WETH, by default falseDefined in‚ÄãnonfungiblePositionManager.ts:61Helpful?PreviousCollectOptionsNextFeeOptionsTable of contentsPropertiesPropertiesdeadlineslippageTolerancetoken0Permittoken1PermituseNativeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
604,p.org sdk v3 reference classes Position#burnamountswithslippage,"p.org sdk v3 reference classes Position#burnamountswithslippage.    Position | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPositionHelpful?On this pagePosition@uniswap/v3-sdk / Exports / PositionClass: PositionRepresents a position on a Uniswap V3 PoolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessors‚Äãamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethods‚ÄãburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsConstructors‚Äãconstructor‚Äã‚Ä¢ new Position(__namedParameters)Constructs a position for a given pool with the given liquidityParameters‚ÄãNameType__namedParametersPositionConstructorArgsDefined in‚Äãentities/position.ts:40Properties‚Äã_mintAmounts‚Äã‚Ä¢ Private _mintAmounts: null | Readonly<{ amount0: default ; amount1: default }> = nullDefined in‚Äãentities/position.ts:31_token0Amount‚Äã‚Ä¢ Private _token0Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:29_token1Amount‚Äã‚Ä¢ Private _token1Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:30liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/position.ts:26pool‚Äã‚Ä¢ Readonly pool: PoolDefined in‚Äãentities/position.ts:23tickLower‚Äã‚Ä¢ Readonly tickLower: numberDefined in‚Äãentities/position.ts:24tickUpper‚Äã‚Ä¢ Readonly tickUpper: numberDefined in‚Äãentities/position.ts:25Accessors‚Äãamount0‚Äã‚Ä¢ get amount0(): CurrencyAmount<Token>Returns the amount of token0 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:68amount1‚Äã‚Ä¢ get amount1(): CurrencyAmount<Token>Returns the amount of token1 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:100mintAmounts‚Äã‚Ä¢ get mintAmounts(): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at the current price for the poolReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>Defined in‚Äãentities/position.ts:258token0PriceLower‚Äã‚Ä¢ get token0PriceLower(): Price<Token, Token>Returns the price of token0 at the lower tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:54token0PriceUpper‚Äã‚Ä¢ get token0PriceUpper(): Price<Token, Token>Returns the price of token0 at the upper tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:61Methods‚ÄãburnAmountsWithSlippage‚Äã‚ñ∏ burnAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercenttolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:213mintAmountsWithSlippage‚Äã‚ñ∏ mintAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to safely mint the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentTolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:157ratiosAfterSlippage‚Äã‚ñ∏ Private ratiosAfterSlippage(slippageTolerance): ObjectReturns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentageParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe amount by which the price can 'slip' before the transaction will revertReturns‚ÄãObjectThe sqrt ratios after slippageNameTypesqrtRatioX96LowerdefaultsqrtRatioX96UpperdefaultDefined in‚Äãentities/position.ts:134fromAmount0‚Äã‚ñ∏ Static fromAmount0(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited amount of token1Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:354fromAmount1‚Äã‚ñ∏ Static fromAmount1(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited amount of token0Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumberReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:378fromAmounts‚Äã‚ñ∏ Static fromAmounts(__namedParameters): PositionComputes the maximum amount of liquidity received for a given amount of token0, token1, and the prices at the tick boundaries.Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe amount of liquidity for the positionDefined in‚Äãentities/position.ts:312Helpful?PreviousPoolNextPositionLibraryTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessorsamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethodsburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
605,p.org sdk v3 reference interfaces MethodParameters#value,p.org sdk v3 reference interfaces MethodParameters#value.    MethodParameters | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesMethodParametersHelpful?On this pageMethodParameters@uniswap/v3-sdk / Exports / MethodParametersInterface: MethodParametersGenerated method parameters for executing a call.Table of contents‚ÄãProperties‚ÄãcalldatavalueProperties‚Äãcalldata‚Äã‚Ä¢ calldata: stringThe hex encoded calldata to perform the given operationDefined in‚Äãutils/calldata.ts:11value‚Äã‚Ä¢ value: stringThe amount of ether (wei) to send in hex.Defined in‚Äãutils/calldata.ts:15Helpful?PreviousIncreaseSpecificOptionsNextMintSpecificOptionsTable of contentsPropertiesPropertiescalldatavalueDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
606,p.org sdk v2 reference pair,"p.org sdk v2 reference pair.    Pair | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKOverviewGuidesSDK Quick startFetching DataPricingTradingPair AddressesTechnical ReferenceGetting StartedTokenPairRouteTradeFractionsFetcherOther ExportsV1 SDKüè†V2 SDKTechnical ReferencePairHelpful?On this pagePairconstructor(tokenAmountA: TokenAmount, tokenAmountB: TokenAmount)CopyThe Pair entity represents a Uniswap pair with a balance of each of its pair tokens.Exampleimport { ChainId, Token, TokenAmount, Pair } from '@uniswap/sdk'const HOT = new Token(ChainId.MAINNET, '0xc0FFee0000000000000000000000000000000000', 18, 'HOT', 'Caffeine')const NOT = new Token(ChainId.MAINNET, '0xDeCAf00000000000000000000000000000000000', 18, 'NOT', 'Caffeine')const pair = new Pair(new TokenAmount(HOT, '2000000000000000000'), new TokenAmount(NOT, '1000000000000000000'))CopyStatic MethodsgetAddress‚ÄãgetAddress(tokenA: Token, tokenB: Token): stringCopyComputes the pair address for the passed Tokens. See Pair Addresses.PropertiesliquidityToken‚ÄãliquidityToken: TokenCopyA Token representing the liquidity token for the pair. See Pair (ERC-20).token0‚Äãtoken0: TokenCopySee Token0.token1‚Äãtoken1: TokenCopySee Token1.reserve0‚Äãreserve0: TokenAmountCopyThe reserve of token0.reserve1‚Äãreserve1: TokenAmountCopyThe reserve of token1.MethodsreserveOf‚ÄãreserveOf(token: Token): TokenAmountCopyReturns reserve0 or reserve1, depending on whether token0 or token1 is passed in.getOutputAmount‚ÄãgetOutputAmount(inputAmount: TokenAmount): [TokenAmount, Pair]CopyPricing function for exact input amounts. Returns maximum output amount based on current reserves and the new Pair that would exist if the trade were executed.getInputAmount‚ÄãgetInputAmount(outputAmount: TokenAmount): [TokenAmount, Pair]CopyPricing function for exact output amounts. Returns minimum input amount based on current reserves and the new Pair that would exist if the trade were executed.getLiquidityMinted‚ÄãgetLiquidityMinted(totalSupply: TokenAmount, tokenAmountA: TokenAmount, tokenAmountB: TokenAmount): TokenAmountCopyCalculates the exact amount of liquidity tokens minted from a given amount of token0 and token1.totalSupply must be looked up on-chain.The value returned from this function cannot be used as an input to getLiquidityValue.getLiquidityValue‚ÄãgetLiquidityValue( token: Token, totalSupply: TokenAmount, liquidity: TokenAmount, feeOn: boolean = false, kLast?: BigintIsh): TokenAmountCopyCalculates the exact amount of token0 or token1 that the given amount of liquidity tokens represent.totalSupply must be looked up on-chain.If the protocol charge is on, feeOn must be set to true, and kLast must be provided from an on-chain lookup.Values returned from this function cannot be used as inputs to getLiquidityMinted.Helpful?PreviousTokenNextRoutegetAddressliquidityTokentoken0token1reserve0reserve1reserveOfgetOutputAmountgetInputAmountgetLiquidityMintedgetLiquidityValueDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
607,p.org sdk v3 reference classes Trade#exactout,"p.org sdk v3 reference classes Trade#exactout.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTradeHelpful?On this pageTrade@uniswap/v3-sdk / Exports / TradeClass: Trade<TInput, TOutput, TTradeType>Represents a trade executed against a set of routes where some percentage of the input is split across each route.Each route has its own set of pools. Pools can not be re-used across routes.Does not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and when it is executed.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessors‚ÄãexecutionPriceinputAmountoutputAmountpriceImpactrouteMethods‚ÄãmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Trade<TInput, TOutput, TTradeType>(__namedParameters)Construct a trade by passing in the pre-computed property valuesType parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyTTradeTypeextends TradeTypeParameters‚ÄãNameType__namedParametersObject__namedParameters.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]__namedParameters.tradeTypeTTradeTypeDefined in‚Äãentities/trade.ts:397Properties‚Äã_executionPrice‚Äã‚Ä¢ Private _executionPrice: undefined | Price<TInput, TOutput>The cached result of the computed execution priceDefined in‚Äãentities/trade.ts:143_inputAmount‚Äã‚Ä¢ Private _inputAmount: undefined | CurrencyAmount<TInput>The cached result of the input amount computationDefined in‚Äãentities/trade.ts:97_outputAmount‚Äã‚Ä¢ Private _outputAmount: undefined | CurrencyAmount<TOutput>The cached result of the output amount computationDefined in‚Äãentities/trade.ts:120_priceImpact‚Äã‚Ä¢ Private _priceImpact: undefined | PercentThe cached result of the price impact computationDefined in‚Äãentities/trade.ts:164swaps‚Äã‚Ä¢ Readonly swaps: { inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]The swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.Defined in‚Äãentities/trade.ts:82tradeType‚Äã‚Ä¢ Readonly tradeType: TTradeTypeThe type of the trade, either exact in or exact out.Defined in‚Äãentities/trade.ts:91Accessors‚ÄãexecutionPrice‚Äã‚Ä¢ get executionPrice(): Price<TInput, TOutput>The price expressed in terms of output amount/input amount.Returns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/trade.ts:148inputAmount‚Äã‚Ä¢ get inputAmount(): CurrencyAmount<TInput>The input amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TInput>Defined in‚Äãentities/trade.ts:102outputAmount‚Äã‚Ä¢ get outputAmount(): CurrencyAmount<TOutput>The output amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TOutput>Defined in‚Äãentities/trade.ts:125priceImpact‚Äã‚Ä¢ get priceImpact(): PercentReturns the percent difference between the route's mid price and the price impactReturns‚ÄãPercentDefined in‚Äãentities/trade.ts:169route‚Äã‚Ä¢ get route(): Route<TInput, TOutput>DeprecatedDeprecated in favor of 'swaps' property. If the trade consists of multiple routes this will return an error.When the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.Returns‚ÄãRoute<TInput, TOutput>Defined in‚Äãentities/trade.ts:73Methods‚ÄãmaximumAmountIn‚Äã‚ñ∏ maximumAmountIn(slippageTolerance, amountIn?): CurrencyAmount<TInput>Get the maximum amount in that can be spent via this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountInCurrencyAmount<TInput>-Returns‚ÄãCurrencyAmount<TInput>The amount inDefined in‚Äãentities/trade.ts:456minimumAmountOut‚Äã‚ñ∏ minimumAmountOut(slippageTolerance, amountOut?): CurrencyAmount<TOutput>Get the minimum amount that must be received from this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountOutCurrencyAmount<TOutput>-Returns‚ÄãCurrencyAmount<TOutput>The amount outDefined in‚Äãentities/trade.ts:438worstExecutionPrice‚Äã‚ñ∏ worstExecutionPrice(slippageTolerance): Price<TInput, TOutput>Return the execution price after accounting for slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentthe allowed tolerated slippageReturns‚ÄãPrice<TInput, TOutput>The execution priceDefined in‚Äãentities/trade.ts:471bestTradeExactIn‚Äã‚ñ∏ Static bestTradeExactIn<TInput, TOutput>(pools, currencyAmountIn, currencyOut, __namedParameters?, currentPools?, nextAmountIn?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_INPUT>[]>Given a list of pools, and a fixed amount in, returns the top maxNumResults trades that go from an input token amount to an output token, making at most maxHops hops. Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyAmountInCurrencyAmount<TInput>undefinedused in recursion; the original value of the currencyAmountIn parametercurrencyOutTOutputundefinedthe desired currency out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountInCurrencyAmount<Currency>currencyAmountInexact amount of input currency to spendbestTradesTrade<TInput, TOutput, EXACT_INPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>[]>The exact in tradeDefined in‚Äãentities/trade.ts:495bestTradeExactOut‚Äã‚ñ∏ Static bestTradeExactOut<TInput, TOutput>(pools, currencyIn, currencyAmountOut, __namedParameters?, currentPools?, nextAmountOut?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>similar to the above method but instead targets a fixed output amount given a list of pools, and a fixed amount out, returns the top maxNumResults trades that go from an input token to an output token amount, making at most maxHops hops note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyInTInputundefinedthe currency to spendcurrencyAmountOutCurrencyAmount<TOutput>undefinedthe desired currency amount out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountOutCurrencyAmount<Currency>currencyAmountOutthe exact amount of currency outbestTradesTrade<TInput, TOutput, EXACT_OUTPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>The exact out tradeDefined in‚Äãentities/trade.ts:576createUncheckedTrade‚Äã‚ñ∏ Static createUncheckedTrade<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.inputAmountCurrencyAmount<TInput>-constructorArguments.outputAmountCurrencyAmount<TOutput>-constructorArguments.routeRoute<TInput, TOutput>-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:346createUncheckedTradeWithMultipleRoutes‚Äã‚ñ∏ Static createUncheckedTradeWithMultipleRoutes<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:377exactIn‚Äã‚ñ∏ Static exactIn<TInput, TOutput>(route, amountIn): Promise<Trade<TInput, TOutput, EXACT_INPUT>>Constructs an exact in trade with the given amount in and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact in tradeamountInCurrencyAmount<TInput>The amount being passed inReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>>The exact in tradeDefined in‚Äãentities/trade.ts:194exactOut‚Äã‚ñ∏ Static exactOut<TInput, TOutput>(route, amountOut): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>>Constructs an exact out trade with the given amount out and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact out tradeamountOutCurrencyAmount<TOutput>The amount returned by the tradeReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>>The exact out tradeDefined in‚Äãentities/trade.ts:209fromRoute‚Äã‚ñ∏ Static fromRoute<TInput, TOutput, TTradeType>(route, amount, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade by simulating swaps through the given routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>route to swap throughamountTTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>the amount specified, either input or output, depending on tradeTypetradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The routeDefined in‚Äãentities/trade.ts:226fromRoutes‚Äã‚ñ∏ Static fromRoutes<TInput, TOutput, TTradeType>(routes, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade from routes by simulating swapsType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionroutes{ amount: TTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]the routes to swap through and how much of the amount should be routed through eachtradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The tradeDefined in‚Äãentities/trade.ts:276Helpful?PreviousTickMathNextFeeAmountType parametersTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessorsexecutionPriceinputAmountoutputAmountpriceImpactrouteMethodsmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
608,p.org sdk core reference classes Ether#decimals,"p.org sdk core reference classes Ether#decimals.    Ether | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesEtherHelpful?On this pageEther@uniswap/sdk-core / Exports / EtherClass: EtherEther is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnetsHierarchy‚ÄãNativeCurrency‚Ü≥ EtherTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãchainIddecimalsisNativeisTokennamesymbol_etherCacheAccessors‚ÄãwrappedMethods‚ÄãequalsonChainConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new Ether(chainId)Parameters‚ÄãNameTypechainIdnumberOverrides‚ÄãNativeCurrency.constructorDefined in‚Äãentities/ether.ts:11Properties‚ÄãchainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãNativeCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãNativeCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: trueInherited from‚ÄãNativeCurrency.isNativeDefined in‚Äãentities/nativeCurrency.ts:7isToken‚Äã‚Ä¢ Readonly isToken: falseInherited from‚ÄãNativeCurrency.isTokenDefined in‚Äãentities/nativeCurrency.ts:8name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãNativeCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãNativeCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29_etherCache‚Äã‚ñ™ Static Private _etherCache: Object = {}Index signature‚Äã‚ñ™ [chainId: number]: EtherDefined in‚Äãentities/ether.ts:21Accessors‚Äãwrapped‚Äã‚Ä¢ get wrapped(): TokenReturn the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to be used in UniswapReturns‚ÄãTokenOverrides‚ÄãNativeCurrency.wrappedDefined in‚Äãentities/ether.ts:15Methods‚Äãequals‚Äã‚ñ∏ equals(other): booleanReturns whether this currency is functionally equivalent to the other currencyParameters‚ÄãNameTypeDescriptionotherCurrencythe other currencyReturns‚ÄãbooleanOverrides‚ÄãNativeCurrency.equalsDefined in‚Äãentities/ether.ts:27onChain‚Äã‚ñ∏ Static onChain(chainId): EtherParameters‚ÄãNameTypechainIdnumberReturns‚ÄãEtherDefined in‚Äãentities/ether.ts:23Helpful?PreviousCurrencyAmountNextFractionHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertieschainIddecimalsisNativeisTokennamesymbol_etherCacheAccessorswrappedMethodsequalsonChainDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
609,p.org sdk v3 reference interfaces StandardPermitArguments#amount,p.org sdk v3 reference interfaces StandardPermitArguments#amount.    StandardPermitArguments | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesStandardPermitArgumentsHelpful?On this pageStandardPermitArguments@uniswap/v3-sdk / Exports / StandardPermitArgumentsInterface: StandardPermitArgumentsTable of contents‚ÄãProperties‚ÄãamountdeadlinersvProperties‚Äãamount‚Äã‚Ä¢ amount: BigintIshDefined in‚ÄãselfPermit.ts:10deadline‚Äã‚Ä¢ deadline: BigintIshDefined in‚ÄãselfPermit.ts:11r‚Äã‚Ä¢ r: stringDefined in‚ÄãselfPermit.ts:8s‚Äã‚Ä¢ s: stringDefined in‚ÄãselfPermit.ts:9v‚Äã‚Ä¢ v: 0 | 1 | 27 | 28Defined in‚ÄãselfPermit.ts:7Helpful?PreviousSafeTransferOptionsNextSwapOptionsTable of contentsPropertiesPropertiesamountdeadlinersvDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
610,p.org sdk v3 reference interfaces TickConstructorArgs#index,p.org sdk v3 reference interfaces TickConstructorArgs#index.    TickConstructorArgs | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesTickConstructorArgsHelpful?On this pageTickConstructorArgs@uniswap/v3-sdk / Exports / TickConstructorArgsInterface: TickConstructorArgsTable of contents‚ÄãProperties‚ÄãindexliquidityGrossliquidityNetProperties‚Äãindex‚Äã‚Ä¢ index: numberDefined in‚Äãentities/tick.ts:7liquidityGross‚Äã‚Ä¢ liquidityGross: BigintIshDefined in‚Äãentities/tick.ts:8liquidityNet‚Äã‚Ä¢ liquidityNet: BigintIshDefined in‚Äãentities/tick.ts:9Helpful?PreviousSwapOptionsNextTickDataProviderTable of contentsPropertiesPropertiesindexliquidityGrossliquidityNetDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
611,p.org sdk core reference classes NativeCurrency#equals,"p.org sdk core reference classes NativeCurrency#equals.    NativeCurrency | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesNativeCurrencyHelpful?On this pageNativeCurrency@uniswap/sdk-core / Exports / NativeCurrencyClass: NativeCurrencyRepresents the native currency of the chain on which it resides, e.g.Hierarchy‚ÄãBaseCurrency‚Ü≥ NativeCurrency‚Ü≥‚Ü≥ EtherTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãchainIddecimalsisNativeisTokennamesymbolAccessors‚ÄãwrappedMethods‚ÄãequalsConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new NativeCurrency(chainId, decimals, symbol?, name?)Constructs an instance of the base class BaseCurrency.Parameters‚ÄãNameTypeDescriptionchainIdnumberthe chain ID on which this currency residesdecimalsnumberdecimals of the currencysymbol?stringsymbol of the currencyname?stringof the currencyInherited from‚ÄãBaseCurrency.constructorDefined in‚Äãentities/baseCurrency.ts:42Properties‚ÄãchainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãBaseCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãBaseCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: trueOverrides‚ÄãBaseCurrency.isNativeDefined in‚Äãentities/nativeCurrency.ts:7isToken‚Äã‚Ä¢ Readonly isToken: falseOverrides‚ÄãBaseCurrency.isTokenDefined in‚Äãentities/nativeCurrency.ts:8name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãBaseCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãBaseCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29Accessors‚Äãwrapped‚Äã‚Ä¢ Abstract get wrapped(): TokenReturn the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to be used in UniswapReturns‚ÄãTokenInherited from‚ÄãBaseCurrency.wrappedDefined in‚Äãentities/baseCurrency.ts:62Methods‚Äãequals‚Äã‚ñ∏ Abstract equals(other): booleanReturns whether this currency is functionally equivalent to the other currencyParameters‚ÄãNameTypeDescriptionotherCurrencythe other currencyReturns‚ÄãbooleanInherited from‚ÄãBaseCurrency.equalsDefined in‚Äãentities/baseCurrency.ts:56Helpful?PreviousFractionNextPercentHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertieschainIddecimalsisNativeisTokennamesymbolAccessorswrappedMethodsequalsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
612,p.org contracts v3 reference periphery test LiquidityAmountsTest,"p.org contracts v3 reference periphery test LiquidityAmountsTest.    LiquidityAmountsTest | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerTestBase64TestLiquidityAmountsTestMockTimeNonfungiblePositionManagerMockTimeSwapRouterNFTDescriptorTestPathTestPeripheryImmutableStateTestPoolAddressTestSelfPermitTestTestCallbackValidationTestERC20TestERC20MetadataTestERC20PermitAllowedTestMulticallTestPositionNFTOwnerTestUniswapV3CalleeTickLensTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryTestLiquidityAmountsTestHelpful?On this pageLiquidityAmountsTestFunctions‚ÄãgetLiquidityForAmount0‚Äã function getLiquidityForAmount0( ) external returns (uint128 liquidity)CopygetGasCostOfGetLiquidityForAmount0‚Äã function getGasCostOfGetLiquidityForAmount0( ) external returns (uint256)CopygetLiquidityForAmount1‚Äã function getLiquidityForAmount1( ) external returns (uint128 liquidity)CopygetGasCostOfGetLiquidityForAmount1‚Äã function getGasCostOfGetLiquidityForAmount1( ) external returns (uint256)CopygetLiquidityForAmounts‚Äã function getLiquidityForAmounts( ) external returns (uint128 liquidity)CopygetGasCostOfGetLiquidityForAmounts‚Äã function getGasCostOfGetLiquidityForAmounts( ) external returns (uint256)CopygetAmount0ForLiquidity‚Äã function getAmount0ForLiquidity( ) external returns (uint256 amount0)CopygetGasCostOfGetAmount0ForLiquidity‚Äã function getGasCostOfGetAmount0ForLiquidity( ) external returns (uint256)CopygetAmount1ForLiquidity‚Äã function getAmount1ForLiquidity( ) external returns (uint256 amount1)CopygetGasCostOfGetAmount1ForLiquidity‚Äã function getGasCostOfGetAmount1ForLiquidity( ) external returns (uint256)CopygetAmountsForLiquidity‚Äã function getAmountsForLiquidity( ) external returns (uint256 amount0, uint256 amount1)CopygetGasCostOfGetAmountsForLiquidity‚Äã function getGasCostOfGetAmountsForLiquidity( ) external returns (uint256)CopyEdit this pageHelpful?PreviousBase64TestNextMockTimeNonfungiblePositionManagerFunctionsgetLiquidityForAmount0getGasCostOfGetLiquidityForAmount0getLiquidityForAmount1getGasCostOfGetLiquidityForAmount1getLiquidityForAmountsgetGasCostOfGetLiquidityForAmountsgetAmount0ForLiquiditygetGasCostOfGetAmount0ForLiquiditygetAmount1ForLiquiditygetGasCostOfGetAmount1ForLiquiditygetAmountsForLiquiditygetGasCostOfGetAmountsForLiquidityDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
613,p.org sdk v3 reference classes Position#constructor,"p.org sdk v3 reference classes Position#constructor.    Position | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPositionHelpful?On this pagePosition@uniswap/v3-sdk / Exports / PositionClass: PositionRepresents a position on a Uniswap V3 PoolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessors‚Äãamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethods‚ÄãburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsConstructors‚Äãconstructor‚Äã‚Ä¢ new Position(__namedParameters)Constructs a position for a given pool with the given liquidityParameters‚ÄãNameType__namedParametersPositionConstructorArgsDefined in‚Äãentities/position.ts:40Properties‚Äã_mintAmounts‚Äã‚Ä¢ Private _mintAmounts: null | Readonly<{ amount0: default ; amount1: default }> = nullDefined in‚Äãentities/position.ts:31_token0Amount‚Äã‚Ä¢ Private _token0Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:29_token1Amount‚Äã‚Ä¢ Private _token1Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:30liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/position.ts:26pool‚Äã‚Ä¢ Readonly pool: PoolDefined in‚Äãentities/position.ts:23tickLower‚Äã‚Ä¢ Readonly tickLower: numberDefined in‚Äãentities/position.ts:24tickUpper‚Äã‚Ä¢ Readonly tickUpper: numberDefined in‚Äãentities/position.ts:25Accessors‚Äãamount0‚Äã‚Ä¢ get amount0(): CurrencyAmount<Token>Returns the amount of token0 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:68amount1‚Äã‚Ä¢ get amount1(): CurrencyAmount<Token>Returns the amount of token1 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:100mintAmounts‚Äã‚Ä¢ get mintAmounts(): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at the current price for the poolReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>Defined in‚Äãentities/position.ts:258token0PriceLower‚Äã‚Ä¢ get token0PriceLower(): Price<Token, Token>Returns the price of token0 at the lower tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:54token0PriceUpper‚Äã‚Ä¢ get token0PriceUpper(): Price<Token, Token>Returns the price of token0 at the upper tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:61Methods‚ÄãburnAmountsWithSlippage‚Äã‚ñ∏ burnAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercenttolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:213mintAmountsWithSlippage‚Äã‚ñ∏ mintAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to safely mint the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentTolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:157ratiosAfterSlippage‚Äã‚ñ∏ Private ratiosAfterSlippage(slippageTolerance): ObjectReturns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentageParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe amount by which the price can 'slip' before the transaction will revertReturns‚ÄãObjectThe sqrt ratios after slippageNameTypesqrtRatioX96LowerdefaultsqrtRatioX96UpperdefaultDefined in‚Äãentities/position.ts:134fromAmount0‚Äã‚ñ∏ Static fromAmount0(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited amount of token1Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:354fromAmount1‚Äã‚ñ∏ Static fromAmount1(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited amount of token0Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumberReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:378fromAmounts‚Äã‚ñ∏ Static fromAmounts(__namedParameters): PositionComputes the maximum amount of liquidity received for a given amount of token0, token1, and the prices at the tick boundaries.Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe amount of liquidity for the positionDefined in‚Äãentities/position.ts:312Helpful?PreviousPoolNextPositionLibraryTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessorsamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethodsburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
614,p.org sdk v2 overview,"p.org sdk v2 overview.    Overview | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKOverviewGuidesSDK Quick startFetching DataPricingTradingPair AddressesTechnical ReferenceGetting StartedTokenPairRouteTradeFractionsFetcherOther ExportsV1 SDKüè†V2 SDKOverviewHelpful?The Uniswap V2 SDKWelcome to the Uniswap Protocol V2 SDK. To begin, we recommend looking at the Guides and for deeper reference see the V2 SDK Github repo.Uniswap V2 SDKV2 SDK GithubSDK Core GithubSDK NPM Package Helpful?PreviousTradeTypeNextSDK Quick startDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
615,p.org sdk v3 reference classes Pool#getaddress,"p.org sdk v3 reference classes Pool#getaddress.    Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPoolHelpful?On this pagePool@uniswap/v3-sdk / Exports / PoolClass: PoolRepresents a V3 poolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1Accessors‚ÄãchainIdtickSpacingtoken0Pricetoken1PriceMethods‚ÄãgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressConstructors‚Äãconstructor‚Äã‚Ä¢ new Pool(tokenA, tokenB, fee, sqrtRatioX96, liquidity, tickCurrent, ticks?)Construct a poolParameters‚ÄãNameTypeDefault valueDescriptiontokenATokenundefinedOne of the tokens in the pooltokenBTokenundefinedThe other token in the poolfeeFeeAmountundefinedThe fee in hundredths of a bips of the input amount of every swap that is collected by the poolsqrtRatioX96BigintIshundefinedThe sqrt of the current ratio of amounts of token1 to token0liquidityBigintIshundefinedThe current value of in range liquiditytickCurrentnumberundefinedThe current tick of the poolticksTickDataProvider | (Tick | TickConstructorArgs)[]NO_TICK_DATA_PROVIDER_DEFAULTThe current state of the pool ticks or a data provider that can return tick dataDefined in‚Äãentities/pool.ts:70Properties‚Äã_token0Price‚Äã‚Ä¢ Private Optional _token0Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:41_token1Price‚Äã‚Ä¢ Private Optional _token1Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:42fee‚Äã‚Ä¢ Readonly fee: FeeAmountDefined in‚Äãentities/pool.ts:35liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/pool.ts:37sqrtRatioX96‚Äã‚Ä¢ Readonly sqrtRatioX96: defaultDefined in‚Äãentities/pool.ts:36tickCurrent‚Äã‚Ä¢ Readonly tickCurrent: numberDefined in‚Äãentities/pool.ts:38tickDataProvider‚Äã‚Ä¢ Readonly tickDataProvider: TickDataProviderDefined in‚Äãentities/pool.ts:39token0‚Äã‚Ä¢ Readonly token0: TokenDefined in‚Äãentities/pool.ts:33token1‚Äã‚Ä¢ Readonly token1: TokenDefined in‚Äãentities/pool.ts:34Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns the chain ID of the tokens in the pool.Returns‚ÄãnumberDefined in‚Äãentities/pool.ts:149tickSpacing‚Äã‚Ä¢ get tickSpacing(): numberReturns‚ÄãnumberDefined in‚Äãentities/pool.ts:317token0Price‚Äã‚Ä¢ get token0Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:109token1Price‚Äã‚Ä¢ get token1Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:124Methods‚ÄãgetInputAmount‚Äã‚ñ∏ getInputAmount(outputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given a desired output amount of a token, return the computed input amount and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptionoutputAmountCurrencyAmount<Token>the output amount for which to quote the input amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The input amount and the pool with updated stateDefined in‚Äãentities/pool.ts:185getOutputAmount‚Äã‚ñ∏ getOutputAmount(inputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given an input amount of a token, return the computed output amount, and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptioninputAmountCurrencyAmount<Token>The input amount for which to quote the output amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limitReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The output amount and the pool with updated stateDefined in‚Äãentities/pool.ts:159involvesToken‚Äã‚ñ∏ involvesToken(token): booleanReturns true if the token is either token0 or token1Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to checkReturns‚ÄãbooleanTrue if token is either token0 or tokenDefined in‚Äãentities/pool.ts:102priceOf‚Äã‚ñ∏ priceOf(token): Price<Token, Token>Return the price of the given token in terms of the other token in the pool.Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to return price ofReturns‚ÄãPrice<Token, Token>The price of the given token, in terms of the other.Defined in‚Äãentities/pool.ts:141swap‚Äã‚ñ∏ Private swap(zeroForOne, amountSpecified, sqrtPriceLimitX96?): Promise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>Executes a swapParameters‚ÄãNameTypeDescriptionzeroForOnebooleanWhether the amount in is token0 or token1amountSpecifieddefaultThe amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>amountCalculatedsqrtRatioX96liquiditytickCurrentDefined in‚Äãentities/pool.ts:215getAddress‚Äã‚ñ∏ Static getAddress(tokenA, tokenB, fee, initCodeHashManualOverride?, factoryAddressOverride?): stringParameters‚ÄãNameTypetokenATokentokenBTokenfeeFeeAmountinitCodeHashManualOverride?stringfactoryAddressOverride?stringReturns‚ÄãstringDefined in‚Äãentities/pool.ts:44Helpful?PreviousPaymentsNextPositionTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1AccessorschainIdtickSpacingtoken0Pricetoken1PriceMethodsgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
616,p.org contracts v2 reference API queries,"p.org contracts v2 reference API queries.    Queries | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIAPI OverviewEntitiesQueriesGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolTechnical ReferenceAPIQueriesHelpful?On this pageQueriesThe subgraph can be queried to retrieve important information about Uniswap, pairs, tokens, transactions, users, and more. This page will provide examples for common queries.To try these queries and run your own visit the subgraph sandbox.Global Data‚ÄãTo query global data you can pass in the Uniswap Factory address and select from available fields.Global Stats‚ÄãAll time volume in USD, total liquidity in USD, all time transaction count.{ uniswapFactory(id: ""0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f""){ totalVolumeUSD totalLiquidityUSD txCount }}CopyGlobal Historical lookup‚ÄãTo get a snapshot of past state, use The Graph's block query feature and query at a previous block. See this post to get more information about fetching block numbers from timestamps. This can be used to calculate things like 24hr volume.{ uniswapFactory(id: ""0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f"", block: {number: 10291203}){ totalVolumeUSD totalLiquidityUSD txCount }}CopyPair Data‚ÄãPair Overview‚ÄãFetch a snapshot of the current state of the pair with common values. This example fetches the DAI/WETH pair.{ pair(id: ""0xa478c2975ab1ea89e8196811f51a7b7ade33eb11""){  token0 {  id  symbol  name  derivedETH  }  token1 {  id  symbol  name  derivedETH  }  reserve0  reserve1  reserveUSD  trackedReserveETH  token0Price  token1Price  volumeUSD  txCount }}CopyAll pairs in Uniswap‚ÄãThe Graph limits entity return amounts to 1000 per query as of now. To get all pairs on Uniswap use a loop and graphql skip query to fetch multiple chunks of 1000 pairs. The query would look like this (where skip is some incrementing variable passed into your query).{ query pairs($skip: Int!) { pairs(first: 1000, skip: $skip) {  id } }}CopyMost liquid pairs‚ÄãOrder by liquidity to get the most liquid pairs in Uniswap.{ pairs(first: 1000, orderBy: reserveUSD, orderDirection: desc) { id }}CopyRecent Swaps within a Pair‚ÄãGet the last 100 swaps on a pair by fetching Swap events and passing in the pair address. You'll often want token information as well.{swaps(orderBy: timestamp, orderDirection: desc, where: { pair: ""0xa478c2975ab1ea89e8196811f51a7b7ade33eb11"" }) {  pair {  token0 {   symbol  }  token1 {   symbol  }  }  amount0In  amount0Out  amount1In  amount1Out  amountUSD  to }}CopyPair Daily Aggregated‚ÄãDay data is useful for building charts and historical views around entities. To get stats about a pair in daily buckets query for day entities bounded by timestamps. This query gets the first 100 days after the given unix timestamp on the DAI/WETH pair.{ pairDayDatas(first: 100, orderBy: date, orderDirection: asc, where: {  pairAddress: ""0xa478c2975ab1ea89e8196811f51a7b7ade33eb11"",  date_gt: 1592505859 } ) {  date  dailyVolumeToken0  dailyVolumeToken1  dailyVolumeUSD  reserveUSD }}CopyToken Data‚ÄãToken data can be fetched using the token contract address as an ID. Token data is aggregated across all pairs the token is included in. Any token that is included in some pair in Uniswap can be queried.Token Overview‚ÄãGet a snapshot of the current stats on a token in Uniswap. This query fetches current stats on DAI. The allPairs field gets the first 200 pairs DAI is included in sorted by liquidity in derived USD.{ token(id: ""0x6b175474e89094c44da98b954eedeac495271d0f""){ name symbol decimals derivedETH tradeVolumeUSD totalLiquidity }}CopyAll Tokens in Uniswap‚ÄãSimilar to fetching all pairs (see above), you can query all tokens in Uniswap. Because The Graph service limits return size to 1000 entities use graphql skip query. (Note this query will not work in the graph sandbox and more resembles the structure of a query you'd pass to some graphql middleware like Apollo).{ query tokens($skip: Int!) { tokens(first: 1000, skip: $skip) {  id  name  symbol } }}CopyToken Transactions‚ÄãTo get transactions that include a token you'll need to first fetch an array of pairs that the token is included in (this can be done with the allPairs field on the Token entity.) Once you have an array of pairs the token is included in, filter on that in the transaction lookup.This query fetches the latest 30 mints, swaps, and burns involving DAI. The allPairs array could look something like this where we include the DAI/WETH pair address and the DAI/USDC pair address.allPairs = [ ""0xa478c2975ab1ea89e8196811f51a7b7ade33eb11"", ""0xae461ca67b15dc8dc81ce7615e0320da1a9ab8d5""]Copyquery($allPairs: [String!]) { mints(first: 30, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) { transaction {  id  timestamp } to liquidity amount0 amount1 amountUSD } burns(first: 30, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) { transaction {  id  timestamp } to liquidity amount0 amount1 amountUSD } swaps(first: 30, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) { transaction {  id  timestamp } amount0In amount0Out amount1In amount1Out amountUSD to }}CopyToken Daily Aggregated‚ÄãLike pair and global daily lookups, tokens have daily entities that can be queries as well. This query gets daily information for DAI. Note that you may want to sort in ascending order to receive your days from oldest to most recent in the return array.{ tokenDayDatas(orderBy: date, orderDirection: asc, where: { token: ""0x6b175474e89094c44da98b954eedeac495271d0f"" } ) { id date priceUSD totalLiquidityToken totalLiquidityUSD totalLiquidityETH dailyVolumeETH dailyVolumeToken dailyVolumeUSD }}CopyETH Price‚ÄãYou can use the Bundle entity to query current USD price of ETH in Uniswap based on a weighted average of stablecoins.{ bundle(id: ""1"" ) { ethPrice }}CopyEdit this pageHelpful?PreviousEntitiesNextGovernance ReferenceGlobal DataPair DataToken DataETH PriceDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
617,p.org contracts v3 reference core interfaces pool IUniswapV3PoolImmutables,"p.org contracts v3 reference core interfaces pool IUniswapV3PoolImmutables.    IUniswapV3PoolImmutables | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesIERC20MinimalIUniswapV3FactoryIUniswapV3PoolIUniswapV3PoolDeployercallbackPoolIUniswapV3PoolActionsIUniswapV3PoolDerivedStateIUniswapV3PoolEventsIUniswapV3PoolImmutablesIUniswapV3PoolOwnerActionsIUniswapV3PoolStateLibrariesGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreInterfacesPoolIUniswapV3PoolImmutablesHelpful?On this pageIUniswapV3PoolImmutablesThese parameters are fixed for a pool forever, i.e., the methods will always return the same valuesFunctions‚Äãfactory‚Äã function factory( ) external view returns (address)CopyThe contract that deployed the pool, which must adhere to the IUniswapV3Factory interfaceReturn Values:‚ÄãTypeDescriptionaddresscontract addresstoken0‚Äã function token0( ) external view returns (address)CopyThe first of the two tokens of the pool, sorted by addressReturn Values:‚ÄãTypeDescriptionaddresstoken contract addresstoken1‚Äã function token1( ) external view returns (address)CopyThe second of the two tokens of the pool, sorted by addressReturn Values:‚ÄãTypeDescriptionaddresstoken contract addressfee‚Äã function fee( ) external view returns (uint24)CopyThe pool's fee in hundredths of a bip, i.e. 1e-6Return Values:‚ÄãTypeDescriptionuint24feetickSpacing‚Äã function tickSpacing( ) external view returns (int24)CopyThe pool tick spacingTicks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.Return Values:‚ÄãTypeDescriptionint24tick spacingmaxLiquidityPerTick‚Äã function maxLiquidityPerTick( ) external view returns (uint128)CopyThe maximum amount of position liquidity that can use any tick in the rangeThis parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a poolReturn Values:‚ÄãTypeDescriptionuint128max amount of liquidity per tickEdit this pageHelpful?PreviousIUniswapV3PoolEventsNextIUniswapV3PoolOwnerActionsFunctionsfactorytoken0token1feetickSpacingmaxLiquidityPerTickDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
618,p.org contracts v1 overview,"p.org contracts v1 overview.    Overview | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 ProtocolOverviewGuidesConnect to UniswapPool LiquidityTrade TokensCustom LinkingIframe IntegrationToken ListingTechnical ReferenceFactoryExchangeInterfacesüè†V1 ProtocolOverviewHelpful?The Uniswap V1 Smart ContractsUniswap V1 is the first version of the protocol, launched in November 2018 at Devcon 4. Because of its permissionless nature, it will exist for as long as Ethereum does.Designed with simplicity in mind, the Uniswap protocol provides an interface for seamless exchange of ERC20 tokens on Ethereum. By eliminating unnecessary forms of rent extraction and middlemen it allows faster, more efficient exchange. Where it makes tradeoffs, decentralization, censorship resistance, and security are prioritized.Uniswap is open source and functions as a public good. There is no central token or platform fee. No special treatment is given to early investors, adopters, or developers. Token listing is open and free. All smart contract functions are public and all upgrades are opt-in.This site will serve as a project overview for Uniswap - explaining how it works, how to use it, and how to build on top of it. These docs are actively being worked on and more information will be added on an ongoing basis.V1 FeaturesAdd support for any ERC20 token using the Uniswap factoryJoin liquidity pools to collect fees on ETH-ERC20 pairsLiquidity-sensitive automated pricing using constant product formulaTrade ETH for any ERC20 without wrappingTrade any ERC20 for any ERC20 in a single transactionTrade and transfer to a different address in a single transactionLowest gas cost of any decentralized exchangeSupport for private and custom uniswap exchangesBuy ERC20 tokens from any wallet using ENSPartially verified smart contracts written in VyperMobile-optimized open source frontend implementationFunded through an Ethereum Foundation grantResourcesWebsiteGitHubTwitterRedditEmailWhitepaperHow it worksUniswap is made up of a series of ETH-ERC20 exchange contracts. There is exactly one exchange contract per ERC20 token. If a token does not yet have an exchange it can be created by anyone using the Uniswap factory contract. The factory serves as a public registry and is used to look up all token and exchange addresses added to the system.Each exchange holds reserves of both ETH and its associated ERC20 token. Anyone can become a liquidity provider on an exchange and contribute to its reserves. This is different than buying or selling; it requires depositing an equivalent value of both ETH and the relevant ERC20 token. Liquidity is pooled across all providers and an internal ""pool token"" (ERC20) is used to track each providers relative contribution. Pool tokens are minted when liquidity is deposited into the system and can be burned at any time to withdraw a proportional share of the reserves.Exchange contracts are automated market makers between an ETH-ERC20 pair. Traders can swap between the two in either direction by adding to the liquidity reserve of one and withdrawing from the reserve of the other. Since ETH is a common pair for all ERC20 exchanges, it can be used as an intermediary allowing direct ERC20-ERC20 trades in a single transaction. Users can specify a recipient address if they want to receive purchased tokens at a different address from the one used to make a transaction.Uniswap uses a ""constant product"" market making formula which sets the exchange rate based off of the relative size of the ETH and ERC20 reserves, and the amount with which an incoming trade shifts this ratio. Selling ETH for ERC20 tokens increases the size of the ETH reserve and decreases the size of the ERC20 reserve. This shifts the reserve ratio, increasing the ERC20 token's price relative to ETH for subsequent transactions. The larger a trade relative to the total size of the reserves, the more price slippage will occur. Essentially, exchange contracts use the open financial market to decide on the relative value of a pair and uses that as a market making strategy.A small liquidity provider fee (0.30%) is taken out of each trade and added to the reserves. While the ETH-ERC20 reserve ratio is constantly shifting, fees makes sure that the total combined reserve size increases with every trade. This functions as a payout to liquidity providers that is collected when they burn their pool tokens to withdraw their portion of total reserves. Guaranteed arbitrage opportunities from price fluctuations should push a steady flow of transactions through the system and increase the amount of fee revenue generated.Since Uniswap is entirely on-chain, prices can change between when a transaction is signed and when it is included in a block. Traders can bound price fluctuations by specifying the minimum amount bought on sell orders, or the maximum amount sold on buy orders. This acts as a limit order that will automatically cancel if it is not filled. It is also possible to set transaction deadlines which will cancel orders if they are not executed fast enough.The reason only one exchange per token can be registered to the factory is to encourage providers to pool their liquidity into a single reserve. However, Uniswap has built in support for ERC20-to-ERC20 trades using the public pools from the factory on one side of the transaction and custom, user-specified pool on the other. Custom pools could have fund managers, use alternate pricing mechanisms, remove liquidity provider fees, integrate complex three dimensional fomo-based ponzi-schemes and more. They just need to implement the Uniswap interface and accept ETH as an intermediary asset. Custom pools do not have the same safety properties as the public ones. It is recommended users only interact with audited, open-source smart contracts.Upgrading censorship resistant, decentralized smart contracts is difficult. If significant improvements are made to the system a new version will be released. Liquidity providers can choose between moving to the new system or staying in the old one. If possible, new versions will be backwards compatible and able to trade ERC20-to-ERC20 with the old versions similar to a custom pool.How to use ituniswap.org is the landing page for the Uniswap protocol. It describes the project and directs users where they need to go.The Uniswap smart contracts live on Ethereum. Anyone can interact with them directly.The Uniswap frontend is an open source interface designed to improve user experience when interacting with the smart contracts. Anyone can use the source code to host an interface, or build their own. Hosted interfaces are independent of Uniswap, and should comply with their jurisdictional laws and regulations.Edit this pageHelpful?PreviousCommon ErrorsNextConnect to UniswapDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
619,p.org contracts v3 reference periphery libraries PositionKey,p.org contracts v3 reference periphery libraries PositionKey.    PositionKey | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesBase64BytesLibCallbackValidationChainIdHexStringsLiquidityAmountsNFTDescriptorNFTSVGOracleLibraryPathPoolAddressPoolTicksCounterPositionKeyTokenRatioSortOrderTransferHelperWeightedOracleLibraryStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryLibrariesPositionKeyHelpful?On this pagePositionKeyFunctions‚Äãcompute‚Äã function compute( ) internal returns (bytes32)CopyReturns the key of the position in the core libraryEdit this pageHelpful?PreviousPoolTicksCounterNextTokenRatioSortOrderFunctionscomputeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
620,p.org contracts v3 reference periphery libraries CallbackValidation,"p.org contracts v3 reference periphery libraries CallbackValidation.    CallbackValidation | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesBase64BytesLibCallbackValidationChainIdHexStringsLiquidityAmountsNFTDescriptorNFTSVGOracleLibraryPathPoolAddressPoolTicksCounterPositionKeyTokenRatioSortOrderTransferHelperWeightedOracleLibraryStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryLibrariesCallbackValidationHelpful?On this pageCallbackValidationProvides validation for callbacks from Uniswap V3 PoolsFunctions‚ÄãverifyCallback‚Äã function verifyCallback( address factory, address tokenA, address tokenB, uint24 fee ) internal returns (contract IUniswapV3Pool pool)CopyReturns the address of a valid Uniswap V3 PoolParameters:‚ÄãNameTypeDescriptionfactoryaddressThe contract address of the Uniswap V3 factorytokenAaddressThe contract address of either token0 or token1tokenBaddressThe contract address of the other tokenfeeuint24The fee collected upon every swap in the pool, denominated in hundredths of a bipReturn Values:‚ÄãNameTypeDescriptionpoolIUniswapV3PoolThe V3 pool contract addressverifyCallback‚Äã function verifyCallback( address factory, struct PoolAddress.PoolKey poolKey ) internal returns (contract IUniswapV3Pool pool)CopyReturns the address of a valid Uniswap V3 PoolParameters:‚ÄãNameTypeDescriptionfactoryaddressThe contract address of the Uniswap V3 factorypoolKeystruct PoolAddress.PoolKeyThe identifying key of the V3 poolReturn Values:‚ÄãNameTypeDescriptionpoolIUniswapV3PoolThe V3 pool contract addressEdit this pageHelpful?PreviousBytesLibNextChainIdFunctionsverifyCallbackverifyCallbackDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
621,p.org sdk v3 reference interfaces SafeTransferOptions,p.org sdk v3 reference interfaces SafeTransferOptions.    SafeTransferOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesSafeTransferOptionsHelpful?On this pageSafeTransferOptions@uniswap/v3-sdk / Exports / SafeTransferOptionsInterface: SafeTransferOptionsTable of contents‚ÄãProperties‚ÄãdatarecipientsendertokenIdProperties‚Äãdata‚Äã‚Ä¢ Optional data: stringThe optional parameter that passes data to the onERC721Received call for the stakerDefined in‚ÄãnonfungiblePositionManager.ts:97recipient‚Äã‚Ä¢ recipient: stringThe account that should receive the NFT.Defined in‚ÄãnonfungiblePositionManager.ts:88sender‚Äã‚Ä¢ sender: stringThe account sending the NFT.Defined in‚ÄãnonfungiblePositionManager.ts:83tokenId‚Äã‚Ä¢ tokenId: BigintIshThe id of the token being sent.Defined in‚ÄãnonfungiblePositionManager.ts:93Helpful?PreviousRemoveLiquidityOptionsNextStandardPermitArgumentsTable of contentsPropertiesPropertiesdatarecipientsendertokenIdDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
622,p.org contracts v1 guides connect to uniswap #get exchange address,"p.org contracts v1 guides connect to uniswap #get exchange address.    Connect to Uniswap | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 ProtocolOverviewGuidesConnect to UniswapPool LiquidityTrade TokensCustom LinkingIframe IntegrationToken ListingTechnical ReferenceFactoryExchangeInterfacesüè†V1 ProtocolGuidesConnect to UniswapHelpful?On this pageConnect to UniswapThe Uniswap smart contracts exist on the Ethereum blockchain. Use ethers.js or web3.js to connect your website to Ethereum. Users will need a web3-enabled browser. On desktop this means using the MetaMask extension or something similar. On mobile, web3-compatible browsers include Trust Wallet and Coinbase Wallet. See ethereum.org to learn more.Factory ContractThe Uniswap factory contract can be used to create exchange contracts for any ERC20 token that does not already have one. It also functions as a registry of ERC20 tokens that have been added to the system, and the exchange with which they are associated.The factory contract can be instantiated using the factory address and ABI:Factory Address‚Äã// mainnetconst factory = '0xc0a47dFe034B400B47bDaD5FecDa2621de6c4d95'// testnetsconst ropsten = '0x9c83dCE8CA20E9aAF9D3efc003b2ea62aBC08351'const rinkeby = '0xf5D915570BC477f9B8D6C0E980aA81757A3AaC36'const kovan = '0xD3E51Ef092B2845f10401a0159B2B96e8B6c3D30'const g√∂rli = '0x6Ce570d02D73d4c384b46135E87f8C592A8c86dA'CopyFactory Interface‚ÄãCreating the factory interface in web3 requires the factory address and the factory ABI:const factoryABI = [ { name: 'NewExchange', inputs: [  { type: 'address', name: 'token', indexed: true },  { type: 'address', name: 'exchange', indexed: true }, ], anonymous: false, type: 'event', }, { name: 'initializeFactory', outputs: [], inputs: [{ type: 'address', name: 'template' }], constant: false, payable: false, type: 'function', gas: 35725, }, { name: 'createExchange', outputs: [{ type: 'address', name: 'out' }], inputs: [{ type: 'address', name: 'token' }], constant: false, payable: false, type: 'function', gas: 187911, }, { name: 'getExchange', outputs: [{ type: 'address', name: 'out' }], inputs: [{ type: 'address', name: 'token' }], constant: true, payable: false, type: 'function', gas: 715, }, { name: 'getToken', outputs: [{ type: 'address', name: 'out' }], inputs: [{ type: 'address', name: 'exchange' }], constant: true, payable: false, type: 'function', gas: 745, }, { name: 'getTokenWithId', outputs: [{ type: 'address', name: 'out' }], inputs: [{ type: 'uint256', name: 'token_id' }], constant: true, payable: false, type: 'function', gas: 736, }, { name: 'exchangeTemplate', outputs: [{ type: 'address', name: 'out' }], inputs: [], constant: true, payable: false, type: 'function', gas: 633, }, { name: 'tokenCount', outputs: [{ type: 'uint256', name: 'out' }], inputs: [], constant: true, payable: false, type: 'function', gas: 663, },]Copyconst factoryContract = new web3.eth.Contract(factoryABI, factoryAddress)CopyExchange ContractsGet Exchange Address‚ÄãThere is a separate exchange contract for every ERC20 token. The getExchange method in the factory contract can be used to find the Ethereum address associated with an ERC20 token address.const exchangeAddress = factoryContract.methods.getExchange(tokenAddress)CopyIf the return value is 0x0000000000000000000000000000000000000000 the token does not yet have an exchange.Exchange Interface‚ÄãCreating an exchange interface in web3 requires the exchange address and the exchange ABI:const exchangeABI = [ { name: 'TokenPurchase', inputs: [  { type: 'address', name: 'buyer', indexed: true },  { type: 'uint256', name: 'eth_sold', indexed: true },  { type: 'uint256', name: 'tokens_bought', indexed: true }, ], anonymous: false, type: 'event', }, { name: 'EthPurchase', inputs: [  { type: 'address', name: 'buyer', indexed: true },  { type: 'uint256', name: 'tokens_sold', indexed: true },  { type: 'uint256', name: 'eth_bought', indexed: true }, ], anonymous: false, type: 'event', }, { name: 'AddLiquidity', inputs: [  { type: 'address', name: 'provider', indexed: true },  { type: 'uint256', name: 'eth_amount', indexed: true },  { type: 'uint256', name: 'token_amount', indexed: true }, ], anonymous: false, type: 'event', }, { name: 'RemoveLiquidity', inputs: [  { type: 'address', name: 'provider', indexed: true },  { type: 'uint256', name: 'eth_amount', indexed: true },  { type: 'uint256', name: 'token_amount', indexed: true }, ], anonymous: false, type: 'event', }, { name: 'Transfer', inputs: [  { type: 'address', name: '_from', indexed: true },  { type: 'address', name: '_to', indexed: true },  { type: 'uint256', name: '_value', indexed: false }, ], anonymous: false, type: 'event', }, { name: 'Approval', inputs: [  { type: 'address', name: '_owner', indexed: true },  { type: 'address', name: '_spender', indexed: true },  { type: 'uint256', name: '_value', indexed: false }, ], anonymous: false, type: 'event', }, { name: 'setup', outputs: [], inputs: [{ type: 'address', name: 'token_addr' }], constant: false, payable: false, type: 'function', gas: 175875, }, { name: 'addLiquidity', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'min_liquidity' },  { type: 'uint256', name: 'max_tokens' },  { type: 'uint256', name: 'deadline' }, ], constant: false, payable: true, type: 'function', gas: 82605, }, { name: 'removeLiquidity', outputs: [  { type: 'uint256', name: 'out' },  { type: 'uint256', name: 'out' }, ], inputs: [  { type: 'uint256', name: 'amount' },  { type: 'uint256', name: 'min_eth' },  { type: 'uint256', name: 'min_tokens' },  { type: 'uint256', name: 'deadline' }, ], constant: false, payable: false, type: 'function', gas: 116814, }, { name: '__default__', outputs: [], inputs: [], constant: false, payable: true, type: 'function', }, { name: 'ethToTokenSwapInput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'min_tokens' },  { type: 'uint256', name: 'deadline' }, ], constant: false, payable: true, type: 'function', gas: 12757, }, { name: 'ethToTokenTransferInput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'min_tokens' },  { type: 'uint256', name: 'deadline' },  { type: 'address', name: 'recipient' }, ], constant: false, payable: true, type: 'function', gas: 12965, }, { name: 'ethToTokenSwapOutput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'tokens_bought' },  { type: 'uint256', name: 'deadline' }, ], constant: false, payable: true, type: 'function', gas: 50455, }, { name: 'ethToTokenTransferOutput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'tokens_bought' },  { type: 'uint256', name: 'deadline' },  { type: 'address', name: 'recipient' }, ], constant: false, payable: true, type: 'function', gas: 50663, }, { name: 'tokenToEthSwapInput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'tokens_sold' },  { type: 'uint256', name: 'min_eth' },  { type: 'uint256', name: 'deadline' }, ], constant: false, payable: false, type: 'function', gas: 47503, }, { name: 'tokenToEthTransferInput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'tokens_sold' },  { type: 'uint256', name: 'min_eth' },  { type: 'uint256', name: 'deadline' },  { type: 'address', name: 'recipient' }, ], constant: false, payable: false, type: 'function', gas: 47712, }, { name: 'tokenToEthSwapOutput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'eth_bought' },  { type: 'uint256', name: 'max_tokens' },  { type: 'uint256', name: 'deadline' }, ], constant: false, payable: false, type: 'function', gas: 50175, }, { name: 'tokenToEthTransferOutput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'eth_bought' },  { type: 'uint256', name: 'max_tokens' },  { type: 'uint256', name: 'deadline' },  { type: 'address', name: 'recipient' }, ], constant: false, payable: false, type: 'function', gas: 50384, }, { name: 'tokenToTokenSwapInput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'tokens_sold' },  { type: 'uint256', name: 'min_tokens_bought' },  { type: 'uint256', name: 'min_eth_bought' },  { type: 'uint256', name: 'deadline' },  { type: 'address', name: 'token_addr' }, ], constant: false, payable: false, type: 'function', gas: 51007, }, { name: 'tokenToTokenTransferInput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'tokens_sold' },  { type: 'uint256', name: 'min_tokens_bought' },  { type: 'uint256', name: 'min_eth_bought' },  { type: 'uint256', name: 'deadline' },  { type: 'address', name: 'recipient' },  { type: 'address', name: 'token_addr' }, ], constant: false, payable: false, type: 'function', gas: 51098, }, { name: 'tokenToTokenSwapOutput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'tokens_bought' },  { type: 'uint256', name: 'max_tokens_sold' },  { type: 'uint256', name: 'max_eth_sold' },  { type: 'uint256', name: 'deadline' },  { type: 'address', name: 'token_addr' }, ], constant: false, payable: false, type: 'function', gas: 54928, }, { name: 'tokenToTokenTransferOutput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'tokens_bought' },  { type: 'uint256', name: 'max_tokens_sold' },  { type: 'uint256', name: 'max_eth_sold' },  { type: 'uint256', name: 'deadline' },  { type: 'address', name: 'recipient' },  { type: 'address', name: 'token_addr' }, ], constant: false, payable: false, type: 'function', gas: 55019, }, { name: 'tokenToExchangeSwapInput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'tokens_sold' },  { type: 'uint256', name: 'min_tokens_bought' },  { type: 'uint256', name: 'min_eth_bought' },  { type: 'uint256', name: 'deadline' },  { type: 'address', name: 'exchange_addr' }, ], constant: false, payable: false, type: 'function', gas: 49342, }, { name: 'tokenToExchangeTransferInput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'tokens_sold' },  { type: 'uint256', name: 'min_tokens_bought' },  { type: 'uint256', name: 'min_eth_bought' },  { type: 'uint256', name: 'deadline' },  { type: 'address', name: 'recipient' },  { type: 'address', name: 'exchange_addr' }, ], constant: false, payable: false, type: 'function', gas: 49532, }, { name: 'tokenToExchangeSwapOutput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'tokens_bought' },  { type: 'uint256', name: 'max_tokens_sold' },  { type: 'uint256', name: 'max_eth_sold' },  { type: 'uint256', name: 'deadline' },  { type: 'address', name: 'exchange_addr' }, ], constant: false, payable: false, type: 'function', gas: 53233, }, { name: 'tokenToExchangeTransferOutput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'tokens_bought' },  { type: 'uint256', name: 'max_tokens_sold' },  { type: 'uint256', name: 'max_eth_sold' },  { type: 'uint256', name: 'deadline' },  { type: 'address', name: 'recipient' },  { type: 'address', name: 'exchange_addr' }, ], constant: false, payable: false, type: 'function', gas: 53423, }, { name: 'getEthToTokenInputPrice', outputs: [{ type: 'uint256', name: 'out' }], inputs: [{ type: 'uint256', name: 'eth_sold' }], constant: true, payable: false, type: 'function', gas: 5542, }, { name: 'getEthToTokenOutputPrice', outputs: [{ type: 'uint256', name: 'out' }], inputs: [{ type: 'uint256', name: 'tokens_bought' }], constant: true, payable: false, type: 'function', gas: 6872, }, { name: 'getTokenToEthInputPrice', outputs: [{ type: 'uint256', name: 'out' }], inputs: [{ type: 'uint256', name: 'tokens_sold' }], constant: true, payable: false, type: 'function', gas: 5637, }, { name: 'getTokenToEthOutputPrice', outputs: [{ type: 'uint256', name: 'out' }], inputs: [{ type: 'uint256', name: 'eth_bought' }], constant: true, payable: false, type: 'function', gas: 6897, }, { name: 'tokenAddress', outputs: [{ type: 'address', name: 'out' }], inputs: [], constant: true, payable: false, type: 'function', gas: 1413, }, { name: 'factoryAddress', outputs: [{ type: 'address', name: 'out' }], inputs: [], constant: true, payable: false, type: 'function', gas: 1443, }, { name: 'balanceOf', outputs: [{ type: 'uint256', name: 'out' }], inputs: [{ type: 'address', name: '_owner' }], constant: true, payable: false, type: 'function', gas: 1645, }, { name: 'transfer', outputs: [{ type: 'bool', name: 'out' }], inputs: [  { type: 'address', name: '_to' },  { type: 'uint256', name: '_value' }, ], constant: false, payable: false, type: 'function', gas: 75034, }, { name: 'transferFrom', outputs: [{ type: 'bool', name: 'out' }], inputs: [  { type: 'address', name: '_from' },  { type: 'address', name: '_to' },  { type: 'uint256', name: '_value' }, ], constant: false, payable: false, type: 'function', gas: 110907, }, { name: 'approve', outputs: [{ type: 'bool', name: 'out' }], inputs: [  { type: 'address', name: '_spender' },  { type: 'uint256', name: '_value' }, ], constant: false, payable: false, type: 'function', gas: 38769, }, { name: 'allowance', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'address', name: '_owner' },  { type: 'address', name: '_spender' }, ], constant: true, payable: false, type: 'function', gas: 1925, }, { name: 'name', outputs: [{ type: 'bytes32', name: 'out' }], inputs: [], constant: true, payable: false, type: 'function', gas: 1623, }, { name: 'symbol', outputs: [{ type: 'bytes32', name: 'out' }], inputs: [], constant: true, payable: false, type: 'function', gas: 1653, }, { name: 'decimals', outputs: [{ type: 'uint256', name: 'out' }], inputs: [], constant: true, payable: false, type: 'function', gas: 1683, }, { name: 'totalSupply', outputs: [{ type: 'uint256', name: 'out' }], inputs: [], constant: true, payable: false, type: 'function', gas: 1713, },]Copyconst exchangeContract = new web3.eth.Contract(exchangeABI, exchangeAddress)CopyToken ContractsSome Uniswap interactions require making calls directly to ERC20 token contracts rather than the exchanges with which they are associated.Get Token Address‚ÄãThe getToken method in the factory contract can be used to find the ERC20 token address associated with an exchange contract. There is no barrier of entry for adding an ERC20 token to Uniswap or checks on the validity of the token contracts. Frontend interfaces should maintain a list of valid ERC20 tokens that users can safely trade or allow users to paste in arbitrary addresses.const tokenAddress = factoryContract.methods.getToken(exchangeAddress)CopyIf the return value is 0x0000000000000000000000000000000000000000 the input address is not a Uniswap exchange.Token Interface‚ÄãCreating a token interface in web3 requires the token address and the token ABI:const tokenABI = [ { name: 'Transfer', inputs: [  { type: 'address', name: '_from', indexed: true },  { type: 'address', name: '_to', indexed: true },  { type: 'uint256', name: '_value', indexed: false }, ], anonymous: false, type: 'event', }, { name: 'Approval', inputs: [  { type: 'address', name: '_owner', indexed: true },  { type: 'address', name: '_spender', indexed: true },  { type: 'uint256', name: '_value', indexed: false }, ], anonymous: false, type: 'event', }, { name: '__init__', outputs: [], inputs: [  { type: 'bytes32', name: '_name' },  { type: 'bytes32', name: '_symbol' },  { type: 'uint256', name: '_decimals' },  { type: 'uint256', name: '_supply' }, ], constant: false, payable: false, type: 'constructor', }, { name: 'deposit', outputs: [], inputs: [], constant: false, payable: true, type: 'function', gas: 74279, }, { name: 'withdraw', outputs: [{ type: 'bool', name: 'out' }], inputs: [{ type: 'uint256', name: '_value' }], constant: false, payable: false, type: 'function', gas: 108706, }, { name: 'totalSupply', outputs: [{ type: 'uint256', name: 'out' }], inputs: [], constant: true, payable: false, type: 'function', gas: 543, }, { name: 'balanceOf', outputs: [{ type: 'uint256', name: 'out' }], inputs: [{ type: 'address', name: '_owner' }], constant: true, payable: false, type: 'function', gas: 745, }, { name: 'transfer', outputs: [{ type: 'bool', name: 'out' }], inputs: [  { type: 'address', name: '_to' },  { type: 'uint256', name: '_value' }, ], constant: false, payable: false, type: 'function', gas: 74698, }, { name: 'transferFrom', outputs: [{ type: 'bool', name: 'out' }], inputs: [  { type: 'address', name: '_from' },  { type: 'address', name: '_to' },  { type: 'uint256', name: '_value' }, ], constant: false, payable: false, type: 'function', gas: 110600, }, { name: 'approve', outputs: [{ type: 'bool', name: 'out' }], inputs: [  { type: 'address', name: '_spender' },  { type: 'uint256', name: '_value' }, ], constant: false, payable: false, type: 'function', gas: 37888, }, { name: 'allowance', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'address', name: '_owner' },  { type: 'address', name: '_spender' }, ], constant: true, payable: false, type: 'function', gas: 1025, }, { name: 'name', outputs: [{ type: 'bytes32', name: 'out' }], inputs: [], constant: true, payable: false, type: 'function', gas: 723, }, { name: 'symbol', outputs: [{ type: 'bytes32', name: 'out' }], inputs: [], constant: true, payable: false, type: 'function', gas: 753, }, { name: 'decimals', outputs: [{ type: 'uint256', name: 'out' }], inputs: [], constant: true, payable: false, type: 'function', gas: 783, },]Copyconst tokenContract = new web3.eth.Contract(tokenABI, tokenAddress)CopyEdit this pageHelpful?PreviousOverviewNextPool LiquidityFactory AddressFactory InterfaceGet Exchange AddressExchange InterfaceGet Token AddressToken InterfaceDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
623,p.org contracts v3 reference periphery test TestMulticall,p.org contracts v3 reference periphery test TestMulticall.    TestMulticall | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerTestBase64TestLiquidityAmountsTestMockTimeNonfungiblePositionManagerMockTimeSwapRouterNFTDescriptorTestPathTestPeripheryImmutableStateTestPoolAddressTestSelfPermitTestTestCallbackValidationTestERC20TestERC20MetadataTestERC20PermitAllowedTestMulticallTestPositionNFTOwnerTestUniswapV3CalleeTickLensTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryTestTestMulticallHelpful?On this pageTestMulticallFunctions‚ÄãfunctionThatRevertsWithError‚Äã function functionThatRevertsWithError( ) externalCopyfunctionThatReturnsTuple‚Äã function functionThatReturnsTuple( ) external returns (struct TestMulticall.Tuple tuple)Copypays‚Äã function pays( ) externalCopyreturnSender‚Äã function returnSender( ) external returns (address)CopyEdit this pageHelpful?PreviousTestERC20PermitAllowedNextTestPositionNFTOwnerFunctionsfunctionThatRevertsWithErrorfunctionThatReturnsTuplepaysreturnSenderDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
624,p.org contracts v2 concepts advanced topics pricing,"p.org contracts v2 concepts advanced topics pricing.    Pricing | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsFeesPricingUnderstanding ReturnsSecurityMathResearchGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolConceptsAdvanced TopicsPricingHelpful?On this pageHow are prices determined?As we learned in Protocol Overview, each pair on Uniswap is actually underpinned by a liquidity pool. Liquidity pools are smart contracts that hold balances of two unique tokens and enforces rules around depositing and withdrawing them. The primary rule is the constant product formula. When a token is withdrawn (bought), a proportional amount must be deposited (sold) to maintain the constant. The ratio of tokens in the pool, in combination with the constant product formula, ultimately determine the price that a swap executes at.How Uniswap handles pricesIn Uniswap V1, trades are always executed at the ""best possible"" price, calculated at execution time. Somewhat confusingly, this calculation is actually accomplished with one of two different formulas, depending on whether the trade specifies an exact input or output amount. Functionally, the difference between these two functions is miniscule, but the very existence of a difference increases conceptual complexity. Initial attempts to support both functions in V2 proved inelegant, and the decision was made to not provide any pricing functions in the core. Instead, pairs directly check whether the invariant was satisfied (accounting for fees) after every trade. This means that rather than relying on a pricing function to also enforce the invariant, V2 pairs simply and transparently ensure their own safety, a nice separation of concerns. One downstream benefit is that V2 pairs will more naturally support other flavors of trades which may emerge, (e.g. trading to a specific price at execution time).At a high level, in Uniswap V2, trades must be priced in the periphery. The good news is that the library provides a variety of functions designed to make this quite simple, and all swapping functions in the router are designed with this in mind.Pricing TradesWhen swapping tokens on Uniswap, it's common to want to receive as many output tokens as possible for an exact input amount, or to pay as few input tokens as possible for an exact output amount. In order to calculate these amounts, a contract must look up the current reserves of a pair, in order to understand what the current price is. However, it is not safe to perform this lookup and rely on the results without access to an external price.Say a smart contract naively wants to send 10 DAI to the DAI/WETH pair and receive as much WETH as it can get, given the current reserve ratio. If, when called, the naive smart contract simply looks up the current price and executes the trade, it is vulnerable to front-running and will likely suffer an economic loss. To see why, consider a malicious actor who sees this transaction before it is confirmed. They could execute a swap which dramatically changes the DAI/WETH price immediately before the naive swap goes through, wait for the naive swap to execute at a bad rate, and then swap to change the price back to what it was before the naive swap. This attack is fairly cheap and low-risk, and can typically be performed for a profit.To prevent these types of attacks, it's vital to submit swaps that have access to knowledge about the ""fair"" price their swap should execute at. In other words, swaps need access to an oracle, to be sure that the best execution they can get from Uniswap is close enough to what the oracle considers the ""true"" price. While this may sound complicated, the oracle can be as simple as an off-chain observation of the current market price of a pair. Because of arbitrage, it's typically the case that the ratio of the intra-block reserves of a pair is close to the ""true"" market price. So, if a user submits a trade with this knowledge in mind, they can ensure that the losses due to front-running are tightly bounded. This is how, for example, the Uniswap frontend ensure trade safety. It calculates the optimal input/output amounts given observed intra-block prices, and uses the router to perform the swap, which guarantees the swap will execute at a rate no less that x% worse than the observed intra-block rate, where x is a user-specified slippage tolerance (0.5% by default).There are, of course, other options for oracles, including native V2 oracles.Exact Input‚ÄãIf you'd like to send an exact amount of input tokens in exchange for as many output tokens as possible, you'll want to use getAmountsOut. The equivalent SDK function is getOutputAmount, or minimumAmountOut for slippage calculations.Exact Output‚ÄãIf you'd like to receive an exact amount of output tokens for as few input tokens as possible, you'll want to use getAmountsIn. The equivalent SDK function is getInputAmount, or maximumAmountIn for slippage calculations.Swap to Price‚ÄãFor this more advanced use case, see ExampleSwapToPrice.sol.Edit this pageHelpful?PreviousFeesNextUnderstanding ReturnsExact InputExact OutputSwap to PriceDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
625,p.org contracts v2 reference smart contracts router 02#swapexactethfortokens,"p.org contracts v2 reference smart contracts router 02#swapexactethfortokens.    Router02 | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsRouter02Helpful?On this pageRouter02Because routers are stateless and do not hold token balances, they can be replaced safely and trustlessly, if necessary. This may happen if more efficient smart contract patterns are discovered, or if additional functionality is desired. For this reason, routers have release numbers, starting at 01. This is currently recommended release, 02.CodeUniswapV2Router02.solAddressUniswapV2Router02 is deployed at 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D on the Ethereum mainnet, and the Ropsten, Rinkeby, G√∂rli, and Kovan testnets. It was built from commit 6961711.Read-Only Functionsfactory‚Äãfunction factory() external pure returns (address);CopyReturns factory address.WETH‚Äãfunction WETH() external pure returns (address);CopyReturns the canonical WETH address on the Ethereum mainnet, or the Ropsten, Rinkeby, G√∂rli, or Kovan testnets.quote‚ÄãSee quote.getAmountOut‚ÄãSee getAmountOut.getAmountIn‚ÄãSee getAmountIn.getAmountsOut‚Äãfunction getAmountsOut(uint amountIn, address[] memory path) public view returns (uint[] memory amounts);CopySee getAmountsOut.getAmountsIn‚Äãfunction getAmountsIn(uint amountOut, address[] memory path) public view returns (uint[] memory amounts);CopySee getAmountsIn.State-Changing FunctionsaddLiquidity‚Äãfunction addLiquidity( address tokenA, address tokenB, uint amountADesired, uint amountBDesired, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB, uint liquidity);CopyAdds liquidity to an ERC-20‚áÑERC-20 pool.To cover all possible scenarios, msg.sender should have already given the router an allowance of at least amountADesired/amountBDesired on tokenA/tokenB.Always adds assets at the ideal ratio, according to the price when the transaction is executed.If a pool for the passed tokens does not exists, one is created automatically, and exactly amountADesired/amountBDesired tokens are added.NameTypetokenAaddressA pool token.tokenBaddressA pool token.amountADesireduintThe amount of tokenA to add as liquidity if the B/A price is <= amountBDesired/amountADesired (A depreciates).amountBDesireduintThe amount of tokenB to add as liquidity if the A/B price is <= amountADesired/amountBDesired (B depreciates).amountAMinuintBounds the extent to which the B/A price can go up before the transaction reverts. Must be <= amountADesired.amountBMinuintBounds the extent to which the A/B price can go up before the transaction reverts. Must be <= amountBDesired.toaddressRecipient of the liquidity tokens.deadlineuintUnix timestamp after which the transaction will revert.amountAuintThe amount of tokenA sent to the pool.amountBuintThe amount of tokenB sent to the pool.liquidityuintThe amount of liquidity tokens minted.addLiquidityETH‚Äãfunction addLiquidityETH( address token, uint amountTokenDesired, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external payable returns (uint amountToken, uint amountETH, uint liquidity);CopyAdds liquidity to an ERC-20‚áÑWETH pool with ETH.To cover all possible scenarios, msg.sender should have already given the router an allowance of at least amountTokenDesired on token.Always adds assets at the ideal ratio, according to the price when the transaction is executed.msg.value is treated as a amountETHDesired.Leftover ETH, if any, is returned to msg.sender.If a pool for the passed token and WETH does not exists, one is created automatically, and exactly amountTokenDesired/msg.value tokens are added.NameTypetokenaddressA pool token.amountTokenDesireduintThe amount of token to add as liquidity if the WETH/token price is <= msg.value/amountTokenDesired (token depreciates).msg.value (amountETHDesired)uintThe amount of ETH to add as liquidity if the token/WETH price is <= amountTokenDesired/msg.value (WETH depreciates).amountTokenMinuintBounds the extent to which the WETH/token price can go up before the transaction reverts. Must be <= amountTokenDesired.amountETHMinuintBounds the extent to which the token/WETH price can go up before the transaction reverts. Must be <= msg.value.toaddressRecipient of the liquidity tokens.deadlineuintUnix timestamp after which the transaction will revert.amountTokenuintThe amount of token sent to the pool.amountETHuintThe amount of ETH converted to WETH and sent to the pool.liquidityuintThe amount of liquidity tokens minted.removeLiquidity‚Äãfunction removeLiquidity( address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB);CopyRemoves liquidity from an ERC-20‚áÑERC-20 pool.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenAaddressA pool token.tokenBaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountAMinuintThe minimum amount of tokenA that must be received for the transaction not to revert.amountBMinuintThe minimum amount of tokenB that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountAuintThe amount of tokenA received.amountBuintThe amount of tokenB received.removeLiquidityETH‚Äãfunction removeLiquidityETH( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external returns (uint amountToken, uint amountETH);CopyRemoves liquidity from an ERC-20‚áÑWETH pool and receive ETH.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountTokenuintThe amount of token received.amountETHuintThe amount of ETH received.removeLiquidityWithPermit‚Äãfunction removeLiquidityWithPermit( address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountA, uint amountB);CopyRemoves liquidity from an ERC-20‚áÑERC-20 pool without pre-approval, thanks to permit.NameTypetokenAaddressA pool token.tokenBaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountAMinuintThe minimum amount of tokenA that must be received for the transaction not to revert.amountBMinuintThe minimum amount of tokenB that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountAuintThe amount of tokenA received.amountBuintThe amount of tokenB received.removeLiquidityETHWithPermit‚Äãfunction removeLiquidityETHWithPermit( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountToken, uint amountETH);CopyRemoves liquidity from an ERC-20‚áÑWETTH pool and receive ETH without pre-approval, thanks to permit.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountTokenuintThe amount of token received.amountETHuintThe amount of ETH received.removeLiquidityETHSupportingFeeOnTransferTokens‚Äãfunction removeLiquidityETHSupportingFeeOnTransferTokens( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external returns (uint amountETH);CopyIdentical to removeLiquidityETH, but succeeds for tokens that take a fee on transfer.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountETHuintThe amount of ETH received.removeLiquidityETHWithPermitSupportingFeeOnTransferTokens‚Äãfunction removeLiquidityETHWithPermitSupportingFeeOnTransferTokens( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountETH);CopyIdentical to removeLiquidityETHWithPermit, but succeeds for tokens that take a fee on transfer.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountETHuintThe amount of ETH received.swapExactTokensForTokens‚Äãfunction swapExactTokensForTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopySwaps an exact amount of input tokens for as many output tokens as possible, along the route determined by the path. The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountIn on the input token.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapTokensForExactTokens‚Äãfunction swapTokensForExactTokens( uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopyReceive an exact amount of output tokens for as few input tokens as possible, along the route determined by the path. The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate tokens to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountInMax on the input token.NameTypeamountOutuintThe amount of output tokens to receive.amountInMaxuintThe maximum amount of input tokens that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactETHForTokens‚Äãfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts);CopySwaps an exact amount of ETH for as many output tokens as possible, along the route determined by the path. The first element of path must be WETH, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).NameTypemsg.value (amountIn)uintThe amount of ETH to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapTokensForExactETH‚Äãfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopyReceive an exact amount of ETH for as few input tokens as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountInMax on the input token.If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountOutuintThe amount of ETH to receive.amountInMaxuintThe maximum amount of input tokens that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of ETH.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactTokensForETH‚Äãfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopySwaps an exact amount of tokens for as much ETH as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the ETH.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapETHForExactTokens‚Äãfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts);CopyReceive an exact amount of tokens for as little ETH as possible, along the route determined by the path. The first element of path must be WETH, the last is the output token and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).Leftover ETH, if any, is returned to msg.sender.NameTypeamountOutuintThe amount of tokens to receive.msg.value (amountInMax)uintThe maximum amount of ETH that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactTokensForTokensSupportingFeeOnTransferTokens‚Äãfunction swapExactTokensForTokensSupportingFeeOnTransferTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external;CopyIdentical to swapExactTokensForTokens, but succeeds for tokens that take a fee on transfer.msg.sender should have already given the router an allowance of at least amountIn on the input token.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.swapExactETHForTokensSupportingFeeOnTransferTokens‚Äãfunction swapExactETHForTokensSupportingFeeOnTransferTokens( uint amountOutMin, address[] calldata path, address to, uint deadline) external payable;CopyIdentical to swapExactETHForTokens, but succeeds for tokens that take a fee on transfer.NameTypemsg.value (amountIn)uintThe amount of ETH to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.swapExactTokensForETHSupportingFeeOnTransferTokens‚Äãfunction swapExactTokensForETHSupportingFeeOnTransferTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external;CopyIdentical to swapExactTokensForETH, but succeeds for tokens that take a fee on transfer.If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the ETH.deadlineuintUnix timestamp after which the transaction will revert.Interfaceimport '@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol';Copypragma solidity >=0.6.2;interface IUniswapV2Router01 { function factory() external pure returns (address); function WETH() external pure returns (address); function addLiquidity(  address tokenA,  address tokenB,  uint amountADesired,  uint amountBDesired,  uint amountAMin,  uint amountBMin,  address to,  uint deadline ) external returns (uint amountA, uint amountB, uint liquidity); function addLiquidityETH(  address token,  uint amountTokenDesired,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external payable returns (uint amountToken, uint amountETH, uint liquidity); function removeLiquidity(  address tokenA,  address tokenB,  uint liquidity,  uint amountAMin,  uint amountBMin,  address to,  uint deadline ) external returns (uint amountA, uint amountB); function removeLiquidityETH(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external returns (uint amountToken, uint amountETH); function removeLiquidityWithPermit(  address tokenA,  address tokenB,  uint liquidity,  uint amountAMin,  uint amountBMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountA, uint amountB); function removeLiquidityETHWithPermit(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountToken, uint amountETH); function swapExactTokensForTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external returns (uint[] memory amounts); function swapTokensForExactTokens(  uint amountOut,  uint amountInMax,  address[] calldata path,  address to,  uint deadline ) external returns (uint[] memory amounts); function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)  external  payable  returns (uint[] memory amounts); function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)  external  returns (uint[] memory amounts); function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)  external  returns (uint[] memory amounts); function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)  external  payable  returns (uint[] memory amounts); function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB); function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut); function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn); function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts); function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);}interface IUniswapV2Router02 is IUniswapV2Router01 { function removeLiquidityETHSupportingFeeOnTransferTokens(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external returns (uint amountETH); function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountETH); function swapExactTokensForTokensSupportingFeeOnTransferTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external; function swapExactETHForTokensSupportingFeeOnTransferTokens(  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external payable; function swapExactTokensForETHSupportingFeeOnTransferTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external;}CopyABIimport IUniswapV2Router02 from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'Copyhttps://unpkg.com/@uniswap/v2-periphery@1.1.0-beta.0/build/IUniswapV2Router02.jsonEdit this pageHelpful?PreviousRouter01NextCommon ErrorsfactoryWETHquotegetAmountOutgetAmountIngetAmountsOutgetAmountsInaddLiquidityaddLiquidityETHremoveLiquidityremoveLiquidityETHremoveLiquidityWithPermitremoveLiquidityETHWithPermitremoveLiquidityETHSupportingFeeOnTransferTokensremoveLiquidityETHWithPermitSupportingFeeOnTransferTokensswapExactTokensForTokensswapTokensForExactTokensswapExactETHForTokensswapTokensForExactETHswapExactTokensForETHswapETHForExactTokensswapExactTokensForTokensSupportingFeeOnTransferTokensswapExactETHForTokensSupportingFeeOnTransferTokensswapExactTokensForETHSupportingFeeOnTransferTokensDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
626,p.org sdk v3 reference interfaces CommonAddLiquidityOptions#token0permit,"p.org sdk v3 reference interfaces CommonAddLiquidityOptions#token0permit.    CommonAddLiquidityOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesCommonAddLiquidityOptionsHelpful?On this pageCommonAddLiquidityOptions@uniswap/v3-sdk / Exports / CommonAddLiquidityOptionsInterface: CommonAddLiquidityOptionsOptions for producing the calldata to add liquidity.Table of contents‚ÄãProperties‚ÄãdeadlineslippageTolerancetoken0Permittoken1PermituseNativeProperties‚Äãdeadline‚Äã‚Ä¢ deadline: BigintIshWhen the transaction expires, in epoch seconds.Defined in‚ÄãnonfungiblePositionManager.ts:56slippageTolerance‚Äã‚Ä¢ slippageTolerance: PercentHow much the pool price is allowed to move.Defined in‚ÄãnonfungiblePositionManager.ts:51token0Permit‚Äã‚Ä¢ Optional token0Permit: PermitOptionsThe optional permit parameters for spending token0Defined in‚ÄãnonfungiblePositionManager.ts:66token1Permit‚Äã‚Ä¢ Optional token1Permit: PermitOptionsThe optional permit parameters for spending token1Defined in‚ÄãnonfungiblePositionManager.ts:71useNative‚Äã‚Ä¢ Optional useNative: NativeCurrencyWhether to spend ether. If true, one of the pool tokens must be WETH, by default falseDefined in‚ÄãnonfungiblePositionManager.ts:61Helpful?PreviousCollectOptionsNextFeeOptionsTable of contentsPropertiesPropertiesdeadlineslippageTolerancetoken0Permittoken1PermituseNativeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
627,p.org sdk v3 reference classes NoTickDataProvider#gettick,"p.org sdk v3 reference classes NoTickDataProvider#gettick.    NoTickDataProvider | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesNoTickDataProviderHelpful?On this pageNoTickDataProvider@uniswap/v3-sdk / Exports / NoTickDataProviderClass: NoTickDataProviderThis tick data provider does not know how to fetch any tick data. It throws whenever it is required. Useful if you do not need to load tick data for your use case.Implements‚ÄãTickDataProviderTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãERROR_MESSAGEMethods‚ÄãgetTicknextInitializedTickWithinOneWordConstructors‚Äãconstructor‚Äã‚Ä¢ new NoTickDataProvider()Properties‚ÄãERROR_MESSAGE‚Äã‚ñ™ Static Private ERROR_MESSAGE: string = 'No tick data provider was given'Defined in‚Äãentities/tickDataProvider.ts:27Methods‚ÄãgetTick‚Äã‚ñ∏ getTick(_tick): Promise<{ liquidityNet: BigintIsh }>Return information corresponding to a specific tickParameters‚ÄãNameTypeDescription_ticknumberthe tick to loadReturns‚ÄãPromise<{ liquidityNet: BigintIsh }>Implementation of‚ÄãTickDataProvider.getTickDefined in‚Äãentities/tickDataProvider.ts:28nextInitializedTickWithinOneWord‚Äã‚ñ∏ nextInitializedTickWithinOneWord(_tick, _lte, _tickSpacing): Promise<[number, boolean]>Return the next tick that is initialized within a single wordParameters‚ÄãNameTypeDescription_ticknumberThe current tick_ltebooleanWhether the next tick should be lte the current tick_tickSpacingnumberThe tick spacing of the poolReturns‚ÄãPromise<[number, boolean]>Implementation of‚ÄãTickDataProvider.nextInitializedTickWithinOneWordDefined in‚Äãentities/tickDataProvider.ts:32Helpful?PreviousMulticallNextNonfungiblePositionManagerImplementsTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesERROR_MESSAGEMethodsgetTicknextInitializedTickWithinOneWordDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
628,p.org sdk core reference modules.md,p.org sdk core reference modules.md. 
629,p.org sdk core reference classes CurrencyAmount#greaterthan,"p.org sdk core reference classes CurrencyAmount#greaterthan.    CurrencyAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesCurrencyAmountHelpful?On this pageCurrencyAmount@uniswap/sdk-core / Exports / CurrencyAmountClass: CurrencyAmount<T>Type parameters‚ÄãNameTypeTextends CurrencyHierarchy‚ÄãFraction‚Ü≥ CurrencyAmountTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãcurrencydecimalScaledenominatornumeratorAccessors‚ÄãasFractionquotientremainderwrappedMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new CurrencyAmount<T>(currency, numerator, denominator?)Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypecurrencyTnumeratorBigintIshdenominator?BigintIshOverrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/currencyAmount.ts:40Properties‚Äãcurrency‚Äã‚Ä¢ Readonly currency: TDefined in‚Äãentities/fractions/currencyAmount.ts:14decimalScale‚Äã‚Ä¢ Readonly decimalScale: defaultDefined in‚Äãentities/fractions/currencyAmount.ts:15denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47wrapped‚Äã‚Ä¢ get wrapped(): CurrencyAmount<Token>Returns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/fractions/currencyAmount.ts:91Methods‚Äãadd‚Äã‚ñ∏ add(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.addDefined in‚Äãentities/fractions/currencyAmount.ts:47divide‚Äã‚ñ∏ divide(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/currencyAmount.ts:64equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/currencyAmount.ts:59subtract‚Äã‚ñ∏ subtract(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/currencyAmount.ts:53toExact‚Äã‚ñ∏ toExact(format?): stringParameters‚ÄãNameTypeformatobjectReturns‚ÄãstringDefined in‚Äãentities/fractions/currencyAmount.ts:86toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformat?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/currencyAmount.ts:77toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/currencyAmount.ts:69fromFractionalAmount‚Äã‚ñ∏ Static fromFractionalAmount<T>(currency, numerator, denominator): CurrencyAmount<T>Construct a currency amount with a denominator that is not equal to 1Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currencynumeratorBigintIshthe numerator of the fractional token amountdenominatorBigintIshthe denominator of the fractional token amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:32fromRawAmount‚Äã‚ñ∏ Static fromRawAmount<T>(currency, rawAmount): CurrencyAmount<T>Returns a new currency amount instance from the unitless amount of token, i.e. the raw amountType parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currency in the amountrawAmountBigintIshthe raw token or ether amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:22Helpful?PreviousOverviewNextEtherType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiescurrencydecimalScaledenominatornumeratorAccessorsasFractionquotientremainderwrappedMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
630,p.org contracts v1 reference factory,p.org contracts v1 reference factory.    Factory | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 ProtocolOverviewGuidesConnect to UniswapPool LiquidityTrade TokensCustom LinkingIframe IntegrationToken ListingTechnical ReferenceFactoryExchangeInterfacesüè†V1 ProtocolTechnical ReferenceFactoryHelpful?On this pageinitializeFactoryParameterDescriptiontemplateEthereum address of exchange templateSmart Contract‚ÄãinitializeFactory(template: address)CopyWeb3‚ÄãfactoryContract.methods.initializeFactory(template).send()CopycreateExchangeParameterTypeDescriptiontokenaddressEthereum address of an ERC20 tokenReturnsaddressEthereum address of a Uniswap exchangeSmart Contract‚ÄãcreateExchange(token: address): addressCopyWeb3‚ÄãfactoryContract.methods.createExchange(token).send()CopygetExchangeParameterTypeDescriptiontokenaddressEthereum address of an ERC20 tokenReturnsaddressEthereum address of a Uniswap exchangeSmart Contract‚Äã@constantgetExchange(token: address): addressCopyWeb3‚ÄãfactoryContract.methods.getExchange(token).call()CopygetTokenParameterTypeDescriptionexchangeaddressEthereum address of a Uniswap exchangeReturnsaddressEthereum address of an ERC20 tokenSmart Contract‚Äã@constantgetToken(exchange: address): addressCopyWeb3‚ÄãfactoryContract.methods.getToken(exchange).call()CopygetTokenWithIdParameterTypeDescriptiontoken_iduint256Uniswap ID for an ERC20 tokenReturnsaddressEthereum address of an ERC20 tokenSmart Contract‚Äã@constantgetTokenWithId(token_id: uint256): addressCopyWeb3‚ÄãfactoryContract.methods.getTokenWithId(token_id).call()CopyEdit this pageHelpful?PreviousToken ListingNextExchangeSmart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3Smart ContractWeb3DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
631,p.org sdk v3 guides trading,"p.org sdk v3 guides trading.    Executing a Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKGuidesExecuting a TradeHelpful?On this pageExecuting a TradeIntroduction‚ÄãThis guide will build off our quoting guide and show how to use a quote to construct and execute a trade on the Uniswap V3 protocol. It is based on the Trading code example, found in the Uniswap code examples repository. To run this example, check out the guide's README and follow the setup instructions.infoIf you need a briefer on the SDK and to learn more about how these guides connect to the examples repository, please visit our background page!In this example we will trade between two ERC20 tokens: WETH and USDC. The tokens, amount of input token, and the fee level can be configured as inputs.The guide will cover:Constructing a route from pool informationConstructing an unchecked tradeExecuting a tradeAt the end of the guide, we should be able to create and execute a trade between any two ERC20 tokens using the example's included UI.noteIncluded in the example application is functionality to wrap/unwrap ETH as needed to fund the example WETH to USDC swap directly from an ETH balance.For this guide, the following Uniswap packages are used:@uniswap/v3-sdk@uniswap/sdk-coreThe core code of this guide can be found in trading.tsConstructing a route from pool information‚ÄãTo construct our trade, we will first create an model instance of a Pool. We will first extract the needed metadata from the relevant pool contract. Metadata includes both constant information about the pool as well as information about its current state stored in its first slot:Fetching pool metadataloading...CopyView on GithubUsing this metadata along with our inputs, we will then construct a Pool:Constructing a Poolloading...CopyView on GithubWith this Pool, we can now construct a route to use in our trade. We will reuse our previous quoting code to calculate the output amount we expect from our trade:Constructing a Routeloading...CopyView on GithubConstructing an unchecked trade‚ÄãOnce we have constructed the route object, we now need to obtain a quote for the given inputAmount of the example:Getting a quoteloading...CopyView on GithubAs shown below, the quote is obtained using the v3-sdk's SwapQuoter, in contrast to the previous quoting guide, where we directly accessed the smart contact:Fetching a quote using the v3-sdkloading...CopyView on GithubThe SwapQuoter's quoteCallParameters function, gives us the calldata needed to make the call to the Quoter, and we then decode the returned quote:Getting a quote using the v3-sdkloading...CopyView on GithubWith the quote and the route, we can now construct an unchecked trade using the route in addition to the output amount from a quote based on our input:Creating a Tradeloading...CopyView on GithubThis example uses an exact input trade, but we can also construct a trade using exact output assuming we adapt our quoting code accordingly.Executing a trade‚ÄãOnce we have created a trade, we can now execute this trade with our provider. First, we must give the SwapRouter approval to spend our tokens for us:Approve SwapRouter to spend our tokensloading...CopyView on GithubThen, we set our options that define how much time and slippage can occur in our execution as well as the address to use for our wallet:Constructing SwapOptionsloading...CopyView on GithubNext, we use the Uniswap SwapRouter to get the associated call parameters for our trade and options:Getting call parametersloading...CopyView on GithubFinally, we can construct a transaction from the method parameters and send the transaction:Sending a transactionloading...CopyView on GithubNext Steps‚ÄãThe resulting example allows for trading between any two ERC20 tokens, but this can be suboptimal for the best pricing and fees. To achieve the best possible price, we use the Uniswap auto router to route through pools to get an optimal cost. Our routing guide will show you how to use this router and execute optimal swaps.Helpful?PreviousGetting a QuoteNextRouting a SwapIntroductionConstructing a route from pool informationConstructing an unchecked tradeExecuting a tradeNext StepsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
632,p.org sdk v3 reference classes NoTickDataProvider,"p.org sdk v3 reference classes NoTickDataProvider.    NoTickDataProvider | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesNoTickDataProviderHelpful?On this pageNoTickDataProvider@uniswap/v3-sdk / Exports / NoTickDataProviderClass: NoTickDataProviderThis tick data provider does not know how to fetch any tick data. It throws whenever it is required. Useful if you do not need to load tick data for your use case.Implements‚ÄãTickDataProviderTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãERROR_MESSAGEMethods‚ÄãgetTicknextInitializedTickWithinOneWordConstructors‚Äãconstructor‚Äã‚Ä¢ new NoTickDataProvider()Properties‚ÄãERROR_MESSAGE‚Äã‚ñ™ Static Private ERROR_MESSAGE: string = 'No tick data provider was given'Defined in‚Äãentities/tickDataProvider.ts:27Methods‚ÄãgetTick‚Äã‚ñ∏ getTick(_tick): Promise<{ liquidityNet: BigintIsh }>Return information corresponding to a specific tickParameters‚ÄãNameTypeDescription_ticknumberthe tick to loadReturns‚ÄãPromise<{ liquidityNet: BigintIsh }>Implementation of‚ÄãTickDataProvider.getTickDefined in‚Äãentities/tickDataProvider.ts:28nextInitializedTickWithinOneWord‚Äã‚ñ∏ nextInitializedTickWithinOneWord(_tick, _lte, _tickSpacing): Promise<[number, boolean]>Return the next tick that is initialized within a single wordParameters‚ÄãNameTypeDescription_ticknumberThe current tick_ltebooleanWhether the next tick should be lte the current tick_tickSpacingnumberThe tick spacing of the poolReturns‚ÄãPromise<[number, boolean]>Implementation of‚ÄãTickDataProvider.nextInitializedTickWithinOneWordDefined in‚Äãentities/tickDataProvider.ts:32Helpful?PreviousMulticallNextNonfungiblePositionManagerImplementsTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesERROR_MESSAGEMethodsgetTicknextInitializedTickWithinOneWordDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
633,p.org sdk v3 reference classes Pool#chainid,"p.org sdk v3 reference classes Pool#chainid.    Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPoolHelpful?On this pagePool@uniswap/v3-sdk / Exports / PoolClass: PoolRepresents a V3 poolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1Accessors‚ÄãchainIdtickSpacingtoken0Pricetoken1PriceMethods‚ÄãgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressConstructors‚Äãconstructor‚Äã‚Ä¢ new Pool(tokenA, tokenB, fee, sqrtRatioX96, liquidity, tickCurrent, ticks?)Construct a poolParameters‚ÄãNameTypeDefault valueDescriptiontokenATokenundefinedOne of the tokens in the pooltokenBTokenundefinedThe other token in the poolfeeFeeAmountundefinedThe fee in hundredths of a bips of the input amount of every swap that is collected by the poolsqrtRatioX96BigintIshundefinedThe sqrt of the current ratio of amounts of token1 to token0liquidityBigintIshundefinedThe current value of in range liquiditytickCurrentnumberundefinedThe current tick of the poolticksTickDataProvider | (Tick | TickConstructorArgs)[]NO_TICK_DATA_PROVIDER_DEFAULTThe current state of the pool ticks or a data provider that can return tick dataDefined in‚Äãentities/pool.ts:70Properties‚Äã_token0Price‚Äã‚Ä¢ Private Optional _token0Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:41_token1Price‚Äã‚Ä¢ Private Optional _token1Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:42fee‚Äã‚Ä¢ Readonly fee: FeeAmountDefined in‚Äãentities/pool.ts:35liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/pool.ts:37sqrtRatioX96‚Äã‚Ä¢ Readonly sqrtRatioX96: defaultDefined in‚Äãentities/pool.ts:36tickCurrent‚Äã‚Ä¢ Readonly tickCurrent: numberDefined in‚Äãentities/pool.ts:38tickDataProvider‚Äã‚Ä¢ Readonly tickDataProvider: TickDataProviderDefined in‚Äãentities/pool.ts:39token0‚Äã‚Ä¢ Readonly token0: TokenDefined in‚Äãentities/pool.ts:33token1‚Äã‚Ä¢ Readonly token1: TokenDefined in‚Äãentities/pool.ts:34Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns the chain ID of the tokens in the pool.Returns‚ÄãnumberDefined in‚Äãentities/pool.ts:149tickSpacing‚Äã‚Ä¢ get tickSpacing(): numberReturns‚ÄãnumberDefined in‚Äãentities/pool.ts:317token0Price‚Äã‚Ä¢ get token0Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:109token1Price‚Äã‚Ä¢ get token1Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:124Methods‚ÄãgetInputAmount‚Äã‚ñ∏ getInputAmount(outputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given a desired output amount of a token, return the computed input amount and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptionoutputAmountCurrencyAmount<Token>the output amount for which to quote the input amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The input amount and the pool with updated stateDefined in‚Äãentities/pool.ts:185getOutputAmount‚Äã‚ñ∏ getOutputAmount(inputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given an input amount of a token, return the computed output amount, and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptioninputAmountCurrencyAmount<Token>The input amount for which to quote the output amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limitReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The output amount and the pool with updated stateDefined in‚Äãentities/pool.ts:159involvesToken‚Äã‚ñ∏ involvesToken(token): booleanReturns true if the token is either token0 or token1Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to checkReturns‚ÄãbooleanTrue if token is either token0 or tokenDefined in‚Äãentities/pool.ts:102priceOf‚Äã‚ñ∏ priceOf(token): Price<Token, Token>Return the price of the given token in terms of the other token in the pool.Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to return price ofReturns‚ÄãPrice<Token, Token>The price of the given token, in terms of the other.Defined in‚Äãentities/pool.ts:141swap‚Äã‚ñ∏ Private swap(zeroForOne, amountSpecified, sqrtPriceLimitX96?): Promise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>Executes a swapParameters‚ÄãNameTypeDescriptionzeroForOnebooleanWhether the amount in is token0 or token1amountSpecifieddefaultThe amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>amountCalculatedsqrtRatioX96liquiditytickCurrentDefined in‚Äãentities/pool.ts:215getAddress‚Äã‚ñ∏ Static getAddress(tokenA, tokenB, fee, initCodeHashManualOverride?, factoryAddressOverride?): stringParameters‚ÄãNameTypetokenATokentokenBTokenfeeFeeAmountinitCodeHashManualOverride?stringfactoryAddressOverride?stringReturns‚ÄãstringDefined in‚Äãentities/pool.ts:44Helpful?PreviousPaymentsNextPositionTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1AccessorschainIdtickSpacingtoken0Pricetoken1PriceMethodsgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
634,p.org sdk core reference classes Fraction,"p.org sdk core reference classes Fraction.    Fraction | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesFractionHelpful?On this pageFraction@uniswap/sdk-core / Exports / FractionClass: FractionHierarchy‚ÄãFraction‚Ü≥ CurrencyAmount‚Ü≥ Percent‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatornumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionConstructors‚Äãconstructor‚Äã‚Ä¢ new Fraction(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:107subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:138toSignificant‚Äã‚ñ∏ toSignificant(significantDigits, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:123tryParseFraction‚Äã‚ñ∏ Static Private tryParseFraction(fractionish): FractionParameters‚ÄãNameTypefractionishBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:33Helpful?PreviousEtherNextNativeCurrencyHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatornumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
635,p.org contracts v3 reference core UniswapV3PoolDeployer,"p.org contracts v3 reference core UniswapV3PoolDeployer.    UniswapV3PoolDeployer | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesLibrariesGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreUniswapV3PoolDeployerHelpful?On this pageUniswapV3PoolDeployerFunctions‚Äãdeploy‚Äã function deploy( address factory, address token0, address token1, uint24 fee, int24 tickSpacing ) internal returns (address pool)CopyDeploys a pool with the given parameters by transiently setting the parameters storage slot and then clearing it after deploying the pool.Parameters:‚ÄãNameTypeDescriptionfactoryaddressThe contract address of the Uniswap V3 factorytoken0addressThe first token of the pool by address sort ordertoken1addressThe second token of the pool by address sort orderfeeuint24The fee collected upon every swap in the pool, denominated in hundredths of a biptickSpacingint24The spacing between usable ticksEdit this pageHelpful?PreviousUniswapV3PoolNextIERC20MinimalFunctionsdeployDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
636,p.org sdk core reference classes Fraction#divide,"p.org sdk core reference classes Fraction#divide.    Fraction | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesFractionHelpful?On this pageFraction@uniswap/sdk-core / Exports / FractionClass: FractionHierarchy‚ÄãFraction‚Ü≥ CurrencyAmount‚Ü≥ Percent‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatornumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionConstructors‚Äãconstructor‚Äã‚Ä¢ new Fraction(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:107subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:138toSignificant‚Äã‚ñ∏ toSignificant(significantDigits, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:123tryParseFraction‚Äã‚ñ∏ Static Private tryParseFraction(fractionish): FractionParameters‚ÄãNameTypefractionishBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:33Helpful?PreviousEtherNextNativeCurrencyHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatornumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
637,p.org sdk v3 reference enums FeeAmount#high,"p.org sdk v3 reference enums FeeAmount#high.    FeeAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsFeeAmountinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceenumsFeeAmountHelpful?On this pageFeeAmount@uniswap/v3-sdk / Exports / FeeAmountEnumeration: FeeAmountThe default factory enabled fee amounts, denominated in hundredths of bips.Table of contents‚ÄãEnumeration Members‚ÄãHIGHLOWLOWESTMEDIUMEnumeration Members‚ÄãHIGH‚Äã‚Ä¢ HIGH = 10000Defined in‚Äãconstants.ts:14LOW‚Äã‚Ä¢ LOW = 500Defined in‚Äãconstants.ts:12LOWEST‚Äã‚Ä¢ LOWEST = 100Defined in‚Äãconstants.ts:11MEDIUM‚Äã‚Ä¢ MEDIUM = 3000Defined in‚Äãconstants.ts:13Helpful?PreviousTradeNextAllowedPermitArgumentsTable of contentsEnumeration MembersEnumeration MembersHIGHLOWLOWESTMEDIUMDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
638,p.org sdk v3 reference classes SqrtPriceMath#constructor,"p.org sdk v3 reference classes SqrtPriceMath#constructor.    SqrtPriceMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesSqrtPriceMathHelpful?On this pageSqrtPriceMath@uniswap/v3-sdk / Exports / SqrtPriceMathClass: SqrtPriceMathTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãgetAmount0DeltagetAmount1DeltagetNextSqrtPriceFromAmount0RoundingUpgetNextSqrtPriceFromAmount1RoundingDowngetNextSqrtPriceFromInputgetNextSqrtPriceFromOutputConstructors‚Äãconstructor‚Äã‚Ä¢ Private new SqrtPriceMath()Cannot be constructed.Defined in‚Äãutils/sqrtPriceMath.ts:23Methods‚ÄãgetAmount0Delta‚Äã‚ñ∏ Static getAmount0Delta(sqrtRatioAX96, sqrtRatioBX96, liquidity, roundUp): defaultParameters‚ÄãNameTypesqrtRatioAX96defaultsqrtRatioBX96defaultliquiditydefaultroundUpbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:25getAmount1Delta‚Äã‚ñ∏ Static getAmount1Delta(sqrtRatioAX96, sqrtRatioBX96, liquidity, roundUp): defaultParameters‚ÄãNameTypesqrtRatioAX96defaultsqrtRatioBX96defaultliquiditydefaultroundUpbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:38getNextSqrtPriceFromAmount0RoundingUp‚Äã‚ñ∏ Static Private getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96, liquidity, amount, add): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountdefaultaddbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:71getNextSqrtPriceFromAmount1RoundingDown‚Äã‚ñ∏ Static Private getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96, liquidity, amount, add): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountdefaultaddbooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:100getNextSqrtPriceFromInput‚Äã‚ñ∏ Static getNextSqrtPriceFromInput(sqrtPX96, liquidity, amountIn, zeroForOne): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountIndefaultzeroForOnebooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:48getNextSqrtPriceFromOutput‚Äã‚ñ∏ Static getNextSqrtPriceFromOutput(sqrtPX96, liquidity, amountOut, zeroForOne): defaultParameters‚ÄãNameTypesqrtPX96defaultliquiditydefaultamountOutdefaultzeroForOnebooleanReturns‚ÄãdefaultDefined in‚Äãutils/sqrtPriceMath.ts:57Helpful?PreviousSelfPermitNextStakerTable of contentsConstructorsMethodsConstructorsconstructorMethodsgetAmount0DeltagetAmount1DeltagetNextSqrtPriceFromAmount0RoundingUpgetNextSqrtPriceFromAmount1RoundingDowngetNextSqrtPriceFromInputgetNextSqrtPriceFromOutputDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
639,p.org sdk v3 reference modules.md#mostsignificantbit,p.org sdk v3 reference modules.md#mostsignificantbit. 
640,p.org sdk v3 reference classes Position#mintamounts,"p.org sdk v3 reference classes Position#mintamounts.    Position | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPositionHelpful?On this pagePosition@uniswap/v3-sdk / Exports / PositionClass: PositionRepresents a position on a Uniswap V3 PoolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessors‚Äãamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethods‚ÄãburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsConstructors‚Äãconstructor‚Äã‚Ä¢ new Position(__namedParameters)Constructs a position for a given pool with the given liquidityParameters‚ÄãNameType__namedParametersPositionConstructorArgsDefined in‚Äãentities/position.ts:40Properties‚Äã_mintAmounts‚Äã‚Ä¢ Private _mintAmounts: null | Readonly<{ amount0: default ; amount1: default }> = nullDefined in‚Äãentities/position.ts:31_token0Amount‚Äã‚Ä¢ Private _token0Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:29_token1Amount‚Äã‚Ä¢ Private _token1Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:30liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/position.ts:26pool‚Äã‚Ä¢ Readonly pool: PoolDefined in‚Äãentities/position.ts:23tickLower‚Äã‚Ä¢ Readonly tickLower: numberDefined in‚Äãentities/position.ts:24tickUpper‚Äã‚Ä¢ Readonly tickUpper: numberDefined in‚Äãentities/position.ts:25Accessors‚Äãamount0‚Äã‚Ä¢ get amount0(): CurrencyAmount<Token>Returns the amount of token0 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:68amount1‚Äã‚Ä¢ get amount1(): CurrencyAmount<Token>Returns the amount of token1 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:100mintAmounts‚Äã‚Ä¢ get mintAmounts(): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at the current price for the poolReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>Defined in‚Äãentities/position.ts:258token0PriceLower‚Äã‚Ä¢ get token0PriceLower(): Price<Token, Token>Returns the price of token0 at the lower tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:54token0PriceUpper‚Äã‚Ä¢ get token0PriceUpper(): Price<Token, Token>Returns the price of token0 at the upper tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:61Methods‚ÄãburnAmountsWithSlippage‚Äã‚ñ∏ burnAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercenttolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:213mintAmountsWithSlippage‚Äã‚ñ∏ mintAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to safely mint the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentTolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:157ratiosAfterSlippage‚Äã‚ñ∏ Private ratiosAfterSlippage(slippageTolerance): ObjectReturns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentageParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe amount by which the price can 'slip' before the transaction will revertReturns‚ÄãObjectThe sqrt ratios after slippageNameTypesqrtRatioX96LowerdefaultsqrtRatioX96UpperdefaultDefined in‚Äãentities/position.ts:134fromAmount0‚Äã‚ñ∏ Static fromAmount0(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited amount of token1Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:354fromAmount1‚Äã‚ñ∏ Static fromAmount1(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited amount of token0Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumberReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:378fromAmounts‚Äã‚ñ∏ Static fromAmounts(__namedParameters): PositionComputes the maximum amount of liquidity received for a given amount of token0, token1, and the prices at the tick boundaries.Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe amount of liquidity for the positionDefined in‚Äãentities/position.ts:312Helpful?PreviousPoolNextPositionLibraryTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessorsamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethodsburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
641,p.org sdk v3 reference classes TickMath#max sqrt ratio,"p.org sdk v3 reference classes TickMath#max sqrt ratio.    TickMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickMathHelpful?On this pageTickMath@uniswap/v3-sdk / Exports / TickMathClass: TickMathTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãMAX_SQRT_RATIOMAX_TICKMIN_SQRT_RATIOMIN_TICKMethods‚ÄãgetSqrtRatioAtTickgetTickAtSqrtRatioConstructors‚Äãconstructor‚Äã‚Ä¢ Private new TickMath()Cannot be constructed.Defined in‚Äãutils/tickMath.ts:17Properties‚ÄãMAX_SQRT_RATIO‚Äã‚ñ™ Static MAX_SQRT_RATIO: defaultThe sqrt ratio corresponding to the maximum tick that could be used on any pool.Defined in‚Äãutils/tickMath.ts:35MAX_TICK‚Äã‚ñ™ Static MAX_TICK: number = -TickMath.MIN_TICKThe maximum tick that can be used on any pool.Defined in‚Äãutils/tickMath.ts:26MIN_SQRT_RATIO‚Äã‚ñ™ Static MIN_SQRT_RATIO: defaultThe sqrt ratio corresponding to the minimum tick that could be used on any pool.Defined in‚Äãutils/tickMath.ts:31MIN_TICK‚Äã‚ñ™ Static MIN_TICK: number = -887272The minimum tick that can be used on any pool.Defined in‚Äãutils/tickMath.ts:22Methods‚ÄãgetSqrtRatioAtTick‚Äã‚ñ∏ Static getSqrtRatioAtTick(tick): defaultReturns the sqrt ratio as a Q64.96 for the given tick. The sqrt ratio is computed as sqrt(1.0001)^tickParameters‚ÄãNameTypeDescriptionticknumberthe tick for which to compute the sqrt ratioReturns‚ÄãdefaultDefined in‚Äãutils/tickMath.ts:41getTickAtSqrtRatio‚Äã‚ñ∏ Static getTickAtSqrtRatio(sqrtRatioX96): numberReturns the tick corresponding to a given sqrt ratio, s.t. #getSqrtRatioAtTick(tick) <= sqrtRatioX96 and #getSqrtRatioAtTick(tick + 1) > sqrtRatioX96Parameters‚ÄãNameTypeDescriptionsqrtRatioX96defaultthe sqrt ratio as a Q64.96 for which to compute the tickReturns‚ÄãnumberDefined in‚Äãutils/tickMath.ts:82Helpful?PreviousTickListDataProviderNextTradeTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesMAX_SQRT_RATIOMAX_TICKMIN_SQRT_RATIOMIN_TICKMethodsgetSqrtRatioAtTickgetTickAtSqrtRatioDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
642,p.org sdk core reference classes CurrencyAmount#tosignificant,"p.org sdk core reference classes CurrencyAmount#tosignificant.    CurrencyAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesCurrencyAmountHelpful?On this pageCurrencyAmount@uniswap/sdk-core / Exports / CurrencyAmountClass: CurrencyAmount<T>Type parameters‚ÄãNameTypeTextends CurrencyHierarchy‚ÄãFraction‚Ü≥ CurrencyAmountTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãcurrencydecimalScaledenominatornumeratorAccessors‚ÄãasFractionquotientremainderwrappedMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new CurrencyAmount<T>(currency, numerator, denominator?)Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypecurrencyTnumeratorBigintIshdenominator?BigintIshOverrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/currencyAmount.ts:40Properties‚Äãcurrency‚Äã‚Ä¢ Readonly currency: TDefined in‚Äãentities/fractions/currencyAmount.ts:14decimalScale‚Äã‚Ä¢ Readonly decimalScale: defaultDefined in‚Äãentities/fractions/currencyAmount.ts:15denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47wrapped‚Äã‚Ä¢ get wrapped(): CurrencyAmount<Token>Returns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/fractions/currencyAmount.ts:91Methods‚Äãadd‚Äã‚ñ∏ add(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.addDefined in‚Äãentities/fractions/currencyAmount.ts:47divide‚Äã‚ñ∏ divide(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/currencyAmount.ts:64equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/currencyAmount.ts:59subtract‚Äã‚ñ∏ subtract(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/currencyAmount.ts:53toExact‚Äã‚ñ∏ toExact(format?): stringParameters‚ÄãNameTypeformatobjectReturns‚ÄãstringDefined in‚Äãentities/fractions/currencyAmount.ts:86toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformat?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/currencyAmount.ts:77toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/currencyAmount.ts:69fromFractionalAmount‚Äã‚ñ∏ Static fromFractionalAmount<T>(currency, numerator, denominator): CurrencyAmount<T>Construct a currency amount with a denominator that is not equal to 1Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currencynumeratorBigintIshthe numerator of the fractional token amountdenominatorBigintIshthe denominator of the fractional token amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:32fromRawAmount‚Äã‚ñ∏ Static fromRawAmount<T>(currency, rawAmount): CurrencyAmount<T>Returns a new currency amount instance from the unitless amount of token, i.e. the raw amountType parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currency in the amountrawAmountBigintIshthe raw token or ether amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:22Helpful?PreviousOverviewNextEtherType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiescurrencydecimalScaledenominatornumeratorAccessorsasFractionquotientremainderwrappedMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
643,p.org contracts v2 reference smart contracts router 01#getamountin,"p.org contracts v2 reference smart contracts router 01#getamountin.    Router01 | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsRouter01Helpful?On this pageRouter01UniswapV2Router01 should not be used any longer, because of the discovery of a low severity bug and the fact that some methods do not work with tokens that take fees on transfer. The current recommendation is to use UniswapV2Router02.CodeUniswapV2Router01.solAddressUniswapV2Router01 is deployed at 0xf164fC0Ec4E93095b804a4795bBe1e041497b92a on the Ethereum mainnet, and the Ropsten, Rinkeby, G√∂rli, and Kovan testnets. It was built from commit 2ad7da2.Read-Only Functionsfactory‚Äãfunction factory() external pure returns (address);CopyReturns factory address.WETH‚Äãfunction WETH() external pure returns (address);CopyReturns the canonical WETH address on the Ethereum mainnet, or the Ropsten, Rinkeby, G√∂rli, or Kovan testnets.State-Changing FunctionsaddLiquidity‚Äãfunction addLiquidity( address tokenA, address tokenB, uint amountADesired, uint amountBDesired, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB, uint liquidity);CopyAdds liquidity to an ERC-20‚áÑERC-20 pool.To cover all possible scenarios, msg.sender should have already given the router an allowance of at least amountADesired/amountBDesired on tokenA/tokenB.Always adds assets at the ideal ratio, according to the price when the transaction is executed.If a pool for the passed tokens does not exists, one is created automatically, and exactly amountADesired/amountBDesired tokens are added.NameTypetokenAaddressA pool token.tokenBaddressA pool token.amountADesireduintThe amount of tokenA to add as liquidity if the B/A price is <= amountBDesired/amountADesired (A depreciates).amountBDesireduintThe amount of tokenB to add as liquidity if the A/B price is <= amountADesired/amountBDesired (B depreciates).amountAMinuintBounds the extent to which the B/A price can go up before the transaction reverts. Must be <= amountADesired.amountBMinuintBounds the extent to which the A/B price can go up before the transaction reverts. Must be <= amountBDesired.toaddressRecipient of the liquidity tokens.deadlineuintUnix timestamp after which the transaction will revert.amountAuintThe amount of tokenA sent to the pool.amountBuintThe amount of tokenB sent to the pool.liquidityuintThe amount of liquidity tokens minted.addLiquidityETH‚Äãfunction addLiquidityETH( address token, uint amountTokenDesired, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external payable returns (uint amountToken, uint amountETH, uint liquidity);CopyAdds liquidity to an ERC-20‚áÑWETH pool with ETH.To cover all possible scenarios, msg.sender should have already given the router an allowance of at least amountTokenDesired on token.Always adds assets at the ideal ratio, according to the price when the transaction is executed.msg.value is treated as a amountETHDesired.Leftover ETH, if any, is returned to msg.sender.If a pool for the passed token and WETH does not exists, one is created automatically, and exactly amountTokenDesired/msg.value tokens are added.NameTypetokenaddressA pool token.amountTokenDesireduintThe amount of token to add as liquidity if the WETH/token price is <= msg.value/amountTokenDesired (token depreciates).msg.value (amountETHDesired)uintThe amount of ETH to add as liquidity if the token/WETH price is <= amountTokenDesired/msg.value (WETH depreciates).amountTokenMinuintBounds the extent to which the WETH/token price can go up before the transaction reverts. Must be <= amountTokenDesired.amountETHMinuintBounds the extent to which the token/WETH price can go up before the transaction reverts. Must be <= msg.value.toaddressRecipient of the liquidity tokens.deadlineuintUnix timestamp after which the transaction will revert.amountTokenuintThe amount of token sent to the pool.amountETHuintThe amount of ETH converted to WETH and sent to the pool.liquidityuintThe amount of liquidity tokens minted.removeLiquidity‚Äãfunction removeLiquidity( address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline) external returns (uint amountA, uint amountB);CopyRemoves liquidity from an ERC-20‚áÑERC-20 pool.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenAaddressA pool token.tokenBaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountAMinuintThe minimum amount of tokenA that must be received for the transaction not to revert.amountBMinuintThe minimum amount of tokenB that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountAuintThe amount of tokenA received.amountBuintThe amount of tokenB received.removeLiquidityETH‚Äãfunction removeLiquidityETH( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external returns (uint amountToken, uint amountETH);CopyRemoves liquidity from an ERC-20‚áÑWETH pool and receive ETH.msg.sender should have already given the router an allowance of at least liquidity on the pool.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.amountTokenuintThe amount of token received.amountETHuintThe amount of ETH received.removeLiquidityWithPermit‚Äãfunction removeLiquidityWithPermit( address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountA, uint amountB);CopyRemoves liquidity from an ERC-20‚áÑERC-20 pool without pre-approval, thanks to permit.NameTypetokenAaddressA pool token.tokenBaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountAMinuintThe minimum amount of tokenA that must be received for the transaction not to revert.amountBMinuintThe minimum amount of tokenB that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountAuintThe amount of tokenA received.amountBuintThe amount of tokenB received.removeLiquidityETHWithPermit‚Äãfunction removeLiquidityETHWithPermit( address token, uint liquidity, uint amountTokenMin, uint amountETHMin, address to, uint deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) external returns (uint amountToken, uint amountETH);CopyRemoves liquidity from an ERC-20‚áÑWETTH pool and receive ETH without pre-approval, thanks to permit.NameTypetokenaddressA pool token.liquidityuintThe amount of liquidity tokens to remove.amountTokenMinuintThe minimum amount of token that must be received for the transaction not to revert.amountETHMinuintThe minimum amount of ETH that must be received for the transaction not to revert.toaddressRecipient of the underlying assets.deadlineuintUnix timestamp after which the transaction will revert.approveMaxboolWhether or not the approval amount in the signature is for liquidity or uint(-1).vuint8The v component of the permit signature.rbytes32The r component of the permit signature.sbytes32The s component of the permit signature.amountTokenuintThe amount of token received.amountETHuintThe amount of ETH received.swapExactTokensForTokens‚Äãfunction swapExactTokensForTokens( uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopySwaps an exact amount of input tokens for as many output tokens as possible, along the route determined by the path. The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountIn on the input token.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapTokensForExactTokens‚Äãfunction swapTokensForExactTokens( uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopyReceive an exact amount of output tokens for as few input tokens as possible, along the route determined by the path. The first element of path is the input token, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountInMax on the input token.NameTypeamountOutuintThe amount of output tokens to receive.amountInMaxuintThe maximum amount of input tokens that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactETHForTokens‚Äãfunction swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts);CopySwaps an exact amount of ETH for as many output tokens as possible, along the route determined by the path. The first element of path must be WETH, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).NameTypemsg.value (amountIn)uintThe amount of ETH to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapTokensForExactETH‚Äãfunction swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopyReceive an exact amount of ETH for as few input tokens as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).msg.sender should have already given the router an allowance of at least amountInMax on the input token.If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountOutuintThe amount of ETH to receive.amountInMaxuintThe maximum amount of input tokens that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of ETH.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapExactTokensForETH‚Äãfunction swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts);CopySwaps an exact amount of tokens for as much ETH as possible, along the route determined by the path. The first element of path is the input token, the last must be WETH, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).If the to address is a smart contract, it must have the ability to receive ETH.NameTypeamountInuintThe amount of input tokens to send.amountOutMinuintThe minimum amount of output tokens that must be received for the transaction not to revert.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the ETH.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.swapETHForExactTokens‚Äãfunction swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline) external payable returns (uint[] memory amounts);CopyReceive an exact amount of tokens for as little ETH as possible, along the route determined by the path. The first element of path must be WETH, the last is the output token and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does not exist).Leftover ETH, if any, is returned to msg.sender.NameTypeamountOutuintThe amount of tokens to receive.msg.value (amountInMax)uintThe maximum amount of ETH that can be required before the transaction reverts.pathaddress[] calldataAn array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.toaddressRecipient of the output tokens.deadlineuintUnix timestamp after which the transaction will revert.amountsuint[] memoryThe input token amount and all subsequent output token amounts.quote‚ÄãSee quote.getAmountOut‚ÄãSee getAmountOut.getAmountIn‚ÄãThis function contains a low severity bug, do not use.getAmountsOut‚Äãfunction getAmountsOut(uint amountIn, address[] memory path) public view returns (uint[] memory amounts);CopySee getAmountsOut.getAmountsIn‚Äãfunction getAmountsIn(uint amountOut, address[] memory path) public view returns (uint[] memory amounts);CopySeegetAmountsIn.Interfaceimport '@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol';Copypragma solidity >=0.6.2;interface IUniswapV2Router01 { function factory() external pure returns (address); function WETH() external pure returns (address); function addLiquidity(  address tokenA,  address tokenB,  uint amountADesired,  uint amountBDesired,  uint amountAMin,  uint amountBMin,  address to,  uint deadline ) external returns (uint amountA, uint amountB, uint liquidity); function addLiquidityETH(  address token,  uint amountTokenDesired,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external payable returns (uint amountToken, uint amountETH, uint liquidity); function removeLiquidity(  address tokenA,  address tokenB,  uint liquidity,  uint amountAMin,  uint amountBMin,  address to,  uint deadline ) external returns (uint amountA, uint amountB); function removeLiquidityETH(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline ) external returns (uint amountToken, uint amountETH); function removeLiquidityWithPermit(  address tokenA,  address tokenB,  uint liquidity,  uint amountAMin,  uint amountBMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountA, uint amountB); function removeLiquidityETHWithPermit(  address token,  uint liquidity,  uint amountTokenMin,  uint amountETHMin,  address to,  uint deadline,  bool approveMax, uint8 v, bytes32 r, bytes32 s ) external returns (uint amountToken, uint amountETH); function swapExactTokensForTokens(  uint amountIn,  uint amountOutMin,  address[] calldata path,  address to,  uint deadline ) external returns (uint[] memory amounts); function swapTokensForExactTokens(  uint amountOut,  uint amountInMax,  address[] calldata path,  address to,  uint deadline ) external returns (uint[] memory amounts); function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)  external  payable  returns (uint[] memory amounts); function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)  external  returns (uint[] memory amounts); function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)  external  returns (uint[] memory amounts); function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)  external  payable  returns (uint[] memory amounts); function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB); function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut); function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn); function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts); function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);}CopyABIimport IUniswapV2Router01 from '@uniswap/v2-periphery/build/IUniswapV2Router01.json'Copyhttps://unpkg.com/@uniswap/v2-periphery@1.0.0-beta.0/build/IUniswapV2Router01.jsonEdit this pageHelpful?PreviousLibraryNextRouter02factoryWETHaddLiquidityaddLiquidityETHremoveLiquidityremoveLiquidityETHremoveLiquidityWithPermitremoveLiquidityETHWithPermitswapExactTokensForTokensswapTokensForExactTokensswapExactETHForTokensswapTokensForExactETHswapExactTokensForETHswapETHForExactTokensquotegetAmountOutgetAmountIngetAmountsOutgetAmountsInDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
644,p.org sdk core reference classes CurrencyAmount#decimalscale,"p.org sdk core reference classes CurrencyAmount#decimalscale.    CurrencyAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesCurrencyAmountHelpful?On this pageCurrencyAmount@uniswap/sdk-core / Exports / CurrencyAmountClass: CurrencyAmount<T>Type parameters‚ÄãNameTypeTextends CurrencyHierarchy‚ÄãFraction‚Ü≥ CurrencyAmountTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãcurrencydecimalScaledenominatornumeratorAccessors‚ÄãasFractionquotientremainderwrappedMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new CurrencyAmount<T>(currency, numerator, denominator?)Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypecurrencyTnumeratorBigintIshdenominator?BigintIshOverrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/currencyAmount.ts:40Properties‚Äãcurrency‚Äã‚Ä¢ Readonly currency: TDefined in‚Äãentities/fractions/currencyAmount.ts:14decimalScale‚Äã‚Ä¢ Readonly decimalScale: defaultDefined in‚Äãentities/fractions/currencyAmount.ts:15denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47wrapped‚Äã‚Ä¢ get wrapped(): CurrencyAmount<Token>Returns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/fractions/currencyAmount.ts:91Methods‚Äãadd‚Äã‚ñ∏ add(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.addDefined in‚Äãentities/fractions/currencyAmount.ts:47divide‚Äã‚ñ∏ divide(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/currencyAmount.ts:64equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/currencyAmount.ts:59subtract‚Äã‚ñ∏ subtract(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/currencyAmount.ts:53toExact‚Äã‚ñ∏ toExact(format?): stringParameters‚ÄãNameTypeformatobjectReturns‚ÄãstringDefined in‚Äãentities/fractions/currencyAmount.ts:86toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformat?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/currencyAmount.ts:77toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/currencyAmount.ts:69fromFractionalAmount‚Äã‚ñ∏ Static fromFractionalAmount<T>(currency, numerator, denominator): CurrencyAmount<T>Construct a currency amount with a denominator that is not equal to 1Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currencynumeratorBigintIshthe numerator of the fractional token amountdenominatorBigintIshthe denominator of the fractional token amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:32fromRawAmount‚Äã‚ñ∏ Static fromRawAmount<T>(currency, rawAmount): CurrencyAmount<T>Returns a new currency amount instance from the unitless amount of token, i.e. the raw amountType parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currency in the amountrawAmountBigintIshthe raw token or ether amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:22Helpful?PreviousOverviewNextEtherType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiescurrencydecimalScaledenominatornumeratorAccessorsasFractionquotientremainderwrappedMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
645,p.org sdk v3 reference classes Position#tickupper,"p.org sdk v3 reference classes Position#tickupper.    Position | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPositionHelpful?On this pagePosition@uniswap/v3-sdk / Exports / PositionClass: PositionRepresents a position on a Uniswap V3 PoolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessors‚Äãamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethods‚ÄãburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsConstructors‚Äãconstructor‚Äã‚Ä¢ new Position(__namedParameters)Constructs a position for a given pool with the given liquidityParameters‚ÄãNameType__namedParametersPositionConstructorArgsDefined in‚Äãentities/position.ts:40Properties‚Äã_mintAmounts‚Äã‚Ä¢ Private _mintAmounts: null | Readonly<{ amount0: default ; amount1: default }> = nullDefined in‚Äãentities/position.ts:31_token0Amount‚Äã‚Ä¢ Private _token0Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:29_token1Amount‚Äã‚Ä¢ Private _token1Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:30liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/position.ts:26pool‚Äã‚Ä¢ Readonly pool: PoolDefined in‚Äãentities/position.ts:23tickLower‚Äã‚Ä¢ Readonly tickLower: numberDefined in‚Äãentities/position.ts:24tickUpper‚Äã‚Ä¢ Readonly tickUpper: numberDefined in‚Äãentities/position.ts:25Accessors‚Äãamount0‚Äã‚Ä¢ get amount0(): CurrencyAmount<Token>Returns the amount of token0 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:68amount1‚Äã‚Ä¢ get amount1(): CurrencyAmount<Token>Returns the amount of token1 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:100mintAmounts‚Äã‚Ä¢ get mintAmounts(): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at the current price for the poolReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>Defined in‚Äãentities/position.ts:258token0PriceLower‚Äã‚Ä¢ get token0PriceLower(): Price<Token, Token>Returns the price of token0 at the lower tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:54token0PriceUpper‚Äã‚Ä¢ get token0PriceUpper(): Price<Token, Token>Returns the price of token0 at the upper tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:61Methods‚ÄãburnAmountsWithSlippage‚Äã‚ñ∏ burnAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercenttolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:213mintAmountsWithSlippage‚Äã‚ñ∏ mintAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to safely mint the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentTolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:157ratiosAfterSlippage‚Äã‚ñ∏ Private ratiosAfterSlippage(slippageTolerance): ObjectReturns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentageParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe amount by which the price can 'slip' before the transaction will revertReturns‚ÄãObjectThe sqrt ratios after slippageNameTypesqrtRatioX96LowerdefaultsqrtRatioX96UpperdefaultDefined in‚Äãentities/position.ts:134fromAmount0‚Äã‚ñ∏ Static fromAmount0(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited amount of token1Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:354fromAmount1‚Äã‚ñ∏ Static fromAmount1(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited amount of token0Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumberReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:378fromAmounts‚Äã‚ñ∏ Static fromAmounts(__namedParameters): PositionComputes the maximum amount of liquidity received for a given amount of token0, token1, and the prices at the tick boundaries.Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe amount of liquidity for the positionDefined in‚Äãentities/position.ts:312Helpful?PreviousPoolNextPositionLibraryTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessorsamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethodsburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
646,p.org sdk web3 react guides switch chains,"p.org sdk web3 react guides switch chains.    Switching Chains | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactOverviewGuidesConnecting to WalletsSupported ConnectorsSwitching ChainsCore SDKV2 SDKV1 SDKüè†web3-reactGuidesSwitching ChainsHelpful?On this pageSwitching ChainsIntroduction‚ÄãThis guide will cover how to prompt a wallet that has connected to our dApp to switch chains using web3-react. It is based on the web3-react example, found in the Uniswap code examples repository. To run this example, check out the examples's README and follow the setup instructions.infoFor help on setting up web3-react and interacting with a MetaMask wallet, please visit our connecting to wallets page!The input parameters to this guide are the chains that we want our dApp to be able to connect to and their RPC URLs.At the end of the guide, we should be able to switch chains on the connected wallet.For this guide, the following web3-react packages are used:@web3-react/coreinfoThis guide uses web3-react version 8, which is a beta version.The core code of this guide can be found in connections.Switching Chains‚ÄãHaving setup our application to use web3-react and having built out the ability to connect and disconnect wallets, we can now move on to switching chains.Switching chains requires two parameters, the chainId we want to switch to, and the current connectionType:Defining the functionloading...CopyView on GithubGiven the ConnectionType, we can retrieve the actual connector:Retrieving the connectorloading...CopyView on GithubThen, depending on the ConnectionType, we determine how to switch chains. For the Network or WalletConnect cases, we call web3-react's activate function with the supplied chainId:Switching chains for Network and WalletConnectloading...CopyView on GithubThe rest of the connectors require us to build an AddEthereumChainParameter object and pass it to the web3-react's activate function:Switching chains the other Connectorsloading...CopyView on GithubThe metadata required to build AddEthereumChainParameter are defined in our constants file:Defining the chain parametersloading...CopyView on GithubNext steps‚ÄãKnow you know how to support web3-react's most common use cases! Stay tuned for follow up guides.Helpful?PreviousSupported ConnectorsNextOverviewIntroductionSwitching ChainsNext stepsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
647,p.org sdk core reference classes Fraction#add,"p.org sdk core reference classes Fraction#add.    Fraction | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesFractionHelpful?On this pageFraction@uniswap/sdk-core / Exports / FractionClass: FractionHierarchy‚ÄãFraction‚Ü≥ CurrencyAmount‚Ü≥ Percent‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatornumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionConstructors‚Äãconstructor‚Äã‚Ä¢ new Fraction(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:107subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:138toSignificant‚Äã‚ñ∏ toSignificant(significantDigits, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:123tryParseFraction‚Äã‚ñ∏ Static Private tryParseFraction(fractionish): FractionParameters‚ÄãNameTypefractionishBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:33Helpful?PreviousEtherNextNativeCurrencyHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatornumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
648,p.org sdk v3 reference classes Tick,p.org sdk v3 reference classes Tick.    Tick | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickHelpful?On this pageTick@uniswap/v3-sdk / Exports / TickClass: TickTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãindexliquidityGrossliquidityNetConstructors‚Äãconstructor‚Äã‚Ä¢ new Tick(__namedParameters)Parameters‚ÄãNameType__namedParametersTickConstructorArgsDefined in‚Äãentities/tick.ts:17Properties‚Äãindex‚Äã‚Ä¢ Readonly index: numberDefined in‚Äãentities/tick.ts:13liquidityGross‚Äã‚Ä¢ Readonly liquidityGross: defaultDefined in‚Äãentities/tick.ts:14liquidityNet‚Äã‚Ä¢ Readonly liquidityNet: defaultDefined in‚Äãentities/tick.ts:15Helpful?PreviousSwapRouterNextTickLibraryTable of contentsConstructorsPropertiesConstructorsconstructorPropertiesindexliquidityGrossliquidityNetDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
649,p.org concepts governance process,"p.org concepts governance process.    Process | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchWhat Is Uniswap?The Uniswap ProtocolProtocol ConceptsGovernanceOverviewProcessBeginners Guide to VotingGlossaryAdversarial CircumstancesChangelogResearchResourcesGlossaryüè†GovernanceProcessHelpful?On this pageProcessThis document is a living document which represents the current process guidelines for developing and advancing Uniswap Governance Proposals.Process‚ÄãSeveral governance venues are available to Uniswap governance, each serving its own particular purpose.gov.uniswap.orggov.uniswap.org is a Discourse-hosted forum for governance-related discussion. Community members must register for an account before sharing or liking posts. New members are required to enter 4 topics and read 15 posts over the course of 10 minutes before they are permitted to post themselves.SnapshotSnapshot is a simple voting interface that allows users to signal sentiment off-chain. Votes on snapshot are weighted by the number of UNI delegated to the address used to vote.Governance PortalThe formal governance portal can be accessed directly through the Uniswap app interface. Votes are delegated and cast through the portal.Below we outline a preliminary draft for the Uniswap governance process, detailing exactly where these venues fit in. These processes are subject to change according to feedback from the Uniswap community.Phase 1: Temperature Check ‚Äî Discourse/Snapshot‚ÄãThe purpose of the Temperature Check is to determine if there is sufficient will to make changes to the status quo.To create a Temperature Check:Ask a general, non-biased question to the community on gov.uniswap.org about a potential change (example: ""Should Uniswap governance add liquidity mining for XYZ token?""). Forum posts should be labeled as follows: ""Temperature Check - [Your Title Here]"". The forum post should include a link to the associated Snapshot poll.Voters use Snapshot to indicate their interest in bringing it forward to the next stage. Snapshot poll lengths should be set to 2 days.That's it! You've just started the process of gaining support for a proposal. At the end of the 2 days, a majority vote with a 25k UNI yes-vote threshold wins.If the Temperature check does not suggest a change from the status quo, the topic will be closed on the governance site. If the Temperature Check does suggest a change, proceed to Stage 2: Consensus Check.Phase 2: Consensus Check ‚Äî Discourse/Snapshot‚ÄãThe purpose of the Consensus Check is to establish formal discussion around a potential proposal.To create a Consensus Check:Use feedback from the Temperature Check post and create a new Snapshot poll which covers the options which have gained support. This poll can either be binary or multiple choice but you are required to include the option ""Make no change"" or its equivalent. Set the poll duration to 5 days.Create a new topic in the Proposal Discussion category on gov.uniswap.org titled ""Consensus Check ‚Äî [Your Title Here]"". This will alert the community that this topic has already passed Temperature Check. Any topics beginning with Consensus Check that have not passed Temperature Check will immediately be removed by moderators. Make sure that the discussion thread links to the new Snapshot poll and the Temperature Check thread.Reach out to your network to build support for the proposal. Discuss the proposal and actively solicit delegates to vote on it. Be willing to respond to questions on the Consensus Check topic. Share your view point, although try to remain as impartial as possible.At the end of 5 days, whichever option has the majority of votes wins, and can be included in a governance proposal for Stage 3. A 50k UNI yes-vote quorum is required for the Consensus Check to pass.If the option ""Make no change"" wins, the Consensus Check topic will be closed by the moderators.Phase 3: Governance Proposal ‚Äî Governance Portal‚ÄãPhase 3 ‚Äî Governance Proposal ‚Äî is the final step of the governance process. The proposal should be based on the winning outcome from the Consensus Check and can consist of one or multiple actions, up to a maximum of 10 actions per proposal.To create a Governance Proposal:Write the code for your proposal, which will be voted on through the Governance Portal. More resources can be found here . All proposed code should be audited by a professional auditor. This auditing process may be paid or reimbursed by the community treasury.Ensure that you have at least 2.5 million UNI delegated to your address in order to submit a proposal, or find someone who has enough UNI to meet the proposal threshold to propose on your behalf.Create a topic in the Proposal Discussion category on gov.uniswap.org titled ""Governance Proposal ‚Äî [Your Title Here]"" and link to any relevant Snapshot polls/discussion threads as well as the code audit report. Topics that begin with ""Governance Proposal"" that have not successfully passed through the Temperature Check and Consensus Check stages will be removed by moderators.Call the propose() function of the Governor Bravo to deploy your proposal.Once the propose() function has been called, a two day voting delay will start. After voting delay is finished a seven day voting period begins. Ongoing discussion can take place in the gov.uniswap.org forum. If the proposal passes successfully, a two day timelock will follow before the proposed code is executed.Soft governance‚ÄãThe process described above lays out a structure for those wishing to host a formal vote around a particular issue.However, governing this system also requires a degree of ""meta governance"", discussions that inform the direction of and the implementation processes behind policy but which don't qualify as policy themselves.The community may discuss new ideas and strategies for governance ‚Äî including changes to the three-step process outlined above ‚Äî in the ""Governance-Meta"" category. On-chain voting is not necessary to make updates to off-chain processes.Governance Glossary‚ÄãUNI: An ERC-20 token that designates the weight of a user's voting rights. The more UNI a user has in their wallet, the more weight their delegation or vote on a proposal holds.Delegation: UNI holders cannot vote or create proposals until they delegate their voting rights to an address. Delegation can be given to one address at a time, including the holder's own address. Note that delegation does not lock tokens; it simply adds votes to the chosen delegation address.Proposal: A proposal is executable code that modifies the governance contract or treasury and how they work. In order to create a proposal, a user must have at least 0.25% (2.5M UNI) of all UNI delegated to their address. Proposals are stored in the ""proposals"" mapping of the Governor smart contract. All proposals are subject to a 7-day voting period. If the proposer does not maintain their vote weight balance throughout the voting period, the proposal may be canceled by anyone.Quorum: In order for a vote to pass, it must achieve quorum of 4% of all UNI (40M) voting in the affirmative. The purpose of the quorum is to ensure that the only measures that pass have adequate voter participation.Voting: Users can vote for or against single proposals once they have voting rights delegated to their address. Votes can be cast while a proposal is in the ""Active"" state. Votes can be submitted immediately using ""castVote"" or submitted later with ""castVoteBySig"" (For more info on castVoteBySig and offline signatures, see EIP-712). If the majority of votes (and a 4% quorum of UNI) vote for a proposal, the proposal may be queued in the Timelock.Voting Period: Once a proposal has been put forward, Uniswap community members will have a seven day period (the Voting Period) to cast their votes.Timelock: All governance and other administrative actions are required to sit in the Timelock for a minimum of 2 days, after which they can be implemented.Helpful?PreviousOverviewNextBeginners Guide to VotingProcessPhase 1: Temperature Check ‚Äî Discourse/SnapshotPhase 2: Consensus Check ‚Äî Discourse/SnapshotPhase 3: Governance Proposal ‚Äî Governance PortalSoft governanceGovernance GlossaryDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
650,p.org contracts v2 concepts advanced topics understanding returns,"p.org contracts v2 concepts advanced topics understanding returns.    Understanding Returns | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsFeesPricingUnderstanding ReturnsSecurityMathResearchGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolConceptsAdvanced TopicsUnderstanding ReturnsHelpful?On this pageUnderstanding ReturnsUniswap incentivizes users to add liquidity to trading pools by rewarding providers with the fees generated when other users trade with those pools. Market making, in general, is a complex activity. There is a risk of losing money during large and sustained movement in the underlying asset price compared to simply holding an asset.RisksTo understand the risks associated with providing liquidity you can read https://medium.com/@pintail/uniswap-a-good-deal-for-liquidity-providers-104c0b6816f2 to get an in-depth look at how to conceptualize a liquidity position.Example from the articleConsider the case where a liquidity provider adds 10,000 DAI and 100 WETH to a pool (for a total value of $20,000), the liquidity pool is now 100,000 DAI and 1,000 ETH in total. Because the amount supplied is equal to 10% of the total liquidity, the contract mints and sends the market maker ‚Äúliquidity tokens‚Äù which entitle them to 10% of the liquidity available in the pool. These are not speculative tokens to be traded. They are merely an accounting or bookkeeping tool to keep track of how much the liquidity providers are owed. If others subsequently add/withdraw coins, new liquidity tokens are minted/burned such that everyone‚Äôs relative percentage share of the liquidity pool remains the same.Now let‚Äôs assume the price trades on Coinbase from $100 to $150. The Uniswap contract should reflect this change as well after some arbitrage. Traders will add DAI and remove ETH until the new ratio is now 150:1.What happens to the liquidity provider? The contract reflects something closer to 122,400 DAI and 817 ETH (to check these numbers are accurate, 122,400 * 817 = 100,000,000 (our constant product) and 122,400 / 817 = 150, our new price). Withdrawing the 10% that we are entitled to would now yield 12,240 DAI and 81.7 ETH. The total market value here is $24,500. Roughly $500 worth of profit was missed out on as a result of the market making.Obviously no one wants to provide liquidity out of charitable means, and the revenue isn‚Äôt dependent on the ability to flip out of good trades (there is no flipping). Instead, 0.3% of all trade volume is distributed proportionally to all liquidity providers. By default, these fees are put back into the liquidity pool, but can be collected any time. It‚Äôs difficult to know what the trade-off is between revenues from fees and losses from directional movements without knowing the amount of in-between trades. The more chop and back and forth, the better.Why is my liquidity worth less than I put in?‚ÄãTo understand why the value of a liquidity provider‚Äôs stake can go down despite income from fees, we need to look a bit more closely at the formula used by Uniswap to govern trading. The formula really is very simple. If we neglect trading fees, we have the following:eth_liquidity_pool * token_liquidity_pool = constant_productIn other words, the number of tokens a trader receives for their ETH and vice versa is calculated such that after the trade, the product of the two liquidity pools is the same as it was before the trade. The consequence of this formula is that for trades which are very small in value compared to the size of the liquidity pool we have:eth_price = token_liquidity_pool / eth_liquidity_poolCombining these two equations, we can work out the size of each liquidity pool at any given price, assuming constant total liquidity:eth_liquidity_pool = sqrt(constant_product / eth_price)token_liquidity_pool = sqrt(constant_product * eth_price)So let‚Äôs look at the impact of a price change on a liquidity provider. To keep things simple, let‚Äôs imagine our liquidity provider supplies 1 ETH and 100 DAI to the Uniswap DAI exchange, giving them 1% of a liquidity pool which contains 100 ETH and 10,000 DAI. This implies a price of 1 ETH = 100 DAI. Still neglecting fees, let‚Äôs imagine that after some trading, the price has changed; 1 ETH is now worth 120 DAI. What is the new value of the liquidity provider‚Äôs stake? Plugging the numbers into the formulae above, we have:eth_liquidity_pool = 91.2871dai_liquidity_pool = 10954.4511""Since our liquidity provider has 1% of the liquidity tokens, this means they can now claim 0.9129 ETH and 109.54 DAI from the liquidity pool. But since DAI is approximately equivalent to USD, we might prefer to convert the entire amount into DAI to understand the overall impact of the price change. At the current price then, our liquidity is worth a total of 219.09 DAI. What if the liquidity provider had just held onto their original 1 ETH and 100 DAI? Well, now we can easily see that, at the new price, the total value would be 220 DAI. So our liquidity provider lost out by 0.91 DAI by providing liquidity to Uniswap instead of just holding onto their initial ETH and DAI.""""Of course, if the price were to return to the same value as when the liquidity provider added their liquidity, this loss would disappear. For this reason, we can call it an¬†impermanent loss. Using the equations above, we can derive a formula for the size of the impermanent loss in terms of the price ratio between when liquidity was supplied and now. We get the following:""""impermanent_loss = 2 * sqrt(price_ratio) / (1+price_ratio) ‚Äî 1""""Which we can plot out to get a general sense of the scale of the impermanent loss at different price ratios:"" ""Or to put it another way:""""a 1.25x price change results in a 0.6% loss relative to HODL""""a 1.50x price change results in a 2.0% loss relative to HODL""""a 1.75x price change results in a 3.8% loss relative to HODL""""a 2x price change results in a 5.7% loss relative to HODL""""a 3x price change results in a 13.4% loss relative to HODL""""a 4x price change results in a 20.0% loss relative to HODL""""a 5x price change results in a 25.5% loss relative to HODL""""N.B. The loss is the same whichever direction the price change occurs in (i.e. a doubling in price results in the same loss as a halving)."" -->Edit this pageHelpful?PreviousPricingNextSecurityWhy is my liquidity worth less than I put in?DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
651,p.org sdk v3 reference interfaces BestTradeOptions#maxhops,p.org sdk v3 reference interfaces BestTradeOptions#maxhops.    BestTradeOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesBestTradeOptionsHelpful?On this pageBestTradeOptions@uniswap/v3-sdk / Exports / BestTradeOptionsInterface: BestTradeOptionsTable of contents‚ÄãProperties‚ÄãmaxHopsmaxNumResultsProperties‚ÄãmaxHops‚Äã‚Ä¢ Optional maxHops: numberDefined in‚Äãentities/trade.ts:50maxNumResults‚Äã‚Ä¢ Optional maxNumResults: numberDefined in‚Äãentities/trade.ts:48Helpful?PreviousAllowedPermitArgumentsNextClaimOptionsTable of contentsPropertiesPropertiesmaxHopsmaxNumResultsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
652,p.org contracts v3 reference core libraries TickBitmap,"p.org contracts v3 reference core libraries TickBitmap.    TickBitmap | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesLibrariesBitMathFixedPoint128FixedPoint96FullMathLiquidityMathLowGasSafeMathOraclePositionSafeCastSecondsOutsideSqrtPriceMathSwapMathTickTickBitmapTickMathTransferHelperUnsafeMathGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreLibrariesTickBitmapHelpful?On this pageTickBitmapStores a packed mapping of tick index to its initialized stateThe mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.Functions‚ÄãflipTick‚Äã function flipTick( mapping(int16 => uint256) self, int24 tick, int24 tickSpacing ) internalCopyFlips the initialized state for a given tick from false to true, or vice versaParameters:‚ÄãNameTypeDescriptionselfmapping(int16 => uint256)The mapping in which to flip the ticktickint24The tick to fliptickSpacingint24The spacing between usable ticksnextInitializedTickWithinOneWord‚Äã function nextInitializedTickWithinOneWord( mapping(int16 => uint256) self, int24 tick, int24 tickSpacing, bool lte ) internal view returns (int24 next, bool initialized)CopyReturns the next initialized tick contained in the same word (or adjacent word) as the tick that is either to the left (less than or equal to) or right (greater than) of the given tickParameters:‚ÄãNameTypeDescriptionselfmapping(int16 => uint256)The mapping in which to compute the next initialized ticktickint24The starting ticktickSpacingint24The spacing between usable tickslteboolWhether to search for the next initialized tick to the left (less than or equal to the starting tick)Return Values:‚ÄãNameTypeDescriptionnextint24The next initialized or uninitialized tick up to 256 ticks away from the current tickinitializedboolWhether the next tick is initialized, as the function only searches within up to 256 ticksEdit this pageHelpful?PreviousTickNextTickMathFunctionsflipTicknextInitializedTickWithinOneWordDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
653,p.org contracts v3 reference periphery interfaces INonfungibleTokenPositionDescriptor,"p.org contracts v3 reference periphery interfaces INonfungibleTokenPositionDescriptor.    INonfungibleTokenPositionDescriptor | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesIERC20MetadataIERC721PermitIMulticallINonfungiblePositionManagerINonfungibleTokenPositionDescriptorIPeripheryImmutableStateIPeripheryPaymentsIPeripheryPaymentsWithFeeIPoolInitializerIQuoterIQuoterV2ISelfPermitISwapRouterITickLensIV3MigratorexternalLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryInterfacesINonfungibleTokenPositionDescriptorHelpful?On this pageINonfungibleTokenPositionDescriptorFunctions‚ÄãtokenURI‚Äã function tokenURI( contract INonfungiblePositionManager positionManager, uint256 tokenId ) external returns (string)CopyProduces the URI describing a particular token ID for a position managerNote this URI may be a data: URI with the JSON contents directly inlinedParameters:‚ÄãNameTypeDescriptionpositionManagercontract INonfungiblePositionManagerThe position manager for which to describe the tokentokenIduint256The ID of the token for which to produce a description, which may not be validReturn Values:‚ÄãTypeDescriptionstringURI of the ERC721-compliant metadataEvents‚ÄãUpdateTokenRatioPriority‚Äã event UpdateTokenRatioPriority( address token, int256 priority )CopyEmitted when a token is given a new priority order in the displayed price ratioParameters:‚ÄãNameTypeDescriptiontokenaddressThe token being given priority orderpriorityint256Represents priority in ratio - higher integers get numerator priorityEdit this pageHelpful?PreviousINonfungiblePositionManagerNextIPeripheryImmutableStateFunctionstokenURIEventsUpdateTokenRatioPriorityDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
654,p.org sdk v3 reference classes Payments#interface,"p.org sdk v3 reference classes Payments#interface.    Payments | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPaymentsHelpful?On this pagePayments@uniswap/v3-sdk / Exports / PaymentsClass: PaymentsTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãencodeFeeBipsencodeRefundETHencodeSweepTokenencodeUnwrapWETH9Constructors‚Äãconstructor‚Äã‚Ä¢ Private new Payments()Cannot be constructed.Defined in‚Äãpayments.ts:25Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚Äãpayments.ts:20Methods‚ÄãencodeFeeBips‚Äã‚ñ∏ Static Private encodeFeeBips(fee): stringParameters‚ÄãNameTypefeePercentReturns‚ÄãstringDefined in‚Äãpayments.ts:27encodeRefundETH‚Äã‚ñ∏ Static encodeRefundETH(): stringReturns‚ÄãstringDefined in‚Äãpayments.ts:73encodeSweepToken‚Äã‚ñ∏ Static encodeSweepToken(token, amountMinimum, recipient, feeOptions?): stringParameters‚ÄãNameTypetokenTokenamountMinimumdefaultrecipientstringfeeOptions?FeeOptionsReturns‚ÄãstringDefined in‚Äãpayments.ts:49encodeUnwrapWETH9‚Äã‚ñ∏ Static encodeUnwrapWETH9(amountMinimum, recipient, feeOptions?): stringParameters‚ÄãNameTypeamountMinimumdefaultrecipientstringfeeOptions?FeeOptionsReturns‚ÄãstringDefined in‚Äãpayments.ts:31Helpful?PreviousNonfungiblePositionManagerNextPoolTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsencodeFeeBipsencodeRefundETHencodeSweepTokenencodeUnwrapWETH9DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
655,p.org sdk v3 reference classes NonfungiblePositionManager#safetransferfromparameters,"p.org sdk v3 reference classes NonfungiblePositionManager#safetransferfromparameters.    NonfungiblePositionManager | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesNonfungiblePositionManagerHelpful?On this pageNonfungiblePositionManager@uniswap/v3-sdk / Exports / NonfungiblePositionManagerClass: NonfungiblePositionManagerTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãaddCallParameterscollectCallParameterscreateCallParametersencodeCollectencodeCreateremoveCallParameterssafeTransferFromParametersConstructors‚Äãconstructor‚Äã‚Ä¢ Private new NonfungiblePositionManager()Cannot be constructed.Defined in‚ÄãnonfungiblePositionManager.ts:181Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚ÄãnonfungiblePositionManager.ts:176Methods‚ÄãaddCallParameters‚Äã‚ñ∏ Static addCallParameters(position, options): MethodParametersParameters‚ÄãNameTypepositionPositionoptionsAddLiquidityOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:199collectCallParameters‚Äã‚ñ∏ Static collectCallParameters(options): MethodParametersParameters‚ÄãNameTypeoptionsCollectOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:326createCallParameters‚Äã‚ñ∏ Static createCallParameters(pool): MethodParametersParameters‚ÄãNameTypepoolPoolReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:192encodeCollect‚Äã‚ñ∏ Static Private encodeCollect(options): string[]Parameters‚ÄãNameTypeoptionsCollectOptionsReturns‚Äãstring[]Defined in‚ÄãnonfungiblePositionManager.ts:286encodeCreate‚Äã‚ñ∏ Static Private encodeCreate(pool): stringParameters‚ÄãNameTypepoolPoolReturns‚ÄãstringDefined in‚ÄãnonfungiblePositionManager.ts:183removeCallParameters‚Äã‚ñ∏ Static removeCallParameters(position, options): MethodParametersProduces the calldata for completely or partially exiting a positionParameters‚ÄãNameTypeDescriptionpositionPositionThe position to exitoptionsRemoveLiquidityOptionsAdditional information necessary for generating the calldataReturns‚ÄãMethodParametersThe call parametersDefined in‚ÄãnonfungiblePositionManager.ts:341safeTransferFromParameters‚Äã‚ñ∏ Static safeTransferFromParameters(options): MethodParametersParameters‚ÄãNameTypeoptionsSafeTransferOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:416Helpful?PreviousNoTickDataProviderNextPaymentsTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsaddCallParameterscollectCallParameterscreateCallParametersencodeCollectencodeCreateremoveCallParameterssafeTransferFromParametersDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
656,p.org contracts v2 concepts advanced topics math,"p.org contracts v2 concepts advanced topics math.    Math | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsFeesPricingUnderstanding ReturnsSecurityMathResearchGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolConceptsAdvanced TopicsMathHelpful?MathThis section will be expanded in the future. In the mean time, the Uniswap V2 whitepaper has most relevant math for Uniswap V2.Edit this pageHelpful?PreviousSecurityNextResearchDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
657,p.org contracts v2 reference smart contracts pair erc 20#totalsupply,p.org contracts v2 reference smart contracts pair erc 20#totalsupply. 
658,p.org sdk v3 reference modules.md#pricetoclosesttick,p.org sdk v3 reference modules.md#pricetoclosesttick. 
659,p.org sdk core reference classes Ether,"p.org sdk core reference classes Ether.    Ether | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesEtherHelpful?On this pageEther@uniswap/sdk-core / Exports / EtherClass: EtherEther is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnetsHierarchy‚ÄãNativeCurrency‚Ü≥ EtherTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãchainIddecimalsisNativeisTokennamesymbol_etherCacheAccessors‚ÄãwrappedMethods‚ÄãequalsonChainConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new Ether(chainId)Parameters‚ÄãNameTypechainIdnumberOverrides‚ÄãNativeCurrency.constructorDefined in‚Äãentities/ether.ts:11Properties‚ÄãchainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãNativeCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãNativeCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: trueInherited from‚ÄãNativeCurrency.isNativeDefined in‚Äãentities/nativeCurrency.ts:7isToken‚Äã‚Ä¢ Readonly isToken: falseInherited from‚ÄãNativeCurrency.isTokenDefined in‚Äãentities/nativeCurrency.ts:8name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãNativeCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãNativeCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29_etherCache‚Äã‚ñ™ Static Private _etherCache: Object = {}Index signature‚Äã‚ñ™ [chainId: number]: EtherDefined in‚Äãentities/ether.ts:21Accessors‚Äãwrapped‚Äã‚Ä¢ get wrapped(): TokenReturn the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to be used in UniswapReturns‚ÄãTokenOverrides‚ÄãNativeCurrency.wrappedDefined in‚Äãentities/ether.ts:15Methods‚Äãequals‚Äã‚ñ∏ equals(other): booleanReturns whether this currency is functionally equivalent to the other currencyParameters‚ÄãNameTypeDescriptionotherCurrencythe other currencyReturns‚ÄãbooleanOverrides‚ÄãNativeCurrency.equalsDefined in‚Äãentities/ether.ts:27onChain‚Äã‚ñ∏ Static onChain(chainId): EtherParameters‚ÄãNameTypechainIdnumberReturns‚ÄãEtherDefined in‚Äãentities/ether.ts:23Helpful?PreviousCurrencyAmountNextFractionHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertieschainIddecimalsisNativeisTokennamesymbol_etherCacheAccessorswrappedMethodsequalsonChainDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
660,p.org sdk v3 reference interfaces IncreaseSpecificOptions,p.org sdk v3 reference interfaces IncreaseSpecificOptions.    IncreaseSpecificOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesIncreaseSpecificOptionsHelpful?On this pageIncreaseSpecificOptions@uniswap/v3-sdk / Exports / IncreaseSpecificOptionsInterface: IncreaseSpecificOptionsTable of contents‚ÄãProperties‚ÄãtokenIdProperties‚ÄãtokenId‚Äã‚Ä¢ tokenId: BigintIshIndicates the ID of the position to increase liquidity for.Defined in‚ÄãnonfungiblePositionManager.ts:41Helpful?PreviousIncentiveKeyNextMethodParametersTable of contentsPropertiesPropertiestokenIdDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
661,p.org contracts v2 reference smart contracts library#getamountout,"p.org contracts v2 reference smart contracts library#getamountout.    Library | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsLibraryHelpful?On this pageLibraryCode‚ÄãUniswapV2Library.solInternal FunctionssortTokens‚Äãfunction sortTokens(address tokenA, address tokenB) internal pure returns (address token0, address token1);CopySorts token addresses.pairFor‚Äãfunction pairFor(address factory, address tokenA, address tokenB) internal pure returns (address pair);CopyCalculates the address for a pair without making any external calls via the v2 SDK.getReserves‚Äãfunction getReserves(address factory, address tokenA, address tokenB) internal view returns (uint reserveA, uint reserveB);CopyCalls getReserves on the pair for the passed tokens, and returns the results sorted in the order that the parameters were passed in.quote‚Äãfunction quote(uint amountA, uint reserveA, uint reserveB) internal pure returns (uint amountB);CopyGiven some asset amount and reserves, returns an amount of the other asset representing equivalent value.Useful for calculating optimal token amounts before calling mint.getAmountOut‚Äãfunction getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) internal pure returns (uint amountOut);CopyGiven an input asset amount, returns the maximum output amount of the other asset (accounting for fees) given reserves.Used in getAmountsOut.getAmountIn‚Äãfunction getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) internal pure returns (uint amountIn);CopyReturns the minimum input asset amount required to buy the given output asset amount (accounting for fees) given reserves.Used in getAmountsIn.getAmountsOut‚Äãfunction getAmountsOut(uint amountIn, address[] memory path) internal view returns (uint[] memory amounts);CopyGiven an input asset amount and an array of token addresses, calculates all subsequent maximum output token amounts by calling getReserves for each pair of token addresses in the path in turn, and using these to call getAmountOut.Useful for calculating optimal token amounts before calling swap.getAmountsIn‚Äãfunction getAmountsIn(address factory, uint amountOut, address[] memory path) internal view returns (uint[] memory amounts);CopyGiven an output asset amount and an array of token addresses, calculates all preceding minimum input token amounts by calling getReserves for each pair of token addresses in the path in turn, and using these to call getAmountIn.Useful for calculating optimal token amounts before calling swap.Edit this pageHelpful?PreviousPair (ERC-20)NextRouter01CodesortTokenspairForgetReservesquotegetAmountOutgetAmountIngetAmountsOutgetAmountsInDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
662,p.org sdk core reference classes Percent#invert,"p.org sdk core reference classes Percent#invert.    Percent | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPercentHelpful?On this pagePercent@uniswap/sdk-core / Exports / PercentClass: PercentHierarchy‚ÄãFraction‚Ü≥ PercentTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatorisPercentnumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Percent(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshInherited from‚ÄãFraction.constructorDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26isPercent‚Äã‚Ä¢ Readonly isPercent: trueThis boolean prevents a fraction from being interpreted as a PercentDefined in‚Äãentities/fractions/percent.ts:19numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.addDefined in‚Äãentities/fractions/percent.ts:21divide‚Äã‚ñ∏ divide(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/percent.ts:33equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/percent.ts:29subtract‚Äã‚ñ∏ subtract(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/percent.ts:25toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber2format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/percent.ts:41toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber5format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/percent.ts:37Helpful?PreviousNativeCurrencyNextPriceHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatorisPercentnumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
663,p.org contracts v1 guides token listing,"p.org contracts v1 guides token listing.    Token Listing | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 ProtocolOverviewGuidesConnect to UniswapPool LiquidityTrade TokensCustom LinkingIframe IntegrationToken ListingTechnical ReferenceFactoryExchangeInterfacesüè†V1 ProtocolGuidesToken ListingHelpful?On this pageToken ListingIt is possible that a token you are interested in is not included in the token dropdown on https://app.uniswap.org/#/swap?use=v1, however, all tokens that have a deployed uniswap exchange are supported on the front-end.There are three ways to interact with tokens that are not yet included on the default list.1. Paste the token address into the search box.‚ÄãIf a token is not included in the list, try pasting the token address into the search box. It will populate the dropdown with the token you are looking for.2. Custom Linking‚Äãhttps://app.uniswap.org/#/swap?use=v1 supports custom linking to all tokens that have a Uniswap exchange. See Custom Linking for details on how to link.For example, to populate the output token field with an unlisted token, we can specify the outputCurrency in the URL and pass in the token's address like this:https://app.uniswap.org/#/swap?use=v1?outputCurrency=0xfA3E941D1F6B7b10eD84A0C211bfA8aeE907965eToken Details and Assets‚ÄãToken information (including decimals, symbol, name, etc.) is pulled from token contracts directly. Logo images are pulled from TrustWallet. If you'd like your token logo updated make a pull request into the TrustWallet assets repo https://github.com/trustwallet/assets.Edit this pageHelpful?PreviousIframe IntegrationNextFactory1. Paste the token address into the search box.2. Custom LinkingToken Details and AssetsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
664,p.org contracts v3 reference periphery test NFTDescriptorTest,"p.org contracts v3 reference periphery test NFTDescriptorTest.    NFTDescriptorTest | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerTestBase64TestLiquidityAmountsTestMockTimeNonfungiblePositionManagerMockTimeSwapRouterNFTDescriptorTestPathTestPeripheryImmutableStateTestPoolAddressTestSelfPermitTestTestCallbackValidationTestERC20TestERC20MetadataTestERC20PermitAllowedTestMulticallTestPositionNFTOwnerTestUniswapV3CalleeTickLensTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryTestNFTDescriptorTestHelpful?On this pageNFTDescriptorTestFunctions‚ÄãconstructTokenURI‚Äã function constructTokenURI( ) public returns (string)CopygetGasCostOfConstructTokenURI‚Äã function getGasCostOfConstructTokenURI( ) public returns (uint256)CopytickToDecimalString‚Äã function tickToDecimalString( ) public returns (string)CopyfixedPointToDecimalString‚Äã function fixedPointToDecimalString( ) public returns (string)CopyfeeToPercentString‚Äã function feeToPercentString( ) public returns (string)CopyaddressToString‚Äã function addressToString( ) public returns (string)CopygenerateSVGImage‚Äã function generateSVGImage( ) public returns (string)CopytokenToColorHex‚Äã function tokenToColorHex( ) public returns (string)CopysliceTokenHex‚Äã function sliceTokenHex( ) public returns (uint256)CopyrangeLocation‚Äã function rangeLocation( ) public returns (string, string)CopyisRare‚Äã function isRare( ) public returns (bool)CopyEdit this pageHelpful?PreviousMockTimeSwapRouterNextPathTestFunctionsconstructTokenURIgetGasCostOfConstructTokenURItickToDecimalStringfixedPointToDecimalStringfeeToPercentStringaddressToStringgenerateSVGImagetokenToColorHexsliceTokenHexrangeLocationisRareDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
665,p.org contracts v3 reference core interfaces IERC20Minimal,"p.org contracts v3 reference core interfaces IERC20Minimal.    IERC20Minimal | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesIERC20MinimalIUniswapV3FactoryIUniswapV3PoolIUniswapV3PoolDeployercallbackPoolLibrariesGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreInterfacesIERC20MinimalHelpful?On this pageIERC20MinimalContains a subset of the full ERC20 interface that is used in Uniswap V3Functions‚ÄãbalanceOf‚Äã function balanceOf( address account ) external view returns (uint256)CopyReturns the balance of a tokenParameters:‚ÄãNameTypeDescriptionaccountaddressThe account for which to look up the number of tokens it has, i.e. its balanceReturn Values:‚ÄãTypeDescriptionuint256number of tokens held by the accounttransfer‚Äã function transfer( address recipient, uint256 amount ) external returns (bool)CopyTransfers the amount of token from the msg.sender to the recipientParameters:‚ÄãNameTypeDescriptionrecipientaddressThe account that will receive the amount transferredamountuint256The number of tokens to send from the sender to the recipientReturn Values:‚ÄãTypeDescriptionbooltrue for a successful transfer, false for an unsuccessful transferallowance‚Äã function allowance( address owner, address spender ) external view returns (uint256)CopyReturns the current allowance given to a spender by an ownerParameters:‚ÄãNameTypeDescriptionowneraddressThe account of the token ownerspenderaddressThe account of the token spenderReturn Values:‚ÄãTypeDescriptionuint256current allowance granted by owner to spenderapprove‚Äã function approve( address spender, uint256 amount ) external returns (bool)CopySets the allowance of a spender from the msg.sender to the value amountParameters:‚ÄãNameTypeDescriptionspenderaddressThe account which will be allowed to spend a given amount of the owners tokensamountuint256The amount of tokens allowed to be used by spenderReturn Values:‚ÄãTypeDescriptionbooltrue for a successful approval, false for unsuccessfultransferFrom‚Äã function transferFrom( address sender, address recipient, uint256 amount ) external returns (bool)CopyTransfers amount tokens from sender to recipient up to the allowance given to the msg.senderParameters:‚ÄãNameTypeDescriptionsenderaddressThe account from which the transfer will be initiatedrecipientaddressThe recipient of the transferamountuint256The amount of the transferReturn Values:‚ÄãTypeDescriptionbooltrue for a successful transfer, false for unsuccessfulEvents‚ÄãTransfer‚Äã event Transfer( address from, address to, uint256 value )CopyEvent emitted when tokens are transferred from one address to another, either via #transfer or #transferFrom.Parameters:‚ÄãNameTypeDescriptionfromaddressThe account from which the tokens were sent, i.e. the balance decreasedtoaddressThe account to which the tokens were sent, i.e. the balance increasedvalueuint256The amount of tokens that were transferredApproval‚Äã event Approval( address owner, address spender, uint256 value )CopyEvent emitted when the approval amount for the spender of a given owner's tokens changes.Parameters:‚ÄãNameTypeDescriptionowneraddressThe account that approved spending of its tokensspenderaddressThe account for which the spending allowance was modifiedvalueuint256The new allowance from the owner to the spenderEdit this pageHelpful?PreviousUniswapV3PoolDeployerNextIUniswapV3FactoryFunctionsbalanceOftransferallowanceapprovetransferFromEventsTransferApprovalDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
666,p.org api subgraph overview,"p.org api subgraph overview.    Overview | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchSubgraphOverviewGuidesQuery Examplesüè†SubgraphOverviewHelpful?On this pageThe Uniswap SubgraphUniswap uses multiple subgraphs for indexing and organizing data from the Uniswap smart contracts. These subgraphs are hosted on The Graph hosted service and can be used to query Uniswap data.Versions and Production Endpoints‚ÄãEach version of Uniswap has its own dedicated subgraph, and governance contracts have a dedicated subgraph as well.Each subgraph has a dedicated endpoint for querying data, as well as a page on The Graph explorer the exposes the schema and available fields to query.V3‚ÄãExplorer Page: https://thegraph.com/explorer/subgraph/uniswap/uniswap-v3Graphql Endpoint: https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3Code: https://github.com/Uniswap/uniswap-v3-subgraphGovernance‚ÄãExplorer Page: https://thegraph.com/explorer/subgraph/ianlapham/governance-trackingGraphql Endpoint: https://api.thegraph.com/subgraphs/name/ianlapham/governance-trackingCode: https://github.com/ianlapham/uniswap-governance-subgraphV2‚ÄãExplorer Page: https://thegraph.com/explorer/subgraph/ianlapham/uniswapv2Graphql Endpoint: https://api.thegraph.com/subgraphs/name/ianlapham/uniswapv2Code: https://github.com/Uniswap/uniswap-v2-subgraphV1‚ÄãExplorer Page: https://thegraph.com/explorer/subgraph/ianlapham/uniswapGraphql Endpoint: https://api.thegraph.com/subgraphs/name/ianlapham/uniswapCode: https://github.com/graphprotocol/uniswap-subgraphHelpful?NextQuery ExamplesVersions and Production EndpointsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
667,p.org sdk core reference classes Price#add,"p.org sdk core reference classes Price#add.    Price | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPriceHelpful?On this pagePrice@uniswap/sdk-core / Exports / PriceClass: Price<TBase, TQuote>Type parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyHierarchy‚ÄãFraction‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessors‚ÄãadjustedForDecimalsasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Price<TBase, TQuote>(...args)Construct a price, either with the base and quote currency amount, or theType parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyParameters‚ÄãNameType...args[TBase, TQuote, BigintIsh, BigintIsh] | [{ baseAmount: CurrencyAmount<TBase> ; quoteAmount: CurrencyAmount<TQuote> }]Overrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/price.ts:18Properties‚ÄãbaseCurrency‚Äã‚Ä¢ Readonly baseCurrency: TBaseDefined in‚Äãentities/fractions/price.ts:10denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25quoteCurrency‚Äã‚Ä¢ Readonly quoteCurrency: TQuoteDefined in‚Äãentities/fractions/price.ts:11scalar‚Äã‚Ä¢ Readonly scalar: FractionDefined in‚Äãentities/fractions/price.ts:12Accessors‚ÄãadjustedForDecimals‚Äã‚Ä¢ Private get adjustedForDecimals(): FractionGet the value scaled by decimals for formattingReturns‚ÄãFractionDefined in‚Äãentities/fractions/price.ts:77asFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.addDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.divideDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): Price<TQuote, TBase>Flip the price, switching the base and quote currencyReturns‚ÄãPrice<TQuote, TBase>Overrides‚ÄãFraction.invertDefined in‚Äãentities/fractions/price.ts:49lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply<TOtherQuote>(other): Price<TBase, TOtherQuote>Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currencyType parameters‚ÄãNameTypeTOtherQuoteextends CurrencyParameters‚ÄãNameTypeDescriptionotherPrice<TQuote, TOtherQuote>the other priceReturns‚ÄãPrice<TBase, TOtherQuote>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/price.ts:57quote‚Äã‚ñ∏ quote(currencyAmount): CurrencyAmount<TQuote>Return the amount of quote currency corresponding to a given amount of the base currencyParameters‚ÄãNameTypeDescriptioncurrencyAmountCurrencyAmount<TBase>the amount of base currency to quote against the priceReturns‚ÄãCurrencyAmount<TQuote>Defined in‚Äãentities/fractions/price.ts:67subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.subtractDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber4format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/price.ts:85toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/price.ts:81Helpful?PreviousPercentNextTokenType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessorsadjustedForDecimalsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
668,p.org sdk v3 reference classes Position# token0amount,"p.org sdk v3 reference classes Position# token0amount.    Position | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPositionHelpful?On this pagePosition@uniswap/v3-sdk / Exports / PositionClass: PositionRepresents a position on a Uniswap V3 PoolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessors‚Äãamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethods‚ÄãburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsConstructors‚Äãconstructor‚Äã‚Ä¢ new Position(__namedParameters)Constructs a position for a given pool with the given liquidityParameters‚ÄãNameType__namedParametersPositionConstructorArgsDefined in‚Äãentities/position.ts:40Properties‚Äã_mintAmounts‚Äã‚Ä¢ Private _mintAmounts: null | Readonly<{ amount0: default ; amount1: default }> = nullDefined in‚Äãentities/position.ts:31_token0Amount‚Äã‚Ä¢ Private _token0Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:29_token1Amount‚Äã‚Ä¢ Private _token1Amount: null | CurrencyAmount<Token> = nullDefined in‚Äãentities/position.ts:30liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/position.ts:26pool‚Äã‚Ä¢ Readonly pool: PoolDefined in‚Äãentities/position.ts:23tickLower‚Äã‚Ä¢ Readonly tickLower: numberDefined in‚Äãentities/position.ts:24tickUpper‚Äã‚Ä¢ Readonly tickUpper: numberDefined in‚Äãentities/position.ts:25Accessors‚Äãamount0‚Äã‚Ä¢ get amount0(): CurrencyAmount<Token>Returns the amount of token0 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:68amount1‚Äã‚Ä¢ get amount1(): CurrencyAmount<Token>Returns the amount of token1 that this position's liquidity could be burned for at the current pool priceReturns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/position.ts:100mintAmounts‚Äã‚Ä¢ get mintAmounts(): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at the current price for the poolReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>Defined in‚Äãentities/position.ts:258token0PriceLower‚Äã‚Ä¢ get token0PriceLower(): Price<Token, Token>Returns the price of token0 at the lower tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:54token0PriceUpper‚Äã‚Ä¢ get token0PriceUpper(): Price<Token, Token>Returns the price of token0 at the upper tickReturns‚ÄãPrice<Token, Token>Defined in‚Äãentities/position.ts:61Methods‚ÄãburnAmountsWithSlippage‚Äã‚ñ∏ burnAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercenttolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:213mintAmountsWithSlippage‚Äã‚ñ∏ mintAmountsWithSlippage(slippageTolerance): Readonly<{ amount0: default ; amount1: default }>Returns the minimum amounts that must be sent in order to safely mint the amount of liquidity held by the position with the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentTolerance of unfavorable slippage from the current priceReturns‚ÄãReadonly<{ amount0: default ; amount1: default }>The amounts, with slippageDefined in‚Äãentities/position.ts:157ratiosAfterSlippage‚Äã‚ñ∏ Private ratiosAfterSlippage(slippageTolerance): ObjectReturns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentageParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe amount by which the price can 'slip' before the transaction will revertReturns‚ÄãObjectThe sqrt ratios after slippageNameTypesqrtRatioX96LowerdefaultsqrtRatioX96UpperdefaultDefined in‚Äãentities/position.ts:134fromAmount0‚Äã‚ñ∏ Static fromAmount0(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited amount of token1Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:354fromAmount1‚Äã‚ñ∏ Static fromAmount1(__namedParameters): PositionComputes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited amount of token0Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumberReturns‚ÄãPositionThe positionDefined in‚Äãentities/position.ts:378fromAmounts‚Äã‚ñ∏ Static fromAmounts(__namedParameters): PositionComputes the maximum amount of liquidity received for a given amount of token0, token1, and the prices at the tick boundaries.Parameters‚ÄãNameType__namedParametersObject__namedParameters.amount0BigintIsh__namedParameters.amount1BigintIsh__namedParameters.poolPool__namedParameters.tickLowernumber__namedParameters.tickUppernumber__namedParameters.useFullPrecisionbooleanReturns‚ÄãPositionThe amount of liquidity for the positionDefined in‚Äãentities/position.ts:312Helpful?PreviousPoolNextPositionLibraryTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_mintAmounts_token0Amount_token1AmountliquiditypooltickLowertickUpperAccessorsamount0amount1mintAmountstoken0PriceLowertoken0PriceUpperMethodsburnAmountsWithSlippagemintAmountsWithSlippageratiosAfterSlippagefromAmount0fromAmount1fromAmountsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
669,p.org sdk v3 reference classes TickLibrary#getfeegrowthinside,"p.org sdk v3 reference classes TickLibrary#getfeegrowthinside.    TickLibrary | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickLibraryHelpful?On this pageTickLibrary@uniswap/v3-sdk / Exports / TickLibraryClass: TickLibraryTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãgetFeeGrowthInsideConstructors‚Äãconstructor‚Äã‚Ä¢ Private new TickLibrary()Cannot be constructed.Defined in‚Äãutils/tickLibrary.ts:25Methods‚ÄãgetFeeGrowthInside‚Äã‚ñ∏ Static getFeeGrowthInside(feeGrowthOutsideLower, feeGrowthOutsideUpper, tickLower, tickUpper, tickCurrent, feeGrowthGlobal0X128, feeGrowthGlobal1X128): default[]Parameters‚ÄãNameTypefeeGrowthOutsideLowerFeeGrowthOutsidefeeGrowthOutsideUpperFeeGrowthOutsidetickLowernumbertickUppernumbertickCurrentnumberfeeGrowthGlobal0X128defaultfeeGrowthGlobal1X128defaultReturns‚Äãdefault[]Defined in‚Äãutils/tickLibrary.ts:27Helpful?PreviousTickNextTickListTable of contentsConstructorsMethodsConstructorsconstructorMethodsgetFeeGrowthInsideDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
670,p.org sdk swap widget reference v2#optional parameters,"p.org sdk swap widget reference v2#optional parameters.    API V2 Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap WidgetOverviewGuidesTechnical ReferenceAPI V2 ReferenceAPI V1 Reference (Deprecated)web3-reactCore SDKV2 SDKV1 SDKüè†Swap WidgetTechnical ReferenceAPI V2 ReferenceHelpful?On this pageSwap Widget API V2 ReferenceRecommended Parameters‚ÄãProp NameProp TypeDefault ValueDescriptionproviderJsonRpcProvider or Eip1193ProviderundefinedAn EIP-1193 provider. See Web3 provider.jsonRpcUrlMap{ [chainId: number]: string[] }JSON_RPC_FALLBACK_ENDPOINTSMapping of your JSON-RPC endpoint URLs indexed by chainId, used to provide trade quotes prior to the user connecting a wallet. If none are provided for a chain, the widget will fallback to public JSON-RPC endpoints, which are unreliable and rate-limited. See JSON-RPC Endpoints.Optional Parameters‚ÄãProp NameProp TypeDefault ValueDescriptionconvenienceFeenumberundefinedOptionally, you may charge a convenience fee on top of swaps executed through your web app. The allowed range is 1 to 100 basis points paid in the output token of a swap, consistent with the Uniswap v3 Periphery contract.convenienceFeeRecipient{[chainId: number]: string}undefinedThe address to receive the convenience fee on each network. Required if convenienceFee is provided.defaultChainIdnumber1You may specify which chainId you want to prompt a user to connect their wallet to. See a list of all chains supported on widget.defaultInputTokenAddress{[chainId: number]: string}string or 'NATIVE'Address of the token to be selected by default in the input field (e.g. USDC) for each network chain ID. If left empty the widget will use the native token of the connected chain as default. This can be explicitly defined by the special string 'NATIVE'. For convenience you may pass a single string instead of a chainId mapping. In this case, the widget will assume that string corresponds to an L1 Ethereum address with chaindId=1. Any addresses provided in this parameter must be included in the tokenList.defaultInputAmountnumber0Default amount for the input field (e.g. 1 ETH). This value will respect the decimals of the defaultInputTokenAddress. This parameter is valid only if defaultInputTokenAddress is also set. This parameter is mutually exclusive with defaultOutputTokenAmount, so you may set only one of defaultInputTokenAmount and defaultOutputTokenAmount.defaultOutputTokenAddress{[chainId: number]: string}string or undefinedAddress of the token to be selected by default in the input field (e.g. USDC) for each network chain ID. None if left empty. Any addresses provided in this parameter must be included in the tokenList.defaultOutputAmountnumber0Default amount for the input field (e.g. 100 USDC). This value will respect the decimals of the defaultOutputTokenAddress. This parameter is mutually exclusive with defaultInputTokenAmount, so you may set only one of defaultInputTokenAmount and defaultOutputTokenAmount.hideConnectionUIbooleanfalseHide the widget's built-in wallet connection UI, including the connected account chip & 'Connect wallet to swap' button.localeSupportedLocaleen-USSpecifies an explicit locale to use for the widget interface. This can be set to one of the values exported by the library in SUPPORTED_LOCALES.onConnectWalletClick() => void or () => Promise<boolean>undefinedIf passed, allows you to add custom behavior when the user clicks on the 'Connect your wallet to swap' button. To manage displaying the widget's built-in wallet connection modal, return a resolved promise with resolve(true/false).onSwitchChain(addChainParameter: AddEthereumChainParameter) => void or Promise<void>undefinedAn integration hook called when the user tries to switch chains. If the hook returns a Promise, it is assumed the integrator is attempting to switch the chain, and no further attempts will be made. If that Promise rejects, the error will be ignored so as not to crash the widget.onErrorErrorHandlerundefinedAn error handler which receives any Javascript errors that occur in the widget. This can be used for collecting error metrics.onReviewSwapClick() => void or () => Promise<boolean>undefinedIf passed, allows you to add custom behavior when the user clicks on the 'review swap' button. To manage progression to the review screen (i.e. to add a pre-swap warning speedbump), return a resolved promise with resolve(true/false).onTokenSelectorClick(f: Field) => void \| (f: Field) => Promise<boolean \| void>undefinedA click handler fired with the selected Field ('INPUT'\|'OUTPUT') when the user clicks on a token selector dropdown. To manage progression to the native token selector view (i.e. to utilize your own external token selector UI), return a resolved promise with resolve(true/false).onTxFail(error: Error, data: any) => voidundefinedAn error handler which receives error data for on-chain transaction failures. Does not include when user cancels a transaction or if a transaction isn't able to be submitted.onTxSubmit(txHash: string, data: any) => voidundefinedA handler that receives the transaction hash and related data when a user submits a transaction.onTxSuccess(txHash: string, data: any) => voidundefinedA handler that receives the transaction hash and related data when a transaction succeeds on-chain.routerUrlstringundefinedOptionally provide a base URL to your own hosted instance of the Uniswap Router API. If none is provided, the optimal trade route is computed by running the @uniswap/smart-order-router package locally in the browser; this can take a few seconds to load & is slower. You also may be able to find more optimal routes using the Router API! See more about deploying the Router API.themeThemelightThemeSpecifies a custom theme (colors, font, and border radii). See Customizing the Theme.tokenListstringTokenInfo[]Specifies the set of tokens that appear by default in the token selector list. Accepts either a URI of a token list as defined by the Token Lists standard, or an inline array of tokens. If none is provided, the Uniswap Labs default token list will be used. See Customizing the Default Token List.widthnumber or string360Specifies the width of the widget. If specified as a number, this is in pixels; otherwise, it is interpreted as a CSS <length> data type. Recommended width is 360px. Minimum width is 300px. See Customizing the Width.brandedFooterbooleantrueEnables the ""Powered by Uniswap"" footer at the bottom of the widget.dialogHTMLDivElementundefinedSpecifies the element to portal widget dialogs (e.g. Summary, Transaction dialogs) into.dialogOptionsDialogOptionsundefinedSpecifies more custom dialog behavior, like transition animations.Subscribing to Events‚ÄãDuring the lifecycle of the swap widget, most of the events you will need are available on the web3 provider. For example, the below snippet shows how to listen for events when the wallet account changes or a new wallet connects. You can see more event examples in the MetaMask docs.// Subscribe to messagesinterface ProviderMessage { type: string; data: unknown;}ethereum.on( 'message', handler: (message: ProviderMessage) => void);CopyQuestions?Join the Discord channel to ask questions and get support from the Uniswap community.Helpful?PreviousExample ThemesNextAPI V1 Reference (Deprecated)Recommended ParametersOptional ParametersSubscribing to EventsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
671,p.org contracts v2 reference smart contracts pair,"p.org contracts v2 reference smart contracts pair.    Pair | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsPairHelpful?On this pagePairThis documentation covers Uniswap-specific functionality. For ERC-20 functionality, see Pair (ERC-20).CodeUniswapV2Pair.solAddressSee Pair Addresses.EventsMint‚Äãevent Mint(address indexed sender, uint amount0, uint amount1);CopyEmitted each time liquidity tokens are created via mint.Burn‚Äãevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);CopyEmitted each time liquidity tokens are destroyed via burn.Swap‚Äãevent Swap( address indexed sender, uint amount0In, uint amount1In, uint amount0Out, uint amount1Out, address indexed to);CopyEmitted each time a swap occurs via swap.Sync‚Äãevent Sync(uint112 reserve0, uint112 reserve1);CopyEmitted each time reserves are updated via mint, burn, swap, or sync.Read-Only FunctionsMINIMUM_LIQUIDITY‚Äãfunction MINIMUM_LIQUIDITY() external pure returns (uint);CopyReturns 1000 for all pairs. See Minimum Liquidity.factory‚Äãfunction factory() external view returns (address);CopyReturns the factory address.token0‚Äãfunction token0() external view returns (address);CopyReturns the address of the pair token with the lower sort order.token1‚Äãfunction token1() external view returns (address);CopyReturns the address of the pair token with the higher sort order.getReserves‚Äãfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);CopyReturns the reserves of token0 and token1 used to price trades and distribute liquidity. See Pricing. Also returns the block.timestamp (mod 2**32) of the last block during which an interaction occured for the pair.price0CumulativeLast‚Äãfunction price0CumulativeLast() external view returns (uint);CopySee Oracles.price1CumulativeLast‚Äãfunction price1CumulativeLast() external view returns (uint);CopySee Oracles.kLast‚Äãfunction kLast() external view returns (uint);CopyReturns the product of the reserves as of the most recent liquidity event. See Protocol Charge Calculation.State-Changing Functionsmint‚Äãfunction mint(address to) external returns (uint liquidity);CopyCreates pool tokens.Emits Mint, Sync, Transfer.burn‚Äãfunction burn(address to) external returns (uint amount0, uint amount1);CopyDestroys pool tokens.Emits Burn, Sync, Transfer.swap‚Äãfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;CopySwaps tokens. For regular swaps, data.length must be 0. Also see Flash Swaps.Emits Swap, Sync.skim‚Äãfunction skim(address to) external;CopySee the whitepaper.sync‚Äãfunction sync() external;CopySee the whitepaper.Emits Sync.Interfaceimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol';Copypragma solidity >=0.5.0;interface IUniswapV2Pair { event Approval(address indexed owner, address indexed spender, uint value); event Transfer(address indexed from, address indexed to, uint value); function name() external pure returns (string memory); function symbol() external pure returns (string memory); function decimals() external pure returns (uint8); function totalSupply() external view returns (uint); function balanceOf(address owner) external view returns (uint); function allowance(address owner, address spender) external view returns (uint); function approve(address spender, uint value) external returns (bool); function transfer(address to, uint value) external returns (bool); function transferFrom(address from, address to, uint value) external returns (bool); function DOMAIN_SEPARATOR() external view returns (bytes32); function PERMIT_TYPEHASH() external pure returns (bytes32); function nonces(address owner) external view returns (uint); function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external; event Mint(address indexed sender, uint amount0, uint amount1); event Burn(address indexed sender, uint amount0, uint amount1, address indexed to); event Swap(  address indexed sender,  uint amount0In,  uint amount1In,  uint amount0Out,  uint amount1Out,  address indexed to ); event Sync(uint112 reserve0, uint112 reserve1); function MINIMUM_LIQUIDITY() external pure returns (uint); function factory() external view returns (address); function token0() external view returns (address); function token1() external view returns (address); function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast); function price0CumulativeLast() external view returns (uint); function price1CumulativeLast() external view returns (uint); function kLast() external view returns (uint); function mint(address to) external returns (uint liquidity); function burn(address to) external returns (uint amount0, uint amount1); function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external; function skim(address to) external; function sync() external;}CopyABIimport IUniswapV2Pair from '@uniswap/v2-core/build/IUniswapV2Pair.json'Copyhttps://unpkg.com/@uniswap/v2-core@1.0.0/build/IUniswapV2Pair.jsonEdit this pageHelpful?PreviousFactoryNextPair (ERC-20)MintBurnSwapSyncMINIMUM_LIQUIDITYfactorytoken0token1getReservesprice0CumulativeLastprice1CumulativeLastkLastmintburnswapskimsyncDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
672,p.org sdk v3 reference classes NonfungiblePositionManager,"p.org sdk v3 reference classes NonfungiblePositionManager.    NonfungiblePositionManager | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesNonfungiblePositionManagerHelpful?On this pageNonfungiblePositionManager@uniswap/v3-sdk / Exports / NonfungiblePositionManagerClass: NonfungiblePositionManagerTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãaddCallParameterscollectCallParameterscreateCallParametersencodeCollectencodeCreateremoveCallParameterssafeTransferFromParametersConstructors‚Äãconstructor‚Äã‚Ä¢ Private new NonfungiblePositionManager()Cannot be constructed.Defined in‚ÄãnonfungiblePositionManager.ts:181Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚ÄãnonfungiblePositionManager.ts:176Methods‚ÄãaddCallParameters‚Äã‚ñ∏ Static addCallParameters(position, options): MethodParametersParameters‚ÄãNameTypepositionPositionoptionsAddLiquidityOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:199collectCallParameters‚Äã‚ñ∏ Static collectCallParameters(options): MethodParametersParameters‚ÄãNameTypeoptionsCollectOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:326createCallParameters‚Äã‚ñ∏ Static createCallParameters(pool): MethodParametersParameters‚ÄãNameTypepoolPoolReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:192encodeCollect‚Äã‚ñ∏ Static Private encodeCollect(options): string[]Parameters‚ÄãNameTypeoptionsCollectOptionsReturns‚Äãstring[]Defined in‚ÄãnonfungiblePositionManager.ts:286encodeCreate‚Äã‚ñ∏ Static Private encodeCreate(pool): stringParameters‚ÄãNameTypepoolPoolReturns‚ÄãstringDefined in‚ÄãnonfungiblePositionManager.ts:183removeCallParameters‚Äã‚ñ∏ Static removeCallParameters(position, options): MethodParametersProduces the calldata for completely or partially exiting a positionParameters‚ÄãNameTypeDescriptionpositionPositionThe position to exitoptionsRemoveLiquidityOptionsAdditional information necessary for generating the calldataReturns‚ÄãMethodParametersThe call parametersDefined in‚ÄãnonfungiblePositionManager.ts:341safeTransferFromParameters‚Äã‚ñ∏ Static safeTransferFromParameters(options): MethodParametersParameters‚ÄãNameTypeoptionsSafeTransferOptionsReturns‚ÄãMethodParametersDefined in‚ÄãnonfungiblePositionManager.ts:416Helpful?PreviousNoTickDataProviderNextPaymentsTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsaddCallParameterscollectCallParameterscreateCallParametersencodeCollectencodeCreateremoveCallParameterssafeTransferFromParametersDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
673,p.org sdk v3 reference classes Route#chainid,"p.org sdk v3 reference classes Route#chainid.    Route | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesRouteHelpful?On this pageRoute@uniswap/v3-sdk / Exports / RouteClass: Route<TInput, TOutput>Represents a list of pools through which a swap can occurType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input tokenTOutputextends CurrencyThe output tokenTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_midPriceinputoutputpoolstokenPathAccessors‚ÄãchainIdmidPriceConstructors‚Äãconstructor‚Äã‚Ä¢ new Route<TInput, TOutput>(pools, input, output)Creates an instance of route.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDescriptionpoolsPool[]An array of Pool objects, ordered by the route the swap will takeinputTInputThe input tokenoutputTOutputThe output tokenDefined in‚Äãentities/route.ts:25Properties‚Äã_midPrice‚Äã‚Ä¢ Private _midPrice: null | Price<TInput, TOutput> = nullDefined in‚Äãentities/route.ts:17input‚Äã‚Ä¢ Readonly input: TInputDefined in‚Äãentities/route.ts:14output‚Äã‚Ä¢ Readonly output: TOutputDefined in‚Äãentities/route.ts:15pools‚Äã‚Ä¢ Readonly pools: Pool[]Defined in‚Äãentities/route.ts:12tokenPath‚Äã‚Ä¢ Readonly tokenPath: Token[]Defined in‚Äãentities/route.ts:13Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns‚ÄãnumberDefined in‚Äãentities/route.ts:54midPrice‚Äã‚Ä¢ get midPrice(): Price<TInput, TOutput>Returns the mid price of the routeReturns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/route.ts:61Helpful?PreviousPositionLibraryNextSelfPermitType parametersTable of contentsConstructorsPropertiesAccessorsConstructorsconstructorProperties_midPriceinputoutputpoolstokenPathAccessorschainIdmidPriceDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
674,p.org contracts v3 reference periphery libraries HexStrings,p.org contracts v3 reference periphery libraries HexStrings.    HexStrings | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesBase64BytesLibCallbackValidationChainIdHexStringsLiquidityAmountsNFTDescriptorNFTSVGOracleLibraryPathPoolAddressPoolTicksCounterPositionKeyTokenRatioSortOrderTransferHelperWeightedOracleLibraryStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryLibrariesHexStringsHelpful?On this pageHexStringsFunctions‚ÄãtoHexString‚Äã function toHexString( ) internal returns (string)CopyConverts a uint256 to its ASCII string hexadecimal representation with fixed length.Credit to Open Zeppelin under MIT license https://github.com/OpenZeppelin/openzeppelin-contracts/blob/243adff49ce1700e0ecb99fe522fb16cff1d1ddc/contracts/utils/Strings.sol#L55toHexStringNoPrefix‚Äã function toHexStringNoPrefix( ) internal returns (string)CopyEdit this pageHelpful?PreviousChainIdNextLiquidityAmountsFunctionstoHexStringtoHexStringNoPrefixDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
675,p.org contracts v1 guides trade tokens,"p.org contracts v1 guides trade tokens.    Trade Tokens | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 ProtocolOverviewGuidesConnect to UniswapPool LiquidityTrade TokensCustom LinkingIframe IntegrationToken ListingTechnical ReferenceFactoryExchangeInterfacesüè†V1 ProtocolGuidesTrade TokensHelpful?On this pageTrade TokensIn Uniswap, there is a separate exchange contract for each ERC20 token. These exchanges hold reserves of both ETH and their associated ERC20. Instead of waiting to be matched in an order-book, users can make trades against the reserves at any time. Reserves are pooled between a decentralized network of liquidity providers who collect fees on every trade.Pricing is automatic, based on the x * y = k market making formula which automatically adjusts prices based off the relative sizes of the two reserves and the size of the incoming trade. Since all tokens share ETH as a common pair, it is used as an intermediary asset for direct trading between any ERC20 ‚áÑ ERC20 pair.ETH ‚áÑ ERC20 Calculations‚ÄãThe variables needed to determine price when trading between ETH and ERC20 tokens is:ETH reserve size of the ERC20 exchangeERC20 reserve size of the ERC20 exchangeAmount sold (input) or amount bought (output)Amount Bought (sell order)‚ÄãFor sell orders (exact input), the amount bought (output) is calculated:// Sell ETH for ERC20const inputAmount = userInputEthValueconst inputReserve = web3.eth.getBalance(exchangeAddress)const outputReserve = tokenContract.methods.balanceOf(exchangeAddress).call()// Sell ERC20 for ETHconst inputAmount = userInputTokenValueconst inputReserve = tokenContract.methods.balanceOf(exchangeAddress).call()const outputReserve = web3.eth.getBalance(exchangeAddress)// Output amount boughtconst numerator = inputAmount * outputReserve * 997const denominator = inputReserve * 1000 + inputAmount * 997const outputAmount = numerator / denominatorCopyAmount Sold (buy order)‚ÄãFor buy orders (exact output), the cost (input) is calculated:// Buy ERC20 with ETHconst outputAmount = userInputTokenValueconst inputReserve = web3.eth.getBalance(exchangeAddress)const outputReserve = tokenContract.methods.balanceOf(exchangeAddress).call()// Buy ETH with ERC20const outputAmount = userInputEthValueconst inputReserve = tokenContract.methods.balanceOf(exchangeAddress).call()const outputReserve = web3.eth.getBalance(exchangeAddress)// Costconst numerator = outputAmount * inputReserve * 1000const denominator = (outputReserve - outputAmount) * 997const inputAmount = numerator / denominator + 1CopyLiquidity Provider Fee‚ÄãThere is a 0.3% liquidity provider fee built into the price formula. This can be calculated:fee = inputAmount * 0.003CopyExchange Rate‚ÄãThe exchange rate is simply the output amount divided by the input amount.const rate = outputAmount / inputAmountCopyERC20 ‚áÑ ERC20 Calculations‚ÄãThe variables needed to determine price when trading between two ERC20 tokens is:ETH reserve size of the input ERC20 exchangeERC20 reserve size of the input ERC20 exchangeETH reserve size of the output ERC20 exchangeERC20 reserve size of the output ERC20 exchangeAmount sold (input) or amount bought (output)Amount Bought (sell order)‚ÄãFor sell orders (exact input), the amount bought (output) is calculated:// TokenA (ERC20) to ETH conversionconst inputAmountA = userInputTokenAValueconst inputReserveA = tokenContractA.methods.balanceOf(exchangeAddressA).call()const outputReserveA = web3.eth.getBalance(exchangeAddressA)const numeratorA = inputAmountA * outputReserveA * 997const denominatorA = inputReserveA * 1000 + inputAmountA * 997const outputAmountA = numeratorA / denominatorA// ETH to TokenB conversionconst inputAmountB = outputAmountAconst inputReserveB = web3.eth.getBalance(exchangeAddressB)const outputReserveB = tokenContract.methods.balanceOf(exchangeAddressB).call()const numeratorB = inputAmountB * outputReserveB * 997const denominatorB = inputReserveB * 1000 + inputAmountB * 997const outputAmountB = numeratorB / denominatorBCopyAmount Sold (buy order)‚ÄãFor buy orders (exact output), the cost (input) is calculated:// Buy TokenB with ETHconst outputAmountB = userInputTokenBValueconst inputReserveB = web3.eth.getBalance(exchangeAddressB)const outputReserveB = tokenContractB.methods.balanceOf(exchangeAddressB).call()// Costconst numeratorB = outputAmountB * inputReserveB * 1000const denominatorB = (outputReserveB - outputAmountB) * 997const inputAmountB = numeratorB / denominatorB + 1// Buy ETH with TokenAconst outputAmountA = userInputEthValueconst inputReserveA = tokenContractA.methods.balanceOf(exchangeAddressA).call()const outputReserveA = web3.eth.getBalance(exchangeAddressA)// Costconst numeratorA = outputAmountA * inputReserveA * 1000const denominatorA = (outputReserveA - outputAmountA) * 997const inputAmountA = numeratorA / denominatorA + 1CopyLiquidity Provider Fee‚ÄãThere is a 0.30% liquidity provider fee to swap from TokenA to ETH on the input exchange. There is another 0.3% liquidity provider fee to swap the remaining ETH to TokenB.const exchangeAFee = inputAmountA * 0.003const exchangeBFee = inputAmountB * 0.003CopySince users only inputs Token A, it can be represented to them as:const combinedFee = inputAmountA * 0.00591CopyExchange Rate‚ÄãThe exchange rate is simply the output amount divided by the input amount.const rate = outputAmountB / inputAmountACopyDeadlines‚ÄãMany Uniswap functions include a transaction deadline that sets a time after which a transaction can no longer be executed. This limits miners holding signed transactions for extended durations and executing them based off market movements. It also reduces uncertainty around transactions that take a long time to execute due to issues with gas price.Deadlines are calculated by adding the desired amount of time (in seconds) to the latest Ethereum block timestamp.web3.eth.getBlock('latest', (error, block) => { deadline = block.timestamp + 300 // transaction expires in 300 seconds (5 minutes)})CopyRecipients‚ÄãUniswap allows traders to swap tokens and transfer the output to a new recipient address. This allows for a type of payment where the payer sends one token and the payee receives another.ETH ‚áÑ ERC20 Trades‚ÄãComing soon...ERC20 ‚áÑ ERC20 Trades‚ÄãComing soon...Custom Pools‚ÄãComing soon...Edit this pageHelpful?PreviousPool LiquidityNextCustom LinkingETH ‚áÑ ERC20 CalculationsAmount Bought (sell order)Amount Sold (buy order)Liquidity Provider FeeExchange RateERC20 ‚áÑ ERC20 CalculationsAmount Bought (sell order)Amount Sold (buy order)Liquidity Provider FeeExchange RateDeadlinesRecipientsETH ‚áÑ ERC20 TradesERC20 ‚áÑ ERC20 TradesCustom PoolsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
676,p.org sdk core reference enums TradeType,p.org sdk core reference enums TradeType.    TradeType | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesenumsRoundingSupportedChainIdTradeTypeV2 SDKV1 SDKüè†Core SDKTechnical ReferenceenumsTradeTypeHelpful?On this pageTradeType@uniswap/sdk-core / Exports / TradeTypeEnumeration: TradeTypeTable of contents‚ÄãEnumeration Members‚ÄãEXACT_INPUTEXACT_OUTPUTEnumeration Members‚ÄãEXACT_INPUT‚Äã‚Ä¢ EXACT_INPUT = 0Defined in‚Äãconstants.ts:27EXACT_OUTPUT‚Äã‚Ä¢ EXACT_OUTPUT = 1Defined in‚Äãconstants.ts:28Helpful?PreviousSupportedChainIdNextOverviewTable of contentsEnumeration MembersEnumeration MembersEXACT_INPUTEXACT_OUTPUTDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
677,p.org concepts governance guide to voting,"p.org concepts governance guide to voting.    Beginners Guide to Voting | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchWhat Is Uniswap?The Uniswap ProtocolProtocol ConceptsGovernanceOverviewProcessBeginners Guide to VotingGlossaryAdversarial CircumstancesChangelogResearchResourcesGlossaryüè†GovernanceBeginners Guide to VotingHelpful?On this pageBeginners Guide to VotingThis guide contains everything you need to start voting in Uniswap Governance.In order to participate you will need:UNI TokensETH for transaction costsA browser with Metamask installedThe governance process begins in the Governance Forum, where you can find proposals under consideration, gather information about community sentiment, and engage with the community.Once a given proposal has made it through the proposal process and is ready for voting, it will appear in the Uniswap voting dashboard - where you can view all current and former Uniswap proposals.If a proposal is currently live for voting, it will say active next to the title. Clicking the proposal will show all the necessary information, documentation, and discussion needed for a voter to make an informed decision.Once a proposal has reached the voting stage it represents real, executable code which will alter the functionality of Uniswap Governance or anything under its jurisdiction - proper care should be taken to ensure that the code represented in the proposal has been audited and is found to be in good faith.Delegation‚ÄãUNI is a tradable asset and functions like most other standard ERC20 tokens, except it has a deeper power as a voting mechanism. In order for UNI to be used as a vote, the owner must first go through the delegation process. Delegating UNI binds the voting power of your tokens to an address so it may be used to vote. This address could be yourself, or a trusted party who you believe will vote in the best interest of Uniswap Governance.A democratic consensus, in our process called ‚Äúquorum‚Äù, is determined by the percentage of UNI tokens in favor of, or against, a proposal. 1% of all UNI must be cast in favor to submit a proposal, and 4% in order to pass a vote.To delegate your UNI tokens and enact their voting power, visit the Uniswap voting dashboard and click the button that says ‚ÄúUnlock Voting‚Äù.Once you click this button, you will see a screen that gives you the option to self delegate, or add a delegate address. If you wish to delegate your UNI voting power to your own address, click ‚ÄúSelf Delegate‚Äù.When you click ‚ÄúSelf Delegate‚Äù, a transaction will pop up in Metamask. If this doesn‚Äôt happen, double check that metamask is connected to app.uniswap.org, turn off any popup blockers, and try again. Click confirm, and once the transaction has processed, you will see that the voting dashboard homepage has changed to show the number of votes you have, and ‚ÄúDelegated to: Self‚Äù.If you wish to delegate your voting power to another party, choose ‚ÄúAdd Delegate‚Äù and enter the ethereum address of your chosen voting party.An important note: much like voter registration in a larger democracy, for UNI to be used in a vote it must be delegated before both the voting period and the preceding proposal period. This means if you want your vote to count, you must delegate it in anticipation of any proposal you may be interested in.If you are unsure of how best to vote and are interested in delegating your UNI voting power to another party, you can visit the Delegation Pitch section of the governance forum. Here parties participating in Uniswap Governance pitch their platform and voting agenda for users to read and discuss.Voting‚ÄãIf you have successfully self delegated and there is an active proposal, you are ready to vote in Uniswap Governance.To cast your vote, navigate to the proposals page and click on an active proposal.After reviewing the attached details and deciding your opinion, choose ‚ÄúVote For‚Äù, or ‚ÄúVote Against‚Äù.Once you‚Äôve chosen, a window will pop up allowing you to execute the vote.When you click to cast your vote, metamask will pop up asking you to confirm your transaction. Click ‚Äúsubmit‚Äù, wait a bit, and check that the transaction has been confirmed.That‚Äôs it! Once your transaction has been confirmed, you will have cast your vote and participated in Uniswap Governance.Helpful?PreviousProcessNextGlossaryDelegationVotingDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
678,p.org sdk v3 reference classes Route# midprice,"p.org sdk v3 reference classes Route# midprice.    Route | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesRouteHelpful?On this pageRoute@uniswap/v3-sdk / Exports / RouteClass: Route<TInput, TOutput>Represents a list of pools through which a swap can occurType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input tokenTOutputextends CurrencyThe output tokenTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_midPriceinputoutputpoolstokenPathAccessors‚ÄãchainIdmidPriceConstructors‚Äãconstructor‚Äã‚Ä¢ new Route<TInput, TOutput>(pools, input, output)Creates an instance of route.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDescriptionpoolsPool[]An array of Pool objects, ordered by the route the swap will takeinputTInputThe input tokenoutputTOutputThe output tokenDefined in‚Äãentities/route.ts:25Properties‚Äã_midPrice‚Äã‚Ä¢ Private _midPrice: null | Price<TInput, TOutput> = nullDefined in‚Äãentities/route.ts:17input‚Äã‚Ä¢ Readonly input: TInputDefined in‚Äãentities/route.ts:14output‚Äã‚Ä¢ Readonly output: TOutputDefined in‚Äãentities/route.ts:15pools‚Äã‚Ä¢ Readonly pools: Pool[]Defined in‚Äãentities/route.ts:12tokenPath‚Äã‚Ä¢ Readonly tokenPath: Token[]Defined in‚Äãentities/route.ts:13Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns‚ÄãnumberDefined in‚Äãentities/route.ts:54midPrice‚Äã‚Ä¢ get midPrice(): Price<TInput, TOutput>Returns the mid price of the routeReturns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/route.ts:61Helpful?PreviousPositionLibraryNextSelfPermitType parametersTable of contentsConstructorsPropertiesAccessorsConstructorsconstructorProperties_midPriceinputoutputpoolstokenPathAccessorschainIdmidPriceDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
679,p.org sdk v3 reference classes TickList#isbelowsmallest,"p.org sdk v3 reference classes TickList#isbelowsmallest.    TickList | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickListHelpful?On this pageTickList@uniswap/v3-sdk / Exports / TickListClass: TickListUtility methods for interacting with sorted lists of ticksTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãbinarySearchgetTickisAtOrAboveLargestisBelowSmallestnextInitializedTicknextInitializedTickWithinOneWordvalidateListConstructors‚Äãconstructor‚Äã‚Ä¢ Private new TickList()Cannot be constructedDefined in‚Äãutils/tickList.ts:18Methods‚ÄãbinarySearch‚Äã‚ñ∏ Static Private binarySearch(ticks, tick): numberFinds the largest tick in the list of ticks that is less than or equal to tickParameters‚ÄãNameTypeDescriptionticksreadonly Tick[]list of ticksticknumbertick to find the largest tick that is less than or equal to tickReturns‚ÄãnumberDefined in‚Äãutils/tickList.ts:62getTick‚Äã‚ñ∏ Static getTick(ticks, index): TickParameters‚ÄãNameTypeticksreadonly Tick[]indexnumberReturns‚ÄãTickDefined in‚Äãutils/tickList.ts:50isAtOrAboveLargest‚Äã‚ñ∏ Static isAtOrAboveLargest(ticks, tick): booleanParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberReturns‚ÄãbooleanDefined in‚Äãutils/tickList.ts:45isBelowSmallest‚Äã‚ñ∏ Static isBelowSmallest(ticks, tick): booleanParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberReturns‚ÄãbooleanDefined in‚Äãutils/tickList.ts:40nextInitializedTick‚Äã‚ñ∏ Static nextInitializedTick(ticks, tick, lte): TickParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberltebooleanReturns‚ÄãTickDefined in‚Äãutils/tickList.ts:83nextInitializedTickWithinOneWord‚Äã‚ñ∏ Static nextInitializedTickWithinOneWord(ticks, tick, lte, tickSpacing): [number, boolean]Parameters‚ÄãNameTypeticksreadonly Tick[]ticknumberltebooleantickSpacingnumberReturns‚Äã[number, boolean]Defined in‚Äãutils/tickList.ts:101validateList‚Äã‚ñ∏ Static validateList(ticks, tickSpacing): voidParameters‚ÄãNameTypeticksTick[]tickSpacingnumberReturns‚ÄãvoidDefined in‚Äãutils/tickList.ts:20Helpful?PreviousTickLibraryNextTickListDataProviderTable of contentsConstructorsMethodsConstructorsconstructorMethodsbinarySearchgetTickisAtOrAboveLargestisBelowSmallestnextInitializedTicknextInitializedTickWithinOneWordvalidateListDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
680,p.org contracts v3 reference core interfaces pool IUniswapV3PoolDerivedState,"p.org contracts v3 reference core interfaces pool IUniswapV3PoolDerivedState.    IUniswapV3PoolDerivedState | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesIERC20MinimalIUniswapV3FactoryIUniswapV3PoolIUniswapV3PoolDeployercallbackPoolIUniswapV3PoolActionsIUniswapV3PoolDerivedStateIUniswapV3PoolEventsIUniswapV3PoolImmutablesIUniswapV3PoolOwnerActionsIUniswapV3PoolStateLibrariesGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreInterfacesPoolIUniswapV3PoolDerivedStateHelpful?On this pageIUniswapV3PoolDerivedStateContains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.Functions‚Äãobserve‚Äã function observe( uint32[] secondsAgos ) external view returns (int56[] tickCumulatives, uint160[] secondsPerLiquidityCumulativeX128s)CopyReturns the cumulative tick and liquidity as of each timestamp secondsAgo from the current block timestampTo get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0]. The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.Parameters:‚ÄãNameTypeDescriptionsecondsAgosuint32[]From how long ago each cumulative tick and liquidity value should be returnedReturn Values:‚ÄãNameTypeDescriptiontickCumulativesint56[]Cumulative tick values as of each secondsAgos from the current block timestampsecondsPerLiquidityCumulativeX128suint160[]Cumulative seconds per liquidity-in-range value as of each secondsAgos from the current blocktimestampsnapshotCumulativesInside‚Äã function snapshotCumulativesInside( int24 tickLower, int24 tickUpper ) external returns (int56 tickCumulativeInside, uint160 secondsPerLiquidityInsideX128, uint32 secondsInside)CopyReturns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick rangeSnapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.Parameters:‚ÄãNameTypeDescriptiontickLowerint24The lower tick of the rangetickUpperint24The upper tick of the rangeReturn Values:‚ÄãNameTypeDescriptiontickCumulativeInsideint56The snapshot of the tick accumulator for the rangesecondsPerLiquidityInsideX128uint160The snapshot of seconds per liquidity for the rangesecondsInsideuint32The snapshot of seconds per liquidity for the rangeEdit this pageHelpful?PreviousIUniswapV3PoolActionsNextIUniswapV3PoolEventsFunctionsobservesnapshotCumulativesInsideDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
681,p.org contracts v2 concepts advanced topics pricing#pricing trades,"p.org contracts v2 concepts advanced topics pricing#pricing trades.    Pricing | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsFeesPricingUnderstanding ReturnsSecurityMathResearchGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolConceptsAdvanced TopicsPricingHelpful?On this pageHow are prices determined?As we learned in Protocol Overview, each pair on Uniswap is actually underpinned by a liquidity pool. Liquidity pools are smart contracts that hold balances of two unique tokens and enforces rules around depositing and withdrawing them. The primary rule is the constant product formula. When a token is withdrawn (bought), a proportional amount must be deposited (sold) to maintain the constant. The ratio of tokens in the pool, in combination with the constant product formula, ultimately determine the price that a swap executes at.How Uniswap handles pricesIn Uniswap V1, trades are always executed at the ""best possible"" price, calculated at execution time. Somewhat confusingly, this calculation is actually accomplished with one of two different formulas, depending on whether the trade specifies an exact input or output amount. Functionally, the difference between these two functions is miniscule, but the very existence of a difference increases conceptual complexity. Initial attempts to support both functions in V2 proved inelegant, and the decision was made to not provide any pricing functions in the core. Instead, pairs directly check whether the invariant was satisfied (accounting for fees) after every trade. This means that rather than relying on a pricing function to also enforce the invariant, V2 pairs simply and transparently ensure their own safety, a nice separation of concerns. One downstream benefit is that V2 pairs will more naturally support other flavors of trades which may emerge, (e.g. trading to a specific price at execution time).At a high level, in Uniswap V2, trades must be priced in the periphery. The good news is that the library provides a variety of functions designed to make this quite simple, and all swapping functions in the router are designed with this in mind.Pricing TradesWhen swapping tokens on Uniswap, it's common to want to receive as many output tokens as possible for an exact input amount, or to pay as few input tokens as possible for an exact output amount. In order to calculate these amounts, a contract must look up the current reserves of a pair, in order to understand what the current price is. However, it is not safe to perform this lookup and rely on the results without access to an external price.Say a smart contract naively wants to send 10 DAI to the DAI/WETH pair and receive as much WETH as it can get, given the current reserve ratio. If, when called, the naive smart contract simply looks up the current price and executes the trade, it is vulnerable to front-running and will likely suffer an economic loss. To see why, consider a malicious actor who sees this transaction before it is confirmed. They could execute a swap which dramatically changes the DAI/WETH price immediately before the naive swap goes through, wait for the naive swap to execute at a bad rate, and then swap to change the price back to what it was before the naive swap. This attack is fairly cheap and low-risk, and can typically be performed for a profit.To prevent these types of attacks, it's vital to submit swaps that have access to knowledge about the ""fair"" price their swap should execute at. In other words, swaps need access to an oracle, to be sure that the best execution they can get from Uniswap is close enough to what the oracle considers the ""true"" price. While this may sound complicated, the oracle can be as simple as an off-chain observation of the current market price of a pair. Because of arbitrage, it's typically the case that the ratio of the intra-block reserves of a pair is close to the ""true"" market price. So, if a user submits a trade with this knowledge in mind, they can ensure that the losses due to front-running are tightly bounded. This is how, for example, the Uniswap frontend ensure trade safety. It calculates the optimal input/output amounts given observed intra-block prices, and uses the router to perform the swap, which guarantees the swap will execute at a rate no less that x% worse than the observed intra-block rate, where x is a user-specified slippage tolerance (0.5% by default).There are, of course, other options for oracles, including native V2 oracles.Exact Input‚ÄãIf you'd like to send an exact amount of input tokens in exchange for as many output tokens as possible, you'll want to use getAmountsOut. The equivalent SDK function is getOutputAmount, or minimumAmountOut for slippage calculations.Exact Output‚ÄãIf you'd like to receive an exact amount of output tokens for as few input tokens as possible, you'll want to use getAmountsIn. The equivalent SDK function is getInputAmount, or maximumAmountIn for slippage calculations.Swap to Price‚ÄãFor this more advanced use case, see ExampleSwapToPrice.sol.Edit this pageHelpful?PreviousFeesNextUnderstanding ReturnsExact InputExact OutputSwap to PriceDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
682,p.org contracts universal router technical reference#looks rare 721,"p.org contracts universal router technical reference#looks rare 721.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
683,p.org sdk core reference enums SupportedChainId#optimism goerli,p.org sdk core reference enums SupportedChainId#optimism goerli.    SupportedChainId | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesenumsRoundingSupportedChainIdTradeTypeV2 SDKV1 SDKüè†Core SDKTechnical ReferenceenumsSupportedChainIdHelpful?On this pageSupportedChainId@uniswap/sdk-core / Exports / SupportedChainIdEnumeration: SupportedChainIdTable of contents‚ÄãEnumeration Members‚ÄãARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENEnumeration Members‚ÄãARBITRUM_ONE‚Äã‚Ä¢ ARBITRUM_ONE = 42161Defined in‚Äãconstants.ts:10ARBITRUM_RINKEBY‚Äã‚Ä¢ ARBITRUM_RINKEBY = 421611Defined in‚Äãconstants.ts:11CELO‚Äã‚Ä¢ CELO = 42220Defined in‚Äãconstants.ts:19CELO_ALFAJORES‚Äã‚Ä¢ CELO_ALFAJORES = 44787Defined in‚Äãconstants.ts:20GOERLI‚Äã‚Ä¢ GOERLI = 5Defined in‚Äãconstants.ts:7KOVAN‚Äã‚Ä¢ KOVAN = 42Defined in‚Äãconstants.ts:8MAINNET‚Äã‚Ä¢ MAINNET = 1Defined in‚Äãconstants.ts:4OPTIMISM‚Äã‚Ä¢ OPTIMISM = 10Defined in‚Äãconstants.ts:13OPTIMISM_GOERLI‚Äã‚Ä¢ OPTIMISM_GOERLI = 420Defined in‚Äãconstants.ts:14POLYGON‚Äã‚Ä¢ POLYGON = 137Defined in‚Äãconstants.ts:16POLYGON_MUMBAI‚Äã‚Ä¢ POLYGON_MUMBAI = 80001Defined in‚Äãconstants.ts:17RINKEBY‚Äã‚Ä¢ RINKEBY = 4Defined in‚Äãconstants.ts:6ROPSTEN‚Äã‚Ä¢ ROPSTEN = 3Defined in‚Äãconstants.ts:5Helpful?PreviousRoundingNextTradeTypeTable of contentsEnumeration MembersEnumeration MembersARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
684,p.org sdk core reference enums SupportedChainId,p.org sdk core reference enums SupportedChainId.    SupportedChainId | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesenumsRoundingSupportedChainIdTradeTypeV2 SDKV1 SDKüè†Core SDKTechnical ReferenceenumsSupportedChainIdHelpful?On this pageSupportedChainId@uniswap/sdk-core / Exports / SupportedChainIdEnumeration: SupportedChainIdTable of contents‚ÄãEnumeration Members‚ÄãARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENEnumeration Members‚ÄãARBITRUM_ONE‚Äã‚Ä¢ ARBITRUM_ONE = 42161Defined in‚Äãconstants.ts:10ARBITRUM_RINKEBY‚Äã‚Ä¢ ARBITRUM_RINKEBY = 421611Defined in‚Äãconstants.ts:11CELO‚Äã‚Ä¢ CELO = 42220Defined in‚Äãconstants.ts:19CELO_ALFAJORES‚Äã‚Ä¢ CELO_ALFAJORES = 44787Defined in‚Äãconstants.ts:20GOERLI‚Äã‚Ä¢ GOERLI = 5Defined in‚Äãconstants.ts:7KOVAN‚Äã‚Ä¢ KOVAN = 42Defined in‚Äãconstants.ts:8MAINNET‚Äã‚Ä¢ MAINNET = 1Defined in‚Äãconstants.ts:4OPTIMISM‚Äã‚Ä¢ OPTIMISM = 10Defined in‚Äãconstants.ts:13OPTIMISM_GOERLI‚Äã‚Ä¢ OPTIMISM_GOERLI = 420Defined in‚Äãconstants.ts:14POLYGON‚Äã‚Ä¢ POLYGON = 137Defined in‚Äãconstants.ts:16POLYGON_MUMBAI‚Äã‚Ä¢ POLYGON_MUMBAI = 80001Defined in‚Äãconstants.ts:17RINKEBY‚Äã‚Ä¢ RINKEBY = 4Defined in‚Äãconstants.ts:6ROPSTEN‚Äã‚Ä¢ ROPSTEN = 3Defined in‚Äãconstants.ts:5Helpful?PreviousRoundingNextTradeTypeTable of contentsEnumeration MembersEnumeration MembersARBITRUM_ONEARBITRUM_RINKEBYCELOCELO_ALFAJORESGOERLIKOVANMAINNETOPTIMISMOPTIMISM_GOERLIPOLYGONPOLYGON_MUMBAIRINKEBYROPSTENDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
685,p.org sdk v3 reference classes Staker#collectrewards,"p.org sdk v3 reference classes Staker#collectrewards.    Staker | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesStakerHelpful?On this pageStaker@uniswap/v3-sdk / Exports / StakerClass: StakerTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINCENTIVE_KEY_ABIINTERFACEMethods‚Äã_encodeIncentiveKeycollectRewardsencodeClaimencodeDepositwithdrawTokenConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new Staker()Defined in‚Äãstaker.ts:72Properties‚ÄãINCENTIVE_KEY_ABI‚Äã‚ñ™ Static Private INCENTIVE_KEY_ABI: string = 'tuple(address rewardToken, address pool, uint256 startTime, uint256 endTime, address refundee)'Defined in‚Äãstaker.ts:73INTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚Äãstaker.ts:70Methods‚Äã_encodeIncentiveKey‚Äã‚ñ∏ Static Private _encodeIncentiveKey(incentiveKey): ObjectParameters‚ÄãNameTypeDescriptionincentiveKeyIncentiveKeyAn IncentiveKey which represents a unique staking program.Returns‚ÄãObjectAn encoded IncentiveKey to be read by ethersDefined in‚Äãstaker.ts:194collectRewards‚Äã‚ñ∏ Static collectRewards(incentiveKeys, options): MethodParametersNote: A tokenId can be staked in many programs but to claim rewards and continue the program you must unstake, claim, and then restake.Parameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]An IncentiveKey or array of IncentiveKeys that tokenId is staked in. Input an array of IncentiveKeys to claim rewards for each program.optionsClaimOptionsClaimOptions to specify tokenId, recipient, and amount wanting to collect. Note that you can only specify one amount and one recipient across the various programs if you are collecting from multiple programs at once.Returns‚ÄãMethodParametersDefined in‚Äãstaker.ts:107encodeClaim‚Äã‚ñ∏ Static Private encodeClaim(incentiveKey, options): string[]To claim rewards, must unstake and then claim.Parameters‚ÄãNameTypeDescriptionincentiveKeyIncentiveKeyThe unique identifier of a staking program.optionsClaimOptionsOptions for producing the calldata to claim. Can't claim unless you unstake.Returns‚Äãstring[]The calldatas for 'unstakeToken' and 'claimReward'.Defined in‚Äãstaker.ts:82encodeDeposit‚Äã‚ñ∏ Static encodeDeposit(incentiveKeys): stringParameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]A single IncentiveKey or array of IncentiveKeys to be encoded and used in the data parameter in safeTransferFromReturns‚ÄãstringAn IncentiveKey as a stringDefined in‚Äãstaker.ts:173withdrawToken‚Äã‚ñ∏ Static withdrawToken(incentiveKeys, withdrawOptions): MethodParametersParameters‚ÄãNameTypeDescriptionincentiveKeysIncentiveKey | IncentiveKey[]A list of incentiveKeys to unstake from. Should include all incentiveKeys (unique staking programs) that options.tokenId is staked in.withdrawOptionsFullWithdrawOptionsOptions for producing claim calldata and withdraw calldata. Can't withdraw without unstaking all programs for tokenId.Returns‚ÄãMethodParametersCalldata for unstaking, claiming, and withdrawing.Defined in‚Äãstaker.ts:136Helpful?PreviousSqrtPriceMathNextSwapMathTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINCENTIVE_KEY_ABIINTERFACEMethods_encodeIncentiveKeycollectRewardsencodeClaimencodeDepositwithdrawTokenDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
686,p.org sdk v3 reference classes TickList#gettick,"p.org sdk v3 reference classes TickList#gettick.    TickList | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickListHelpful?On this pageTickList@uniswap/v3-sdk / Exports / TickListClass: TickListUtility methods for interacting with sorted lists of ticksTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãbinarySearchgetTickisAtOrAboveLargestisBelowSmallestnextInitializedTicknextInitializedTickWithinOneWordvalidateListConstructors‚Äãconstructor‚Äã‚Ä¢ Private new TickList()Cannot be constructedDefined in‚Äãutils/tickList.ts:18Methods‚ÄãbinarySearch‚Äã‚ñ∏ Static Private binarySearch(ticks, tick): numberFinds the largest tick in the list of ticks that is less than or equal to tickParameters‚ÄãNameTypeDescriptionticksreadonly Tick[]list of ticksticknumbertick to find the largest tick that is less than or equal to tickReturns‚ÄãnumberDefined in‚Äãutils/tickList.ts:62getTick‚Äã‚ñ∏ Static getTick(ticks, index): TickParameters‚ÄãNameTypeticksreadonly Tick[]indexnumberReturns‚ÄãTickDefined in‚Äãutils/tickList.ts:50isAtOrAboveLargest‚Äã‚ñ∏ Static isAtOrAboveLargest(ticks, tick): booleanParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberReturns‚ÄãbooleanDefined in‚Äãutils/tickList.ts:45isBelowSmallest‚Äã‚ñ∏ Static isBelowSmallest(ticks, tick): booleanParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberReturns‚ÄãbooleanDefined in‚Äãutils/tickList.ts:40nextInitializedTick‚Äã‚ñ∏ Static nextInitializedTick(ticks, tick, lte): TickParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberltebooleanReturns‚ÄãTickDefined in‚Äãutils/tickList.ts:83nextInitializedTickWithinOneWord‚Äã‚ñ∏ Static nextInitializedTickWithinOneWord(ticks, tick, lte, tickSpacing): [number, boolean]Parameters‚ÄãNameTypeticksreadonly Tick[]ticknumberltebooleantickSpacingnumberReturns‚Äã[number, boolean]Defined in‚Äãutils/tickList.ts:101validateList‚Äã‚ñ∏ Static validateList(ticks, tickSpacing): voidParameters‚ÄãNameTypeticksTick[]tickSpacingnumberReturns‚ÄãvoidDefined in‚Äãutils/tickList.ts:20Helpful?PreviousTickLibraryNextTickListDataProviderTable of contentsConstructorsMethodsConstructorsconstructorMethodsbinarySearchgetTickisAtOrAboveLargestisBelowSmallestnextInitializedTicknextInitializedTickWithinOneWordvalidateListDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
687,p.org contracts v3 guides flash integrations flash callback,"p.org contracts v3 guides flash integrations flash callback.    The Flash Callback | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGetting StartedCalling FlashThe Flash CallbackThe Final ContractGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolGuidesImplement Flash SwapsThe Flash CallbackHelpful?On this pageThe Flash CallbackSetting Up The Callback‚ÄãHere we will override the flash callback with our custom logic to execute the desired swaps and pay the profits to the original msg.sender.Declare the uniswapV3FlashCallback function and override it. function uniswapV3FlashCallback(  uint256 fee0,  uint256 fee1,  bytes calldata data ) external override {CopyDeclare a variable decoded in memory and assign it to the decoded data previously encoded into the calldata.  FlashCallbackData memory decoded = abi.decode(data, (FlashCallbackData));CopyEach callback must be validated to verify that the call originated from a genuine V3 pool. Otherwise, the pool contract would be vulnerable to attack via an EOA manipulating the callback function.  CallbackValidation.verifyCallback(factory, decoded.poolKey);CopyAssign local variables of type address as token0 and token1 to approve the router to interact with the tokens from the flash.  address token0 = decoded.poolKey.token0;  address token1 = decoded.poolKey.token1;  TransferHelper.safeApprove(token0, address(swapRouter), decoded.amount0);  TransferHelper.safeApprove(token1, address(swapRouter), decoded.amount1);CopyCode in a minimum amount out for both of the upcoming swaps, such that the following swaps will revert if we do not receive a profitable trade.  uint256 amount1Min = LowGasSafeMath.add(decoded.amount1, fee1);  uint256 amount0Min = LowGasSafeMath.add(decoded.amount0, fee0);CopyInitiating A Swap‚ÄãCall the first of two swaps, calling exactInputSingle on the router interface contract. In this call, we are using the previously declared amount0In as the minimum amount out, and assigning the returned balance of the swap to amountOut0.Most of These function arguments have already been discussed, except for two new introductions:sqrtPriceLimitX96: This value limits the price that the swap can change the pool to. Remember that price is always expressed in the pool contract as token1 in terms of token0. This is useful for circumstances where the user wants to swap up until a specific price. For this example, we will set it to 0, which makes to make the argument inactive.deadline: this is the timestamp after which the transaction will revert, to protect the transaction from dramatic changes in price environment that can happen if the transaction is pending for too long. For this example, we will set it far in the future for the sake of simplicity.The first swap takes the amount1 that we withdrew from the original pool, and passes that amount as the input amount for a single swap that trades a fixed input for the maximum amount of possible output. It calls this function on the pool determined by our previous token pair, but with the next fee tier in our list of three.uint256 amountOut0 =   swapRouter.exactInputSingle(    ISwapRouter.ExactInputSingleParams({     tokenIn: token1,     tokenOut: token0,     fee: decoded.poolFee2,     recipient: address(this),     deadline: block.timestamp + 200,     amountIn: decoded.amount1,     amountOutMinimum: amount0Min,     sqrtPriceLimitX96: 0    })   );CopyPopulate the second of two swaps, this time with the last fee tier and with the amount0 that we withdrew from the original pool.uint256 amountOut1 =   swapRouter.exactInputSingle(    ISwapRouter.ExactInputSingleParams({     tokenIn: token0,     tokenOut: token1,     fee: decoded.poolFee3,     recipient: address(this),     deadline: block.timestamp + 200,     amountIn: decoded.amount0,     amountOutMinimum: amount1Min,     sqrtPriceLimitX96: 0    })   );CopyPaying back the pool‚ÄãTo pay the original pool back for the flash transaction, first calculate the balance due to it and approve the router to transfer the tokens in our contract back to the pool.uint256 amount0Owed = LowGasSafeMath.add(decoded.amount0, fee0);uint256 amount1Owed = LowGasSafeMath.add(decoded.amount1, fee1);TransferHelper.safeApprove(token0, address(this), amount0Owed);TransferHelper.safeApprove(token1, address(this), amount1Owed);CopyIf there is any balance due to the token, use simple logic to call pay. Remember that the callback function is being called by the pool itself, which is why we can call pay despite the function being marked internal.if (amount0Owed > 0) pay(token0, address(this), msg.sender, amount0Owed);if (amount1Owed > 0) pay(token1, address(this), msg.sender, amount1Owed);CopySend the profits to the payer: the original msg.sender of the initFlash function, which executed the flash transaction and in turn triggered the callback. if (amountOut0 > amount0Owed) {   uint256 profit0 = LowGasSafeMath.sub(amountOut0, amount0Owed);   TransferHelper.safeApprove(token0, address(this), profit0);   pay(token0, address(this), decoded.payer, profit0);  } if (amountOut1 > amount1Owed) {   uint256 profit1 = LowGasSafeMath.sub(amountOut1, amount1Owed);   TransferHelper.safeApprove(token0, address(this), profit1);   pay(token1, address(this), decoded.payer, profit1);  }CopyThe full function function uniswapV3FlashCallback(  uint256 fee0,  uint256 fee1,  bytes calldata data ) external override {  FlashCallbackData memory decoded = abi.decode(data, (FlashCallbackData));  CallbackValidation.verifyCallback(factory, decoded.poolKey);  address token0 = decoded.poolKey.token0;  address token1 = decoded.poolKey.token1;  TransferHelper.safeApprove(token0, address(swapRouter), decoded.amount0);  TransferHelper.safeApprove(token1, address(swapRouter), decoded.amount1);  // profitable check  // exactInputSingle will fail if this amount not met  uint256 amount1Min = LowGasSafeMath.add(decoded.amount1, fee1);  uint256 amount0Min = LowGasSafeMath.add(decoded.amount0, fee0);  // call exactInputSingle for swapping token1 for token0 in pool w/fee2  uint256 amountOut0 =   swapRouter.exactInputSingle(    ISwapRouter.ExactInputSingleParams({     tokenIn: token1,     tokenOut: token0,     fee: decoded.poolFee2,     recipient: address(this),     deadline: block.timestamp + 200,     amountIn: decoded.amount1,     amountOutMinimum: amount0Min,     sqrtPriceLimitX96: 0    })   );  // call exactInputSingle for swapping token0 for token 1 in pool w/fee3  uint256 amountOut1 =   swapRouter.exactInputSingle(    ISwapRouter.ExactInputSingleParams({     tokenIn: token0,     tokenOut: token1,     fee: decoded.poolFee3,     recipient: address(this),     deadline: block.timestamp + 200,     amountIn: decoded.amount0,     amountOutMinimum: amount1Min,     sqrtPriceLimitX96: 0    })   );  // end up with amountOut0 of token0 from first swap and amountOut1 of token1 from second swap  uint256 amount0Owed = LowGasSafeMath.add(decoded.amount0, fee0);  uint256 amount1Owed = LowGasSafeMath.add(decoded.amount1, fee1);  TransferHelper.safeApprove(token0, address(this), amount0Owed);  TransferHelper.safeApprove(token1, address(this), amount1Owed);  if (amount0Owed > 0) pay(token0, address(this), msg.sender, amount0Owed);  if (amount1Owed > 0) pay(token1, address(this), msg.sender, amount1Owed);  // if profitable pay profits to payer  if (amountOut0 > amount0Owed) {   uint256 profit0 = LowGasSafeMath.sub(amountOut0, amount0Owed);   TransferHelper.safeApprove(token0, address(this), profit0);   pay(token0, address(this), decoded.payer, profit0);  }  if (amountOut1 > amount1Owed) {   uint256 profit1 = LowGasSafeMath.sub(amountOut1, amount1Owed);   TransferHelper.safeApprove(token0, address(this), profit1);   pay(token1, address(this), decoded.payer, profit1);  } }CopyEdit this pageHelpful?PreviousCalling FlashNextThe Final ContractSetting Up The CallbackInitiating A SwapPaying back the poolDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
688,p.org sdk core reference classes Fraction#subtract,"p.org sdk core reference classes Fraction#subtract.    Fraction | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesFractionHelpful?On this pageFraction@uniswap/sdk-core / Exports / FractionClass: FractionHierarchy‚ÄãFraction‚Ü≥ CurrencyAmount‚Ü≥ Percent‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatornumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionConstructors‚Äãconstructor‚Äã‚Ä¢ new Fraction(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:107subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:138toSignificant‚Äã‚ñ∏ toSignificant(significantDigits, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:123tryParseFraction‚Äã‚ñ∏ Static Private tryParseFraction(fractionish): FractionParameters‚ÄãNameTypefractionishBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:33Helpful?PreviousEtherNextNativeCurrencyHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatornumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
689,p.org sdk core reference classes Fraction#tofixed,"p.org sdk core reference classes Fraction#tofixed.    Fraction | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesFractionHelpful?On this pageFraction@uniswap/sdk-core / Exports / FractionClass: FractionHierarchy‚ÄãFraction‚Ü≥ CurrencyAmount‚Ü≥ Percent‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatornumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionConstructors‚Äãconstructor‚Äã‚Ä¢ new Fraction(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:107subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:138toSignificant‚Äã‚ñ∏ toSignificant(significantDigits, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumberundefinedformatobjectundefinedroundingRoundingRounding.ROUND_HALF_UPReturns‚ÄãstringDefined in‚Äãentities/fractions/fraction.ts:123tryParseFraction‚Äã‚ñ∏ Static Private tryParseFraction(fractionish): FractionParameters‚ÄãNameTypefractionishBigintIsh | FractionReturns‚ÄãFractionDefined in‚Äãentities/fractions/fraction.ts:33Helpful?PreviousEtherNextNativeCurrencyHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatornumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificanttryParseFractionDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
690,p.org contracts universal router technical reference#owner check 1155,"p.org contracts universal router technical reference#owner check 1155.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
691,p.org sdk v3 overview,"p.org sdk v3 overview.    Overview | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKOverviewHelpful?On this pageThe Uniswap V3 SDKWelcome to the V3 Uniswap SDK!The Uniswap V3 SDK provides abstractions to assist you with interacting with the Uniswap V3 smart contracts in a Typescript/Javascript environment (e.g. websites, node scripts). It makes uses of the Core SDK to gain access to abstractions that are common amongst the Uniswap SDKs. With the SDK, you can manipulate data that has been queried from the EVM using libraries that assist with needs such as data modeling, protection from rounding errors, and compile time enforced typing.To begin, we recommend looking at our Guides which include runnable examples and walkthroughs of core usages. These guides will help you better understand how to use the SDK and integrate it into your application.For complete documentation of the SDK's offerings, see the Technical Reference.Installation‚ÄãTo interact with the V3 SDK we recommend installing though npm:npm i --save @uniswap/v3-sdknpm i --save @uniswap/sdk-coreCopyDeveloper Links‚ÄãV3 SDK Github RepoCore SDK Github RepoV3 SDK NPM Package Helpful?NextBackgroundInstallationDeveloper LinksDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
692,p.org sdk core overview,"p.org sdk core overview.    Overview | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceV2 SDKV1 SDKüè†Core SDKOverviewHelpful?The Uniswap Core SDKWelcome to the V3 Core SDK!The Uniswap Core SDK provides abstractions for other SDKs to use in a Typescript/Javascript environment. It is used throughout the Uniswap SDKs, such as the V3 SDK.This SDK is not expected to be used in isolation, but only as part of other SDKs.We recommend taking a look at the Technical Reference.ResourcesSDK Core Github RepoCore SDK NPM Package Helpful?PreviousSwitching ChainsNextOverviewDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
693,p.org sdk core reference classes CurrencyAmount#asfraction,"p.org sdk core reference classes CurrencyAmount#asfraction.    CurrencyAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesCurrencyAmountHelpful?On this pageCurrencyAmount@uniswap/sdk-core / Exports / CurrencyAmountClass: CurrencyAmount<T>Type parameters‚ÄãNameTypeTextends CurrencyHierarchy‚ÄãFraction‚Ü≥ CurrencyAmountTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãcurrencydecimalScaledenominatornumeratorAccessors‚ÄãasFractionquotientremainderwrappedMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new CurrencyAmount<T>(currency, numerator, denominator?)Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypecurrencyTnumeratorBigintIshdenominator?BigintIshOverrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/currencyAmount.ts:40Properties‚Äãcurrency‚Äã‚Ä¢ Readonly currency: TDefined in‚Äãentities/fractions/currencyAmount.ts:14decimalScale‚Äã‚Ä¢ Readonly decimalScale: defaultDefined in‚Äãentities/fractions/currencyAmount.ts:15denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47wrapped‚Äã‚Ä¢ get wrapped(): CurrencyAmount<Token>Returns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/fractions/currencyAmount.ts:91Methods‚Äãadd‚Äã‚ñ∏ add(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.addDefined in‚Äãentities/fractions/currencyAmount.ts:47divide‚Äã‚ñ∏ divide(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/currencyAmount.ts:64equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/currencyAmount.ts:59subtract‚Äã‚ñ∏ subtract(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/currencyAmount.ts:53toExact‚Äã‚ñ∏ toExact(format?): stringParameters‚ÄãNameTypeformatobjectReturns‚ÄãstringDefined in‚Äãentities/fractions/currencyAmount.ts:86toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformat?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/currencyAmount.ts:77toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/currencyAmount.ts:69fromFractionalAmount‚Äã‚ñ∏ Static fromFractionalAmount<T>(currency, numerator, denominator): CurrencyAmount<T>Construct a currency amount with a denominator that is not equal to 1Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currencynumeratorBigintIshthe numerator of the fractional token amountdenominatorBigintIshthe denominator of the fractional token amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:32fromRawAmount‚Äã‚ñ∏ Static fromRawAmount<T>(currency, rawAmount): CurrencyAmount<T>Returns a new currency amount instance from the unitless amount of token, i.e. the raw amountType parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currency in the amountrawAmountBigintIshthe raw token or ether amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:22Helpful?PreviousOverviewNextEtherType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiescurrencydecimalScaledenominatornumeratorAccessorsasFractionquotientremainderwrappedMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
694,p.org sdk 2.0.0 reference pair#getoutputamount,p.org sdk 2.0.0 reference pair#getoutputamount. 
695,p.org sdk v3 reference enums FeeAmount#low,"p.org sdk v3 reference enums FeeAmount#low.    FeeAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsFeeAmountinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceenumsFeeAmountHelpful?On this pageFeeAmount@uniswap/v3-sdk / Exports / FeeAmountEnumeration: FeeAmountThe default factory enabled fee amounts, denominated in hundredths of bips.Table of contents‚ÄãEnumeration Members‚ÄãHIGHLOWLOWESTMEDIUMEnumeration Members‚ÄãHIGH‚Äã‚Ä¢ HIGH = 10000Defined in‚Äãconstants.ts:14LOW‚Äã‚Ä¢ LOW = 500Defined in‚Äãconstants.ts:12LOWEST‚Äã‚Ä¢ LOWEST = 100Defined in‚Äãconstants.ts:11MEDIUM‚Äã‚Ä¢ MEDIUM = 3000Defined in‚Äãconstants.ts:13Helpful?PreviousTradeNextAllowedPermitArgumentsTable of contentsEnumeration MembersEnumeration MembersHIGHLOWLOWESTMEDIUMDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
696,p.org sdk v3 reference classes Pool#swap,"p.org sdk v3 reference classes Pool#swap.    Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesPoolHelpful?On this pagePool@uniswap/v3-sdk / Exports / PoolClass: PoolRepresents a V3 poolTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1Accessors‚ÄãchainIdtickSpacingtoken0Pricetoken1PriceMethods‚ÄãgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressConstructors‚Äãconstructor‚Äã‚Ä¢ new Pool(tokenA, tokenB, fee, sqrtRatioX96, liquidity, tickCurrent, ticks?)Construct a poolParameters‚ÄãNameTypeDefault valueDescriptiontokenATokenundefinedOne of the tokens in the pooltokenBTokenundefinedThe other token in the poolfeeFeeAmountundefinedThe fee in hundredths of a bips of the input amount of every swap that is collected by the poolsqrtRatioX96BigintIshundefinedThe sqrt of the current ratio of amounts of token1 to token0liquidityBigintIshundefinedThe current value of in range liquiditytickCurrentnumberundefinedThe current tick of the poolticksTickDataProvider | (Tick | TickConstructorArgs)[]NO_TICK_DATA_PROVIDER_DEFAULTThe current state of the pool ticks or a data provider that can return tick dataDefined in‚Äãentities/pool.ts:70Properties‚Äã_token0Price‚Äã‚Ä¢ Private Optional _token0Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:41_token1Price‚Äã‚Ä¢ Private Optional _token1Price: Price<Token, Token>Defined in‚Äãentities/pool.ts:42fee‚Äã‚Ä¢ Readonly fee: FeeAmountDefined in‚Äãentities/pool.ts:35liquidity‚Äã‚Ä¢ Readonly liquidity: defaultDefined in‚Äãentities/pool.ts:37sqrtRatioX96‚Äã‚Ä¢ Readonly sqrtRatioX96: defaultDefined in‚Äãentities/pool.ts:36tickCurrent‚Äã‚Ä¢ Readonly tickCurrent: numberDefined in‚Äãentities/pool.ts:38tickDataProvider‚Äã‚Ä¢ Readonly tickDataProvider: TickDataProviderDefined in‚Äãentities/pool.ts:39token0‚Äã‚Ä¢ Readonly token0: TokenDefined in‚Äãentities/pool.ts:33token1‚Äã‚Ä¢ Readonly token1: TokenDefined in‚Äãentities/pool.ts:34Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns the chain ID of the tokens in the pool.Returns‚ÄãnumberDefined in‚Äãentities/pool.ts:149tickSpacing‚Äã‚Ä¢ get tickSpacing(): numberReturns‚ÄãnumberDefined in‚Äãentities/pool.ts:317token0Price‚Äã‚Ä¢ get token0Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:109token1Price‚Äã‚Ä¢ get token1Price(): Price<Token, Token>Returns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1Returns‚ÄãPrice<Token, Token>Defined in‚Äãentities/pool.ts:124Methods‚ÄãgetInputAmount‚Äã‚ñ∏ getInputAmount(outputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given a desired output amount of a token, return the computed input amount and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptionoutputAmountCurrencyAmount<Token>the output amount for which to quote the input amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The input amount and the pool with updated stateDefined in‚Äãentities/pool.ts:185getOutputAmount‚Äã‚ñ∏ getOutputAmount(inputAmount, sqrtPriceLimitX96?): Promise<[CurrencyAmount<Token>, Pool]>Given an input amount of a token, return the computed output amount, and a pool with state updated after the tradeParameters‚ÄãNameTypeDescriptioninputAmountCurrencyAmount<Token>The input amount for which to quote the output amountsqrtPriceLimitX96?defaultThe Q64.96 sqrt price limitReturns‚ÄãPromise<[CurrencyAmount<Token>, Pool]>The output amount and the pool with updated stateDefined in‚Äãentities/pool.ts:159involvesToken‚Äã‚ñ∏ involvesToken(token): booleanReturns true if the token is either token0 or token1Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to checkReturns‚ÄãbooleanTrue if token is either token0 or tokenDefined in‚Äãentities/pool.ts:102priceOf‚Äã‚ñ∏ priceOf(token): Price<Token, Token>Return the price of the given token in terms of the other token in the pool.Parameters‚ÄãNameTypeDescriptiontokenTokenThe token to return price ofReturns‚ÄãPrice<Token, Token>The price of the given token, in terms of the other.Defined in‚Äãentities/pool.ts:141swap‚Äã‚ñ∏ Private swap(zeroForOne, amountSpecified, sqrtPriceLimitX96?): Promise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>Executes a swapParameters‚ÄãNameTypeDescriptionzeroForOnebooleanWhether the amount in is token0 or token1amountSpecifieddefaultThe amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96?defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapReturns‚ÄãPromise<{ amountCalculated: default ; liquidity: default ; sqrtRatioX96: default ; tickCurrent: number }>amountCalculatedsqrtRatioX96liquiditytickCurrentDefined in‚Äãentities/pool.ts:215getAddress‚Äã‚ñ∏ Static getAddress(tokenA, tokenB, fee, initCodeHashManualOverride?, factoryAddressOverride?): stringParameters‚ÄãNameTypetokenATokentokenBTokenfeeFeeAmountinitCodeHashManualOverride?stringfactoryAddressOverride?stringReturns‚ÄãstringDefined in‚Äãentities/pool.ts:44Helpful?PreviousPaymentsNextPositionTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_token0Price_token1PricefeeliquiditysqrtRatioX96tickCurrenttickDataProvidertoken0token1AccessorschainIdtickSpacingtoken0Pricetoken1PriceMethodsgetInputAmountgetOutputAmountinvolvesTokenpriceOfswapgetAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
697,p.org sdk 1.0.0 reference data #getttokenreserves,p.org sdk 1.0.0 reference data #getttokenreserves. 
698,p.org sdk v3 reference classes Trade#constructor,"p.org sdk v3 reference classes Trade#constructor.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTradeHelpful?On this pageTrade@uniswap/v3-sdk / Exports / TradeClass: Trade<TInput, TOutput, TTradeType>Represents a trade executed against a set of routes where some percentage of the input is split across each route.Each route has its own set of pools. Pools can not be re-used across routes.Does not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and when it is executed.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessors‚ÄãexecutionPriceinputAmountoutputAmountpriceImpactrouteMethods‚ÄãmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Trade<TInput, TOutput, TTradeType>(__namedParameters)Construct a trade by passing in the pre-computed property valuesType parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyTTradeTypeextends TradeTypeParameters‚ÄãNameType__namedParametersObject__namedParameters.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]__namedParameters.tradeTypeTTradeTypeDefined in‚Äãentities/trade.ts:397Properties‚Äã_executionPrice‚Äã‚Ä¢ Private _executionPrice: undefined | Price<TInput, TOutput>The cached result of the computed execution priceDefined in‚Äãentities/trade.ts:143_inputAmount‚Äã‚Ä¢ Private _inputAmount: undefined | CurrencyAmount<TInput>The cached result of the input amount computationDefined in‚Äãentities/trade.ts:97_outputAmount‚Äã‚Ä¢ Private _outputAmount: undefined | CurrencyAmount<TOutput>The cached result of the output amount computationDefined in‚Äãentities/trade.ts:120_priceImpact‚Äã‚Ä¢ Private _priceImpact: undefined | PercentThe cached result of the price impact computationDefined in‚Äãentities/trade.ts:164swaps‚Äã‚Ä¢ Readonly swaps: { inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]The swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.Defined in‚Äãentities/trade.ts:82tradeType‚Äã‚Ä¢ Readonly tradeType: TTradeTypeThe type of the trade, either exact in or exact out.Defined in‚Äãentities/trade.ts:91Accessors‚ÄãexecutionPrice‚Äã‚Ä¢ get executionPrice(): Price<TInput, TOutput>The price expressed in terms of output amount/input amount.Returns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/trade.ts:148inputAmount‚Äã‚Ä¢ get inputAmount(): CurrencyAmount<TInput>The input amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TInput>Defined in‚Äãentities/trade.ts:102outputAmount‚Äã‚Ä¢ get outputAmount(): CurrencyAmount<TOutput>The output amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TOutput>Defined in‚Äãentities/trade.ts:125priceImpact‚Äã‚Ä¢ get priceImpact(): PercentReturns the percent difference between the route's mid price and the price impactReturns‚ÄãPercentDefined in‚Äãentities/trade.ts:169route‚Äã‚Ä¢ get route(): Route<TInput, TOutput>DeprecatedDeprecated in favor of 'swaps' property. If the trade consists of multiple routes this will return an error.When the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.Returns‚ÄãRoute<TInput, TOutput>Defined in‚Äãentities/trade.ts:73Methods‚ÄãmaximumAmountIn‚Äã‚ñ∏ maximumAmountIn(slippageTolerance, amountIn?): CurrencyAmount<TInput>Get the maximum amount in that can be spent via this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountInCurrencyAmount<TInput>-Returns‚ÄãCurrencyAmount<TInput>The amount inDefined in‚Äãentities/trade.ts:456minimumAmountOut‚Äã‚ñ∏ minimumAmountOut(slippageTolerance, amountOut?): CurrencyAmount<TOutput>Get the minimum amount that must be received from this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountOutCurrencyAmount<TOutput>-Returns‚ÄãCurrencyAmount<TOutput>The amount outDefined in‚Äãentities/trade.ts:438worstExecutionPrice‚Äã‚ñ∏ worstExecutionPrice(slippageTolerance): Price<TInput, TOutput>Return the execution price after accounting for slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentthe allowed tolerated slippageReturns‚ÄãPrice<TInput, TOutput>The execution priceDefined in‚Äãentities/trade.ts:471bestTradeExactIn‚Äã‚ñ∏ Static bestTradeExactIn<TInput, TOutput>(pools, currencyAmountIn, currencyOut, __namedParameters?, currentPools?, nextAmountIn?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_INPUT>[]>Given a list of pools, and a fixed amount in, returns the top maxNumResults trades that go from an input token amount to an output token, making at most maxHops hops. Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyAmountInCurrencyAmount<TInput>undefinedused in recursion; the original value of the currencyAmountIn parametercurrencyOutTOutputundefinedthe desired currency out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountInCurrencyAmount<Currency>currencyAmountInexact amount of input currency to spendbestTradesTrade<TInput, TOutput, EXACT_INPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>[]>The exact in tradeDefined in‚Äãentities/trade.ts:495bestTradeExactOut‚Äã‚ñ∏ Static bestTradeExactOut<TInput, TOutput>(pools, currencyIn, currencyAmountOut, __namedParameters?, currentPools?, nextAmountOut?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>similar to the above method but instead targets a fixed output amount given a list of pools, and a fixed amount out, returns the top maxNumResults trades that go from an input token to an output token amount, making at most maxHops hops note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyInTInputundefinedthe currency to spendcurrencyAmountOutCurrencyAmount<TOutput>undefinedthe desired currency amount out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountOutCurrencyAmount<Currency>currencyAmountOutthe exact amount of currency outbestTradesTrade<TInput, TOutput, EXACT_OUTPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>The exact out tradeDefined in‚Äãentities/trade.ts:576createUncheckedTrade‚Äã‚ñ∏ Static createUncheckedTrade<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.inputAmountCurrencyAmount<TInput>-constructorArguments.outputAmountCurrencyAmount<TOutput>-constructorArguments.routeRoute<TInput, TOutput>-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:346createUncheckedTradeWithMultipleRoutes‚Äã‚ñ∏ Static createUncheckedTradeWithMultipleRoutes<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:377exactIn‚Äã‚ñ∏ Static exactIn<TInput, TOutput>(route, amountIn): Promise<Trade<TInput, TOutput, EXACT_INPUT>>Constructs an exact in trade with the given amount in and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact in tradeamountInCurrencyAmount<TInput>The amount being passed inReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>>The exact in tradeDefined in‚Äãentities/trade.ts:194exactOut‚Äã‚ñ∏ Static exactOut<TInput, TOutput>(route, amountOut): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>>Constructs an exact out trade with the given amount out and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact out tradeamountOutCurrencyAmount<TOutput>The amount returned by the tradeReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>>The exact out tradeDefined in‚Äãentities/trade.ts:209fromRoute‚Äã‚ñ∏ Static fromRoute<TInput, TOutput, TTradeType>(route, amount, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade by simulating swaps through the given routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>route to swap throughamountTTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>the amount specified, either input or output, depending on tradeTypetradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The routeDefined in‚Äãentities/trade.ts:226fromRoutes‚Äã‚ñ∏ Static fromRoutes<TInput, TOutput, TTradeType>(routes, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade from routes by simulating swapsType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionroutes{ amount: TTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]the routes to swap through and how much of the amount should be routed through eachtradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The tradeDefined in‚Äãentities/trade.ts:276Helpful?PreviousTickMathNextFeeAmountType parametersTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessorsexecutionPriceinputAmountoutputAmountpriceImpactrouteMethodsmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
699,p.org contracts v3 reference periphery interfaces IERC20Metadata,p.org contracts v3 reference periphery interfaces IERC20Metadata.    IERC20Metadata | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesIERC20MetadataIERC721PermitIMulticallINonfungiblePositionManagerINonfungibleTokenPositionDescriptorIPeripheryImmutableStateIPeripheryPaymentsIPeripheryPaymentsWithFeeIPoolInitializerIQuoterIQuoterV2ISelfPermitISwapRouterITickLensIV3MigratorexternalLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryInterfacesIERC20MetadataHelpful?On this pageIERC20MetadataExtension to IERC20 that includes token metadataFunctions‚Äãname‚Äã function name( ) external returns (string)CopyReturn Values:‚ÄãTypeDescriptionstringname of the tokensymbol‚Äã function symbol( ) external returns (string)CopyReturn Values:‚ÄãTypeDescriptionstringsymbol of the tokendecimals‚Äã function decimals( ) external returns (uint8)CopyReturn Values:‚ÄãTypeDescriptionuint8number of decimal places the token hasEdit this pageHelpful?PreviousSelfPermitNextIERC721PermitFunctionsnamesymboldecimalsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
700,p.org sdk v3 guides liquidity liquidity fees,"p.org sdk v3 guides liquidity liquidity fees.    Collecting Fees | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityMinting a PositionAdding & Removing LiquidityCollecting FeesSwapping and Adding LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKGuidesPooling LiquidityCollecting FeesHelpful?On this pageCollecting FeesIntroduction‚ÄãThis guide will cover how to collect fees from a liquidity position on the Uniswap V3 protocol. It is based on the collecting fees code example, found in the Uniswap code examples repository. To run this example, check out the examples's README and follow the setup instructions.infoIf you need a briefer on the SDK and to learn more about how these guides connect to the examples repository, please visit our background page!In the Uniswap V3 protocol, liquidity positions are represented using non-fungible tokens. In this guide we will use the NonfungiblePositionManager class to help us mint a liquidity position for the USDC - DAI pair. We will then attempt to collect any fees that the position has accrued from those trading against our provisioned liquidity. The inputs to our guide are the two tokens that we are pooling for, the amount of each token we are pooling for, the Pool fee and the max amount of accrued fees we want to collect for each token.The guide will cover:Setting up our fee collectionSubmitting our fee collection transactionAt the end of the guide, given the inputs above, we should be able to collect the accrued fees (if any) of a minted position with the press of a button and see the change reflected in our position and the balance of our tokens.For this guide, the following Uniswap packages are used:@uniswap/v3-sdk@uniswap/sdk-coreThe core code of this guide can be found in collectFees().noteThis guide assumes you are familiar with our Minting a Position guide. A minted position is required to add or remove liquidity from, so the buttons will be disabled until a position is minted.Also note that we do not need to give approval to the NonfungiblePositionManager to transfer our tokens as we will have already done that when minting our position.Setting up our fee collection‚ÄãAll of the fee collecting logic can be found in the collectFees function. Notice how the Collect Fees button is disabled until a position is minted. This happens because there will be no fees to collect unless there is a position whose liquidity has been traded against.To start, we construct an options object of type CollectOptions that holds the data about the fees we want to collect:Constructing the CollectOptionsloading...CopyView on GithubSimilar to the other functions exposed by the NonfungiblePositionManager, we pass the tokenId and the recipient of the fees, which in this case is our function's input position id and our wallet's address.The other two CurrencyAmount parameters (expectedCurrencyOwed0 and expectedCurrencyOwed1) define the maximum amount of currency we expect to get collect through accrued fees of each token in the pool. We set these through our guide's configuration.Submitting our fee collection transaction‚ÄãWe then get the call parameters for collecting our fees from our NonfungiblePositionManager using the constructed CollectOptions:Getting the calldata and value for the transactionloading...CopyView on GithubThe function above returns the calldata and value required to construct the transaction for collecting accrued fees. Now that we have both the calldata and value we needed for the transaction, we can build and execute the it:Building and submitting the transactionloading...CopyView on GithubAfter pressing the button, if someone has traded against our position, we should be able to note how the balance of USDC and DAI increases as we collect fees.Next Steps‚ÄãThe previous guides detail all the atomic steps needed to create and manage positions. However, these approaches may not use all of your desired currency. To ensure you are using your full funds while minimizing gas prices, check out our guide on Swapping and Adding Liquidity in a single transaction!Helpful?PreviousAdding & Removing LiquidityNextSwapping and Adding LiquidityIntroductionSetting up our fee collectionSubmitting our fee collection transactionNext StepsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
701,p.org contracts v3 guides providing liquidity collect fees,"p.org contracts v3 guides providing liquidity collect fees.    Collecting Fees | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquiditySet Up Your ContractMint a New PositionCollecting FeesDecrease LiquidityIncrease LiquidityThe Full ContractLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolGuidesProviding LiquidityCollecting FeesHelpful?On this pageCollecting FeesCollect Fees‚ÄãMake sure to go through the first guide before continuing to this section.For each of these liquidity interaction examples, our contract must be in possession of the liquidity position NFT. Therefore, in any example where the NFT deposit is not coded into a function, the contract is assumed to already be in possession of it.To collect the fees of an owner position, transfer the NFT from the calling address, assign the relevant variables from the NFT to local variables within our function, and pass those variables to thenonfungiblePositionManager to call collect.This function collects all fees, sending them to the original owner of the NFT, while maintaining custody of the position NFT. /// @notice Collects the fees associated with provided liquidity /// @dev The contract must hold the erc721 token before it can collect fees /// @param tokenId The id of the erc721 token /// @return amount0 The amount of fees collected in token0 /// @return amount1 The amount of fees collected in token1 function collectAllFees(uint256 tokenId) external returns (uint256 amount0, uint256 amount1) {  // Caller must own the ERC721 position  // Call to safeTransfer will trigger `onERC721Received` which must return the selector else transfer will fail  nonfungiblePositionManager.safeTransferFrom(msg.sender, address(this), tokenId);  // set amount0Max and amount1Max to uint256.max to collect all fees  // alternatively can set recipient to msg.sender and avoid another transaction in `sendToOwner`  INonfungiblePositionManager.CollectParams memory params =   INonfungiblePositionManager.CollectParams({    tokenId: tokenId,    recipient: address(this),    amount0Max: type(uint128).max,    amount1Max: type(uint128).max   });  (amount0, amount1) = nonfungiblePositionManager.collect(params);  // send collected feed back to owner  _sendToOwner(tokenId, amount0, amount1); }CopySending Fees To The Calling Address‚ÄãThis internal helper function sends any tokens, in the form of fees or position tokens, to the owner of an NFT.In _sendToOwner, we pass the amount of fees due, previously populated in the last function, as arguments to safeTransfer, which transfers the fees to owner. /// @notice Transfers funds to owner of NFT /// @param tokenId The id of the erc721 /// @param amount0 The amount of token0 /// @param amount1 The amount of token1 function _sendToOwner(  uint256 tokenId,  uint256 amount0,  uint256 amount1 ) internal {  // get owner of contract  address owner = deposits[tokenId].owner;  address token0 = deposits[tokenId].token0;  address token1 = deposits[tokenId].token1;  // send collected fees to owner  TransferHelper.safeTransfer(token0, owner, amount0);  TransferHelper.safeTransfer(token1, owner, amount1); }CopyEdit this pageHelpful?PreviousMint a New PositionNextDecrease LiquidityCollect FeesSending Fees To The Calling AddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
702,p.org contracts v3 reference periphery base BlockTimestamp,p.org contracts v3 reference periphery base BlockTimestamp.    BlockTimestamp | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseBlockTimestampERC721PermitLiquidityManagementMulticallPeripheryImmutableStatePeripheryPaymentsPeripheryPaymentsWithFeePoolInitializerSelfPermitInterfacesLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryBaseBlockTimestampHelpful?On this pageBlockTimestampBase contract that is overridden for testsFunctions‚Äã_blockTimestamp‚Äã function _blockTimestamp( ) internal view returns (uint256)CopyMethod that exists purely to be overridden for testsReturn Values:‚ÄãTypeDescriptionuint256current block timestampEdit this pageHelpful?PreviousOverviewNextERC721PermitFunctions_blockTimestampDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
703,p.org contracts permit2 overview,"p.org contracts permit2 overview.    Overview | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2OverviewTechnical ReferenceSignatureTransferAllowanceTransferV2 ProtocolV1 Protocolüè†Permit2OverviewHelpful?On this pageOverviewPermit2 is a unification of 2 contracts, SignatureTransfer and AllowanceTransfer. The SignatureTransfer contract handles all signature-based transfers, meaning that an allowance on the token is bypassed and permissions to the spender only last for the duration of the transaction that the one-time signature is spent. The AllowanceTransfer contract handles setting allowances on tokens, giving permissions to spenders on a specified amount for a specified duration of time. Any transfers that then happen through the AllowanceTransfer contract will only succeed if the proper permissions have been set.Resources‚ÄãA great explanation of the Permit2 contract and example usage.Approving Permit2‚ÄãBefore integrating contracts can request users‚Äô tokens through Permit2, users must approve the Permit2 contract through the specific token contract by calling something like:USDC.approve(permit2Address, totalAmount);CopyTo get the maximal benefits from Permit2, users should do a max approval on the contract where: totalAmount = type(uint256).max;CopyEdit this pageHelpful?PreviousTechnical ReferenceNextSignatureTransferResourcesApproving Permit2DevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
704,p.org sdk core reference classes Price#greaterthan,"p.org sdk core reference classes Price#greaterthan.    Price | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPriceHelpful?On this pagePrice@uniswap/sdk-core / Exports / PriceClass: Price<TBase, TQuote>Type parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyHierarchy‚ÄãFraction‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessors‚ÄãadjustedForDecimalsasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Price<TBase, TQuote>(...args)Construct a price, either with the base and quote currency amount, or theType parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyParameters‚ÄãNameType...args[TBase, TQuote, BigintIsh, BigintIsh] | [{ baseAmount: CurrencyAmount<TBase> ; quoteAmount: CurrencyAmount<TQuote> }]Overrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/price.ts:18Properties‚ÄãbaseCurrency‚Äã‚Ä¢ Readonly baseCurrency: TBaseDefined in‚Äãentities/fractions/price.ts:10denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25quoteCurrency‚Äã‚Ä¢ Readonly quoteCurrency: TQuoteDefined in‚Äãentities/fractions/price.ts:11scalar‚Äã‚Ä¢ Readonly scalar: FractionDefined in‚Äãentities/fractions/price.ts:12Accessors‚ÄãadjustedForDecimals‚Äã‚Ä¢ Private get adjustedForDecimals(): FractionGet the value scaled by decimals for formattingReturns‚ÄãFractionDefined in‚Äãentities/fractions/price.ts:77asFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.addDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.divideDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): Price<TQuote, TBase>Flip the price, switching the base and quote currencyReturns‚ÄãPrice<TQuote, TBase>Overrides‚ÄãFraction.invertDefined in‚Äãentities/fractions/price.ts:49lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply<TOtherQuote>(other): Price<TBase, TOtherQuote>Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currencyType parameters‚ÄãNameTypeTOtherQuoteextends CurrencyParameters‚ÄãNameTypeDescriptionotherPrice<TQuote, TOtherQuote>the other priceReturns‚ÄãPrice<TBase, TOtherQuote>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/price.ts:57quote‚Äã‚ñ∏ quote(currencyAmount): CurrencyAmount<TQuote>Return the amount of quote currency corresponding to a given amount of the base currencyParameters‚ÄãNameTypeDescriptioncurrencyAmountCurrencyAmount<TBase>the amount of base currency to quote against the priceReturns‚ÄãCurrencyAmount<TQuote>Defined in‚Äãentities/fractions/price.ts:67subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.subtractDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber4format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/price.ts:85toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/price.ts:81Helpful?PreviousPercentNextTokenType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessorsadjustedForDecimalsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
705,p.org sdk v3 reference classes TickList,"p.org sdk v3 reference classes TickList.    TickList | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickListHelpful?On this pageTickList@uniswap/v3-sdk / Exports / TickListClass: TickListUtility methods for interacting with sorted lists of ticksTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãbinarySearchgetTickisAtOrAboveLargestisBelowSmallestnextInitializedTicknextInitializedTickWithinOneWordvalidateListConstructors‚Äãconstructor‚Äã‚Ä¢ Private new TickList()Cannot be constructedDefined in‚Äãutils/tickList.ts:18Methods‚ÄãbinarySearch‚Äã‚ñ∏ Static Private binarySearch(ticks, tick): numberFinds the largest tick in the list of ticks that is less than or equal to tickParameters‚ÄãNameTypeDescriptionticksreadonly Tick[]list of ticksticknumbertick to find the largest tick that is less than or equal to tickReturns‚ÄãnumberDefined in‚Äãutils/tickList.ts:62getTick‚Äã‚ñ∏ Static getTick(ticks, index): TickParameters‚ÄãNameTypeticksreadonly Tick[]indexnumberReturns‚ÄãTickDefined in‚Äãutils/tickList.ts:50isAtOrAboveLargest‚Äã‚ñ∏ Static isAtOrAboveLargest(ticks, tick): booleanParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberReturns‚ÄãbooleanDefined in‚Äãutils/tickList.ts:45isBelowSmallest‚Äã‚ñ∏ Static isBelowSmallest(ticks, tick): booleanParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberReturns‚ÄãbooleanDefined in‚Äãutils/tickList.ts:40nextInitializedTick‚Äã‚ñ∏ Static nextInitializedTick(ticks, tick, lte): TickParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberltebooleanReturns‚ÄãTickDefined in‚Äãutils/tickList.ts:83nextInitializedTickWithinOneWord‚Äã‚ñ∏ Static nextInitializedTickWithinOneWord(ticks, tick, lte, tickSpacing): [number, boolean]Parameters‚ÄãNameTypeticksreadonly Tick[]ticknumberltebooleantickSpacingnumberReturns‚Äã[number, boolean]Defined in‚Äãutils/tickList.ts:101validateList‚Äã‚ñ∏ Static validateList(ticks, tickSpacing): voidParameters‚ÄãNameTypeticksTick[]tickSpacingnumberReturns‚ÄãvoidDefined in‚Äãutils/tickList.ts:20Helpful?PreviousTickLibraryNextTickListDataProviderTable of contentsConstructorsMethodsConstructorsconstructorMethodsbinarySearchgetTickisAtOrAboveLargestisBelowSmallestnextInitializedTicknextInitializedTickWithinOneWordvalidateListDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
706,p.org sdk v3 reference classes Trade# inputamount,"p.org sdk v3 reference classes Trade# inputamount.    Trade | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTradeHelpful?On this pageTrade@uniswap/v3-sdk / Exports / TradeClass: Trade<TInput, TOutput, TTradeType>Represents a trade executed against a set of routes where some percentage of the input is split across each route.Each route has its own set of pools. Pools can not be re-used across routes.Does not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and when it is executed.Type parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe trade type, either exact input or exact outputTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessors‚ÄãexecutionPriceinputAmountoutputAmountpriceImpactrouteMethods‚ÄãmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Trade<TInput, TOutput, TTradeType>(__namedParameters)Construct a trade by passing in the pre-computed property valuesType parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyTTradeTypeextends TradeTypeParameters‚ÄãNameType__namedParametersObject__namedParameters.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]__namedParameters.tradeTypeTTradeTypeDefined in‚Äãentities/trade.ts:397Properties‚Äã_executionPrice‚Äã‚Ä¢ Private _executionPrice: undefined | Price<TInput, TOutput>The cached result of the computed execution priceDefined in‚Äãentities/trade.ts:143_inputAmount‚Äã‚Ä¢ Private _inputAmount: undefined | CurrencyAmount<TInput>The cached result of the input amount computationDefined in‚Äãentities/trade.ts:97_outputAmount‚Äã‚Ä¢ Private _outputAmount: undefined | CurrencyAmount<TOutput>The cached result of the output amount computationDefined in‚Äãentities/trade.ts:120_priceImpact‚Äã‚Ä¢ Private _priceImpact: undefined | PercentThe cached result of the price impact computationDefined in‚Äãentities/trade.ts:164swaps‚Äã‚Ä¢ Readonly swaps: { inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]The swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.Defined in‚Äãentities/trade.ts:82tradeType‚Äã‚Ä¢ Readonly tradeType: TTradeTypeThe type of the trade, either exact in or exact out.Defined in‚Äãentities/trade.ts:91Accessors‚ÄãexecutionPrice‚Äã‚Ä¢ get executionPrice(): Price<TInput, TOutput>The price expressed in terms of output amount/input amount.Returns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/trade.ts:148inputAmount‚Äã‚Ä¢ get inputAmount(): CurrencyAmount<TInput>The input amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TInput>Defined in‚Äãentities/trade.ts:102outputAmount‚Äã‚Ä¢ get outputAmount(): CurrencyAmount<TOutput>The output amount for the trade assuming no slippage.Returns‚ÄãCurrencyAmount<TOutput>Defined in‚Äãentities/trade.ts:125priceImpact‚Äã‚Ä¢ get priceImpact(): PercentReturns the percent difference between the route's mid price and the price impactReturns‚ÄãPercentDefined in‚Äãentities/trade.ts:169route‚Äã‚Ä¢ get route(): Route<TInput, TOutput>DeprecatedDeprecated in favor of 'swaps' property. If the trade consists of multiple routes this will return an error.When the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.Returns‚ÄãRoute<TInput, TOutput>Defined in‚Äãentities/trade.ts:73Methods‚ÄãmaximumAmountIn‚Äã‚ñ∏ maximumAmountIn(slippageTolerance, amountIn?): CurrencyAmount<TInput>Get the maximum amount in that can be spent via this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountInCurrencyAmount<TInput>-Returns‚ÄãCurrencyAmount<TInput>The amount inDefined in‚Äãentities/trade.ts:456minimumAmountOut‚Äã‚ñ∏ minimumAmountOut(slippageTolerance, amountOut?): CurrencyAmount<TOutput>Get the minimum amount that must be received from this trade for the given slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentThe tolerance of unfavorable slippage from the execution price of this tradeamountOutCurrencyAmount<TOutput>-Returns‚ÄãCurrencyAmount<TOutput>The amount outDefined in‚Äãentities/trade.ts:438worstExecutionPrice‚Äã‚ñ∏ worstExecutionPrice(slippageTolerance): Price<TInput, TOutput>Return the execution price after accounting for slippage toleranceParameters‚ÄãNameTypeDescriptionslippageTolerancePercentthe allowed tolerated slippageReturns‚ÄãPrice<TInput, TOutput>The execution priceDefined in‚Äãentities/trade.ts:471bestTradeExactIn‚Äã‚ñ∏ Static bestTradeExactIn<TInput, TOutput>(pools, currencyAmountIn, currencyOut, __namedParameters?, currentPools?, nextAmountIn?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_INPUT>[]>Given a list of pools, and a fixed amount in, returns the top maxNumResults trades that go from an input token amount to an output token, making at most maxHops hops. Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyAmountInCurrencyAmount<TInput>undefinedused in recursion; the original value of the currencyAmountIn parametercurrencyOutTOutputundefinedthe desired currency out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountInCurrencyAmount<Currency>currencyAmountInexact amount of input currency to spendbestTradesTrade<TInput, TOutput, EXACT_INPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>[]>The exact in tradeDefined in‚Äãentities/trade.ts:495bestTradeExactOut‚Äã‚ñ∏ Static bestTradeExactOut<TInput, TOutput>(pools, currencyIn, currencyAmountOut, __namedParameters?, currentPools?, nextAmountOut?, bestTrades?): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>similar to the above method but instead targets a fixed output amount given a list of pools, and a fixed amount out, returns the top maxNumResults trades that go from an input token to an output token amount, making at most maxHops hops note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting the amount in among multiple routes.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDefault valueDescriptionpoolsPool[]undefinedthe pools to consider in finding the best tradecurrencyInTInputundefinedthe currency to spendcurrencyAmountOutCurrencyAmount<TOutput>undefinedthe desired currency amount out__namedParametersBestTradeOptions{}-currentPoolsPool[][]used in recursion; the current list of poolsnextAmountOutCurrencyAmount<Currency>currencyAmountOutthe exact amount of currency outbestTradesTrade<TInput, TOutput, EXACT_OUTPUT>[][]used in recursion; the current list of best tradesReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>[]>The exact out tradeDefined in‚Äãentities/trade.ts:576createUncheckedTrade‚Äã‚ñ∏ Static createUncheckedTrade<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the route. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.inputAmountCurrencyAmount<TInput>-constructorArguments.outputAmountCurrencyAmount<TOutput>-constructorArguments.routeRoute<TInput, TOutput>-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:346createUncheckedTradeWithMultipleRoutes‚Äã‚ñ∏ Static createUncheckedTradeWithMultipleRoutes<TInput, TOutput, TTradeType>(constructorArguments): Trade<TInput, TOutput, TTradeType>Creates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade elsewhere and do not have any tick dataType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact outParameters‚ÄãNameTypeDescriptionconstructorArgumentsObjectThe arguments passed to the trade constructorconstructorArguments.routes{ inputAmount: CurrencyAmount<TInput> ; outputAmount: CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]-constructorArguments.tradeTypeTTradeType-Returns‚ÄãTrade<TInput, TOutput, TTradeType>The unchecked tradeDefined in‚Äãentities/trade.ts:377exactIn‚Äã‚ñ∏ Static exactIn<TInput, TOutput>(route, amountIn): Promise<Trade<TInput, TOutput, EXACT_INPUT>>Constructs an exact in trade with the given amount in and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact in tradeamountInCurrencyAmount<TInput>The amount being passed inReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_INPUT>>The exact in tradeDefined in‚Äãentities/trade.ts:194exactOut‚Äã‚ñ∏ Static exactOut<TInput, TOutput>(route, amountOut): Promise<Trade<TInput, TOutput, EXACT_OUTPUT>>Constructs an exact out trade with the given amount out and routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20TOutputextends CurrencyThe output token, either Ether or an ERC-20Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>The route of the exact out tradeamountOutCurrencyAmount<TOutput>The amount returned by the tradeReturns‚ÄãPromise<Trade<TInput, TOutput, EXACT_OUTPUT>>The exact out tradeDefined in‚Äãentities/trade.ts:209fromRoute‚Äã‚ñ∏ Static fromRoute<TInput, TOutput, TTradeType>(route, amount, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade by simulating swaps through the given routeType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionrouteRoute<TInput, TOutput>route to swap throughamountTTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>the amount specified, either input or output, depending on tradeTypetradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The routeDefined in‚Äãentities/trade.ts:226fromRoutes‚Äã‚ñ∏ Static fromRoutes<TInput, TOutput, TTradeType>(routes, tradeType): Promise<Trade<TInput, TOutput, TTradeType>>Constructs a trade from routes by simulating swapsType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input token, either Ether or an ERC-20.TOutputextends CurrencyThe output token, either Ether or an ERC-20.TTradeTypeextends TradeTypeThe type of the trade, either exact in or exact out.Parameters‚ÄãNameTypeDescriptionroutes{ amount: TTradeType extends EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput> ; route: Route<TInput, TOutput> }[]the routes to swap through and how much of the amount should be routed through eachtradeTypeTTradeTypewhether the trade is an exact input or exact output swapReturns‚ÄãPromise<Trade<TInput, TOutput, TTradeType>>The tradeDefined in‚Äãentities/trade.ts:276Helpful?PreviousTickMathNextFeeAmountType parametersTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorProperties_executionPrice_inputAmount_outputAmount_priceImpactswapstradeTypeAccessorsexecutionPriceinputAmountoutputAmountpriceImpactrouteMethodsmaximumAmountInminimumAmountOutworstExecutionPricebestTradeExactInbestTradeExactOutcreateUncheckedTradecreateUncheckedTradeWithMultipleRoutesexactInexactOutfromRoutefromRoutesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
707,p.org sdk v3 reference classes LiquidityMath#adddelta,"p.org sdk v3 reference classes LiquidityMath#adddelta.    LiquidityMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesLiquidityMathHelpful?On this pageLiquidityMath@uniswap/v3-sdk / Exports / LiquidityMathClass: LiquidityMathTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãaddDeltaConstructors‚Äãconstructor‚Äã‚Ä¢ Private new LiquidityMath()Cannot be constructed.Defined in‚Äãutils/liquidityMath.ts:8Methods‚ÄãaddDelta‚Äã‚ñ∏ Static addDelta(x, y): defaultParameters‚ÄãNameTypexdefaultydefaultReturns‚ÄãdefaultDefined in‚Äãutils/liquidityMath.ts:10Helpful?PreviousFullMathNextMulticallTable of contentsConstructorsMethodsConstructorsconstructorMethodsaddDeltaDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
708,p.org sdk core reference classes Percent#add,"p.org sdk core reference classes Percent#add.    Percent | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPercentHelpful?On this pagePercent@uniswap/sdk-core / Exports / PercentClass: PercentHierarchy‚ÄãFraction‚Ü≥ PercentTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãdenominatorisPercentnumeratorAccessors‚ÄãasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Percent(numerator, denominator?)Parameters‚ÄãNameTypenumeratorBigintIshdenominatorBigintIshInherited from‚ÄãFraction.constructorDefined in‚Äãentities/fractions/fraction.ts:28Properties‚Äãdenominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26isPercent‚Äã‚Ä¢ Readonly isPercent: trueThis boolean prevents a fraction from being interpreted as a PercentDefined in‚Äãentities/fractions/percent.ts:19numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.addDefined in‚Äãentities/fractions/percent.ts:21divide‚Äã‚ñ∏ divide(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/percent.ts:33equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/percent.ts:29subtract‚Äã‚ñ∏ subtract(other): PercentParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãPercentOverrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/percent.ts:25toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber2format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/percent.ts:41toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber5format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/percent.ts:37Helpful?PreviousNativeCurrencyNextPriceHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesdenominatorisPercentnumeratorAccessorsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
709,p.org sdk v3 reference classes Route#constructor,"p.org sdk v3 reference classes Route#constructor.    Route | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesRouteHelpful?On this pageRoute@uniswap/v3-sdk / Exports / RouteClass: Route<TInput, TOutput>Represents a list of pools through which a swap can occurType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input tokenTOutputextends CurrencyThe output tokenTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_midPriceinputoutputpoolstokenPathAccessors‚ÄãchainIdmidPriceConstructors‚Äãconstructor‚Äã‚Ä¢ new Route<TInput, TOutput>(pools, input, output)Creates an instance of route.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDescriptionpoolsPool[]An array of Pool objects, ordered by the route the swap will takeinputTInputThe input tokenoutputTOutputThe output tokenDefined in‚Äãentities/route.ts:25Properties‚Äã_midPrice‚Äã‚Ä¢ Private _midPrice: null | Price<TInput, TOutput> = nullDefined in‚Äãentities/route.ts:17input‚Äã‚Ä¢ Readonly input: TInputDefined in‚Äãentities/route.ts:14output‚Äã‚Ä¢ Readonly output: TOutputDefined in‚Äãentities/route.ts:15pools‚Äã‚Ä¢ Readonly pools: Pool[]Defined in‚Äãentities/route.ts:12tokenPath‚Äã‚Ä¢ Readonly tokenPath: Token[]Defined in‚Äãentities/route.ts:13Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns‚ÄãnumberDefined in‚Äãentities/route.ts:54midPrice‚Äã‚Ä¢ get midPrice(): Price<TInput, TOutput>Returns the mid price of the routeReturns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/route.ts:61Helpful?PreviousPositionLibraryNextSelfPermitType parametersTable of contentsConstructorsPropertiesAccessorsConstructorsconstructorProperties_midPriceinputoutputpoolstokenPathAccessorschainIdmidPriceDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
710,p.org contracts V2 concepts protocol overview how uniswap works,"p.org contracts V2 concepts protocol overview how uniswap works.    How Uniswap works | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewHow Uniswap worksEcosystem ParticipantsSmart contractsGlossaryCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolConceptsProtocol OverviewHow Uniswap worksHelpful?How Uniswap worksUniswap is an automated liquidity protocol powered by a constant product formula and implemented in a system of non-upgradeable smart contracts on the Ethereum blockchain. It obviates the need for trusted intermediaries, prioritizing decentralization, censorship resistance, and security. Uniswap is open-source software licensed under the GPL.Each Uniswap smart contract, or pair, manages a liquidity pool made up of reserves of two ERC-20 tokens.Anyone can become a liquidity provider (LP) for a pool by depositing an equivalent value of each underlying token in return for pool tokens. These tokens track pro-rata LP shares of the total reserves, and can be redeemed for the underlying assets at any time.Pairs act as automated market makers, standing ready to accept one token for the other as long as the ‚Äúconstant product‚Äù formula is preserved. This formula, most simply expressed as x * y = k, states that trades must not change the product (k) of a pair‚Äôs reserve balances (x and y). Because k remains unchanged from the reference frame of a trade, it is often referred to as the invariant. This formula has the desirable property that larger trades (relative to reserves) execute at exponentially worse rates than smaller ones.In practice, Uniswap applies a 0.30% fee to trades, which is added to reserves. As a result, each trade actually increases k. This functions as a payout to LPs, which is realized when they burn their pool tokens to withdraw their portion of total reserves. In the future, this fee may be reduced to 0.25%, with the remaining 0.05% withheld as a protocol-wide charge.Because the relative price of the two pair assets can only be changed through trading, divergences between the Uniswap price and external prices create arbitrage opportunities. This mechanism ensures that Uniswap prices always trend toward the market-clearing price.Further readingTo see how token swaps work in practice, and to walk through the lifecycle of a swap, check out Swaps. Or, to see how liquidity pools work, see Pools.Ultimately, of course, the Uniswap protocol is just smart contract code running on Ethereum. To understand how they work, head over to Smart Contracts.Edit this pageHelpful?PreviousOverviewNextEcosystem ParticipantsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
711,p.org contracts v3 reference periphery interfaces IMulticall,p.org contracts v3 reference periphery interfaces IMulticall.    IMulticall | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesIERC20MetadataIERC721PermitIMulticallINonfungiblePositionManagerINonfungibleTokenPositionDescriptorIPeripheryImmutableStateIPeripheryPaymentsIPeripheryPaymentsWithFeeIPoolInitializerIQuoterIQuoterV2ISelfPermitISwapRouterITickLensIV3MigratorexternalLensLibrariesStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryInterfacesIMulticallHelpful?On this pageIMulticallEnables calling multiple methods in a single call to the contractFunctions‚Äãmulticall‚Äã function multicall( bytes[] data ) external returns (bytes[] results)CopyCall multiple functions in the current contract and return the data from all of them if they all succeedThe msg.value should not be trusted for any method callable from multicall.Parameters:‚ÄãNameTypeDescriptiondatabytes[]The encoded function data for each of the calls to make to this contractReturn Values:‚ÄãNameTypeDescriptionresultsbytes[]The results from each of the calls passed in via dataEdit this pageHelpful?PreviousIERC721PermitNextINonfungiblePositionManagerFunctionsmulticallDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
712,p.org contracts universal router technical reference#wrap eth,"p.org contracts universal router technical reference#wrap eth.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
713,p.org contracts v3 reference core libraries Tick,"p.org contracts v3 reference core libraries Tick.    Tick | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesLibrariesBitMathFixedPoint128FixedPoint96FullMathLiquidityMathLowGasSafeMathOraclePositionSafeCastSecondsOutsideSqrtPriceMathSwapMathTickTickBitmapTickMathTransferHelperUnsafeMathGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreLibrariesTickHelpful?On this pageTickContains functions for managing tick processes and relevant calculationsFunctions‚ÄãtickSpacingToMaxLiquidityPerTick‚Äã function tickSpacingToMaxLiquidityPerTick( int24 tickSpacing ) internal pure returns (uint128)CopyDerives max liquidity per tick from given tick spacingExecuted within the pool constructorParameters:‚ÄãNameTypeDescriptiontickSpacingint24The amount of required tick separation, realized in multiples of tickSpacing e.g., a tickSpacing of 3 requires ticks to be initialized every 3rd tick i.e., ..., -6, -3, 0, 3, 6, ...Return Values:‚ÄãTypeDescriptionuint128max liquidity per tickgetFeeGrowthInside‚Äã function getFeeGrowthInside( mapping(int24 => struct Tick.Info) self, int24 tickLower, int24 tickUpper, int24 tickCurrent, uint256 feeGrowthGlobal0X128, uint256 feeGrowthGlobal1X128 ) internal view returns (uint256 feeGrowthInside0X128, uint256 feeGrowthInside1X128)CopyRetrieves fee growth dataParameters:‚ÄãNameTypeDescriptionselfmapping(int24 => struct Tick.Info)The mapping containing all tick information for initialized tickstickLowerint24The lower tick boundary of the positiontickUpperint24The upper tick boundary of the positiontickCurrentint24The current tickfeeGrowthGlobal0X128uint256The all-time global fee growth, per unit of liquidity, in token0feeGrowthGlobal1X128uint256The all-time global fee growth, per unit of liquidity, in token1Return Values:‚ÄãNameTypeDescriptionfeeGrowthInside0X128uint256The all-time fee growth in token0, per unit of liquidity, inside the position's tick boundariesfeeGrowthInside1X128uint256The all-time fee growth in token1, per unit of liquidity, inside the position's tick boundariesupdate‚Äã function update( mapping(int24 => struct Tick.Info) self, int24 tick, int24 tickCurrent, int128 liquidityDelta, uint256 feeGrowthGlobal0X128, uint256 feeGrowthGlobal1X128, bool upper, uint128 maxLiquidity ) internal returns (bool flipped)CopyUpdates a tick and returns true if the tick was flipped from initialized to uninitialized, or vice versaParameters:‚ÄãNameTypeDescriptionselfmapping(int24 => struct Tick.Info)The mapping containing all tick information for initialized tickstickint24The tick that will be updatedtickCurrentint24The current tickliquidityDeltaint128A new amount of liquidity to be added (subtracted) when tick is crossed from left to right (right to left)feeGrowthGlobal0X128uint256The all-time global fee growth, per unit of liquidity, in token0feeGrowthGlobal1X128uint256The all-time global fee growth, per unit of liquidity, in token1upperbooltrue for updating a position's upper tick, or false for updating a position's lower tickmaxLiquidityuint128The maximum liquidity allocation for a single tickReturn Values:‚ÄãNameTypeDescriptionflippedboolWhether the tick was flipped from initialized to uninitialized, or vice versaclear‚Äã function clear( mapping(int24 => struct Tick.Info) self, int24 tick ) internalCopyClears tick dataParameters:‚ÄãNameTypeDescriptionselfmapping(int24 => struct Tick.Info)The mapping containing all initialized tick information for initialized tickstickint24The tick that will be clearedcross‚Äã function cross( mapping(int24 => struct Tick.Info) self, int24 tick, uint256 feeGrowthGlobal0X128, uint256 feeGrowthGlobal1X128 ) internal returns (int128 liquidityNet)CopyTransitions to next tick as needed by price movementParameters:‚ÄãNameTypeDescriptionselfmapping(int24 => struct Tick.Info)The mapping containing all tick information for initialized tickstickint24The destination tick of the transitionfeeGrowthGlobal0X128uint256The all-time global fee growth, per unit of liquidity, in token0feeGrowthGlobal1X128uint256The all-time global fee growth, per unit of liquidity, in token1Return Values:‚ÄãNameTypeDescriptionliquidityNetint128The amount of liquidity added (subtracted) when tick is crossed from left to right (right to left)Edit this pageHelpful?PreviousSwapMathNextTickBitmapFunctionstickSpacingToMaxLiquidityPerTickgetFeeGrowthInsideupdateclearcrossDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
714,p.org sdk v3 reference interfaces TickDataProvider#gettick,"p.org sdk v3 reference interfaces TickDataProvider#gettick.    TickDataProvider | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesTickDataProviderHelpful?On this pageTickDataProvider@uniswap/v3-sdk / Exports / TickDataProviderInterface: TickDataProviderProvides information about ticksImplemented by‚ÄãNoTickDataProviderTickListDataProviderTable of contents‚ÄãMethods‚ÄãgetTicknextInitializedTickWithinOneWordMethods‚ÄãgetTick‚Äã‚ñ∏ getTick(tick): Promise<{ liquidityNet: BigintIsh }>Return information corresponding to a specific tickParameters‚ÄãNameTypeDescriptionticknumberthe tick to loadReturns‚ÄãPromise<{ liquidityNet: BigintIsh }>Defined in‚Äãentities/tickDataProvider.ts:11nextInitializedTickWithinOneWord‚Äã‚ñ∏ nextInitializedTickWithinOneWord(tick, lte, tickSpacing): Promise<[number, boolean]>Return the next tick that is initialized within a single wordParameters‚ÄãNameTypeDescriptionticknumberThe current tickltebooleanWhether the next tick should be lte the current ticktickSpacingnumberThe tick spacing of the poolReturns‚ÄãPromise<[number, boolean]>Defined in‚Äãentities/tickDataProvider.ts:19Helpful?PreviousTickConstructorArgsNextWithdrawOptionsImplemented byTable of contentsMethodsMethodsgetTicknextInitializedTickWithinOneWordDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
715,p.org sdk v3 reference classes Route#input,"p.org sdk v3 reference classes Route#input.    Route | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesRouteHelpful?On this pageRoute@uniswap/v3-sdk / Exports / RouteClass: Route<TInput, TOutput>Represents a list of pools through which a swap can occurType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input tokenTOutputextends CurrencyThe output tokenTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_midPriceinputoutputpoolstokenPathAccessors‚ÄãchainIdmidPriceConstructors‚Äãconstructor‚Äã‚Ä¢ new Route<TInput, TOutput>(pools, input, output)Creates an instance of route.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDescriptionpoolsPool[]An array of Pool objects, ordered by the route the swap will takeinputTInputThe input tokenoutputTOutputThe output tokenDefined in‚Äãentities/route.ts:25Properties‚Äã_midPrice‚Äã‚Ä¢ Private _midPrice: null | Price<TInput, TOutput> = nullDefined in‚Äãentities/route.ts:17input‚Äã‚Ä¢ Readonly input: TInputDefined in‚Äãentities/route.ts:14output‚Äã‚Ä¢ Readonly output: TOutputDefined in‚Äãentities/route.ts:15pools‚Äã‚Ä¢ Readonly pools: Pool[]Defined in‚Äãentities/route.ts:12tokenPath‚Äã‚Ä¢ Readonly tokenPath: Token[]Defined in‚Äãentities/route.ts:13Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns‚ÄãnumberDefined in‚Äãentities/route.ts:54midPrice‚Äã‚Ä¢ get midPrice(): Price<TInput, TOutput>Returns the mid price of the routeReturns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/route.ts:61Helpful?PreviousPositionLibraryNextSelfPermitType parametersTable of contentsConstructorsPropertiesAccessorsConstructorsconstructorProperties_midPriceinputoutputpoolstokenPathAccessorschainIdmidPriceDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
716,p.org sdk v3 reference interfaces CollectOptions#tokenid,"p.org sdk v3 reference interfaces CollectOptions#tokenid.    CollectOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesCollectOptionsHelpful?On this pageCollectOptions@uniswap/v3-sdk / Exports / CollectOptionsInterface: CollectOptionsTable of contents‚ÄãProperties‚ÄãexpectedCurrencyOwed0expectedCurrencyOwed1recipienttokenIdProperties‚ÄãexpectedCurrencyOwed0‚Äã‚Ä¢ expectedCurrencyOwed0: CurrencyAmount<Currency>Expected value of tokensOwed0, including as-of-yet-unaccounted-for fees/liquidity value to be burnedDefined in‚ÄãnonfungiblePositionManager.ts:114expectedCurrencyOwed1‚Äã‚Ä¢ expectedCurrencyOwed1: CurrencyAmount<Currency>Expected value of tokensOwed1, including as-of-yet-unaccounted-for fees/liquidity value to be burnedDefined in‚ÄãnonfungiblePositionManager.ts:119recipient‚Äã‚Ä¢ recipient: stringThe account that should receive the tokens.Defined in‚ÄãnonfungiblePositionManager.ts:124tokenId‚Äã‚Ä¢ tokenId: BigintIshIndicates the ID of the position to collect for.Defined in‚ÄãnonfungiblePositionManager.ts:109Helpful?PreviousClaimOptionsNextCommonAddLiquidityOptionsTable of contentsPropertiesPropertiesexpectedCurrencyOwed0expectedCurrencyOwed1recipienttokenIdDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
717,p.org sdk v3 reference enums FeeAmount#lowest,"p.org sdk v3 reference enums FeeAmount#lowest.    FeeAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsFeeAmountinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceenumsFeeAmountHelpful?On this pageFeeAmount@uniswap/v3-sdk / Exports / FeeAmountEnumeration: FeeAmountThe default factory enabled fee amounts, denominated in hundredths of bips.Table of contents‚ÄãEnumeration Members‚ÄãHIGHLOWLOWESTMEDIUMEnumeration Members‚ÄãHIGH‚Äã‚Ä¢ HIGH = 10000Defined in‚Äãconstants.ts:14LOW‚Äã‚Ä¢ LOW = 500Defined in‚Äãconstants.ts:12LOWEST‚Äã‚Ä¢ LOWEST = 100Defined in‚Äãconstants.ts:11MEDIUM‚Äã‚Ä¢ MEDIUM = 3000Defined in‚Äãconstants.ts:13Helpful?PreviousTradeNextAllowedPermitArgumentsTable of contentsEnumeration MembersEnumeration MembersHIGHLOWLOWESTMEDIUMDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
718,p.org sdk v3 reference interfaces SafeTransferOptions#recipient,p.org sdk v3 reference interfaces SafeTransferOptions#recipient.    SafeTransferOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesSafeTransferOptionsHelpful?On this pageSafeTransferOptions@uniswap/v3-sdk / Exports / SafeTransferOptionsInterface: SafeTransferOptionsTable of contents‚ÄãProperties‚ÄãdatarecipientsendertokenIdProperties‚Äãdata‚Äã‚Ä¢ Optional data: stringThe optional parameter that passes data to the onERC721Received call for the stakerDefined in‚ÄãnonfungiblePositionManager.ts:97recipient‚Äã‚Ä¢ recipient: stringThe account that should receive the NFT.Defined in‚ÄãnonfungiblePositionManager.ts:88sender‚Äã‚Ä¢ sender: stringThe account sending the NFT.Defined in‚ÄãnonfungiblePositionManager.ts:83tokenId‚Äã‚Ä¢ tokenId: BigintIshThe id of the token being sent.Defined in‚ÄãnonfungiblePositionManager.ts:93Helpful?PreviousRemoveLiquidityOptionsNextStandardPermitArgumentsTable of contentsPropertiesPropertiesdatarecipientsendertokenIdDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
719,p.org sdk core reference classes CurrencyAmount#numerator,"p.org sdk core reference classes CurrencyAmount#numerator.    CurrencyAmount | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesCurrencyAmountHelpful?On this pageCurrencyAmount@uniswap/sdk-core / Exports / CurrencyAmountClass: CurrencyAmount<T>Type parameters‚ÄãNameTypeTextends CurrencyHierarchy‚ÄãFraction‚Ü≥ CurrencyAmountTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãcurrencydecimalScaledenominatornumeratorAccessors‚ÄãasFractionquotientremainderwrappedMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new CurrencyAmount<T>(currency, numerator, denominator?)Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypecurrencyTnumeratorBigintIshdenominator?BigintIshOverrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/currencyAmount.ts:40Properties‚Äãcurrency‚Äã‚Ä¢ Readonly currency: TDefined in‚Äãentities/fractions/currencyAmount.ts:14decimalScale‚Äã‚Ä¢ Readonly decimalScale: defaultDefined in‚Äãentities/fractions/currencyAmount.ts:15denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25Accessors‚ÄãasFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47wrapped‚Äã‚Ä¢ get wrapped(): CurrencyAmount<Token>Returns‚ÄãCurrencyAmount<Token>Defined in‚Äãentities/fractions/currencyAmount.ts:91Methods‚Äãadd‚Äã‚ñ∏ add(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.addDefined in‚Äãentities/fractions/currencyAmount.ts:47divide‚Äã‚ñ∏ divide(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.divideDefined in‚Äãentities/fractions/currencyAmount.ts:64equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.invertDefined in‚Äãentities/fractions/fraction.ts:51lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/currencyAmount.ts:59subtract‚Äã‚ñ∏ subtract(other): CurrencyAmount<T>Parameters‚ÄãNameTypeotherCurrencyAmount<T>Returns‚ÄãCurrencyAmount<T>Overrides‚ÄãFraction.subtractDefined in‚Äãentities/fractions/currencyAmount.ts:53toExact‚Äã‚ñ∏ toExact(format?): stringParameters‚ÄãNameTypeformatobjectReturns‚ÄãstringDefined in‚Äãentities/fractions/currencyAmount.ts:86toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumberundefinedformat?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/currencyAmount.ts:77toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedroundingRoundingRounding.ROUND_DOWNReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/currencyAmount.ts:69fromFractionalAmount‚Äã‚ñ∏ Static fromFractionalAmount<T>(currency, numerator, denominator): CurrencyAmount<T>Construct a currency amount with a denominator that is not equal to 1Type parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currencynumeratorBigintIshthe numerator of the fractional token amountdenominatorBigintIshthe denominator of the fractional token amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:32fromRawAmount‚Äã‚ñ∏ Static fromRawAmount<T>(currency, rawAmount): CurrencyAmount<T>Returns a new currency amount instance from the unitless amount of token, i.e. the raw amountType parameters‚ÄãNameTypeTextends CurrencyParameters‚ÄãNameTypeDescriptioncurrencyTthe currency in the amountrawAmountBigintIshthe raw token or ether amountReturns‚ÄãCurrencyAmount<T>Defined in‚Äãentities/fractions/currencyAmount.ts:22Helpful?PreviousOverviewNextEtherType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiescurrencydecimalScaledenominatornumeratorAccessorsasFractionquotientremainderwrappedMethodsadddivideequalTogreaterThaninvertlessThanmultiplysubtracttoExacttoFixedtoSignificantfromFractionalAmountfromRawAmountDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
720,p.org sdk v3 reference classes Route#tokenpath,"p.org sdk v3 reference classes Route#tokenpath.    Route | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesRouteHelpful?On this pageRoute@uniswap/v3-sdk / Exports / RouteClass: Route<TInput, TOutput>Represents a list of pools through which a swap can occurType parameters‚ÄãNameTypeDescriptionTInputextends CurrencyThe input tokenTOutputextends CurrencyThe output tokenTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚Äã_midPriceinputoutputpoolstokenPathAccessors‚ÄãchainIdmidPriceConstructors‚Äãconstructor‚Äã‚Ä¢ new Route<TInput, TOutput>(pools, input, output)Creates an instance of route.Type parameters‚ÄãNameTypeTInputextends CurrencyTOutputextends CurrencyParameters‚ÄãNameTypeDescriptionpoolsPool[]An array of Pool objects, ordered by the route the swap will takeinputTInputThe input tokenoutputTOutputThe output tokenDefined in‚Äãentities/route.ts:25Properties‚Äã_midPrice‚Äã‚Ä¢ Private _midPrice: null | Price<TInput, TOutput> = nullDefined in‚Äãentities/route.ts:17input‚Äã‚Ä¢ Readonly input: TInputDefined in‚Äãentities/route.ts:14output‚Äã‚Ä¢ Readonly output: TOutputDefined in‚Äãentities/route.ts:15pools‚Äã‚Ä¢ Readonly pools: Pool[]Defined in‚Äãentities/route.ts:12tokenPath‚Äã‚Ä¢ Readonly tokenPath: Token[]Defined in‚Äãentities/route.ts:13Accessors‚ÄãchainId‚Äã‚Ä¢ get chainId(): numberReturns‚ÄãnumberDefined in‚Äãentities/route.ts:54midPrice‚Äã‚Ä¢ get midPrice(): Price<TInput, TOutput>Returns the mid price of the routeReturns‚ÄãPrice<TInput, TOutput>Defined in‚Äãentities/route.ts:61Helpful?PreviousPositionLibraryNextSelfPermitType parametersTable of contentsConstructorsPropertiesAccessorsConstructorsconstructorProperties_midPriceinputoutputpoolstokenPathAccessorschainIdmidPriceDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
721,p.org contracts v3 reference periphery libraries TokenRatioSortOrder,p.org contracts v3 reference periphery libraries TokenRatioSortOrder.    TokenRatioSortOrder | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesBase64BytesLibCallbackValidationChainIdHexStringsLiquidityAmountsNFTDescriptorNFTSVGOracleLibraryPathPoolAddressPoolTicksCounterPositionKeyTokenRatioSortOrderTransferHelperWeightedOracleLibraryStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryLibrariesTokenRatioSortOrderHelpful?TokenRatioSortOrderlibrary TokenRatioSortOrder { int256 constant NUMERATOR_MOST = 300; int256 constant NUMERATOR_MORE = 200; int256 constant NUMERATOR = 100; int256 constant DENOMINATOR_MOST = -300; int256 constant DENOMINATOR_MORE = -200; int256 constant DENOMINATOR = -100;}CopyEdit this pageHelpful?PreviousPositionKeyNextTransferHelperDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
722,p.org sdk v3 reference interfaces AllowedPermitArguments,p.org sdk v3 reference interfaces AllowedPermitArguments.    AllowedPermitArguments | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesAllowedPermitArgumentsHelpful?On this pageAllowedPermitArguments@uniswap/v3-sdk / Exports / AllowedPermitArgumentsInterface: AllowedPermitArgumentsTable of contents‚ÄãProperties‚ÄãexpirynoncersvProperties‚Äãexpiry‚Äã‚Ä¢ expiry: BigintIshDefined in‚ÄãselfPermit.ts:19nonce‚Äã‚Ä¢ nonce: BigintIshDefined in‚ÄãselfPermit.ts:18r‚Äã‚Ä¢ r: stringDefined in‚ÄãselfPermit.ts:16s‚Äã‚Ä¢ s: stringDefined in‚ÄãselfPermit.ts:17v‚Äã‚Ä¢ v: 0 | 1 | 27 | 28Defined in‚ÄãselfPermit.ts:15Helpful?PreviousFeeAmountNextBestTradeOptionsTable of contentsPropertiesPropertiesexpirynoncersvDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
723,p.org contracts v2 reference smart contracts library#getamountsin,"p.org contracts v2 reference smart contracts library#getamountsin.    Library | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsLibraryHelpful?On this pageLibraryCode‚ÄãUniswapV2Library.solInternal FunctionssortTokens‚Äãfunction sortTokens(address tokenA, address tokenB) internal pure returns (address token0, address token1);CopySorts token addresses.pairFor‚Äãfunction pairFor(address factory, address tokenA, address tokenB) internal pure returns (address pair);CopyCalculates the address for a pair without making any external calls via the v2 SDK.getReserves‚Äãfunction getReserves(address factory, address tokenA, address tokenB) internal view returns (uint reserveA, uint reserveB);CopyCalls getReserves on the pair for the passed tokens, and returns the results sorted in the order that the parameters were passed in.quote‚Äãfunction quote(uint amountA, uint reserveA, uint reserveB) internal pure returns (uint amountB);CopyGiven some asset amount and reserves, returns an amount of the other asset representing equivalent value.Useful for calculating optimal token amounts before calling mint.getAmountOut‚Äãfunction getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) internal pure returns (uint amountOut);CopyGiven an input asset amount, returns the maximum output amount of the other asset (accounting for fees) given reserves.Used in getAmountsOut.getAmountIn‚Äãfunction getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) internal pure returns (uint amountIn);CopyReturns the minimum input asset amount required to buy the given output asset amount (accounting for fees) given reserves.Used in getAmountsIn.getAmountsOut‚Äãfunction getAmountsOut(uint amountIn, address[] memory path) internal view returns (uint[] memory amounts);CopyGiven an input asset amount and an array of token addresses, calculates all subsequent maximum output token amounts by calling getReserves for each pair of token addresses in the path in turn, and using these to call getAmountOut.Useful for calculating optimal token amounts before calling swap.getAmountsIn‚Äãfunction getAmountsIn(address factory, uint amountOut, address[] memory path) internal view returns (uint[] memory amounts);CopyGiven an output asset amount and an array of token addresses, calculates all preceding minimum input token amounts by calling getReserves for each pair of token addresses in the path in turn, and using these to call getAmountIn.Useful for calculating optimal token amounts before calling swap.Edit this pageHelpful?PreviousPair (ERC-20)NextRouter01CodesortTokenspairForgetReservesquotegetAmountOutgetAmountIngetAmountsOutgetAmountsInDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
724,p.org sdk v3 reference interfaces TickConstructorArgs,p.org sdk v3 reference interfaces TickConstructorArgs.    TickConstructorArgs | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesTickConstructorArgsHelpful?On this pageTickConstructorArgs@uniswap/v3-sdk / Exports / TickConstructorArgsInterface: TickConstructorArgsTable of contents‚ÄãProperties‚ÄãindexliquidityGrossliquidityNetProperties‚Äãindex‚Äã‚Ä¢ index: numberDefined in‚Äãentities/tick.ts:7liquidityGross‚Äã‚Ä¢ liquidityGross: BigintIshDefined in‚Äãentities/tick.ts:8liquidityNet‚Äã‚Ä¢ liquidityNet: BigintIshDefined in‚Äãentities/tick.ts:9Helpful?PreviousSwapOptionsNextTickDataProviderTable of contentsPropertiesPropertiesindexliquidityGrossliquidityNetDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
725,p.org sdk core reference modules.md#validateandparseaddress,p.org sdk core reference modules.md#validateandparseaddress. 
726,p.org sdk v3 reference classes TickListDataProvider#nextinitializedtickwithinoneword,"p.org sdk v3 reference classes TickListDataProvider#nextinitializedtickwithinoneword.    TickListDataProvider | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickListDataProviderHelpful?On this pageTickListDataProvider@uniswap/v3-sdk / Exports / TickListDataProviderClass: TickListDataProviderA data provider for ticks that is backed by an in-memory array of ticks.Implements‚ÄãTickDataProviderTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãticksMethods‚ÄãgetTicknextInitializedTickWithinOneWordConstructors‚Äãconstructor‚Äã‚Ä¢ new TickListDataProvider(ticks, tickSpacing)Parameters‚ÄãNameTypeticks(Tick | TickConstructorArgs)[]tickSpacingnumberDefined in‚Äãentities/tickListDataProvider.ts:12Properties‚Äãticks‚Äã‚Ä¢ Private ticks: readonly Tick[]Defined in‚Äãentities/tickListDataProvider.ts:10Methods‚ÄãgetTick‚Äã‚ñ∏ getTick(tick): Promise<{ liquidityGross: BigintIsh ; liquidityNet: BigintIsh }>Return information corresponding to a specific tickParameters‚ÄãNameTypeDescriptionticknumberthe tick to loadReturns‚ÄãPromise<{ liquidityGross: BigintIsh ; liquidityNet: BigintIsh }>Implementation of‚ÄãTickDataProvider.getTickDefined in‚Äãentities/tickListDataProvider.ts:18nextInitializedTickWithinOneWord‚Äã‚ñ∏ nextInitializedTickWithinOneWord(tick, lte, tickSpacing): Promise<[number, boolean]>Return the next tick that is initialized within a single wordParameters‚ÄãNameTypeDescriptionticknumberThe current tickltebooleanWhether the next tick should be lte the current ticktickSpacingnumberThe tick spacing of the poolReturns‚ÄãPromise<[number, boolean]>Implementation of‚ÄãTickDataProvider.nextInitializedTickWithinOneWordDefined in‚Äãentities/tickListDataProvider.ts:22Helpful?PreviousTickListNextTickMathImplementsTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesticksMethodsgetTicknextInitializedTickWithinOneWordDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
727,p.org sdk v3 reference interfaces IncentiveKey#starttime,p.org sdk v3 reference interfaces IncentiveKey#starttime.    IncentiveKey | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesIncentiveKeyHelpful?On this pageIncentiveKey@uniswap/v3-sdk / Exports / IncentiveKeyInterface: IncentiveKeyRepresents a unique staking program.Table of contents‚ÄãProperties‚ÄãendTimepoolrefundeerewardTokenstartTimeProperties‚ÄãendTime‚Äã‚Ä¢ endTime: BigintIshThe time that the incentive program ends.Defined in‚Äãstaker.ts:28pool‚Äã‚Ä¢ pool: PoolThe pool that the staked positions must provide in.Defined in‚Äãstaker.ts:20refundee‚Äã‚Ä¢ refundee: stringThe address which receives any remaining reward tokens at endTime.Defined in‚Äãstaker.ts:32rewardToken‚Äã‚Ä¢ rewardToken: TokenThe token rewarded for participating in the staking program.Defined in‚Äãstaker.ts:16startTime‚Äã‚Ä¢ startTime: BigintIshThe time when the incentive program begins.Defined in‚Äãstaker.ts:24Helpful?PreviousFeeOptionsNextIncreaseSpecificOptionsTable of contentsPropertiesPropertiesendTimepoolrefundeerewardTokenstartTimeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
728,p.org contracts v3 reference core interfaces callback IUniswapV3FlashCallback,"p.org contracts v3 reference core interfaces callback IUniswapV3FlashCallback.    IUniswapV3FlashCallback | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesIERC20MinimalIUniswapV3FactoryIUniswapV3PoolIUniswapV3PoolDeployercallbackIUniswapV3FlashCallbackIUniswapV3MintCallbackIUniswapV3SwapCallbackPoolLibrariesGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreInterfacescallbackIUniswapV3FlashCallbackHelpful?On this pageIUniswapV3FlashCallbackAny contract that calls IUniswapV3PoolActions#flash must implement this interfaceFunctions‚ÄãuniswapV3FlashCallback‚Äã function uniswapV3FlashCallback( uint256 fee0, uint256 fee1, bytes data ) externalCopyCalled to msg.sender after transferring to the recipient from IUniswapV3Pool#flash.In the implementation you must repay the pool the tokens sent by flash plus the computed fee amounts. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.Parameters:‚ÄãNameTypeDescriptionfee0uint256The fee amount in token0 due to the pool by the end of the flashfee1uint256The fee amount in token1 due to the pool by the end of the flashdatabytesAny data passed through by the caller via the IUniswapV3PoolActions#flash callEdit this pageHelpful?PreviousIUniswapV3PoolDeployerNextIUniswapV3MintCallbackFunctionsuniswapV3FlashCallbackDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
729,p.org contracts v3 reference governance overview.md,p.org contracts v3 reference governance overview.md. 
730,p.org concepts governance glossary,"p.org concepts governance glossary.    Glossary | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchWhat Is Uniswap?The Uniswap ProtocolProtocol ConceptsGovernanceOverviewProcessBeginners Guide to VotingGlossaryAdversarial CircumstancesChangelogResearchResourcesGlossaryüè†GovernanceGlossaryHelpful?GlossaryUNI: An ERC-20 token that designates the weight of a user's voting rights. The more UNI a user has in their wallet, the more weight their delegation or vote on a proposal holds.Delegation: UNI holders cannot vote or create proposals until they delegate their voting rights to an address. Delegation can be given to one address at a time, including the holder's own address. Note that delegation does not lock tokens; it simply adds votes to the chosen delegation address.Proposal: A proposal is executable code that modifies the governance contract or treasury and how they work. In order to create a proposal, a user must have at least 0.25% (2.5M UNI) of all UNI delegated to their address. Proposals are stored in the ""proposals"" mapping of the Governor smart contract. All proposals are subject to a 7-day voting period. If the proposer does not maintain their vote weight balance throughout the voting period, the proposal may be canceled by anyone.Quorum: In order for a vote to pass, it must achieve quorum of 4% of all UNI (40M) voting in the affirmative. The purpose of the quorum is to ensure that the only measures that pass have adequate voter participation.Voting: Users can vote for or against single proposals once they have voting rights delegated to their address. Votes can be cast while a proposal is in the ""Active"" state. Votes can be submitted immediately using ""castVote"" or submitted later with ""castVoteBySig"" (For more info on castVoteBySig and offline signatures, see EIP-712). If the majority of votes (and a 4% quorum of UNI) vote for a proposal, the proposal may be queued in the Timelock.Voting Period: Once a proposal has been put forward, Uniswap community members will have a seven day period (the Voting Period) to cast their votes.Timelock: All governance and other administrative actions are required to sit in the Timelock for a minimum of 2 days, after which they can be implemented.Helpful?PreviousBeginners Guide to VotingNextAdversarial CircumstancesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
731,p.org contracts v3 reference periphery test TickLensTest,p.org contracts v3 reference periphery test TickLensTest.    TickLensTest | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerTestBase64TestLiquidityAmountsTestMockTimeNonfungiblePositionManagerMockTimeSwapRouterNFTDescriptorTestPathTestPeripheryImmutableStateTestPoolAddressTestSelfPermitTestTestCallbackValidationTestERC20TestERC20MetadataTestERC20PermitAllowedTestMulticallTestPositionNFTOwnerTestUniswapV3CalleeTickLensTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryTestTickLensTestHelpful?On this pageTickLensTestFunctions‚ÄãgetGasCostOfGetPopulatedTicksInWord‚Äã function getGasCostOfGetPopulatedTicksInWord( ) external returns (uint256)CopyEdit this pageHelpful?PreviousTestUniswapV3CalleeNextNonfungiblePositionManagerFunctionsgetGasCostOfGetPopulatedTicksInWordDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
732,p.org sdk v2 reference route#path,"p.org sdk v2 reference route#path.    Route | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKOverviewGuidesSDK Quick startFetching DataPricingTradingPair AddressesTechnical ReferenceGetting StartedTokenPairRouteTradeFractionsFetcherOther ExportsV1 SDKüè†V2 SDKTechnical ReferenceRouteHelpful?On this pageRouteconstructor(pairs: Pair[], input: Token)CopyThe Route entity represents one or more ordered Uniswap pairs with a fully specified path from input token to output token.Exampleimport { ChainId, Token, TokenAmount, Pair, Route } from '@uniswap/sdk'const HOT = new Token(ChainId.MAINNET, '0xc0FFee0000000000000000000000000000000000', 18, 'HOT', 'Caffeine')const NOT = new Token(ChainId.MAINNET, '0xDeCAf00000000000000000000000000000000000', 18, 'NOT', 'Caffeine')const HOT_NOT = new Pair(new TokenAmount(HOT, '2000000000000000000'), new TokenAmount(NOT, '1000000000000000000'))const route = new Route([HOT_NOT], NOT)CopyPropertiespairs‚Äãpairs: Pair[]CopyThe ordered pairs that the route is comprised of.path‚Äãpath: Token[]CopyThe full path from input token to output token.input‚Äãinput: stringCopyThe input token.output‚Äãoutput: stringCopyThe output token.midPrice‚ÄãmidPrice: PriceCopyReturns the current mid price along the route.Helpful?PreviousPairNextTradepairspathinputoutputmidPriceDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
733,p.org contracts v2 reference API entities,"p.org contracts v2 reference API entities.    Entities | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIAPI OverviewEntitiesQueriesGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolTechnical ReferenceAPIEntitiesHelpful?On this pageEntitiesEntities define the schema of the subgraph, and represent the data that can be queried. Within each entity are sets of fields that store useful information related to the entity. Below is a list of the available entities within the Uniswap Subgraph, and descriptions for the available fields.To see an interactive sandbox of all entities see the Graph Explorer.Each entity is defined with a value type, which will always be a base AssemblyScript type, or a custom type provided by The Graph's custom TypeScript library. For more information on value types see here.Uniswap Factory‚ÄãThe Uniswap Factory entity is responsible for storing aggregate information across all Uniswap pairs. It can be used to view stats about total liquidity, volume, amount of pairs and more. There is only one UniswapFactory entity in the subgraph.Field NameValue TypeDescriptionidIDfactory addresspairCountIntamount of pairs created by the Uniswap factorytotalVolumeUSDBigDecimalall time USD volume across all pairs (USD is derived)totalVolumeETHBigDecimalall time volume in ETH across all pairs (ETH is derived)totalLiquidityUSDBigDecimaltotal liquidity across all pairs stored as a derived USD amounttotalLiquidityETHBigDecimaltotal liquidity across all pairs stored as a derived ETH amounttxCountBigIntall time amount of transactions across all pairsToken‚ÄãStores aggregated information for a specific token across all pairs that token is included in.Field NameValue TypeDescriptionidIDtoken addresssymbolStringtoken symbolnameStringtoken namedecimalsBigInttoken decimalstradeVolumeBigDecimalamount of token traded all time across all pairstradeVolumeUSDBigDecimalamount of token in USD traded all time across pairs (only for tokens with liquidity above minimum threshold)untrackedVolumeUSDBigDecimalamount of token in USD traded all time across pairs (no minimum liquidity threshold)txCountBigIntamount of transactions all time in pairs including tokentotalLiquidityBigDecimaltotal amount of token provided as liquidity across all pairsderivedETHBigDecimalETH per tokenPair‚ÄãInformation about a pair. Includes references to each token within the pair, volume information, liquidity information, and more. The pair entity mirrors the pair smart contract, and also contains aggregated information about use.Field NameValue TypeDescriptionidIDpair contract addressfactoryUniswapFactoryreference to Uniswap factory entitytoken0Tokenreference to token0 as stored in pair contracttoken1Tokenreference to token1 as stored in pair contractreserve0BigDecimalreserve of token0reserve1BigDecimalreserve of token1totalSupplyBigDecimaltotal supply of liquidity token distributed to LPsreserveETHBigDecimaltotal liquidity in pair stored as an amount of ETHreserveUSDBigDecimaltotal liquidity amount in pair stored as an amount of USDtrackedReserveETHBigDecimaltotal liquidity with only tracked amount (see tracked amounts)token0PriceBigDecimaltoken0 per token1token1PriceBigDecimaltoken1 per token0volumeToken0BigDecimalamount of token0 swapped on this pairvolumeToken1BigDecimalamount of token1 swapped on this pairvolumeUSDBigDecimaltotal amount swapped all time in this pair stored in USD (only tracked if USD liquidity is above minimum threshold)untrackedVolumeUSDBigDecimaltotal amount swapped all time in this pair stored in USD, no minimum liquidity thresholdtxCountBigIntall time amount of transactions on this paircreatedAtTimestampBigInttimestamp contract was createdcreatedAtBlockNumberBigIntEthereum block contract was createdliquidityPositions[LiquidityPosition]array of liquidity providers, used as a reference to LP entitiesUser‚ÄãA user entity is created for any address that provides liquidity to a pool on Uniswap. This entity can be used to track open positions for users. LiquidyPosition entities can be referenced to get specific data about each position.Field NameValue TypeDescriptionidIDuser addressliquidityPositions[LiquidityPosition]array of all liquidity positions user has openusdSwappedBigDecimaltotal USD value swappedLiquidityPositiion‚ÄãThis entity is used to store data about a user's liquidity position. This information, along with information from the pair itself can be used to provide position sizes, token deposits, and more.Field NameValue TypeDescriptionidIDuser address and pair address concatenated with a dashuserUserreference to userpairPairreference to the pair liquidity is being provided onliquidityTokenBalanceBigDecimalamount of LP tokens minted for this positionTransaction‚ÄãTransaction entities are created for each Ethereum transaction that contains an interaction within Uniswap contracts. This subgraph tracks Mint, Burn, and Swap events on the Uniswap core contracts. Each transaction contains 3 arrays, and at least one of these arrays has a length of 1.Field NameValue TypeDescriptionidIDEthereum transaction hashblockNumberBigIntblock transaction was mined intimestampBigInttimestamp for transactionmints[Mint]array of Mint events within the transaction, 0 or greaterburns[Burn]array of Burn events within transaction, 0 or greaterswaps[Swap]array of Swap events within transaction, 0 or greaterMint‚ÄãMint entities are created for every emitted Mint event on the Uniswap core contracts. The Mint entity stores key data about the event like token amounts, who sent the transaction, who received the liquidity, and more. This entity can be used to track liquidity provisions on pairs.Field NameValue TypeDescriptionidIDTransaction hash plus index in the transaction mint arraytransactionTransactionreference to the transaction Mint was included intimestampBigInttimestamp of Mint, used to sort recent liquidity provisionspairPairreference to pairtoBytesrecipient of liquidity tokensliquidityBigDecimalamount of liquidity tokens mintedsenderBytesaddress that initiated the liquidity provisionamount0BigDecimalamount of token0 providedamount1BigDecimalamount of token1 providedlogIndexBigIntindex in the transaction event was emittedamountUSDBigDecimalderived USD value of token0 amount plus token1 amountfeeToBytesaddress of fee recipient (if fee is on)feeLiquidityBigDecimalamount of liquidity sent to fee recipient (if fee is on)Burn‚ÄãBurn entities are created for every emitted Burn event on the Uniswap core contracts. The Burn entity stores key data about the event like token amounts, who burned LP tokens, who received tokens, and more. This entity can be used to track liquidity removals on pairs.Field NameValue TypeDescriptionidIDTransaction hash plus index in the transaction burn arraytransactionTransactionreference to the transaction Burn was included intimestampBigInttimestamp of Burn, used to sort recent liquidity removalspairPairreference to pairtoBytesrecipient of tokensliquidityBigDecimalamount of liquidity tokens burnedsenderBytesaddress that initiated the liquidity removalamount0BigDecimalamount of token0 removedamount1BigDecimalamount of token1 removedlogIndexBigIntindex in the transaction event was emittedamountUSDBigDecimalderived USD value of token0 amount plus token1 amountfeeToBytesaddress of fee recipient (if fee is on)feeLiquidityBigDecimalamount of tokens sent to fee recipient (if fee is on)Swap‚ÄãSwap entities are created for each token swap within a pair. The Swap entity can be used to get things like swap size (in tokens and USD), sender, recipient and more. See the Swap overview page for more information on amounts.Field NameValue TypeDescriptionidIDtransaction hash plus index in Transaction swap arraytransactionTransactionreference to transaction swap was included intimestampBigInttimestamp of swap, used for sorted lookupspairPairreference to pairsenderBytesaddress that initiated the swapamount0InBigDecimalamount of token0 soldamount1InBigDecimalamount of token1 soldamount0OutBigDecimalamount of token0 receivedamount1OutBigDecimalamount of token1 receivedtoBytesrecipient of output tokenslogIndexBigIntevent index within transactionamountUSDBigDecimalderived amount of tokens sold in USDBundle‚ÄãThe Bundle is used as a global store of derived ETH price in USD. Because there is no guaranteed common base token across pairs, a global reference of USD price is useful for deriving other USD values. The Bundle entity stores an updated weighted average of ETH<->Stablecoin pair prices. This provides a strong estimate for the USD price of ETH that can be used in other places in the subgraph.Field NameValue TypeDescriptionidIDconstant 1ethPriceBigDecimalderived price of ETH in USD based on stablecoin pairsHistorical Entities‚ÄãThe subgraph tracks aggregated information grouped by days to provide insights to daily activity on Uniswap. While time travel queries can be used for direct comparison against values in the past, it is much more expensive to query grouped data. For this reason the subgraph tracks information grouped in daily buckets, using timestamps provided by contract events. These entities can be used to query things like total volume on a given day, price of a token on a given day, etc.For each DayData type, a new entity is created each day.UniswapDayData‚ÄãTracks data across all pairs aggregated into a daily bucket.Field NameValue TypeDescriptionidIDunix timestamp for start of day / 86400 giving a unique day indexdateIntunix timestamp for start of daydailyVolumeETHBigDecimaltotal volume across all pairs on this day, stored as a derived amount of ETHdailyVolumeUSDBigDecimaltotal volume across all pairs on this day, stored as a derived amount of USDtotalVolumeETHBigDecimalall time volume across all pairs in ETH up to and including this daytotalLiquidityETHBigDecimaltotal liquidity across all pairs in ETH up to and including this daytotalVolumeUSDBigDecimalall time volume across all pairs in USD up to and including this daytotalLiquidityUSDBigDecimaltotal liquidity across all pairs in USD up to and including this daymaxStoredIntreference used to store most liquid tokens, used for historical liquidity chartsmostLiquidTokens[TokenDayData!]tokens with most liquidity in UniswaptxCountBigIntnumber of transactions throughout this dayPair Day Data‚ÄãTracks pair data across each day.Field NameValue TypeDescriptionidIDpair contract address and day id (day start timestamp in unix / 86400) concatenated with a dashdateIntunix timestamp for start of daypairAddressBytesaddress for pair contracttoken0Tokenreference to token0token1Tokenreference to token1reserve0BigDecimalreserve of token0 (updated during each transaction on pair)reserve1BigDecimalreserve of token1 (updated during each transaction on pair)totalSupplyBigDecimaltotal supply of liquidity token distributed to LPsreserveUSDBigDecimalreserve of token0 plus token1 stored as a derived USD amountdailyVolumeToken0BigDecimaltotal amount of token0 swapped throughout daydailyVolumeToken1BigDecimaltotal amount of token1 swapped throughout daydailyVolumeUSDBigDecimaltotal volume within pair throughout daydailyTxnsBigIntamount of transactions on pair throughout dayTokenDayData‚ÄãTracks token data aggregated across all pairs that include token.Field NameValue TypeDescriptionidIDtoken address and day id (day start timestamp in unix / 86400) concatenated with a dashdateIntunix timestamp for start of daytokenTokenreference to token entitydailyVolumeTokenBigDecimalamount of token swapped across all pairs throughout daydailyVolumeETHBigDecimalamount of token swapped across all pairs throughout day stored as a derived amount of ETHdailyVolumeUSDBigDecimalamount of token swapped across all pairs throughout day stored as a derived amount of USDdailyTxnsBigIntamount of transactions with this token across all pairstotalLiquidityTokenBigDecimaltoken amount of token deposited across all pairstotalLiquidityETHBigDecimaltoken amount of token deposited across all pairs stored as amount of ETHtotalLiquidityUSDBigDecimaltoken amount of token deposited across all pairs stored as amount of USDpriceUSDBigDecimalprice of token in derived USDmaxStoredIntamount of token deposited in pair with highest token liquidity - used only as a reference for storing most liquid pairs for this tokenmostLiquidPairs[PairDayData]pairs with most liquidity for this tokenEdit this pageHelpful?PreviousAPI OverviewNextQueriesUniswap FactoryTokenPairUserLiquidityPositiionTransactionMintBurnSwapBundleHistorical EntitiesUniswapDayDataPair Day DataTokenDayDataDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
734,p.org contracts v2 concepts advanced topics research,"p.org contracts v2 concepts advanced topics research.    Research | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsFeesPricingUnderstanding ReturnsSecurityMathResearchGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolConceptsAdvanced TopicsResearchHelpful?ResearchThe automated market maker is a new concept, and as such, new research comes out frequently. We've selected some of the most thoughtful here.Uniswap's Financial AlchemyAuthors: Dave White, Martin Tassy, Charlie Noyes, and Dan RobinsonAn automated market maker is a type of decentralized exchange that lets customers trade between on-chain assets like USDC and ETH. Uniswap is the most popular AMM on Ethereum. Like most AMMs, Uniswap facilitates trading between a particular pair of assets by holding reserves of both assets. It sets the trading price between them based on the size of its reserves in such a way that prices will stay in line with the broader market. Anybody who would like to can join the ‚Äúpool‚Äù for a particular pair and become a liquidity provider, or LP, so-called because they provide liquid assets for others to trade against. LPs contribute assets to both reserves simultaneously, taking on some of the risk of trading in exchange for a share of the returns.Uniswap's Financial AlchemyAn analysis of Uniswap marketsAuthors: Guillermo Angeris, Hsien-Tang Kao, Rei Chiang, Charlie Noyes, Tarun ChitraUniswap---and other constant product markets---appear to work well in practice despite their simplicity. In this paper, we give a simple formal analysis of constant product markets and their generalizations, showing that, under some common conditions, these markets must closely track the reference market price. We also show that Uniswap satisfies many other desirable properties and numerically demonstrate, via a large-scale agent-based simulation, that Uniswap is stable under a wide range of market conditions.An analysis of Uniswap marketsImproved Price Oracles: Constant Function Market MakersAuthors: Guillermo Angeris, Tarun ChitraAutomated market makers, first popularized by Hanson's logarithmic market scoring rule (or LMSR) for prediction markets, have become important building blocks, called 'primitives,' for decentralized finance. A particularly useful primitive is the ability to measure the price of an asset, a problem often known as the pricing oracle problem. In this paper, we focus on the analysis of a very large class of automated market makers, called constant function market makers (or CFMMs) which includes existing popular market makers such as Uniswap, Balancer, and Curve, whose yearly transaction volume totals to billions of dollars. We give sufficient conditions such that, under fairly general assumptions, agents who interact with these constant function market makers are incentivized to correctly report the price of an asset and that they can do so in a computationally efficient way. We also derive several other useful properties that were previously not known. These include lower bounds on the total value of assets held by CFMMs and lower bounds guaranteeing that no agent can, by any set of trades, drain the reserves of assets held by a given CFMM.Improved Price Oracles: Constant Function Market MakersPintail researchPublished medium articles by Pintail.Understanding Uniswap ReturnsUniswap: A Good Deal for Liquidity Providers?Liquidity Provider Returns in Geometric Mean MarketsAuthors: Alex EvansGeometric mean market makers (G3Ms), such as Uniswap and Balancer, comprise a popular class of automated market makers (AMMs) defined by the following rule: the reserves of the AMM before and after each trade must have the same (weighted) geometric mean. This paper extends several results known for constant-weight G3Ms to the general case of G3Ms with time-varying and potentially stochastic weights. These results include the returns and no-arbitrage prices of liquidity pool (LP) shares that investors receive for supplying liquidity to G3Ms. Using these expressions, we show how to create G3Ms whose LP shares replicate the payoffs of financial derivatives. The resulting hedges are model-independent and exact for derivative contracts whose payoff functions satisfy an elasticity constraint. These strategies allow LP shares to replicate various trading strategies and financial contracts, including standard options. G3Ms are thus shown to be capable of recreating a variety of active trading strategies through passive positions in LP shares.Liquidity Provider Returns in Geometric Mean MarketsThe Replicating Portfolio of a Constant Product MarketAuthors: Joseph ClarkWe derive the replicating portfolio of a constant product market. This is structurally short volatility (selling options) which explains why positive transaction costs are needed to induce liquidity providers to participate. Where futures and options markets do not exist, this payoff can be used to create them.https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3550601Edit this pageHelpful?PreviousMathNextUsing the APIDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
735,p.org contracts v1 guides connect to uniswap,"p.org contracts v1 guides connect to uniswap.    Connect to Uniswap | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 ProtocolOverviewGuidesConnect to UniswapPool LiquidityTrade TokensCustom LinkingIframe IntegrationToken ListingTechnical ReferenceFactoryExchangeInterfacesüè†V1 ProtocolGuidesConnect to UniswapHelpful?On this pageConnect to UniswapThe Uniswap smart contracts exist on the Ethereum blockchain. Use ethers.js or web3.js to connect your website to Ethereum. Users will need a web3-enabled browser. On desktop this means using the MetaMask extension or something similar. On mobile, web3-compatible browsers include Trust Wallet and Coinbase Wallet. See ethereum.org to learn more.Factory ContractThe Uniswap factory contract can be used to create exchange contracts for any ERC20 token that does not already have one. It also functions as a registry of ERC20 tokens that have been added to the system, and the exchange with which they are associated.The factory contract can be instantiated using the factory address and ABI:Factory Address‚Äã// mainnetconst factory = '0xc0a47dFe034B400B47bDaD5FecDa2621de6c4d95'// testnetsconst ropsten = '0x9c83dCE8CA20E9aAF9D3efc003b2ea62aBC08351'const rinkeby = '0xf5D915570BC477f9B8D6C0E980aA81757A3AaC36'const kovan = '0xD3E51Ef092B2845f10401a0159B2B96e8B6c3D30'const g√∂rli = '0x6Ce570d02D73d4c384b46135E87f8C592A8c86dA'CopyFactory Interface‚ÄãCreating the factory interface in web3 requires the factory address and the factory ABI:const factoryABI = [ { name: 'NewExchange', inputs: [  { type: 'address', name: 'token', indexed: true },  { type: 'address', name: 'exchange', indexed: true }, ], anonymous: false, type: 'event', }, { name: 'initializeFactory', outputs: [], inputs: [{ type: 'address', name: 'template' }], constant: false, payable: false, type: 'function', gas: 35725, }, { name: 'createExchange', outputs: [{ type: 'address', name: 'out' }], inputs: [{ type: 'address', name: 'token' }], constant: false, payable: false, type: 'function', gas: 187911, }, { name: 'getExchange', outputs: [{ type: 'address', name: 'out' }], inputs: [{ type: 'address', name: 'token' }], constant: true, payable: false, type: 'function', gas: 715, }, { name: 'getToken', outputs: [{ type: 'address', name: 'out' }], inputs: [{ type: 'address', name: 'exchange' }], constant: true, payable: false, type: 'function', gas: 745, }, { name: 'getTokenWithId', outputs: [{ type: 'address', name: 'out' }], inputs: [{ type: 'uint256', name: 'token_id' }], constant: true, payable: false, type: 'function', gas: 736, }, { name: 'exchangeTemplate', outputs: [{ type: 'address', name: 'out' }], inputs: [], constant: true, payable: false, type: 'function', gas: 633, }, { name: 'tokenCount', outputs: [{ type: 'uint256', name: 'out' }], inputs: [], constant: true, payable: false, type: 'function', gas: 663, },]Copyconst factoryContract = new web3.eth.Contract(factoryABI, factoryAddress)CopyExchange ContractsGet Exchange Address‚ÄãThere is a separate exchange contract for every ERC20 token. The getExchange method in the factory contract can be used to find the Ethereum address associated with an ERC20 token address.const exchangeAddress = factoryContract.methods.getExchange(tokenAddress)CopyIf the return value is 0x0000000000000000000000000000000000000000 the token does not yet have an exchange.Exchange Interface‚ÄãCreating an exchange interface in web3 requires the exchange address and the exchange ABI:const exchangeABI = [ { name: 'TokenPurchase', inputs: [  { type: 'address', name: 'buyer', indexed: true },  { type: 'uint256', name: 'eth_sold', indexed: true },  { type: 'uint256', name: 'tokens_bought', indexed: true }, ], anonymous: false, type: 'event', }, { name: 'EthPurchase', inputs: [  { type: 'address', name: 'buyer', indexed: true },  { type: 'uint256', name: 'tokens_sold', indexed: true },  { type: 'uint256', name: 'eth_bought', indexed: true }, ], anonymous: false, type: 'event', }, { name: 'AddLiquidity', inputs: [  { type: 'address', name: 'provider', indexed: true },  { type: 'uint256', name: 'eth_amount', indexed: true },  { type: 'uint256', name: 'token_amount', indexed: true }, ], anonymous: false, type: 'event', }, { name: 'RemoveLiquidity', inputs: [  { type: 'address', name: 'provider', indexed: true },  { type: 'uint256', name: 'eth_amount', indexed: true },  { type: 'uint256', name: 'token_amount', indexed: true }, ], anonymous: false, type: 'event', }, { name: 'Transfer', inputs: [  { type: 'address', name: '_from', indexed: true },  { type: 'address', name: '_to', indexed: true },  { type: 'uint256', name: '_value', indexed: false }, ], anonymous: false, type: 'event', }, { name: 'Approval', inputs: [  { type: 'address', name: '_owner', indexed: true },  { type: 'address', name: '_spender', indexed: true },  { type: 'uint256', name: '_value', indexed: false }, ], anonymous: false, type: 'event', }, { name: 'setup', outputs: [], inputs: [{ type: 'address', name: 'token_addr' }], constant: false, payable: false, type: 'function', gas: 175875, }, { name: 'addLiquidity', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'min_liquidity' },  { type: 'uint256', name: 'max_tokens' },  { type: 'uint256', name: 'deadline' }, ], constant: false, payable: true, type: 'function', gas: 82605, }, { name: 'removeLiquidity', outputs: [  { type: 'uint256', name: 'out' },  { type: 'uint256', name: 'out' }, ], inputs: [  { type: 'uint256', name: 'amount' },  { type: 'uint256', name: 'min_eth' },  { type: 'uint256', name: 'min_tokens' },  { type: 'uint256', name: 'deadline' }, ], constant: false, payable: false, type: 'function', gas: 116814, }, { name: '__default__', outputs: [], inputs: [], constant: false, payable: true, type: 'function', }, { name: 'ethToTokenSwapInput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'min_tokens' },  { type: 'uint256', name: 'deadline' }, ], constant: false, payable: true, type: 'function', gas: 12757, }, { name: 'ethToTokenTransferInput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'min_tokens' },  { type: 'uint256', name: 'deadline' },  { type: 'address', name: 'recipient' }, ], constant: false, payable: true, type: 'function', gas: 12965, }, { name: 'ethToTokenSwapOutput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'tokens_bought' },  { type: 'uint256', name: 'deadline' }, ], constant: false, payable: true, type: 'function', gas: 50455, }, { name: 'ethToTokenTransferOutput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'tokens_bought' },  { type: 'uint256', name: 'deadline' },  { type: 'address', name: 'recipient' }, ], constant: false, payable: true, type: 'function', gas: 50663, }, { name: 'tokenToEthSwapInput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'tokens_sold' },  { type: 'uint256', name: 'min_eth' },  { type: 'uint256', name: 'deadline' }, ], constant: false, payable: false, type: 'function', gas: 47503, }, { name: 'tokenToEthTransferInput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'tokens_sold' },  { type: 'uint256', name: 'min_eth' },  { type: 'uint256', name: 'deadline' },  { type: 'address', name: 'recipient' }, ], constant: false, payable: false, type: 'function', gas: 47712, }, { name: 'tokenToEthSwapOutput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'eth_bought' },  { type: 'uint256', name: 'max_tokens' },  { type: 'uint256', name: 'deadline' }, ], constant: false, payable: false, type: 'function', gas: 50175, }, { name: 'tokenToEthTransferOutput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'eth_bought' },  { type: 'uint256', name: 'max_tokens' },  { type: 'uint256', name: 'deadline' },  { type: 'address', name: 'recipient' }, ], constant: false, payable: false, type: 'function', gas: 50384, }, { name: 'tokenToTokenSwapInput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'tokens_sold' },  { type: 'uint256', name: 'min_tokens_bought' },  { type: 'uint256', name: 'min_eth_bought' },  { type: 'uint256', name: 'deadline' },  { type: 'address', name: 'token_addr' }, ], constant: false, payable: false, type: 'function', gas: 51007, }, { name: 'tokenToTokenTransferInput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'tokens_sold' },  { type: 'uint256', name: 'min_tokens_bought' },  { type: 'uint256', name: 'min_eth_bought' },  { type: 'uint256', name: 'deadline' },  { type: 'address', name: 'recipient' },  { type: 'address', name: 'token_addr' }, ], constant: false, payable: false, type: 'function', gas: 51098, }, { name: 'tokenToTokenSwapOutput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'tokens_bought' },  { type: 'uint256', name: 'max_tokens_sold' },  { type: 'uint256', name: 'max_eth_sold' },  { type: 'uint256', name: 'deadline' },  { type: 'address', name: 'token_addr' }, ], constant: false, payable: false, type: 'function', gas: 54928, }, { name: 'tokenToTokenTransferOutput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'tokens_bought' },  { type: 'uint256', name: 'max_tokens_sold' },  { type: 'uint256', name: 'max_eth_sold' },  { type: 'uint256', name: 'deadline' },  { type: 'address', name: 'recipient' },  { type: 'address', name: 'token_addr' }, ], constant: false, payable: false, type: 'function', gas: 55019, }, { name: 'tokenToExchangeSwapInput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'tokens_sold' },  { type: 'uint256', name: 'min_tokens_bought' },  { type: 'uint256', name: 'min_eth_bought' },  { type: 'uint256', name: 'deadline' },  { type: 'address', name: 'exchange_addr' }, ], constant: false, payable: false, type: 'function', gas: 49342, }, { name: 'tokenToExchangeTransferInput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'tokens_sold' },  { type: 'uint256', name: 'min_tokens_bought' },  { type: 'uint256', name: 'min_eth_bought' },  { type: 'uint256', name: 'deadline' },  { type: 'address', name: 'recipient' },  { type: 'address', name: 'exchange_addr' }, ], constant: false, payable: false, type: 'function', gas: 49532, }, { name: 'tokenToExchangeSwapOutput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'tokens_bought' },  { type: 'uint256', name: 'max_tokens_sold' },  { type: 'uint256', name: 'max_eth_sold' },  { type: 'uint256', name: 'deadline' },  { type: 'address', name: 'exchange_addr' }, ], constant: false, payable: false, type: 'function', gas: 53233, }, { name: 'tokenToExchangeTransferOutput', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'uint256', name: 'tokens_bought' },  { type: 'uint256', name: 'max_tokens_sold' },  { type: 'uint256', name: 'max_eth_sold' },  { type: 'uint256', name: 'deadline' },  { type: 'address', name: 'recipient' },  { type: 'address', name: 'exchange_addr' }, ], constant: false, payable: false, type: 'function', gas: 53423, }, { name: 'getEthToTokenInputPrice', outputs: [{ type: 'uint256', name: 'out' }], inputs: [{ type: 'uint256', name: 'eth_sold' }], constant: true, payable: false, type: 'function', gas: 5542, }, { name: 'getEthToTokenOutputPrice', outputs: [{ type: 'uint256', name: 'out' }], inputs: [{ type: 'uint256', name: 'tokens_bought' }], constant: true, payable: false, type: 'function', gas: 6872, }, { name: 'getTokenToEthInputPrice', outputs: [{ type: 'uint256', name: 'out' }], inputs: [{ type: 'uint256', name: 'tokens_sold' }], constant: true, payable: false, type: 'function', gas: 5637, }, { name: 'getTokenToEthOutputPrice', outputs: [{ type: 'uint256', name: 'out' }], inputs: [{ type: 'uint256', name: 'eth_bought' }], constant: true, payable: false, type: 'function', gas: 6897, }, { name: 'tokenAddress', outputs: [{ type: 'address', name: 'out' }], inputs: [], constant: true, payable: false, type: 'function', gas: 1413, }, { name: 'factoryAddress', outputs: [{ type: 'address', name: 'out' }], inputs: [], constant: true, payable: false, type: 'function', gas: 1443, }, { name: 'balanceOf', outputs: [{ type: 'uint256', name: 'out' }], inputs: [{ type: 'address', name: '_owner' }], constant: true, payable: false, type: 'function', gas: 1645, }, { name: 'transfer', outputs: [{ type: 'bool', name: 'out' }], inputs: [  { type: 'address', name: '_to' },  { type: 'uint256', name: '_value' }, ], constant: false, payable: false, type: 'function', gas: 75034, }, { name: 'transferFrom', outputs: [{ type: 'bool', name: 'out' }], inputs: [  { type: 'address', name: '_from' },  { type: 'address', name: '_to' },  { type: 'uint256', name: '_value' }, ], constant: false, payable: false, type: 'function', gas: 110907, }, { name: 'approve', outputs: [{ type: 'bool', name: 'out' }], inputs: [  { type: 'address', name: '_spender' },  { type: 'uint256', name: '_value' }, ], constant: false, payable: false, type: 'function', gas: 38769, }, { name: 'allowance', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'address', name: '_owner' },  { type: 'address', name: '_spender' }, ], constant: true, payable: false, type: 'function', gas: 1925, }, { name: 'name', outputs: [{ type: 'bytes32', name: 'out' }], inputs: [], constant: true, payable: false, type: 'function', gas: 1623, }, { name: 'symbol', outputs: [{ type: 'bytes32', name: 'out' }], inputs: [], constant: true, payable: false, type: 'function', gas: 1653, }, { name: 'decimals', outputs: [{ type: 'uint256', name: 'out' }], inputs: [], constant: true, payable: false, type: 'function', gas: 1683, }, { name: 'totalSupply', outputs: [{ type: 'uint256', name: 'out' }], inputs: [], constant: true, payable: false, type: 'function', gas: 1713, },]Copyconst exchangeContract = new web3.eth.Contract(exchangeABI, exchangeAddress)CopyToken ContractsSome Uniswap interactions require making calls directly to ERC20 token contracts rather than the exchanges with which they are associated.Get Token Address‚ÄãThe getToken method in the factory contract can be used to find the ERC20 token address associated with an exchange contract. There is no barrier of entry for adding an ERC20 token to Uniswap or checks on the validity of the token contracts. Frontend interfaces should maintain a list of valid ERC20 tokens that users can safely trade or allow users to paste in arbitrary addresses.const tokenAddress = factoryContract.methods.getToken(exchangeAddress)CopyIf the return value is 0x0000000000000000000000000000000000000000 the input address is not a Uniswap exchange.Token Interface‚ÄãCreating a token interface in web3 requires the token address and the token ABI:const tokenABI = [ { name: 'Transfer', inputs: [  { type: 'address', name: '_from', indexed: true },  { type: 'address', name: '_to', indexed: true },  { type: 'uint256', name: '_value', indexed: false }, ], anonymous: false, type: 'event', }, { name: 'Approval', inputs: [  { type: 'address', name: '_owner', indexed: true },  { type: 'address', name: '_spender', indexed: true },  { type: 'uint256', name: '_value', indexed: false }, ], anonymous: false, type: 'event', }, { name: '__init__', outputs: [], inputs: [  { type: 'bytes32', name: '_name' },  { type: 'bytes32', name: '_symbol' },  { type: 'uint256', name: '_decimals' },  { type: 'uint256', name: '_supply' }, ], constant: false, payable: false, type: 'constructor', }, { name: 'deposit', outputs: [], inputs: [], constant: false, payable: true, type: 'function', gas: 74279, }, { name: 'withdraw', outputs: [{ type: 'bool', name: 'out' }], inputs: [{ type: 'uint256', name: '_value' }], constant: false, payable: false, type: 'function', gas: 108706, }, { name: 'totalSupply', outputs: [{ type: 'uint256', name: 'out' }], inputs: [], constant: true, payable: false, type: 'function', gas: 543, }, { name: 'balanceOf', outputs: [{ type: 'uint256', name: 'out' }], inputs: [{ type: 'address', name: '_owner' }], constant: true, payable: false, type: 'function', gas: 745, }, { name: 'transfer', outputs: [{ type: 'bool', name: 'out' }], inputs: [  { type: 'address', name: '_to' },  { type: 'uint256', name: '_value' }, ], constant: false, payable: false, type: 'function', gas: 74698, }, { name: 'transferFrom', outputs: [{ type: 'bool', name: 'out' }], inputs: [  { type: 'address', name: '_from' },  { type: 'address', name: '_to' },  { type: 'uint256', name: '_value' }, ], constant: false, payable: false, type: 'function', gas: 110600, }, { name: 'approve', outputs: [{ type: 'bool', name: 'out' }], inputs: [  { type: 'address', name: '_spender' },  { type: 'uint256', name: '_value' }, ], constant: false, payable: false, type: 'function', gas: 37888, }, { name: 'allowance', outputs: [{ type: 'uint256', name: 'out' }], inputs: [  { type: 'address', name: '_owner' },  { type: 'address', name: '_spender' }, ], constant: true, payable: false, type: 'function', gas: 1025, }, { name: 'name', outputs: [{ type: 'bytes32', name: 'out' }], inputs: [], constant: true, payable: false, type: 'function', gas: 723, }, { name: 'symbol', outputs: [{ type: 'bytes32', name: 'out' }], inputs: [], constant: true, payable: false, type: 'function', gas: 753, }, { name: 'decimals', outputs: [{ type: 'uint256', name: 'out' }], inputs: [], constant: true, payable: false, type: 'function', gas: 783, },]Copyconst tokenContract = new web3.eth.Contract(tokenABI, tokenAddress)CopyEdit this pageHelpful?PreviousOverviewNextPool LiquidityFactory AddressFactory InterfaceGet Exchange AddressExchange InterfaceGet Token AddressToken InterfaceDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
736,p.org sdk core reference classes NativeCurrency#decimals,"p.org sdk core reference classes NativeCurrency#decimals.    NativeCurrency | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesNativeCurrencyHelpful?On this pageNativeCurrency@uniswap/sdk-core / Exports / NativeCurrencyClass: NativeCurrencyRepresents the native currency of the chain on which it resides, e.g.Hierarchy‚ÄãBaseCurrency‚Ü≥ NativeCurrency‚Ü≥‚Ü≥ EtherTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãchainIddecimalsisNativeisTokennamesymbolAccessors‚ÄãwrappedMethods‚ÄãequalsConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new NativeCurrency(chainId, decimals, symbol?, name?)Constructs an instance of the base class BaseCurrency.Parameters‚ÄãNameTypeDescriptionchainIdnumberthe chain ID on which this currency residesdecimalsnumberdecimals of the currencysymbol?stringsymbol of the currencyname?stringof the currencyInherited from‚ÄãBaseCurrency.constructorDefined in‚Äãentities/baseCurrency.ts:42Properties‚ÄãchainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãBaseCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãBaseCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: trueOverrides‚ÄãBaseCurrency.isNativeDefined in‚Äãentities/nativeCurrency.ts:7isToken‚Äã‚Ä¢ Readonly isToken: falseOverrides‚ÄãBaseCurrency.isTokenDefined in‚Äãentities/nativeCurrency.ts:8name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãBaseCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãBaseCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29Accessors‚Äãwrapped‚Äã‚Ä¢ Abstract get wrapped(): TokenReturn the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to be used in UniswapReturns‚ÄãTokenInherited from‚ÄãBaseCurrency.wrappedDefined in‚Äãentities/baseCurrency.ts:62Methods‚Äãequals‚Äã‚ñ∏ Abstract equals(other): booleanReturns whether this currency is functionally equivalent to the other currencyParameters‚ÄãNameTypeDescriptionotherCurrencythe other currencyReturns‚ÄãbooleanInherited from‚ÄãBaseCurrency.equalsDefined in‚Äãentities/baseCurrency.ts:56Helpful?PreviousFractionNextPercentHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertieschainIddecimalsisNativeisTokennamesymbolAccessorswrappedMethodsequalsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
737,p.org sdk core reference classes Token#name,"p.org sdk core reference classes Token#name.    Token | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesTokenHelpful?On this pageToken@uniswap/sdk-core / Exports / TokenClass: TokenRepresents an ERC20 token with a unique address and some metadata.Hierarchy‚ÄãBaseCurrency‚Ü≥ TokenTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãaddresschainIddecimalsisNativeisTokennamesymbolAccessors‚ÄãwrappedMethods‚ÄãequalssortsBeforeConstructors‚Äãconstructor‚Äã‚Ä¢ new Token(chainId, address, decimals, symbol?, name?, bypassChecksum?)Parameters‚ÄãNameTypeDescriptionchainIdnumberBaseCurrency#chainIdaddressstringThe contract address on the chain on which this token livesdecimalsnumberBaseCurrency#decimalssymbol?stringBaseCurrency#symbolname?stringBaseCurrency#namebypassChecksum?booleanIf true it only checks for length === 42, startsWith 0x and contains only hex charactersOverrides‚ÄãBaseCurrency.constructorDefined in‚Äãentities/token.ts:27Properties‚Äãaddress‚Äã‚Ä¢ Readonly address: stringThe contract address on the chain on which this token livesDefined in‚Äãentities/token.ts:16chainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãBaseCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãBaseCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: falseOverrides‚ÄãBaseCurrency.isNativeDefined in‚Äãentities/token.ts:10isToken‚Äã‚Ä¢ Readonly isToken: trueOverrides‚ÄãBaseCurrency.isTokenDefined in‚Äãentities/token.ts:11name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãBaseCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãBaseCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29Accessors‚Äãwrapped‚Äã‚Ä¢ get wrapped(): TokenReturn this token, which does not need to be wrappedReturns‚ÄãTokenOverrides‚ÄãBaseCurrency.wrappedDefined in‚Äãentities/token.ts:66Methods‚Äãequals‚Äã‚ñ∏ equals(other): booleanReturns true if the two tokens are equivalent, i.e. have the same chainId and address.Parameters‚ÄãNameTypeDescriptionotherCurrencyother token to compareReturns‚ÄãbooleanOverrides‚ÄãBaseCurrency.equalsDefined in‚Äãentities/token.ts:47sortsBefore‚Äã‚ñ∏ sortsBefore(other): booleanReturns true if the address of this token sorts before the address of the other tokenThrowsif the tokens have the same addressThrowsif the tokens are on different chainsParameters‚ÄãNameTypeDescriptionotherTokenother token to compareReturns‚ÄãbooleanDefined in‚Äãentities/token.ts:57Helpful?PreviousPriceNextRoundingHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesaddresschainIddecimalsisNativeisTokennamesymbolAccessorswrappedMethodsequalssortsBeforeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
738,p.org sdk core reference enums Rounding#round half up,p.org sdk core reference enums Rounding#round half up.    Rounding | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesenumsRoundingSupportedChainIdTradeTypeV2 SDKV1 SDKüè†Core SDKTechnical ReferenceenumsRoundingHelpful?On this pageRounding@uniswap/sdk-core / Exports / RoundingEnumeration: RoundingTable of contents‚ÄãEnumeration Members‚ÄãROUND_DOWNROUND_HALF_UPROUND_UPEnumeration Members‚ÄãROUND_DOWN‚Äã‚Ä¢ ROUND_DOWN = 0Defined in‚Äãconstants.ts:32ROUND_HALF_UP‚Äã‚Ä¢ ROUND_HALF_UP = 1Defined in‚Äãconstants.ts:33ROUND_UP‚Äã‚Ä¢ ROUND_UP = 2Defined in‚Äãconstants.ts:34Helpful?PreviousTokenNextSupportedChainIdTable of contentsEnumeration MembersEnumeration MembersROUND_DOWNROUND_HALF_UPROUND_UPDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
739,p.org sdk v3 reference classes TickList#constructor,"p.org sdk v3 reference classes TickList#constructor.    TickList | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickListHelpful?On this pageTickList@uniswap/v3-sdk / Exports / TickListClass: TickListUtility methods for interacting with sorted lists of ticksTable of contents‚ÄãConstructors‚ÄãconstructorMethods‚ÄãbinarySearchgetTickisAtOrAboveLargestisBelowSmallestnextInitializedTicknextInitializedTickWithinOneWordvalidateListConstructors‚Äãconstructor‚Äã‚Ä¢ Private new TickList()Cannot be constructedDefined in‚Äãutils/tickList.ts:18Methods‚ÄãbinarySearch‚Äã‚ñ∏ Static Private binarySearch(ticks, tick): numberFinds the largest tick in the list of ticks that is less than or equal to tickParameters‚ÄãNameTypeDescriptionticksreadonly Tick[]list of ticksticknumbertick to find the largest tick that is less than or equal to tickReturns‚ÄãnumberDefined in‚Äãutils/tickList.ts:62getTick‚Äã‚ñ∏ Static getTick(ticks, index): TickParameters‚ÄãNameTypeticksreadonly Tick[]indexnumberReturns‚ÄãTickDefined in‚Äãutils/tickList.ts:50isAtOrAboveLargest‚Äã‚ñ∏ Static isAtOrAboveLargest(ticks, tick): booleanParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberReturns‚ÄãbooleanDefined in‚Äãutils/tickList.ts:45isBelowSmallest‚Äã‚ñ∏ Static isBelowSmallest(ticks, tick): booleanParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberReturns‚ÄãbooleanDefined in‚Äãutils/tickList.ts:40nextInitializedTick‚Äã‚ñ∏ Static nextInitializedTick(ticks, tick, lte): TickParameters‚ÄãNameTypeticksreadonly Tick[]ticknumberltebooleanReturns‚ÄãTickDefined in‚Äãutils/tickList.ts:83nextInitializedTickWithinOneWord‚Äã‚ñ∏ Static nextInitializedTickWithinOneWord(ticks, tick, lte, tickSpacing): [number, boolean]Parameters‚ÄãNameTypeticksreadonly Tick[]ticknumberltebooleantickSpacingnumberReturns‚Äã[number, boolean]Defined in‚Äãutils/tickList.ts:101validateList‚Äã‚ñ∏ Static validateList(ticks, tickSpacing): voidParameters‚ÄãNameTypeticksTick[]tickSpacingnumberReturns‚ÄãvoidDefined in‚Äãutils/tickList.ts:20Helpful?PreviousTickLibraryNextTickListDataProviderTable of contentsConstructorsMethodsConstructorsconstructorMethodsbinarySearchgetTickisAtOrAboveLargestisBelowSmallestnextInitializedTicknextInitializedTickWithinOneWordvalidateListDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
740,p.org sdk core reference classes Token#address,"p.org sdk core reference classes Token#address.    Token | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesTokenHelpful?On this pageToken@uniswap/sdk-core / Exports / TokenClass: TokenRepresents an ERC20 token with a unique address and some metadata.Hierarchy‚ÄãBaseCurrency‚Ü≥ TokenTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãaddresschainIddecimalsisNativeisTokennamesymbolAccessors‚ÄãwrappedMethods‚ÄãequalssortsBeforeConstructors‚Äãconstructor‚Äã‚Ä¢ new Token(chainId, address, decimals, symbol?, name?, bypassChecksum?)Parameters‚ÄãNameTypeDescriptionchainIdnumberBaseCurrency#chainIdaddressstringThe contract address on the chain on which this token livesdecimalsnumberBaseCurrency#decimalssymbol?stringBaseCurrency#symbolname?stringBaseCurrency#namebypassChecksum?booleanIf true it only checks for length === 42, startsWith 0x and contains only hex charactersOverrides‚ÄãBaseCurrency.constructorDefined in‚Äãentities/token.ts:27Properties‚Äãaddress‚Äã‚Ä¢ Readonly address: stringThe contract address on the chain on which this token livesDefined in‚Äãentities/token.ts:16chainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãBaseCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãBaseCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: falseOverrides‚ÄãBaseCurrency.isNativeDefined in‚Äãentities/token.ts:10isToken‚Äã‚Ä¢ Readonly isToken: trueOverrides‚ÄãBaseCurrency.isTokenDefined in‚Äãentities/token.ts:11name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãBaseCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãBaseCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29Accessors‚Äãwrapped‚Äã‚Ä¢ get wrapped(): TokenReturn this token, which does not need to be wrappedReturns‚ÄãTokenOverrides‚ÄãBaseCurrency.wrappedDefined in‚Äãentities/token.ts:66Methods‚Äãequals‚Äã‚ñ∏ equals(other): booleanReturns true if the two tokens are equivalent, i.e. have the same chainId and address.Parameters‚ÄãNameTypeDescriptionotherCurrencyother token to compareReturns‚ÄãbooleanOverrides‚ÄãBaseCurrency.equalsDefined in‚Äãentities/token.ts:47sortsBefore‚Äã‚ñ∏ sortsBefore(other): booleanReturns true if the address of this token sorts before the address of the other tokenThrowsif the tokens have the same addressThrowsif the tokens are on different chainsParameters‚ÄãNameTypeDescriptionotherTokenother token to compareReturns‚ÄãbooleanDefined in‚Äãentities/token.ts:57Helpful?PreviousPriceNextRoundingHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesaddresschainIddecimalsisNativeisTokennamesymbolAccessorswrappedMethodsequalssortsBeforeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
741,p.org sdk core reference classes Price#quotecurrency,"p.org sdk core reference classes Price#quotecurrency.    Price | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPriceHelpful?On this pagePrice@uniswap/sdk-core / Exports / PriceClass: Price<TBase, TQuote>Type parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyHierarchy‚ÄãFraction‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessors‚ÄãadjustedForDecimalsasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Price<TBase, TQuote>(...args)Construct a price, either with the base and quote currency amount, or theType parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyParameters‚ÄãNameType...args[TBase, TQuote, BigintIsh, BigintIsh] | [{ baseAmount: CurrencyAmount<TBase> ; quoteAmount: CurrencyAmount<TQuote> }]Overrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/price.ts:18Properties‚ÄãbaseCurrency‚Äã‚Ä¢ Readonly baseCurrency: TBaseDefined in‚Äãentities/fractions/price.ts:10denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25quoteCurrency‚Äã‚Ä¢ Readonly quoteCurrency: TQuoteDefined in‚Äãentities/fractions/price.ts:11scalar‚Äã‚Ä¢ Readonly scalar: FractionDefined in‚Äãentities/fractions/price.ts:12Accessors‚ÄãadjustedForDecimals‚Äã‚Ä¢ Private get adjustedForDecimals(): FractionGet the value scaled by decimals for formattingReturns‚ÄãFractionDefined in‚Äãentities/fractions/price.ts:77asFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.addDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.divideDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): Price<TQuote, TBase>Flip the price, switching the base and quote currencyReturns‚ÄãPrice<TQuote, TBase>Overrides‚ÄãFraction.invertDefined in‚Äãentities/fractions/price.ts:49lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply<TOtherQuote>(other): Price<TBase, TOtherQuote>Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currencyType parameters‚ÄãNameTypeTOtherQuoteextends CurrencyParameters‚ÄãNameTypeDescriptionotherPrice<TQuote, TOtherQuote>the other priceReturns‚ÄãPrice<TBase, TOtherQuote>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/price.ts:57quote‚Äã‚ñ∏ quote(currencyAmount): CurrencyAmount<TQuote>Return the amount of quote currency corresponding to a given amount of the base currencyParameters‚ÄãNameTypeDescriptioncurrencyAmountCurrencyAmount<TBase>the amount of base currency to quote against the priceReturns‚ÄãCurrencyAmount<TQuote>Defined in‚Äãentities/fractions/price.ts:67subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.subtractDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber4format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/price.ts:85toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/price.ts:81Helpful?PreviousPercentNextTokenType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessorsadjustedForDecimalsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
742,p.org contracts v3 reference periphery libraries PoolTicksCounter,"p.org contracts v3 reference periphery libraries PoolTicksCounter.    PoolTicksCounter | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesBase64BytesLibCallbackValidationChainIdHexStringsLiquidityAmountsNFTDescriptorNFTSVGOracleLibraryPathPoolAddressPoolTicksCounterPositionKeyTokenRatioSortOrderTransferHelperWeightedOracleLibraryStakerTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryLibrariesPoolTicksCounterHelpful?On this pagePoolTicksCounterFunctions‚ÄãcountInitializedTicksCrossed‚Äã function countInitializedTicksCrossed( ) internal view returns (uint32 initializedTicksCrossed)CopyThis function counts the number of initialized ticks that would incur a gas cost between tickBefore and tickAfter. When tickBefore and/or tickAfter themselves are initialized, the logic over whether we should count them depends on the direction of the swap. If we are swapping upwards (tickAfter > tickBefore) we don't want to count tickBefore but we do want to count tickAfter. The opposite is true if we are swapping downwards.Edit this pageHelpful?PreviousPoolAddressNextPositionKeyFunctionscountInitializedTicksCrossedDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
743,p.org contracts v3 reference core interfaces pool IUniswapV3PoolEvents,"p.org contracts v3 reference core interfaces pool IUniswapV3PoolEvents.    IUniswapV3PoolEvents | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesIERC20MinimalIUniswapV3FactoryIUniswapV3PoolIUniswapV3PoolDeployercallbackPoolIUniswapV3PoolActionsIUniswapV3PoolDerivedStateIUniswapV3PoolEventsIUniswapV3PoolImmutablesIUniswapV3PoolOwnerActionsIUniswapV3PoolStateLibrariesGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreInterfacesPoolIUniswapV3PoolEventsHelpful?On this pageIUniswapV3PoolEventsContains all events emitted by the poolEvents‚ÄãInitialize‚Äã event Initialize( uint160 sqrtPriceX96, int24 tick )CopyEmitted exactly once by a pool when #initialize is first called on the poolMint/Burn/Swap cannot be emitted by the pool before InitializeParameters:‚ÄãNameTypeDescriptionsqrtPriceX96uint160The initial sqrt price of the pool, as a Q64.96tickint24The initial tick of the pool, i.e. log base 1.0001 of the starting price of the poolMint‚Äã event Mint( address sender, address owner, int24 tickLower, int24 tickUpper, uint128 amount, uint256 amount0, uint256 amount1 )CopyEmitted when liquidity is minted for a given positionParameters:‚ÄãNameTypeDescriptionsenderaddressThe address that minted the liquidityowneraddressThe owner of the position and recipient of any minted liquiditytickLowerint24The lower tick of the positiontickUpperint24The upper tick of the positionamountuint128The amount of liquidity minted to the position rangeamount0uint256How much token0 was required for the minted liquidityamount1uint256How much token1 was required for the minted liquidityCollect‚Äã event Collect( address owner, int24 tickLower, int24 tickUpper, uint128 amount0, uint128 amount1 )CopyEmitted when fees are collected by the owner of a positionCollect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect feesParameters:‚ÄãNameTypeDescriptionowneraddressThe owner of the position for which fees are collectedtickLowerint24The lower tick of the positiontickUpperint24The upper tick of the positionamount0uint128The amount of token0 fees collectedamount1uint128The amount of token1 fees collectedBurn‚Äã event Burn( address owner, int24 tickLower, int24 tickUpper, uint128 amount, uint256 amount0, uint256 amount1 )CopyEmitted when a position's liquidity is removedDoes not withdraw any fees earned by the liquidity position, which must be withdrawn via #collectParameters:‚ÄãNameTypeDescriptionowneraddressThe owner of the position for which liquidity is removedtickLowerint24The lower tick of the positiontickUpperint24The upper tick of the positionamountuint128The amount of liquidity to removeamount0uint256The amount of token0 withdrawnamount1uint256The amount of token1 withdrawnSwap‚Äã event Swap( address sender, address recipient, int256 amount0, int256 amount1, uint160 sqrtPriceX96, uint128 liquidity, int24 tick )CopyEmitted by the pool for any swaps between token0 and token1Parameters:‚ÄãNameTypeDescriptionsenderaddressThe address that initiated the swap call, and that received the callbackrecipientaddressThe address that received the output of the swapamount0int256The delta of the token0 balance of the poolamount1int256The delta of the token1 balance of the poolsqrtPriceX96uint160The sqrt(price) of the pool after the swap, as a Q64.96liquidityuint128The liquidity of the pool after the swaptickint24The log base 1.0001 of price of the pool after the swapFlash‚Äã event Flash( address sender, address recipient, uint256 amount0, uint256 amount1, uint256 paid0, uint256 paid1 )CopyEmitted by the pool for any flashes of token0/token1Parameters:‚ÄãNameTypeDescriptionsenderaddressThe address that initiated the swap call, and that received the callbackrecipientaddressThe address that received the tokens from flashamount0uint256The amount of token0 that was flashedamount1uint256The amount of token1 that was flashedpaid0uint256The amount of token0 paid for the flash, which can exceed the amount0 plus the feepaid1uint256The amount of token1 paid for the flash, which can exceed the amount1 plus the feeIncreaseObservationCardinalityNext‚Äã event IncreaseObservationCardinalityNext( uint16 observationCardinalityNextOld, uint16 observationCardinalityNextNew )CopyEmitted by the pool for increases to the number of observations that can be storedobservationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.Parameters:‚ÄãNameTypeDescriptionobservationCardinalityNextOlduint16The previous value of the next observation cardinalityobservationCardinalityNextNewuint16The updated value of the next observation cardinalitySetFeeProtocol‚Äã event SetFeeProtocol( uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New )CopyEmitted when the protocol fee is changed by the poolParameters:‚ÄãNameTypeDescriptionfeeProtocol0Olduint8The previous value of the token0 protocol feefeeProtocol1Olduint8The previous value of the token1 protocol feefeeProtocol0Newuint8The updated value of the token0 protocol feefeeProtocol1Newuint8The updated value of the token1 protocol feeCollectProtocol‚Äã event CollectProtocol( address sender, address recipient, uint128 amount0, uint128 amount1 )CopyEmitted when the collected protocol fees are withdrawn by the factory ownerParameters:‚ÄãNameTypeDescriptionsenderaddressThe address that collects the protocol feesrecipientaddressThe address that receives the collected protocol feesamount0uint128The amount of token0 protocol fees that is withdrawnamount1uint128The amount of token1 protocol fees that is withdrawnEdit this pageHelpful?PreviousIUniswapV3PoolDerivedStateNextIUniswapV3PoolImmutablesEventsInitializeMintCollectBurnSwapFlashIncreaseObservationCardinalityNextSetFeeProtocolCollectProtocolDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
744,p.org contracts v2 reference smart contracts pair erc 20,"p.org contracts v2 reference smart contracts pair erc 20.    Pair (ERC-20) | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsPair (ERC-20)Helpful?On this pagePair (ERC-20)This documentation covers ERC-20 functionality for denominating pool tokens. For Uniswap-specific functionality, see Pair.CodeUniswapV2ERC20.solEventsApproval‚Äãevent Approval(address indexed owner, address indexed spender, uint value);CopyEmitted each time an approval occurs via approve or permit.Transfer‚Äãevent Transfer(address indexed from, address indexed to, uint value);CopyEmitted each time a transfer occurs via transfer, transferFrom, mint, or burn.Read-Only Functionsname‚Äãfunction name() external pure returns (string memory);CopyReturns Uniswap V2 for all pairs.symbol‚Äãfunction symbol() external pure returns (string memory);CopyReturns UNI-V2 for all pairs.decimals‚Äãfunction decimals() external pure returns (uint8);CopyReturns 18 for all pairs.totalSupply‚Äãfunction totalSupply() external view returns (uint);CopyReturns the total amount of pool tokens for a pair.balanceOf‚Äãfunction balanceOf(address owner) external view returns (uint);CopyReturns the amount of pool tokens owned by an address.allowance‚Äãfunction allowance(address owner, address spender) external view returns (uint);CopyReturns the amount of liquidity tokens owned by an address that a spender is allowed to transfer via transferFrom.DOMAIN_SEPARATOR‚Äãfunction DOMAIN_SEPARATOR() external view returns (bytes32);CopyReturns a domain separator for use in permit.PERMIT_TYPEHASH‚Äãfunction PERMIT_TYPEHASH() external view returns (bytes32);CopyReturns a typehash for use in permit.nonces‚Äãfunction nonces(address owner) external view returns (uint);CopyReturns the current nonce for an address for use in permit.State-Changing Functionsapprove‚Äãfunction approve(address spender, uint value) external returns (bool);CopyLets msg.sender set their allowance for a spender.Emits Approval.transfer‚Äãfunction transfer(address to, uint value) external returns (bool);CopyLets msg.sender send pool tokens to an address.Emits Transfer.transferFrom‚Äãfunction transferFrom(address from, address to, uint value) external returns (bool);CopySends pool tokens from one address to another.Requires approval.Emits Transfer.permit‚Äãfunction permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;CopySets the allowance for a spender where approval is granted via a signature.See Using Permit.Emits Approval.Interfaceimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2ERC20.sol';Copypragma solidity >=0.5.0;interface IUniswapV2ERC20 { event Approval(address indexed owner, address indexed spender, uint value); event Transfer(address indexed from, address indexed to, uint value); function name() external pure returns (string memory); function symbol() external pure returns (string memory); function decimals() external pure returns (uint8); function totalSupply() external view returns (uint); function balanceOf(address owner) external view returns (uint); function allowance(address owner, address spender) external view returns (uint); function approve(address spender, uint value) external returns (bool); function transfer(address to, uint value) external returns (bool); function transferFrom(address from, address to, uint value) external returns (bool); function DOMAIN_SEPARATOR() external view returns (bytes32); function PERMIT_TYPEHASH() external pure returns (bytes32); function nonces(address owner) external view returns (uint); function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;}CopyABIimport IUniswapV2ERC20 from '@uniswap/v2-core/build/IUniswapV2ERC20.json'Copyhttps://unpkg.com/@uniswap/v2-core@1.0.0/build/IUniswapV2ERC20.jsonEdit this pageHelpful?PreviousPairNextLibraryApprovalTransfernamesymboldecimalstotalSupplybalanceOfallowanceDOMAIN_SEPARATORPERMIT_TYPEHASHnoncesapprovetransfertransferFrompermitDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
745,p.org sdk v3 reference interfaces CommonAddLiquidityOptions#usenative,"p.org sdk v3 reference interfaces CommonAddLiquidityOptions#usenative.    CommonAddLiquidityOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesCommonAddLiquidityOptionsHelpful?On this pageCommonAddLiquidityOptions@uniswap/v3-sdk / Exports / CommonAddLiquidityOptionsInterface: CommonAddLiquidityOptionsOptions for producing the calldata to add liquidity.Table of contents‚ÄãProperties‚ÄãdeadlineslippageTolerancetoken0Permittoken1PermituseNativeProperties‚Äãdeadline‚Äã‚Ä¢ deadline: BigintIshWhen the transaction expires, in epoch seconds.Defined in‚ÄãnonfungiblePositionManager.ts:56slippageTolerance‚Äã‚Ä¢ slippageTolerance: PercentHow much the pool price is allowed to move.Defined in‚ÄãnonfungiblePositionManager.ts:51token0Permit‚Äã‚Ä¢ Optional token0Permit: PermitOptionsThe optional permit parameters for spending token0Defined in‚ÄãnonfungiblePositionManager.ts:66token1Permit‚Äã‚Ä¢ Optional token1Permit: PermitOptionsThe optional permit parameters for spending token1Defined in‚ÄãnonfungiblePositionManager.ts:71useNative‚Äã‚Ä¢ Optional useNative: NativeCurrencyWhether to spend ether. If true, one of the pool tokens must be WETH, by default falseDefined in‚ÄãnonfungiblePositionManager.ts:61Helpful?PreviousCollectOptionsNextFeeOptionsTable of contentsPropertiesPropertiesdeadlineslippageTolerancetoken0Permittoken1PermituseNativeDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
746,p.org sdk core reference classes NativeCurrency#constructor,"p.org sdk core reference classes NativeCurrency#constructor.    NativeCurrency | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesNativeCurrencyHelpful?On this pageNativeCurrency@uniswap/sdk-core / Exports / NativeCurrencyClass: NativeCurrencyRepresents the native currency of the chain on which it resides, e.g.Hierarchy‚ÄãBaseCurrency‚Ü≥ NativeCurrency‚Ü≥‚Ü≥ EtherTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãchainIddecimalsisNativeisTokennamesymbolAccessors‚ÄãwrappedMethods‚ÄãequalsConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new NativeCurrency(chainId, decimals, symbol?, name?)Constructs an instance of the base class BaseCurrency.Parameters‚ÄãNameTypeDescriptionchainIdnumberthe chain ID on which this currency residesdecimalsnumberdecimals of the currencysymbol?stringsymbol of the currencyname?stringof the currencyInherited from‚ÄãBaseCurrency.constructorDefined in‚Äãentities/baseCurrency.ts:42Properties‚ÄãchainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãBaseCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãBaseCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: trueOverrides‚ÄãBaseCurrency.isNativeDefined in‚Äãentities/nativeCurrency.ts:7isToken‚Äã‚Ä¢ Readonly isToken: falseOverrides‚ÄãBaseCurrency.isTokenDefined in‚Äãentities/nativeCurrency.ts:8name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãBaseCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãBaseCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29Accessors‚Äãwrapped‚Äã‚Ä¢ Abstract get wrapped(): TokenReturn the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to be used in UniswapReturns‚ÄãTokenInherited from‚ÄãBaseCurrency.wrappedDefined in‚Äãentities/baseCurrency.ts:62Methods‚Äãequals‚Äã‚ñ∏ Abstract equals(other): booleanReturns whether this currency is functionally equivalent to the other currencyParameters‚ÄãNameTypeDescriptionotherCurrencythe other currencyReturns‚ÄãbooleanInherited from‚ÄãBaseCurrency.equalsDefined in‚Äãentities/baseCurrency.ts:56Helpful?PreviousFractionNextPercentHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertieschainIddecimalsisNativeisTokennamesymbolAccessorswrappedMethodsequalsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
747,p.org sdk v2 reference fetcher,"p.org sdk v2 reference fetcher.    Fetcher | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKOverviewGuidesSDK Quick startFetching DataPricingTradingPair AddressesTechnical ReferenceGetting StartedTokenPairRouteTradeFractionsFetcherOther ExportsV1 SDKüè†V2 SDKTechnical ReferenceFetcherHelpful?On this pageFetcherThe data fetching logic is split from the rest of the code for better tree-shaking, i.e. so that it does not get packaged into your code unless it is used. The SDK is otherwise unconcerned with how you get data from the blockchain.This class contains static methods for constructing instances of pairs and tokens from on-chain data. It cannot be constructed.Static MethodsfetchTokenData‚Äãasync fetchTokenData( chainId: ChainId, address: string, provider = getDefaultProvider(getNetwork(chainId)), symbol?: string, name?: string): Promise<Token>CopyInitializes a class instance from a chainId and token address, if the decimals of the token are unknown and cannot be fetched externally. Decimals are fetched via an ethers.js v5 provider. If not passed in, a default provider is used.fetchPairData‚Äãasync fetchPairData( tokenA: Token, tokenB: Token, provider = getDefaultProvider(getNetwork(tokenA.chainId))): Promise<Pair>CopyInitializes a class instance from two Tokens, if the pair's balances of these tokens are unknown and cannot be fetched externally. Pair reserves are fetched via an ethers.js v5 provider. If not passed in, a default provider is used.Helpful?PreviousFractionsNextOther ExportsfetchTokenDatafetchPairDataDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
748,p.org contracts v2 reference Governance governance reference,"p.org contracts v2 reference Governance governance reference.    Governance Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceGovernance ReferenceSmart ContractsV1 Protocolüè†V2 ProtocolTechnical ReferenceGovernanceGovernance ReferenceHelpful?On this pageGovernance ReferenceThe updated reference for the newly deployed Governor Bravo is available via Etherscan, some of the reference material below may be out of date.The Uniswap protocol is governed and upgraded by UNI token holders, using three distinct components; the UNI token, governance module, and Timelock. Together, these contracts allow the community to propose, vote, and implement changes to the uniswap protocol.Any addresses with more than 2.5M UNI delegated to it may propose governance actions, which contain finished, executable code. When a proposal is created, the community can cast their votes during a 3 day voting period. If a majority, and at least 4M votes are cast for the proposal, it is queued in the Timelock, and may be executed in a minimum of 2 days.Timelock‚ÄãThe Timelock contract can modify system parameters, logic, and contracts in a 'time-delayed, opt-out' upgrade pattern. Timelock has a hard-coded minimum delay of 2 days, which is the least amount of notice possible for a governance action. Each proposed action will be published at a minimum of 2 days in the future from the time of announcement. Major upgrades, such as changing the risk system, may have up to a 30 day delay. Timelock is controlled by the governance module; pending and completed governance actions can be monitored on the Timelock Dashboard.Key EventsDelegateChanged‚ÄãDelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)CopyEmitted when an account changes its delegate.DelegateVotesChanged‚ÄãDelegateVotesChanged(address indexed delegate, uint previousBalance, uint newBalance)CopyEmitted when a delegate account's vote balance changes.ProposalCreated‚ÄãProposalCreated(uint id, address proposer, address[] targets, uint[] values, string[] signatures, bytes[] calldatas, uint startBlock, uint endBlock, string description)CopyEmitted when a new proposal is created.VoteCast‚ÄãVoteCast(address voter, uint proposalId, bool support, uint votes)CopyEmitted when a vote has been cast on a proposal.ProposalCanceled‚ÄãProposalCanceled(uint id)CopyEmitted when a proposal has been canceled.ProposalQueued‚ÄãProposalQueued(uint id, uint eta)CopyEmitted when a proposal has been queued in the Timelock.ProposalExecuted‚ÄãProposalExecuted(uint id)CopyEmitted when a proposal has been executed in the Timelock.Read-Only Functions: UNIGet Current Votes‚Äãfunction getCurrentVotes(address account) returns (uint96)CopyReturns the balance of votes for an account as of the current block.NameTypeaccountaddressAddress of the account of which to retrieve the number of votes.Get Prior Votes‚Äãfunction getPriorVotes(address account, uint blockNumber) returns (uint96)CopyReturns the prior number of votes for an account at a specific block number. The block number passed must be a finalized block or the function will revert.NameTypeaccountaddressAddress of the account of which to retrieve the prior number of votes.blocknumberuintThe block number at which to retrieve the prior number of votes.unnameduint96The number of prior votesState-Changing Functions: UNIDelegate‚Äãfunction delegate(address delegatee)CopyDelegate votes from the sender to the delegatee. Users can delegate to 1 address at a time, and the number of votes added to the delegatee‚Äôs vote count is equivalent to the balance of UNI in the user‚Äôs account. Votes are delegated from the current block and onward, until the sender delegates again, or transfers their UNI.NameTypedelegateeaddressThe address to which msg.sender wishes to delegate their votes to.Delegate By Signature‚Äãfunction delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s)CopyDelegate votes from the sender to the delegatee. Users can delegate to 1 address at a time, and the number of votes added to the delegatee‚Äôs vote count is equivalent to the balance of UNI in the user‚Äôs account. Votes are delegated from the current block and onward, until the sender delegates again, or transfers their UNI.NameTypedelegateeaddressThe address to which msg.sender wishis to delegate their vote tononceuintThe contract state required to match the signature. This can be retrieved from the contract‚Äôs public nonces mappingexpiryuintThe time when the signature expires. A block timestamp in seconds since the unix epoch.vuintThe recovery byte of the signature.rbytes32Half of the ECDSA signature pair.sbytes32Half of the ECDSA signature pair.Read-Only Functions: Governor AlphaQuorum Votes‚Äãfunction quorumVotes() public pure returns (uint)CopyReturns the minimum number of votes required for a proposal to succeed.Proposal Threshold‚Äãfunction proposalThreshold() returns (uint)CopyReturns the minimum number of votes required for an account to create a proposal.Proposal Max Operations‚Äãfunction proposalMaxOperations() returns (uint)CopyReturns the maximum number of actions that can be included in a proposal. Actions are functions calls that will be made when a proposal succeeds and executes.Voting Delay‚Äãfunction votingDelay() returns (uint)CopyReturns the number of blocks to wait before voting on a proposal may begin. This value is added to the current block number when a proposal is created.Voting Period‚Äãfunction votingPeriod() returns (uint)CopyReturns the duration of voting on a proposal, in blocks.Get Actions‚Äãfunction getActions(uint proposalId) returns (uint proposalId) public view returns (address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas)CopyGets the actions of a selected proposal. Pass a proposal ID and get the targets, values, signatures and calldatas of that proposal.NameTypeproposalIduintID of the proposalReturns:Array of addresses of contracts the proposal calls.Array of unsigned integers the proposal uses as values.Array of strings of the proposal‚Äôs signatures.Array of calldata bytes of the proposal.Get Receipt‚Äãfunction getReceipt(uint proposalId, address voter) returns (Receipt memory)CopyReturns a proposal ballot receipt of a given voter.NameTypeproposalIduintID of the proposal in which to get a voter‚Äôs ballot receipt.voteraddressAddress of the account of a proposal voter.ReceiptstructA Receipt struct for the ballot of the voter address.State‚Äãfunction state(uint proposalId) returns (ProposalState)CopyReturns enum of type ProposalState, possible types are: -Pending -Active -Canceled -Defeated -Succeeded -Queued -Expired -andExecutedNameTypeproposalIduintID of the proposalState-Changing Functions: Governor AlphaPropose‚Äãfunction propose(address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas, string memory description) returns (uint)CopyCreates a Proposal to change the protocol.Proposals will be voted on by delegated voters. If there is sufficient support before the voting period ends, the proposal shall be automatically enacted. Enacted proposals are queued and executed in the Timelock contract.The sender must hold more UNI than the current proposal threshold (proposalThreshold()) as of the immediately previous block. The proposal can have up to 10 actions (based on proposalMaxOperations()).The proposer cannot create another proposal if they currently have a pending or active proposal. It is not possible to queue two identical actions in the same block (due to a restriction in the Timelock), therefore actions in a single proposal must be unique, and unique proposals that share an identical action must be queued in different blocks.NameTypetargetsaddressThe ordered list of target addresses for calls to be made during proposal execution. This array must be the same length as all other array parameters in this function.valuesuintThe ordered list of values (i.e. msg.value) to be passed to the calls made during proposal execution. This array must be the same length as all other array parameters in this functionsignaturesstringThe ordered list of function signatures to be passed during execution. This array must be the same length as all other array parameters in this function.calldatasbytesThe ordered list of data to be passed to each individual function call during proposal execution. This array must be the same length as all other array parameters in this function.descriptionstringA human readable description of the proposal and the changes it will enact.UnnameduintReturns ID of the new proposalQueue‚Äãfunction queue(uint proposalId)CopyAfter a proposal has succeeded, any address can call the queue method to move the proposal into the Timelock queue. A proposal can only be queued if it has succeeded.NameTypeproposalIduintID of a given successful proposalExecute‚Äãfunction execute(uint proposalId) payableCopyAfter the Timelock delay period, any account may invoke the execute method to apply the changes from the proposal to the target contracts. This will invoke each of the actions described in the proposal. This function is payable so the Timelock contract can invoke payable functions that were selected in the proposal.NameTypeproposalIduintID of a given successful proposalCancel‚Äãfunction queue(uint proposalId)CopyCancel a proposal that has not yet been executed. The Guardian is the only one who may execute this unless the proposer does not maintain the delegates required to create a proposal. If the proposer does not have more delegates than the proposal threshold, anyone can cancel the proposal.NameTypeproposalIduintID of a proposal to cancelCast Vote‚Äãfunction castVote(uint proposalId, bool support)CopyCast a vote on a proposal. The account's voting weight is determined by it's number of delegated votes at the time the proposal becomes active.NameTypeproposalIduintID of a given successful proposalsupportboolA boolean of true for 'yes' or false for 'no' on the proposal vote.Cast Vote By Signature‚Äãfunction castVoteBySig(uint proposalId, bool support, uint8 v, bytes32 r, bytes32 s)CopyCast a vote on a proposal. The account's voting weight is determined by its number of delegated votes at the time the proposal became active. This method has the same purpose as Cast Vote, but instead enables offline signatures to participate in governance voting. For more details on how to create an offline signature, review EIP-712.NameTypeproposalIduintID of a given successful proposalsupportboolA boolean of true for 'yes' or false for 'no' on the proposal vote.expiryuintThe time when the signature expires. A block timestamp in seconds since the unix epoch.vuintThe recovery byte of the signature.rbytes32Half of the ECDSA signature pair.sbytes32Half of the ECDSA signature pair.Edit this pageHelpful?PreviousQueriesNextFactoryTimelockDelegateChangedDelegateVotesChangedProposalCreatedVoteCastProposalCanceledProposalQueuedProposalExecutedGet Current VotesGet Prior VotesDelegateDelegate By SignatureQuorum VotesProposal ThresholdProposal Max OperationsVoting DelayVoting PeriodGet ActionsGet ReceiptStateProposeQueueExecuteCancelCast VoteCast Vote By SignatureDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
749,p.org contracts v3 reference periphery test PoolAddressTest,p.org contracts v3 reference periphery test PoolAddressTest.    PoolAddressTest | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerTestBase64TestLiquidityAmountsTestMockTimeNonfungiblePositionManagerMockTimeSwapRouterNFTDescriptorTestPathTestPeripheryImmutableStateTestPoolAddressTestSelfPermitTestTestCallbackValidationTestERC20TestERC20MetadataTestERC20PermitAllowedTestMulticallTestPositionNFTOwnerTestUniswapV3CalleeTickLensTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryTestPoolAddressTestHelpful?On this pagePoolAddressTestFunctions‚ÄãPOOL_INIT_CODE_HASH‚Äã function POOL_INIT_CODE_HASH( ) external returns (bytes32)CopycomputeAddress‚Äã function computeAddress( ) external returns (address)CopygetGasCostOfComputeAddress‚Äã function getGasCostOfComputeAddress( ) external returns (uint256)CopyEdit this pageHelpful?PreviousPeripheryImmutableStateTestNextSelfPermitTestFunctionsPOOL_INIT_CODE_HASHcomputeAddressgetGasCostOfComputeAddressDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
750,p.org sdk core reference classes NativeCurrency,"p.org sdk core reference classes NativeCurrency.    NativeCurrency | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesNativeCurrencyHelpful?On this pageNativeCurrency@uniswap/sdk-core / Exports / NativeCurrencyClass: NativeCurrencyRepresents the native currency of the chain on which it resides, e.g.Hierarchy‚ÄãBaseCurrency‚Ü≥ NativeCurrency‚Ü≥‚Ü≥ EtherTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãchainIddecimalsisNativeisTokennamesymbolAccessors‚ÄãwrappedMethods‚ÄãequalsConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new NativeCurrency(chainId, decimals, symbol?, name?)Constructs an instance of the base class BaseCurrency.Parameters‚ÄãNameTypeDescriptionchainIdnumberthe chain ID on which this currency residesdecimalsnumberdecimals of the currencysymbol?stringsymbol of the currencyname?stringof the currencyInherited from‚ÄãBaseCurrency.constructorDefined in‚Äãentities/baseCurrency.ts:42Properties‚ÄãchainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãBaseCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãBaseCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: trueOverrides‚ÄãBaseCurrency.isNativeDefined in‚Äãentities/nativeCurrency.ts:7isToken‚Äã‚Ä¢ Readonly isToken: falseOverrides‚ÄãBaseCurrency.isTokenDefined in‚Äãentities/nativeCurrency.ts:8name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãBaseCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãBaseCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29Accessors‚Äãwrapped‚Äã‚Ä¢ Abstract get wrapped(): TokenReturn the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to be used in UniswapReturns‚ÄãTokenInherited from‚ÄãBaseCurrency.wrappedDefined in‚Äãentities/baseCurrency.ts:62Methods‚Äãequals‚Äã‚ñ∏ Abstract equals(other): booleanReturns whether this currency is functionally equivalent to the other currencyParameters‚ÄãNameTypeDescriptionotherCurrencythe other currencyReturns‚ÄãbooleanInherited from‚ÄãBaseCurrency.equalsDefined in‚Äãentities/baseCurrency.ts:56Helpful?PreviousFractionNextPercentHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertieschainIddecimalsisNativeisTokennamesymbolAccessorswrappedMethodsequalsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
751,p.org sdk swap widget guides getting started#customizing theme,"p.org sdk swap widget guides getting started#customizing theme.    Getting Started with the Swap Widget | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap WidgetOverviewGuidesGetting StartedExample ThemesTechnical Referenceweb3-reactCore SDKV2 SDKV1 SDKüè†Swap WidgetGuidesGetting StartedHelpful?On this pageGetting Started with the Swap WidgetThis guide walks you through the steps to embed the swap widget in your website in 2 minutes ‚Äî whether your site is already a decentralized application (dApp) or not. With the swap widget, your users can trade ERC-20 tokens on the Uniswap Protocol without leaving your site!Here‚Äôs a live preview of the swap widget.Example use cases include:Building a custom frontend for the Uniswap ProtocolSwapping assets in a DeFi applicationAcquiring a token to participate in your web3 community (e.g. FWB or a gaming token)Converting to the required currency for an NFT purchase (e.g. WETH)You can make the widget feel like a native part of your app by customizing the colors, font, and token list to match your app theme. This guide will teach you how.Installing the Widgets Library‚ÄãTo get started, install the widgets library using npm or Yarn. If you don‚Äôt already use it, you‚Äôll need to install react-redux as well.npmYarnnpm install --save @uniswap/widgets react-reduxCopyyarn add @uniswap/widgets react-reduxCopyAdding the Swap Widget to Your App‚ÄãNext, embed the React component in your application.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'function App() { <div className=""Uniswap""> <SwapWidget /> </div>}CopyThat‚Äôs it! You should now see a fully functional swap widget on your site. The widget is self-contained and gracefully handles all interactions with the Uniswap Protocol. It leverages the Auto Router to compute the best price across all Uniswap v2 and v3 pools.See a full implementation of the swap widget in the /cra and /nextjs branches of the widgets-demo repo.Create React App V4All code snippets will work seamlessly if you use Next.js or Create React App V5. However, if you‚Äôre using Create React App V4, you‚Äôll need to use the following import statements instead:import { SwapWidget } from '@uniswap/widgets/dist/index.js'import '@uniswap/widgets/dist/fonts.css'CopyRecommended ParametersThe swap widget is a React component that can be easily imported into any React project. It's designed to work out-of-the-box, with no required parameters or web3 integration necessary. Trading is supported on all networks where the Uniswap Protocol is deployed.Although the widget will work out-of-the-box with no parameters, we highly recommend integrators provide JSON-RPC endpoints, like from Infura or Alchemy. Existing dApps can also provide their existing web3 provider to integrate the widget seamlessly into their dApp.Additional optional parameters are available to customize the appearance and performance of the swap widget to fit your unique use case.Web3 Provider‚ÄãThe swap widget uses a web3 provider prop to allow users to connect their wallets, fetch balances, and submit transactions through the user‚Äôs connected wallet.If your app does not maintain its own web3 provider, you can omit the provider prop. The widget will use built-in wallet connection functionality (for WalletConnect and MetaMask), making it easy for you to integrate web3 in your app!If you already have a web3 provider, you can pass your provider object directly into the provider prop. Both ethers and web3.js provider objects are compatible with the widget, as is any EIP-1193 provider. You can directly use the providers returned from web3-react or wagmi (both are ethers providers). If it is not connected to a wallet, it will still be used to read data from the chain, but the widget will still prompt the user to ""Connect wallet"".Be sure to use the wallet-connected providerWhen using wagmi@v0.11, useProvider() will return the fallback provider, not the wallet-connected provider. You should instead pass useSigner<JsonRpcSigner>().data?.provider to reflect the user's connected wallet.If you maintain a web3 provider on your app, you should also consider intercepting the swap widget's wallet connection flow. Do so by passing a handler returning false to the onConnectWalletClick prop, which is triggered when the widget's ""Connect wallet"" button is clicked. Check out libraries such as web3-react, BlockNative‚Äôs Onboard, or Aragon‚Äôs useWallet() to build your own flow. To hide the swap widget's wallet connection flow entirely, pass true to the hideConnectionUI prop.The widget will match the network currently selected by the passed provider. If the user switches networks in your app or in their connected wallet, that change will propagate to the widget as well. If the user connects to a network that is not supported by the swap widget, the widget will gracefully disable itself.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'// We recommend you pass a web3 provider.import { provider } from './your/provider'// We recommend you pass your own JSON-RPC endpoints.const jsonRpcUrlMap = { 1: ['https://mainnet.infura.io/v3/<YOUR_INFURA_PROJECT_ID>'], 3: ['https://ropsten.infura.io/v3/<YOUR_INFURA_PROJECT_ID>']}function App() { <div className=""Uniswap""> <SwapWidget provider={provider} jsonRpcUrlMap={jsonRpcUrlMap} /> </div>}CopyJSON-RPC Endpoints‚ÄãJSON-RPC endpoints are used to read data when no provider is connected. We strongly recommend you pass either a Web3 Provider to the provider prop, or JSON-RPC endpoint URLs to the jsonRpcUrlMap prop.The widget will use these endpoints to fetch on-chain data and submit transactions for signature. If the user connects a MetaMask wallet, the widget will use the JSON-RPC provided by MetaMask when possible. (See a list of all chains supported on widget.) If you don‚Äôt yet have JSON-RPC endpoints, you can easily create them with services like Infura or Alchemy.If you choose not to provide a jsonRpcUrlMap prop or are missing endpoints for some chains, the widget uses free public JSON-RPC endpoints to still allow users to interact with the widget and fetch price quotes. However, these public endpoints are NOT recommended for production environment usage, are severely rate-limited, and aren't necessarily as reliable. When possible, we'd recommend providing your own endpoints!Customizing the Swap WidgetYou can set optional parameters to tailor the appearance and functionality of the swap widget to fit your dApp.Customizing the Width‚ÄãThe swap widget has a fixed height of 360px and a default width of 360px. You cannot modify the height of the widget. You can modify the width up to a minimum width of 300px.You can customize the width by passing a number (of pixels) or a valid CSS width to the width prop of the widget.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'function App() { <div className=""Uniswap""> <SwapWidget  width={360} // Custom width in pixels /> </div>}CopyFor example:width={360} sets the width to 360 pixelswidth=""100%"" sets the width to dynamically fill 100% of the parent containerwidth=""20em"" sets the width to 20 * 16 = 320 pixels because 16px is the base font-size of the widgetThe recommended and default width is 360 pixels.Customizing the Theme‚ÄãYou can customize the colors, font, and border radius of the swap widget to match the look and feel of your dApp. You can also toggle between light and dark modes. This section explains how to customize each attribute of the widget with your own theme.All attributes below are color codes, except fontFamily (string), borderRadius (number between 0 and 1), and tokenColorExtraction(boolean). The next two sections show code examples using these attributes.Check out examples of the swap widget, and the Figma file if you want to mock it up first!Overriding Attributes‚ÄãYou can override specific attributes of the widget by creating a Theme object and defining the properties you wish to override. Any properties left undefined will fallback to the default theme. For example, here is a simple Theme that removes the border radius and sets a custom font family.import { Theme, SwapWidget } from '@uniswap/widgets'// Define a custom theme to override default attributesconst theme: Theme = { borderRadius: 0, fontFamily: '""Helvetica""',}function App() { <div className=""Uniswap""> <SwapWidget theme={theme} /> </div>}CopyPlease note that the borderRadius attribute is a multiplier from 0 to 1 of how much radius to apply. Since the widget uses different values of border radius (e.g. internal edges have tighter radii than external edges), borderRadius will apply your multiplier value on all instances so that the border radii still look proportionally correct.Importing FontsThe swap widget fonts must be imported explicitly with import '@uniswap/widgets/fonts.css'. However, if you‚Äôre overriding the swap widget fonts with your own, or with a default font such as Helvetica in the example above, you can remove this import statement.Enabling Token Color Extraction‚ÄãBy default, the background color of the output module will be set by the¬†module¬†attribute. You can optionally enable color extraction to flood the output module with the color of the selected output token. In the above example, DAI is the output token so the output module is flooded with DAI yellow.To enable color extraction, set the tokenColorExtraction property to true in your Theme object.import { Theme, SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'const enableColorExtractionTheme: Theme = { tokenColorExtraction: true, // Enable color extraction of the output token}function App() { <div className=""Uniswap""> <SwapWidget theme={enableColorExtractionTheme} /> </div>}CopyToggling Light and Dark Mode‚ÄãThe swap widget provides a default light theme and dark theme as a starting point. You can import each one and extend it to create your own theme. If your app can toggle between light and dark mode, you can propagate that state down to the widget by following the example below.import { darkTheme, lightTheme, Theme, SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'let darkMode = true // Dynamically toggle dark mode on and offfunction App() { <div className=""Uniswap""> <SwapWidget theme={darkMode ? darkTheme : lightTheme} /> </div>}CopyMatching System Preference for Light and Dark Mode‚ÄãYou can match the user‚Äôs system preference for light/dark mode by using the useSystemTheme hook. This will return the default widget light or dark theme according to the user‚Äôs system configuration. You can extend this base theme with further customizations, as you will see in the next section.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'function useSystemTheme() { // Access}function App() { const theme = useSystemTheme() // Get a theme that matches the user system preference <div className=""Uniswap""> <SwapWidget theme={theme} /> </div>}CopyExtending Themes‚ÄãYou can extend any theme with custom attributes. The below example extends the base light and dark themes with custom colors.import { darkTheme, lightTheme, Theme, SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'const myLightTheme: Theme = { ...lightTheme, // Extend the lightTheme accent: '#FF007A', primary: '#000000', secondary: '#565A69',}const myDarkTheme: Theme = { ...darkTheme, // Extend the darkTheme accent: '#2172E5', primary: '#FFFFFF', secondary: '#888D9B',}let darkMode = truefunction App() { <div className=""Uniswap""> <SwapWidget theme={darkMode ? myDarkTheme : myLightTheme} /> </div>}CopyCustomizing the Token Lists‚ÄãBy default, the widget will use the Uniswap Labs default token list in the selector.Customizing the Default Token List‚ÄãIf you want to offer a different set of tokens in the widget, you can provide a custom tokenList parameter. You can browse popular token lists to find one that suits your needs and then pass the URL as a parameter.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'const CMC_TOKEN_LIST = 'https://api.coinmarketcap.com/data-api/v3/uniswap/all.json'function App() { <div className=""Uniswap""> <SwapWidget  tokenList={CMC_TOKEN_LIST} // Use the CoinMarketCap token list /> </div>}CopyAlternatively, you can create your own token list. There are two ways to provide your own token list for the widget.The first option is to create a full token list, host it at your own URI, and pass the URI as a parameter as in the above example. This option is recommended if you want to use the same token list in multiple places throughout your application or community.The second and easiest option is to construct a custom token list inline as an array of tokens. The schema is equivalent to the tokens array from the tokenlist JSON schema. This option lets you skip deployment, hosting, and versioning of a full URI token list. Here is an example of an inline token list containing only the DAI, USDT, and USDC tokens (in addition to ETH which is always available, regardless of token list).import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'// You can also pass a token list as JSON, as long as it matches the schemaconst MY_TOKEN_LIST = [ { ""name"": ""Dai Stablecoin"", ""address"": ""0x6B175474E89094C44Da98b954EedeAC495271d0F"", ""symbol"": ""DAI"", ""decimals"": 18, ""chainId"": 1, ""logoURI"": ""https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x6B175474E89094C44Da98b954EedeAC495271d0F/logo.png"" }, { ""name"": ""Tether USD"", ""address"": ""0xdAC17F958D2ee523a2206206994597C13D831ec7"", ""symbol"": ""USDT"", ""decimals"": 6, ""chainId"": 1, ""logoURI"": ""https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png"" }, { ""name"": ""USD Coin"", ""address"": ""0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"", ""symbol"": ""USDC"", ""decimals"": 6, ""chainId"": 1, ""logoURI"": ""https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/logo.png"" },]function App() { <div className=""Uniswap""> <SwapWidget tokenList={MY_TOKEN_LIST} /> </div>}CopyPlease note that the swap widget only enforces metadata validation on remotely hosted token lists, not on token list data passed as a literal value to the widget like in this example.If you want to add Layer 2 tokens to the token list, you can add an extension field. See this GitHub issue for details.Customizing the Default Input and Output Tokens‚ÄãYou can set the defaultInputTokenAddress, defaultInputAmount, defaultOutputTokenAddress, and defaultOutputAmount to pre-populate the input and output token fields respectively. This is useful when the widget appears in a context where you know which tokens the user is evaluating to trade. For example, if the widget appears on a page that displays the WBTC price chart, it would be helpful to pre-select WBTC as the output token in the widget.If your page does not need any particular defaults, then the recommended default input token is the native asset of the active network (e.g. ETH) and no default output token is recommended. Since ETH does not have an address, you can pass 'NATIVE' as the parameter to set it as the default input or output token.The following example sets the default input to 2 ETH and the default output token to WBTC.import { SwapWidget } from '@uniswap/widgets'import '@uniswap/widgets/fonts.css'// Default token list from Uniswapconst UNISWAP_TOKEN_LIST = 'https://gateway.ipfs.io/ipns/tokens.uniswap.org'// Use the native token of the connected chain as the default input tokenconst NATIVE = 'NATIVE' // Special address for native token// WBTC as the default output tokenconst WBTC = '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599'function App() { <div className=""Uniswap""> <SwapWidget  tokenList={UNISWAP_TOKEN_LIST}  defaultInputTokenAddress={NATIVE}  defaultInputAmount={2}  defaultOutputTokenAddress={WBTC} /> </div>}CopyUnderstanding the Swap Widget States‚ÄãThe widget has two main connectivity states depending on if the user has connected a wallet.Before wallet connection, the widget will use the JSON-RPC endpoint to fetch token price data and provide trade quotes, but submitting transactions will be disabled.After wallet connection, the widget will be fully functional. The user will be able to fetch trade quotes and submit swap transactions using the JSON-RPC endpoint and web3 provider from their connected wallet.Questions?Join the Discord channel to ask questions and get support from the Uniswap community.Helpful?PreviousOverviewNextExample ThemesInstalling the Widgets LibraryAdding the Swap Widget to Your AppWeb3 ProviderJSON-RPC EndpointsCustomizing the WidthCustomizing the ThemeOverriding AttributesEnabling Token Color ExtractionToggling Light and Dark ModeMatching System Preference for Light and Dark ModeExtending ThemesCustomizing the Token ListsCustomizing the Default Token ListCustomizing the Default Input and Output TokensUnderstanding the Swap Widget StatesDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
752,p.org sdk core reference classes Price#subtract,"p.org sdk core reference classes Price#subtract.    Price | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesPriceHelpful?On this pagePrice@uniswap/sdk-core / Exports / PriceClass: Price<TBase, TQuote>Type parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyHierarchy‚ÄãFraction‚Ü≥ PriceTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessors‚ÄãadjustedForDecimalsasFractionquotientremainderMethods‚ÄãadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantConstructors‚Äãconstructor‚Äã‚Ä¢ new Price<TBase, TQuote>(...args)Construct a price, either with the base and quote currency amount, or theType parameters‚ÄãNameTypeTBaseextends CurrencyTQuoteextends CurrencyParameters‚ÄãNameType...args[TBase, TQuote, BigintIsh, BigintIsh] | [{ baseAmount: CurrencyAmount<TBase> ; quoteAmount: CurrencyAmount<TQuote> }]Overrides‚ÄãFraction.constructorDefined in‚Äãentities/fractions/price.ts:18Properties‚ÄãbaseCurrency‚Äã‚Ä¢ Readonly baseCurrency: TBaseDefined in‚Äãentities/fractions/price.ts:10denominator‚Äã‚Ä¢ Readonly denominator: defaultInherited from‚ÄãFraction.denominatorDefined in‚Äãentities/fractions/fraction.ts:26numerator‚Äã‚Ä¢ Readonly numerator: defaultInherited from‚ÄãFraction.numeratorDefined in‚Äãentities/fractions/fraction.ts:25quoteCurrency‚Äã‚Ä¢ Readonly quoteCurrency: TQuoteDefined in‚Äãentities/fractions/price.ts:11scalar‚Äã‚Ä¢ Readonly scalar: FractionDefined in‚Äãentities/fractions/price.ts:12Accessors‚ÄãadjustedForDecimals‚Äã‚Ä¢ Private get adjustedForDecimals(): FractionGet the value scaled by decimals for formattingReturns‚ÄãFractionDefined in‚Äãentities/fractions/price.ts:77asFraction‚Äã‚Ä¢ get asFraction(): FractionHelper method for converting any super class back to a fractionReturns‚ÄãFractionInherited from‚ÄãFraction.asFractionDefined in‚Äãentities/fractions/fraction.ts:154quotient‚Äã‚Ä¢ get quotient(): defaultReturns‚ÄãdefaultInherited from‚ÄãFraction.quotientDefined in‚Äãentities/fractions/fraction.ts:42remainder‚Äã‚Ä¢ get remainder(): FractionReturns‚ÄãFractionInherited from‚ÄãFraction.remainderDefined in‚Äãentities/fractions/fraction.ts:47Methods‚Äãadd‚Äã‚ñ∏ add(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.addDefined in‚Äãentities/fractions/fraction.ts:55divide‚Äã‚ñ∏ divide(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.divideDefined in‚Äãentities/fractions/fraction.ts:115equalTo‚Äã‚ñ∏ equalTo(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.equalToDefined in‚Äãentities/fractions/fraction.ts:91greaterThan‚Äã‚ñ∏ greaterThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.greaterThanDefined in‚Äãentities/fractions/fraction.ts:99invert‚Äã‚ñ∏ invert(): Price<TQuote, TBase>Flip the price, switching the base and quote currencyReturns‚ÄãPrice<TQuote, TBase>Overrides‚ÄãFraction.invertDefined in‚Äãentities/fractions/price.ts:49lessThan‚Äã‚ñ∏ lessThan(other): booleanParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãbooleanInherited from‚ÄãFraction.lessThanDefined in‚Äãentities/fractions/fraction.ts:83multiply‚Äã‚ñ∏ multiply<TOtherQuote>(other): Price<TBase, TOtherQuote>Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currencyType parameters‚ÄãNameTypeTOtherQuoteextends CurrencyParameters‚ÄãNameTypeDescriptionotherPrice<TQuote, TOtherQuote>the other priceReturns‚ÄãPrice<TBase, TOtherQuote>Overrides‚ÄãFraction.multiplyDefined in‚Äãentities/fractions/price.ts:57quote‚Äã‚ñ∏ quote(currencyAmount): CurrencyAmount<TQuote>Return the amount of quote currency corresponding to a given amount of the base currencyParameters‚ÄãNameTypeDescriptioncurrencyAmountCurrencyAmount<TBase>the amount of base currency to quote against the priceReturns‚ÄãCurrencyAmount<TQuote>Defined in‚Äãentities/fractions/price.ts:67subtract‚Äã‚ñ∏ subtract(other): FractionParameters‚ÄãNameTypeotherBigintIsh | FractionReturns‚ÄãFractionInherited from‚ÄãFraction.subtractDefined in‚Äãentities/fractions/fraction.ts:69toFixed‚Äã‚ñ∏ toFixed(decimalPlaces?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuedecimalPlacesnumber4format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toFixedDefined in‚Äãentities/fractions/price.ts:85toSignificant‚Äã‚ñ∏ toSignificant(significantDigits?, format?, rounding?): stringParameters‚ÄãNameTypeDefault valuesignificantDigitsnumber6format?objectundefinedrounding?RoundingundefinedReturns‚ÄãstringOverrides‚ÄãFraction.toSignificantDefined in‚Äãentities/fractions/price.ts:81Helpful?PreviousPercentNextTokenType parametersHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertiesbaseCurrencydenominatornumeratorquoteCurrencyscalarAccessorsadjustedForDecimalsasFractionquotientremainderMethodsadddivideequalTogreaterThaninvertlessThanmultiplyquotesubtracttoFixedtoSignificantDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
753,p.org sdk v3 reference interfaces ClaimOptions#recipient,p.org sdk v3 reference interfaces ClaimOptions#recipient.    ClaimOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesClaimOptionsHelpful?On this pageClaimOptions@uniswap/v3-sdk / Exports / ClaimOptionsInterface: ClaimOptionsOptions to specify when claiming rewards.Table of contents‚ÄãProperties‚ÄãamountrecipienttokenIdProperties‚Äãamount‚Äã‚Ä¢ Optional amount: BigintIshThe amount of rewardToken to claim. 0 claims all.Defined in‚Äãstaker.ts:52recipient‚Äã‚Ä¢ recipient: stringAddress to send rewards to.Defined in‚Äãstaker.ts:47tokenId‚Äã‚Ä¢ tokenId: BigintIshThe id of the NFTDefined in‚Äãstaker.ts:42Helpful?PreviousBestTradeOptionsNextCollectOptionsTable of contentsPropertiesPropertiesamountrecipienttokenIdDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
754,p.org sdk v3 reference classes SelfPermit,"p.org sdk v3 reference classes SelfPermit.    SelfPermit | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesSelfPermitHelpful?On this pageSelfPermit@uniswap/v3-sdk / Exports / SelfPermitClass: SelfPermitTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãencodePermitConstructors‚Äãconstructor‚Äã‚Ä¢ Private new SelfPermit()Cannot be constructed.Defined in‚ÄãselfPermit.ts:34Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚ÄãselfPermit.ts:29Methods‚ÄãencodePermit‚Äã‚ñ∏ Static encodePermit(token, options): stringParameters‚ÄãNameTypetokenTokenoptionsPermitOptionsReturns‚ÄãstringDefined in‚ÄãselfPermit.ts:36Helpful?PreviousRouteNextSqrtPriceMathTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsencodePermitDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
755,p.org sdk core reference classes Ether#isnative,"p.org sdk core reference classes Ether#isnative.    Ether | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesCurrencyAmountEtherFractionNativeCurrencyPercentPriceTokenenumsV2 SDKV1 SDKüè†Core SDKTechnical ReferenceclassesEtherHelpful?On this pageEther@uniswap/sdk-core / Exports / EtherClass: EtherEther is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnetsHierarchy‚ÄãNativeCurrency‚Ü≥ EtherTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãchainIddecimalsisNativeisTokennamesymbol_etherCacheAccessors‚ÄãwrappedMethods‚ÄãequalsonChainConstructors‚Äãconstructor‚Äã‚Ä¢ Protected new Ether(chainId)Parameters‚ÄãNameTypechainIdnumberOverrides‚ÄãNativeCurrency.constructorDefined in‚Äãentities/ether.ts:11Properties‚ÄãchainId‚Äã‚Ä¢ Readonly chainId: numberThe chain ID on which this currency residesInherited from‚ÄãNativeCurrency.chainIdDefined in‚Äãentities/baseCurrency.ts:21decimals‚Äã‚Ä¢ Readonly decimals: numberThe decimals used in representing currency amountsInherited from‚ÄãNativeCurrency.decimalsDefined in‚Äãentities/baseCurrency.ts:25isNative‚Äã‚Ä¢ Readonly isNative: trueInherited from‚ÄãNativeCurrency.isNativeDefined in‚Äãentities/nativeCurrency.ts:7isToken‚Äã‚Ä¢ Readonly isToken: falseInherited from‚ÄãNativeCurrency.isTokenDefined in‚Äãentities/nativeCurrency.ts:8name‚Äã‚Ä¢ Optional Readonly name: stringThe name of the currency, i.e. a descriptive textual non-unique identifierInherited from‚ÄãNativeCurrency.nameDefined in‚Äãentities/baseCurrency.ts:33symbol‚Äã‚Ä¢ Optional Readonly symbol: stringThe symbol of the currency, i.e. a short textual non-unique identifierInherited from‚ÄãNativeCurrency.symbolDefined in‚Äãentities/baseCurrency.ts:29_etherCache‚Äã‚ñ™ Static Private _etherCache: Object = {}Index signature‚Äã‚ñ™ [chainId: number]: EtherDefined in‚Äãentities/ether.ts:21Accessors‚Äãwrapped‚Äã‚Ä¢ get wrapped(): TokenReturn the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to be used in UniswapReturns‚ÄãTokenOverrides‚ÄãNativeCurrency.wrappedDefined in‚Äãentities/ether.ts:15Methods‚Äãequals‚Äã‚ñ∏ equals(other): booleanReturns whether this currency is functionally equivalent to the other currencyParameters‚ÄãNameTypeDescriptionotherCurrencythe other currencyReturns‚ÄãbooleanOverrides‚ÄãNativeCurrency.equalsDefined in‚Äãentities/ether.ts:27onChain‚Äã‚ñ∏ Static onChain(chainId): EtherParameters‚ÄãNameTypechainIdnumberReturns‚ÄãEtherDefined in‚Äãentities/ether.ts:23Helpful?PreviousCurrencyAmountNextFractionHierarchyTable of contentsConstructorsPropertiesAccessorsMethodsConstructorsconstructorPropertieschainIddecimalsisNativeisTokennamesymbol_etherCacheAccessorswrappedMethodsequalsonChainDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
756,p.org contracts v2 reference API overview,"p.org contracts v2 reference API overview.    API Overview | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIAPI OverviewEntitiesQueriesGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolTechnical ReferenceAPIAPI OverviewHelpful?On this pageAPI OverviewThis section explains the Uniswap Subgraph and how to interact with it. The Uniswap subgraph indexes data from the Uniswap contracts over time. It organizes data about pairs, tokens, Uniswap as a whole, and more. The subgraph updates any time a transaction is made on Uniswap. The subgraph runs on The Graph protocol's hosted service and can be openly queried.Resources‚ÄãSubgraph Explorer - sandbox for querying data and endpoints for developers.Uniswap V2 Subgraph - source code for deployed subgraph.Usage‚ÄãThe subgraph provides a snapshot of the current state of Uniswap and also tracks historical data. It is currently used to power uniswap.info. It is not intended to be used as a data source for structuring transactions (contracts should be referenced directly for the most reliable live data).Making Queries‚ÄãTo learn more about querying a subgraph refer to The Graph's documentation.Versions‚ÄãThe Uniswap V2 Subgraph only tracks data on Uniswap V2. For Uniswap V1 information see the V1 Subgraph.Edit this pageHelpful?PreviousSupporting meta transactionsNextEntitiesResourcesUsageMaking QueriesVersionsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
757,p.org contracts v3 reference periphery test TestERC20PermitAllowed,p.org contracts v3 reference periphery test TestERC20PermitAllowed.    TestERC20PermitAllowed | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerTestBase64TestLiquidityAmountsTestMockTimeNonfungiblePositionManagerMockTimeSwapRouterNFTDescriptorTestPathTestPeripheryImmutableStateTestPoolAddressTestSelfPermitTestTestCallbackValidationTestERC20TestERC20MetadataTestERC20PermitAllowedTestMulticallTestPositionNFTOwnerTestUniswapV3CalleeTickLensTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryTestTestERC20PermitAllowedHelpful?On this pageTestERC20PermitAllowedFunctions‚Äãconstructor‚Äã function constructor( ) publicCopypermit‚Äã function permit( ) externalCopyEdit this pageHelpful?PreviousTestERC20MetadataNextTestMulticallFunctionsconstructorpermitDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
758,p.org sdk v3 reference modules.md#factory address,p.org sdk v3 reference modules.md#factory address. 
759,p.org sdk v3 reference interfaces NFTPermitOptions,p.org sdk v3 reference interfaces NFTPermitOptions.    NFTPermitOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesNFTPermitOptionsHelpful?On this pageNFTPermitOptions@uniswap/v3-sdk / Exports / NFTPermitOptionsInterface: NFTPermitOptionsTable of contents‚ÄãProperties‚ÄãdeadlinersspendervProperties‚Äãdeadline‚Äã‚Ä¢ deadline: BigintIshDefined in‚ÄãnonfungiblePositionManager.ts:131r‚Äã‚Ä¢ r: stringDefined in‚ÄãnonfungiblePositionManager.ts:129s‚Äã‚Ä¢ s: stringDefined in‚ÄãnonfungiblePositionManager.ts:130spender‚Äã‚Ä¢ spender: stringDefined in‚ÄãnonfungiblePositionManager.ts:132v‚Äã‚Ä¢ v: 0 | 1 | 27 | 28Defined in‚ÄãnonfungiblePositionManager.ts:128Helpful?PreviousMintSpecificOptionsNextQuoteOptionsTable of contentsPropertiesPropertiesdeadlinersspendervDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
760,p.org sdk core reference enums TradeType#exact output,p.org sdk core reference enums TradeType#exact output.    TradeType | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKOverviewTechnical ReferenceOverviewclassesenumsRoundingSupportedChainIdTradeTypeV2 SDKV1 SDKüè†Core SDKTechnical ReferenceenumsTradeTypeHelpful?On this pageTradeType@uniswap/sdk-core / Exports / TradeTypeEnumeration: TradeTypeTable of contents‚ÄãEnumeration Members‚ÄãEXACT_INPUTEXACT_OUTPUTEnumeration Members‚ÄãEXACT_INPUT‚Äã‚Ä¢ EXACT_INPUT = 0Defined in‚Äãconstants.ts:27EXACT_OUTPUT‚Äã‚Ä¢ EXACT_OUTPUT = 1Defined in‚Äãconstants.ts:28Helpful?PreviousSupportedChainIdNextOverviewTable of contentsEnumeration MembersEnumeration MembersEXACT_INPUTEXACT_OUTPUTDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
761,p.org contracts universal router technical reference#v2 swap exact out,"p.org contracts universal router technical reference#v2 swap exact out.    Technical Reference | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterOverviewTechnical ReferencePermit2V2 ProtocolV1 Protocolüè†Universal RouterTechnical ReferenceHelpful?On this pageTechnical ReferenceFunctions‚ÄãTransactions to the UniversalRouter all go through the UniversalRouter.execute functions:execute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)execute(bytes calldata commands, bytes[] calldata inputs)The first of these functions adds the functionality to allow transactions to have a transaction deadline. If the block.timestamp is after the deadline provided the transaction will revert. After that check, the 2 functions otherwise execute identically.The execute functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands and execute them in the order specified.Command Structure‚ÄãThe first parameter for the function (bytes calldata commands) is a list of commands for the contract to execute, in the order they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:01 23 4 5 6 7frcommandf‚ÄãA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.If f is 0 aka false and the command reverts, then the entire transaction will revert and none of the commands will be executed.If f is 1 aka true and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If using this flag, be careful to include further commands that will remove any funds that could be left unused in the UniversalRouter contract.r‚Äã2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be ignored. Later versions of the UniversalRouter will likely expand the 5 bits used for command to use at least 1 of these bits.command‚ÄãA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within Commands.sol, or can be viewed in the table below.The command types that are not defined do not have an assigned command at this moment in time. Providing one of these identifiers will cause the transaction to revert with InvalidCommandType.A complete list of commands can be found in the table below:CommandValue0x00V3_SWAP_EXACT_IN0x01V3_SWAP_EXACT_OUT0x02PERMIT2_TRANSFER_FROM0x03PERMIT2_PERMIT_BATCH0x04SWEEP0x05TRANSFER0x06PAY_PORTION0x070x08V2_SWAP_EXACT_IN0x09V2_SWAP_EXACT_OUT0x0aPERMIT2_PERMIT0x0bWRAP_ETH0x0cUNWRAP_WETH0x0dPERMIT2_TRANSFER_FROM_BATCH0x0e0x0f0x10SEAPORT0x11LOOKS_RARE_7210x12NFTX0x13CRYPTOPUNKS0x14LOOKS_RARE_11550x15OWNER_CHECK_7210x16OWNER_CHECK_11550x17SWEEP_ERC7210x18X2Y2_7210x19SUDOSWAP0x1aNFT200x1bX2Y2_11550x1cFOUNDATION0x1dSWEEP_ERC11550x1e0x1fCommand Inputs‚ÄãThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that will be used for the respective command.commands[i] is the command that will use inputs[i] as its encoded input parameters.The router uses the command type to know how to decode the encoded input parameters - depending on the command chosen, the required inputs is different.The input parameters required for each command are outlined below:V3_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV3_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentbytes The UniswapV3 encoded path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_TRANSFER_FROM‚Äãaddress The token to fetch from Permit2address The recipient of the tokens fetcheduint256 The amount of token to fetchThe individual that the tokens are fetched from is always the msg.sender of the transactionPERMIT2_PERMIT_BATCH‚ÄãIAllowanceTransfer.PermitBatch A PermitBatch struct outlining all of the Permit2 permits to execute.bytes The signature to provide to Permit2The individual that signed the permits must be the msg.sender of the transactionSWEEP‚Äãaddress The ERC20 token to sweep (or Constants.ETH for ETH)address The recipient of the sweepuint256 The minimum required tokens to receive from the sweepTRANSFER‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 The amount to transferPAY_PORTION‚Äãaddress The ERC20 token to transfer (or Constants.ETH for ETH)address The recipient of the transferuint256 In basis points, the percentage of the contract‚Äôs balance to transferV2_SWAP_EXACT_IN‚Äãaddress The recipient of the output of the tradeuint256 The amount of input tokens for the tradeuint256 The minimum amount of output tokens the user wantsaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterV2_SWAP_EXACT_OUT‚Äãaddress The recipient of the output of the tradeuint256 The amount of output tokens to receiveuint256 The maximum number of input tokens that should be spentaddress[] The UniswapV2 token path to trade alongbool A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouterPERMIT2_PERMIT‚ÄãIAllowanceTransfer.PermitSingle A PermitSingle struct outlining the Permit2 permit to executebytes The signature to provide to Permit2The individual that signed the permit must be the msg.sender of the transactionWRAP_ETH‚Äãaddress The recipient of the WETHuint256 The amount of ETH to wrapUNWRAP_ETH‚Äãaddress The recipient of the ETHuint256 The minimum required ETH to receive from the unwrappingPERMIT2_TRANSFER_FROM_BATCH‚ÄãIAllowanceTransfer.AllowanceTransferDetails[] An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to performSEAPORT‚Äãuint256 The ETH value to forward to the Seaport contractbytes The calldata to use to call the Seaport contractLOOKS_RARE_721‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721NFTX‚Äãuint256 The ETH value to forward to the NFTX contractbytes The calldata to use to call the NFTX contractCRYPTOPUNKS‚Äãuint256 The PunkID to purchaseaddress The recipient for the cryptopunkuint256 The ETH value to forward to the Cryptopunks contractLOOKS_RARE_1155‚Äãuint256 The ETH value to forward to the LooksRare contractbytes The calldata to use to call the LooksRare contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferOWNER_CHECK_721‚Äãaddress The required owner of the ERC721address The ERC721 token addressuint256 The ID of the ERC721OWNER_CHECK_1155‚Äãaddress The required owner of the ERC1155address The ERC721 token addressuint256 The ID of the ERC1155uint256 The minimum required amount of the ERC1155SWEEP_ERC721‚Äãaddress The ERC721 token address to transferaddress The recipient of the transferuint256 The token ID to transferX2Y2_721‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SUDOSWAP‚Äãuint256 The ETH value to forward to the Sudoswap contractbytes The calldata to use to call the Sudoswap contractNFT20‚Äãuint256 The ETH value to forward to the NFT20 contractbytes The calldata to use to call the NFT20 contractX2Y2_1155‚Äãuint256 The ETH value to forward to the X2Y2 contractbytes The calldata to use to call the X2Y2 contractaddress The recipient of the ERC1155address The ERC1155 token addressuint256 The ID of the ERC1155uint256 The amount of the ERC1155 to transferFOUNDATION‚Äãuint256 The ETH value to forward to the Foundation contractbytes The calldata to use to call the Foundation contractaddress The recipient of the ERC721address The ERC721 token addressuint256 The ID of the ERC721SWEEP_ERC1155‚Äãaddress The ERC1155 token address to sweepaddress The recipient of the sweepuint256 The token ID to sweepuint256 The minimum required tokens to receive from the sweepExample: Reverting Commands‚ÄãFor a Sudoswap command, that should be allowed to revert, the following 8 bit command should be provided:command = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)CopyTake care when working with reverting commands - ensure you have appended commands to deal with funds that could remain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP can be added to ensure that any ETH that was not spent does not get left in the router.Edit this pageHelpful?PreviousOverviewNextOverviewFunctionsCommand StructurefrcommandCommand InputsV3_SWAP_EXACT_INV3_SWAP_EXACT_OUTPERMIT2_TRANSFER_FROMPERMIT2_PERMIT_BATCHSWEEPTRANSFERPAY_PORTIONV2_SWAP_EXACT_INV2_SWAP_EXACT_OUTPERMIT2_PERMITWRAP_ETHUNWRAP_ETHPERMIT2_TRANSFER_FROM_BATCHSEAPORTLOOKS_RARE_721NFTXCRYPTOPUNKSLOOKS_RARE_1155OWNER_CHECK_721OWNER_CHECK_1155SWEEP_ERC721X2Y2_721SUDOSWAPNFT20X2Y2_1155FOUNDATIONSWEEP_ERC1155Example: Reverting CommandsDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
762,p.org contracts v2 reference smart contracts factory#address,"p.org contracts v2 reference smart contracts factory#address.    Factory | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsFactoryHelpful?On this pageFactoryCode‚ÄãUniswapV2Factory.solAddressUniswapV2Factory is deployed at 0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f on the Ethereum mainnet, and the Ropsten, Rinkeby, G√∂rli, and Kovan testnets. It was built from commit 8160750.EventsPairCreated‚Äãevent PairCreated(address indexed token0, address indexed token1, address pair, uint);CopyEmitted each time a pair is created via createPair.token0 is guaranteed to be strictly less than token1 by sort order.The final uint log value will be 1 for the first pair created, 2 for the second, etc. (see allPairs/getPair).Read-Only FunctionsgetPair‚Äãfunction getPair(address tokenA, address tokenB) external view returns (address pair);CopyReturns the address of the pair for tokenA and tokenB, if it has been created, else address(0) (0x0000000000000000000000000000000000000000).tokenA and tokenB are interchangeable.Pair addresses can also be calculated deterministically via the SDK.allPairs‚Äãfunction allPairs(uint) external view returns (address pair);CopyReturns the address of the nth pair (0-indexed) created through the factory, or address(0) (0x0000000000000000000000000000000000000000) if not enough pairs have been created yet.Pass 0 for the address of the first pair created, 1 for the second, etc.allPairsLength‚Äãfunction allPairsLength() external view returns (uint);CopyReturns the total number of pairs created through the factory so far.feeTo‚Äãfunction feeTo() external view returns (address);CopySee Protocol Charge Calculation.feeToSetter‚Äãfunction feeToSetter() external view returns (address);CopyThe address allowed to change feeTo.State-Changing FunctionscreatePair‚Äãfunction createPair(address tokenA, address tokenB) external returns (address pair);CopyCreates a pair for tokenA and tokenB if one doesn't exist already.tokenA and tokenB are interchangeable.Emits PairCreated.Interfaceimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol';Copypragma solidity >=0.5.0;interface IUniswapV2Factory { event PairCreated(address indexed token0, address indexed token1, address pair, uint); function getPair(address tokenA, address tokenB) external view returns (address pair); function allPairs(uint) external view returns (address pair); function allPairsLength() external view returns (uint); function feeTo() external view returns (address); function feeToSetter() external view returns (address); function createPair(address tokenA, address tokenB) external returns (address pair);}CopyABIimport IUniswapV2Factory from '@uniswap/v2-core/build/IUniswapV2Factory.json'Copyhttps://unpkg.com/@uniswap/v2-core@1.0.0/build/IUniswapV2Factory.jsonEdit this pageHelpful?PreviousGovernance ReferenceNextPairCodePairCreatedgetPairallPairsallPairsLengthfeeTofeeToSettercreatePairDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
763,p.org sdk v2 reference other exports,"p.org sdk v2 reference other exports.    Other Exports | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKOverviewGuidesSDK Quick startFetching DataPricingTradingPair AddressesTechnical ReferenceGetting StartedTokenPairRouteTradeFractionsFetcherOther ExportsV1 SDKüè†V2 SDKTechnical ReferenceOther ExportsHelpful?JSBIimport { JSBI } from '@uniswap/sdk'// import JSBI from 'jsbi'CopyThe default export from jsbi.BigintIshimport { BigintIsh } from '@uniswap/sdk'// type BigintIsh = JSBI | bigint | stringCopyA union type comprised of all types that can be cast to a JSBI instance.ChainIdimport { ChainId } from '@uniswap/sdk'// enum ChainId {// MAINNET = 1,// ROPSTEN = 3,// RINKEBY = 4,// G√ñRLI = 5,// KOVAN = 42// }CopyA enum denominating supported chain IDs.TradeTypeimport { TradeType } from '@uniswap/sdk'// enum TradeType {// EXACT_INPUT,// EXACT_OUTPUT// }CopyA enum denominating supported trade types.Roundingimport { Rounding } from '@uniswap/sdk'// enum Rounding {// ROUND_DOWN,// ROUND_HALF_UP,// ROUND_UP// }CopyA enum denominating supported rounding options.FACTORY_ADDRESSimport { FACTORY_ADDRESS } from '@uniswap/sdk'CopyThe factory address.INIT_CODE_HASHimport { INIT_CODE_HASH } from '@uniswap/sdk'CopySee pair addresses.MINIMUM_LIQUIDITYimport { MINIMUM_LIQUIDITY } from '@uniswap/sdk'CopySee minimum liquidity.InsufficientReservesErrorimport { InsufficientReservesError } from '@uniswap/sdk'CopyInsufficientInputAmountErrorimport { InsufficientInputAmountError } from '@uniswap/sdk'CopyWETHimport { WETH } from '@uniswap/sdk'CopyAn object whose values are WETH Token instances, indexed by ChainId.Helpful?PreviousFetcherNextOverviewDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
764,p.org contracts v3 guides flash integrations final contract,"p.org contracts v3 guides flash integrations final contract.    The Final Contract | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGetting StartedCalling FlashThe Flash CallbackThe Final ContractGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolGuidesImplement Flash SwapsThe Final ContractHelpful?On this pageThe Final ContractThe Full Contract‚Äã// SPDX-License-Identifier: GPL-2.0-or-laterpragma solidity =0.7.6;pragma abicoder v2;import '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3FlashCallback.sol';import '@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol';import '@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol';import '@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol';import '@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol';import '@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol';import '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';import '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';/// @title Flash contract implementation/// @notice An example contract using the Uniswap V3 flash functioncontract PairFlash is IUniswapV3FlashCallback, PeripheryImmutableState, PeripheryPayments { using LowGasSafeMath for uint256; using LowGasSafeMath for int256; ISwapRouter public immutable swapRouter; constructor(  ISwapRouter _swapRouter,  address _factory,  address _WETH9 ) PeripheryImmutableState(_factory, _WETH9) {  swapRouter = _swapRouter; } /// @param fee0 The fee from calling flash for token0 /// @param fee1 The fee from calling flash for token1 /// @param data The data needed in the callback passed as FlashCallbackData from `initFlash` /// @notice implements the callback called from flash /// @dev fails if the flash is not profitable, meaning the amountOut from the flash is less than the amount borrowed function uniswapV3FlashCallback(  uint256 fee0,  uint256 fee1,  bytes calldata data ) external override {  FlashCallbackData memory decoded = abi.decode(data, (FlashCallbackData));  CallbackValidation.verifyCallback(factory, decoded.poolKey);  address token0 = decoded.poolKey.token0;  address token1 = decoded.poolKey.token1;  TransferHelper.safeApprove(token0, address(swapRouter), decoded.amount0);  TransferHelper.safeApprove(token1, address(swapRouter), decoded.amount1);  // profitable check  // exactInputSingle will fail if this amount not met  uint256 amount1Min = LowGasSafeMath.add(decoded.amount1, fee1);  uint256 amount0Min = LowGasSafeMath.add(decoded.amount0, fee0);  // call exactInputSingle for swapping token1 for token0 in pool w/fee2  uint256 amountOut0 =   swapRouter.exactInputSingle(    ISwapRouter.ExactInputSingleParams({     tokenIn: token1,     tokenOut: token0,     fee: decoded.poolFee2,     recipient: address(this),     deadline: block.timestamp,     amountIn: decoded.amount1,     amountOutMinimum: amount0Min,     sqrtPriceLimitX96: 0    })   );  // call exactInputSingle for swapping token0 for token 1 in pool w/fee3  uint256 amountOut1 =   swapRouter.exactInputSingle(    ISwapRouter.ExactInputSingleParams({     tokenIn: token0,     tokenOut: token1,     fee: decoded.poolFee3,     recipient: address(this),     deadline: block.timestamp,     amountIn: decoded.amount0,     amountOutMinimum: amount1Min,     sqrtPriceLimitX96: 0    })   );  // end up with amountOut0 of token0 from first swap and amountOut1 of token1 from second swap  uint256 amount0Owed = LowGasSafeMath.add(decoded.amount0, fee0);  uint256 amount1Owed = LowGasSafeMath.add(decoded.amount1, fee1);  TransferHelper.safeApprove(token0, address(this), amount0Owed);  TransferHelper.safeApprove(token1, address(this), amount1Owed);  if (amount0Owed > 0) pay(token0, address(this), msg.sender, amount0Owed);  if (amount1Owed > 0) pay(token1, address(this), msg.sender, amount1Owed);  // if profitable pay profits to payer  if (amountOut0 > amount0Owed) {   uint256 profit0 = LowGasSafeMath.sub(amountOut0, amount0Owed);   TransferHelper.safeApprove(token0, address(this), profit0);   pay(token0, address(this), decoded.payer, profit0);  }  if (amountOut1 > amount1Owed) {   uint256 profit1 = LowGasSafeMath.sub(amountOut1, amount1Owed);   TransferHelper.safeApprove(token0, address(this), profit1);   pay(token1, address(this), decoded.payer, profit1);  } } //fee1 is the fee of the pool from the initial borrow //fee2 is the fee of the first pool to arb from //fee3 is the fee of the second pool to arb from struct FlashParams {  address token0;  address token1;  uint24 fee1;  uint256 amount0;  uint256 amount1;  uint24 fee2;  uint24 fee3; } // fee2 and fee3 are the two other fees associated with the two other pools of token0 and token1 struct FlashCallbackData {  uint256 amount0;  uint256 amount1;  address payer;  PoolAddress.PoolKey poolKey;  uint24 poolFee2;  uint24 poolFee3; } /// @param params The parameters necessary for flash and the callback, passed in as FlashParams /// @notice Calls the pools flash function with data needed in `uniswapV3FlashCallback` function initFlash(FlashParams memory params) external {  PoolAddress.PoolKey memory poolKey =   PoolAddress.PoolKey({token0: params.token0, token1: params.token1, fee: params.fee1});  IUniswapV3Pool pool = IUniswapV3Pool(PoolAddress.computeAddress(factory, poolKey));  // recipient of borrowed amounts  // amount of token0 requested to borrow  // amount of token1 requested to borrow  // need amount 0 and amount1 in callback to pay back pool  // recipient of flash should be THIS contract  pool.flash(   address(this),   params.amount0,   params.amount1,   abi.encode(    FlashCallbackData({     amount0: params.amount0,     amount1: params.amount1,     payer: msg.sender,     poolKey: poolKey,     poolFee2: params.fee2,     poolFee3: params.fee3    })   )  ); }}CopyEdit this pageHelpful?PreviousThe Flash CallbackNextLicense ModificationsThe Full ContractDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
765,p.org contracts v3 reference core libraries BitMath,"p.org contracts v3 reference core libraries BitMath.    BitMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesLibrariesBitMathFixedPoint128FixedPoint96FullMathLiquidityMathLowGasSafeMathOraclePositionSafeCastSecondsOutsideSqrtPriceMathSwapMathTickTickBitmapTickMathTransferHelperUnsafeMathGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreLibrariesBitMathHelpful?On this pageBitMathThis library provides functionality for computing bit properties of an unsigned integerFunctions‚ÄãmostSignificantBit‚Äã function mostSignificantBit( uint256 x ) internal pure returns (uint8 r)CopyReturns the index of the most significant bit of the number, where the least significant bit is at index 0 and the most significant bit is at index 255The function satisfies the property: x >= 2mostSignificantBit(x) and x < 2(mostSignificantBit(x)+1)Parameters:‚ÄãNameTypeDescriptionxuint256the value for which to compute the most significant bit, must be greater than 0Return Values:‚ÄãNameTypeDescriptionrunit8the index of the most significant bitleastSignificantBit‚Äã function leastSignificantBit( uint256 x ) internal pure returns (uint8 r)CopyReturns the index of the least significant bit of the number, where the least significant bit is at index 0 and the most significant bit is at index 255The function satisfies the property: (x & 2leastSignificantBit(x)) != 0 and (x & (2(leastSignificantBit(x)) - 1)) == 0)Parameters:‚ÄãNameTypeDescriptionxuint256the value for which to compute the least significant bit, must be greater than 0Return Values:‚ÄãNameTypeDescriptionrunit8the index of the least significant bitEdit this pageHelpful?PreviousIUniswapV3PoolStateNextFixedPoint128FunctionsmostSignificantBitleastSignificantBitDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
766,p.org contracts v3 reference periphery test TestCallbackValidation,p.org contracts v3 reference periphery test TestCallbackValidation.    TestCallbackValidation | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreGovernancePeripheryBaseInterfacesLensLibrariesStakerTestBase64TestLiquidityAmountsTestMockTimeNonfungiblePositionManagerMockTimeSwapRouterNFTDescriptorTestPathTestPeripheryImmutableStateTestPoolAddressTestSelfPermitTestTestCallbackValidationTestERC20TestERC20MetadataTestERC20PermitAllowedTestMulticallTestPositionNFTOwnerTestUniswapV3CalleeTickLensTestNonfungiblePositionManagerNonfungibleTokenPositionDescriptorSwapRouterV3MigratorDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferencePeripheryTestTestCallbackValidationHelpful?On this pageTestCallbackValidationFunctions‚ÄãverifyCallback‚Äã function verifyCallback( ) external returns (contract IUniswapV3Pool pool)CopyEdit this pageHelpful?PreviousSelfPermitTestNextTestERC20FunctionsverifyCallbackDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
767,p.org contracts v2 concepts protocol overview smart contracts,"p.org contracts v2 concepts protocol overview smart contracts.    Smart contracts | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewHow Uniswap worksEcosystem ParticipantsSmart contractsGlossaryCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsV1 Protocolüè†V2 ProtocolConceptsProtocol OverviewSmart contractsHelpful?On this pageSmart contractsUniswap V2 is a binary smart contract system. Core contracts provide fundamental safety guarantees for all parties interacting with Uniswap. Periphery contracts interact with one or more core contracts but are not themselves part of the core.CoreSource codeThe core consists of a singleton factory and many pairs, which the factory is responsible for creating and indexing. These contracts are quite minimal, even brutalist. The simple rationale for this is that contracts with a smaller surface area are easier to reason about, less bug-prone, and more functionally elegant. Perhaps the biggest upside of this design is that many desired properties of the system can be asserted directly in the code, leaving little room for error. One downside, however, is that core contracts are somewhat user-unfriendly. In fact, interacting directly with these contracts is not recommended for most use cases. Instead, a periphery contract should be used.Factory‚ÄãReference documentationThe factory holds the generic bytecode responsible for powering pairs. Its primary job is to create one and only one smart contract per unique token pair. It also contains logic to turn on the protocol charge.Pairs‚ÄãReference documentationReference documentation (ERC-20)Pairs have two primary purposes: serving as automated market makers and keeping track of pool token balances. They also expose data which can be used to build decentralized¬†price oracles.PeripherySource codeThe periphery is a constellation of smart contracts designed to support domain-specific interactions with the core. Because of Uniswap's permissionless nature, the contracts described below have no special privileges, and are in fact only a small subset of the universe of possible periphery-like contracts. However, they are useful examples of how to safely and efficiently interact with Uniswap V2.Library‚ÄãReference documentationThe library provides a variety of convenience functions for fetching data and pricing.Router‚ÄãReference documentationThe router, which uses the library, fully supports all the basic requirements of a front-end offering trading and liquidity management functionality. Notably, it natively supports multi-pair trades (e.g. x to y to z), treats ETH as a first-class citizen, and offers meta-transactions for removing liquidity.Design DecisionsThe following sections describe some of the notable design decisions made in Uniswap V2. These are safe to skip unless you're interested in gaining a deep technical understanding of how V2 works under the hood, or writing smart contract integrations!Sending Tokens‚ÄãTypically, smart contracts which need tokens to perform some functionality require would-be interactors to first make an approval on the token contract, then call a function that in turn calls transferFrom on the token contract. This is not how V2 pairs accept tokens. Instead, pairs check their token balances at the end of every interaction. Then, at the beginning of the next interaction, current balances are differenced against the stored values to determine the amount of tokens that were sent by the current interactor. See the whitepaper for a justification of why this is the case, but the takeaway is that tokens must be transferred to the pair before calling any token-requiring method (the one exception to this rule is Flash Swaps.WETH‚ÄãUnlike Uniswap V1 pools, V2 pairs do not support ETH directly, so ETH‚áÑERC-20 pairs must be emulated with WETH. The motivation behind this choice was to remove ETH-specific code in the core, resulting in a leaner codebase. End users can be kept fully ignorant of this implementation detail, however, by simply wrapping/unwrapping ETH in the periphery.The router fully supports interacting with any WETH pair via ETH.Minimum Liquidity‚ÄãTo ameliorate rounding errors and increase the theoretical minimum tick size for liquidity provision, pairs burn the first MINIMUM_LIQUIDITY pool tokens. For the vast majority of pairs, this will represent a trivial value. The burning happens automatically during the first liquidity provision, after which point the totalSupply is forevermore bounded.Edit this pageHelpful?PreviousEcosystem ParticipantsNextGlossaryFactoryPairsLibraryRouterSending TokensWETHMinimum LiquidityDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
768,p.org contracts v2 reference smart contracts pair#mint 1,"p.org contracts v2 reference smart contracts pair#mint 1.    Pair | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceUniversal RouterPermit2V2 ProtocolOverviewConceptsProtocol OverviewCore ConceptsAdvanced TopicsGuidesInterface IntegrationSmart Contract IntegrationTechnical ReferenceAPIGovernanceSmart ContractsFactoryPairPair (ERC-20)LibraryRouter01Router02Common ErrorsV1 Protocolüè†V2 ProtocolTechnical ReferenceSmart ContractsPairHelpful?On this pagePairThis documentation covers Uniswap-specific functionality. For ERC-20 functionality, see Pair (ERC-20).CodeUniswapV2Pair.solAddressSee Pair Addresses.EventsMint‚Äãevent Mint(address indexed sender, uint amount0, uint amount1);CopyEmitted each time liquidity tokens are created via mint.Burn‚Äãevent Burn(address indexed sender, uint amount0, uint amount1, address indexed to);CopyEmitted each time liquidity tokens are destroyed via burn.Swap‚Äãevent Swap( address indexed sender, uint amount0In, uint amount1In, uint amount0Out, uint amount1Out, address indexed to);CopyEmitted each time a swap occurs via swap.Sync‚Äãevent Sync(uint112 reserve0, uint112 reserve1);CopyEmitted each time reserves are updated via mint, burn, swap, or sync.Read-Only FunctionsMINIMUM_LIQUIDITY‚Äãfunction MINIMUM_LIQUIDITY() external pure returns (uint);CopyReturns 1000 for all pairs. See Minimum Liquidity.factory‚Äãfunction factory() external view returns (address);CopyReturns the factory address.token0‚Äãfunction token0() external view returns (address);CopyReturns the address of the pair token with the lower sort order.token1‚Äãfunction token1() external view returns (address);CopyReturns the address of the pair token with the higher sort order.getReserves‚Äãfunction getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);CopyReturns the reserves of token0 and token1 used to price trades and distribute liquidity. See Pricing. Also returns the block.timestamp (mod 2**32) of the last block during which an interaction occured for the pair.price0CumulativeLast‚Äãfunction price0CumulativeLast() external view returns (uint);CopySee Oracles.price1CumulativeLast‚Äãfunction price1CumulativeLast() external view returns (uint);CopySee Oracles.kLast‚Äãfunction kLast() external view returns (uint);CopyReturns the product of the reserves as of the most recent liquidity event. See Protocol Charge Calculation.State-Changing Functionsmint‚Äãfunction mint(address to) external returns (uint liquidity);CopyCreates pool tokens.Emits Mint, Sync, Transfer.burn‚Äãfunction burn(address to) external returns (uint amount0, uint amount1);CopyDestroys pool tokens.Emits Burn, Sync, Transfer.swap‚Äãfunction swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;CopySwaps tokens. For regular swaps, data.length must be 0. Also see Flash Swaps.Emits Swap, Sync.skim‚Äãfunction skim(address to) external;CopySee the whitepaper.sync‚Äãfunction sync() external;CopySee the whitepaper.Emits Sync.Interfaceimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol';Copypragma solidity >=0.5.0;interface IUniswapV2Pair { event Approval(address indexed owner, address indexed spender, uint value); event Transfer(address indexed from, address indexed to, uint value); function name() external pure returns (string memory); function symbol() external pure returns (string memory); function decimals() external pure returns (uint8); function totalSupply() external view returns (uint); function balanceOf(address owner) external view returns (uint); function allowance(address owner, address spender) external view returns (uint); function approve(address spender, uint value) external returns (bool); function transfer(address to, uint value) external returns (bool); function transferFrom(address from, address to, uint value) external returns (bool); function DOMAIN_SEPARATOR() external view returns (bytes32); function PERMIT_TYPEHASH() external pure returns (bytes32); function nonces(address owner) external view returns (uint); function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external; event Mint(address indexed sender, uint amount0, uint amount1); event Burn(address indexed sender, uint amount0, uint amount1, address indexed to); event Swap(  address indexed sender,  uint amount0In,  uint amount1In,  uint amount0Out,  uint amount1Out,  address indexed to ); event Sync(uint112 reserve0, uint112 reserve1); function MINIMUM_LIQUIDITY() external pure returns (uint); function factory() external view returns (address); function token0() external view returns (address); function token1() external view returns (address); function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast); function price0CumulativeLast() external view returns (uint); function price1CumulativeLast() external view returns (uint); function kLast() external view returns (uint); function mint(address to) external returns (uint liquidity); function burn(address to) external returns (uint amount0, uint amount1); function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external; function skim(address to) external; function sync() external;}CopyABIimport IUniswapV2Pair from '@uniswap/v2-core/build/IUniswapV2Pair.json'Copyhttps://unpkg.com/@uniswap/v2-core@1.0.0/build/IUniswapV2Pair.jsonEdit this pageHelpful?PreviousFactoryNextPair (ERC-20)MintBurnSwapSyncMINIMUM_LIQUIDITYfactorytoken0token1getReservesprice0CumulativeLastprice1CumulativeLastkLastmintburnswapskimsyncDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
769,p.org sdk v3 reference classes Multicall#encodemulticall,p.org sdk v3 reference classes Multicall#encodemulticall.    Multicall | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesMulticallHelpful?On this pageMulticall@uniswap/v3-sdk / Exports / MulticallClass: MulticallTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãINTERFACEMethods‚ÄãencodeMulticallConstructors‚Äãconstructor‚Äã‚Ä¢ Private new Multicall()Cannot be constructed.Defined in‚Äãmulticall.ts:10Properties‚ÄãINTERFACE‚Äã‚ñ™ Static INTERFACE: InterfaceDefined in‚Äãmulticall.ts:5Methods‚ÄãencodeMulticall‚Äã‚ñ∏ Static encodeMulticall(calldatas): stringParameters‚ÄãNameTypecalldatasstring | string[]Returns‚ÄãstringDefined in‚Äãmulticall.ts:12Helpful?PreviousLiquidityMathNextNoTickDataProviderTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesINTERFACEMethodsencodeMulticallDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog 
770,p.org sdk v3 reference classes TickMath#gettickatsqrtratio,"p.org sdk v3 reference classes TickMath#gettickatsqrtratio.    TickMath | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesFullMathLiquidityMathMulticallNoTickDataProviderNonfungiblePositionManagerPaymentsPoolPositionPositionLibraryRouteSelfPermitSqrtPriceMathStakerSwapMathSwapQuoterSwapRouterTickTickLibraryTickListTickListDataProviderTickMathTradeenumsinterfacesSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceclassesTickMathHelpful?On this pageTickMath@uniswap/v3-sdk / Exports / TickMathClass: TickMathTable of contents‚ÄãConstructors‚ÄãconstructorProperties‚ÄãMAX_SQRT_RATIOMAX_TICKMIN_SQRT_RATIOMIN_TICKMethods‚ÄãgetSqrtRatioAtTickgetTickAtSqrtRatioConstructors‚Äãconstructor‚Äã‚Ä¢ Private new TickMath()Cannot be constructed.Defined in‚Äãutils/tickMath.ts:17Properties‚ÄãMAX_SQRT_RATIO‚Äã‚ñ™ Static MAX_SQRT_RATIO: defaultThe sqrt ratio corresponding to the maximum tick that could be used on any pool.Defined in‚Äãutils/tickMath.ts:35MAX_TICK‚Äã‚ñ™ Static MAX_TICK: number = -TickMath.MIN_TICKThe maximum tick that can be used on any pool.Defined in‚Äãutils/tickMath.ts:26MIN_SQRT_RATIO‚Äã‚ñ™ Static MIN_SQRT_RATIO: defaultThe sqrt ratio corresponding to the minimum tick that could be used on any pool.Defined in‚Äãutils/tickMath.ts:31MIN_TICK‚Äã‚ñ™ Static MIN_TICK: number = -887272The minimum tick that can be used on any pool.Defined in‚Äãutils/tickMath.ts:22Methods‚ÄãgetSqrtRatioAtTick‚Äã‚ñ∏ Static getSqrtRatioAtTick(tick): defaultReturns the sqrt ratio as a Q64.96 for the given tick. The sqrt ratio is computed as sqrt(1.0001)^tickParameters‚ÄãNameTypeDescriptionticknumberthe tick for which to compute the sqrt ratioReturns‚ÄãdefaultDefined in‚Äãutils/tickMath.ts:41getTickAtSqrtRatio‚Äã‚ñ∏ Static getTickAtSqrtRatio(sqrtRatioX96): numberReturns the tick corresponding to a given sqrt ratio, s.t. #getSqrtRatioAtTick(tick) <= sqrtRatioX96 and #getSqrtRatioAtTick(tick + 1) > sqrtRatioX96Parameters‚ÄãNameTypeDescriptionsqrtRatioX96defaultthe sqrt ratio as a Q64.96 for which to compute the tickReturns‚ÄãnumberDefined in‚Äãutils/tickMath.ts:82Helpful?PreviousTickListDataProviderNextTradeTable of contentsConstructorsPropertiesMethodsConstructorsconstructorPropertiesMAX_SQRT_RATIOMAX_TICKMIN_SQRT_RATIOMIN_TICKMethodsgetSqrtRatioAtTickgetTickAtSqrtRatioDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
771,p.org contracts v3 reference core UniswapV3Pool,"p.org contracts v3 reference core UniswapV3Pool.    UniswapV3Pool | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 ProtocolOverviewGuidesSet Up Your Local EnvironmentImplement A SwapProviding LiquidityLiquidity MiningImplement Flash SwapsGovernance ProposalsTechnical ReferenceOverviewCoreUniswapV3FactoryUniswapV3PoolUniswapV3PoolDeployerInterfacesLibrariesGovernancePeripheryDeployment AddressesError CodesUniversal RouterPermit2V2 ProtocolV1 Protocolüè†V3 ProtocolTechnical ReferenceCoreUniswapV3PoolHelpful?On this pageUniswapV3PoolFunctions‚Äã_blockTimestamp‚Äã function _blockTimestamp( ) internal view virtual returns (uint32)CopyReturns the block timestamp truncated to 32 bits, i.e. mod 2**32. This method is overridden in tests.snapshotCumulativesInside‚Äã function snapshotCumulativesInside( int24 tickLower, int24 tickUpper ) external view override noDelegateCall returns (int56 tickCumulativeInside, uint160 secondsPerLiquidityInsideX128, uint32 secondsInside)CopyReturns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick rangeSnapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.Parameters:‚ÄãNameTypeDescriptiontickLowerint24The lower tick of the rangetickUpperint24The upper tick of the rangeReturn Values:‚ÄãNameTypeDescriptiontickCumulativeInsideint56The snapshot of the tick accumulator for the rangesecondsPerLiquidityInsideX128uint160The snapshot of seconds per liquidity for the rangesecondsInsideuint32The snapshot of seconds per liquidity for the rangeobserve‚Äã function observe( uint32[] secondsAgos ) external view override noDelegateCall returns (int56[] tickCumulatives, uint160[] secondsPerLiquidityCumulativeX128s)CopyReturns the cumulative tick and liquidity as of each timestamp secondsAgo from the current block timestampTo get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0]. The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.Parameters:‚ÄãNameTypeDescriptionsecondsAgosuint32[]From how long ago each cumulative tick and liquidity value should be returnedReturn Values:‚ÄãNameTypeDescriptiontickCumulativesint56[]Cumulative tick values as of each secondsAgos from the current block timestampsecondsPerLiquidityCumulativeX128suint160[]Cumulative seconds per liquidity-in-range value as of each secondsAgos from the current blocktimestampincreaseObservationCardinalityNext‚Äã function increaseObservationCardinalityNext( uint16 observationCardinalityNext ) external override lock noDelegateCallCopyIncrease the maximum number of price and liquidity observations that this pool will storeThis method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.Parameters:‚ÄãNameTypeDescriptionobservationCardinalityNextuint16The desired minimum number of observations for the pool to storeinitialize‚Äã function initialize( uint160 sqrtPriceX96 ) external overrideCopySets the initial price for the poolnot locked because it initializes unlockedParameters:‚ÄãNameTypeDescriptionsqrtPriceX96uint160the initial sqrt price of the pool as a Q64.96mint‚Äã function mint( address recipient, int24 tickLower, int24 tickUpper, uint128 amount, bytes data ) external override lock returns (uint256 amount0, uint256 amount1)CopyAdds liquidity for the given recipient/tickLower/tickUpper positionnoDelegateCall is applied indirectly via _modifyPositionParameters:‚ÄãNameTypeDescriptionrecipientaddressThe address for which the liquidity will be createdtickLowerint24The lower tick of the position in which to add liquiditytickUpperint24The upper tick of the position in which to add liquidityamountuint128The amount of liquidity to mintdatabytesAny data that should be passed through to the callbackReturn Values:‚ÄãNameTypeDescriptionamount0uint256The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callbackamount1uint256The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callbackcollect‚Äã function collect( address recipient, int24 tickLower, int24 tickUpper, uint128 amount0Requested, uint128 amount1Requested ) external override lock returns (uint128 amount0, uint128 amount1)CopyCollects tokens owed to a positionDoes not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.Parameters:‚ÄãNameTypeDescriptionrecipientaddressThe address which should receive the fees collectedtickLowerint24The lower tick of the position for which to collect feestickUpperint24The upper tick of the position for which to collect feesamount0Requesteduint128How much token0 should be withdrawn from the fees owedamount1Requesteduint128How much token1 should be withdrawn from the fees owedReturn Values:‚ÄãNameTypeDescriptionamount0uint128The amount of fees collected in token0amount1uint128The amount of fees collected in token1burn‚Äã function burn( int24 tickLower, int24 tickUpper, uint128 amount ) external override lock returns (uint256 amount0, uint256 amount1)CopyBurn liquidity from the sender and account tokens owed for the liquidity to the positionnoDelegateCall is applied indirectly via _modifyPositionParameters:‚ÄãNameTypeDescriptiontickLowerint24The lower tick of the position for which to burn liquiditytickUpperint24The upper tick of the position for which to burn liquidityamountuint128How much liquidity to burnReturn Values:‚ÄãNameTypeDescriptionamount0uint256The amount of token0 sent to the recipientamount1uint256The amount of token1 sent to the recipientswap‚Äã function swap( address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data ) external override noDelegateCall returns (int256 amount0, int256 amount1)CopySwap token0 for token1, or token1 for token0The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallbackParameters:‚ÄãNameTypeDescriptionrecipientaddressThe address to receive the output of the swapzeroForOneboolThe direction of the swap, true for token0 to token1, false for token1 to token0amountSpecifiedint256The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)sqrtPriceLimitX96uint160The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swapdatabytesAny data to be passed through to the callbackReturn Values:‚ÄãNameTypeDescriptionamount0int256The delta of the balance of token0 of the pool, exact when negative, minimum when positiveamount1int256The delta of the balance of token1 of the pool, exact when negative, minimum when positiveflash‚Äã function flash( address recipient, uint256 amount0, uint256 amount1, bytes data ) external override lock noDelegateCallCopyReceive token0 and/or token1 and pay it back, plus a fee, in the callbackThe caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callbackParameters:‚ÄãNameTypeDescriptionrecipientaddressThe address which will receive the token0 and token1 amountsamount0uint256The amount of token0 to sendamount1uint256The amount of token1 to senddatabytesAny data to be passed through to the callbacksetFeeProtocol‚Äã function setFeeProtocol( uint8 feeProtocol0, uint8 feeProtocol1 ) external override lock onlyFactoryOwnerCopySet the denominator of the protocol's % share of the feesParameters:‚ÄãNameTypeDescriptionfeeProtocol0uint8new protocol fee for token0 of the poolfeeProtocol1uint8new protocol fee for token1 of the poolcollectProtocol‚Äã function collectProtocol( address recipient, uint128 amount0Requested, uint128 amount1Requested ) external override lock onlyFactoryOwner returns (uint128 amount0, uint128 amount1)CopyCollect the protocol fee accrued to the poolParameters:‚ÄãNameTypeDescriptionrecipientaddressThe address to which collected protocol fees should be sentamount0Requesteduint128The maximum amount of token0 to send, can be 0 to collect fees in only token1amount1Requesteduint128The maximum amount of token1 to send, can be 0 to collect fees in only token0Return Values:‚ÄãNameTypeDescriptionamount0uint128The protocol fee collected in token0amount1uint128The protocol fee collected in token1Edit this pageHelpful?PreviousUniswapV3FactoryNextUniswapV3PoolDeployerFunctions_blockTimestampsnapshotCumulativesInsideobserveincreaseObservationCardinalityNextinitializemintcollectburnswapflashsetFeeProtocolcollectProtocolDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
772,p.org sdk v3 guides liquidity swap and add,"p.org sdk v3 guides liquidity swap and add.    Swapping and Adding Liquidity | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityMinting a PositionAdding & Removing LiquidityCollecting FeesSwapping and Adding LiquidityTechnical ReferenceSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKGuidesPooling LiquiditySwapping and Adding LiquidityHelpful?On this pageSwapping and Adding LiquidityIntroduction‚ÄãThis guide will cover how to execute a swap-and-add operation in a single atomic transaction. It is based on the swap-and-add example, found in the Uniswap code examples repository. To run this example, check out the examples's README and follow the setup instructions.infoIf you need a briefer on the SDK and to learn more about how these guides connect to the examples repository, please visit our background page!When adding liquidity to a Uniswap v3 pool, you must provide two assets in a particular ratio. In many cases, your contract or the user's wallet hold a different ratio of those two assets. In order to deposit 100% of your assets, you must first swap your assets to the optimal ratio and then add liquidity.However, the swap may shift the balance of the pool and thus change the optimal ratio. To avoid that, we can execute this swap-and-add liquidity operation in an atomic fashion, using a router. The inputs to our guide are the two tokens that we are pooling for, the amount of each token we are pooling for, the amount of each token to swap-and-add, and the Pool fee.The guide will cover:Setup a router instanceConfiguring our ratio calculationCalculating our currency ratioConstructing and executing our swap-and-add transactionAt the end of the guide, given the inputs above, we should be able swap-and-add liquidity using 100% of the input assets with the press of a button and see the change reflected in our position and the balance of our tokens.For this guide, the following Uniswap packages are used:@uniswap/v3-sdk@uniswap/sdk-core@uniswap/smart-order-routerThe core code of this guide can be found in swapAndAddLiquidity().noteThis guide assumes you are familiar with our Minting a Position guide. A minted position is required to add or remove liquidity from, so the buttons will be disabled until a position is minted.Also note that we do not need to give approval to the NonfungiblePositionManager to transfer our tokens as we will have already done that when minting our position.Setup a router instance‚ÄãThe first step is to approve the SwapRouter smart contract to spend our tokens for us in order for us to add liquidity to our position:Approve SwapRouter to spend our tokensloading...CopyView on GithubThe we can setup our router, the AlphaRouter, which is part of the smart-order-router package. The router requires a chainId and a provider to be initialized. Note that routing is not supported for local forks, so we will use a mainnet provider even when swapping on a local fork:Creating a router instanceloading...CopyView on GithubFor a more detailed example, check out our routing guide.Configuring our ratio calculation‚ÄãHaving created the router, we now need to construct the parameters required to make a call to its routeToRatio function, which will ensure the ratio of currency used matches the pool's required ratio to add our total liquidity. This will require the following parameters:The first two parameters are the currency amounts we use as input to the routeToRatio algorithm:Constructing the two CurrencyAmountsloading...CopyView on GithubNext, we will create a placeholder position with a liquidity of 1 since liquidity is still unknown and will be set inside the call to routeToRatio:Constructing the position objectloading...CopyView on GithubWe then need to create an instance of SwapAndAddConfig which will set additional configuration parameters for the routeToRatio algorithm:ratioErrorTolerance determines the margin of error the resulting ratio can have from the optimal ratio.maxIterations determines the maximum times the algorithm will iterate to find a ratio within error tolerance. If max iterations is exceeded, an error is returned. The benefit of running the algorithm more times is that we have more chances to find a route, but more iterations will longer to execute. We've used a default of 6 in our example.Constructing SwapAndAddConfigloading...CopyView on GithubFinally, we will create an instance of SwapAndAddOptions to configure which position we are adding liquidity to and our defined swapping parameters in two different objects:swapConfig configures the recipient of leftover dust from swap, slippageTolerance and a deadline for the swap.addLiquidityOptions must contain a tokenId to add to an existing positionConstructing SwapAndAddOptionsloading...CopyView on GithubCalculating our currency ratio‚ÄãHaving constructed all the parameters we need to call routeToRatio, we can now make the call to the function:Making the call to routeToRatioloading...CopyView on GithubThe return type of the function call is SwapToRatioResponse. If a route was found successfully, this object will have two fields: the status (success) and the SwapToRatioRoute object. We check to make sure that both of those conditions hold true before we construct and submit the transaction:Checking that a route was foundloading...CopyView on GithubIn case a route was not found, we return from the function a Failed state for the transaction.Constructing and executing our swap-and-add transaction‚ÄãAfter making sure that a route was successfully found, we can now construct and send the transaction. The response (SwapToRatioRoute) will have the properties we need to construct our transaction object:Constructing and sending the transactionloading...CopyView on GithubIf the transaction was successful, our swap-and-add will be completed! We should see our input token balances decrease and our position balance should be increased accordingly.Helpful?PreviousCollecting FeesNextOverviewIntroductionSetup a router instanceConfiguring our ratio calculationCalculating our currency ratioConstructing and executing our swap-and-add transactionDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
773,p.org sdk core reference modules.md#computepriceimpact,p.org sdk core reference modules.md#computepriceimpact. 
774,p.org sdk v3 reference interfaces RemoveLiquidityOptions#slippagetolerance,"p.org sdk v3 reference interfaces RemoveLiquidityOptions#slippagetolerance.    RemoveLiquidityOptions | Uniswap  Skip to main contentUniswap DocsConceptsContractsSDKsAPIsGive FeedbackWhitepaperGitHubGrantsSearchV3 SDKOverviewGuidesBackgroundGetting a QuoteExecuting a TradeRouting a SwapPooling LiquidityTechnical ReferenceOverviewclassesenumsinterfacesAllowedPermitArgumentsBestTradeOptionsClaimOptionsCollectOptionsCommonAddLiquidityOptionsFeeOptionsIncentiveKeyIncreaseSpecificOptionsMethodParametersMintSpecificOptionsNFTPermitOptionsQuoteOptionsRemoveLiquidityOptionsSafeTransferOptionsStandardPermitArgumentsSwapOptionsTickConstructorArgsTickDataProviderWithdrawOptionsSwap Widgetweb3-reactCore SDKV2 SDKV1 SDKüè†V3 SDKTechnical ReferenceinterfacesRemoveLiquidityOptionsHelpful?On this pageRemoveLiquidityOptions@uniswap/v3-sdk / Exports / RemoveLiquidityOptionsInterface: RemoveLiquidityOptionsOptions for producing the calldata to exit a position.Table of contents‚ÄãProperties‚ÄãburnTokencollectOptionsdeadlineliquidityPercentagepermitslippageTolerancetokenIdProperties‚ÄãburnToken‚Äã‚Ä¢ Optional burnToken: booleanWhether the NFT should be burned if the entire position is being exited, by default false.Defined in‚ÄãnonfungiblePositionManager.ts:162collectOptions‚Äã‚Ä¢ collectOptions: Omit<CollectOptions, ""tokenId"">Parameters to be passed on to collectDefined in‚ÄãnonfungiblePositionManager.ts:172deadline‚Äã‚Ä¢ deadline: BigintIshWhen the transaction expires, in epoch seconds.Defined in‚ÄãnonfungiblePositionManager.ts:157liquidityPercentage‚Äã‚Ä¢ liquidityPercentage: PercentThe percentage of position liquidity to exit.Defined in‚ÄãnonfungiblePositionManager.ts:147permit‚Äã‚Ä¢ Optional permit: NFTPermitOptionsThe optional permit of the token ID being exited, in case the exit transaction is being sent by an account that does not own the NFTDefined in‚ÄãnonfungiblePositionManager.ts:167slippageTolerance‚Äã‚Ä¢ slippageTolerance: PercentHow much the pool price is allowed to move.Defined in‚ÄãnonfungiblePositionManager.ts:152tokenId‚Äã‚Ä¢ tokenId: BigintIshThe ID of the token to exitDefined in‚ÄãnonfungiblePositionManager.ts:142Helpful?PreviousQuoteOptionsNextSafeTransferOptionsTable of contentsPropertiesPropertiesburnTokencollectOptionsdeadlineliquidityPercentagepermitslippageTolerancetokenIdDevelopersFeedbackBug Bounty#dev-chatWhitepaperGithubuniswap-v3-coreuniswap-v3-sdkuniswap-v3-peripheryDeployment addressesEcosystemHomeAppAnalyticsToken ListsBrand AssetsCommunityGovernanceDiscordTwitterBlog "
775,p.org contracts v2 reference smart contracts pair erc 20#name,p.org contracts v2 reference smart contracts pair erc 20#name. 
